[
   {
      "author_association" : "MEMBER",
      "body" : "fixed bug(was pushing to verbose list of transactions)\r\n\r\nlooking at another racey looking failure:\r\n```\r\n    assert_equal((payment_txid_2, \"A\", seq_num), seq.receive_sequence())\r\n  File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-arm-linux-gnueabihf/test/functional/test_framework/util.py\", line 49, in assert_equal\r\n    raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\r\nAssertionError: not(('1ac086d8f16212a6bab2bceee95742ff09e9477928c2e09e931a57c382d7b09b', 'A', 4) == ('1ac086d8f16212a6bab2bceee95742ff09e9477928c2e09e931a57c382d7b09b', 'A', 5))\r\n```\r\nedit: Pushed fix(I hope) for that.",
      "created_at" : "2020-07-23T15:57:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-663088680",
      "id" : 663088680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzA4ODY4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-23T18:30:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663088680",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19967 (test: Replace (dis)?connect_nodes globals with TestFramework methods by robot-dreams)\n* #19652 (Avoid locking CTxMemPool::cs recursively in Mempool{Info}ToJSON() by hebasto)\n* #19532 (test: Mypy next steps by Ghorbanian)\n* #18531 (rpc: Assert that RPCArg names are equal to CRPCCommand ones by MarcoFalke)\n* #18309 (zmq: Add support to listen on multiple interfaces by n-thumann)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-07-23T16:57:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-663119211",
      "id" : 663119211,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzExOTIxMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-22T21:52:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663119211",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r459761022"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459761022"
         }
      },
      "author_association" : "MEMBER",
      "body" : "951507c4d1152ceab2a930fb16fdac05504f0056\r\n\r\noops ð good catch.",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-07-23T22:23:00Z",
      "diff_hunk" : "@@ -147,8 +147,8 @@ def test_reorg(self):\n         self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n         assert_equal(self.nodes[0].getbestblockhash(), hashblock.receive().hex())\n \n-        # Generate 2 blocks in nodes[1]\n-        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_UNSPENDABLE)\n+        # Generate 2 blocks in nodes[1] to a different address to ensure split\n+        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_P2WSH_OP_TRUE)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r459761022",
      "id" : 459761022,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MTAyMg==",
      "original_commit_id" : "951507c4d1152ceab2a930fb16fdac05504f0056",
      "original_line" : 170,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 454535546,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459761022",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r459763375"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459763375"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`EXCLUSIVE_LOCKS_REQUIRED(cs)` instead?",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-07-23T22:29:18Z",
      "diff_hunk" : "@@ -725,6 +731,17 @@ class CTxMemPool\n         return (m_unbroadcast_txids.count(txid) != 0);\n     }\n \n+    /** Guards this internal counter for external reporting */\n+    uint32_t GetAndIncrementSequence() const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r459763375",
      "id" : 459763375,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc2MzM3NQ==",
      "original_commit_id" : "dc413fbd8d79199f3c0725395ee2512b8211d6de",
      "original_line" : 735,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 454535546,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459763375",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "From conversations with people who use the notifications already they\nseemed more keen to a solution like this that doesn't require long polling\nsupport. Also it makes wumpus less upset to just improve a current\nnotification system ð¤¯\n\nThat's said they're not necessarily in competition.\n\nOn Thu, Jul 23, 2020, 6:37 PM JoÃ£o Barbosa <notifications@github.com> wrote:\n\n> *@promag* commented on this pull request.\n>\n> I still think #19476 <https://github.com/bitcoin/bitcoin/pull/19476>\n> makes life easier for the client in regards to fault tolerance and\n> simplicity. With this PR, the client still has to bake its state from RPC\n> and ZMQ.\n>\n> I think you could extract CValidationInterface changes to a different PR.\n> ------------------------------\n>\n> In test/functional/interface_zmq.py\n> <https://github.com/bitcoin/bitcoin/pull/19572#discussion_r459761022>:\n>\n> > @@ -147,8 +147,8 @@ def test_reorg(self):\n>\n>          self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n>\n>          assert_equal(self.nodes[0].getbestblockhash(), hashblock.receive().hex())\n>\n>\n>\n> -        # Generate 2 blocks in nodes[1]\n>\n> -        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_UNSPENDABLE)\n>\n> +        # Generate 2 blocks in nodes[1] to a different address to ensure split\n>\n> +        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_P2WSH_OP_TRUE)\n>\n>\n> 951507c\n> <https://github.com/bitcoin/bitcoin/commit/951507c4d1152ceab2a930fb16fdac05504f0056>\n>\n> oops ð good catch.\n> ------------------------------\n>\n> In src/txmempool.h\n> <https://github.com/bitcoin/bitcoin/pull/19572#discussion_r459763375>:\n>\n> > @@ -725,6 +731,17 @@ class CTxMemPool\n>\n>          return (m_unbroadcast_txids.count(txid) != 0);\n>\n>      }\n>\n>\n>\n> +    /** Guards this internal counter for external reporting */\n>\n> +    uint32_t GetAndIncrementSequence() const {\n>\n>\n> EXCLUSIVE_LOCKS_REQUIRED(cs) instead?\n>\n> â\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/19572#pullrequestreview-454535546>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABMAFU6BN2AS2HWUGITFY7LR5C3UFANCNFSM4PF2HZKQ>\n> .\n>\n",
      "created_at" : "2020-07-23T22:57:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-663271486",
      "id" : 663271486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzI3MTQ4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-23T22:57:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663271486",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> That's said they're not necessarily in competition.\r\n\r\nI wasn't suggesting otherwise ð ",
      "created_at" : "2020-07-26T10:53:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-663972915",
      "id" : 663972915,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2Mzk3MjkxNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-26T10:53:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663972915",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-07-27T07:50:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-664180551",
      "id" : 664180551,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDE4MDU1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T07:50:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664180551",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm running some extensive testing of this PR against testnet and mainnet nodes, tracking expected mempool for a couple weeks using a modified test harness. Once I'm satisfied I'll be updating the test for this PR with the updated logic(if any) and maybe the consumer tool itself.",
      "created_at" : "2020-07-27T12:52:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-664377316",
      "id" : 664377316,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDM3NzMxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T12:52:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664377316",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "added test showing conflicted tx from block announcement(\"R\" shows up before \"C\")",
      "created_at" : "2020-07-27T15:14:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-664457841",
      "id" : 664457841,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDQ1Nzg0MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T15:14:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664457841",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Was able to replicate a seeming gap in mempool_sequence values being reported. Pushed a possibly controversial fix(touching mempool logic) showing that it fixes the test case written.\r\n\r\nWhile that is a *very* minimal change I can understand it might rub people the wrong way.\r\n\r\nThe alternatives are:\r\n0) Ignore the gaps(print a warning when you see a gap maybe), it doesn't seem to meaningfully interact with using the features as-is. Consumer will be tracking zmq sequence value, and any `getrawmempool` results will report an \"expected\" value.\r\n1) \"Just\" account for these gaps. When hitting an \"R\" mempool_sequence gap, sum up those gaps, then make sure that value + the number of found mempool transactions being removed normally equals the mempool_sequence reported in the next mempool report.\r\n2) Add another removal reporting hook which just announces all txhashes being removed.\r\n\r\n(2) seems like way overkill. (0) is fine for mempool view tracking, (1) just allows the consumer to do more asserting I guess, you can take it or leave it.\r\n\r\nThoughts on last commit?\r\n\r\nedit: I've decided to just keep behavior as-is to avoid touching mempool code, and update the sample usage test to reflect that check.",
      "created_at" : "2020-07-27T16:12:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-664492533",
      "id" : 664492533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDQ5MjUzMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T20:00:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664492533",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-07-30T16:24:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-666505291",
      "id" : 666505291,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjUwNTI5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T16:24:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666505291",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r463343776"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463343776"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"sequence\" doesn't really express what this does. Maybe \"zmqpubmempool\"?",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-07-31T00:32:23Z",
      "diff_hunk" : "@@ -483,10 +483,12 @@ void SetupServerArgs(NodeContext& node)\n     gArgs.AddArg(\"-zmqpubhashtx=<address>\", \"Enable publish hash transaction in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n     gArgs.AddArg(\"-zmqpubrawblock=<address>\", \"Enable publish raw block in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n     gArgs.AddArg(\"-zmqpubrawtx=<address>\", \"Enable publish raw transaction in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubsequence=<address>\", \"Enable publish hash block and tx sequence in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r463343776",
      "id" : 463343776,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM0Mzc3Ng==",
      "original_commit_id" : "b5de7c116a1883b359f2abad79f766afa15c1aad",
      "original_line" : 486,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 458848709,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463343776",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Point taken but it also publishes a sequence of block hashes for connects\nand disconnects.\n\nOn Thu, Jul 30, 2020, 8:32 PM Luke Dashjr <notifications@github.com> wrote:\n\n> *@luke-jr* commented on this pull request.\n> ------------------------------\n>\n> In src/init.cpp\n> <https://github.com/bitcoin/bitcoin/pull/19572#discussion_r463343776>:\n>\n> > @@ -483,10 +483,12 @@ void SetupServerArgs(NodeContext& node)\n>      gArgs.AddArg(\"-zmqpubhashtx=<address>\", \"Enable publish hash transaction in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n>      gArgs.AddArg(\"-zmqpubrawblock=<address>\", \"Enable publish raw block in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n>      gArgs.AddArg(\"-zmqpubrawtx=<address>\", \"Enable publish raw transaction in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n> +    gArgs.AddArg(\"-zmqpubsequence=<address>\", \"Enable publish hash block and tx sequence in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n>\n> \"sequence\" doesn't really express what this does. Maybe \"zmqpubmempool\"?\n>\n> â\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/19572#pullrequestreview-458848709>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABMAFU4SHWAGULPMYAO77NLR6IGKNANCNFSM4PF2HZKQ>\n> .\n>\n",
      "created_at" : "2020-07-31T00:36:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-666831580",
      "id" : 666831580,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjgzMTU4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T00:36:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666831580",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased on master.\r\n\r\nImproved mempool sync test with code I've been running on mainnet/testnet for a few weeks now, last week with no issues. Added exclusive locks annotation.",
      "created_at" : "2020-08-04T01:39:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-668327593",
      "id" : 668327593,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2ODMyNzU5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-04T01:39:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668327593",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r464749319"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464749319"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-04T01:39:16Z",
      "diff_hunk" : "@@ -725,6 +731,17 @@ class CTxMemPool\n         return (m_unbroadcast_txids.count(txid) != 0);\n     }\n \n+    /** Guards this internal counter for external reporting */\n+    uint32_t GetAndIncrementSequence() const {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r464749319",
      "id" : 464749319,
      "in_reply_to_id" : 459763375,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc0OTMxOQ==",
      "original_commit_id" : "dc413fbd8d79199f3c0725395ee2512b8211d6de",
      "original_line" : 735,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 460440157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464749319",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467491610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467491610"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shouldn't this be spelled out?",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-08T18:28:25Z",
      "diff_hunk" : "@@ -499,6 +501,7 @@ void SetupServerArgs(NodeContext& node)\n     hidden_args.emplace_back(\"-zmqpubhashtxhwm=<n>\");\n     hidden_args.emplace_back(\"-zmqpubrawblockhwm=<n>\");\n     hidden_args.emplace_back(\"-zmqpubrawtxhwm=<n>\");\n+    hidden_args.emplace_back(\"-zmqpubseqhwm=<n>\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467491610",
      "id" : 467491610,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ5MTYxMA==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 504,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 463819625,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467491610",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467491630"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467491630"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Think you need zmqpubsequence in here too",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-08T18:28:42Z",
      "diff_hunk" : "@@ -499,6 +501,7 @@ void SetupServerArgs(NodeContext& node)\n     hidden_args.emplace_back(\"-zmqpubhashtxhwm=<n>\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467491630",
      "id" : 467491630,
      "line" : 504,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ5MTYzMA==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 504,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 17,
      "pull_request_review_id" : 463819625,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467491630",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467523879"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467523879"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This shouldn't be initialised here",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-09T01:47:31Z",
      "diff_hunk" : "@@ -499,14 +499,25 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose)\n         }\n         return o;\n     } else {\n+        uint32_t mempool_sequence = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467523879",
      "id" : 467523879,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUyMzg3OQ==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 502,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 463819625,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467523879",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467524040"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467524040"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should throw an exception if `include_mempool_sequence` is true here. (Or support it)",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-09T01:50:19Z",
      "diff_hunk" : "@@ -483,7 +483,7 @@ static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPool\n     info.pushKV(\"unbroadcast\", pool.IsUnbroadcastTx(tx.GetHash()));\n }\n \n-UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose)\n+UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempool_sequence)\n {\n     if (verbose) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467524040",
      "id" : 467524040,
      "line" : 505,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUyNDA0MA==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 505,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 7,
      "pull_request_review_id" : 463819625,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467524040",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467524295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467524295"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The code increments it for block inclusion removals too...",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-09T01:54:03Z",
      "diff_hunk" : "@@ -474,6 +474,12 @@ class CTxMemPool\n     mutable uint64_t m_epoch;\n     mutable bool m_has_epoch_guard;\n \n+    // In-memory counter for external mempool tracking purposes.\n+    // This number is incremented once every time a transaction\n+    // is added or removed from the mempool(except when removed\n+    // for block inclusion).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467524295",
      "id" : 467524295,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUyNDI5NQ==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 480,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 463819625,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467524295",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467524389"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467524389"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`m_sequence_number`",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-09T01:54:58Z",
      "diff_hunk" : "@@ -474,6 +474,12 @@ class CTxMemPool\n     mutable uint64_t m_epoch;\n     mutable bool m_has_epoch_guard;\n \n+    // In-memory counter for external mempool tracking purposes.\n+    // This number is incremented once every time a transaction\n+    // is added or removed from the mempool(except when removed\n+    // for block inclusion).\n+    mutable uint32_t sequence_number{1};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467524389",
      "id" : 467524389,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUyNDM4OQ==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 481,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 463819625,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467524389",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467524521"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467524521"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe `uint64_t` would be better?\r\n\r\nPossibly even a `sequence_number_t` typedef in case it were to ever change.",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-09T01:57:12Z",
      "diff_hunk" : "@@ -474,6 +474,12 @@ class CTxMemPool\n     mutable uint64_t m_epoch;\n     mutable bool m_has_epoch_guard;\n \n+    // In-memory counter for external mempool tracking purposes.\n+    // This number is incremented once every time a transaction\n+    // is added or removed from the mempool(except when removed\n+    // for block inclusion).\n+    mutable uint32_t sequence_number{1};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467524521",
      "id" : 467524521,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUyNDUyMQ==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 481,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 463819625,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467524521",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467524813"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467524813"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ugly hack. Just change CZMQNotificationInterface",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-09T02:01:24Z",
      "diff_hunk" : "@@ -98,6 +98,17 @@ class CValidationInterface {\n      * Called on a background thread.\n      */\n     virtual void TransactionAddedToMempool(const CTransactionRef& tx) {}\n+    /**\n+     * Notifies listeners of a transaction having been added to mempool.\n+     *\n+     * Required because of legacy ZMQ notifications including block\n+     * transactions when using TransactionAddedToMempool. See:\n+     * CZMQNotificationInterface::TransactionAddedToMempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467524813",
      "id" : 467524813,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUyNDgxMw==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 106,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/validationinterface.h",
      "position" : null,
      "pull_request_review_id" : 463819625,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467524813",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467984497"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467984497"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right, stale comment. Will update.",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-10T15:27:42Z",
      "diff_hunk" : "@@ -474,6 +474,12 @@ class CTxMemPool\n     mutable uint64_t m_epoch;\n     mutable bool m_has_epoch_guard;\n \n+    // In-memory counter for external mempool tracking purposes.\n+    // This number is incremented once every time a transaction\n+    // is added or removed from the mempool(except when removed\n+    // for block inclusion).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467984497",
      "id" : 467984497,
      "in_reply_to_id" : 467524295,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk4NDQ5Nw==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 480,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 464333834,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467984497",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467985672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467985672"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I believe my original theory was that the zmq sequence values themselves were also 32 bit, so I figured not much to be gained since any consumer has to handle this wrap around anyways?",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-10T15:29:28Z",
      "diff_hunk" : "@@ -474,6 +474,12 @@ class CTxMemPool\n     mutable uint64_t m_epoch;\n     mutable bool m_has_epoch_guard;\n \n+    // In-memory counter for external mempool tracking purposes.\n+    // This number is incremented once every time a transaction\n+    // is added or removed from the mempool(except when removed\n+    // for block inclusion).\n+    mutable uint32_t sequence_number{1};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467985672",
      "id" : 467985672,
      "in_reply_to_id" : 467524521,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk4NTY3Mg==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 481,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 464337735,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467985672",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467986707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467986707"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry, change it how specifically? If you mean I should change the legacy notifications too, I disagree? Might be misunderstanding. ",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-10T15:30:56Z",
      "diff_hunk" : "@@ -98,6 +98,17 @@ class CValidationInterface {\n      * Called on a background thread.\n      */\n     virtual void TransactionAddedToMempool(const CTransactionRef& tx) {}\n+    /**\n+     * Notifies listeners of a transaction having been added to mempool.\n+     *\n+     * Required because of legacy ZMQ notifications including block\n+     * transactions when using TransactionAddedToMempool. See:\n+     * CZMQNotificationInterface::TransactionAddedToMempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r467986707",
      "id" : 467986707,
      "in_reply_to_id" : 467524813,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk4NjcwNw==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 106,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/validationinterface.h",
      "position" : null,
      "pull_request_review_id" : 464341033,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467986707",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472202444"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472202444"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Offline someone noted that the ZMQ sequence numbers(probably) reset if the connection itself is reset, but the mempool sequence numbers will continue. I think this is a good argument to expand to `uint64_t`. Will do that soon.",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-18T13:36:51Z",
      "diff_hunk" : "@@ -474,6 +474,12 @@ class CTxMemPool\n     mutable uint64_t m_epoch;\n     mutable bool m_has_epoch_guard;\n \n+    // In-memory counter for external mempool tracking purposes.\n+    // This number is incremented once every time a transaction\n+    // is added or removed from the mempool(except when removed\n+    // for block inclusion).\n+    mutable uint32_t sequence_number{1};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472202444",
      "id" : 472202444,
      "in_reply_to_id" : 467524521,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIwMjQ0NA==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 481,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 469462275,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472202444",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376314"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-18T17:50:22Z",
      "diff_hunk" : "@@ -474,6 +474,12 @@ class CTxMemPool\n     mutable uint64_t m_epoch;\n     mutable bool m_has_epoch_guard;\n \n+    // In-memory counter for external mempool tracking purposes.\n+    // This number is incremented once every time a transaction\n+    // is added or removed from the mempool(except when removed\n+    // for block inclusion).\n+    mutable uint32_t sequence_number{1};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376314",
      "id" : 472376314,
      "in_reply_to_id" : 467524521,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NjMxNA==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 481,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 469690587,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376314",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376370"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-18T17:50:28Z",
      "diff_hunk" : "@@ -474,6 +474,12 @@ class CTxMemPool\n     mutable uint64_t m_epoch;\n     mutable bool m_has_epoch_guard;\n \n+    // In-memory counter for external mempool tracking purposes.\n+    // This number is incremented once every time a transaction\n+    // is added or removed from the mempool(except when removed\n+    // for block inclusion).\n+    mutable uint32_t sequence_number{1};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376370",
      "id" : 472376370,
      "in_reply_to_id" : 467524389,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NjM3MA==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 481,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 469690663,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376370",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376432"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376432"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-18T17:50:34Z",
      "diff_hunk" : "@@ -474,6 +474,12 @@ class CTxMemPool\n     mutable uint64_t m_epoch;\n     mutable bool m_has_epoch_guard;\n \n+    // In-memory counter for external mempool tracking purposes.\n+    // This number is incremented once every time a transaction\n+    // is added or removed from the mempool(except when removed\n+    // for block inclusion).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376432",
      "id" : 472376432,
      "in_reply_to_id" : 467524295,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NjQzMg==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 480,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 469690740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376432",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376548"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done, throws error + test",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-18T17:50:43Z",
      "diff_hunk" : "@@ -483,7 +483,7 @@ static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPool\n     info.pushKV(\"unbroadcast\", pool.IsUnbroadcastTx(tx.GetHash()));\n }\n \n-UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose)\n+UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempool_sequence)\n {\n     if (verbose) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376548",
      "id" : 472376548,
      "in_reply_to_id" : 467524040,
      "line" : 505,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NjU0OA==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 505,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 7,
      "pull_request_review_id" : 469690863,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376548",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376604"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-18T17:50:49Z",
      "diff_hunk" : "@@ -499,14 +499,25 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose)\n         }\n         return o;\n     } else {\n+        uint32_t mempool_sequence = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376604",
      "id" : 472376604,
      "in_reply_to_id" : 467523879,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NjYwNA==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 502,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 469690929,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376604",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376660"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376660"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-18T17:50:55Z",
      "diff_hunk" : "@@ -499,6 +501,7 @@ void SetupServerArgs(NodeContext& node)\n     hidden_args.emplace_back(\"-zmqpubhashtxhwm=<n>\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376660",
      "id" : 472376660,
      "in_reply_to_id" : 467491630,
      "line" : 504,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NjY2MA==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 504,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 17,
      "pull_request_review_id" : 469691004,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376660",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376706"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376706"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-18T17:51:00Z",
      "diff_hunk" : "@@ -499,6 +501,7 @@ void SetupServerArgs(NodeContext& node)\n     hidden_args.emplace_back(\"-zmqpubhashtxhwm=<n>\");\n     hidden_args.emplace_back(\"-zmqpubrawblockhwm=<n>\");\n     hidden_args.emplace_back(\"-zmqpubrawtxhwm=<n>\");\n+    hidden_args.emplace_back(\"-zmqpubseqhwm=<n>\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472376706",
      "id" : 472376706,
      "in_reply_to_id" : 467491610,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NjcwNg==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 504,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 469691065,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472376706",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472417077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472417077"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Figured out what you meant. Done in follow-on commit.",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-08-18T19:04:40Z",
      "diff_hunk" : "@@ -98,6 +98,17 @@ class CValidationInterface {\n      * Called on a background thread.\n      */\n     virtual void TransactionAddedToMempool(const CTransactionRef& tx) {}\n+    /**\n+     * Notifies listeners of a transaction having been added to mempool.\n+     *\n+     * Required because of legacy ZMQ notifications including block\n+     * transactions when using TransactionAddedToMempool. See:\n+     * CZMQNotificationInterface::TransactionAddedToMempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r472417077",
      "id" : 472417077,
      "in_reply_to_id" : 467524813,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxNzA3Nw==",
      "original_commit_id" : "e98f4b36be8edb5706ba62fa5731c00e34f265ab",
      "original_line" : 106,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/validationinterface.h",
      "position" : null,
      "pull_request_review_id" : 469742586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/472417077",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated PR with fixes/cleanups, and changed sequence number to 8 bytes.\r\n\r\nDogfooding consumer still running strong after 2+ weeks on testnet/mainnet, no mempool inconsistencies or dropped messages.",
      "created_at" : "2020-08-18T19:07:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-675660381",
      "id" : 675660381,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NTY2MDM4MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-18T19:08:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675660381",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\n(You had me at \"dogfooding\")",
      "created_at" : "2020-08-18T19:25:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-675668523",
      "id" : 675668523,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NTY2ODUyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-18T19:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675668523",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Looks like the consumer logic failed during the recent mainnet reorg of one block https://twitter.com/BitMEXResearch/status/1296431817592057857\r\n\r\n`A->D->A` occurred and the mempool sequence number jumped by a couple hundred between the two `A`s which is unexpected based on my assumptions of Core locking. Investigating more. (Note that this worst case means you have to take an additional getrawmempool snapshot) If this ends up being too messy I may change the format to notifying for each removal by mining as well.",
      "created_at" : "2020-08-20T15:41:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-677742812",
      "id" : 677742812,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Nzc0MjgxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-20T16:59:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677742812",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "After some consideration of the failure detected above, I'm going to stick with the current format, and eat the cost of a single `getrawmempool` call every time an unexpected mempool sequence value is encountered. If all evictions are announced for block inclusion we get dangerously close to blowing out zmq buffers, and in practice is creating more traffic for little gain.\r\n\r\nIn other words, please continue review :)",
      "created_at" : "2020-08-25T17:06:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-680153382",
      "id" : 680153382,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDE1MzM4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T17:06:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680153382",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-08-31T20:49:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-684031899",
      "id" : 684031899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NDAzMTg5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-31T20:49:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684031899",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2020-09-01T02:44:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-684159890",
      "id" : 684159890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NDE1OTg5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T02:44:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684159890",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Tested ACK, works as expected on macOS 10.15.6.\r\nJust two minor hints: I think this should also be added to `doc/zmq.md` and explicitly explain the difference between the already existing sequence number and this new mempool sequence number to prevent confusion. Maybe also add these new notifications to `contrib/zmq_sub.py` with unpacking of message type (Tx addition/removal, Block connect/disconnect) and mempool sequence number âï¸ ",
      "created_at" : "2020-09-01T18:25:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-685052685",
      "id" : 685052685,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTA1MjY4NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T18:25:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685052685",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/46975855?v=4",
         "events_url" : "https://api.github.com/users/n-thumann/events{/privacy}",
         "followers_url" : "https://api.github.com/users/n-thumann/followers",
         "following_url" : "https://api.github.com/users/n-thumann/following{/other_user}",
         "gists_url" : "https://api.github.com/users/n-thumann/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/n-thumann",
         "id" : 46975855,
         "login" : "n-thumann",
         "node_id" : "MDQ6VXNlcjQ2OTc1ODU1",
         "organizations_url" : "https://api.github.com/users/n-thumann/orgs",
         "received_events_url" : "https://api.github.com/users/n-thumann/received_events",
         "repos_url" : "https://api.github.com/users/n-thumann/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/n-thumann/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/n-thumann/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/n-thumann"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@n-thumann good points, I was unfamiliar with those docs. Will update with an additional commit",
      "created_at" : "2020-09-01T18:28:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-685054912",
      "id" : 685054912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTA1NDkxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T18:28:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685054912",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@n-thumann can you actually get `contrib/zmq/zmq_sub.py` to work? I updated what I think it should look like, but I had trouble running it even with legacy notifications. Try it out?\r\n\r\n```\r\nTask exception was never retrieved\r\nfuture: <Task finished coro=<ZMQHandler.handle() done, defined at contrib/zmq/zmq_sub.py:54> exception=ValueError('Invalid file object: <zmq.asyncio.Socket object at 0x7f62f0138e88>',)>\r\nTraceback (most recent call last):\r\n  File \"contrib/zmq/zmq_sub.py\", line 55, in handle\r\n    topic, body, seq = await self.zmqSubSocket.recv_multipart()\r\n  File \"/usr/lib/python3/dist-packages/zmq/eventloop/future.py\", line 170, in recv_multipart\r\n    dict(flags=flags, copy=copy, track=track)\r\n  File \"/usr/lib/python3/dist-packages/zmq/eventloop/future.py\", line 321, in _add_recv_event\r\n    self._add_io_state(self._READ)\r\n  File \"/usr/lib/python3/dist-packages/zmq/asyncio/__init__.py\", line 294, in _add_io_state\r\n    self.io_loop.add_reader(self, self._handle_recv)\r\n  File \"/usr/lib/python3.6/asyncio/selector_events.py\", line 326, in add_reader\r\n    return self._add_reader(fd, callback, *args)\r\n  File \"/usr/lib/python3.6/asyncio/selector_events.py\", line 253, in _add_reader\r\n    key = self._selector.get_key(fd)\r\n  File \"/usr/lib/python3.6/selectors.py\", line 189, in get_key\r\n    return mapping[fileobj]\r\n  File \"/usr/lib/python3.6/selectors.py\", line 70, in __getitem__\r\n    fd = self._selector._fileobj_lookup(fileobj)\r\n  File \"/usr/lib/python3.6/selectors.py\", line 224, in _fileobj_lookup\r\n    return _fileobj_to_fd(fileobj)\r\n  File \"/usr/lib/python3.6/selectors.py\", line 39, in _fileobj_to_fd\r\n    \"{!r}\".format(fileobj)) from None\r\nValueError: Invalid file object: <zmq.asyncio.Socket object at 0x7f62f0138e88>\r\n```",
      "created_at" : "2020-09-01T19:19:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-685080502",
      "id" : 685080502,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTA4MDUwMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T19:21:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685080502",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r481464878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481464878"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "slightly more consistent wording ð \r\n```suggestion\r\nThe `sequence` topic refers specifically to the mempool sequence\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-01T22:21:47Z",
      "diff_hunk" : "@@ -119,3 +121,8 @@ There are several possibilities that ZMQ notification can get lost\n during transmission depending on the communication type you are\n using. Bitcoind appends an up-counting sequence number to each\n notification which allows listeners to detect lost notifications.\n+\n+The \"sequence\" publisher refers specifically to the mempool sequence",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r481464878",
      "id" : 481464878,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ2NDg3OA==",
      "original_commit_id" : "6bc7b33008b7974f8866a38cc858822923ce5a22",
      "original_line" : 125,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "doc/zmq.md",
      "position" : null,
      "pull_request_review_id" : 480157713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481464878",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/46975855?v=4",
         "events_url" : "https://api.github.com/users/n-thumann/events{/privacy}",
         "followers_url" : "https://api.github.com/users/n-thumann/followers",
         "following_url" : "https://api.github.com/users/n-thumann/following{/other_user}",
         "gists_url" : "https://api.github.com/users/n-thumann/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/n-thumann",
         "id" : 46975855,
         "login" : "n-thumann",
         "node_id" : "MDQ6VXNlcjQ2OTc1ODU1",
         "organizations_url" : "https://api.github.com/users/n-thumann/orgs",
         "received_events_url" : "https://api.github.com/users/n-thumann/received_events",
         "repos_url" : "https://api.github.com/users/n-thumann/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/n-thumann/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/n-thumann/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/n-thumann"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r481480761"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481480761"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Use bytes instead of string\r\n```suggestion\r\n            hash = binascii.hexlify(body[:32])\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-01T23:08:35Z",
      "diff_hunk" : "@@ -69,6 +68,12 @@ async def handle(self) :\n         elif topic == b\"rawtx\":\n             print('- RAW TX ('+sequence+') -')\n             print(binascii.hexlify(body))\n+        elif topic == b\"sequence\":\n+            hash = body[:32].hex()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r481480761",
      "id" : 481480761,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4MDc2MQ==",
      "original_commit_id" : "6bc7b33008b7974f8866a38cc858822923ce5a22",
      "original_line" : 72,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "contrib/zmq/zmq_sub.py",
      "position" : null,
      "pull_request_review_id" : 480176238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481480761",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/46975855?v=4",
         "events_url" : "https://api.github.com/users/n-thumann/events{/privacy}",
         "followers_url" : "https://api.github.com/users/n-thumann/followers",
         "following_url" : "https://api.github.com/users/n-thumann/following{/other_user}",
         "gists_url" : "https://api.github.com/users/n-thumann/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/n-thumann",
         "id" : 46975855,
         "login" : "n-thumann",
         "node_id" : "MDQ6VXNlcjQ2OTc1ODU1",
         "organizations_url" : "https://api.github.com/users/n-thumann/orgs",
         "received_events_url" : "https://api.github.com/users/n-thumann/received_events",
         "repos_url" : "https://api.github.com/users/n-thumann/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/n-thumann/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/n-thumann/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/n-thumann"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r481483338"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481483338"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Format looks unnecessary here :)\r\n```suggestion\r\n            print(hash, label, mempool_sequence)\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-01T23:16:49Z",
      "diff_hunk" : "@@ -69,6 +68,12 @@ async def handle(self) :\n         elif topic == b\"rawtx\":\n             print('- RAW TX ('+sequence+') -')\n             print(binascii.hexlify(body))\n+        elif topic == b\"sequence\":\n+            hash = body[:32].hex()\n+            label = chr(body[32])\n+            mempool_sequence = None if len(body) != 32+1+8 else struct.unpack(\"<Q\", body[32+1:])[0]\n+            print('- SEQUENCE ('+sequence+') -')\n+            print(\"{} {} {}\".format(hash, label, mempool_sequence))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r481483338",
      "id" : 481483338,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4MzMzOA==",
      "original_commit_id" : "6bc7b33008b7974f8866a38cc858822923ce5a22",
      "original_line" : 76,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "contrib/zmq/zmq_sub.py",
      "position" : null,
      "pull_request_review_id" : 480179167,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481483338",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/46975855?v=4",
         "events_url" : "https://api.github.com/users/n-thumann/events{/privacy}",
         "followers_url" : "https://api.github.com/users/n-thumann/followers",
         "following_url" : "https://api.github.com/users/n-thumann/following{/other_user}",
         "gists_url" : "https://api.github.com/users/n-thumann/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/n-thumann",
         "id" : 46975855,
         "login" : "n-thumann",
         "node_id" : "MDQ6VXNlcjQ2OTc1ODU1",
         "organizations_url" : "https://api.github.com/users/n-thumann/orgs",
         "received_events_url" : "https://api.github.com/users/n-thumann/received_events",
         "repos_url" : "https://api.github.com/users/n-thumann/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/n-thumann/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/n-thumann/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/n-thumann"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @n-thumann can you actually get `contrib/zmq/zmq_sub.py` to work?\r\n\r\nYour updated script runs perfectly fine!\r\nAnother doc related idea: Should [these lines](https://github.com/bitcoin/bitcoin/blame/6bc7b33008b7974f8866a38cc858822923ce5a22/doc/zmq.md#L114-L118) be changed? This only applies when using `hashblock` or `rawblock` and can be circumvented by using `sequence` topic.\r\nI think itÂ´s also useful to briefly mention [here](https://github.com/bitcoin/bitcoin/blame/6bc7b33008b7974f8866a38cc858822923ce5a22/doc/zmq.md#L91) that the body of `sequence` notifications differs from the others, so basically what youÂ´ve already written [here](https://github.com/bitcoin/bitcoin/pull/19572/files#diff-61fb4c079cf5f7c216f97714baa7b224R228-R234) âï¸.\r\nOh, and in case you have a little bit of spare time I would you mind having a look at my (also zmq-related) PR https://github.com/bitcoin/bitcoin/pull/18309? ð ",
      "created_at" : "2020-09-01T23:17:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-685182894",
      "id" : 685182894,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTE4Mjg5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T23:17:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685182894",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/46975855?v=4",
         "events_url" : "https://api.github.com/users/n-thumann/events{/privacy}",
         "followers_url" : "https://api.github.com/users/n-thumann/followers",
         "following_url" : "https://api.github.com/users/n-thumann/following{/other_user}",
         "gists_url" : "https://api.github.com/users/n-thumann/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/n-thumann",
         "id" : 46975855,
         "login" : "n-thumann",
         "node_id" : "MDQ6VXNlcjQ2OTc1ODU1",
         "organizations_url" : "https://api.github.com/users/n-thumann/orgs",
         "received_events_url" : "https://api.github.com/users/n-thumann/received_events",
         "repos_url" : "https://api.github.com/users/n-thumann/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/n-thumann/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/n-thumann/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/n-thumann"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "took your suggestions @n-thumann , added some more information to docs as well as suggested",
      "created_at" : "2020-09-02T02:05:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-685239130",
      "id" : 685239130,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NTIzOTEzMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T02:05:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685239130",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483018183"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483018183"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps import zmq once at the top rather than 4 times in the tests, e.g.:\r\n```diff\r\ndiff --git a/test/functional/interface_zmq.py b/test/functional/interface_zmq.py\r\nindex ef4780cacb..3afab07dbf 100755\r\n--- a/test/functional/interface_zmq.py\r\n+++ b/test/functional/interface_zmq.py\r\n@@ -4,6 +4,7 @@\r\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n \"\"\"Test the ZMQ notification interface.\"\"\"\r\n import struct\r\n+import zmq\r\n \r\n from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE\r\n from test_framework.test_framework import BitcoinTestFramework\r\n@@ -21,7 +22,6 @@ class ZMQSubscriber:\r\n         self.socket = socket\r\n         self.topic = topic\r\n \r\n-        import zmq\r\n         self.socket.setsockopt(zmq.SUBSCRIBE, self.topic)\r\n \r\n     def receive(self):\r\n@@ -43,7 +43,6 @@ class ZMQTest (BitcoinTestFramework):\r\n         self.skip_if_no_bitcoind_zmq()\r\n \r\n     def run_test(self):\r\n-        import zmq\r\n         self.ctx = zmq.Context()\r\n         try:\r\n             self.test_basic()\r\n@@ -54,8 +53,6 @@ class ZMQTest (BitcoinTestFramework):\r\n             self.ctx.destroy(linger=None)\r\n \r\n     def test_basic(self):\r\n-        import zmq\r\n-\r\n         # Invalid zmq arguments don't take down the node, see #17185.\r\n         self.restart_node(0, [\"-zmqpubrawtx=foo\", \"-zmqpubhashtx=bar\"])\r\n \r\n@@ -146,7 +143,6 @@ class ZMQTest (BitcoinTestFramework):\r\n             self.log.info(\"Skipping reorg test because wallet is disabled\")\r\n             return\r\n \r\n-        import zmq\r\n         address = 'tcp://127.0.0.1:28333'\r\n \r\n         services = [b\"hashblock\", b\"hashtx\"]\r\n```\r\n",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-03T14:24:37Z",
      "diff_hunk" : "@@ -204,5 +223,284 @@ def test_reorg(self):\n         # And the current tip\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n+    def test_sequence(self):\n+        \"\"\"\n+        Sequence zmq notifications give every blockhash and txhash in order\n+        of processing, regardless of IBD, re-orgs, etc.\n+        Format of messages:\n+        <32-byte hash>C :                 Blockhash connected\n+        <32-byte hash>D :                 Blockhash disconnected\n+        <32-byte hash>R<8-byte LE uint> : Transactionhash removed from mempool for non-block inclusion reason\n+        <32-byte hash>A<8-byte LE uint> : Transactionhash added mempool\n+        \"\"\"\n+        self.log.info(\"Testing 'sequence' publisher\")\n+        import zmq",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483018183",
      "id" : 483018183,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAxODE4Mw==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 237,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 481892950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483018183",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483043176"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483043176"
         }
      },
      "author_association" : "MEMBER",
      "body" : "here and four other places below in the new code\r\n```suggestion\r\n                ++i;\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-03T14:56:24Z",
      "diff_hunk" : "@@ -179,17 +198,73 @@ void CZMQNotificationInterface::TransactionAddedToMempool(const CTransactionRef&\n \n void CZMQNotificationInterface::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected)\n {\n+    // Do a normal notify for each transaction added in the block\n     for (const CTransactionRef& ptx : pblock->vtx) {\n-        // Do a normal notify for each transaction added in the block\n-        TransactionAddedToMempool(ptx);\n+        for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n+        {\n+            CZMQAbstractNotifier *notifier = *i;\n+            if (notifier->NotifyTransaction(*ptx))\n+            {\n+                i++;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483043176",
      "id" : 483043176,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA0MzE3Ng==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 208,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/zmq/zmqnotificationinterface.cpp",
      "position" : null,
      "pull_request_review_id" : 481892950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483043176",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483136275"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483136275"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice cleanup here.",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-03T17:18:12Z",
      "diff_hunk" : "@@ -47,16 +48,14 @@ def __init__(self):\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawtx\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"sequence\")\n         self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n \n     async def handle(self) :\n-        msg = await self.zmqSubSocket.recv_multipart()\n-        topic = msg[0]\n-        body = msg[1]\n+        topic, body, seq = await self.zmqSubSocket.recv_multipart()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483136275",
      "id" : 483136275,
      "line" : 55,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEzNjI3NQ==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 55,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "contrib/zmq/zmq_sub.py",
      "position" : 21,
      "pull_request_review_id" : 481892950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483136275",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483136569"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483136569"
         }
      },
      "author_association" : "MEMBER",
      "body" : "indentation\r\n```suggestion\r\n            sequence = str(struct.unpack('<I', seq)[-1])\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-03T17:18:42Z",
      "diff_hunk" : "@@ -47,16 +48,14 @@ def __init__(self):\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawtx\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"sequence\")\n         self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n \n     async def handle(self) :\n-        msg = await self.zmqSubSocket.recv_multipart()\n-        topic = msg[0]\n-        body = msg[1]\n+        topic, body, seq = await self.zmqSubSocket.recv_multipart()\n         sequence = \"Unknown\"\n-        if len(msg[-1]) == 4:\n-          msgSequence = struct.unpack('<I', msg[-1])[-1]\n-          sequence = str(msgSequence)\n+        if len(seq) == 4:\n+          sequence = str(struct.unpack('<I', seq)[-1])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483136569",
      "id" : 483136569,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEzNjU2OQ==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 58,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "contrib/zmq/zmq_sub.py",
      "position" : null,
      "pull_request_review_id" : 481892950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483136569",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483138292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483138292"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, sort\r\n\r\n```suggestion\r\nfrom test_framework.util import (\r\n    assert_equal,\r\n    assert_raises_rpc_error,\r\n    connect_nodes,\r\n)\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-03T17:21:45Z",
      "diff_hunk" : "@@ -5,10 +5,11 @@\n \"\"\"Test the ZMQ notification interface.\"\"\"\n import struct\n \n-from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE\n+from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE, ADDRESS_BCRT1_P2WSH_OP_TRUE\n+from test_framework.blocktools import create_block, create_coinbase, add_witness_commitment\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.messages import CTransaction, hash256\n-from test_framework.util import assert_equal, connect_nodes\n+from test_framework.messages import CTransaction, hash256, FromHex\n+from test_framework.util import assert_equal, connect_nodes, assert_raises_rpc_error",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483138292",
      "id" : 483138292,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEzODI5Mg==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 12,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 481892950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483138292",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483163839"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483163839"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n            for _ in range(5):\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-03T18:08:54Z",
      "diff_hunk" : "@@ -204,5 +223,284 @@ def test_reorg(self):\n         # And the current tip\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n+    def test_sequence(self):\n+        \"\"\"\n+        Sequence zmq notifications give every blockhash and txhash in order\n+        of processing, regardless of IBD, re-orgs, etc.\n+        Format of messages:\n+        <32-byte hash>C :                 Blockhash connected\n+        <32-byte hash>D :                 Blockhash disconnected\n+        <32-byte hash>R<8-byte LE uint> : Transactionhash removed from mempool for non-block inclusion reason\n+        <32-byte hash>A<8-byte LE uint> : Transactionhash added mempool\n+        \"\"\"\n+        self.log.info(\"Testing 'sequence' publisher\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # Mempool sequence number starts at 1\n+        seq_num = 1\n+\n+        # Generate 1 block in nodes[0] and receive all notifications\n+        dc_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+\n+        # Note: We are not notified of any block transactions, coinbase or mined\n+        assert_equal((self.nodes[0].getbestblockhash(), \"C\", None), seq.receive_sequence())\n+\n+        # Generate 2 blocks in nodes[1] to a different address to ensure a chain split\n+        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_P2WSH_OP_TRUE)\n+\n+        # nodes[0] will reorg chain after connecting back nodes[1]\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # Then we receive all block (dis)connect notifications for the 2 block reorg\n+        assert_equal((dc_block, \"D\", None), seq.receive_sequence())\n+        block_count = self.nodes[1].getblockcount()\n+        assert_equal((self.nodes[1].getblockhash(block_count-1), \"C\", None), seq.receive_sequence())\n+        assert_equal((self.nodes[1].getblockhash(block_count), \"C\", None), seq.receive_sequence())\n+\n+        # Rest of test requires wallet functionality\n+        if self.is_wallet_compiled():\n+            self.log.info(\"Wait for tx from second node\")\n+            payment_txid = self.nodes[1].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=5.0, replaceable=True)\n+            self.sync_all()\n+            self.log.info(\"Testing sequence notifications with mempool sequence values\")\n+\n+            # Should receive the broadcasted txid.\n+            assert_equal((payment_txid, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            self.log.info(\"Testing RBF notification\")\n+            # Replace it to test eviction/addition notification\n+            rbf_info = self.nodes[1].bumpfee(payment_txid)\n+            self.sync_all()\n+            assert_equal((payment_txid, \"R\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Doesn't get published when mined, make a block and tx to \"flush\" the possibility\n+            # though the mempool sequence number does go up by the number of transactions\n+            # removed from the mempool by the block mining it.\n+            mempool_size = len(self.nodes[0].getrawmempool())\n+            c_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+            self.sync_all()\n+            # Make sure the number of mined transactions matches the number of txs out of mempool\n+            mempool_size_delta = mempool_size - len(self.nodes[0].getrawmempool())\n+            assert_equal(len(self.nodes[0].getblock(c_block)[\"tx\"])-1, mempool_size_delta)\n+            seq_num += mempool_size_delta\n+            payment_txid_2 = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n+            self.sync_all()\n+            assert_equal((c_block, \"C\", None), seq.receive_sequence())\n+            assert_equal((payment_txid_2, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Spot check getrawmempool results that they only show up when asked for\n+            assert type(self.nodes[0].getrawmempool()) is list\n+            assert type(self.nodes[0].getrawmempool(mempool_sequence=False)) is list\n+            assert \"mempool_sequence\" not in self.nodes[0].getrawmempool(verbose=True)\n+            assert_raises_rpc_error(-8, \"Verbose results can not contain mempool sequence values.\", self.nodes[0].getrawmempool, True, True)\n+            assert_equal(self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"], seq_num)\n+\n+            self.log.info(\"Testing reorg notifications\")\n+            # Manually invalidate the last block to test mempool re-entry\n+            # N.B. This part could be made more lenient in exact ordering\n+            # since it greatly depends on inner-workings of blocks/mempool\n+            # during \"deep\" re-orgs. Probably should \"re-construct\"\n+            # blockchain/mempool state from notifications instead.\n+            block_count = self.nodes[0].getblockcount()\n+            best_hash = self.nodes[0].getbestblockhash()\n+            self.nodes[0].invalidateblock(best_hash)\n+            sleep(2) # Bit of room to make sure transaction things happened\n+\n+            # Make sure getrawmempool mempool_sequence results aren't \"queued\" but immediately reflective\n+            # of the time they were gathered.\n+            assert self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"] > seq_num\n+\n+            assert_equal((best_hash, \"D\", None), seq.receive_sequence())\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Other things may happen but aren't wallet-deterministic so we don't test for them currently\n+            self.nodes[0].reconsiderblock(best_hash)\n+            self.nodes[1].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all()\n+\n+            self.log.info(\"Evict mempool transaction by block conflict\")\n+            orig_txid = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # More to be simply mined\n+            more_tx = []\n+            for i in range(5):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483163839",
      "id" : 483163839,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2MzgzOQ==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 341,
      "original_position" : 177,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 481892950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483163839",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483164177"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483164177"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        for _ in range(num_txs):\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-03T18:09:35Z",
      "diff_hunk" : "@@ -204,5 +223,284 @@ def test_reorg(self):\n         # And the current tip\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n+    def test_sequence(self):\n+        \"\"\"\n+        Sequence zmq notifications give every blockhash and txhash in order\n+        of processing, regardless of IBD, re-orgs, etc.\n+        Format of messages:\n+        <32-byte hash>C :                 Blockhash connected\n+        <32-byte hash>D :                 Blockhash disconnected\n+        <32-byte hash>R<8-byte LE uint> : Transactionhash removed from mempool for non-block inclusion reason\n+        <32-byte hash>A<8-byte LE uint> : Transactionhash added mempool\n+        \"\"\"\n+        self.log.info(\"Testing 'sequence' publisher\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # Mempool sequence number starts at 1\n+        seq_num = 1\n+\n+        # Generate 1 block in nodes[0] and receive all notifications\n+        dc_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+\n+        # Note: We are not notified of any block transactions, coinbase or mined\n+        assert_equal((self.nodes[0].getbestblockhash(), \"C\", None), seq.receive_sequence())\n+\n+        # Generate 2 blocks in nodes[1] to a different address to ensure a chain split\n+        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_P2WSH_OP_TRUE)\n+\n+        # nodes[0] will reorg chain after connecting back nodes[1]\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # Then we receive all block (dis)connect notifications for the 2 block reorg\n+        assert_equal((dc_block, \"D\", None), seq.receive_sequence())\n+        block_count = self.nodes[1].getblockcount()\n+        assert_equal((self.nodes[1].getblockhash(block_count-1), \"C\", None), seq.receive_sequence())\n+        assert_equal((self.nodes[1].getblockhash(block_count), \"C\", None), seq.receive_sequence())\n+\n+        # Rest of test requires wallet functionality\n+        if self.is_wallet_compiled():\n+            self.log.info(\"Wait for tx from second node\")\n+            payment_txid = self.nodes[1].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=5.0, replaceable=True)\n+            self.sync_all()\n+            self.log.info(\"Testing sequence notifications with mempool sequence values\")\n+\n+            # Should receive the broadcasted txid.\n+            assert_equal((payment_txid, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            self.log.info(\"Testing RBF notification\")\n+            # Replace it to test eviction/addition notification\n+            rbf_info = self.nodes[1].bumpfee(payment_txid)\n+            self.sync_all()\n+            assert_equal((payment_txid, \"R\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Doesn't get published when mined, make a block and tx to \"flush\" the possibility\n+            # though the mempool sequence number does go up by the number of transactions\n+            # removed from the mempool by the block mining it.\n+            mempool_size = len(self.nodes[0].getrawmempool())\n+            c_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+            self.sync_all()\n+            # Make sure the number of mined transactions matches the number of txs out of mempool\n+            mempool_size_delta = mempool_size - len(self.nodes[0].getrawmempool())\n+            assert_equal(len(self.nodes[0].getblock(c_block)[\"tx\"])-1, mempool_size_delta)\n+            seq_num += mempool_size_delta\n+            payment_txid_2 = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n+            self.sync_all()\n+            assert_equal((c_block, \"C\", None), seq.receive_sequence())\n+            assert_equal((payment_txid_2, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Spot check getrawmempool results that they only show up when asked for\n+            assert type(self.nodes[0].getrawmempool()) is list\n+            assert type(self.nodes[0].getrawmempool(mempool_sequence=False)) is list\n+            assert \"mempool_sequence\" not in self.nodes[0].getrawmempool(verbose=True)\n+            assert_raises_rpc_error(-8, \"Verbose results can not contain mempool sequence values.\", self.nodes[0].getrawmempool, True, True)\n+            assert_equal(self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"], seq_num)\n+\n+            self.log.info(\"Testing reorg notifications\")\n+            # Manually invalidate the last block to test mempool re-entry\n+            # N.B. This part could be made more lenient in exact ordering\n+            # since it greatly depends on inner-workings of blocks/mempool\n+            # during \"deep\" re-orgs. Probably should \"re-construct\"\n+            # blockchain/mempool state from notifications instead.\n+            block_count = self.nodes[0].getblockcount()\n+            best_hash = self.nodes[0].getbestblockhash()\n+            self.nodes[0].invalidateblock(best_hash)\n+            sleep(2) # Bit of room to make sure transaction things happened\n+\n+            # Make sure getrawmempool mempool_sequence results aren't \"queued\" but immediately reflective\n+            # of the time they were gathered.\n+            assert self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"] > seq_num\n+\n+            assert_equal((best_hash, \"D\", None), seq.receive_sequence())\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Other things may happen but aren't wallet-deterministic so we don't test for them currently\n+            self.nodes[0].reconsiderblock(best_hash)\n+            self.nodes[1].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all()\n+\n+            self.log.info(\"Evict mempool transaction by block conflict\")\n+            orig_txid = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # More to be simply mined\n+            more_tx = []\n+            for i in range(5):\n+                more_tx.append(self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 0.1))\n+\n+            raw_tx = self.nodes[0].getrawtransaction(orig_txid)\n+            bump_info = self.nodes[0].bumpfee(orig_txid)\n+            # Mine the pre-bump tx\n+            block = create_block(int(self.nodes[0].getbestblockhash(), 16), create_coinbase(self.nodes[0].getblockcount()+1))\n+            tx = FromHex(CTransaction(), raw_tx)\n+            block.vtx.append(tx)\n+            for txid in more_tx:\n+                tx = FromHex(CTransaction(), self.nodes[0].getrawtransaction(txid))\n+                block.vtx.append(tx)\n+            add_witness_commitment(block)\n+            block.solve()\n+            assert_equal(self.nodes[0].submitblock(block.serialize().hex()), None)\n+            tip = self.nodes[0].getbestblockhash()\n+            assert_equal(int(tip, 16), block.sha256)\n+            orig_txid_2 = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # Flush old notifications until evicted tx original entry\n+            (hash_str, label, mempool_seq) = seq.receive_sequence()\n+            while hash_str != orig_txid:\n+                (hash_str, label, mempool_seq) = seq.receive_sequence()\n+            mempool_seq += 1\n+\n+            # Added original tx\n+            assert_equal(label, \"A\")\n+            # More transactions to be simply mined\n+            for i in range(len(more_tx)):\n+                    assert_equal((more_tx[i], \"A\", mempool_seq), seq.receive_sequence())\n+                    mempool_seq += 1\n+            # Bumped by rbf\n+            assert_equal((orig_txid, \"R\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            assert_equal((bump_info[\"txid\"], \"A\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            # Conflict announced first, then block\n+            assert_equal((bump_info[\"txid\"], \"R\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            assert_equal((tip, \"C\", None), seq.receive_sequence())\n+            mempool_seq += len(more_tx)\n+            # Last tx\n+            assert_equal((orig_txid_2, \"A\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all() # want to make sure we didn't break \"consensus\" for other tests\n+\n+    def test_mempool_sync(self):\n+        \"\"\"\n+        Use sequence notification plus getrawmempool sequence results to \"sync mempool\"\n+        \"\"\"\n+        if not self.is_wallet_compiled():\n+            self.log.info(\"Skipping mempool sync test\")\n+            return\n+\n+        self.log.info(\"Testing 'mempool sync' usage of sequence notifier\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        connect_nodes(self.nodes[0], 1)\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # In-memory counter, should always start at 1\n+        next_mempool_seq = self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"]\n+        assert_equal(next_mempool_seq, 1)\n+\n+        # Some transactions have been happening but we aren't consuming zmq notifications yet\n+        # or we lost a ZMQ message somehow and want to start over\n+        txids = []\n+        num_txs = 5\n+        for i in range(num_txs):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483164177",
      "id" : 483164177,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2NDE3Nw==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 417,
      "original_position" : 253,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 481892950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483164177",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483164414"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483164414"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        for _ in range(num_txs):\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-03T18:09:59Z",
      "diff_hunk" : "@@ -204,5 +223,284 @@ def test_reorg(self):\n         # And the current tip\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n+    def test_sequence(self):\n+        \"\"\"\n+        Sequence zmq notifications give every blockhash and txhash in order\n+        of processing, regardless of IBD, re-orgs, etc.\n+        Format of messages:\n+        <32-byte hash>C :                 Blockhash connected\n+        <32-byte hash>D :                 Blockhash disconnected\n+        <32-byte hash>R<8-byte LE uint> : Transactionhash removed from mempool for non-block inclusion reason\n+        <32-byte hash>A<8-byte LE uint> : Transactionhash added mempool\n+        \"\"\"\n+        self.log.info(\"Testing 'sequence' publisher\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # Mempool sequence number starts at 1\n+        seq_num = 1\n+\n+        # Generate 1 block in nodes[0] and receive all notifications\n+        dc_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+\n+        # Note: We are not notified of any block transactions, coinbase or mined\n+        assert_equal((self.nodes[0].getbestblockhash(), \"C\", None), seq.receive_sequence())\n+\n+        # Generate 2 blocks in nodes[1] to a different address to ensure a chain split\n+        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_P2WSH_OP_TRUE)\n+\n+        # nodes[0] will reorg chain after connecting back nodes[1]\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # Then we receive all block (dis)connect notifications for the 2 block reorg\n+        assert_equal((dc_block, \"D\", None), seq.receive_sequence())\n+        block_count = self.nodes[1].getblockcount()\n+        assert_equal((self.nodes[1].getblockhash(block_count-1), \"C\", None), seq.receive_sequence())\n+        assert_equal((self.nodes[1].getblockhash(block_count), \"C\", None), seq.receive_sequence())\n+\n+        # Rest of test requires wallet functionality\n+        if self.is_wallet_compiled():\n+            self.log.info(\"Wait for tx from second node\")\n+            payment_txid = self.nodes[1].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=5.0, replaceable=True)\n+            self.sync_all()\n+            self.log.info(\"Testing sequence notifications with mempool sequence values\")\n+\n+            # Should receive the broadcasted txid.\n+            assert_equal((payment_txid, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            self.log.info(\"Testing RBF notification\")\n+            # Replace it to test eviction/addition notification\n+            rbf_info = self.nodes[1].bumpfee(payment_txid)\n+            self.sync_all()\n+            assert_equal((payment_txid, \"R\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Doesn't get published when mined, make a block and tx to \"flush\" the possibility\n+            # though the mempool sequence number does go up by the number of transactions\n+            # removed from the mempool by the block mining it.\n+            mempool_size = len(self.nodes[0].getrawmempool())\n+            c_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+            self.sync_all()\n+            # Make sure the number of mined transactions matches the number of txs out of mempool\n+            mempool_size_delta = mempool_size - len(self.nodes[0].getrawmempool())\n+            assert_equal(len(self.nodes[0].getblock(c_block)[\"tx\"])-1, mempool_size_delta)\n+            seq_num += mempool_size_delta\n+            payment_txid_2 = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n+            self.sync_all()\n+            assert_equal((c_block, \"C\", None), seq.receive_sequence())\n+            assert_equal((payment_txid_2, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Spot check getrawmempool results that they only show up when asked for\n+            assert type(self.nodes[0].getrawmempool()) is list\n+            assert type(self.nodes[0].getrawmempool(mempool_sequence=False)) is list\n+            assert \"mempool_sequence\" not in self.nodes[0].getrawmempool(verbose=True)\n+            assert_raises_rpc_error(-8, \"Verbose results can not contain mempool sequence values.\", self.nodes[0].getrawmempool, True, True)\n+            assert_equal(self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"], seq_num)\n+\n+            self.log.info(\"Testing reorg notifications\")\n+            # Manually invalidate the last block to test mempool re-entry\n+            # N.B. This part could be made more lenient in exact ordering\n+            # since it greatly depends on inner-workings of blocks/mempool\n+            # during \"deep\" re-orgs. Probably should \"re-construct\"\n+            # blockchain/mempool state from notifications instead.\n+            block_count = self.nodes[0].getblockcount()\n+            best_hash = self.nodes[0].getbestblockhash()\n+            self.nodes[0].invalidateblock(best_hash)\n+            sleep(2) # Bit of room to make sure transaction things happened\n+\n+            # Make sure getrawmempool mempool_sequence results aren't \"queued\" but immediately reflective\n+            # of the time they were gathered.\n+            assert self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"] > seq_num\n+\n+            assert_equal((best_hash, \"D\", None), seq.receive_sequence())\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Other things may happen but aren't wallet-deterministic so we don't test for them currently\n+            self.nodes[0].reconsiderblock(best_hash)\n+            self.nodes[1].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all()\n+\n+            self.log.info(\"Evict mempool transaction by block conflict\")\n+            orig_txid = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # More to be simply mined\n+            more_tx = []\n+            for i in range(5):\n+                more_tx.append(self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 0.1))\n+\n+            raw_tx = self.nodes[0].getrawtransaction(orig_txid)\n+            bump_info = self.nodes[0].bumpfee(orig_txid)\n+            # Mine the pre-bump tx\n+            block = create_block(int(self.nodes[0].getbestblockhash(), 16), create_coinbase(self.nodes[0].getblockcount()+1))\n+            tx = FromHex(CTransaction(), raw_tx)\n+            block.vtx.append(tx)\n+            for txid in more_tx:\n+                tx = FromHex(CTransaction(), self.nodes[0].getrawtransaction(txid))\n+                block.vtx.append(tx)\n+            add_witness_commitment(block)\n+            block.solve()\n+            assert_equal(self.nodes[0].submitblock(block.serialize().hex()), None)\n+            tip = self.nodes[0].getbestblockhash()\n+            assert_equal(int(tip, 16), block.sha256)\n+            orig_txid_2 = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # Flush old notifications until evicted tx original entry\n+            (hash_str, label, mempool_seq) = seq.receive_sequence()\n+            while hash_str != orig_txid:\n+                (hash_str, label, mempool_seq) = seq.receive_sequence()\n+            mempool_seq += 1\n+\n+            # Added original tx\n+            assert_equal(label, \"A\")\n+            # More transactions to be simply mined\n+            for i in range(len(more_tx)):\n+                    assert_equal((more_tx[i], \"A\", mempool_seq), seq.receive_sequence())\n+                    mempool_seq += 1\n+            # Bumped by rbf\n+            assert_equal((orig_txid, \"R\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            assert_equal((bump_info[\"txid\"], \"A\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            # Conflict announced first, then block\n+            assert_equal((bump_info[\"txid\"], \"R\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            assert_equal((tip, \"C\", None), seq.receive_sequence())\n+            mempool_seq += len(more_tx)\n+            # Last tx\n+            assert_equal((orig_txid_2, \"A\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all() # want to make sure we didn't break \"consensus\" for other tests\n+\n+    def test_mempool_sync(self):\n+        \"\"\"\n+        Use sequence notification plus getrawmempool sequence results to \"sync mempool\"\n+        \"\"\"\n+        if not self.is_wallet_compiled():\n+            self.log.info(\"Skipping mempool sync test\")\n+            return\n+\n+        self.log.info(\"Testing 'mempool sync' usage of sequence notifier\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        connect_nodes(self.nodes[0], 1)\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # In-memory counter, should always start at 1\n+        next_mempool_seq = self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"]\n+        assert_equal(next_mempool_seq, 1)\n+\n+        # Some transactions have been happening but we aren't consuming zmq notifications yet\n+        # or we lost a ZMQ message somehow and want to start over\n+        txids = []\n+        num_txs = 5\n+        for i in range(num_txs):\n+            txids.append(self.nodes[1].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True))\n+        self.sync_all()\n+\n+        # 1) Consume backlog until we get a mempool sequence number\n+        (hash_str, label, zmq_mem_seq) = seq.receive_sequence()\n+        while zmq_mem_seq is None:\n+                (hash_str, label, zmq_mem_seq) = seq.receive_sequence()\n+\n+        assert label == \"A\" or label == \"R\"\n+        assert hash_str is not None\n+\n+        # 2) We need to \"seed\" our view of the mempool\n+        mempool_snapshot = self.nodes[0].getrawmempool(mempool_sequence=True)\n+        mempool_view = set(mempool_snapshot[\"txids\"])\n+        get_raw_seq = mempool_snapshot[\"mempool_sequence\"]\n+        assert_equal(get_raw_seq, 6)\n+        # Snapshot may be too old compared to zmq message we read off latest\n+        while zmq_mem_seq >= get_raw_seq:\n+            sleep(2)\n+            mempool_snapshot = self.nodes[0].getrawmempool(mempool_sequence=True)\n+            mempool_view = set(mempool_snapshot[\"txids\"])\n+            get_raw_seq = mempool_snapshot[\"mempool_sequence\"]\n+\n+        # Things continue to happen in the \"interim\" while waiting for snapshot results\n+        # We have node 0 do all these to avoid p2p races with RBF announcements\n+        for i in range(num_txs):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483164414",
      "id" : 483164414,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2NDQxNA==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 443,
      "original_position" : 279,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 481892950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483164414",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483164909"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483164909"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        for _ in range(num_txs + 2 + 1 + 1):\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-03T18:10:51Z",
      "diff_hunk" : "@@ -204,5 +223,284 @@ def test_reorg(self):\n         # And the current tip\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n+    def test_sequence(self):\n+        \"\"\"\n+        Sequence zmq notifications give every blockhash and txhash in order\n+        of processing, regardless of IBD, re-orgs, etc.\n+        Format of messages:\n+        <32-byte hash>C :                 Blockhash connected\n+        <32-byte hash>D :                 Blockhash disconnected\n+        <32-byte hash>R<8-byte LE uint> : Transactionhash removed from mempool for non-block inclusion reason\n+        <32-byte hash>A<8-byte LE uint> : Transactionhash added mempool\n+        \"\"\"\n+        self.log.info(\"Testing 'sequence' publisher\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # Mempool sequence number starts at 1\n+        seq_num = 1\n+\n+        # Generate 1 block in nodes[0] and receive all notifications\n+        dc_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+\n+        # Note: We are not notified of any block transactions, coinbase or mined\n+        assert_equal((self.nodes[0].getbestblockhash(), \"C\", None), seq.receive_sequence())\n+\n+        # Generate 2 blocks in nodes[1] to a different address to ensure a chain split\n+        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_P2WSH_OP_TRUE)\n+\n+        # nodes[0] will reorg chain after connecting back nodes[1]\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # Then we receive all block (dis)connect notifications for the 2 block reorg\n+        assert_equal((dc_block, \"D\", None), seq.receive_sequence())\n+        block_count = self.nodes[1].getblockcount()\n+        assert_equal((self.nodes[1].getblockhash(block_count-1), \"C\", None), seq.receive_sequence())\n+        assert_equal((self.nodes[1].getblockhash(block_count), \"C\", None), seq.receive_sequence())\n+\n+        # Rest of test requires wallet functionality\n+        if self.is_wallet_compiled():\n+            self.log.info(\"Wait for tx from second node\")\n+            payment_txid = self.nodes[1].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=5.0, replaceable=True)\n+            self.sync_all()\n+            self.log.info(\"Testing sequence notifications with mempool sequence values\")\n+\n+            # Should receive the broadcasted txid.\n+            assert_equal((payment_txid, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            self.log.info(\"Testing RBF notification\")\n+            # Replace it to test eviction/addition notification\n+            rbf_info = self.nodes[1].bumpfee(payment_txid)\n+            self.sync_all()\n+            assert_equal((payment_txid, \"R\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Doesn't get published when mined, make a block and tx to \"flush\" the possibility\n+            # though the mempool sequence number does go up by the number of transactions\n+            # removed from the mempool by the block mining it.\n+            mempool_size = len(self.nodes[0].getrawmempool())\n+            c_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+            self.sync_all()\n+            # Make sure the number of mined transactions matches the number of txs out of mempool\n+            mempool_size_delta = mempool_size - len(self.nodes[0].getrawmempool())\n+            assert_equal(len(self.nodes[0].getblock(c_block)[\"tx\"])-1, mempool_size_delta)\n+            seq_num += mempool_size_delta\n+            payment_txid_2 = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n+            self.sync_all()\n+            assert_equal((c_block, \"C\", None), seq.receive_sequence())\n+            assert_equal((payment_txid_2, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Spot check getrawmempool results that they only show up when asked for\n+            assert type(self.nodes[0].getrawmempool()) is list\n+            assert type(self.nodes[0].getrawmempool(mempool_sequence=False)) is list\n+            assert \"mempool_sequence\" not in self.nodes[0].getrawmempool(verbose=True)\n+            assert_raises_rpc_error(-8, \"Verbose results can not contain mempool sequence values.\", self.nodes[0].getrawmempool, True, True)\n+            assert_equal(self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"], seq_num)\n+\n+            self.log.info(\"Testing reorg notifications\")\n+            # Manually invalidate the last block to test mempool re-entry\n+            # N.B. This part could be made more lenient in exact ordering\n+            # since it greatly depends on inner-workings of blocks/mempool\n+            # during \"deep\" re-orgs. Probably should \"re-construct\"\n+            # blockchain/mempool state from notifications instead.\n+            block_count = self.nodes[0].getblockcount()\n+            best_hash = self.nodes[0].getbestblockhash()\n+            self.nodes[0].invalidateblock(best_hash)\n+            sleep(2) # Bit of room to make sure transaction things happened\n+\n+            # Make sure getrawmempool mempool_sequence results aren't \"queued\" but immediately reflective\n+            # of the time they were gathered.\n+            assert self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"] > seq_num\n+\n+            assert_equal((best_hash, \"D\", None), seq.receive_sequence())\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Other things may happen but aren't wallet-deterministic so we don't test for them currently\n+            self.nodes[0].reconsiderblock(best_hash)\n+            self.nodes[1].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all()\n+\n+            self.log.info(\"Evict mempool transaction by block conflict\")\n+            orig_txid = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # More to be simply mined\n+            more_tx = []\n+            for i in range(5):\n+                more_tx.append(self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 0.1))\n+\n+            raw_tx = self.nodes[0].getrawtransaction(orig_txid)\n+            bump_info = self.nodes[0].bumpfee(orig_txid)\n+            # Mine the pre-bump tx\n+            block = create_block(int(self.nodes[0].getbestblockhash(), 16), create_coinbase(self.nodes[0].getblockcount()+1))\n+            tx = FromHex(CTransaction(), raw_tx)\n+            block.vtx.append(tx)\n+            for txid in more_tx:\n+                tx = FromHex(CTransaction(), self.nodes[0].getrawtransaction(txid))\n+                block.vtx.append(tx)\n+            add_witness_commitment(block)\n+            block.solve()\n+            assert_equal(self.nodes[0].submitblock(block.serialize().hex()), None)\n+            tip = self.nodes[0].getbestblockhash()\n+            assert_equal(int(tip, 16), block.sha256)\n+            orig_txid_2 = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # Flush old notifications until evicted tx original entry\n+            (hash_str, label, mempool_seq) = seq.receive_sequence()\n+            while hash_str != orig_txid:\n+                (hash_str, label, mempool_seq) = seq.receive_sequence()\n+            mempool_seq += 1\n+\n+            # Added original tx\n+            assert_equal(label, \"A\")\n+            # More transactions to be simply mined\n+            for i in range(len(more_tx)):\n+                    assert_equal((more_tx[i], \"A\", mempool_seq), seq.receive_sequence())\n+                    mempool_seq += 1\n+            # Bumped by rbf\n+            assert_equal((orig_txid, \"R\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            assert_equal((bump_info[\"txid\"], \"A\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            # Conflict announced first, then block\n+            assert_equal((bump_info[\"txid\"], \"R\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            assert_equal((tip, \"C\", None), seq.receive_sequence())\n+            mempool_seq += len(more_tx)\n+            # Last tx\n+            assert_equal((orig_txid_2, \"A\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all() # want to make sure we didn't break \"consensus\" for other tests\n+\n+    def test_mempool_sync(self):\n+        \"\"\"\n+        Use sequence notification plus getrawmempool sequence results to \"sync mempool\"\n+        \"\"\"\n+        if not self.is_wallet_compiled():\n+            self.log.info(\"Skipping mempool sync test\")\n+            return\n+\n+        self.log.info(\"Testing 'mempool sync' usage of sequence notifier\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        connect_nodes(self.nodes[0], 1)\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # In-memory counter, should always start at 1\n+        next_mempool_seq = self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"]\n+        assert_equal(next_mempool_seq, 1)\n+\n+        # Some transactions have been happening but we aren't consuming zmq notifications yet\n+        # or we lost a ZMQ message somehow and want to start over\n+        txids = []\n+        num_txs = 5\n+        for i in range(num_txs):\n+            txids.append(self.nodes[1].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True))\n+        self.sync_all()\n+\n+        # 1) Consume backlog until we get a mempool sequence number\n+        (hash_str, label, zmq_mem_seq) = seq.receive_sequence()\n+        while zmq_mem_seq is None:\n+                (hash_str, label, zmq_mem_seq) = seq.receive_sequence()\n+\n+        assert label == \"A\" or label == \"R\"\n+        assert hash_str is not None\n+\n+        # 2) We need to \"seed\" our view of the mempool\n+        mempool_snapshot = self.nodes[0].getrawmempool(mempool_sequence=True)\n+        mempool_view = set(mempool_snapshot[\"txids\"])\n+        get_raw_seq = mempool_snapshot[\"mempool_sequence\"]\n+        assert_equal(get_raw_seq, 6)\n+        # Snapshot may be too old compared to zmq message we read off latest\n+        while zmq_mem_seq >= get_raw_seq:\n+            sleep(2)\n+            mempool_snapshot = self.nodes[0].getrawmempool(mempool_sequence=True)\n+            mempool_view = set(mempool_snapshot[\"txids\"])\n+            get_raw_seq = mempool_snapshot[\"mempool_sequence\"]\n+\n+        # Things continue to happen in the \"interim\" while waiting for snapshot results\n+        # We have node 0 do all these to avoid p2p races with RBF announcements\n+        for i in range(num_txs):\n+            txids.append(self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=0.1, replaceable=True))\n+        self.nodes[0].bumpfee(txids[-1])\n+        self.sync_all()\n+        self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+        final_txid = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=0.1, replaceable=True)\n+\n+        # 3) Consume ZMQ backlog until we get to \"now\" for the mempool snapshot\n+        while True:\n+            if zmq_mem_seq == get_raw_seq - 1:\n+                break\n+            (hash_str, label, mempool_sequence) = seq.receive_sequence()\n+            if mempool_sequence is not None:\n+                zmq_mem_seq = mempool_sequence\n+                if zmq_mem_seq > get_raw_seq:\n+                    raise Exception(\"We somehow jumped mempool sequence numbers! zmq_mem_seq: {} > get_raw_seq: {}\".format(zmq_mem_seq, get_raw_seq))\n+\n+        # 4) Moving forward, we apply the delta to our local view\n+        #    remaining txs(5) + 1 rbf(A+R) + 1 block connect + 1 final tx\n+        expected_sequence = get_raw_seq\n+        r_gap = 0\n+        for i in range(num_txs+2+1+1):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483164909",
      "id" : 483164909,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2NDkwOQ==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 464,
      "original_position" : 300,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 481892950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483164909",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483201958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483201958"
         }
      },
      "author_association" : "MEMBER",
      "body" : "is this in the style guide? :P",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-03T19:19:16Z",
      "diff_hunk" : "@@ -179,17 +198,73 @@ void CZMQNotificationInterface::TransactionAddedToMempool(const CTransactionRef&\n \n void CZMQNotificationInterface::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected)\n {\n+    // Do a normal notify for each transaction added in the block\n     for (const CTransactionRef& ptx : pblock->vtx) {\n-        // Do a normal notify for each transaction added in the block\n-        TransactionAddedToMempool(ptx);\n+        for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n+        {\n+            CZMQAbstractNotifier *notifier = *i;\n+            if (notifier->NotifyTransaction(*ptx))\n+            {\n+                i++;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483201958",
      "id" : 483201958,
      "in_reply_to_id" : 483043176,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIwMTk1OA==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 208,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/zmq/zmqnotificationinterface.cpp",
      "position" : null,
      "pull_request_review_id" : 482133855,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483201958",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483213259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483213259"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yeah, `++i` is preferred over `i++`",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-03T19:42:51Z",
      "diff_hunk" : "@@ -179,17 +198,73 @@ void CZMQNotificationInterface::TransactionAddedToMempool(const CTransactionRef&\n \n void CZMQNotificationInterface::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected)\n {\n+    // Do a normal notify for each transaction added in the block\n     for (const CTransactionRef& ptx : pblock->vtx) {\n-        // Do a normal notify for each transaction added in the block\n-        TransactionAddedToMempool(ptx);\n+        for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n+        {\n+            CZMQAbstractNotifier *notifier = *i;\n+            if (notifier->NotifyTransaction(*ptx))\n+            {\n+                i++;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483213259",
      "id" : 483213259,
      "in_reply_to_id" : 483043176,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIxMzI1OQ==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 208,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/zmq/zmqnotificationinterface.cpp",
      "position" : null,
      "pull_request_review_id" : 482148670,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483213259",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483548722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483548722"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit proposals, feel free to take or ignore\r\n```diff\r\n-Note that for `*block` topics when the block chain tip changes,\r\n-a reorganisation may occur and just the tip will be notified.\r\n+Note that for `*block` topics, when the block chain tip changes,\r\n+a reorganisation may occur and only the tip will be notified.\r\n It is up to the subscriber to retrieve the chain from the last known\r\n-block to the new tip. Also note that no notification occurs if the tip\r\n-was in the active chain - this is the case after calling invalidateblock RPC.\r\n-In contrast the `sequence` topic publishes all block connects and disconnects.\r\n+block to the new tip. Also note that no notification will occur if the tip\r\n+was in the active chain--as would be the case after calling the invalidateblock\r\n+RPC. In contrast, the `sequence` topic publishes all block connections and\r\n+disconnections.\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T11:07:05Z",
      "diff_hunk" : "@@ -109,13 +119,19 @@ No authentication or authorization is done on connecting clients; it\n is assumed that the ZeroMQ port is exposed only to trusted entities,\n using other means such as firewalling.\n \n-Note that when the block chain tip changes, a reorganisation may occur\n-and just the tip will be notified. It is up to the subscriber to\n-retrieve the chain from the last known block to the new tip. Also note\n-that no notification occurs if the tip was in the active chain - this\n-is the case after calling invalidateblock RPC.\n+Note that for `*block` topics when the block chain tip changes,\n+a reorganisation may occur and just the tip will be notified.\n+It is up to the subscriber to retrieve the chain from the last known\n+block to the new tip. Also note that no notification occurs if the tip\n+was in the active chain - this is the case after calling invalidateblock RPC.\n+In contrast the `sequence` topic publishes all block connects and disconnects.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483548722",
      "id" : 483548722,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU0ODcyMg==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 127,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "doc/zmq.md",
      "position" : null,
      "pull_request_review_id" : 482562790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483548722",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483549110"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483549110"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit suggestions\r\n```diff\r\n The `sequence` topic refers specifically to the mempool sequence\r\n-number which is also published along with all mempool events. This\r\n-is a different sequence value than in ZMQ itself to allow a total\r\n+number, which is also published along with all mempool events. This\r\n+is a different sequence value than in ZMQ itself in order to allow a total\r\n ordering of mempool events to be constructed.\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T11:08:04Z",
      "diff_hunk" : "@@ -109,13 +119,19 @@ No authentication or authorization is done on connecting clients; it\n is assumed that the ZeroMQ port is exposed only to trusted entities,\n using other means such as firewalling.\n \n-Note that when the block chain tip changes, a reorganisation may occur\n-and just the tip will be notified. It is up to the subscriber to\n-retrieve the chain from the last known block to the new tip. Also note\n-that no notification occurs if the tip was in the active chain - this\n-is the case after calling invalidateblock RPC.\n+Note that for `*block` topics when the block chain tip changes,\n+a reorganisation may occur and just the tip will be notified.\n+It is up to the subscriber to retrieve the chain from the last known\n+block to the new tip. Also note that no notification occurs if the tip\n+was in the active chain - this is the case after calling invalidateblock RPC.\n+In contrast the `sequence` topic publishes all block connects and disconnects.\n \n There are several possibilities that ZMQ notification can get lost\n during transmission depending on the communication type you are\n using. Bitcoind appends an up-counting sequence number to each\n notification which allows listeners to detect lost notifications.\n+\n+The `sequence` topic refers specifically to the mempool sequence\n+number which is also published along with all mempool events. This\n+is a different sequence value than in ZMQ itself to allow a total\n+ordering of mempool events to be constructed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483549110",
      "id" : 483549110,
      "line" : 153,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU0OTExMA==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 153,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "doc/zmq.md",
      "position" : 58,
      "pull_request_review_id" : 482562790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483549110",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483584405"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483584405"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/can not/cannot/",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T12:29:04Z",
      "diff_hunk" : "@@ -483,9 +483,12 @@ static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPool\n     info.pushKV(\"unbroadcast\", pool.IsUnbroadcastTx(tx.GetHash()));\n }\n \n-UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose)\n+UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempool_sequence)\n {\n     if (verbose) {\n+        if (include_mempool_sequence) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Verbose results can not contain mempool sequence values.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483584405",
      "id" : 483584405,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU4NDQwNQ==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 490,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 482610217,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483584405",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483585408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483585408"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The behavior of `getrawmempool` with the additional param and its interaction with `verbose` should be covered in a functional test, unless I missed the added assertion somewhere.",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T12:31:07Z",
      "diff_hunk" : "@@ -499,14 +502,25 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose)\n         }\n         return o;\n     } else {\n+        uint64_t mempool_sequence;\n         std::vector<uint256> vtxid;\n-        pool.queryHashes(vtxid);\n-\n+        {\n+            LOCK(pool.cs);\n+            pool.queryHashes(vtxid);\n+            mempool_sequence = pool.GetSequence();\n+        }\n         UniValue a(UniValue::VARR);\n         for (const uint256& hash : vtxid)\n             a.push_back(hash.ToString());\n \n-        return a;\n+        if (!include_mempool_sequence) {\n+            return a;\n+        } else {\n+            UniValue o(UniValue::VOBJ);\n+            o.pushKV(\"txids\", a);\n+            o.pushKV(\"mempool_sequence\", mempool_sequence);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483585408",
      "id" : 483585408,
      "line" : 538,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU4NTQwOA==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 538,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 37,
      "pull_request_review_id" : 482610217,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483585408",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483702714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483702714"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There is a test line for it:\r\n`assert_raises_rpc_error(-8, \"Verbose results can not contain mempool sequence values.\", self.nodes[0].getrawmempool, True, True)`\r\n",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T15:42:20Z",
      "diff_hunk" : "@@ -499,14 +502,25 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose)\n         }\n         return o;\n     } else {\n+        uint64_t mempool_sequence;\n         std::vector<uint256> vtxid;\n-        pool.queryHashes(vtxid);\n-\n+        {\n+            LOCK(pool.cs);\n+            pool.queryHashes(vtxid);\n+            mempool_sequence = pool.GetSequence();\n+        }\n         UniValue a(UniValue::VARR);\n         for (const uint256& hash : vtxid)\n             a.push_back(hash.ToString());\n \n-        return a;\n+        if (!include_mempool_sequence) {\n+            return a;\n+        } else {\n+            UniValue o(UniValue::VOBJ);\n+            o.pushKV(\"txids\", a);\n+            o.pushKV(\"mempool_sequence\", mempool_sequence);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483702714",
      "id" : 483702714,
      "in_reply_to_id" : 483585408,
      "line" : 538,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcwMjcxNA==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 538,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 37,
      "pull_request_review_id" : 482762328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483702714",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483713813"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483713813"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, I even tested it manually as well. More like an `assert(\"mempool_sequence\" in getrawmempool.keys())` or even checking the value too.",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:01:04Z",
      "diff_hunk" : "@@ -499,14 +502,25 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose)\n         }\n         return o;\n     } else {\n+        uint64_t mempool_sequence;\n         std::vector<uint256> vtxid;\n-        pool.queryHashes(vtxid);\n-\n+        {\n+            LOCK(pool.cs);\n+            pool.queryHashes(vtxid);\n+            mempool_sequence = pool.GetSequence();\n+        }\n         UniValue a(UniValue::VARR);\n         for (const uint256& hash : vtxid)\n             a.push_back(hash.ToString());\n \n-        return a;\n+        if (!include_mempool_sequence) {\n+            return a;\n+        } else {\n+            UniValue o(UniValue::VOBJ);\n+            o.pushKV(\"txids\", a);\n+            o.pushKV(\"mempool_sequence\", mempool_sequence);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483713813",
      "id" : 483713813,
      "in_reply_to_id" : 483585408,
      "line" : 538,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMzgxMw==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 538,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 37,
      "pull_request_review_id" : 482774972,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483713813",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483714754"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483714754"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Never mind, it looks like you covered that.",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:02:59Z",
      "diff_hunk" : "@@ -499,14 +502,25 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose)\n         }\n         return o;\n     } else {\n+        uint64_t mempool_sequence;\n         std::vector<uint256> vtxid;\n-        pool.queryHashes(vtxid);\n-\n+        {\n+            LOCK(pool.cs);\n+            pool.queryHashes(vtxid);\n+            mempool_sequence = pool.GetSequence();\n+        }\n         UniValue a(UniValue::VARR);\n         for (const uint256& hash : vtxid)\n             a.push_back(hash.ToString());\n \n-        return a;\n+        if (!include_mempool_sequence) {\n+            return a;\n+        } else {\n+            UniValue o(UniValue::VOBJ);\n+            o.pushKV(\"txids\", a);\n+            o.pushKV(\"mempool_sequence\", mempool_sequence);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483714754",
      "id" : 483714754,
      "in_reply_to_id" : 483585408,
      "line" : 538,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxNDc1NA==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 538,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 37,
      "pull_request_review_id" : 482776250,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483714754",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483718747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483718747"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:11:02Z",
      "diff_hunk" : "@@ -483,9 +483,12 @@ static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPool\n     info.pushKV(\"unbroadcast\", pool.IsUnbroadcastTx(tx.GetHash()));\n }\n \n-UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose)\n+UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempool_sequence)\n {\n     if (verbose) {\n+        if (include_mempool_sequence) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Verbose results can not contain mempool sequence values.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483718747",
      "id" : 483718747,
      "in_reply_to_id" : 483584405,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxODc0Nw==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 490,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 482781427,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483718747",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483718825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483718825"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:11:12Z",
      "diff_hunk" : "@@ -109,13 +119,19 @@ No authentication or authorization is done on connecting clients; it\n is assumed that the ZeroMQ port is exposed only to trusted entities,\n using other means such as firewalling.\n \n-Note that when the block chain tip changes, a reorganisation may occur\n-and just the tip will be notified. It is up to the subscriber to\n-retrieve the chain from the last known block to the new tip. Also note\n-that no notification occurs if the tip was in the active chain - this\n-is the case after calling invalidateblock RPC.\n+Note that for `*block` topics when the block chain tip changes,\n+a reorganisation may occur and just the tip will be notified.\n+It is up to the subscriber to retrieve the chain from the last known\n+block to the new tip. Also note that no notification occurs if the tip\n+was in the active chain - this is the case after calling invalidateblock RPC.\n+In contrast the `sequence` topic publishes all block connects and disconnects.\n \n There are several possibilities that ZMQ notification can get lost\n during transmission depending on the communication type you are\n using. Bitcoind appends an up-counting sequence number to each\n notification which allows listeners to detect lost notifications.\n+\n+The `sequence` topic refers specifically to the mempool sequence\n+number which is also published along with all mempool events. This\n+is a different sequence value than in ZMQ itself to allow a total\n+ordering of mempool events to be constructed.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483718825",
      "id" : 483718825,
      "in_reply_to_id" : 483549110,
      "line" : 153,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxODgyNQ==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 153,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "doc/zmq.md",
      "position" : 58,
      "pull_request_review_id" : 482781524,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483718825",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483718881"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483718881"
         }
      },
      "author_association" : "MEMBER",
      "body" : "took most of this",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:11:19Z",
      "diff_hunk" : "@@ -109,13 +119,19 @@ No authentication or authorization is done on connecting clients; it\n is assumed that the ZeroMQ port is exposed only to trusted entities,\n using other means such as firewalling.\n \n-Note that when the block chain tip changes, a reorganisation may occur\n-and just the tip will be notified. It is up to the subscriber to\n-retrieve the chain from the last known block to the new tip. Also note\n-that no notification occurs if the tip was in the active chain - this\n-is the case after calling invalidateblock RPC.\n+Note that for `*block` topics when the block chain tip changes,\n+a reorganisation may occur and just the tip will be notified.\n+It is up to the subscriber to retrieve the chain from the last known\n+block to the new tip. Also note that no notification occurs if the tip\n+was in the active chain - this is the case after calling invalidateblock RPC.\n+In contrast the `sequence` topic publishes all block connects and disconnects.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483718881",
      "id" : 483718881,
      "in_reply_to_id" : 483548722,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxODg4MQ==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 127,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "doc/zmq.md",
      "position" : null,
      "pull_request_review_id" : 482781603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483718881",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483718926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483718926"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:11:26Z",
      "diff_hunk" : "@@ -204,5 +223,284 @@ def test_reorg(self):\n         # And the current tip\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n+    def test_sequence(self):\n+        \"\"\"\n+        Sequence zmq notifications give every blockhash and txhash in order\n+        of processing, regardless of IBD, re-orgs, etc.\n+        Format of messages:\n+        <32-byte hash>C :                 Blockhash connected\n+        <32-byte hash>D :                 Blockhash disconnected\n+        <32-byte hash>R<8-byte LE uint> : Transactionhash removed from mempool for non-block inclusion reason\n+        <32-byte hash>A<8-byte LE uint> : Transactionhash added mempool\n+        \"\"\"\n+        self.log.info(\"Testing 'sequence' publisher\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # Mempool sequence number starts at 1\n+        seq_num = 1\n+\n+        # Generate 1 block in nodes[0] and receive all notifications\n+        dc_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+\n+        # Note: We are not notified of any block transactions, coinbase or mined\n+        assert_equal((self.nodes[0].getbestblockhash(), \"C\", None), seq.receive_sequence())\n+\n+        # Generate 2 blocks in nodes[1] to a different address to ensure a chain split\n+        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_P2WSH_OP_TRUE)\n+\n+        # nodes[0] will reorg chain after connecting back nodes[1]\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # Then we receive all block (dis)connect notifications for the 2 block reorg\n+        assert_equal((dc_block, \"D\", None), seq.receive_sequence())\n+        block_count = self.nodes[1].getblockcount()\n+        assert_equal((self.nodes[1].getblockhash(block_count-1), \"C\", None), seq.receive_sequence())\n+        assert_equal((self.nodes[1].getblockhash(block_count), \"C\", None), seq.receive_sequence())\n+\n+        # Rest of test requires wallet functionality\n+        if self.is_wallet_compiled():\n+            self.log.info(\"Wait for tx from second node\")\n+            payment_txid = self.nodes[1].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=5.0, replaceable=True)\n+            self.sync_all()\n+            self.log.info(\"Testing sequence notifications with mempool sequence values\")\n+\n+            # Should receive the broadcasted txid.\n+            assert_equal((payment_txid, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            self.log.info(\"Testing RBF notification\")\n+            # Replace it to test eviction/addition notification\n+            rbf_info = self.nodes[1].bumpfee(payment_txid)\n+            self.sync_all()\n+            assert_equal((payment_txid, \"R\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Doesn't get published when mined, make a block and tx to \"flush\" the possibility\n+            # though the mempool sequence number does go up by the number of transactions\n+            # removed from the mempool by the block mining it.\n+            mempool_size = len(self.nodes[0].getrawmempool())\n+            c_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+            self.sync_all()\n+            # Make sure the number of mined transactions matches the number of txs out of mempool\n+            mempool_size_delta = mempool_size - len(self.nodes[0].getrawmempool())\n+            assert_equal(len(self.nodes[0].getblock(c_block)[\"tx\"])-1, mempool_size_delta)\n+            seq_num += mempool_size_delta\n+            payment_txid_2 = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n+            self.sync_all()\n+            assert_equal((c_block, \"C\", None), seq.receive_sequence())\n+            assert_equal((payment_txid_2, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Spot check getrawmempool results that they only show up when asked for\n+            assert type(self.nodes[0].getrawmempool()) is list\n+            assert type(self.nodes[0].getrawmempool(mempool_sequence=False)) is list\n+            assert \"mempool_sequence\" not in self.nodes[0].getrawmempool(verbose=True)\n+            assert_raises_rpc_error(-8, \"Verbose results can not contain mempool sequence values.\", self.nodes[0].getrawmempool, True, True)\n+            assert_equal(self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"], seq_num)\n+\n+            self.log.info(\"Testing reorg notifications\")\n+            # Manually invalidate the last block to test mempool re-entry\n+            # N.B. This part could be made more lenient in exact ordering\n+            # since it greatly depends on inner-workings of blocks/mempool\n+            # during \"deep\" re-orgs. Probably should \"re-construct\"\n+            # blockchain/mempool state from notifications instead.\n+            block_count = self.nodes[0].getblockcount()\n+            best_hash = self.nodes[0].getbestblockhash()\n+            self.nodes[0].invalidateblock(best_hash)\n+            sleep(2) # Bit of room to make sure transaction things happened\n+\n+            # Make sure getrawmempool mempool_sequence results aren't \"queued\" but immediately reflective\n+            # of the time they were gathered.\n+            assert self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"] > seq_num\n+\n+            assert_equal((best_hash, \"D\", None), seq.receive_sequence())\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Other things may happen but aren't wallet-deterministic so we don't test for them currently\n+            self.nodes[0].reconsiderblock(best_hash)\n+            self.nodes[1].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all()\n+\n+            self.log.info(\"Evict mempool transaction by block conflict\")\n+            orig_txid = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # More to be simply mined\n+            more_tx = []\n+            for i in range(5):\n+                more_tx.append(self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 0.1))\n+\n+            raw_tx = self.nodes[0].getrawtransaction(orig_txid)\n+            bump_info = self.nodes[0].bumpfee(orig_txid)\n+            # Mine the pre-bump tx\n+            block = create_block(int(self.nodes[0].getbestblockhash(), 16), create_coinbase(self.nodes[0].getblockcount()+1))\n+            tx = FromHex(CTransaction(), raw_tx)\n+            block.vtx.append(tx)\n+            for txid in more_tx:\n+                tx = FromHex(CTransaction(), self.nodes[0].getrawtransaction(txid))\n+                block.vtx.append(tx)\n+            add_witness_commitment(block)\n+            block.solve()\n+            assert_equal(self.nodes[0].submitblock(block.serialize().hex()), None)\n+            tip = self.nodes[0].getbestblockhash()\n+            assert_equal(int(tip, 16), block.sha256)\n+            orig_txid_2 = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # Flush old notifications until evicted tx original entry\n+            (hash_str, label, mempool_seq) = seq.receive_sequence()\n+            while hash_str != orig_txid:\n+                (hash_str, label, mempool_seq) = seq.receive_sequence()\n+            mempool_seq += 1\n+\n+            # Added original tx\n+            assert_equal(label, \"A\")\n+            # More transactions to be simply mined\n+            for i in range(len(more_tx)):\n+                    assert_equal((more_tx[i], \"A\", mempool_seq), seq.receive_sequence())\n+                    mempool_seq += 1\n+            # Bumped by rbf\n+            assert_equal((orig_txid, \"R\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            assert_equal((bump_info[\"txid\"], \"A\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            # Conflict announced first, then block\n+            assert_equal((bump_info[\"txid\"], \"R\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            assert_equal((tip, \"C\", None), seq.receive_sequence())\n+            mempool_seq += len(more_tx)\n+            # Last tx\n+            assert_equal((orig_txid_2, \"A\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all() # want to make sure we didn't break \"consensus\" for other tests\n+\n+    def test_mempool_sync(self):\n+        \"\"\"\n+        Use sequence notification plus getrawmempool sequence results to \"sync mempool\"\n+        \"\"\"\n+        if not self.is_wallet_compiled():\n+            self.log.info(\"Skipping mempool sync test\")\n+            return\n+\n+        self.log.info(\"Testing 'mempool sync' usage of sequence notifier\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        connect_nodes(self.nodes[0], 1)\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # In-memory counter, should always start at 1\n+        next_mempool_seq = self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"]\n+        assert_equal(next_mempool_seq, 1)\n+\n+        # Some transactions have been happening but we aren't consuming zmq notifications yet\n+        # or we lost a ZMQ message somehow and want to start over\n+        txids = []\n+        num_txs = 5\n+        for i in range(num_txs):\n+            txids.append(self.nodes[1].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True))\n+        self.sync_all()\n+\n+        # 1) Consume backlog until we get a mempool sequence number\n+        (hash_str, label, zmq_mem_seq) = seq.receive_sequence()\n+        while zmq_mem_seq is None:\n+                (hash_str, label, zmq_mem_seq) = seq.receive_sequence()\n+\n+        assert label == \"A\" or label == \"R\"\n+        assert hash_str is not None\n+\n+        # 2) We need to \"seed\" our view of the mempool\n+        mempool_snapshot = self.nodes[0].getrawmempool(mempool_sequence=True)\n+        mempool_view = set(mempool_snapshot[\"txids\"])\n+        get_raw_seq = mempool_snapshot[\"mempool_sequence\"]\n+        assert_equal(get_raw_seq, 6)\n+        # Snapshot may be too old compared to zmq message we read off latest\n+        while zmq_mem_seq >= get_raw_seq:\n+            sleep(2)\n+            mempool_snapshot = self.nodes[0].getrawmempool(mempool_sequence=True)\n+            mempool_view = set(mempool_snapshot[\"txids\"])\n+            get_raw_seq = mempool_snapshot[\"mempool_sequence\"]\n+\n+        # Things continue to happen in the \"interim\" while waiting for snapshot results\n+        # We have node 0 do all these to avoid p2p races with RBF announcements\n+        for i in range(num_txs):\n+            txids.append(self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=0.1, replaceable=True))\n+        self.nodes[0].bumpfee(txids[-1])\n+        self.sync_all()\n+        self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+        final_txid = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=0.1, replaceable=True)\n+\n+        # 3) Consume ZMQ backlog until we get to \"now\" for the mempool snapshot\n+        while True:\n+            if zmq_mem_seq == get_raw_seq - 1:\n+                break\n+            (hash_str, label, mempool_sequence) = seq.receive_sequence()\n+            if mempool_sequence is not None:\n+                zmq_mem_seq = mempool_sequence\n+                if zmq_mem_seq > get_raw_seq:\n+                    raise Exception(\"We somehow jumped mempool sequence numbers! zmq_mem_seq: {} > get_raw_seq: {}\".format(zmq_mem_seq, get_raw_seq))\n+\n+        # 4) Moving forward, we apply the delta to our local view\n+        #    remaining txs(5) + 1 rbf(A+R) + 1 block connect + 1 final tx\n+        expected_sequence = get_raw_seq\n+        r_gap = 0\n+        for i in range(num_txs+2+1+1):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483718926",
      "id" : 483718926,
      "in_reply_to_id" : 483164909,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxODkyNg==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 464,
      "original_position" : 300,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 482781659,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483718926",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483718972"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483718972"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:11:32Z",
      "diff_hunk" : "@@ -204,5 +223,284 @@ def test_reorg(self):\n         # And the current tip\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n+    def test_sequence(self):\n+        \"\"\"\n+        Sequence zmq notifications give every blockhash and txhash in order\n+        of processing, regardless of IBD, re-orgs, etc.\n+        Format of messages:\n+        <32-byte hash>C :                 Blockhash connected\n+        <32-byte hash>D :                 Blockhash disconnected\n+        <32-byte hash>R<8-byte LE uint> : Transactionhash removed from mempool for non-block inclusion reason\n+        <32-byte hash>A<8-byte LE uint> : Transactionhash added mempool\n+        \"\"\"\n+        self.log.info(\"Testing 'sequence' publisher\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # Mempool sequence number starts at 1\n+        seq_num = 1\n+\n+        # Generate 1 block in nodes[0] and receive all notifications\n+        dc_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+\n+        # Note: We are not notified of any block transactions, coinbase or mined\n+        assert_equal((self.nodes[0].getbestblockhash(), \"C\", None), seq.receive_sequence())\n+\n+        # Generate 2 blocks in nodes[1] to a different address to ensure a chain split\n+        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_P2WSH_OP_TRUE)\n+\n+        # nodes[0] will reorg chain after connecting back nodes[1]\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # Then we receive all block (dis)connect notifications for the 2 block reorg\n+        assert_equal((dc_block, \"D\", None), seq.receive_sequence())\n+        block_count = self.nodes[1].getblockcount()\n+        assert_equal((self.nodes[1].getblockhash(block_count-1), \"C\", None), seq.receive_sequence())\n+        assert_equal((self.nodes[1].getblockhash(block_count), \"C\", None), seq.receive_sequence())\n+\n+        # Rest of test requires wallet functionality\n+        if self.is_wallet_compiled():\n+            self.log.info(\"Wait for tx from second node\")\n+            payment_txid = self.nodes[1].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=5.0, replaceable=True)\n+            self.sync_all()\n+            self.log.info(\"Testing sequence notifications with mempool sequence values\")\n+\n+            # Should receive the broadcasted txid.\n+            assert_equal((payment_txid, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            self.log.info(\"Testing RBF notification\")\n+            # Replace it to test eviction/addition notification\n+            rbf_info = self.nodes[1].bumpfee(payment_txid)\n+            self.sync_all()\n+            assert_equal((payment_txid, \"R\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Doesn't get published when mined, make a block and tx to \"flush\" the possibility\n+            # though the mempool sequence number does go up by the number of transactions\n+            # removed from the mempool by the block mining it.\n+            mempool_size = len(self.nodes[0].getrawmempool())\n+            c_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+            self.sync_all()\n+            # Make sure the number of mined transactions matches the number of txs out of mempool\n+            mempool_size_delta = mempool_size - len(self.nodes[0].getrawmempool())\n+            assert_equal(len(self.nodes[0].getblock(c_block)[\"tx\"])-1, mempool_size_delta)\n+            seq_num += mempool_size_delta\n+            payment_txid_2 = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n+            self.sync_all()\n+            assert_equal((c_block, \"C\", None), seq.receive_sequence())\n+            assert_equal((payment_txid_2, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Spot check getrawmempool results that they only show up when asked for\n+            assert type(self.nodes[0].getrawmempool()) is list\n+            assert type(self.nodes[0].getrawmempool(mempool_sequence=False)) is list\n+            assert \"mempool_sequence\" not in self.nodes[0].getrawmempool(verbose=True)\n+            assert_raises_rpc_error(-8, \"Verbose results can not contain mempool sequence values.\", self.nodes[0].getrawmempool, True, True)\n+            assert_equal(self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"], seq_num)\n+\n+            self.log.info(\"Testing reorg notifications\")\n+            # Manually invalidate the last block to test mempool re-entry\n+            # N.B. This part could be made more lenient in exact ordering\n+            # since it greatly depends on inner-workings of blocks/mempool\n+            # during \"deep\" re-orgs. Probably should \"re-construct\"\n+            # blockchain/mempool state from notifications instead.\n+            block_count = self.nodes[0].getblockcount()\n+            best_hash = self.nodes[0].getbestblockhash()\n+            self.nodes[0].invalidateblock(best_hash)\n+            sleep(2) # Bit of room to make sure transaction things happened\n+\n+            # Make sure getrawmempool mempool_sequence results aren't \"queued\" but immediately reflective\n+            # of the time they were gathered.\n+            assert self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"] > seq_num\n+\n+            assert_equal((best_hash, \"D\", None), seq.receive_sequence())\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Other things may happen but aren't wallet-deterministic so we don't test for them currently\n+            self.nodes[0].reconsiderblock(best_hash)\n+            self.nodes[1].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all()\n+\n+            self.log.info(\"Evict mempool transaction by block conflict\")\n+            orig_txid = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # More to be simply mined\n+            more_tx = []\n+            for i in range(5):\n+                more_tx.append(self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 0.1))\n+\n+            raw_tx = self.nodes[0].getrawtransaction(orig_txid)\n+            bump_info = self.nodes[0].bumpfee(orig_txid)\n+            # Mine the pre-bump tx\n+            block = create_block(int(self.nodes[0].getbestblockhash(), 16), create_coinbase(self.nodes[0].getblockcount()+1))\n+            tx = FromHex(CTransaction(), raw_tx)\n+            block.vtx.append(tx)\n+            for txid in more_tx:\n+                tx = FromHex(CTransaction(), self.nodes[0].getrawtransaction(txid))\n+                block.vtx.append(tx)\n+            add_witness_commitment(block)\n+            block.solve()\n+            assert_equal(self.nodes[0].submitblock(block.serialize().hex()), None)\n+            tip = self.nodes[0].getbestblockhash()\n+            assert_equal(int(tip, 16), block.sha256)\n+            orig_txid_2 = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # Flush old notifications until evicted tx original entry\n+            (hash_str, label, mempool_seq) = seq.receive_sequence()\n+            while hash_str != orig_txid:\n+                (hash_str, label, mempool_seq) = seq.receive_sequence()\n+            mempool_seq += 1\n+\n+            # Added original tx\n+            assert_equal(label, \"A\")\n+            # More transactions to be simply mined\n+            for i in range(len(more_tx)):\n+                    assert_equal((more_tx[i], \"A\", mempool_seq), seq.receive_sequence())\n+                    mempool_seq += 1\n+            # Bumped by rbf\n+            assert_equal((orig_txid, \"R\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            assert_equal((bump_info[\"txid\"], \"A\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            # Conflict announced first, then block\n+            assert_equal((bump_info[\"txid\"], \"R\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            assert_equal((tip, \"C\", None), seq.receive_sequence())\n+            mempool_seq += len(more_tx)\n+            # Last tx\n+            assert_equal((orig_txid_2, \"A\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all() # want to make sure we didn't break \"consensus\" for other tests\n+\n+    def test_mempool_sync(self):\n+        \"\"\"\n+        Use sequence notification plus getrawmempool sequence results to \"sync mempool\"\n+        \"\"\"\n+        if not self.is_wallet_compiled():\n+            self.log.info(\"Skipping mempool sync test\")\n+            return\n+\n+        self.log.info(\"Testing 'mempool sync' usage of sequence notifier\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        connect_nodes(self.nodes[0], 1)\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # In-memory counter, should always start at 1\n+        next_mempool_seq = self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"]\n+        assert_equal(next_mempool_seq, 1)\n+\n+        # Some transactions have been happening but we aren't consuming zmq notifications yet\n+        # or we lost a ZMQ message somehow and want to start over\n+        txids = []\n+        num_txs = 5\n+        for i in range(num_txs):\n+            txids.append(self.nodes[1].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True))\n+        self.sync_all()\n+\n+        # 1) Consume backlog until we get a mempool sequence number\n+        (hash_str, label, zmq_mem_seq) = seq.receive_sequence()\n+        while zmq_mem_seq is None:\n+                (hash_str, label, zmq_mem_seq) = seq.receive_sequence()\n+\n+        assert label == \"A\" or label == \"R\"\n+        assert hash_str is not None\n+\n+        # 2) We need to \"seed\" our view of the mempool\n+        mempool_snapshot = self.nodes[0].getrawmempool(mempool_sequence=True)\n+        mempool_view = set(mempool_snapshot[\"txids\"])\n+        get_raw_seq = mempool_snapshot[\"mempool_sequence\"]\n+        assert_equal(get_raw_seq, 6)\n+        # Snapshot may be too old compared to zmq message we read off latest\n+        while zmq_mem_seq >= get_raw_seq:\n+            sleep(2)\n+            mempool_snapshot = self.nodes[0].getrawmempool(mempool_sequence=True)\n+            mempool_view = set(mempool_snapshot[\"txids\"])\n+            get_raw_seq = mempool_snapshot[\"mempool_sequence\"]\n+\n+        # Things continue to happen in the \"interim\" while waiting for snapshot results\n+        # We have node 0 do all these to avoid p2p races with RBF announcements\n+        for i in range(num_txs):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483718972",
      "id" : 483718972,
      "in_reply_to_id" : 483164414,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxODk3Mg==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 443,
      "original_position" : 279,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 482781714,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483718972",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483719030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483719030"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:11:38Z",
      "diff_hunk" : "@@ -204,5 +223,284 @@ def test_reorg(self):\n         # And the current tip\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n+    def test_sequence(self):\n+        \"\"\"\n+        Sequence zmq notifications give every blockhash and txhash in order\n+        of processing, regardless of IBD, re-orgs, etc.\n+        Format of messages:\n+        <32-byte hash>C :                 Blockhash connected\n+        <32-byte hash>D :                 Blockhash disconnected\n+        <32-byte hash>R<8-byte LE uint> : Transactionhash removed from mempool for non-block inclusion reason\n+        <32-byte hash>A<8-byte LE uint> : Transactionhash added mempool\n+        \"\"\"\n+        self.log.info(\"Testing 'sequence' publisher\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # Mempool sequence number starts at 1\n+        seq_num = 1\n+\n+        # Generate 1 block in nodes[0] and receive all notifications\n+        dc_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+\n+        # Note: We are not notified of any block transactions, coinbase or mined\n+        assert_equal((self.nodes[0].getbestblockhash(), \"C\", None), seq.receive_sequence())\n+\n+        # Generate 2 blocks in nodes[1] to a different address to ensure a chain split\n+        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_P2WSH_OP_TRUE)\n+\n+        # nodes[0] will reorg chain after connecting back nodes[1]\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # Then we receive all block (dis)connect notifications for the 2 block reorg\n+        assert_equal((dc_block, \"D\", None), seq.receive_sequence())\n+        block_count = self.nodes[1].getblockcount()\n+        assert_equal((self.nodes[1].getblockhash(block_count-1), \"C\", None), seq.receive_sequence())\n+        assert_equal((self.nodes[1].getblockhash(block_count), \"C\", None), seq.receive_sequence())\n+\n+        # Rest of test requires wallet functionality\n+        if self.is_wallet_compiled():\n+            self.log.info(\"Wait for tx from second node\")\n+            payment_txid = self.nodes[1].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=5.0, replaceable=True)\n+            self.sync_all()\n+            self.log.info(\"Testing sequence notifications with mempool sequence values\")\n+\n+            # Should receive the broadcasted txid.\n+            assert_equal((payment_txid, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            self.log.info(\"Testing RBF notification\")\n+            # Replace it to test eviction/addition notification\n+            rbf_info = self.nodes[1].bumpfee(payment_txid)\n+            self.sync_all()\n+            assert_equal((payment_txid, \"R\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Doesn't get published when mined, make a block and tx to \"flush\" the possibility\n+            # though the mempool sequence number does go up by the number of transactions\n+            # removed from the mempool by the block mining it.\n+            mempool_size = len(self.nodes[0].getrawmempool())\n+            c_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+            self.sync_all()\n+            # Make sure the number of mined transactions matches the number of txs out of mempool\n+            mempool_size_delta = mempool_size - len(self.nodes[0].getrawmempool())\n+            assert_equal(len(self.nodes[0].getblock(c_block)[\"tx\"])-1, mempool_size_delta)\n+            seq_num += mempool_size_delta\n+            payment_txid_2 = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n+            self.sync_all()\n+            assert_equal((c_block, \"C\", None), seq.receive_sequence())\n+            assert_equal((payment_txid_2, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Spot check getrawmempool results that they only show up when asked for\n+            assert type(self.nodes[0].getrawmempool()) is list\n+            assert type(self.nodes[0].getrawmempool(mempool_sequence=False)) is list\n+            assert \"mempool_sequence\" not in self.nodes[0].getrawmempool(verbose=True)\n+            assert_raises_rpc_error(-8, \"Verbose results can not contain mempool sequence values.\", self.nodes[0].getrawmempool, True, True)\n+            assert_equal(self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"], seq_num)\n+\n+            self.log.info(\"Testing reorg notifications\")\n+            # Manually invalidate the last block to test mempool re-entry\n+            # N.B. This part could be made more lenient in exact ordering\n+            # since it greatly depends on inner-workings of blocks/mempool\n+            # during \"deep\" re-orgs. Probably should \"re-construct\"\n+            # blockchain/mempool state from notifications instead.\n+            block_count = self.nodes[0].getblockcount()\n+            best_hash = self.nodes[0].getbestblockhash()\n+            self.nodes[0].invalidateblock(best_hash)\n+            sleep(2) # Bit of room to make sure transaction things happened\n+\n+            # Make sure getrawmempool mempool_sequence results aren't \"queued\" but immediately reflective\n+            # of the time they were gathered.\n+            assert self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"] > seq_num\n+\n+            assert_equal((best_hash, \"D\", None), seq.receive_sequence())\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Other things may happen but aren't wallet-deterministic so we don't test for them currently\n+            self.nodes[0].reconsiderblock(best_hash)\n+            self.nodes[1].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all()\n+\n+            self.log.info(\"Evict mempool transaction by block conflict\")\n+            orig_txid = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # More to be simply mined\n+            more_tx = []\n+            for i in range(5):\n+                more_tx.append(self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 0.1))\n+\n+            raw_tx = self.nodes[0].getrawtransaction(orig_txid)\n+            bump_info = self.nodes[0].bumpfee(orig_txid)\n+            # Mine the pre-bump tx\n+            block = create_block(int(self.nodes[0].getbestblockhash(), 16), create_coinbase(self.nodes[0].getblockcount()+1))\n+            tx = FromHex(CTransaction(), raw_tx)\n+            block.vtx.append(tx)\n+            for txid in more_tx:\n+                tx = FromHex(CTransaction(), self.nodes[0].getrawtransaction(txid))\n+                block.vtx.append(tx)\n+            add_witness_commitment(block)\n+            block.solve()\n+            assert_equal(self.nodes[0].submitblock(block.serialize().hex()), None)\n+            tip = self.nodes[0].getbestblockhash()\n+            assert_equal(int(tip, 16), block.sha256)\n+            orig_txid_2 = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # Flush old notifications until evicted tx original entry\n+            (hash_str, label, mempool_seq) = seq.receive_sequence()\n+            while hash_str != orig_txid:\n+                (hash_str, label, mempool_seq) = seq.receive_sequence()\n+            mempool_seq += 1\n+\n+            # Added original tx\n+            assert_equal(label, \"A\")\n+            # More transactions to be simply mined\n+            for i in range(len(more_tx)):\n+                    assert_equal((more_tx[i], \"A\", mempool_seq), seq.receive_sequence())\n+                    mempool_seq += 1\n+            # Bumped by rbf\n+            assert_equal((orig_txid, \"R\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            assert_equal((bump_info[\"txid\"], \"A\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            # Conflict announced first, then block\n+            assert_equal((bump_info[\"txid\"], \"R\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            assert_equal((tip, \"C\", None), seq.receive_sequence())\n+            mempool_seq += len(more_tx)\n+            # Last tx\n+            assert_equal((orig_txid_2, \"A\", mempool_seq), seq.receive_sequence())\n+            mempool_seq += 1\n+            self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all() # want to make sure we didn't break \"consensus\" for other tests\n+\n+    def test_mempool_sync(self):\n+        \"\"\"\n+        Use sequence notification plus getrawmempool sequence results to \"sync mempool\"\n+        \"\"\"\n+        if not self.is_wallet_compiled():\n+            self.log.info(\"Skipping mempool sync test\")\n+            return\n+\n+        self.log.info(\"Testing 'mempool sync' usage of sequence notifier\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        connect_nodes(self.nodes[0], 1)\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # In-memory counter, should always start at 1\n+        next_mempool_seq = self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"]\n+        assert_equal(next_mempool_seq, 1)\n+\n+        # Some transactions have been happening but we aren't consuming zmq notifications yet\n+        # or we lost a ZMQ message somehow and want to start over\n+        txids = []\n+        num_txs = 5\n+        for i in range(num_txs):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483719030",
      "id" : 483719030,
      "in_reply_to_id" : 483164177,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxOTAzMA==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 417,
      "original_position" : 253,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 482781794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483719030",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483719087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483719087"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:11:45Z",
      "diff_hunk" : "@@ -204,5 +223,284 @@ def test_reorg(self):\n         # And the current tip\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n+    def test_sequence(self):\n+        \"\"\"\n+        Sequence zmq notifications give every blockhash and txhash in order\n+        of processing, regardless of IBD, re-orgs, etc.\n+        Format of messages:\n+        <32-byte hash>C :                 Blockhash connected\n+        <32-byte hash>D :                 Blockhash disconnected\n+        <32-byte hash>R<8-byte LE uint> : Transactionhash removed from mempool for non-block inclusion reason\n+        <32-byte hash>A<8-byte LE uint> : Transactionhash added mempool\n+        \"\"\"\n+        self.log.info(\"Testing 'sequence' publisher\")\n+        import zmq\n+        address = 'tcp://127.0.0.1:28333'\n+        socket = self.ctx.socket(zmq.SUB)\n+        socket.set(zmq.RCVTIMEO, 60000)\n+        seq = ZMQSubscriber(socket, b'sequence')\n+\n+        self.restart_node(0, ['-zmqpub%s=%s' % (seq.topic.decode(), address)])\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n+\n+        # Mempool sequence number starts at 1\n+        seq_num = 1\n+\n+        # Generate 1 block in nodes[0] and receive all notifications\n+        dc_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+\n+        # Note: We are not notified of any block transactions, coinbase or mined\n+        assert_equal((self.nodes[0].getbestblockhash(), \"C\", None), seq.receive_sequence())\n+\n+        # Generate 2 blocks in nodes[1] to a different address to ensure a chain split\n+        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_P2WSH_OP_TRUE)\n+\n+        # nodes[0] will reorg chain after connecting back nodes[1]\n+        connect_nodes(self.nodes[0], 1)\n+\n+        # Then we receive all block (dis)connect notifications for the 2 block reorg\n+        assert_equal((dc_block, \"D\", None), seq.receive_sequence())\n+        block_count = self.nodes[1].getblockcount()\n+        assert_equal((self.nodes[1].getblockhash(block_count-1), \"C\", None), seq.receive_sequence())\n+        assert_equal((self.nodes[1].getblockhash(block_count), \"C\", None), seq.receive_sequence())\n+\n+        # Rest of test requires wallet functionality\n+        if self.is_wallet_compiled():\n+            self.log.info(\"Wait for tx from second node\")\n+            payment_txid = self.nodes[1].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=5.0, replaceable=True)\n+            self.sync_all()\n+            self.log.info(\"Testing sequence notifications with mempool sequence values\")\n+\n+            # Should receive the broadcasted txid.\n+            assert_equal((payment_txid, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            self.log.info(\"Testing RBF notification\")\n+            # Replace it to test eviction/addition notification\n+            rbf_info = self.nodes[1].bumpfee(payment_txid)\n+            self.sync_all()\n+            assert_equal((payment_txid, \"R\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Doesn't get published when mined, make a block and tx to \"flush\" the possibility\n+            # though the mempool sequence number does go up by the number of transactions\n+            # removed from the mempool by the block mining it.\n+            mempool_size = len(self.nodes[0].getrawmempool())\n+            c_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+            self.sync_all()\n+            # Make sure the number of mined transactions matches the number of txs out of mempool\n+            mempool_size_delta = mempool_size - len(self.nodes[0].getrawmempool())\n+            assert_equal(len(self.nodes[0].getblock(c_block)[\"tx\"])-1, mempool_size_delta)\n+            seq_num += mempool_size_delta\n+            payment_txid_2 = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n+            self.sync_all()\n+            assert_equal((c_block, \"C\", None), seq.receive_sequence())\n+            assert_equal((payment_txid_2, \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Spot check getrawmempool results that they only show up when asked for\n+            assert type(self.nodes[0].getrawmempool()) is list\n+            assert type(self.nodes[0].getrawmempool(mempool_sequence=False)) is list\n+            assert \"mempool_sequence\" not in self.nodes[0].getrawmempool(verbose=True)\n+            assert_raises_rpc_error(-8, \"Verbose results can not contain mempool sequence values.\", self.nodes[0].getrawmempool, True, True)\n+            assert_equal(self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"], seq_num)\n+\n+            self.log.info(\"Testing reorg notifications\")\n+            # Manually invalidate the last block to test mempool re-entry\n+            # N.B. This part could be made more lenient in exact ordering\n+            # since it greatly depends on inner-workings of blocks/mempool\n+            # during \"deep\" re-orgs. Probably should \"re-construct\"\n+            # blockchain/mempool state from notifications instead.\n+            block_count = self.nodes[0].getblockcount()\n+            best_hash = self.nodes[0].getbestblockhash()\n+            self.nodes[0].invalidateblock(best_hash)\n+            sleep(2) # Bit of room to make sure transaction things happened\n+\n+            # Make sure getrawmempool mempool_sequence results aren't \"queued\" but immediately reflective\n+            # of the time they were gathered.\n+            assert self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"] > seq_num\n+\n+            assert_equal((best_hash, \"D\", None), seq.receive_sequence())\n+            assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n+            seq_num += 1\n+\n+            # Other things may happen but aren't wallet-deterministic so we don't test for them currently\n+            self.nodes[0].reconsiderblock(best_hash)\n+            self.nodes[1].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            self.sync_all()\n+\n+            self.log.info(\"Evict mempool transaction by block conflict\")\n+            orig_txid = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)\n+\n+            # More to be simply mined\n+            more_tx = []\n+            for i in range(5):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483719087",
      "id" : 483719087,
      "in_reply_to_id" : 483163839,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxOTA4Nw==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 341,
      "original_position" : 177,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 482781865,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483719087",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483719133"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483719133"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:11:51Z",
      "diff_hunk" : "@@ -5,10 +5,11 @@\n \"\"\"Test the ZMQ notification interface.\"\"\"\n import struct\n \n-from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE\n+from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE, ADDRESS_BCRT1_P2WSH_OP_TRUE\n+from test_framework.blocktools import create_block, create_coinbase, add_witness_commitment\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.messages import CTransaction, hash256\n-from test_framework.util import assert_equal, connect_nodes\n+from test_framework.messages import CTransaction, hash256, FromHex\n+from test_framework.util import assert_equal, connect_nodes, assert_raises_rpc_error",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483719133",
      "id" : 483719133,
      "in_reply_to_id" : 483138292,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxOTEzMw==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 12,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 482781935,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483719133",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483719187"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483719187"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:11:57Z",
      "diff_hunk" : "@@ -47,16 +48,14 @@ def __init__(self):\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawtx\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"sequence\")\n         self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n \n     async def handle(self) :\n-        msg = await self.zmqSubSocket.recv_multipart()\n-        topic = msg[0]\n-        body = msg[1]\n+        topic, body, seq = await self.zmqSubSocket.recv_multipart()\n         sequence = \"Unknown\"\n-        if len(msg[-1]) == 4:\n-          msgSequence = struct.unpack('<I', msg[-1])[-1]\n-          sequence = str(msgSequence)\n+        if len(seq) == 4:\n+          sequence = str(struct.unpack('<I', seq)[-1])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483719187",
      "id" : 483719187,
      "in_reply_to_id" : 483136569,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxOTE4Nw==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 58,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "contrib/zmq/zmq_sub.py",
      "position" : null,
      "pull_request_review_id" : 482782013,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483719187",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483719253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483719253"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:12:06Z",
      "diff_hunk" : "@@ -179,17 +198,73 @@ void CZMQNotificationInterface::TransactionAddedToMempool(const CTransactionRef&\n \n void CZMQNotificationInterface::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected)\n {\n+    // Do a normal notify for each transaction added in the block\n     for (const CTransactionRef& ptx : pblock->vtx) {\n-        // Do a normal notify for each transaction added in the block\n-        TransactionAddedToMempool(ptx);\n+        for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n+        {\n+            CZMQAbstractNotifier *notifier = *i;\n+            if (notifier->NotifyTransaction(*ptx))\n+            {\n+                i++;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483719253",
      "id" : 483719253,
      "in_reply_to_id" : 483043176,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxOTI1Mw==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 208,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/zmq/zmqnotificationinterface.cpp",
      "position" : null,
      "pull_request_review_id" : 482782117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483719253",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483719289"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483719289"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:12:12Z",
      "diff_hunk" : "@@ -204,5 +223,284 @@ def test_reorg(self):\n         # And the current tip\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n+    def test_sequence(self):\n+        \"\"\"\n+        Sequence zmq notifications give every blockhash and txhash in order\n+        of processing, regardless of IBD, re-orgs, etc.\n+        Format of messages:\n+        <32-byte hash>C :                 Blockhash connected\n+        <32-byte hash>D :                 Blockhash disconnected\n+        <32-byte hash>R<8-byte LE uint> : Transactionhash removed from mempool for non-block inclusion reason\n+        <32-byte hash>A<8-byte LE uint> : Transactionhash added mempool\n+        \"\"\"\n+        self.log.info(\"Testing 'sequence' publisher\")\n+        import zmq",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483719289",
      "id" : 483719289,
      "in_reply_to_id" : 483018183,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxOTI4OQ==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 237,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 482782165,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483719289",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonatack I'm keeping https://github.com/bitcoin/bitcoin/pull/19572/commits/003767e7a92e8ae41f5c561a69d7be23e4753f63 in for now out of a real reason(it's changing how the legacy zmq notifications work under the hood) and laziness.\r\n\r\nShould have addessed everything. Did some history cleanup as well.\r\n",
      "created_at" : "2020-09-04T16:12:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-687245291",
      "id" : 687245291,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NzI0NTI5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-04T16:16:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687245291",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483720747"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483720747"
         }
      },
      "author_association" : "MEMBER",
      "body" : "my string change broke the test of this. See!?!",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:15:07Z",
      "diff_hunk" : "@@ -483,9 +483,12 @@ static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPool\n     info.pushKV(\"unbroadcast\", pool.IsUnbroadcastTx(tx.GetHash()));\n }\n \n-UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose)\n+UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempool_sequence)\n {\n     if (verbose) {\n+        if (include_mempool_sequence) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Verbose results can not contain mempool sequence values.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483720747",
      "id" : 483720747,
      "in_reply_to_id" : 483584405,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyMDc0Nw==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 490,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 482783988,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483720747",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483731693"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483731693"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Proof of test! ð",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T16:31:06Z",
      "diff_hunk" : "@@ -483,9 +483,12 @@ static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPool\n     info.pushKV(\"unbroadcast\", pool.IsUnbroadcastTx(tx.GetHash()));\n }\n \n-UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose)\n+UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempool_sequence)\n {\n     if (verbose) {\n+        if (include_mempool_sequence) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Verbose results can not contain mempool sequence values.\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483731693",
      "id" : 483731693,
      "in_reply_to_id" : 483584405,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzczMTY5Mw==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 490,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 482801195,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483731693",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483800992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483800992"
         }
      },
      "author_association" : "MEMBER",
      "body" : "found out why: zmq-less functional test builds. Stuck it inside a pass-through try/except block.",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-04T19:06:11Z",
      "diff_hunk" : "@@ -204,5 +223,284 @@ def test_reorg(self):\n         # And the current tip\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n+    def test_sequence(self):\n+        \"\"\"\n+        Sequence zmq notifications give every blockhash and txhash in order\n+        of processing, regardless of IBD, re-orgs, etc.\n+        Format of messages:\n+        <32-byte hash>C :                 Blockhash connected\n+        <32-byte hash>D :                 Blockhash disconnected\n+        <32-byte hash>R<8-byte LE uint> : Transactionhash removed from mempool for non-block inclusion reason\n+        <32-byte hash>A<8-byte LE uint> : Transactionhash added mempool\n+        \"\"\"\n+        self.log.info(\"Testing 'sequence' publisher\")\n+        import zmq",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r483800992",
      "id" : 483800992,
      "in_reply_to_id" : 483018183,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgwMDk5Mg==",
      "original_commit_id" : "103207ba2e3e11203a5128eff2a7aab08720f140",
      "original_line" : 237,
      "original_position" : 73,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 482885939,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483800992",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@mruddy in case you're interested(I don't know if you're on IRC)",
      "created_at" : "2020-09-04T19:47:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-687347592",
      "id" : 687347592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NzM0NzU5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-04T19:47:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687347592",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-09-05T15:22:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-687625060",
      "id" : 687625060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NzYyNTA2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-05T15:22:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687625060",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased, looks like appveyor and one of the cirrus builds is having the sads",
      "created_at" : "2020-09-05T16:17:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-687631349",
      "id" : 687631349,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NzYzMTM0OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-05T16:17:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687631349",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "You might have to add a suppression, not sure if the tsan failue is a false positive",
      "created_at" : "2020-09-05T17:48:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-687641302",
      "id" : 687641302,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NzY0MTMwMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-05T17:48:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687641302",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Can't seem to replicate locally with tsan.",
      "created_at" : "2020-09-06T21:01:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-687900513",
      "id" : 687900513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NzkwMDUxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-06T21:01:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687900513",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@n-thumann (can't seem to re-request with your stale review, thanks github)",
      "created_at" : "2020-09-08T12:55:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-688846900",
      "id" : 688846900,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4ODg0NjkwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-08T12:55:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688846900",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @n-thumann (can't seem to re-request with your stale review, thanks github)\r\n\r\nre-ACK c2f03fd7b9090ac17299190f118511326483f23c âï¸ ",
      "created_at" : "2020-09-08T17:21:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-689023091",
      "id" : 689023091,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4OTAyMzA5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-08T17:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/689023091",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/46975855?v=4",
         "events_url" : "https://api.github.com/users/n-thumann/events{/privacy}",
         "followers_url" : "https://api.github.com/users/n-thumann/followers",
         "following_url" : "https://api.github.com/users/n-thumann/following{/other_user}",
         "gists_url" : "https://api.github.com/users/n-thumann/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/n-thumann",
         "id" : 46975855,
         "login" : "n-thumann",
         "node_id" : "MDQ6VXNlcjQ2OTc1ODU1",
         "organizations_url" : "https://api.github.com/users/n-thumann/orgs",
         "received_events_url" : "https://api.github.com/users/n-thumann/received_events",
         "repos_url" : "https://api.github.com/users/n-thumann/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/n-thumann/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/n-thumann/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/n-thumann"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485162447"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485162447"
         }
      },
      "author_association" : "MEMBER",
      "body" : "error here while building 712f214\r\n```\r\nzmq/zmqnotificationinterface.cpp: In member function âvirtual void CZMQNotificationInterface::TransactionAddedToMempool(const CTransactionRef&, uint64_t)â:\r\nzmq/zmqnotificationinterface.cpp:167:106: error: no matching function for call to âCZMQAbstractNotifier::NotifyTransactionAcceptance(const CTransaction&, uint64_t&)â\r\n  167 |         if (notifier->NotifyTransaction(tx) && notifier->NotifyTransactionAcceptance(tx, mempool_sequence))\r\n      |                                                                                                          ^\r\nIn file included from ./zmq/zmqpublishnotifier.h:8,\r\n                 from zmq/zmqnotificationinterface.cpp:6:\r\n./zmq/zmqabstractnotifier.h:50:18: note: candidate: âvirtual bool CZMQAbstractNotifier::NotifyTransactionAcceptance(const CTransaction&)â\r\n   50 |     virtual bool NotifyTransactionAcceptance(const CTransaction &transaction);\r\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./zmq/zmqabstractnotifier.h:50:18: note:   candidate expects 1 argument, 2 provided\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-08T19:57:44Z",
      "diff_hunk" : "@@ -156,16 +157,34 @@ void CZMQNotificationInterface::UpdatedBlockTip(const CBlockIndex *pindexNew, co\n     }\n }\n \n-void CZMQNotificationInterface::TransactionAddedToMempool(const CTransactionRef& ptx)\n+void CZMQNotificationInterface::TransactionAddedToMempool(const CTransactionRef& ptx, uint64_t mempool_sequence)\n {\n-    // Used by BlockConnected and BlockDisconnected as well, because they're\n-    // all the same external callback.\n     const CTransaction& tx = *ptx;\n \n     for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n     {\n         CZMQAbstractNotifier *notifier = *i;\n-        if (notifier->NotifyTransaction(tx))\n+        if (notifier->NotifyTransaction(tx) && notifier->NotifyTransactionAcceptance(tx, mempool_sequence))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485162447",
      "id" : 485162447,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2MjQ0Nw==",
      "original_commit_id" : "c2f03fd7b9090ac17299190f118511326483f23c",
      "original_line" : 167,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/zmq/zmqnotificationinterface.cpp",
      "position" : null,
      "pull_request_review_id" : 484450507,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485162447",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485163107"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485163107"
         }
      },
      "author_association" : "MEMBER",
      "body" : "error here while building 712f214\r\n```\r\nvalidation.cpp: In member function âbool {anonymous}::MemPoolAccept::AcceptSingleTransaction(const CTransactionRef&, {anonymous}::MemPoolAccept::ATMPArgs&)â:\r\nvalidation.cpp:1055:60: error: âclass CTxMemPoolâ has no member named âGetAndIncrementSequenceâ\r\n 1055 |     GetMainSignals().TransactionAddedToMempool(ptx, m_pool.GetAndIncrementSequence());\r\n      |                                                            ^~~~~~~~~~~~~~~~~~~~~~~\r\nmake[2]: *** [Makefile:12086: libbitcoin_server_a-validation.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[2]: Leaving directory '/home/jon/projects/bitcoin/bitcoin/src'\r\nmake[1]: *** [Makefile:18955: all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/jon/projects/bitcoin/bitcoin/src'\r\nmake: *** [Makefile:799: all-recursive] Error 1\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-08T19:59:08Z",
      "diff_hunk" : "@@ -1052,7 +1052,7 @@ bool MemPoolAccept::AcceptSingleTransaction(const CTransactionRef& ptx, ATMPArgs\n \n     if (!Finalize(args, workspace)) return false;\n \n-    GetMainSignals().TransactionAddedToMempool(ptx);\n+    GetMainSignals().TransactionAddedToMempool(ptx, m_pool.GetAndIncrementSequence());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485163107",
      "id" : 485163107,
      "line" : 1061,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2MzEwNw==",
      "original_commit_id" : "c2f03fd7b9090ac17299190f118511326483f23c",
      "original_line" : 1061,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 5,
      "pull_request_review_id" : 484450507,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485163107",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "collapsed the two logic commits since it's not that much code and lots of lines changed twice in a row",
      "created_at" : "2020-09-08T20:53:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-689130581",
      "id" : 689130581,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4OTEzMDU4MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-08T20:53:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/689130581",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485409125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485409125"
         }
      },
      "author_association" : "MEMBER",
      "body" : "bb5e3a34 nit sort\r\n```suggestion\r\nfrom test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE, ADDRESS_BCRT1_UNSPENDABLE\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-09T07:50:58Z",
      "diff_hunk" : "@@ -5,13 +5,24 @@\n \"\"\"Test the ZMQ notification interface.\"\"\"\n import struct\n \n-from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE\n+from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE, ADDRESS_BCRT1_P2WSH_OP_TRUE",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485409125",
      "id" : 485409125,
      "line" : 8,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQwOTEyNQ==",
      "original_commit_id" : "4e1cc1d88889784e962e4393091c445b6561df9d",
      "original_line" : 8,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : 5,
      "pull_request_review_id" : 484746842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485409125",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485418468"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485418468"
         }
      },
      "author_association" : "MEMBER",
      "body" : "885212e could you please inverse the order of `txids` and `mempool_sequence` fields here in the help to be the same as the rpc output\r\n\r\n```diff\r\n                         {\r\n-                            {RPCResult::Type::NUM, \"mempool_sequence\", \"The mempool sequence value.\"},\r\n                             {RPCResult::Type::ARR, \"txids\", \"\",\r\n                             {\r\n                                 {RPCResult::Type::STR_HEX, \"\", \"The transaction id\"},\r\n                             }},\r\n+                            {RPCResult::Type::NUM, \"mempool_sequence\", \"The mempool sequence value.\"},\r\n                         }},\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-09T08:06:47Z",
      "diff_hunk" : "@@ -529,6 +544,15 @@ static UniValue getrawmempool(const JSONRPCRequest& request)\n                         {\n                             {RPCResult::Type::OBJ, \"transactionid\", \"\", MempoolEntryDescription()},\n                         }},\n+                    RPCResult{\"for verbose = false and mempool_sequence = true\",\n+                        RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::NUM, \"mempool_sequence\", \"The mempool sequence value.\"},\n+                            {RPCResult::Type::ARR, \"txids\", \"\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485418468",
      "id" : 485418468,
      "line" : 567,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxODQ2OA==",
      "original_commit_id" : "4e1cc1d88889784e962e4393091c445b6561df9d",
      "original_line" : 567,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 58,
      "pull_request_review_id" : 484746842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485418468",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485420962"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485420962"
         }
      },
      "author_association" : "MEMBER",
      "body" : "99a94fe\r\n```suggestion\r\nfrom test_framework.blocktools import add_witness_commitment, create_block, create_coinbase\r\n```",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-09T08:10:58Z",
      "diff_hunk" : "@@ -5,13 +5,24 @@\n \"\"\"Test the ZMQ notification interface.\"\"\"\n import struct\n \n-from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE\n+from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE, ADDRESS_BCRT1_P2WSH_OP_TRUE\n+from test_framework.blocktools import create_block, create_coinbase, add_witness_commitment",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485420962",
      "id" : 485420962,
      "line" : 9,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyMDk2Mg==",
      "original_commit_id" : "4e1cc1d88889784e962e4393091c445b6561df9d",
      "original_line" : 9,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : 6,
      "pull_request_review_id" : 484746842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485420962",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485421242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485421242"
         }
      },
      "author_association" : "MEMBER",
      "body" : "99a94fe nit sort",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-09T08:11:28Z",
      "diff_hunk" : "@@ -5,13 +5,24 @@\n \"\"\"Test the ZMQ notification interface.\"\"\"\n import struct\n \n-from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE\n+from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE, ADDRESS_BCRT1_P2WSH_OP_TRUE\n+from test_framework.blocktools import create_block, create_coinbase, add_witness_commitment\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.messages import CTransaction, hash256\n-from test_framework.util import assert_equal, connect_nodes\n+from test_framework.messages import CTransaction, hash256, FromHex\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    assert_raises_rpc_error,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485421242",
      "id" : 485421242,
      "line" : 15,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyMTI0Mg==",
      "original_commit_id" : "4e1cc1d88889784e962e4393091c445b6561df9d",
      "original_line" : 15,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : 14,
      "pull_request_review_id" : 484746842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485421242",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485648120"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485648120"
         }
      },
      "author_association" : "MEMBER",
      "body" : "done",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-09T14:17:07Z",
      "diff_hunk" : "@@ -529,6 +544,15 @@ static UniValue getrawmempool(const JSONRPCRequest& request)\n                         {\n                             {RPCResult::Type::OBJ, \"transactionid\", \"\", MempoolEntryDescription()},\n                         }},\n+                    RPCResult{\"for verbose = false and mempool_sequence = true\",\n+                        RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::NUM, \"mempool_sequence\", \"The mempool sequence value.\"},\n+                            {RPCResult::Type::ARR, \"txids\", \"\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r485648120",
      "id" : 485648120,
      "in_reply_to_id" : 485418468,
      "line" : 567,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0ODEyMA==",
      "original_commit_id" : "4e1cc1d88889784e962e4393091c445b6561df9d",
      "original_line" : 567,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 58,
      "pull_request_review_id" : 485057100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485648120",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 4baaa89d29057e524a38e120512664ffacce413d per `git range-diff 564e1ab 4e1cc1d 4baaa89`, manually re-ran `getrawmempool` and its help for the fun\r\n\r\nnew help section\r\n```\r\n$ bitcoin-cli -regtest help getrawmempool\r\n\r\nResult (for verbose = false and mempool_sequence = true):\r\n{                            (json object)\r\n  \"txids\" : [                (json array)\r\n    \"hex\",                   (string) The transaction id\r\n    ...\r\n  ],\r\n  \"mempool_sequence\" : n     (numeric) The mempool sequence value.\r\n}\r\n```\r\n\r\ngetrawmempool with mempool_sequence\r\n```\r\n$ bitcoin-cli -regtest getrawmempool false true\r\n{\r\n  \"txids\": [\r\n  ],\r\n  \"mempool_sequence\": 1\r\n}\r\n```\r\ngetrawmempool with bad params combination\r\n```\r\n$ bitcoin-cli -regtest getrawmempool true true\r\nerror code: -8\r\nerror message:\r\nVerbose results cannot contain mempool sequence values.\r\n```",
      "created_at" : "2020-09-10T14:15:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-690318360",
      "id" : 690318360,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MDMxODM2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-10T14:15:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690318360",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r487680478"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487680478"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why is `mempool_sequence` == 0 here?",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-14T06:35:21Z",
      "diff_hunk" : "@@ -1227,7 +1227,7 @@ void CWallet::blockConnected(const CBlock& block, int height)\n     m_last_block_processed = block_hash;\n     for (size_t index = 0; index < block.vtx.size(); index++) {\n         SyncTransaction(block.vtx[index], {CWalletTx::Status::CONFIRMED, height, block_hash, (int)index});\n-        transactionRemovedFromMempool(block.vtx[index], MemPoolRemovalReason::BLOCK);\n+        transactionRemovedFromMempool(block.vtx[index], MemPoolRemovalReason::BLOCK, 0 /* mempool_sequence */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r487680478",
      "id" : 487680478,
      "line" : 1237,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY4MDQ3OA==",
      "original_commit_id" : "4baaa89d29057e524a38e120512664ffacce413d",
      "original_line" : 1237,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 23,
      "pull_request_review_id" : 487451100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487680478",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Had a quick look at the _Bitcoin Core is restarted and transactions are added to the mempool from `mempool.dat`_ case. These are correctly notified, but don't necessary have the same `mempool_sequence` (that's expected). With a `mempool.dat` containing multiple thousand transactions the ZMQ buffer could fill up when using the `DEFAULT_ZMQ_SNDHWM` of 1000 resulting in ZMQ messages being dropped. This is, however, nothing new and can happen with the existing `*tx` ZMQ publishers as well. \r\n\r\nHere, the ZMQ buffers could fill up when multiple thousand transactions are removed from the mempool (this excludes confirmations). This would result in some removal notifications not reaching the external service. But I believe these events to be rare. It's more something a user of the new ZMQ `sequence` endpoint should keep in mind. Not really specific to this PR.",
      "created_at" : "2020-09-14T09:38:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-691941337",
      "id" : 691941337,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MTk0MTMzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-14T09:38:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691941337",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@0xB10C thanks for the review!\r\n\r\n> Discussion about dropped messages\r\n\r\nYes, this is a general problem that can be mostly avoided, and if not the endpoint logic should basically toss what it thinks it knows and restart its tracking.\r\n\r\n> Multipart messages \r\n\r\nI'm not sure if the change alone is worth it for current messages. I think it really shines when there are optional messages, of which we currently have none. Is this a fair assessment? A potential application would be for example we publish optional mempool eviction reasons. I'll review/pocket https://github.com/0xB10C/bitcoin/commit/a06f5c7db6c0e491f150fe5dafb864c15326bb71# for now but if we decide to break format again, I think it's worth inclusion.",
      "created_at" : "2020-09-14T13:53:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-692067791",
      "id" : 692067791,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MjA2Nzc5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-14T13:53:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/692067791",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r487940262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487940262"
         }
      },
      "author_association" : "MEMBER",
      "body" : "it's a required chain interface argument, but the wallet doesn't care/have access to about the mempool sequence value.",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-14T13:55:49Z",
      "diff_hunk" : "@@ -1227,7 +1227,7 @@ void CWallet::blockConnected(const CBlock& block, int height)\n     m_last_block_processed = block_hash;\n     for (size_t index = 0; index < block.vtx.size(); index++) {\n         SyncTransaction(block.vtx[index], {CWalletTx::Status::CONFIRMED, height, block_hash, (int)index});\n-        transactionRemovedFromMempool(block.vtx[index], MemPoolRemovalReason::BLOCK);\n+        transactionRemovedFromMempool(block.vtx[index], MemPoolRemovalReason::BLOCK, 0 /* mempool_sequence */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r487940262",
      "id" : 487940262,
      "in_reply_to_id" : 487680478,
      "line" : 1237,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk0MDI2Mg==",
      "original_commit_id" : "4baaa89d29057e524a38e120512664ffacce413d",
      "original_line" : 1237,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 23,
      "pull_request_review_id" : 487794189,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487940262",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-09-19T09:46:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-695192157",
      "id" : 695192157,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTE5MjE1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-19T09:46:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695192157",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased. No functional changes.",
      "created_at" : "2020-09-21T16:01:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-696211464",
      "id" : 696211464,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NjIxMTQ2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-21T16:01:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/696211464",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r492320345"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492320345"
         }
      },
      "author_association" : "MEMBER",
      "body" : "pico-nit 68b1e612 extra space in last rebase, ignore unless you have to retouch again\r\n",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-21T20:15:18Z",
      "diff_hunk" : "@@ -140,31 +141,53 @@ void CZMQNotificationInterface::UpdatedBlockTip(const CBlockIndex *pindexNew, co\n     });\n }\n \n-void CZMQNotificationInterface::TransactionAddedToMempool(const CTransactionRef& ptx)\n+void CZMQNotificationInterface::TransactionAddedToMempool(const CTransactionRef& ptx,  uint64_t mempool_sequence)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r492320345",
      "id" : 492320345,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMyMDM0NQ==",
      "original_commit_id" : "877f511d7f1f3c37a86c421e21fc0694c387e69f",
      "original_line" : 144,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/zmq/zmqnotificationinterface.cpp",
      "position" : null,
      "pull_request_review_id" : 492947066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492320345",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK https://github.com/bitcoin/bitcoin/commit/877f511d7f1f3c37a86c421e21fc0694c387e69f",
      "created_at" : "2020-09-21T21:29:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-696388223",
      "id" : 696388223,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NjM4ODIyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-21T21:29:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/696388223",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/46975855?v=4",
         "events_url" : "https://api.github.com/users/n-thumann/events{/privacy}",
         "followers_url" : "https://api.github.com/users/n-thumann/followers",
         "following_url" : "https://api.github.com/users/n-thumann/following{/other_user}",
         "gists_url" : "https://api.github.com/users/n-thumann/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/n-thumann",
         "id" : 46975855,
         "login" : "n-thumann",
         "node_id" : "MDQ6VXNlcjQ2OTc1ODU1",
         "organizations_url" : "https://api.github.com/users/n-thumann/orgs",
         "received_events_url" : "https://api.github.com/users/n-thumann/received_events",
         "repos_url" : "https://api.github.com/users/n-thumann/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/n-thumann/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/n-thumann/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/n-thumann"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r492824785"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492824785"
         }
      },
      "author_association" : "MEMBER",
      "body" : "you're in luck, rebasing again. done.",
      "commit_id" : "759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-22T15:21:27Z",
      "diff_hunk" : "@@ -140,31 +141,53 @@ void CZMQNotificationInterface::UpdatedBlockTip(const CBlockIndex *pindexNew, co\n     });\n }\n \n-void CZMQNotificationInterface::TransactionAddedToMempool(const CTransactionRef& ptx)\n+void CZMQNotificationInterface::TransactionAddedToMempool(const CTransactionRef& ptx,  uint64_t mempool_sequence)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#discussion_r492824785",
      "id" : 492824785,
      "in_reply_to_id" : 492320345,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgyNDc4NQ==",
      "original_commit_id" : "877f511d7f1f3c37a86c421e21fc0694c387e69f",
      "original_line" : 144,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/zmq/zmqnotificationinterface.cpp",
      "position" : null,
      "pull_request_review_id" : 493580220,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19572",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-22T15:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/492824785",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased again",
      "created_at" : "2020-09-22T15:36:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-696800943",
      "id" : 696800943,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NjgwMDk0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-22T15:36:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/696800943",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK 759d94e70f6844443106404882c7b105f3a4dba7\r\n\r\nI see a potential confusion between sequence numbers of the individual packets and the \"mempool sequence\" but this is a matter of documentation, I don't have a suggestion for better naming.",
      "created_at" : "2020-09-23T11:53:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-697313899",
      "id" : 697313899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzMxMzg5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T11:53:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697313899",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I see a potential confusion between sequence numbers of the individual packets and the \"mempool sequence\" but this is a matter of documentation, I don't have a suggestion for better naming.\r\n\r\nWilling to entertain any renaming if people think of something better!",
      "created_at" : "2020-09-23T11:58:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-697316021",
      "id" : 697316021,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzMxNjAyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T11:58:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697316021",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 759d94e70f6844443106404882c7b105f3a4dba7",
      "created_at" : "2020-09-23T14:02:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-697404259",
      "id" : 697404259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzQwNDI1OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T14:02:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697404259",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Lovely! Very much look forward to using this.",
      "created_at" : "2020-09-23T14:34:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19572#issuecomment-697455858",
      "id" : 697455858,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19572",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzQ1NTg1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T14:34:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697455858",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/1188286?v=4",
         "events_url" : "https://api.github.com/users/shuckc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/shuckc/followers",
         "following_url" : "https://api.github.com/users/shuckc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/shuckc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/shuckc",
         "id" : 1188286,
         "login" : "shuckc",
         "node_id" : "MDQ6VXNlcjExODgyODY=",
         "organizations_url" : "https://api.github.com/users/shuckc/orgs",
         "received_events_url" : "https://api.github.com/users/shuckc/received_events",
         "repos_url" : "https://api.github.com/users/shuckc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/shuckc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/shuckc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/shuckc"
      }
   }
]
