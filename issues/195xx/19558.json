{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "TLDR: Split pthread flags out of ldflags, and stop using them when building libconsensus.\r\n\r\nBuilding libconsensus on Linux using Clang currently warns. i.e:\r\n```bash\r\n./autogen.sh\r\n./configure --disable-tests --disable-bench --with-utils=no --with-daemon=no --with-gui=no --disable-wallet --with-libs=yes CC=clang CXX=clang++\r\nmake V=1 -j6\r\n... -Wl,-z -Wl,relro -Wl,-z -Wl,now   -pthread -Wl,-soname -Wl,libbitcoinconsensus.so.0 -o .libs/libbitcoinconsensus.so.0.0.0\r\nclang: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]\r\nclang: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]\r\n```\r\n\r\nBesides wanting to quiet the warnings, after digging into this it seemed we could clean up how we are passing around the pthread flags. I also learnt a bit more about how libtools builds shared libraries, and that passing `-pthread` on the link line wouldn't be enough to link against pthreads anyways, due to libtools usage of -nostdlib (see [related discussion where we build DLLs](https://github.com/bitcoin/bitcoin/blob/476436b2dec254bb988f8c7a6cbec1d7bb7cecfd/configure.ac#L603)).\r\n\r\nThis can be demonstrated with a patch to libconsensus:\r\n```patch\r\ndiff --git a/src/script/bitcoinconsensus.cpp b/src/script/bitcoinconsensus.cpp\r\nindex 15e204062..10bf3582f 100644\r\n--- a/src/script/bitcoinconsensus.cpp\r\n+++ b/src/script/bitcoinconsensus.cpp\r\n@@ -10,6 +10,8 @@\r\n #include <script/interpreter.h>\r\n #include <version.h>\r\n \r\n+#include <pthread.h>\r\n+\r\n namespace {\r\n \r\n /** A class that deserializes a single CTransaction one time. */\r\n@@ -127,3 +129,10 @@ unsigned int bitcoinconsensus_version()\r\n     // Just use the API version for now\r\n     return BITCOINCONSENSUS_API_VER;\r\n }\r\n+\r\n+void *func_pthread(void *x) { return x; }\r\n+\r\n+void f() {\r\n+\tpthread_t t;\r\n+\tpthread_create(&t,0,func_pthread,0);\r\n+}\r\n```\r\n\r\nAfter building,  you'll find you have a `libbitcoinconsensus.so` using pthread symbols, but which isn't linked against libpthread:\r\n```bash\r\nldd -r src/.libs/libbitcoinconsensus.so\r\n\tlinux-vdso.so.1 (0x00007ffe49378000)\r\n\tlibstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f553cee7000)\r\n\tlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f553cda2000)\r\n\tlibgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f553cd88000)\r\n\tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f553cbc5000)\r\n\t/lib64/ld-linux-x86-64.so.2 (0x00007f553d15d000)\r\nundefined symbol: pthread_create\t(src/.libs/libbitcoinconsensus.so)\r\n```\r\n\r\nThis libtool behaviour has been known about for some time, i.e this [thread from 2005](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25460),  describes the same issue. The suggestion from libtool maintainers at the time is to add `-lpthread` to LDFLAGS.\r\n\r\nAlso worth noting is that some of the users in those threads were also using the `AX_PTHREADS` macro, same as us, to determine how to compile with/link against pthreads. This macro has [recently been updated](https://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=commitdiff;h=2fb904589643eb6ca6122f834891b58d1d51b347), with reference to this issue. You can compare the output from the version we currently use, to the new version:\r\n```bash\r\n# our ax_pthread macro:\r\n  PTHREAD_CFLAGS = -pthread\r\n  PTHREAD_LIBS  = \r\n  PTHREAD_CC    = gcc / clang\r\n\r\n# the new ax_pthread macro\r\n  PTHREAD_CFLAGS = -pthread\r\n  PTHREAD_LIBS  = -lpthread\r\n  PTHREAD_CC    = gcc / clang\r\n```\r\n\r\nNote that as part of this PR I've also added `PTHREAD_LIBS` to the split out flags. Although we weren't using it anywhere previously (and wouldn't have seemed to matter for the most part, given it was likely empty for most builders), the macro assumes it's use. i.e:\r\n> NOTE: You are assumed to not only compile your program with these flags,\r\n> but also to link with them as well. For example, you might link with\r\n> $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS",
   "closed_at" : "2020-09-15T11:04:56Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 12,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19558/comments",
   "created_at" : "2020-07-20T08:01:22Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19558/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/19558",
   "id" : 661506016,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19558/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NDUzMTcwODM0",
   "number" : 19558,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/19558.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19558",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/19558.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19558"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "build: split pthread flags out of ldflags and dont use when building libconsensus",
   "updated_at" : "2020-09-15T11:04:57Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19558",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
