[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It should be substantially faster and memory friendly for these big txns to\nfill the parents set as a vector of hashes, sort it, use std::unique to\nshift out the duplicates, and then erase garbage.\n\n\nstd::set will do O(n) allocations and use about 3x the memory compared to\nstd::vector, and set traversal and construction is worse than vector.\n\n\nThe only case where set may win is if the duplicate rate was large, but the\nadversarial worst case is better under vector than under set and I suspect\nthe average case (not a big duplicate rate) is better too.\n",
      "created_at" : "2020-07-27T06:43:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664151671",
      "id" : 664151671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDE1MTY3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T06:43:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664151671",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Good ideas. There is the question of using sets for the data structure. The first commit 2898d6505a3 \"Rewrite parent txid loop of requested transactions\" seems to break a number of functional tests for me locally. All the tests pass again after rebasing to keep only the second commit.\r\n\r\n```\r\ninterface_rest.py                       | â Failed  | 35 s\r\nmempool_packages.py                     | â Failed  | 3 s\r\np2p_segwit.py                           | â Failed  | 23 s\r\nrpc_rawtransaction.py                   | â Failed  | 9 s\r\nwallet_avoidreuse.py                    | â Failed  | 6 s\r\nwallet_avoidreuse.py --descriptors      | â Failed  | 7 s\r\nwallet_backup.py                        | â Failed  | 9 s\r\nwallet_balance.py                       | â Failed  | 15 s\r\nwallet_bumpfee.py                       | â Failed  | 5 s\r\nwallet_groups.py                        | â Failed  | 12 s\r\nwallet_listtransactions.py              | â Failed  | 36 s\r\n```",
      "created_at" : "2020-07-27T07:31:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664172214",
      "id" : 664172214,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDE3MjIxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T07:31:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664172214",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19610 (p2p: refactor AlreadyHave(), CInv::type, INV/TX processing by jonatack)\n* #19306 (refactor: Replace RecursiveMutex with Mutex in CTxMemPool by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-07-27T10:34:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664291963",
      "id" : 664291963,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDI5MTk2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-08T21:52:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664291963",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It should be substantially faster and memory friendly for these big txns to fill the parents set as a vector of hashes, sort it, use std::unique to shift out the duplicates, and then erase garbage.\r\n\r\nI think this is just:\r\n\r\n```diff\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2990,10 +2990,12 @@ void ProcessMessage(\r\n \r\n             // Deduplicate parent txids, so that we don't have to loop over\r\n             // the same parent txid more than once down below.\r\n-            std::set<uint256> unique_parents;\r\n+            std::vector<uint256> unique_parents;\r\n+            unique_parents.reserve(tx.vin.size());\r\n             for (const CTxIn& txin : tx.vin) {\r\n-                unique_parents.insert(txin.prevout.hash);\r\n+                unique_parents.push_back(txin.prevout.hash);\r\n             }\r\n+            std::sort(unique_parents.begin(), unique_parents.end());\r\n+            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());\r\n             for (const uint256& parent_txid : unique_parents) {\r\n                 if (recentRejects->contains(parent_txid)) {\r\n                     fRejectedParents = true;\r\n```\r\n\r\nI think I agree the vector/sort/unique approach is better -- temporarily allocating up to twice the space it takes to store the transaction seems fine, and allocating memory at once rather than for each input seems better; but not sure it should matter all that much.\r\n\r\nAlternatively, could maybe do it as:\r\n\r\n```c++\r\n    for (txin : tx.vin) {\r\n        if (recentRejects->contains(txin.prevout.hash)) {\r\n            fRejectedParents = true;\r\n        }\r\n    }\r\n    if (!fRejectedParents && pfrom.m_tx_relay != nullptr) {\r\n        LOCK(pfrom.m_tx_relay->cs_tx_inventory);\r\n        for (txin : tx.vin) {\r\n            if (pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash)) continue;\r\n            if (AlreadyHave(CInv(MSG_TX | nFetchFlags, txin.prevout.hash))) continue;\r\n            pfrom.m_tx_relay->filterInventoryKnown.insert(txin.prevout.hash)\r\n            RequestTx(txin.prevout.hash);\r\n        }\r\n    }\r\n```\r\n\r\nand rely on both recentRejects and filterInventoryKnown lookups being quick enough that duplicates don't matter, and use filterInventoryKnown to ensure the slow ops only get queried once per tx, rather than once per prevout.\r\n\r\n(travis reports a lock order violation btw)",
      "created_at" : "2020-07-27T10:38:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664296550",
      "id" : 664296550,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDI5NjU1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T10:38:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664296550",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks all for the quick review!  @ajtowns I grabbed your code for using a vector instead of a set, and hopefully fixed the lock inversion problem.\r\n\r\n@jonatack I'm surprised by the test failures, is it possible the lock inversion caused that? ",
      "created_at" : "2020-07-27T23:23:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-664687862",
      "id" : 664687862,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDY4Nzg2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T23:23:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664687862",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK 842f908cefc33baea116bb134810fc9ff8a0ea17\r\n\r\nI don't understand where the locking failure is coming from. Is it possibly fixed now?",
      "created_at" : "2020-07-28T18:34:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-665207022",
      "id" : 665207022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTIwNzAyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-28T18:34:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665207022",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't understand where the locking failure is coming from. Is it possibly fixed now?\r\n\r\n@sipa Yes it should be fixed now; when I opened the PR initially, I wasn't letting go of the mempool lock before acquiring the others in the first commit.",
      "created_at" : "2020-07-28T18:48:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-665213776",
      "id" : 665213776,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTIxMzc3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-28T18:48:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665213776",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462733100"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462733100"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: only if need to retouch, separating the `unique` operation from the `erase`, similar to the code example in https://en.cppreference.com/w/cpp/algorithm/unique, seems slightly clearer to me\r\n\r\n```diff\r\n-            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());\r\n+            auto last_unique_parent = std::unique(unique_parents.begin(), unique_parents.end());\r\n+            unique_parents.erase(last_unique_parent, unique_parents.end());\r\n```",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-07-30T04:48:34Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());\n             for (const CTxIn& txin : tx.vin) {\n-                if (recentRejects->contains(txin.prevout.hash)) {\n+                unique_parents.push_back(txin.prevout.hash);\n+            }\n+            std::sort(unique_parents.begin(), unique_parents.end());\n+            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462733100",
      "id" : 462733100,
      "line" : 3003,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjczMzEwMA==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3003,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 50,
      "pull_request_review_id" : 458068431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462733100",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462783746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462783746"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it be better to `reserve()` the capacity of this vector to `tx->vin.size()` here (or even better to `parents.size()` later) to avoid repeated reallocations in the worst case?",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-07-30T07:00:30Z",
      "diff_hunk" : "@@ -1739,16 +1739,26 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             connman.PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(tx->GetHash());\n             // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n-            for (const auto& txin : tx->vin) {\n-                auto txinfo = mempool.info(txin.prevout.hash);\n-                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n-                    // Relaying a transaction with a recent but unconfirmed parent.\n-                    if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash))) {\n-                        LOCK(cs_main);\n-                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);\n+            std::vector<uint256> parent_ids_to_add;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462783746",
      "id" : 462783746,
      "line" : 1737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc4Mzc0Ng==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 1737,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 11,
      "pull_request_review_id" : 458132417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462783746",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462792647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462792647"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think `parents` would be a better name here. They only become unique later once you deduplicate them.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-07-30T07:11:11Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462792647",
      "id" : 462792647,
      "line" : 2997,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc5MjY0Nw==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 2997,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 43,
      "pull_request_review_id" : 458132417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462792647",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462795493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462795493"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I disagree. The remove-erase (or in this case unique-erase) idiom is common in c++. Once you've seen it a couple of times it's clear what it's doing. Plus, unique leaves the last elements of the vector in indeterminate state, so we don't want anyone to be tempted to do anything with it between unique and erase.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-07-30T07:14:29Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());\n             for (const CTxIn& txin : tx.vin) {\n-                if (recentRejects->contains(txin.prevout.hash)) {\n+                unique_parents.push_back(txin.prevout.hash);\n+            }\n+            std::sort(unique_parents.begin(), unique_parents.end());\n+            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462795493",
      "id" : 462795493,
      "in_reply_to_id" : 462733100,
      "line" : 3003,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc5NTQ5Mw==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3003,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 50,
      "pull_request_review_id" : 458132417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462795493",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462798675"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462798675"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This might be an over-optimization, but I expect that transactions which contain multiple inputs from the same parent may group those inputs together. If that's true, then checking the prevout hash against the last element of `unique_parents` would prevent us from adding duplicates in many cases.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-07-30T07:20:47Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());\n             for (const CTxIn& txin : tx.vin) {\n-                if (recentRejects->contains(txin.prevout.hash)) {\n+                unique_parents.push_back(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462798675",
      "id" : 462798675,
      "line" : 3000,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc5ODY3NQ==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3000,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 47,
      "pull_request_review_id" : 458132417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462798675",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462801556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462801556"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since you're already touching this line, maybe we could remove `nFetchFlags` here.\r\n\r\n`AlreadyHave()` and `RequestTx()` don't do anything differently depending on whether the CInv is an MSG_TX or MSG_WITNESSTX, so adding the `MSG_WITNESS_FLAG` is useless here. (the same is true for the `nFetchFlags` in the INV processing in ProcessMessages).\r\n\r\nPerhaps best left for a different PR.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-07-30T07:26:30Z",
      "diff_hunk" : "@@ -2991,14 +3011,14 @@ void ProcessMessage(\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 if (!State(pfrom.GetId())->m_wtxid_relay) {\n-                    for (const CTxIn& txin : tx.vin) {\n+                    for (const uint256& parent_txid : unique_parents) {\n                         // Here, we only have the txid (and not wtxid) of the\n                         // inputs, so we only request parents from\n                         // non-wtxid-relay peers.\n                         // Eventually we should replace this with an improved\n                         // protocol for getting all unconfirmed parents.\n-                        CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                        pfrom.AddKnownTx(txin.prevout.hash);\n+                        CInv _inv(MSG_TX | nFetchFlags, parent_txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462801556",
      "id" : 462801556,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgwMTU1Ng==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3020,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 458132417,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462801556",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462852804"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462852804"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Interesting point. If not done before, #19611 touches `nFetchFlags` while refactoring the INV processing in ProcessMessages (to take CInv::type private) and I can look at/update it there.",
      "commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "created_at" : "2020-07-30T08:57:33Z",
      "diff_hunk" : "@@ -2991,14 +3011,14 @@ void ProcessMessage(\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 if (!State(pfrom.GetId())->m_wtxid_relay) {\n-                    for (const CTxIn& txin : tx.vin) {\n+                    for (const uint256& parent_txid : unique_parents) {\n                         // Here, we only have the txid (and not wtxid) of the\n                         // inputs, so we only request parents from\n                         // non-wtxid-relay peers.\n                         // Eventually we should replace this with an improved\n                         // protocol for getting all unconfirmed parents.\n-                        CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                        pfrom.AddKnownTx(txin.prevout.hash);\n+                        CInv _inv(MSG_TX | nFetchFlags, parent_txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462852804",
      "id" : 462852804,
      "in_reply_to_id" : 462801556,
      "line" : 3020,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg1MjgwNA==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3020,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 67,
      "pull_request_review_id" : 458213961,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-30T08:57:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462852804",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462853312"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462853312"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fair.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-07-30T08:58:24Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());\n             for (const CTxIn& txin : tx.vin) {\n-                if (recentRejects->contains(txin.prevout.hash)) {\n+                unique_parents.push_back(txin.prevout.hash);\n+            }\n+            std::sort(unique_parents.begin(), unique_parents.end());\n+            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r462853312",
      "id" : 462853312,
      "in_reply_to_id" : 462733100,
      "line" : 3003,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg1MzMxMg==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3003,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 50,
      "pull_request_review_id" : 458214723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462853312",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery Overhead of a set over a vector is the size of 3 pointers and an int (for red black tree structure), plus 2 pointers (for malloc overhead), and that rounded up to the next multiple of 2 pointers' worth.\n\nFor 64-bit systems that means between 48 and 63 bytes overhead.",
      "created_at" : "2020-07-30T16:06:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-666491932",
      "id" : 666491932,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjQ5MTkzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T16:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666491932",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @sipa!",
      "created_at" : "2020-07-30T16:21:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-666503220",
      "id" : 666503220,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjUwMzIyMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T16:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666503220",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r463155654"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463155654"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "concept nack this one: I agree that this might be a good heuristic, but how commonly does a single wallet have multiple payments from the same parent? The need to compare an extra O(N) times would probably be slower than sorting & removing the extra elements anyways. We've already allocated the memory, may as well use it!\r\n\r\nIf this does come up as a big common case, the approach I'd take is to call std::unique/erase before sorting and after sorting. I suspect this would be faster because all the data is inline at this point and we don't have to contend with branch mispredictions while filling the vector.\r\n\r\nBut I think it's overkill :)",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-07-30T17:26:20Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());\n             for (const CTxIn& txin : tx.vin) {\n-                if (recentRejects->contains(txin.prevout.hash)) {\n+                unique_parents.push_back(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r463155654",
      "id" : 463155654,
      "in_reply_to_id" : 462798675,
      "line" : 3000,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1NTY1NA==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3000,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 47,
      "pull_request_review_id" : 458609401,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463155654",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r463160275"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463160275"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's definitely clear. The only thing that would be a bit better is if instead of erasing, we just range over a Span(beigin, unique_it) because then we can do the erasing when the unique_parents vector is dropped. But I think that hash is trivially destructible, so not clear that erase will specialize with any overhead as there is no destructor to call. In any case, we only *actually* erase anything if there are duplicates, which I think is sufficiently rare of a case (but we still need to handle it correctly) that I'm not worried there would be much to erase.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-07-30T17:34:40Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());\n             for (const CTxIn& txin : tx.vin) {\n-                if (recentRejects->contains(txin.prevout.hash)) {\n+                unique_parents.push_back(txin.prevout.hash);\n+            }\n+            std::sort(unique_parents.begin(), unique_parents.end());\n+            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r463160275",
      "id" : 463160275,
      "in_reply_to_id" : 462733100,
      "line" : 3003,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE2MDI3NQ==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3003,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 50,
      "pull_request_review_id" : 458615273,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463160275",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If that's not clear for anyone reading along, because I frequently have to re-check this logic...\r\n\r\nthe implementation we assume for std::set is a red black tree, with a layout of:\r\n```c++\r\ntemplate <typename T>\r\nstruct node {\r\nint color;\r\nvoid* parent;\r\nvoid* left;\r\nvoid* right;\r\nT element;\r\n}\r\n```\r\nThis sums to 8 bytes * 4 (int has 4 bytes padding) = 32 bytes of overhead, no extra alignment for T required (unless there's some external alignment requirement > 32). But in std::set, every node is individually alloc'd with malloc (as opposed to using an arena, which would reduce overhead). Malloc typically requires an extra 16 bytes of data (but can be higher or lower platform dependent, not counting whatever other internal bookkeeping memory overhead heap may required?), and then pads out the allocation to a 16 byte boundary. If you look at MallocUsage, it's `((s + 31) >> 4 <<4)`, but the 31 is really +16 (for malloc metadata) and `+15 >>4 <<4` for the padding.\r\n\r\nThis means that for a 32 byte hash, you need an estimated 80 bytes per element in a std::set (so 2.5x, a bit better than 3x, but still excessive). The main issue IMO is less so the memory and more so the calls to malloc itself. E.g., if vector used 2x memory and std::set used 1x memory, it still might be preferable to use the vector to avoid N calls to malloc.",
      "created_at" : "2020-07-30T17:47:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-666559300",
      "id" : 666559300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjU1OTMwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T17:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666559300",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @JeremyRubin! Very interesting.",
      "created_at" : "2020-07-30T22:15:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-666738950",
      "id" : 666738950,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjczODk1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T22:15:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666738950",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Has `unordered_set` been evaluated?",
      "created_at" : "2020-07-31T00:51:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-666847359",
      "id" : 666847359,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2Njg0NzM1OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T00:51:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666847359",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "unordered_set... ah the promise of O(1) accesses. I don't think it makes sense to do here since N is small. Here's my overall thinking:\r\n\r\nThis piece of code isn't exactly *adversarial*. Whatever algorithm we pick -- sorting or hash tabling, is going to be good enough. This is mostly about picking something with good average runtime and acceptable worst case runtime, and preferably low memory on average.\r\n\r\nFor unordered_set we use about 72 bytes per entry (32 bytes, 1 pointer, padded out to 64 bytes, and then 8 more for the buckets), and still need do O(n) allocations (unless we do a custom arena allocator, then we can save it!). Then we get an implementation that will be O(N) instead of O(N log N). However I think the largest N is about 100kb/40b (largest standard txn divided by size of input), so we're looking at about 2,500 inputs, and log2(2500) is about 11. However, if you think about sorting a vector of bytearrays, I think that should be pretty performant compared to all the pointer chasing, hashing, and allocating that a hash map will make you do. And in the common case, which is smaller numbers of inputs, the log N will matter less.\r\n\r\nSo I think a plain hash map, which better big O, is going to be worse on average and not much better worst case, if any better at all.\r\n\r\n\r\nif you did want to make a simple competitive algorithm for doing this based on hash sets, here's what I would do:\r\n\r\n1) allocate a std::vector 8x the size of the number of inputs in *bits* and a vector for N elements\r\n2) get 5 x 12 bits of entropy for each entry, and check and set the bit in the vector for each by using the projecting trick.\r\n   a. If all 5 bits are already set, insert the item into a std::set<uint256> or std::unordered_set<uint256> named likely_dups.\r\n   b. otherwise, push back element onto the vector\r\n3) iterate over the vector removing anything in the set (quit if set empty)\r\n4) extend the end of the vector with whatever is left in the set\r\n\r\nThis algorithm is correct because every item with no perfect overlapped bits in the set is unique. So by step 3, the vector is unique, and the std::unordered_set has all the likely non unique entries (but is also, conveniently, unique). We then attempt to remove from the set every element in the vector, guaranteeing the set only has what's not in the vector. Then we add those to the vector, and the vector contains all unique elements from the original vector of elems.\r\n\r\nHowever this algorithm works really nicely for the expected case (no colliding) because we only have to make 2 malloc calls and emplace everything into our vector after checking the filter (which should have low prob of collision), so it should be pretty speedy! And in the case where there are a lot of duplicates, we don't end up allocating that much memory in the likely set because they are duplicated! The worst case is where every element has exactly 1 duplicate, then we end up doing extra work.\r\n\r\nHowever, this is a lot of work to do and get right so I think the sort remove technique is fine.",
      "created_at" : "2020-07-31T04:50:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-666918300",
      "id" : 666918300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjkxODMwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T04:50:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666918300",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r463535872"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463535872"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yep, agree that this is overoptimization.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-07-31T10:34:53Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());\n             for (const CTxIn& txin : tx.vin) {\n-                if (recentRejects->contains(txin.prevout.hash)) {\n+                unique_parents.push_back(txin.prevout.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r463535872",
      "id" : 463535872,
      "in_reply_to_id" : 462798675,
      "line" : 3000,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzNTg3Mg==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3000,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 47,
      "pull_request_review_id" : 459077925,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463535872",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-07-31T13:23:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-667117419",
      "id" : 667117419,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzExNzQxOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T13:23:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667117419",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r464456865"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464456865"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Since you're already touching this line, maybe we could remove `nFetchFlags` here.\r\n> \r\n> `AlreadyHave()` and `RequestTx()` don't do anything differently depending on whether the CInv is an MSG_TX or MSG_WITNESSTX, so adding the `MSG_WITNESS_FLAG` is useless here. (the same is true for the `nFetchFlags` in the INV processing in ProcessMessages).\r\n> \r\n> Perhaps best left for a different PR.\r\n\r\nThanks @jnewbery, am looking at removing these in #19611.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-08-03T14:39:17Z",
      "diff_hunk" : "@@ -2991,14 +3011,14 @@ void ProcessMessage(\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 if (!State(pfrom.GetId())->m_wtxid_relay) {\n-                    for (const CTxIn& txin : tx.vin) {\n+                    for (const uint256& parent_txid : unique_parents) {\n                         // Here, we only have the txid (and not wtxid) of the\n                         // inputs, so we only request parents from\n                         // non-wtxid-relay peers.\n                         // Eventually we should replace this with an improved\n                         // protocol for getting all unconfirmed parents.\n-                        CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                        pfrom.AddKnownTx(txin.prevout.hash);\n+                        CInv _inv(MSG_TX | nFetchFlags, parent_txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r464456865",
      "id" : 464456865,
      "in_reply_to_id" : 462801556,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1Njg2NQ==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3020,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 460082971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464456865",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r465142403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465142403"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed unused `nFetchFlags` from ProcessMessages TX and INV processing in #19611.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-08-04T15:36:10Z",
      "diff_hunk" : "@@ -2991,14 +3011,14 @@ void ProcessMessage(\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 if (!State(pfrom.GetId())->m_wtxid_relay) {\n-                    for (const CTxIn& txin : tx.vin) {\n+                    for (const uint256& parent_txid : unique_parents) {\n                         // Here, we only have the txid (and not wtxid) of the\n                         // inputs, so we only request parents from\n                         // non-wtxid-relay peers.\n                         // Eventually we should replace this with an improved\n                         // protocol for getting all unconfirmed parents.\n-                        CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                        pfrom.AddKnownTx(txin.prevout.hash);\n+                        CInv _inv(MSG_TX | nFetchFlags, parent_txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r465142403",
      "id" : 465142403,
      "in_reply_to_id" : 462801556,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE0MjQwMw==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3020,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 460932617,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465142403",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r465221973"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465221973"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Leaving this alone, thanks.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-08-04T17:44:17Z",
      "diff_hunk" : "@@ -2991,14 +3011,14 @@ void ProcessMessage(\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 if (!State(pfrom.GetId())->m_wtxid_relay) {\n-                    for (const CTxIn& txin : tx.vin) {\n+                    for (const uint256& parent_txid : unique_parents) {\n                         // Here, we only have the txid (and not wtxid) of the\n                         // inputs, so we only request parents from\n                         // non-wtxid-relay peers.\n                         // Eventually we should replace this with an improved\n                         // protocol for getting all unconfirmed parents.\n-                        CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n-                        pfrom.AddKnownTx(txin.prevout.hash);\n+                        CInv _inv(MSG_TX | nFetchFlags, parent_txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r465221973",
      "id" : 465221973,
      "in_reply_to_id" : 462801556,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyMTk3Mw==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 3020,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 461033250,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465221973",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r465231032"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465231032"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a comment instead, since the first thing we do is deduplicate, and then we use this as a list of unique_parents later on.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-08-04T18:00:00Z",
      "diff_hunk" : "@@ -2980,8 +2990,18 @@ void ProcessMessage(\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n             bool fRejectedParents = false; // It may be the case that the orphans parents have all been rejected\n+\n+            // Deduplicate parent txids, so that we don't have to loop over\n+            // the same parent txid more than once down below.\n+            std::vector<uint256> unique_parents;\n+            unique_parents.reserve(tx.vin.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r465231032",
      "id" : 465231032,
      "in_reply_to_id" : 462792647,
      "line" : 2997,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIzMTAzMg==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 2997,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 43,
      "pull_request_review_id" : 461044725,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T18:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465231032",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r465231434"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465231434"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Practically speaking the worst case here is pretty small, but sure I did the reserve() thing with parents.size().",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-08-04T18:00:41Z",
      "diff_hunk" : "@@ -1739,16 +1739,26 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             connman.PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(tx->GetHash());\n             // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n-            for (const auto& txin : tx->vin) {\n-                auto txinfo = mempool.info(txin.prevout.hash);\n-                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n-                    // Relaying a transaction with a recent but unconfirmed parent.\n-                    if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash))) {\n-                        LOCK(cs_main);\n-                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);\n+            std::vector<uint256> parent_ids_to_add;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r465231434",
      "id" : 465231434,
      "in_reply_to_id" : 462783746,
      "line" : 1737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIzMTQzNA==",
      "original_commit_id" : "842f908cefc33baea116bb134810fc9ff8a0ea17",
      "original_line" : 1737,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 11,
      "pull_request_review_id" : 461045215,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T18:00:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465231434",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and addressed @jnewbery's feedback.",
      "created_at" : "2020-08-04T19:52:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-668792982",
      "id" : 668792982,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2ODc5Mjk4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-04T19:52:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668792982",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r466145042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466145042"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's probably fine in practice, and it's not a regression in this PR, but locking and unlocking cs_tx_inventory and cs_main (potentially) for each parent kind of bugs me each time I look at it, so I had a go at trying to avoid it. Came up with:\r\n\r\n```c++\r\n{\r\n    LOCK(pfrom.m_tx_relay->cs_tx_inventory);\r\n    auto is_known = [&](uint256& parent_txid) EXCLUSIVE_LOCKS_REQUIRED(pfrom.m_tx_relay->cs_tx_inventory) { return pfrom.m_tx_relay->filterInventoryKnown.contains(parent_txid); };\r\n    parent_ids_to_add.erase(std::remove_if(parent_ids_to_add.begin(), parent_ids_to_add.end(), is_known), parent_ids_to_add.end());\r\n}\r\nif (!parent_ids_to_add.empty()) {\r\n    LOCK(cs_main);\r\n    for (const uint256& parent_txid : parent_ids_to_add) {\r\n        // Relaying a transaction with a recent but unconfirmed parent.\r\n        State(pfrom.GetId())->m_recently_announced_invs.insert(parent_txid);\r\n    }\r\n}\r\n```",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-08-06T04:52:47Z",
      "diff_hunk" : "@@ -1734,16 +1734,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             connman.PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(tx->GetHash());\n             // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n-            for (const auto& txin : tx->vin) {\n-                auto txinfo = mempool.info(txin.prevout.hash);\n-                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n-                    // Relaying a transaction with a recent but unconfirmed parent.\n-                    if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash))) {\n-                        LOCK(cs_main);\n-                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);\n+            std::vector<uint256> parent_ids_to_add;\n+            {\n+                LOCK(mempool.cs);\n+                auto txiter = mempool.GetIter(tx->GetHash());\n+                if (txiter) {\n+                    const CTxMemPool::setEntries& parents = mempool.GetMemPoolParents(*txiter);\n+                    parent_ids_to_add.reserve(parents.size());\n+                    for (CTxMemPool::txiter parent_iter : parents) {\n+                        if (parent_iter->GetTime() > now - UNCONDITIONAL_RELAY_DELAY) {\n+                            parent_ids_to_add.push_back(parent_iter->GetTx().GetHash());\n+                        }\n                     }\n                 }\n             }\n+            for (const uint256& parent_txid : parent_ids_to_add) {\n+                // Relaying a transaction with a recent but unconfirmed parent.\n+                if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(parent_txid))) {\n+                    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r466145042",
      "id" : 466145042,
      "line" : 1754,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE0NTA0Mg==",
      "original_commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "original_line" : 1754,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 28,
      "pull_request_review_id" : 462186108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T04:57:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466145042",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r466450840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466450840"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Calling `State()` to iterate over every peer for every input txid also seems wasteful, especially since we're already in a loop over all getdata items. I think better would be:\r\n\r\n```\r\n            if (!parent_ids_to_add.empty()) {\r\n                LOCK(cs_main);\r\n                CNodeState* node = State(pfrom.GetId());\r\n                for (const uint256& parent_txid : parent_ids_to_add) {\r\n                    // Relaying a transaction with a recent but unconfirmed parent.\r\n                    node->m_recently_announced_invs.insert(parent_txid);\r\n                }\r\n            }\r\n```\r\n\r\nI also don't understand the benefit of adding the clang lock annotation to the lambda. It's only in scope here, so it's never going to be called from somewhere else without `pfrom.m_tx_relay->cs_tx_inventory` being held.\r\n\r\nAll of this locking/unlocking of multiple mutexes goes away once peer data is consolidated into a single `Peer` object.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-08-06T14:24:30Z",
      "diff_hunk" : "@@ -1734,16 +1734,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             connman.PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(tx->GetHash());\n             // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n-            for (const auto& txin : tx->vin) {\n-                auto txinfo = mempool.info(txin.prevout.hash);\n-                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n-                    // Relaying a transaction with a recent but unconfirmed parent.\n-                    if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash))) {\n-                        LOCK(cs_main);\n-                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);\n+            std::vector<uint256> parent_ids_to_add;\n+            {\n+                LOCK(mempool.cs);\n+                auto txiter = mempool.GetIter(tx->GetHash());\n+                if (txiter) {\n+                    const CTxMemPool::setEntries& parents = mempool.GetMemPoolParents(*txiter);\n+                    parent_ids_to_add.reserve(parents.size());\n+                    for (CTxMemPool::txiter parent_iter : parents) {\n+                        if (parent_iter->GetTime() > now - UNCONDITIONAL_RELAY_DELAY) {\n+                            parent_ids_to_add.push_back(parent_iter->GetTx().GetHash());\n+                        }\n                     }\n                 }\n             }\n+            for (const uint256& parent_txid : parent_ids_to_add) {\n+                // Relaying a transaction with a recent but unconfirmed parent.\n+                if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(parent_txid))) {\n+                    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r466450840",
      "id" : 466450840,
      "in_reply_to_id" : 466145042,
      "line" : 1754,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ1MDg0MA==",
      "original_commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "original_line" : 1754,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 28,
      "pull_request_review_id" : 462569891,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T14:24:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466450840",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r466544580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466544580"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I started to do this, but this doesn't exactly add to the readability of the code; can we punt on this to some future refactor, especially if we think existing refactors under way would change all this anyway?  \r\n\r\nIn practice there should be more than 25 unconfirmed parents anyway, and I wouldn't expect much lock contention either.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-08-06T16:43:27Z",
      "diff_hunk" : "@@ -1734,16 +1734,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             connman.PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(tx->GetHash());\n             // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n-            for (const auto& txin : tx->vin) {\n-                auto txinfo = mempool.info(txin.prevout.hash);\n-                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n-                    // Relaying a transaction with a recent but unconfirmed parent.\n-                    if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash))) {\n-                        LOCK(cs_main);\n-                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);\n+            std::vector<uint256> parent_ids_to_add;\n+            {\n+                LOCK(mempool.cs);\n+                auto txiter = mempool.GetIter(tx->GetHash());\n+                if (txiter) {\n+                    const CTxMemPool::setEntries& parents = mempool.GetMemPoolParents(*txiter);\n+                    parent_ids_to_add.reserve(parents.size());\n+                    for (CTxMemPool::txiter parent_iter : parents) {\n+                        if (parent_iter->GetTime() > now - UNCONDITIONAL_RELAY_DELAY) {\n+                            parent_ids_to_add.push_back(parent_iter->GetTx().GetHash());\n+                        }\n                     }\n                 }\n             }\n+            for (const uint256& parent_txid : parent_ids_to_add) {\n+                // Relaying a transaction with a recent but unconfirmed parent.\n+                if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(parent_txid))) {\n+                    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r466544580",
      "id" : 466544580,
      "in_reply_to_id" : 466145042,
      "line" : 1754,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0NDU4MA==",
      "original_commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "original_line" : 1754,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 28,
      "pull_request_review_id" : 462691632,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T16:43:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466544580",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r466609070"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466609070"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Definitely seems fine to punt it to me",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-08-06T18:34:22Z",
      "diff_hunk" : "@@ -1734,16 +1734,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             connman.PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(tx->GetHash());\n             // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n-            for (const auto& txin : tx->vin) {\n-                auto txinfo = mempool.info(txin.prevout.hash);\n-                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n-                    // Relaying a transaction with a recent but unconfirmed parent.\n-                    if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash))) {\n-                        LOCK(cs_main);\n-                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);\n+            std::vector<uint256> parent_ids_to_add;\n+            {\n+                LOCK(mempool.cs);\n+                auto txiter = mempool.GetIter(tx->GetHash());\n+                if (txiter) {\n+                    const CTxMemPool::setEntries& parents = mempool.GetMemPoolParents(*txiter);\n+                    parent_ids_to_add.reserve(parents.size());\n+                    for (CTxMemPool::txiter parent_iter : parents) {\n+                        if (parent_iter->GetTime() > now - UNCONDITIONAL_RELAY_DELAY) {\n+                            parent_ids_to_add.push_back(parent_iter->GetTx().GetHash());\n+                        }\n                     }\n                 }\n             }\n+            for (const uint256& parent_txid : parent_ids_to_add) {\n+                // Relaying a transaction with a recent but unconfirmed parent.\n+                if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(parent_txid))) {\n+                    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r466609070",
      "id" : 466609070,
      "in_reply_to_id" : 466145042,
      "line" : 1754,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwOTA3MA==",
      "original_commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "original_line" : 1754,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 28,
      "pull_request_review_id" : 462777848,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T18:34:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466609070",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r466610313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466610313"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@jnewbery Accessing guarded data structures in a lambda means the lambda needs to be annotated with the required lock (or an AssertLockHeld or LockAssertion added cf #19668), or there will be compile time thread safety errors. Doesn't matter how limited the lambda's scope is.",
      "commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "created_at" : "2020-08-06T18:36:47Z",
      "diff_hunk" : "@@ -1734,16 +1734,27 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             connman.PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n             mempool.RemoveUnbroadcastTx(tx->GetHash());\n             // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n-            for (const auto& txin : tx->vin) {\n-                auto txinfo = mempool.info(txin.prevout.hash);\n-                if (txinfo.tx && txinfo.m_time > now - UNCONDITIONAL_RELAY_DELAY) {\n-                    // Relaying a transaction with a recent but unconfirmed parent.\n-                    if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(txin.prevout.hash))) {\n-                        LOCK(cs_main);\n-                        State(pfrom.GetId())->m_recently_announced_invs.insert(txin.prevout.hash);\n+            std::vector<uint256> parent_ids_to_add;\n+            {\n+                LOCK(mempool.cs);\n+                auto txiter = mempool.GetIter(tx->GetHash());\n+                if (txiter) {\n+                    const CTxMemPool::setEntries& parents = mempool.GetMemPoolParents(*txiter);\n+                    parent_ids_to_add.reserve(parents.size());\n+                    for (CTxMemPool::txiter parent_iter : parents) {\n+                        if (parent_iter->GetTime() > now - UNCONDITIONAL_RELAY_DELAY) {\n+                            parent_ids_to_add.push_back(parent_iter->GetTx().GetHash());\n+                        }\n                     }\n                 }\n             }\n+            for (const uint256& parent_txid : parent_ids_to_add) {\n+                // Relaying a transaction with a recent but unconfirmed parent.\n+                if (WITH_LOCK(pfrom.m_tx_relay->cs_tx_inventory, return !pfrom.m_tx_relay->filterInventoryKnown.contains(parent_txid))) {\n+                    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#discussion_r466610313",
      "id" : 466610313,
      "in_reply_to_id" : 466145042,
      "line" : 1754,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYxMDMxMw==",
      "original_commit_id" : "4c0731f9c50b0556f8a57b912c8f295c7a9ea89c",
      "original_line" : 1754,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 28,
      "pull_request_review_id" : 462779448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19596",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T18:36:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466610313",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK 4c0731f9c50b0556f8a57b912c8f295c7a9ea89c\r\n",
      "created_at" : "2020-08-10T18:37:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19596#issuecomment-671520330",
      "id" : 671520330,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19596",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTUyMDMzMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T18:37:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671520330",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
