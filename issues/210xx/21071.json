{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "There has been incredible work implementing descriptor wallets, PSBTs, offline signing, HWWs; and GUI support for it all into Bitcoin Core.  It has been incredibly exciting to watch!\r\n\r\nMy goal is to financially support developers to implement offline multisignature wallets into Bitcoin Core.  I believe we are almost there.\r\n\r\nI am here to humbly try to attempt to describe what I see, as a user and through talks with other developers, as the work that is needed to implement secure, offline multisignature wallets in Bitcoin Core.\r\n\r\n1) A standard for Coordinating Multisignature Wallets, with an authentication scheme.  This is being discussed [here](https://github.com/bitcoin/bitcoin/issues/18142).\r\n\r\nBlockchainCommons has done a lot of work around this:\r\n\r\nOnline Node Coordinator sends a 'Policy Request' to Offline Co-Signers, if acceptable, co-signers send a 'Keyset', and then get an 'Account Map' back.\r\n\r\nPolicy Request = empty descriptor\r\n\r\nKeyset = BIP48 path\r\n\r\nAccount Map = descriptor w/ no xprvs in it\r\n\r\nAND/OR\r\n\r\nCo-Signers send array of descriptors for all script types ([BCR-2020-015](https://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-015-account.md)) to Coordinator, Coordinator selects necessary descriptor and creates wallet, then sends 'Account Map' back.\r\n\r\nConcerns:  lack of complete standardization.  use of BIP48.  Names still up in the air.\r\n\r\n@Sjors also discussed the possibility of a 'Wallet Composer File' that could compose a wallet interactively, use future-proof syntax (can the signer decompile miniscript?), and support other capabilities.  Not sure how much work has been done on this.\r\n\r\n1 A)  The authentication:\r\n\r\nJust trust on first use, with warnings if data changes?  @benma has done great research and reporting on this:\r\n\r\nTo receive securely, the offline signers need to be able to verify the following:\r\n\r\n> The receive address, which has to encode the hash of an ordinary multisig redeem script with no other spending conditions\r\n> The key of the hardware wallet, which has to be one of the public keys in the redeem script\r\n> The keypath of the displayed address in order to avoid ransom attacks if no restrictions are enforced by the hardware wallet\r\n> The number of cosigners in order to prevent an attacker from adding more\r\n> The threshold of required signatures to not be higher or lower than intended\r\n> The xpubs of the cosigners in order to prevent an attacker from swapping them\r\n\r\nThe above is written for hardware wallets, but I believe any BIP written and code implemented should be for both HWWs and offline Core wallets.  With descriptor wallets, I believe a lot of the above authentication can be automated by the info in the Account Map that all offline co-signers have.\r\n\r\nTo send securely, the offline signers need to be able to verify the following:\r\n\r\n> The recipientâs address, displayed and confirmed by the user like with singlesig\r\n> The change address, having the same cosigners and threshold in an ordinary multisig script with no other spending conditions\r\n> The change goes to an address at a keypath recoverable by the user\r\n\r\nI think all the above is very important, since there have been many instances of devices not properly implementing the above security measures, so having a BIP for devices/software to comply with would be important.\r\n\r\n\r\n@Sjors and @achow101 have been doing a ton of work integrating HWWs.  This looks like it will be merged soon: (https://github.com/bitcoin/bitcoin/pull/16546).  After that, the UI will be worked on (https://github.com/bitcoin-core/gui/pull/4), and there is a currently-closed PR for HWW multisig functionality on top (https://github.com/bitcoin/bitcoin/pull/16895).  Perhaps some of this code can be re-used for multisig with Core on offline computers, but I am not sure.\r\n\r\nI believe having this ability would be an extensive security gain (being able to create a multisig wallet with Core on offline computers through the GUI).\r\n\r\n\r\n2)  Represent multiple derivation paths with one descriptor (https://github.com/bitcoin/bitcoin/issues/17190)\r\n\r\nSingle descriptors make creating, backing up, and restoring multisignature wallets much simpler.  For example:\r\n\r\nTo create a multisignature wallet in Bitcoin Core, you can currently:\r\n\r\n1. Create wallet\r\n2. Dump `hdseed`\r\n3. Create address, dump xpriv\r\n4. Repeat Steps 1-3 N times\r\n5. Create multisig wallet using descriptor containing all N xprvs (M of N multisig)\r\n6. Use the N `hdseed`s along with Account Map as backup\r\n\r\nHowever, the above wallet can not create change addresses.  You need to create (backup and restore) a second descriptor for change addresses, even though most of the descriptor is the same, except for the derivation path at the end.  This can be very time consuming/confusing for end users, especially when backing up by paper/hand.\r\n\r\nFor a comprehensive offline multisignature wallet, I believe this change needs to be implemented.  Currently in Yeti, we bypass this by recommending coin control and only sending entire UTXO's (which is a pretty bad user experience and short term solution we have chosen).\r\n\r\nSome users like setting custom change descriptors (for example, for sending to an application for mixing change) so I believe this should be able to be done behind expert options, and perhaps this makes a single descriptor less controversial.\r\n\r\n\r\n3)  QR code scanner (https://github.com/bitcoin/bitcoin/issues/9913)\r\n\r\nQR codes are the most secure way to pass data between airgapped signers.  I currently have a $300 bounty on implementing this.  BlockchainCommons has a standard ([BCR-2020-005](https://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-005-ur.md)) that is compatible with PSBTs (multiple QR codes checksummed; or a single animated QR code), and has a C++ reference implementation (https://github.com/BlockchainCommons/bc-ur).\r\n\r\n\r\n4)  After the above (1-3) is finished, I believe implementing offline multisignature wallets into Bitcoin Core will be possible.\r\n\r\nI am not trying to influence consensus (this should just be wallet code), and ultimately it is of course up to the developers and the community if these are changes that are good for Bitcoin, and if the above is how it should be implemented.  I am just trying to put all the thoughts/discussions down in one place.\r\n\r\n\r\nDevelopers who might be interested:\r\n\r\n@Sjors @gwillen @instagibbs @achow101 \r\n\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nI, Robert Spigler, am offering a $1,500 bounty for implementing 1, 2, 3, and 4 (standard for coordination of co-signers, single descriptors, QR codes, and offline multisignature wallets) in Bitcoin Core.\r\n\r\nThis does not include the already existing $300 bounty for #3 (QR codes).\r\n\r\nThe bounty will be split between developers as I see most fair (author and substantial reviews/discussions).\r\n\r\nThe bounty has no expiration and will be paid in bitcoin.\r\n\r\nThe date is 2021-02-02.\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCgAdFiEEf4WKHNGE9pWzsby0UsewL8eQ8/AFAmAaJz0ACgkQUsewL8eQ\r\n8/CVqw//ZOQkDabWlYxqcf669FqvsWRK/q/mNidaBor9gVwFiXZsBP1j7knGgpvZ\r\nWCpek6JpMU4b1ZA2jobbSAKcaEarUiBRMVoXWnHmeg0igJmNhZyhL9D4lvy1kUBd\r\n3F8KhqZ0yIlAzGRWu6+CKOVlTMQFwS/giAgoWeQCa8a4Nx0WjbhtyMWvXQmXlbnJ\r\n7zjN3nfJDi7CYxMGGyfnLLJSCdUGt205PIwphwI9OR2TJVwfl6rRLR1rzakCHOOa\r\nzvd6Ud0mGCHiJMvlWv5Qyk6KGm4O9XTVPYWU9DkWq1Jahv4MtZvb+n1DsgT6ZQxF\r\ngNZVOp+iuigEmgWe1Qw8wsiWjubJrVBhWcg3cFfchmRYefMo6+53RCYM8+VnbYEm\r\nVFts1rmMtLex8UTfrXX4FAla1WdPhlNFCNIlNnabBMTrck7WUTQdO07eNc6kI/wz\r\nQXBAbuLqIp3FEhLcsv9oZQIkQmtAwN2235aN+B0J7bFLaegBg2E+Ur3lIlDPKZvo\r\nU1r+NgDfNf9ZkA8rKJxRENCH5o46SbxI6gPYVTVY8NAy8pj2RFcGMYg1a0DEW1G2\r\nzy/3/4Umud5Mr92ggkJWbKKe7HWqypYEXWhc+vo5fOoCY5XTJza0hOyiW+5vHKMM\r\nYGS81OAQfIV/MJFffSJ581uU6th1s+7g9nWjeT9vGqTSJbNd1P4=\r\n=Xm2a\r\n-----END PGP SIGNATURE-----\r\n",
   "closed_at" : "2022-04-19T12:21:52Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/24482484?v=4",
      "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
      "followers_url" : "https://api.github.com/users/Rspigler/followers",
      "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
      "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/Rspigler",
      "id" : 24482484,
      "login" : "Rspigler",
      "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
      "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
      "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
      "repos_url" : "https://api.github.com/users/Rspigler/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/Rspigler"
   },
   "comments" : 11,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21071/comments",
   "created_at" : "2021-02-03T04:38:01Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21071/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/21071",
   "id" : 799960424,
   "labels" : [
      {
         "color" : "7cf575",
         "default" : false,
         "description" : null,
         "id" : 64583,
         "name" : "Feature",
         "node_id" : "MDU6TGFiZWw2NDU4Mw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21071/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU3OTk5NjA0MjQ=",
   "number" : 21071,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 7,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 1,
      "rocket" : 0,
      "total_count" : 8,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21071/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21071/timeline",
   "title" : "~~$1,500 Bounty for Offline Multisignature through the GUI~~ View #24861",
   "updated_at" : "2022-04-19T12:21:52Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21071",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/24482484?v=4",
      "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
      "followers_url" : "https://api.github.com/users/Rspigler/followers",
      "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
      "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/Rspigler",
      "id" : 24482484,
      "login" : "Rspigler",
      "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
      "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
      "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
      "repos_url" : "https://api.github.com/users/Rspigler/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/Rspigler"
   }
}
