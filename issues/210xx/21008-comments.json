[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20892 (tests: Run both descriptor and legacy tests within a single test invocation by achow101)\n* #20267 (Disable and fix tests for when BDB is not compiled by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-01-26T09:33:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#issuecomment-767419966",
      "id" : 767419966,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21008",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2NzQxOTk2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-29T02:04:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/767419966",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Asked to mark this as draft since the test now fails on two cirrus instances. Have to investigate deeper what the problem is and how to properly reproduce it... locally 1000 test runs passed successfully.",
      "created_at" : "2021-01-26T11:09:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#issuecomment-767472907",
      "id" : 767472907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21008",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2NzQ3MjkwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-26T11:09:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/767472907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "You might want to try with `--valgrind`, which makes races more likely to happen locally",
      "created_at" : "2021-01-26T11:33:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#issuecomment-767484513",
      "id" : 767484513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21008",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2NzQ4NDUxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-26T11:33:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/767484513",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke: Thanks, that helped a lot! On master, running via `--valgrind` leads to a failed test run quite quickly on my machine.\r\n\r\nThe PR is ready for review now. The problem of my original approach was that most tests needed nodes 0 and 1 to have the same tip. So, after this robust \"sync up\" setup approach of repeatedly generating blocks, node 1 has to catch up. Added a parameter \"sync_blocks\" for that purpose, as for the last test, the chains are already different and synchronization is not possible in a trivial way. Now, I had locally a few hundred test runs with `--valgrind` and all of them passed.\r\nAlso adapted the PR description to include a script, that reviewers can use to test the robustness.\r\n",
      "created_at" : "2021-01-27T19:54:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#issuecomment-768537851",
      "id" : 768537851,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21008",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2ODUzNzg1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-27T19:58:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/768537851",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, will be great to robustify this test.\r\n\r\nSo far your script has run the test 25 times without errors for me (other than an unrelated issue that the test runner `--valgrind` option raises for me in general (not just on this test), but `valgrind test/functional/interface_zmq.py` works fine).\r\n\r\n```\r\n------------------------\r\n----- test run 25 -----\r\n------------------------\r\n==42527== Memcheck, a memory error detector\r\n==42527== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==42527== Using Valgrind-3.16.0.GIT and LibVEX; rerun with -h for copyright info\r\n==42527== Command: test/functional/interface_zmq.py\r\n==42527== \r\n2021-01-28T18:10:51.208000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_i65ciqkh\r\n2021-01-28T18:10:54.197000Z TestFramework (INFO): Generate 5 blocks (and 5 coinbase txes)\r\n2021-01-28T18:10:55.327000Z TestFramework (INFO): Wait for tx from second node\r\n2021-01-28T18:10:56.502000Z TestFramework (INFO): Test the getzmqnotifications RPC\r\n2021-01-28T18:10:56.505000Z TestFramework (INFO): Testing 'sequence' publisher\r\n2021-01-28T18:10:57.900000Z TestFramework (INFO): Wait for tx from second node\r\n2021-01-28T18:10:59.026000Z TestFramework (INFO): Testing sequence notifications with mempool sequence values\r\n2021-01-28T18:10:59.027000Z TestFramework (INFO): Testing RBF notification\r\n2021-01-28T18:11:26.168000Z TestFramework (INFO): Testing reorg notifications\r\n2021-01-28T18:11:29.256000Z TestFramework (INFO): Evict mempool transaction by block conflict\r\n2021-01-28T18:11:30.558000Z TestFramework (INFO): Testing 'mempool sync' usage of sequence notifier\r\n2021-01-28T18:11:53.212000Z TestFramework (INFO): Stopping nodes\r\n2021-01-28T18:11:53.469000Z TestFramework (INFO): Cleaning up /tmp/bitcoin_func_test_i65ciqkh on exit\r\n2021-01-28T18:11:53.470000Z TestFramework (INFO): Tests successful\r\n------------------------\r\n----- test run 26 -----\r\n------------------------\r\n```\r\n\r\n<details><summary>unrelated error with --valgrind test runner option</summary><p>\r\n\r\n```\r\n------------------------\r\n----- test run 1 -----\r\n------------------------\r\n2021-01-28T17:22:07.128000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_awm_44bl\r\n2021-01-28T17:22:34.997000Z TestFramework (ERROR): Unexpected exception caught during testing\r\nTraceback (most recent call last):\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/authproxy.py\", line 108, in _request\r\n    return self._get_response()\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/authproxy.py\", line 168, in _get_response\r\n    http_response = self.__conn.getresponse()\r\n  File \"/usr/lib/python3.9/http/client.py\", line 1347, in getresponse\r\n    response.begin()\r\n  File \"/usr/lib/python3.9/http/client.py\", line 307, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/usr/lib/python3.9/http/client.py\", line 276, in _read_status\r\n    raise RemoteDisconnected(\"Remote end closed connection without\"\r\nhttp.client.RemoteDisconnected: Remote end closed connection without response\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 125, in main\r\n    self.setup()\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 262, in setup\r\n    self.setup_network()\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 356, in setup_network\r\n    self.setup_nodes()\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 383, in setup_nodes\r\n    self.import_deterministic_coinbase_privkeys()\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 400, in import_deterministic_coinbase_privkeys\r\n    self.init_wallet(i)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 407, in init_wallet\r\n    n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_node.py\", line 676, in createwallet\r\n    return self.__getattr__('createwallet')(wallet_name, disable_private_keys, blank, passphrase, avoid_reuse, descriptors, load_on_startup)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/authproxy.py\", line 144, in __call__\r\n    response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/authproxy.py\", line 113, in _request\r\n    self.__conn.request(method, path, postdata, headers)\r\n  File \"/usr/lib/python3.9/http/client.py\", line 1255, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.9/http/client.py\", line 1301, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.9/http/client.py\", line 1250, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.9/http/client.py\", line 1010, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib/python3.9/http/client.py\", line 950, in send\r\n    self.connect()\r\n  File \"/usr/lib/python3.9/http/client.py\", line 921, in connect\r\n    self.sock = self._create_connection(\r\n  File \"/usr/lib/python3.9/socket.py\", line 843, in create_connection\r\n    raise err\r\n  File \"/usr/lib/python3.9/socket.py\", line 831, in create_connection\r\n    sock.connect(sa)\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n2021-01-28T17:22:35.049000Z TestFramework (INFO): Stopping nodes\r\n2021-01-28T17:22:35.050000Z TestFramework.node0 (ERROR): Unable to stop node.\r\nTraceback (most recent call last):\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_node.py\", line 320, in stop_node\r\n    self.stop(wait=wait)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/authproxy.py\", line 144, in __call__\r\n    response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/authproxy.py\", line 107, in _request\r\n    self.__conn.request(method, path, postdata, headers)\r\n  File \"/usr/lib/python3.9/http/client.py\", line 1255, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.9/http/client.py\", line 1266, in _send_request\r\n    self.putrequest(method, url, **skips)\r\n  File \"/usr/lib/python3.9/http/client.py\", line 1092, in putrequest\r\n    raise CannotSendRequest(self.__state)\r\nhttp.client.CannotSendRequest: Request-sent\r\nTraceback (most recent call last):\r\n  File \"/home/jon/projects/bitcoin/bitcoin/./test/functional/interface_zmq.py\", line 529, in <module>\r\n    ZMQTest().main()\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 149, in main\r\n    exit_code = self.shutdown()\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 278, in shutdown\r\n    self.stop_nodes()\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 525, in stop_nodes\r\n    node.stop_node(wait=wait, wait_until_stopped=False)\r\n  File \"/home/jon/projects/bitcoin/bitcoin/test/functional/test_framework/test_node.py\", line 334, in stop_node\r\n    raise AssertionError(\"Unexpected stderr {} != {}\".format(stderr, expected_stderr))\r\nAssertionError: Unexpected stderr ==37264== Thread 10 b-httpworker.3:\r\n==37264== Conditional jump or move depends on uninitialised value(s)\r\n==37264==    at 0xB0DEC5: __log_putr.isra.2 (in /home/jon/projects/bitcoin/bitcoin/src/bitcoind)\r\n==37264==    by 0xB0F090: __log_put (in /home/jon/projects/bitcoin/bitcoin/src/bitcoind)\r\n==37264==    by 0xB99C1D: __crdel_metasub_log (in /home/jon/projects/bitcoin/bitcoin/src/bitcoind)\r\n==37264==    by 0xAD526A: __db_log_page (in /home/jon/projects/bitcoin/bitcoin/src/bitcoind)\r\n==37264==    by 0xB4068A: __bam_new_subdb (in /home/jon/projects/bitcoin/bitcoin/src/bitcoind)\r\n==37264==    by 0xAE7A6D: __db_init_subdb (in /home/jon/projects/bitcoin/bitcoin/src/bitcoind)\r\n==37264==    by 0xB044ED: __fop_subdb_setup (in /home/jon/projects/bitcoin/bitcoin/src/bitcoind)\r\n==37264==    by 0xAE6EB0: __db_open (in /home/jon/projects/bitcoin/bitcoin/src/bitcoind)\r\n==37264==    by 0xAE1719: __db_open_pp (in /home/jon/projects/bitcoin/bitcoin/src/bitcoind)\r\n==37264==    by 0xAC1D3A: Db::open(DbTxn*, char const*, char const*, DBTYPE, unsigned int, int) (in /home/jon/projects/bitcoin/bitcoin/src/bitcoind)\r\n==37264==    by 0x873618: BerkeleyDatabase::Open() (bdb.cpp:345)\r\n==37264==    by 0x873184: BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase&, bool, bool) (bdb.cpp:308)\r\n==37264== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:__log_putr.isra.2\r\n   fun:__log_put\r\n   fun:__crdel_metasub_log\r\n   fun:__db_log_page\r\n   fun:__bam_new_subdb\r\n   fun:__db_init_subdb\r\n   fun:__fop_subdb_setup\r\n   fun:__db_open\r\n   fun:__db_open_pp\r\n   fun:_ZN2Db4openEP5DbTxnPKcS3_6DBTYPEji\r\n   fun:_ZN16BerkeleyDatabase4OpenEv\r\n   fun:_ZN13BerkeleyBatchC1ER16BerkeleyDatabasebb\r\n}\r\n==37264== \r\n==37264== Exit program on first error (--exit-on-first-error=yes) != \r\n[node 1] Cleaning up leftover process\r\n[node 0] Cleaning up leftover process\r\n```\r\n</p></details>\r\n",
      "created_at" : "2021-01-28T18:10:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#issuecomment-769274857",
      "id" : 769274857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21008",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2OTI3NDg1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-28T18:13:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/769274857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566331714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566331714"
         }
      },
      "author_association" : "MEMBER",
      "body" : "c02f9a188 maybe general-case it with the existing explanation in `wallet_avoidreuse.py`\r\n```python\r\n        # This test isn't testing txn relay/timing, so set whitelist on the\r\n        # peers for instant txn relay. This speeds up the test run time 2-3x.\r\n        self.extra_args = [[\"-whitelist=noban@127.0.0.1\"]] * self.num_nodes\r\n```",
      "commit_id" : "ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0",
      "created_at" : "2021-01-28T18:53:36Z",
      "diff_hunk" : "@@ -62,6 +65,8 @@ def receive_sequence(self):\n class ZMQTest (BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n+        # immediate tx relay (node1 -> node0)\n+        self.extra_args = [[], [\"-whitelist=noban@127.0.0.1\"]]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566331714",
      "id" : 566331714,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjMzMTcxNA==",
      "original_commit_id" : "c02f9a188268e6c19b5c96d62de20fb5d53f8960",
      "original_line" : 69,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 578643128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T22:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566331714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566336615"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566336615"
         }
      },
      "author_association" : "MEMBER",
      "body" : "a8ddb26150 I didn't understand why we disconnect here only to connect again on returning to the two callers for which the default `sync_blocks=true`.",
      "commit_id" : "ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0",
      "created_at" : "2021-01-28T19:01:42Z",
      "diff_hunk" : "@@ -82,23 +87,46 @@ def run_test(self):\n \n     # Restart node with the specified zmq notifications enabled, subscribe to\n     # all of them and return the corresponding ZMQSubscriber objects.\n-    def setup_zmq_test(self, services, recv_timeout=60, connect_nodes=False):\n+    def setup_zmq_test(self, services, recv_timeout=60, sync_blocks=True):\n         subscribers = []\n         for topic, address in services:\n             socket = self.ctx.socket(zmq.SUB)\n-            socket.set(zmq.RCVTIMEO, recv_timeout*1000)\n             subscribers.append(ZMQSubscriber(socket, topic.encode()))\n \n         self.restart_node(0, [\"-zmqpub%s=%s\" % (topic, address) for topic, address in services])\n \n-        if connect_nodes:\n-            self.connect_nodes(0, 1)\n-\n         for i, sub in enumerate(subscribers):\n             sub.socket.connect(services[i][1])\n \n-        # Relax so that the subscribers are ready before publishing zmq messages\n-        sleep(0.2)\n+        # Ensure that all zmq publisher notification interfaces are ready by\n+        # running the following \"sync up\" procedure:\n+        #   1. Generate a block on the node\n+        #   2. Try to receive a notification on all subscribers\n+        #   3. If all subscribers get a message within the timeout (1 second),\n+        #      we are done, otherwise repeat starting from step 1\n+        for sub in subscribers:\n+            sub.socket.set(zmq.RCVTIMEO, 1000)\n+        while True:\n+            self.nodes[0].generate(1)\n+            recv_failed = False\n+            for sub in subscribers:\n+                try:\n+                    sub.receive()\n+                except zmq.error.Again:\n+                    self.log.debug(\"Didn't receive sync-up notification, trying again.\")\n+                    recv_failed = True\n+            if not recv_failed:\n+                self.log.debug(\"ZMQ sync-up completed, all subscribers are ready.\")\n+                break\n+\n+        # set subscriber's desired timeout for the test\n+        for sub in subscribers:\n+            sub.socket.set(zmq.RCVTIMEO, recv_timeout*1000)\n+\n+        if sync_blocks:\n+            self.connect_nodes(0, 1)\n+            self.sync_blocks()\n+            self.disconnect_nodes(0, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566336615",
      "id" : 566336615,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjMzNjYxNQ==",
      "original_commit_id" : "c02f9a188268e6c19b5c96d62de20fb5d53f8960",
      "original_line" : 129,
      "original_position" : 100,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 578643128,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T22:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566336615",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566517474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566517474"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Agree that this was unnecessarily complicated. Changed the setup routine to _always_ connect nodes 0 and 1 (which is needed for the block sync anways, that is used in every subtest except the last one) and disconnect in the subtest if necessary. ",
      "commit_id" : "ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0",
      "created_at" : "2021-01-29T01:21:21Z",
      "diff_hunk" : "@@ -82,23 +87,46 @@ def run_test(self):\n \n     # Restart node with the specified zmq notifications enabled, subscribe to\n     # all of them and return the corresponding ZMQSubscriber objects.\n-    def setup_zmq_test(self, services, recv_timeout=60, connect_nodes=False):\n+    def setup_zmq_test(self, services, recv_timeout=60, sync_blocks=True):\n         subscribers = []\n         for topic, address in services:\n             socket = self.ctx.socket(zmq.SUB)\n-            socket.set(zmq.RCVTIMEO, recv_timeout*1000)\n             subscribers.append(ZMQSubscriber(socket, topic.encode()))\n \n         self.restart_node(0, [\"-zmqpub%s=%s\" % (topic, address) for topic, address in services])\n \n-        if connect_nodes:\n-            self.connect_nodes(0, 1)\n-\n         for i, sub in enumerate(subscribers):\n             sub.socket.connect(services[i][1])\n \n-        # Relax so that the subscribers are ready before publishing zmq messages\n-        sleep(0.2)\n+        # Ensure that all zmq publisher notification interfaces are ready by\n+        # running the following \"sync up\" procedure:\n+        #   1. Generate a block on the node\n+        #   2. Try to receive a notification on all subscribers\n+        #   3. If all subscribers get a message within the timeout (1 second),\n+        #      we are done, otherwise repeat starting from step 1\n+        for sub in subscribers:\n+            sub.socket.set(zmq.RCVTIMEO, 1000)\n+        while True:\n+            self.nodes[0].generate(1)\n+            recv_failed = False\n+            for sub in subscribers:\n+                try:\n+                    sub.receive()\n+                except zmq.error.Again:\n+                    self.log.debug(\"Didn't receive sync-up notification, trying again.\")\n+                    recv_failed = True\n+            if not recv_failed:\n+                self.log.debug(\"ZMQ sync-up completed, all subscribers are ready.\")\n+                break\n+\n+        # set subscriber's desired timeout for the test\n+        for sub in subscribers:\n+            sub.socket.set(zmq.RCVTIMEO, recv_timeout*1000)\n+\n+        if sync_blocks:\n+            self.connect_nodes(0, 1)\n+            self.sync_blocks()\n+            self.disconnect_nodes(0, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566517474",
      "id" : 566517474,
      "in_reply_to_id" : 566336615,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjUxNzQ3NA==",
      "original_commit_id" : "c02f9a188268e6c19b5c96d62de20fb5d53f8960",
      "original_line" : 129,
      "original_position" : 100,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 578872587,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T22:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566517474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566520087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566520087"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, I like the clear explanation and used it. My initial reason for not using the whitelist parameter on all nodes was that for node0 they would be overwritten in the setup routine. But simply adding `self.extra_args[0]` to the extra_args parameter for the `restart_node` call also tackles this.",
      "commit_id" : "ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0",
      "created_at" : "2021-01-29T01:29:04Z",
      "diff_hunk" : "@@ -62,6 +65,8 @@ def receive_sequence(self):\n class ZMQTest (BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n+        # immediate tx relay (node1 -> node0)\n+        self.extra_args = [[], [\"-whitelist=noban@127.0.0.1\"]]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566520087",
      "id" : 566520087,
      "in_reply_to_id" : 566331714,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjUyMDA4Nw==",
      "original_commit_id" : "c02f9a188268e6c19b5c96d62de20fb5d53f8960",
      "original_line" : 69,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 578875540,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T22:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566520087",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed with changes suggested by @jonatack (https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566331714 and https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566336615).",
      "created_at" : "2021-01-29T01:32:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#issuecomment-769512370",
      "id" : 769512370,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21008",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2OTUxMjM3MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-29T01:32:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/769512370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566907134"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566907134"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, can enforce named args with \r\n```suggestion\r\n    def setup_zmq_test(self, services, *, recv_timeout=60, sync_blocks=True):\r\n```\r\nor alternatively for all args\r\n```diff\r\n@@ -88,7 +88,7 @@ class ZMQTest (BitcoinTestFramework):\r\n \r\n     # Restart node with the specified zmq notifications enabled, subscribe to\r\n     # all of them and return the corresponding ZMQSubscriber objects.\r\n-    def setup_zmq_test(self, services, recv_timeout=60, sync_blocks=True):\r\n+    def setup_zmq_test(self, *, services, recv_timeout=60, sync_blocks=True):\r\n         subscribers = []\r\n         for topic, address in services:\r\n             socket = self.ctx.socket(zmq.SUB)\r\n@@ -137,7 +137,7 @@ class ZMQTest (BitcoinTestFramework):\r\n         self.restart_node(0, [\"-zmqpubrawtx=foo\", \"-zmqpubhashtx=bar\"])\r\n \r\n         address = 'tcp://127.0.0.1:28332'\r\n-        subs = self.setup_zmq_test([(topic, address) for topic in [\"hashblock\", \"hashtx\", \"rawblock\", \"rawtx\"]])\r\n+        subs = self.setup_zmq_test(services=[(topic, address) for topic in [\"hashblock\", \"hashtx\", \"rawblock\", \"rawtx\"]])\r\n \r\n         hashblock = subs[0]\r\n         hashtx = subs[1]\r\n@@ -212,7 +212,7 @@ class ZMQTest (BitcoinTestFramework):\r\n \r\n         # Should only notify the tip if a reorg occurs\r\n         hashblock, hashtx = self.setup_zmq_test(\r\n-            [(topic, address) for topic in [\"hashblock\", \"hashtx\"]],\r\n+            services=[(topic, address) for topic in [\"hashblock\", \"hashtx\"]],\r\n             recv_timeout=2)  # 2 second timeout to check end of notifications\r\n         self.disconnect_nodes(0, 1)\r\n \r\n@@ -262,7 +262,7 @@ class ZMQTest (BitcoinTestFramework):\r\n         <32-byte hash>A<8-byte LE uint> : Transactionhash added mempool\r\n         \"\"\"\r\n         self.log.info(\"Testing 'sequence' publisher\")\r\n-        [seq] = self.setup_zmq_test([(\"sequence\", \"tcp://127.0.0.1:28333\")])\r\n+        [seq] = self.setup_zmq_test(services=[(\"sequence\", \"tcp://127.0.0.1:28333\")])\r\n         self.disconnect_nodes(0, 1)\r\n \r\n         # Mempool sequence number starts at 1\r\n@@ -414,7 +414,7 @@ class ZMQTest (BitcoinTestFramework):\r\n             return\r\n \r\n         self.log.info(\"Testing 'mempool sync' usage of sequence notifier\")\r\n-        [seq] = self.setup_zmq_test([(\"sequence\", \"tcp://127.0.0.1:28333\")])\r\n+        [seq] = self.setup_zmq_test(services=[(\"sequence\", \"tcp://127.0.0.1:28333\")])\r\n \r\n         # In-memory counter, should always start at 1\r\n         next_mempool_seq = self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"]\r\n@@ -514,7 +514,7 @@ class ZMQTest (BitcoinTestFramework):\r\n \r\n     def test_multiple_interfaces(self):\r\n         # Set up two subscribers with different addresses\r\n-        subscribers = self.setup_zmq_test([\r\n+        subscribers = self.setup_zmq_test(services=[\r\n             (\"hashblock\", \"tcp://127.0.0.1:28334\"),\r\n             (\"hashblock\", \"tcp://127.0.0.1:28335\"),\r\n         ], sync_blocks=False)\r\n```\r\n",
      "commit_id" : "ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0",
      "created_at" : "2021-01-29T15:38:24Z",
      "diff_hunk" : "@@ -82,23 +88,46 @@ def run_test(self):\n \n     # Restart node with the specified zmq notifications enabled, subscribe to\n     # all of them and return the corresponding ZMQSubscriber objects.\n-    def setup_zmq_test(self, services, recv_timeout=60, connect_nodes=False):\n+    def setup_zmq_test(self, services, recv_timeout=60, sync_blocks=True):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566907134",
      "id" : 566907134,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjkwNzEzNA==",
      "original_commit_id" : "9a9453d35be5e6d24e14f75c911428a5dbbd2b30",
      "original_line" : 91,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 579371202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T22:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566907134",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566908151"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566908151"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit, maybe add a comment clarifying why sync_blocks must be false (the test hangs without it)",
      "commit_id" : "ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0",
      "created_at" : "2021-01-29T15:39:53Z",
      "diff_hunk" : "@@ -488,7 +517,7 @@ def test_multiple_interfaces(self):\n         subscribers = self.setup_zmq_test([\n             (\"hashblock\", \"tcp://127.0.0.1:28334\"),\n             (\"hashblock\", \"tcp://127.0.0.1:28335\"),\n-        ])\n+        ], sync_blocks=False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566908151",
      "id" : 566908151,
      "line" : 525,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjkwODE1MQ==",
      "original_commit_id" : "9a9453d35be5e6d24e14f75c911428a5dbbd2b30",
      "original_line" : 525,
      "original_position" : 147,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : 153,
      "pull_request_review_id" : 579371202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T22:57:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566908151",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-02-05T15:16:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#issuecomment-774095164",
      "id" : 774095164,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21008",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NDA5NTE2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-05T15:16:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/774095164",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r573309757"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573309757"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, I decided for the first variant, i.e. enforcing named args for `recv_timeout` and `sync_blocks`.",
      "commit_id" : "ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0",
      "created_at" : "2021-02-09T23:00:51Z",
      "diff_hunk" : "@@ -82,23 +88,46 @@ def run_test(self):\n \n     # Restart node with the specified zmq notifications enabled, subscribe to\n     # all of them and return the corresponding ZMQSubscriber objects.\n-    def setup_zmq_test(self, services, recv_timeout=60, connect_nodes=False):\n+    def setup_zmq_test(self, services, recv_timeout=60, sync_blocks=True):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r573309757",
      "id" : 573309757,
      "in_reply_to_id" : 566907134,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzMwOTc1Nw==",
      "original_commit_id" : "9a9453d35be5e6d24e14f75c911428a5dbbd2b30",
      "original_line" : 91,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : null,
      "pull_request_review_id" : 587096855,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T23:00:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573309757",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r573309850"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573309850"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, done.",
      "commit_id" : "ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0",
      "created_at" : "2021-02-09T23:01:03Z",
      "diff_hunk" : "@@ -488,7 +517,7 @@ def test_multiple_interfaces(self):\n         subscribers = self.setup_zmq_test([\n             (\"hashblock\", \"tcp://127.0.0.1:28334\"),\n             (\"hashblock\", \"tcp://127.0.0.1:28335\"),\n-        ])\n+        ], sync_blocks=False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#discussion_r573309850",
      "id" : 573309850,
      "in_reply_to_id" : 566908151,
      "line" : 525,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzMwOTg1MA==",
      "original_commit_id" : "9a9453d35be5e6d24e14f75c911428a5dbbd2b30",
      "original_line" : 525,
      "original_position" : 147,
      "original_start_line" : null,
      "path" : "test/functional/interface_zmq.py",
      "position" : 153,
      "pull_request_review_id" : 587096945,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21008",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T23:01:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/573309850",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed with a rebase on master and suggestions by jonatack (https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566907134 and https://github.com/bitcoin/bitcoin/pull/21008#discussion_r566908151).",
      "created_at" : "2021-02-09T23:02:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21008#issuecomment-776302267",
      "id" : 776302267,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21008",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NjMwMjI2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-09T23:02:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/776302267",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   }
]
