[
   {
      "author_association" : "MEMBER",
      "body" : "> may be unsafe to use, when coupled with a range of glibc versions ~2.26->2.29, which may block our adoption and the removal of Boost Thread.\r\n\r\n*plugs #18110*\r\n\r\nEdit: with regard to `shared_mutex` specifically, these are the only uses, of which one is in the tests:\r\n```\r\nsrc/script/sigcache.cpp:#include <boost/thread/shared_mutex.hpp>\r\nsrc/script/sigcache.cpp:    boost::shared_mutex cs_sigcache;\r\nsrc/script/sigcache.cpp:        boost::shared_lock<boost::shared_mutex> lock(cs_sigcache);\r\nsrc/script/sigcache.cpp:        boost::unique_lock<boost::shared_mutex> lock(cs_sigcache);\r\nsrc/test/cuckoocache_tests.cpp:    boost::shared_mutex mtx;\r\nsrc/test/cuckoocache_tests.cpp:        boost::unique_lock<boost::shared_mutex> l(mtx);\r\nsrc/test/cuckoocache_tests.cpp:            boost::shared_lock<boost::shared_mutex> l(mtx);\r\nsrc/test/cuckoocache_tests.cpp:    boost::unique_lock<boost::shared_mutex> l(mtx);\r\n```\r\nCan't we get rid of it? That's resolve this particular issue at least (though not the wider discussion around glibc versions).",
      "created_at" : "2021-01-28T17:42:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21022#issuecomment-769256957",
      "id" : 769256957,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2OTI1Njk1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-28T17:45:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/769256957",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> _plugs #18110_\r\n\r\nI know this is really pushing it, but I don't think it's _totally_ crazy to consider vendoring musl in the very long term (not now).\r\n\r\nCertainly building against it for releases is worth considering.\r\n\r\n> Can't we get rid of it? That's resolve this particular issue at least (though not the wider discussion around glibc versions).\r\n\r\nWithout looking at the code (assuming it wouldn't require a redesign), this seems like a reasonable temporary punt. It also seems reasonable to me to worry that boost hits the same underlying glibc bug, and we've just not happened to trigger the right conditions yet.\r\n\r\nShared locks are _really_ handy to have sometimes, though, so we'll definitely want a path back to enabling them if we take that route. @fanquake's approach here makes perfect sense to me in that regard.",
      "created_at" : "2021-01-28T18:09:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21022#issuecomment-769274179",
      "id" : 769274179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2OTI3NDE3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-28T18:10:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/769274179",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > Can't we get rid of it? That's resolve this particular issue at least (though not the wider discussion around glibc versions).\r\n\r\n> Without looking at the code (assuming it wouldn't require a redesign), this seems like a reasonable temporary punt. \r\n\r\nI think this is actually very reasonable. The shared_mutex in the sigcache was introduced in ef0f422519de4a3ce47d923e5f8f90cd12349f3e. @sipa's commit log:\r\n\r\n>     Remove contention on signature cache during block validation\r\n>    \r\n>     Since block validation happens in parallel, multiple threads may be\r\n>     accessing the signature cache simultaneously. To prevent contention:\r\n>     * Turn the signature cache lock into a shared mutex\r\n>     * Make reading from the cache only acquire a shared lock\r\n>     * Let block validations not store their results in the cache\r\n\r\nI believe that since #10192 was merged, block validation will now very rarely use the signature cache. From that PR:\r\n\r\n> This is somewhat duplicative with the sigcache, as entries in the\r\n> new cache will also have several entries in the sigcache. However,\r\n> the sigcache is kept both as ATMP relies on it and because it\r\n> prevents malleability-based DoS attacks on the new higher-level\r\n> cache. Instead, the -sigcachesize option is re-used - cutting the\r\n> sigcache size in half and using the newly freed memory for the\r\n> script execution cache.\r\n\r\nIf the only use for sigcache is now in ATMP (which is single-threaded and requires cs_main), then changing this to a simple mutex wouldn't have any impact on performance. I don't understand the \"prevents malleability-based DoS attacks on the new higher-level cache\" part of @TheBlueMatt's description so I may be missing something subtle here.",
      "created_at" : "2021-02-02T10:45:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21022#issuecomment-771545658",
      "id" : 771545658,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MTU0NTY1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-02T10:45:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/771545658",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing this now that #21064 has been merged, however I think there is still scope for us to increase our runtime sanity checks going forward. Will propose some other changes.",
      "created_at" : "2021-02-15T07:51:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21022#issuecomment-779024913",
      "id" : 779024913,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21022",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3OTAyNDkxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-15T07:51:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/779024913",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
