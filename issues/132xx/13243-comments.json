[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188659758"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188659758"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Remove `ReadBestBlock` and `WriteBestBlock` from `TxIndexDB` definition.",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-16T15:02:00Z",
      "diff_hunk" : "@@ -125,6 +125,19 @@ class CBlockTreeDB : public CDBWrapper\n     bool LoadBlockIndexGuts(const Consensus::Params& consensusParams, std::function<CBlockIndex*(const uint256&)> insertBlockIndex);\n };\n \n+class BaseIndexDB : public CDBWrapper\n+{\n+public:\n+    BaseIndexDB(const fs::path& path, size_t n_cache_size,\n+                bool f_memory = false, bool f_wipe = false, bool f_obfuscate = false);\n+\n+    /// Read block locator of the chain that the txindex is in sync with.\n+    bool ReadBestBlock(CBlockLocator& locator) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188659758",
      "id" : 188659758,
      "original_commit_id" : "053844b23cdfd64f967982055482c66d7bc266bf",
      "original_position" : 11,
      "path" : "src/txdb.h",
      "position" : null,
      "pull_request_review_id" : 120682697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-17T18:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188659758",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188659976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188659976"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A comment explaining this base class would be nice.",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-16T15:02:43Z",
      "diff_hunk" : "@@ -125,6 +125,19 @@ class CBlockTreeDB : public CDBWrapper\n     bool LoadBlockIndexGuts(const Consensus::Params& consensusParams, std::function<CBlockIndex*(const uint256&)> insertBlockIndex);\n };\n \n+class BaseIndexDB : public CDBWrapper",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188659976",
      "id" : 188659976,
      "original_commit_id" : "053844b23cdfd64f967982055482c66d7bc266bf",
      "original_position" : 4,
      "path" : "src/txdb.h",
      "position" : null,
      "pull_request_review_id" : 120682697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-17T18:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188659976",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188661723"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188661723"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How about `index/baseindex.h`? (base.h a little vague even in folder index)",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-16T15:07:49Z",
      "diff_hunk" : "@@ -103,6 +103,7 @@ BITCOIN_CORE_H = \\\n   fs.h \\\n   httprpc.h \\\n   httpserver.h \\\n+  index/base.h \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188661723",
      "id" : 188661723,
      "original_commit_id" : "a488978b330a18893e0aa5b6eda449f1d77c09fe",
      "original_position" : 4,
      "path" : "src/Makefile.am",
      "position" : 4,
      "pull_request_review_id" : 120682697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-17T18:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188661723",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188662182"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188662182"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is this being changed?",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-16T15:09:06Z",
      "diff_hunk" : "@@ -1587,8 +1587,7 @@ bool AppInitMain()\n \n     // ********************************************************* Step 8: start indexers\n     if (gArgs.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n-        auto txindex_db = MakeUnique<TxIndexDB>(nTxIndexCache, false, fReindex);\n-        g_txindex = MakeUnique<TxIndex>(std::move(txindex_db));\n+        g_txindex = MakeUnique<TxIndex>(nTxIndexCache, false, fReindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188662182",
      "id" : 188662182,
      "original_commit_id" : "58e7705a63e779518a01749abaaf5ad5885503a3",
      "original_position" : 6,
      "path" : "src/init.cpp",
      "position" : 6,
      "pull_request_review_id" : 120682697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-17T18:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188662182",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188726474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188726474"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I tend to dislike filenames that are redundant with their directories, but I'll change if people prefer.",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-16T18:25:11Z",
      "diff_hunk" : "@@ -103,6 +103,7 @@ BITCOIN_CORE_H = \\\n   fs.h \\\n   httprpc.h \\\n   httpserver.h \\\n+  index/base.h \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188726474",
      "id" : 188726474,
      "in_reply_to_id" : 188661723,
      "original_commit_id" : "a488978b330a18893e0aa5b6eda449f1d77c09fe",
      "original_position" : 4,
      "path" : "src/Makefile.am",
      "position" : 4,
      "pull_request_review_id" : 120763694,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-17T18:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188726474",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188726823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188726823"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it makes sense for the DB to be encapsulated in the index interface, even if it is implemented separately internally.",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-16T18:26:09Z",
      "diff_hunk" : "@@ -1587,8 +1587,7 @@ bool AppInitMain()\n \n     // ********************************************************* Step 8: start indexers\n     if (gArgs.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n-        auto txindex_db = MakeUnique<TxIndexDB>(nTxIndexCache, false, fReindex);\n-        g_txindex = MakeUnique<TxIndex>(std::move(txindex_db));\n+        g_txindex = MakeUnique<TxIndex>(nTxIndexCache, false, fReindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188726823",
      "id" : 188726823,
      "in_reply_to_id" : 188662182,
      "original_commit_id" : "58e7705a63e779518a01749abaaf5ad5885503a3",
      "original_position" : 6,
      "path" : "src/init.cpp",
      "position" : 6,
      "pull_request_review_id" : 120764079,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-17T18:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188726823",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188727103"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188727103"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Given that it gets moved to BaseIndex for better context in \"index: Move index DBs into index/ directory.\", would you still find the comment helpful?",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-16T18:27:03Z",
      "diff_hunk" : "@@ -125,6 +125,19 @@ class CBlockTreeDB : public CDBWrapper\n     bool LoadBlockIndexGuts(const Consensus::Params& consensusParams, std::function<CBlockIndex*(const uint256&)> insertBlockIndex);\n };\n \n+class BaseIndexDB : public CDBWrapper",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188727103",
      "id" : 188727103,
      "in_reply_to_id" : 188659976,
      "original_commit_id" : "053844b23cdfd64f967982055482c66d7bc266bf",
      "original_position" : 4,
      "path" : "src/txdb.h",
      "position" : null,
      "pull_request_review_id" : 120764423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-17T18:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188727103",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188728759"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188728759"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good catch, thanks.",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-16T18:31:52Z",
      "diff_hunk" : "@@ -125,6 +125,19 @@ class CBlockTreeDB : public CDBWrapper\n     bool LoadBlockIndexGuts(const Consensus::Params& consensusParams, std::function<CBlockIndex*(const uint256&)> insertBlockIndex);\n };\n \n+class BaseIndexDB : public CDBWrapper\n+{\n+public:\n+    BaseIndexDB(const fs::path& path, size_t n_cache_size,\n+                bool f_memory = false, bool f_wipe = false, bool f_obfuscate = false);\n+\n+    /// Read block locator of the chain that the txindex is in sync with.\n+    bool ReadBestBlock(CBlockLocator& locator) const;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188728759",
      "id" : 188728759,
      "in_reply_to_id" : 188659758,
      "original_commit_id" : "053844b23cdfd64f967982055482c66d7bc266bf",
      "original_position" : 11,
      "path" : "src/txdb.h",
      "position" : null,
      "pull_request_review_id" : 120766278,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-17T18:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188728759",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188741380"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188741380"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well I just think base is too vague. Also, there is `index/txindex.*`.",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-16T19:14:45Z",
      "diff_hunk" : "@@ -103,6 +103,7 @@ BITCOIN_CORE_H = \\\n   fs.h \\\n   httprpc.h \\\n   httpserver.h \\\n+  index/base.h \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188741380",
      "id" : 188741380,
      "in_reply_to_id" : 188661723,
      "original_commit_id" : "a488978b330a18893e0aa5b6eda449f1d77c09fe",
      "original_position" : 4,
      "path" : "src/Makefile.am",
      "position" : 4,
      "pull_request_review_id" : 120781459,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-17T18:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188741380",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188741804"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188741804"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree with being encapsulated. It's just a unrelated change AFAIU, but a nice to include.",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-16T19:16:21Z",
      "diff_hunk" : "@@ -1587,8 +1587,7 @@ bool AppInitMain()\n \n     // ********************************************************* Step 8: start indexers\n     if (gArgs.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n-        auto txindex_db = MakeUnique<TxIndexDB>(nTxIndexCache, false, fReindex);\n-        g_txindex = MakeUnique<TxIndex>(std::move(txindex_db));\n+        g_txindex = MakeUnique<TxIndex>(nTxIndexCache, false, fReindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188741804",
      "id" : 188741804,
      "in_reply_to_id" : 188662182,
      "original_commit_id" : "58e7705a63e779518a01749abaaf5ad5885503a3",
      "original_position" : 6,
      "path" : "src/init.cpp",
      "position" : 6,
      "pull_request_review_id" : 120781992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-17T18:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188741804",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188742223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188742223"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right, ignore then.",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-16T19:17:56Z",
      "diff_hunk" : "@@ -125,6 +125,19 @@ class CBlockTreeDB : public CDBWrapper\n     bool LoadBlockIndexGuts(const Consensus::Params& consensusParams, std::function<CBlockIndex*(const uint256&)> insertBlockIndex);\n };\n \n+class BaseIndexDB : public CDBWrapper",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188742223",
      "id" : 188742223,
      "in_reply_to_id" : 188659976,
      "original_commit_id" : "053844b23cdfd64f967982055482c66d7bc266bf",
      "original_position" : 4,
      "path" : "src/txdb.h",
      "position" : null,
      "pull_request_review_id" : 120782523,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-17T18:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188742223",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188776660"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188776660"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh, sorry. The reason is that the `TxIndex::DB` is protected now (at the end of the commit series), so can't be independently instantiated in init.cpp.",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-16T21:21:06Z",
      "diff_hunk" : "@@ -1587,8 +1587,7 @@ bool AppInitMain()\n \n     // ********************************************************* Step 8: start indexers\n     if (gArgs.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n-        auto txindex_db = MakeUnique<TxIndexDB>(nTxIndexCache, false, fReindex);\n-        g_txindex = MakeUnique<TxIndex>(std::move(txindex_db));\n+        g_txindex = MakeUnique<TxIndex>(nTxIndexCache, false, fReindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r188776660",
      "id" : 188776660,
      "in_reply_to_id" : 188662182,
      "original_commit_id" : "58e7705a63e779518a01749abaaf5ad5885503a3",
      "original_position" : 6,
      "path" : "src/init.cpp",
      "position" : 6,
      "pull_request_review_id" : 120824896,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-17T18:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188776660",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r189284854"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189284854"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I find this name a bit confusing (\"if we're not synced and this method is called `BlockUntilSynced...`, why are we returning?\"). Would a rename to `m_initial_sync_complete` or something along those lines make sense or does that seem too wordy?",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-18T14:22:48Z",
      "diff_hunk" : "@@ -0,0 +1,278 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <index/base.h>\n+#include <init.h>\n+#include <tinyformat.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <warnings.h>\n+\n+constexpr char DB_BEST_BLOCK = 'B';\n+\n+constexpr int64_t SYNC_LOG_INTERVAL = 30; // seconds\n+constexpr int64_t SYNC_LOCATOR_WRITE_INTERVAL = 30; // seconds\n+\n+template<typename... Args>\n+static void FatalError(const char* fmt, const Args&... args)\n+{\n+    std::string strMessage = tfm::format(fmt, args...);\n+    SetMiscWarning(strMessage);\n+    LogPrintf(\"*** %s\\n\", strMessage);\n+    uiInterface.ThreadSafeMessageBox(\n+        \"Error: A fatal internal error occurred, see debug.log for details\",\n+        \"\", CClientUIInterface::MSG_ERROR);\n+    StartShutdown();\n+}\n+\n+BaseIndex::DB::DB(const fs::path& path, size_t n_cache_size, bool f_memory, bool f_wipe, bool f_obfuscate) :\n+    CDBWrapper(path, n_cache_size, f_memory, f_wipe, f_obfuscate)\n+{}\n+\n+bool BaseIndex::DB::ReadBestBlock(CBlockLocator& locator) const\n+{\n+    bool success = Read(DB_BEST_BLOCK, locator);\n+    if (!success) {\n+        locator.SetNull();\n+    }\n+    return success;\n+}\n+\n+bool BaseIndex::DB::WriteBestBlock(const CBlockLocator& locator)\n+{\n+    return Write(DB_BEST_BLOCK, locator);\n+}\n+\n+BaseIndex::~BaseIndex()\n+{\n+    Interrupt();\n+    Stop();\n+}\n+\n+bool BaseIndex::Init()\n+{\n+    CBlockLocator locator;\n+    if (!GetDB().ReadBestBlock(locator)) {\n+        locator.SetNull();\n+    }\n+\n+    LOCK(cs_main);\n+    m_best_block_index = FindForkInGlobalIndex(chainActive, locator);\n+    m_synced = m_best_block_index.load() == chainActive.Tip();\n+    return true;\n+}\n+\n+static const CBlockIndex* NextSyncBlock(const CBlockIndex* pindex_prev)\n+{\n+    AssertLockHeld(cs_main);\n+\n+    if (!pindex_prev) {\n+        return chainActive.Genesis();\n+    }\n+\n+    const CBlockIndex* pindex = chainActive.Next(pindex_prev);\n+    if (pindex) {\n+        return pindex;\n+    }\n+\n+    return chainActive.Next(chainActive.FindFork(pindex_prev));\n+}\n+\n+void BaseIndex::ThreadSync()\n+{\n+    const CBlockIndex* pindex = m_best_block_index.load();\n+    if (!m_synced) {\n+        auto& consensus_params = Params().GetConsensus();\n+\n+        int64_t last_log_time = 0;\n+        int64_t last_locator_write_time = 0;\n+        while (true) {\n+            if (m_interrupt) {\n+                WriteBestBlock(pindex);\n+                return;\n+            }\n+\n+            {\n+                LOCK(cs_main);\n+                const CBlockIndex* pindex_next = NextSyncBlock(pindex);\n+                if (!pindex_next) {\n+                    WriteBestBlock(pindex);\n+                    m_best_block_index = pindex;\n+                    m_synced = true;\n+                    break;\n+                }\n+                pindex = pindex_next;\n+            }\n+\n+            int64_t current_time = GetTime();\n+            if (last_log_time + SYNC_LOG_INTERVAL < current_time) {\n+                LogPrintf(\"Syncing %s with block chain from height %d\\n\",\n+                          GetName(), pindex->nHeight);\n+                last_log_time = current_time;\n+            }\n+\n+            if (last_locator_write_time + SYNC_LOCATOR_WRITE_INTERVAL < current_time) {\n+                WriteBestBlock(pindex);\n+                last_locator_write_time = current_time;\n+            }\n+\n+            CBlock block;\n+            if (!ReadBlockFromDisk(block, pindex, consensus_params)) {\n+                FatalError(\"%s: Failed to read block %s from disk\",\n+                           __func__, pindex->GetBlockHash().ToString());\n+                return;\n+            }\n+            if (!WriteBlock(block, pindex)) {\n+                FatalError(\"%s: Failed to write block %s to index database\",\n+                           __func__, pindex->GetBlockHash().ToString());\n+                return;\n+            }\n+        }\n+    }\n+\n+    if (pindex) {\n+        LogPrintf(\"%s is enabled at height %d\\n\", GetName(), pindex->nHeight);\n+    } else {\n+        LogPrintf(\"%s is enabled\\n\", GetName());\n+    }\n+}\n+\n+bool BaseIndex::WriteBestBlock(const CBlockIndex* block_index)\n+{\n+    LOCK(cs_main);\n+    if (!GetDB().WriteBestBlock(chainActive.GetLocator(block_index))) {\n+        return error(\"%s: Failed to write locator to disk\", __func__);\n+    }\n+    return true;\n+}\n+\n+void BaseIndex::BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex,\n+                               const std::vector<CTransactionRef>& txn_conflicted)\n+{\n+    if (!m_synced) {\n+        return;\n+    }\n+\n+    const CBlockIndex* best_block_index = m_best_block_index.load();\n+    if (!best_block_index) {\n+        if (pindex->nHeight != 0) {\n+            FatalError(\"%s: First block connected is not the genesis block (height=%d)\",\n+                       __func__, pindex->nHeight);\n+            return;\n+        }\n+    } else {\n+        // Ensure block connects to an ancestor of the current best block. This should be the case\n+        // most of the time, but may not be immediately after the the sync thread catches up and sets\n+        // m_synced. Consider the case where there is a reorg and the blocks on the stale branch are\n+        // in the ValidationInterface queue backlog even after the sync thread has caught up to the\n+        // new chain tip. In this unlikely event, log a warning and let the queue clear.\n+        if (best_block_index->GetAncestor(pindex->nHeight - 1) != pindex->pprev) {\n+            LogPrintf(\"%s: WARNING: Block %s does not connect to an ancestor of \" /* Continued */\n+                      \"known best chain (tip=%s); not updating index\\n\",\n+                      __func__, pindex->GetBlockHash().ToString(),\n+                      best_block_index->GetBlockHash().ToString());\n+            return;\n+        }\n+    }\n+\n+    if (WriteBlock(*block, pindex)) {\n+        m_best_block_index = pindex;\n+    } else {\n+        FatalError(\"%s: Failed to write block %s to index\",\n+                   __func__, pindex->GetBlockHash().ToString());\n+        return;\n+    }\n+}\n+\n+void BaseIndex::ChainStateFlushed(const CBlockLocator& locator)\n+{\n+    if (!m_synced) {\n+        return;\n+    }\n+\n+    const uint256& locator_tip_hash = locator.vHave.front();\n+    const CBlockIndex* locator_tip_index;\n+    {\n+        LOCK(cs_main);\n+        locator_tip_index = LookupBlockIndex(locator_tip_hash);\n+    }\n+\n+    if (!locator_tip_index) {\n+        FatalError(\"%s: First block (hash=%s) in locator was not found\",\n+                   __func__, locator_tip_hash.ToString());\n+        return;\n+    }\n+\n+    // This checks that ChainStateFlushed callbacks are received after BlockConnected. The check may fail\n+    // immediately after the the sync thread catches up and sets m_synced. Consider the case where\n+    // there is a reorg and the blocks on the stale branch are in the ValidationInterface queue\n+    // backlog even after the sync thread has caught up to the new chain tip. In this unlikely\n+    // event, log a warning and let the queue clear.\n+    const CBlockIndex* best_block_index = m_best_block_index.load();\n+    if (best_block_index->GetAncestor(locator_tip_index->nHeight) != locator_tip_index) {\n+        LogPrintf(\"%s: WARNING: Locator contains block (hash=%s) not on known best \" /* Continued */\n+                  \"chain (tip=%s); not writing index locator\\n\",\n+                  __func__, locator_tip_hash.ToString(),\n+                  best_block_index->GetBlockHash().ToString());\n+        return;\n+    }\n+\n+    if (!GetDB().WriteBestBlock(locator)) {\n+        error(\"%s: Failed to write locator to disk\", __func__);\n+    }\n+}\n+\n+bool BaseIndex::BlockUntilSyncedToCurrentChain()\n+{\n+    AssertLockNotHeld(cs_main);\n+\n+    if (!m_synced) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r189284854",
      "id" : 189284854,
      "original_commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "original_position" : 232,
      "path" : "src/index/base.cpp",
      "position" : 232,
      "pull_request_review_id" : 121439452,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-18T14:57:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189284854",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r189346381"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189346381"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, I see your point. I'm fine changing the variable name to be more descriptive `m_initial_sync_complete` or `m_sync_complete` both make sense to me (though the latter may not alleviate the confusion).",
      "commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "created_at" : "2018-05-18T17:52:53Z",
      "diff_hunk" : "@@ -0,0 +1,278 @@\n+// Copyright (c) 2017-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <index/base.h>\n+#include <init.h>\n+#include <tinyformat.h>\n+#include <ui_interface.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <warnings.h>\n+\n+constexpr char DB_BEST_BLOCK = 'B';\n+\n+constexpr int64_t SYNC_LOG_INTERVAL = 30; // seconds\n+constexpr int64_t SYNC_LOCATOR_WRITE_INTERVAL = 30; // seconds\n+\n+template<typename... Args>\n+static void FatalError(const char* fmt, const Args&... args)\n+{\n+    std::string strMessage = tfm::format(fmt, args...);\n+    SetMiscWarning(strMessage);\n+    LogPrintf(\"*** %s\\n\", strMessage);\n+    uiInterface.ThreadSafeMessageBox(\n+        \"Error: A fatal internal error occurred, see debug.log for details\",\n+        \"\", CClientUIInterface::MSG_ERROR);\n+    StartShutdown();\n+}\n+\n+BaseIndex::DB::DB(const fs::path& path, size_t n_cache_size, bool f_memory, bool f_wipe, bool f_obfuscate) :\n+    CDBWrapper(path, n_cache_size, f_memory, f_wipe, f_obfuscate)\n+{}\n+\n+bool BaseIndex::DB::ReadBestBlock(CBlockLocator& locator) const\n+{\n+    bool success = Read(DB_BEST_BLOCK, locator);\n+    if (!success) {\n+        locator.SetNull();\n+    }\n+    return success;\n+}\n+\n+bool BaseIndex::DB::WriteBestBlock(const CBlockLocator& locator)\n+{\n+    return Write(DB_BEST_BLOCK, locator);\n+}\n+\n+BaseIndex::~BaseIndex()\n+{\n+    Interrupt();\n+    Stop();\n+}\n+\n+bool BaseIndex::Init()\n+{\n+    CBlockLocator locator;\n+    if (!GetDB().ReadBestBlock(locator)) {\n+        locator.SetNull();\n+    }\n+\n+    LOCK(cs_main);\n+    m_best_block_index = FindForkInGlobalIndex(chainActive, locator);\n+    m_synced = m_best_block_index.load() == chainActive.Tip();\n+    return true;\n+}\n+\n+static const CBlockIndex* NextSyncBlock(const CBlockIndex* pindex_prev)\n+{\n+    AssertLockHeld(cs_main);\n+\n+    if (!pindex_prev) {\n+        return chainActive.Genesis();\n+    }\n+\n+    const CBlockIndex* pindex = chainActive.Next(pindex_prev);\n+    if (pindex) {\n+        return pindex;\n+    }\n+\n+    return chainActive.Next(chainActive.FindFork(pindex_prev));\n+}\n+\n+void BaseIndex::ThreadSync()\n+{\n+    const CBlockIndex* pindex = m_best_block_index.load();\n+    if (!m_synced) {\n+        auto& consensus_params = Params().GetConsensus();\n+\n+        int64_t last_log_time = 0;\n+        int64_t last_locator_write_time = 0;\n+        while (true) {\n+            if (m_interrupt) {\n+                WriteBestBlock(pindex);\n+                return;\n+            }\n+\n+            {\n+                LOCK(cs_main);\n+                const CBlockIndex* pindex_next = NextSyncBlock(pindex);\n+                if (!pindex_next) {\n+                    WriteBestBlock(pindex);\n+                    m_best_block_index = pindex;\n+                    m_synced = true;\n+                    break;\n+                }\n+                pindex = pindex_next;\n+            }\n+\n+            int64_t current_time = GetTime();\n+            if (last_log_time + SYNC_LOG_INTERVAL < current_time) {\n+                LogPrintf(\"Syncing %s with block chain from height %d\\n\",\n+                          GetName(), pindex->nHeight);\n+                last_log_time = current_time;\n+            }\n+\n+            if (last_locator_write_time + SYNC_LOCATOR_WRITE_INTERVAL < current_time) {\n+                WriteBestBlock(pindex);\n+                last_locator_write_time = current_time;\n+            }\n+\n+            CBlock block;\n+            if (!ReadBlockFromDisk(block, pindex, consensus_params)) {\n+                FatalError(\"%s: Failed to read block %s from disk\",\n+                           __func__, pindex->GetBlockHash().ToString());\n+                return;\n+            }\n+            if (!WriteBlock(block, pindex)) {\n+                FatalError(\"%s: Failed to write block %s to index database\",\n+                           __func__, pindex->GetBlockHash().ToString());\n+                return;\n+            }\n+        }\n+    }\n+\n+    if (pindex) {\n+        LogPrintf(\"%s is enabled at height %d\\n\", GetName(), pindex->nHeight);\n+    } else {\n+        LogPrintf(\"%s is enabled\\n\", GetName());\n+    }\n+}\n+\n+bool BaseIndex::WriteBestBlock(const CBlockIndex* block_index)\n+{\n+    LOCK(cs_main);\n+    if (!GetDB().WriteBestBlock(chainActive.GetLocator(block_index))) {\n+        return error(\"%s: Failed to write locator to disk\", __func__);\n+    }\n+    return true;\n+}\n+\n+void BaseIndex::BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex,\n+                               const std::vector<CTransactionRef>& txn_conflicted)\n+{\n+    if (!m_synced) {\n+        return;\n+    }\n+\n+    const CBlockIndex* best_block_index = m_best_block_index.load();\n+    if (!best_block_index) {\n+        if (pindex->nHeight != 0) {\n+            FatalError(\"%s: First block connected is not the genesis block (height=%d)\",\n+                       __func__, pindex->nHeight);\n+            return;\n+        }\n+    } else {\n+        // Ensure block connects to an ancestor of the current best block. This should be the case\n+        // most of the time, but may not be immediately after the the sync thread catches up and sets\n+        // m_synced. Consider the case where there is a reorg and the blocks on the stale branch are\n+        // in the ValidationInterface queue backlog even after the sync thread has caught up to the\n+        // new chain tip. In this unlikely event, log a warning and let the queue clear.\n+        if (best_block_index->GetAncestor(pindex->nHeight - 1) != pindex->pprev) {\n+            LogPrintf(\"%s: WARNING: Block %s does not connect to an ancestor of \" /* Continued */\n+                      \"known best chain (tip=%s); not updating index\\n\",\n+                      __func__, pindex->GetBlockHash().ToString(),\n+                      best_block_index->GetBlockHash().ToString());\n+            return;\n+        }\n+    }\n+\n+    if (WriteBlock(*block, pindex)) {\n+        m_best_block_index = pindex;\n+    } else {\n+        FatalError(\"%s: Failed to write block %s to index\",\n+                   __func__, pindex->GetBlockHash().ToString());\n+        return;\n+    }\n+}\n+\n+void BaseIndex::ChainStateFlushed(const CBlockLocator& locator)\n+{\n+    if (!m_synced) {\n+        return;\n+    }\n+\n+    const uint256& locator_tip_hash = locator.vHave.front();\n+    const CBlockIndex* locator_tip_index;\n+    {\n+        LOCK(cs_main);\n+        locator_tip_index = LookupBlockIndex(locator_tip_hash);\n+    }\n+\n+    if (!locator_tip_index) {\n+        FatalError(\"%s: First block (hash=%s) in locator was not found\",\n+                   __func__, locator_tip_hash.ToString());\n+        return;\n+    }\n+\n+    // This checks that ChainStateFlushed callbacks are received after BlockConnected. The check may fail\n+    // immediately after the the sync thread catches up and sets m_synced. Consider the case where\n+    // there is a reorg and the blocks on the stale branch are in the ValidationInterface queue\n+    // backlog even after the sync thread has caught up to the new chain tip. In this unlikely\n+    // event, log a warning and let the queue clear.\n+    const CBlockIndex* best_block_index = m_best_block_index.load();\n+    if (best_block_index->GetAncestor(locator_tip_index->nHeight) != locator_tip_index) {\n+        LogPrintf(\"%s: WARNING: Locator contains block (hash=%s) not on known best \" /* Continued */\n+                  \"chain (tip=%s); not writing index locator\\n\",\n+                  __func__, locator_tip_hash.ToString(),\n+                  best_block_index->GetBlockHash().ToString());\n+        return;\n+    }\n+\n+    if (!GetDB().WriteBestBlock(locator)) {\n+        error(\"%s: Failed to write locator to disk\", __func__);\n+    }\n+}\n+\n+bool BaseIndex::BlockUntilSyncedToCurrentChain()\n+{\n+    AssertLockNotHeld(cs_main);\n+\n+    if (!m_synced) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#discussion_r189346381",
      "id" : 189346381,
      "in_reply_to_id" : 189284854,
      "original_commit_id" : "da17ca6cd6539a6f8dc8ef0d76bb670e20feac67",
      "original_position" : 232,
      "path" : "src/index/base.cpp",
      "position" : 232,
      "pull_request_review_id" : 121514380,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13243",
      "updated_at" : "2018-05-18T17:52:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189346381",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK da17ca6. Commit by commit refactors LGTM.",
      "created_at" : "2018-05-23T11:31:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#issuecomment-391314140",
      "id" : 391314140,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13243",
      "updated_at" : "2018-05-23T11:31:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/391314140",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2018-05-26T00:03:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#issuecomment-392217387",
      "id" : 392217387,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13243",
      "updated_at" : "2018-05-26T00:03:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392217387",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, nice",
      "created_at" : "2018-05-29T14:05:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#issuecomment-392789204",
      "id" : 392789204,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13243",
      "updated_at" : "2018-05-29T14:05:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392789204",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs rebase.",
      "created_at" : "2018-06-04T22:43:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#issuecomment-394523776",
      "id" : 394523776,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13243",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NDUyMzc3Ng==",
      "updated_at" : "2018-06-04T22:43:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394523776",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK ec3073a274bf7affe1b8c87a10f75d126f5ac027\r\nverified move-onlyness of 2318affd27de436ddf9d866a4b82eed8ea2e738b",
      "created_at" : "2018-06-07T16:00:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13243#issuecomment-395474500",
      "id" : 395474500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13243",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NTQ3NDUwMA==",
      "updated_at" : "2018-06-07T16:00:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/395474500",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
