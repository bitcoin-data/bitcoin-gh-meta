[
   {
      "body" : "utACK.\r\nPlans to test this soon.\r\nLittle indentation/tabs nit chain.h L88:90.",
      "created_at" : "2015-05-08T18:10:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-100316572",
      "id" : 100316572,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6118",
      "updated_at" : "2015-05-08T18:10:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/100316572",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Nit fixed, thanks!",
      "created_at" : "2015-05-08T18:16:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-100318671",
      "id" : 100318671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6118",
      "updated_at" : "2015-05-08T18:16:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/100318671",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Added this PR on top of master and left my pruned bitcoind mainnet node running over night. No issues.\r\nJust copied blocks/chainstate from a full-node to a fresh node and pruned to target 550MB. Worked as expected.\r\n\r\nTested ACK.",
      "created_at" : "2015-05-10T08:36:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-100601489",
      "id" : 100601489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6118",
      "updated_at" : "2015-05-10T08:36:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/100601489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=3",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "Untested ACK. I don't understand the Travis failure.",
      "created_at" : "2015-05-10T21:44:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-100704566",
      "id" : 100704566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6118",
      "updated_at" : "2015-05-10T21:44:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/100704566",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Rebased.",
      "created_at" : "2015-05-13T18:57:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-101777592",
      "id" : 101777592,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6118",
      "updated_at" : "2015-05-13T18:57:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101777592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "What is your reasoning behind this? From a conceptual point of view I like the flags to specify what they do now: does the block HAVE data or undo data.",
      "created_at" : "2015-05-15T10:50:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-102367972",
      "id" : 102367972,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6118",
      "updated_at" : "2015-05-15T10:50:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102367972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "I was trying to eliminate the need to iterate the entire mapBlockIndex whenever a file is pruned (since we currently lack a map from block files to blocks, we check each block to see if it's in a blockfile being deleted).  That seems like something that needs to be fixed at some point.\r\n\r\nOne idea for addressing that would be to just maintain a (memory-only) map from block files to blockindex entries which we iterate when pruning; this would be straightforward, cpu efficient, and preserve existing HAVE_DATA semantics.  However I think @sipa was concerned about the additional memory overhead of that approach (I believe it would be roughly an additional 10MB if you're running in prune mode with a target high enough that no files are actually deleted -- which is perhaps relevant if in the future most nodes may run with some level of pruning), and he suggested lazy updating instead.\r\n\r\nSo I tried implementing the lazy-update approach to see how feasible (and/or cumbersome) this would be.  It seems very efficient; the code changes to support it seem relatively minor; and I like the idea of not having to worry about updating state when block files are removed -- that seems like it should make future pruning-related improvements easier to make.  I do agree there's a tradeoff, in that the current HAVE_DATA semantics seem cleaner versus the new STORED_DATA semantics, but it's hard for me right now to say which semantics are better in the long run.\r\n\r\nI think that uncertainty would be an argument for waiting to see what the future of pruning code looks like and then deciding what solution makes most sense, except one thing I realized after coding this up is that if we decide to go in this direction with lazy updating of block index entries, then I think it would be better if we deploy this behavior with pruning in 0.11 than wait until 0.12 -- otherwise there's a backwards compatibility issue, where once your block index has been lazily updated, you can't easily revert back to a version of pruning code that didn't support that (at least with the present implementation).\r\n\r\nAt any rate, I don't feel strongly about which approach has the best tradeoffs, and if we end up not merging this for 0.11, then I'd say we may as well just wait until we implement sharding, and decide then what approach makes sense here.",
      "created_at" : "2015-05-15T13:41:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-102400700",
      "id" : 102400700,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6118",
      "updated_at" : "2015-05-15T13:41:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102400700",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Is the overhead to have to iterate over the (in-memory) block index when a file is pruned significant?\r\n\r\nMuddying the database semantics to make a rare action slightly faster would be unfortunate. But I don't feel strongly about it either.\r\n\r\nAlso: this makes the 'block has data' check more involved and that is performed very often.\r\n",
      "created_at" : "2015-05-15T15:31:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-102433113",
      "id" : 102433113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6118",
      "updated_at" : "2015-05-15T15:31:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102433113",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6118#discussion_r30423169"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30423169"
         }
      },
      "body" : "This comment points out that the HaveBlockData() name is very misleading. Could you change the name to indicate that it also updates the state?",
      "commit_id" : "fb1042260182c437a070a522c638509d5b121644",
      "created_at" : "2015-05-15T16:25:05Z",
      "diff_hunk" : "@@ -3460,8 +3470,10 @@ void static CheckBlockIndex()\n     CBlockIndex* pindexFirstNotScriptsValid = NULL; // Oldest ancestor of pindex which does not have BLOCK_VALID_SCRIPTS (regardless of being valid or not).\n     while (pindex != NULL) {\n         nNodes++;\n+        // Not calling HaveBlockData() directly, since that can change state.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#discussion_r30423169",
      "id" : 30423169,
      "original_commit_id" : "fb1042260182c437a070a522c638509d5b121644",
      "original_position" : 197,
      "path" : "src/main.cpp",
      "position" : 197,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6118",
      "updated_at" : "2015-05-15T16:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30423169",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=3",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "@laanwj I believe it's ~20ms to iterate mapBlockIndex. Arguably that is insignificant the way pruning works now, since it can only happen when we're calling ```FlushStateToDisk()``` which is already an expensive operation.\r\n\r\nRegarding the efficiency of ```HaveBlockData()```, I think that this implementation is very fast if there's no lock contention and that seems to be the case presently; it's unclear to me whether there could be lock contention to worry about down the road, in particular if the code were to change in the future so that the ```HaveBlockData()``` function is called from more places.",
      "created_at" : "2015-05-15T16:28:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-102453217",
      "id" : 102453217,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6118",
      "updated_at" : "2015-05-15T16:28:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102453217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "I think @sdaftuar has a point that if we're ever going to implement lazy updating, the time to do it is now.  But personally I think some sort of reverse lookup is eventually going to be needed.  I implemented it to try it out and it's fine, but I also think the simple 20ms iteration every time you delete a blockfile is good enough for now and we should just do the reverse lookup in whatever way makes sense with the sharding algorithm we end up with.  \r\n\r\nHmm, I was going to say the argument against the 20ms iteration is that once a day or so (when you've got an extra block file you can prune) then it's possible (I think even probable) that you're holding up block propagation.  But come to think of it, that's a problem with choosing when we're pruning because even without the 20ms cost, you're still doing a full chainstate flush then.   If we think that's problematic, maybe we can move around the pruning calls to only happen when we're a bit less busy, it'll take some testing though..\r\n\r\n\r\n\r\n",
      "created_at" : "2015-05-15T18:12:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-102475719",
      "id" : 102475719,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6118",
      "updated_at" : "2015-05-15T18:12:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102475719",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6118#discussion_r30445842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6118"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30445842"
         }
      },
      "body" : "Happy to change it, any suggestions?  The function only changes state if in pruning mode, so I don't want to go overboard with the description, and nothing concise is jumping out at me.\r\n\r\nI did notice the comment for the function doesn't really emphasize the potentially state-changing behavior, I'll start by rewording that for now to make it more obvious.",
      "commit_id" : "fb1042260182c437a070a522c638509d5b121644",
      "created_at" : "2015-05-15T21:01:22Z",
      "diff_hunk" : "@@ -3460,8 +3470,10 @@ void static CheckBlockIndex()\n     CBlockIndex* pindexFirstNotScriptsValid = NULL; // Oldest ancestor of pindex which does not have BLOCK_VALID_SCRIPTS (regardless of being valid or not).\n     while (pindex != NULL) {\n         nNodes++;\n+        // Not calling HaveBlockData() directly, since that can change state.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#discussion_r30445842",
      "id" : 30445842,
      "original_commit_id" : "fb1042260182c437a070a522c638509d5b121644",
      "original_position" : 197,
      "path" : "src/main.cpp",
      "position" : 197,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6118",
      "updated_at" : "2015-05-15T21:01:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30445842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Updated a few comments and tried to make it clearer that ```HaveBlockData()``` can change state when pruning is enabled.",
      "created_at" : "2015-05-15T23:57:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-102551244",
      "id" : 102551244,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6118",
      "updated_at" : "2015-05-15T23:57:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102551244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Closing.  This apparently need to be rebased, and it's probably not worth it as I don't think we're going to merge for 0.11, and given the backwards compatibility issues this pull would generate if this were accepted later (see description above and https://github.com/bitcoin/bitcoin/pull/6148#issuecomment-103860722), I think it'd be better for us to wait until a sharding solution is on the table and revisit this idea in that context.",
      "created_at" : "2015-06-05T20:21:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-109429302",
      "id" : 109429302,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6118",
      "updated_at" : "2015-06-05T20:21:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/109429302",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
