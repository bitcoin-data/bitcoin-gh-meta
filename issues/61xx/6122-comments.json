[
   {
      "body" : "We should do something like this, but it won't help without also having\nsome means of advertizing that we can relay blocks, as right now, nobody\nshould even be connecting to pruned nodes (which advertize as spv nodes).\n",
      "created_at" : "2015-05-12T09:19:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101207642",
      "id" : 101207642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-12T09:19:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101207642",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa Can you point me to the code, where we dont connect to pruned nodes, please?\r\nBecause I assumed we dont distinguish on service-bits in the connection logic.",
      "created_at" : "2015-05-12T09:29:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101211657",
      "id" : 101211657,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-12T09:29:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101211657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2814559?v=3",
         "events_url" : "https://api.github.com/users/cozz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cozz/followers",
         "following_url" : "https://api.github.com/users/cozz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cozz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cozz",
         "id" : 2814559,
         "login" : "cozz",
         "organizations_url" : "https://api.github.com/users/cozz/orgs",
         "received_events_url" : "https://api.github.com/users/cozz/received_events",
         "repos_url" : "https://api.github.com/users/cozz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cozz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cozz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cozz"
      }
   },
   {
      "body" : "Unsure, addnode may work, but automatic discovery shouldn't.\n",
      "created_at" : "2015-05-12T10:08:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101221514",
      "id" : 101221514,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-12T10:08:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101221514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "So you dont know the code? Didnt you write the address-manager?\r\n\r\nWell, I will go bother and test now, if a node without NODE_NETWORK announces his ip, and whether or not we add it and connect to it with the address-manager. Because exactly that is, what I was assuming.",
      "created_at" : "2015-05-12T10:21:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101224062",
      "id" : 101224062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-12T10:21:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101224062",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2814559?v=3",
         "events_url" : "https://api.github.com/users/cozz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cozz/followers",
         "following_url" : "https://api.github.com/users/cozz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cozz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cozz",
         "id" : 2814559,
         "login" : "cozz",
         "organizations_url" : "https://api.github.com/users/cozz/orgs",
         "received_events_url" : "https://api.github.com/users/cozz/received_events",
         "repos_url" : "https://api.github.com/users/cozz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cozz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cozz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cozz"
      }
   },
   {
      "body" : "So I dont know how to test this NODE_NETWORK thing.\r\n\r\nThe address-manager does not care about nServices, so from my understanding, there is no difference between NODE_NETWORK-nodes and non-NODE_NETWORK-nodes.\r\nWe make a difference after we have connected in the version message, but not before.\r\n\r\nI any case this pull request does not hurt. Block relay is highest priority, and I believe we really should always announce the block, whenever possible.\r\n\r\nLets say someone runs a bunch of full nodes, because he wants to contribute to the network, then\r\nour -prune feature is really bad, if suddenly all those nodes dont relay blocks anymore.\r\nThe guy thinks that he is doing something good for the network and himself (with pruning) while\r\nits not.\r\n\r\nIf what you are saying is true, that nobody connects to pruned nodes, this would be also bad, because\r\nthis is not even mentioned in the help-message. If so, there is a big fat warning missing. \r\nBut again, I can not even find this behavior in the source code.",
      "created_at" : "2015-05-12T13:25:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101275210",
      "id" : 101275210,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-12T13:25:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101275210",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2814559?v=3",
         "events_url" : "https://api.github.com/users/cozz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cozz/followers",
         "following_url" : "https://api.github.com/users/cozz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cozz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cozz",
         "id" : 2814559,
         "login" : "cozz",
         "organizations_url" : "https://api.github.com/users/cozz/orgs",
         "received_events_url" : "https://api.github.com/users/cozz/received_events",
         "repos_url" : "https://api.github.com/users/cozz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cozz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cozz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cozz"
      }
   },
   {
      "body" : "ACK concept.\r\n\r\nI don't think this pull-req should be gated on whether or not we advertise that other nodes should connect to us; relaying is always valuable to ensure the P2P network is well connected. Note how if you start a node with -listen=0 you'll never have anyone connect to you, yet we still relay blocks. The same logic should apply here.\r\n\r\nWhat I don't get is why make this dependent on the peer's advertised starting height? Why should their height (which may be out of date) have any relevance to whether or not we relay a block? Instead I think this should be based only on our height, with an appropriate window to prevent stalls.\r\n\r\nAs for the size of that window... isn't this code only triggered when *we* get a new block? You'd have to get a burst of >288 blocks in a row in non-initial-download mode to run into that problem - seems rather unlikely. I'm not sure it's really worth having extra code for such an unlikely case.",
      "created_at" : "2015-05-12T14:39:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101303688",
      "id" : 101303688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-12T14:39:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101303688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "@petertodd The code I added only cares about the height of the other node, for both nStartingHeight and pindexBestKnownBlock. The reason is that this avoids, that the other node asks us for blocks we dont have.  If we know, that the other has at least what we have (minus 288), nothing can go wrong. \r\nThe code already is executed for (!fInitialDownload), which is based on our height. So there must have been a reason why it has been disabled in the first place. So I added, to also care about the other nodes height.\r\n\r\nI am just very unhappy, with block relay being completely disabled for pruning. To me, this is a bug.\r\n",
      "created_at" : "2015-05-12T16:16:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101335936",
      "id" : 101335936,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-12T16:16:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101335936",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2814559?v=3",
         "events_url" : "https://api.github.com/users/cozz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cozz/followers",
         "following_url" : "https://api.github.com/users/cozz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cozz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cozz",
         "id" : 2814559,
         "login" : "cozz",
         "organizations_url" : "https://api.github.com/users/cozz/orgs",
         "received_events_url" : "https://api.github.com/users/cozz/received_events",
         "repos_url" : "https://api.github.com/users/cozz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cozz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cozz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cozz"
      }
   },
   {
      "body" : "@cozz Whoops, yeah, brainfart on my part. That exception is reasonable, although the fact we need it is annoying. :( Pity that we still deal with stalling peers so badly.\r\n\r\nDefinitely agree re: the total disabling. Heck, I even argue that SPV nodes should be forwarding blocks.",
      "created_at" : "2015-05-12T16:41:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101343867",
      "id" : 101343867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-12T16:41:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101343867",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6122#discussion_r30164434"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6122"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30164434"
         }
      },
      "body" : "Comment above needs to be updated.",
      "commit_id" : "f9da3b2d144e8a50104d02d27dded6a60c2567de",
      "created_at" : "2015-05-12T18:23:30Z",
      "diff_hunk" : "@@ -2283,11 +2283,20 @@ bool ActivateBestChain(CValidationState &state, CBlock *pblock) {\n                 nBlockEstimate = Checkpoints::GetTotalBlocksEstimate(chainParams.Checkpoints());\n             // Don't relay blocks if pruning -- could cause a peer to try to download, resulting\n             // in a stalled download if the block file is pruned before the request.\n-            if (nLocalServices & NODE_NETWORK) {\n+            {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#discussion_r30164434",
      "id" : 30164434,
      "original_commit_id" : "f9da3b2d144e8a50104d02d27dded6a60c2567de",
      "original_position" : 5,
      "path" : "src/main.cpp",
      "position" : 5,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6122",
      "updated_at" : "2015-05-12T18:23:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30164434",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6122#discussion_r30164435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6122"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30164435"
         }
      },
      "body" : "I believe you need to hold cs_main for this.",
      "commit_id" : "f9da3b2d144e8a50104d02d27dded6a60c2567de",
      "created_at" : "2015-05-12T18:23:31Z",
      "diff_hunk" : "@@ -2283,11 +2283,20 @@ bool ActivateBestChain(CValidationState &state, CBlock *pblock) {\n                 nBlockEstimate = Checkpoints::GetTotalBlocksEstimate(chainParams.Checkpoints());\n             // Don't relay blocks if pruning -- could cause a peer to try to download, resulting\n             // in a stalled download if the block file is pruned before the request.\n-            if (nLocalServices & NODE_NETWORK) {\n+            {\n                 LOCK(cs_vNodes);\n-                BOOST_FOREACH(CNode* pnode, vNodes)\n-                    if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate))\n-                        pnode->PushInventory(CInv(MSG_BLOCK, hashNewTip));\n+                BOOST_FOREACH(CNode* pnode, vNodes) {\n+                    if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate)) {\n+                        if (!fPruneMode) // not pruning, always relay\n+                            pnode->PushInventory(CInv(MSG_BLOCK, hashNewTip));\n+                        else { // pruning, still relay if peer has at least up to our pruning threshold\n+                            int nLastBlockWeMustKeep = chainActive.Height() - MIN_BLOCKS_TO_KEEP + 6; // add 6 to ensure we dont prune while the request is in flight\n+                            CNodeState *state = State(pnode->GetId());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#discussion_r30164435",
      "id" : 30164435,
      "original_commit_id" : "f9da3b2d144e8a50104d02d27dded6a60c2567de",
      "original_position" : 16,
      "path" : "src/main.cpp",
      "position" : 16,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6122",
      "updated_at" : "2015-05-12T18:23:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/30164435",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "I made a couple code comments, but in reviewing this I noticed another issue.\r\n\r\nI think pruning nodes should respond to a \"getblocks\" message differently than non-pruning nodes, so that they don't ever generate an inv for a block they don't have on disk.  I haven't generated this scenario in a test yet, but I believe it's possible to be in a situation where an 0.9 (or earlier) node could send a getblocks message to a pruning node, and if the 0.9 node is far enough behind, that could result in a pruning node serving up inv's for blocks it doesn't have (which the 0.9 node would then request, but not be able to receive, and then eventually disconnect).\r\n\r\nAssuming we agree that behavior should change, then I think perhaps this pull could be much simpler, where we don't need to bother with the special case here in the event that we're pruning (ie we just remove the ```if (nLocalServices & NODE_NETWORK)```) on line 2286.  My reasoning:\r\n\r\n- 0.10 and later nodes will not download non-inv'ed blocks except from NODE_NETWORK peers (there's a guard around the call to ```FindNextBlocksToDownload```)\r\n- 0.9 and 0.8 nodes rely on inv's, including those generated in response to a getblocks, to determine what to ask for from a peer\r\n\r\n(I'm not all that familiar with the p2p behavior of 0.9 and 0.8 nodes though, hopefully someone more familiar can confirm that the above is correct.)\r\n\r\nI guess one thing I am not sure how to consider is the p2p behavior of even older bitcoin core clients (which I haven't looked at) and non-bitcoin-core clients.  But my first thought is that if we're advertising ourselves as not being NODE_NETWORK and we're only generating inv's for blocks that we have (and are likely to still have for some reasonable time window), that this ought to be acceptable network behavior.",
      "created_at" : "2015-05-12T19:17:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101392030",
      "id" : 101392030,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-12T19:17:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101392030",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "@sdaftuar Sounds very reasonable to me. 0.8 and 0.9 should never fetch\nanything that was not inv'ed, as far as I know.\n\nFor 0.10, we should only inv in case the last common ancestor of\npindexLastCommonBlock and the block being inved is not pruned (otherwise we\nmay trigger an async fetch that crosses pruned block ranges). That is\nprobably a safe mechanism in any case.Sorry if the code already does this,\nreviewing is currently hard for me.\n\n@cozz Yes, I understand. I think the current pruning facility is extremely\nlimited in usefulness (e.g. you can't even -addnode within a private\nnetwork to it and expect a useful result), and I agree the relaying issue\nis independent from the discovery/announcement.\n",
      "created_at" : "2015-05-12T19:34:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101395228",
      "id" : 101395228,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-12T19:34:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101395228",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Fixed nits.\r\n\r\nSo I believe this pruning feature might be better to be declared as \"experimental\" for 0.11, if there is such limited usefulness and potential negative side effects. For example besides block relay, if a lot of nodes decide to use this feature, then the address-manager gets \"spammed\" with pruned nodes.\r\nNon-pruned nodes should have priority over pruned ones, as for address-relay and address-selection, which is not even implemented currently.\r\n\r\nAs for this pull, I'd also say we can just always inv, because we dont call FindNextBlocksToDownload for pruned nodes. But then again, its unclear why it was even disabled in the first place.\r\n\r\n",
      "created_at" : "2015-05-12T22:11:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101437734",
      "id" : 101437734,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-12T22:11:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101437734",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2814559?v=3",
         "events_url" : "https://api.github.com/users/cozz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cozz/followers",
         "following_url" : "https://api.github.com/users/cozz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cozz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cozz",
         "id" : 2814559,
         "login" : "cozz",
         "organizations_url" : "https://api.github.com/users/cozz/orgs",
         "received_events_url" : "https://api.github.com/users/cozz/received_events",
         "repos_url" : "https://api.github.com/users/cozz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cozz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cozz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cozz"
      }
   },
   {
      "body" : "Hmm, @sdaftuar mentions that 0.10 does not download from fClient nodes. That's not entirely true - the direct fetching loop (in immediate response to an inv) may fetch from anyone who sends an inv, but the asynchronous fetching won't. That means that even with this code, 0.10 and up will not be able to retrieve a reorg from a pruned peer.",
      "created_at" : "2015-05-13T00:26:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101467065",
      "id" : 101467065,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-13T00:26:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101467065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa Sorry if I was unclear but yes that was what I was referring to when I said 0.10 wouldn't download non-inv'ed blocks except from NODE_NETWORK peers.  I agree that it seems unfortunate that 0.10 clients specifically wouldn't be able to retrieve a reorg from a pruned peer (while 0.8/0.9 would, via their getblocks logic).  Perhaps we should consider #5307 with some small cap on the number of blocks to inv, so that small reorgs would be successfully relayed from a pruning node to an 0.10 node (though with the n^2 overhead mentioned in that pull)?",
      "created_at" : "2015-05-13T00:48:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101470810",
      "id" : 101470810,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-13T01:08:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/101470810",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Another idea: perhaps pruning nodes could behave differently when they're responding to a \"getheaders\" message, so that in addition to returning headers, they would also send an inv if the headers being requested are for blocks that are all on disk and unlikely to be pruned (just as we would do for getblocks in #6130)?  This could serve as a hint to a peer that it can download those blocks from us, and would assist a peer in either handling a reorg or completing a small-ish sync (after, say, being down for less than 2 days).\r\n\r\nThis feels a little ugly, and I'm guessing not how we'd want to behave in the long-run, but maybe this could be a workaround for the time being.",
      "created_at" : "2015-05-14T13:33:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-102037520",
      "id" : 102037520,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-14T13:33:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102037520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=3",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "body" : "Continued in #6148",
      "created_at" : "2015-05-16T08:15:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-102586701",
      "id" : 102586701,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-16T08:15:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102586701",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "OH misundertood, #6148 is not based on this, but is a different implementation reopening.",
      "created_at" : "2015-05-16T08:17:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-102586735",
      "id" : 102586735,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-16T08:17:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102586735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=3",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "body" : "Closing for #6148 \r\n\r\nWe only announce what we have and not delete that soon anyway. And the asynchronous fetching is not called for pruned nodes. So what I did here is not even necessary.",
      "created_at" : "2015-05-16T11:40:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-102614040",
      "id" : 102614040,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6122",
      "updated_at" : "2015-05-16T11:40:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/102614040",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2814559?v=3",
         "events_url" : "https://api.github.com/users/cozz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cozz/followers",
         "following_url" : "https://api.github.com/users/cozz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cozz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cozz",
         "id" : 2814559,
         "login" : "cozz",
         "organizations_url" : "https://api.github.com/users/cozz/orgs",
         "received_events_url" : "https://api.github.com/users/cozz/received_events",
         "repos_url" : "https://api.github.com/users/cozz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cozz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cozz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cozz"
      }
   }
]
