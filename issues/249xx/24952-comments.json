[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Some basic timings for mainnet on my (admittedly not so amazing iMac), comparing to the existing compact format.\r\n\r\n## Time\r\n<img width=\"628\" alt=\"Screenshot 2022-04-23 at 09 09 57\" src=\"https://user-images.githubusercontent.com/3072149/164888919-ee4e8e8a-de15-41cb-8a71-9722c19208ed.png\">\r\n\r\n## Size\r\n<img width=\"324\" alt=\"Screenshot 2022-04-23 at 09 10 31\" src=\"https://user-images.githubusercontent.com/3072149/164888920-33c25d2b-e1a6-45b2-9f21-965f2aeab691.png\">\r\n\r\n---\r\n\r\nRoughly around twice as long and twice as big.\r\n",
      "created_at" : "2022-04-23T09:33:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1107441666",
      "id" : 1107441666,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CAjgC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1107441666/reactions"
      },
      "updated_at" : "2022-04-23T09:33:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1107441666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r856872979"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856872979"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "clang-format-diff.py formatted this and there are some changes. Not ideal for review, but let me know if I should remove the formatting.",
      "commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "created_at" : "2022-04-23T09:36:01Z",
      "diff_hunk" : "@@ -2260,50 +2261,66 @@ static RPCHelpMan dumptxoutset()\n         \"Write the serialized UTXO set to disk.\",\n         {\n             {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Path to the output file. If relative, will be prefixed by datadir.\"},\n+            {\"format\", RPCArg::Type::STR, RPCArg::Default{\"compact\"}, \"'compact' to output a compact binary serialized format, 'sqlite' to output a SQLite database with table 'txoutset' (requires sqlite3)\", \"format\"},\n         },\n         RPCResult{\n-            RPCResult::Type::OBJ, \"\", \"\",\n-                {\n-                    {RPCResult::Type::NUM, \"coins_written\", \"the number of coins written in the snapshot\"},\n-                    {RPCResult::Type::STR_HEX, \"base_hash\", \"the hash of the base of the snapshot\"},\n-                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n-                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was written to\"},\n-                    {RPCResult::Type::STR_HEX, \"txoutset_hash\", \"the hash of the UTXO set contents\"},\n-                    {RPCResult::Type::NUM, \"nchaintx\", \"the number of transactions in the chain up to and including the base block\"},\n-                }\n-        },\n-        RPCExamples{\n-            HelpExampleCli(\"dumptxoutset\", \"utxo.dat\")\n-        },\n-        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-{\n-    const ArgsManager& args{EnsureAnyArgsman(request.context)};\n-    const fs::path path = fsbridge::AbsPathJoin(args.GetDataDirNet(), fs::u8path(request.params[0].get_str()));\n-    // Write to a temporary path and then move into `path` on completion\n-    // to avoid confusion due to an interruption.\n-    const fs::path temppath = fsbridge::AbsPathJoin(args.GetDataDirNet(), fs::u8path(request.params[0].get_str() + \".incomplete\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r856872979",
      "id" : 856872979,
      "line" : 2284,
      "node_id" : "PRRC_kwDOABII584zEtgT",
      "original_commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "original_line" : 2284,
      "original_position" : 34,
      "original_start_line" : 2265,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 34,
      "pull_request_review_id" : 950948827,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856872979/reactions"
      },
      "side" : "LEFT",
      "start_line" : 2265,
      "start_side" : "LEFT",
      "updated_at" : "2022-04-23T09:36:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856872979",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25191](https://github.com/bitcoin/bitcoin/pull/25191) (build: Make `--with-gui=qt6` configure option available on macOS by hebasto)\n* [#24923](https://github.com/bitcoin/bitcoin/pull/24923) (Rework logging timer by MarcoFalke)\n* [#24798](https://github.com/bitcoin/bitcoin/pull/24798) ([POC] build: Hello Qt 6 by hebasto)\n* [#24410](https://github.com/bitcoin/bitcoin/pull/24410) ([kernel 2a/n] Split hashing/index `GetUTXOStats` codepaths, decouple from `coinstatsindex` by dongcarl)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-04-24T04:21:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1107706464",
      "id" : 1107706464,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CBkJg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1107706464/reactions"
      },
      "updated_at" : "2022-05-24T00:03:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1107706464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857084136"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857084136"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this makes sqlite3 a required dependency for building Bitcoin Core, right?\r\n\r\nSome CI tasks are failing because they don't have `sqlite3.h`.\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/24952/checks?check_run_id=6139350735\r\n\r\n```\r\nrpc/blockchain.cpp:34:10: fatal error: 'sqlite3.h' file not found\r\n#include <sqlite3.h>\r\n         ^~~~~~~~~~~\r\n```",
      "commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "created_at" : "2022-04-24T07:55:11Z",
      "diff_hunk" : "@@ -31,6 +31,7 @@\n #include <rpc/server_util.h>\n #include <rpc/util.h>\n #include <script/descriptor.h>\n+#include <sqlite3.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857084136",
      "id" : 857084136,
      "line" : 34,
      "node_id" : "PRRC_kwDOABII584zFhDo",
      "original_commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "original_line" : 34,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 4,
      "pull_request_review_id" : 951166654,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857084136/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T07:55:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857084136",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857084596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857084596"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah, right! Will fix up",
      "commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "created_at" : "2022-04-24T07:58:14Z",
      "diff_hunk" : "@@ -31,6 +31,7 @@\n #include <rpc/server_util.h>\n #include <rpc/util.h>\n #include <script/descriptor.h>\n+#include <sqlite3.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857084596",
      "id" : 857084596,
      "in_reply_to_id" : 857084136,
      "line" : 34,
      "node_id" : "PRRC_kwDOABII584zFhK0",
      "original_commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "original_line" : 34,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 4,
      "pull_request_review_id" : 951167049,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857084596/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T07:58:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857084596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857092327"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857092327"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Please add comment explaining why we want `journal_mode` set to `wal2` and ideally add a link to SQLite documentation: https://www.sqlite.org/cgi/src/doc/wal2/doc/wal2.md",
      "commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "created_at" : "2022-04-24T08:55:46Z",
      "diff_hunk" : "@@ -2340,30 +2357,107 @@ UniValue CreateUTXOSnapshot(\n         CHECK_NONFATAL(tip);\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n+    if (is_compact) {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(),\n+                                   fs::PathToString(path), fs::PathToString(temppath)));\n+        SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n \n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+        afile << metadata;\n \n-    afile << metadata;\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                afile << key;\n+                afile << coin;\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            pcursor->Next();\n         }\n \n-        pcursor->Next();\n-    }\n+        afile.fclose();\n+    } else {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n+\n+        sqlite3* db;\n+        int ret;\n+\n+        if (!ValidAsCString(path)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+        }\n+\n+        ret = sqlite3_open(path.c_str(), &db);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));\n+        }\n+\n+        ret = sqlite3_exec(db, \"PRAGMA journal_mode=wal2;\", nullptr, nullptr, nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857092327",
      "id" : 857092327,
      "line" : 2397,
      "node_id" : "PRRC_kwDOABII584zFjDn",
      "original_commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "original_line" : 2397,
      "original_position" : 172,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 174,
      "pull_request_review_id" : 951174036,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857092327/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T11:30:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857092327",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857111827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857111827"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The review would be so much easier if you reverted the formatting changes.",
      "commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "created_at" : "2022-04-24T11:32:03Z",
      "diff_hunk" : "@@ -2260,50 +2261,66 @@ static RPCHelpMan dumptxoutset()\n         \"Write the serialized UTXO set to disk.\",\n         {\n             {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Path to the output file. If relative, will be prefixed by datadir.\"},\n+            {\"format\", RPCArg::Type::STR, RPCArg::Default{\"compact\"}, \"'compact' to output a compact binary serialized format, 'sqlite' to output a SQLite database with table 'txoutset' (requires sqlite3)\", \"format\"},\n         },\n         RPCResult{\n-            RPCResult::Type::OBJ, \"\", \"\",\n-                {\n-                    {RPCResult::Type::NUM, \"coins_written\", \"the number of coins written in the snapshot\"},\n-                    {RPCResult::Type::STR_HEX, \"base_hash\", \"the hash of the base of the snapshot\"},\n-                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n-                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was written to\"},\n-                    {RPCResult::Type::STR_HEX, \"txoutset_hash\", \"the hash of the UTXO set contents\"},\n-                    {RPCResult::Type::NUM, \"nchaintx\", \"the number of transactions in the chain up to and including the base block\"},\n-                }\n-        },\n-        RPCExamples{\n-            HelpExampleCli(\"dumptxoutset\", \"utxo.dat\")\n-        },\n-        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-{\n-    const ArgsManager& args{EnsureAnyArgsman(request.context)};\n-    const fs::path path = fsbridge::AbsPathJoin(args.GetDataDirNet(), fs::u8path(request.params[0].get_str()));\n-    // Write to a temporary path and then move into `path` on completion\n-    // to avoid confusion due to an interruption.\n-    const fs::path temppath = fsbridge::AbsPathJoin(args.GetDataDirNet(), fs::u8path(request.params[0].get_str() + \".incomplete\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857111827",
      "id" : 857111827,
      "in_reply_to_id" : 856872979,
      "line" : 2279,
      "node_id" : "PRRC_kwDOABII584zFn0T",
      "original_commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "original_line" : 2279,
      "original_position" : 34,
      "original_start_line" : 2265,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 36,
      "pull_request_review_id" : 951192093,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857111827/reactions"
      },
      "side" : "LEFT",
      "start_line" : 2260,
      "start_side" : "LEFT",
      "updated_at" : "2022-04-24T11:32:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857111827",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857112165"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857112165"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this used anywhere?",
      "commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "created_at" : "2022-04-24T11:34:06Z",
      "diff_hunk" : "@@ -27,6 +27,7 @@ struct NodeContext;\n } // namespace node\n \n static constexpr int NUM_GETBLOCKSTATS_PERCENTILES = 5;\n+using coinsqlite_cb_t = std::function<std::string(const COutPoint&, const Coin&)>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857112165",
      "id" : 857112165,
      "line" : 30,
      "node_id" : "PRRC_kwDOABII584zFn5l",
      "original_commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "original_line" : 30,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.h",
      "position" : 4,
      "pull_request_review_id" : 951192349,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857112165/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T11:34:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857112165",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857112469"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857112469"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah, not anymore. Was going to have configurable fields like in the CSV PR, but decided against it otherwise things would get a little too complex here.\n\nWill remove ð",
      "commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "created_at" : "2022-04-24T11:36:19Z",
      "diff_hunk" : "@@ -27,6 +27,7 @@ struct NodeContext;\n } // namespace node\n \n static constexpr int NUM_GETBLOCKSTATS_PERCENTILES = 5;\n+using coinsqlite_cb_t = std::function<std::string(const COutPoint&, const Coin&)>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857112469",
      "id" : 857112469,
      "in_reply_to_id" : 857112165,
      "line" : 30,
      "node_id" : "PRRC_kwDOABII584zFn-V",
      "original_commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "original_line" : 30,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.h",
      "position" : 4,
      "pull_request_review_id" : 951192617,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857112469/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T11:36:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857112469",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857112482"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857112482"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "maybe `enum UTXOSnapshotFormat { FORMAT_COMPACT = 0, FORMAT_SQLITE = 1 };` instead of `bool` would be nicer and more explicit?",
      "commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "created_at" : "2022-04-24T11:36:29Z",
      "diff_hunk" : "@@ -53,6 +54,7 @@ void CalculatePercentilesByWeight(CAmount result[NUM_GETBLOCKSTATS_PERCENTILES],\n  * @return a UniValue map containing metadata about the snapshot.\n  */\n UniValue CreateUTXOSnapshot(\n+    const bool is_compact,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857112482",
      "id" : 857112482,
      "line" : 57,
      "node_id" : "PRRC_kwDOABII584zFn-i",
      "original_commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "original_line" : 57,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.h",
      "position" : 12,
      "pull_request_review_id" : 951192636,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857112482/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T11:38:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857112482",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857112721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857112721"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, I agree. I was going back and forth between them but I think explicit is better here. Would be easier to introduce another format in the future too. Will change ð",
      "commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "created_at" : "2022-04-24T11:38:26Z",
      "diff_hunk" : "@@ -53,6 +54,7 @@ void CalculatePercentilesByWeight(CAmount result[NUM_GETBLOCKSTATS_PERCENTILES],\n  * @return a UniValue map containing metadata about the snapshot.\n  */\n UniValue CreateUTXOSnapshot(\n+    const bool is_compact,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857112721",
      "id" : 857112721,
      "in_reply_to_id" : 857112482,
      "line" : 57,
      "node_id" : "PRRC_kwDOABII584zFoCR",
      "original_commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "original_line" : 57,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.h",
      "position" : 12,
      "pull_request_review_id" : 951192878,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857112721/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T11:38:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857112721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "~~Some other failures related to string type conversions in Windows I'm not so familiar with here. Will have a closer look when I'm back home.~~\r\n\r\nEDIT: Never mind. I can't read...",
      "created_at" : "2022-04-24T11:40:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1107823511",
      "id" : 1107823511,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CCAuX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1107823511/reactions"
      },
      "updated_at" : "2022-04-24T19:02:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1107823511",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857113355"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857113355"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Btw, isn't `journal_mode = off` even better match for what we want? I think that not using journal might significantly improve write performance.",
      "commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "created_at" : "2022-04-24T11:43:17Z",
      "diff_hunk" : "@@ -2340,30 +2357,107 @@ UniValue CreateUTXOSnapshot(\n         CHECK_NONFATAL(tip);\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n+    if (is_compact) {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(),\n+                                   fs::PathToString(path), fs::PathToString(temppath)));\n+        SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n \n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+        afile << metadata;\n \n-    afile << metadata;\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                afile << key;\n+                afile << coin;\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            pcursor->Next();\n         }\n \n-        pcursor->Next();\n-    }\n+        afile.fclose();\n+    } else {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n+\n+        sqlite3* db;\n+        int ret;\n+\n+        if (!ValidAsCString(path)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+        }\n+\n+        ret = sqlite3_open(path.c_str(), &db);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));\n+        }\n+\n+        ret = sqlite3_exec(db, \"PRAGMA journal_mode=wal2;\", nullptr, nullptr, nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857113355",
      "id" : 857113355,
      "in_reply_to_id" : 857092327,
      "line" : 2397,
      "node_id" : "PRRC_kwDOABII584zFoML",
      "original_commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "original_line" : 2397,
      "original_position" : 172,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 174,
      "pull_request_review_id" : 951193390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857113355/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T11:48:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857113355",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857113983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857113983"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, we don't need/use rollbacks. It's just an export so that makes sense.",
      "commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "created_at" : "2022-04-24T11:48:03Z",
      "diff_hunk" : "@@ -2340,30 +2357,107 @@ UniValue CreateUTXOSnapshot(\n         CHECK_NONFATAL(tip);\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n+    if (is_compact) {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(),\n+                                   fs::PathToString(path), fs::PathToString(temppath)));\n+        SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n \n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+        afile << metadata;\n \n-    afile << metadata;\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                afile << key;\n+                afile << coin;\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            pcursor->Next();\n         }\n \n-        pcursor->Next();\n-    }\n+        afile.fclose();\n+    } else {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n+\n+        sqlite3* db;\n+        int ret;\n+\n+        if (!ValidAsCString(path)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+        }\n+\n+        ret = sqlite3_open(path.c_str(), &db);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));\n+        }\n+\n+        ret = sqlite3_exec(db, \"PRAGMA journal_mode=wal2;\", nullptr, nullptr, nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857113983",
      "id" : 857113983,
      "in_reply_to_id" : 857092327,
      "line" : 2397,
      "node_id" : "PRRC_kwDOABII584zFoV_",
      "original_commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "original_line" : 2397,
      "original_position" : 172,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 174,
      "pull_request_review_id" : 951193961,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857113983/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T11:48:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857113983",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857116269"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857116269"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Forgot to handle the SQLITE_* constants too. Will fix up.",
      "commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "created_at" : "2022-04-24T12:06:27Z",
      "diff_hunk" : "@@ -31,6 +31,7 @@\n #include <rpc/server_util.h>\n #include <rpc/util.h>\n #include <script/descriptor.h>\n+#include <sqlite3.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857116269",
      "id" : 857116269,
      "in_reply_to_id" : 857084136,
      "line" : 35,
      "node_id" : "PRRC_kwDOABII584zFo5t",
      "original_commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "original_line" : 35,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 5,
      "pull_request_review_id" : 951196090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857116269/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T12:06:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857116269",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857165124"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857165124"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see this is now addressed in 84a6e28a8536fdc79796856e36be86a3bffe1848, thanks!",
      "commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "created_at" : "2022-04-24T18:52:45Z",
      "diff_hunk" : "@@ -2340,30 +2357,107 @@ UniValue CreateUTXOSnapshot(\n         CHECK_NONFATAL(tip);\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n+    if (is_compact) {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(),\n+                                   fs::PathToString(path), fs::PathToString(temppath)));\n+        SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n \n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+        afile << metadata;\n \n-    afile << metadata;\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                afile << key;\n+                afile << coin;\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            pcursor->Next();\n         }\n \n-        pcursor->Next();\n-    }\n+        afile.fclose();\n+    } else {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n+\n+        sqlite3* db;\n+        int ret;\n+\n+        if (!ValidAsCString(path)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+        }\n+\n+        ret = sqlite3_open(path.c_str(), &db);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));\n+        }\n+\n+        ret = sqlite3_exec(db, \"PRAGMA journal_mode=wal2;\", nullptr, nullptr, nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857165124",
      "id" : 857165124,
      "in_reply_to_id" : 857092327,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zF01E",
      "original_commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "original_line" : 2397,
      "original_position" : 172,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 951238457,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857165124/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T18:52:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857165124",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857165246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857165246"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see this is now addressed in 84a6e28a8536fdc79796856e36be86a3bffe1848, thanks!",
      "commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "created_at" : "2022-04-24T18:53:42Z",
      "diff_hunk" : "@@ -27,6 +27,7 @@ struct NodeContext;\n } // namespace node\n \n static constexpr int NUM_GETBLOCKSTATS_PERCENTILES = 5;\n+using coinsqlite_cb_t = std::function<std::string(const COutPoint&, const Coin&)>;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857165246",
      "id" : 857165246,
      "in_reply_to_id" : 857112165,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zF02-",
      "original_commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "original_line" : 30,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.h",
      "position" : null,
      "pull_request_review_id" : 951238544,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857165246/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T18:53:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857165246",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857165249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857165249"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see this is now addressed in 84a6e28a8536fdc79796856e36be86a3bffe1848, thanks!",
      "commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "created_at" : "2022-04-24T18:53:48Z",
      "diff_hunk" : "@@ -53,6 +54,7 @@ void CalculatePercentilesByWeight(CAmount result[NUM_GETBLOCKSTATS_PERCENTILES],\n  * @return a UniValue map containing metadata about the snapshot.\n  */\n UniValue CreateUTXOSnapshot(\n+    const bool is_compact,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857165249",
      "id" : 857165249,
      "in_reply_to_id" : 857112482,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zF03B",
      "original_commit_id" : "21ee90dda3daed0bc3d7063dfc2118537df08273",
      "original_line" : 57,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.h",
      "position" : null,
      "pull_request_review_id" : 951238549,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857165249/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T18:53:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857165249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857165927"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857165927"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, sorry. This comment missed my eye. I can revert this. Will push with the Win64 errors I figured out.",
      "commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "created_at" : "2022-04-24T18:59:51Z",
      "diff_hunk" : "@@ -2260,50 +2261,66 @@ static RPCHelpMan dumptxoutset()\n         \"Write the serialized UTXO set to disk.\",\n         {\n             {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Path to the output file. If relative, will be prefixed by datadir.\"},\n+            {\"format\", RPCArg::Type::STR, RPCArg::Default{\"compact\"}, \"'compact' to output a compact binary serialized format, 'sqlite' to output a SQLite database with table 'txoutset' (requires sqlite3)\", \"format\"},\n         },\n         RPCResult{\n-            RPCResult::Type::OBJ, \"\", \"\",\n-                {\n-                    {RPCResult::Type::NUM, \"coins_written\", \"the number of coins written in the snapshot\"},\n-                    {RPCResult::Type::STR_HEX, \"base_hash\", \"the hash of the base of the snapshot\"},\n-                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n-                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was written to\"},\n-                    {RPCResult::Type::STR_HEX, \"txoutset_hash\", \"the hash of the UTXO set contents\"},\n-                    {RPCResult::Type::NUM, \"nchaintx\", \"the number of transactions in the chain up to and including the base block\"},\n-                }\n-        },\n-        RPCExamples{\n-            HelpExampleCli(\"dumptxoutset\", \"utxo.dat\")\n-        },\n-        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-{\n-    const ArgsManager& args{EnsureAnyArgsman(request.context)};\n-    const fs::path path = fsbridge::AbsPathJoin(args.GetDataDirNet(), fs::u8path(request.params[0].get_str()));\n-    // Write to a temporary path and then move into `path` on completion\n-    // to avoid confusion due to an interruption.\n-    const fs::path temppath = fsbridge::AbsPathJoin(args.GetDataDirNet(), fs::u8path(request.params[0].get_str() + \".incomplete\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857165927",
      "id" : 857165927,
      "in_reply_to_id" : 856872979,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zF1Bn",
      "original_commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "original_line" : 2279,
      "original_position" : 34,
      "original_start_line" : 2265,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 951239009,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857165927/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2022-04-24T19:00:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857165927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857169783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857169783"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Reverted formatting. Should be much clearer now :)",
      "commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "created_at" : "2022-04-24T19:35:17Z",
      "diff_hunk" : "@@ -2260,50 +2261,66 @@ static RPCHelpMan dumptxoutset()\n         \"Write the serialized UTXO set to disk.\",\n         {\n             {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Path to the output file. If relative, will be prefixed by datadir.\"},\n+            {\"format\", RPCArg::Type::STR, RPCArg::Default{\"compact\"}, \"'compact' to output a compact binary serialized format, 'sqlite' to output a SQLite database with table 'txoutset' (requires sqlite3)\", \"format\"},\n         },\n         RPCResult{\n-            RPCResult::Type::OBJ, \"\", \"\",\n-                {\n-                    {RPCResult::Type::NUM, \"coins_written\", \"the number of coins written in the snapshot\"},\n-                    {RPCResult::Type::STR_HEX, \"base_hash\", \"the hash of the base of the snapshot\"},\n-                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n-                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was written to\"},\n-                    {RPCResult::Type::STR_HEX, \"txoutset_hash\", \"the hash of the UTXO set contents\"},\n-                    {RPCResult::Type::NUM, \"nchaintx\", \"the number of transactions in the chain up to and including the base block\"},\n-                }\n-        },\n-        RPCExamples{\n-            HelpExampleCli(\"dumptxoutset\", \"utxo.dat\")\n-        },\n-        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n-{\n-    const ArgsManager& args{EnsureAnyArgsman(request.context)};\n-    const fs::path path = fsbridge::AbsPathJoin(args.GetDataDirNet(), fs::u8path(request.params[0].get_str()));\n-    // Write to a temporary path and then move into `path` on completion\n-    // to avoid confusion due to an interruption.\n-    const fs::path temppath = fsbridge::AbsPathJoin(args.GetDataDirNet(), fs::u8path(request.params[0].get_str() + \".incomplete\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857169783",
      "id" : 857169783,
      "in_reply_to_id" : 856872979,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zF193",
      "original_commit_id" : "eaa4e63dac2bfd32a6457f6bea1dd3d81b0e77ec",
      "original_line" : 2279,
      "original_position" : 34,
      "original_start_line" : 2265,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 951242023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857169783/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2022-04-24T19:35:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857169783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857179874"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857179874"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think wal2 is a hangover from a previous version here",
      "commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "created_at" : "2022-04-24T21:12:38Z",
      "diff_hunk" : "@@ -2334,30 +2362,117 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n-\n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT:\n+        {\n+            LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                    tip->nHeight, tip->GetBlockHash().ToString(),\n+                                    fs::PathToString(path), fs::PathToString(temppath)));\n+            SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+\n+            afile << metadata;\n+\n+            COutPoint key;\n+            Coin coin;\n+            unsigned int iter{0};\n+\n+            while (pcursor->Valid()) {\n+                if (iter % 5000 == 0) node.rpc_interruption_point();\n+                ++iter;\n+                if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                    afile << key;\n+                    afile << coin;\n+                }\n \n-    afile << metadata;\n+                pcursor->Next();\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            afile.fclose();\n+            break;\n         }\n+    case UTXOSnapshotFormat::SQLITE:\n+        {\n+#ifdef USE_SQLITE\n+            LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                    tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n \n-        pcursor->Next();\n-    }\n+            sqlite3* db;\n+            int ret;\n+\n+            if (!ValidAsCString(fs::PathToString(path))) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+            }\n+\n+            ret = sqlite3_open(fs::PathToString(path).c_str(), &db);\n+            if (ret != SQLITE_OK) {\n+                sqlite3_close(db);\n+                throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));\n+            }\n \n-    afile.fclose();\n+            // We have no need for rollbacks here, so we can set the `journal_mode` to 'off'. See: https://www.sqlite.org/pragma.html#pragma_journal_mode\n+            ret = sqlite3_exec(db, \"PRAGMA journal_mode=off;\", nullptr, nullptr, nullptr);\n+            if (ret != SQLITE_OK) {\n+                throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set wal2: %s\\n\", sqlite3_errstr(ret)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857179874",
      "id" : 857179874,
      "line" : 2415,
      "node_id" : "PRRC_kwDOABII584zF4bi",
      "original_commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "original_line" : 2415,
      "original_position" : 147,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 147,
      "pull_request_review_id" : 951249602,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857179874/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T21:38:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857179874",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857180920"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857180920"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "curious why we don't use the temppath for sqlite like we do on compact?",
      "commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "created_at" : "2022-04-24T21:24:41Z",
      "diff_hunk" : "@@ -2289,8 +2308,16 @@ static RPCHelpMan dumptxoutset()\n     CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     UniValue result = CreateUTXOSnapshot(\n-        node, node.chainman->ActiveChainstate(), afile, path, temppath);\n-    fs::rename(temppath, path);\n+        format, node, node.chainman->ActiveChainstate(), afile, path, temppath);\n+\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT:\n+        fs::rename(temppath, path);\n+        break;\n+    case UTXOSnapshotFormat::SQLITE:\n+        fs::remove(temppath);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857180920",
      "id" : 857180920,
      "line" : 2318,
      "node_id" : "PRRC_kwDOABII584zF4r4",
      "original_commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "original_line" : 2318,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 60,
      "pull_request_review_id" : 951249602,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857180920/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-24T21:38:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857180920",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857223170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857223170"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`temppath` adds \".incomplete\" to the end of the filename.\r\n`path` is the path entered by the user, so the database is created using this parameter.\r\n\r\n`temppath` can eventually be removed from `CreateUTXOSnapshot()` as this parameter is used only once and for logging purposes. I think the same information can be obtained from `afile` as it is created from `temppath`.\r\n\r\n\r\n\r\n",
      "commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "created_at" : "2022-04-25T02:39:35Z",
      "diff_hunk" : "@@ -2289,8 +2308,16 @@ static RPCHelpMan dumptxoutset()\n     CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     UniValue result = CreateUTXOSnapshot(\n-        node, node.chainman->ActiveChainstate(), afile, path, temppath);\n-    fs::rename(temppath, path);\n+        format, node, node.chainman->ActiveChainstate(), afile, path, temppath);\n+\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT:\n+        fs::rename(temppath, path);\n+        break;\n+    case UTXOSnapshotFormat::SQLITE:\n+        fs::remove(temppath);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857223170",
      "id" : 857223170,
      "in_reply_to_id" : 857180920,
      "line" : 2318,
      "node_id" : "PRRC_kwDOABII584zGDAC",
      "original_commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "original_line" : 2318,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 60,
      "pull_request_review_id" : 951297236,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857223170/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-25T02:40:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857223170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94266259?v=4",
         "events_url" : "https://api.github.com/users/w0xlt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/w0xlt/followers",
         "following_url" : "https://api.github.com/users/w0xlt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/w0xlt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/w0xlt",
         "id" : 94266259,
         "login" : "w0xlt",
         "node_id" : "U_kgDOBZ5jkw",
         "organizations_url" : "https://api.github.com/users/w0xlt/orgs",
         "received_events_url" : "https://api.github.com/users/w0xlt/received_events",
         "repos_url" : "https://api.github.com/users/w0xlt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/w0xlt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/w0xlt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/w0xlt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857340250"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857340250"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Formatting nit-pick:\r\n```suggestion\r\n            HelpExampleCli(\"dumptxoutset\", \"utxo.dat\") +\r\n            HelpExampleCli(\"dumptxoutset\", \"\\\"utxo.db\\\" \\\"sqlite\\\"\")\r\n```",
      "commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "created_at" : "2022-04-25T07:40:55Z",
      "diff_hunk" : "@@ -2269,6 +2273,7 @@ static RPCHelpMan dumptxoutset()\n         },\n         RPCExamples{\n             HelpExampleCli(\"dumptxoutset\", \"utxo.dat\")\n+    + HelpExampleCli(\"dumptxoutset\", \"\\\"utxo.db\\\" \\\"sqlite\\\"\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857340250",
      "id" : 857340250,
      "line" : 2276,
      "node_id" : "PRRC_kwDOABII584zGfla",
      "original_commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "original_line" : 2276,
      "original_position" : 22,
      "original_start_line" : 2275,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 22,
      "pull_request_review_id" : 951459500,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857340250/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 2275,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-25T07:43:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857340250",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857428712"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857428712"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, it's not used in SQLite branch (nothing actually gets written to it), but it is somewhat tightly coupled, and since we need to do the USE_SQLITE check, it makes it a little difficult to completely decouple. So I just thought to remove it at the end. Acts as a decent indicator that nothing bad happened too (although redundant).\r\n\r\nMaybe this can be refactored in the future if we don't want it.",
      "commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "created_at" : "2022-04-25T09:25:23Z",
      "diff_hunk" : "@@ -2289,8 +2308,16 @@ static RPCHelpMan dumptxoutset()\n     CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     UniValue result = CreateUTXOSnapshot(\n-        node, node.chainman->ActiveChainstate(), afile, path, temppath);\n-    fs::rename(temppath, path);\n+        format, node, node.chainman->ActiveChainstate(), afile, path, temppath);\n+\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT:\n+        fs::rename(temppath, path);\n+        break;\n+    case UTXOSnapshotFormat::SQLITE:\n+        fs::remove(temppath);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857428712",
      "id" : 857428712,
      "in_reply_to_id" : 857180920,
      "line" : 2318,
      "node_id" : "PRRC_kwDOABII584zG1Lo",
      "original_commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "original_line" : 2318,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 60,
      "pull_request_review_id" : 951582746,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857428712/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-25T09:25:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857428712",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857429350"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857429350"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Indeed, thanks!",
      "commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "created_at" : "2022-04-25T09:26:05Z",
      "diff_hunk" : "@@ -2334,30 +2362,117 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n-\n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT:\n+        {\n+            LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                    tip->nHeight, tip->GetBlockHash().ToString(),\n+                                    fs::PathToString(path), fs::PathToString(temppath)));\n+            SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+\n+            afile << metadata;\n+\n+            COutPoint key;\n+            Coin coin;\n+            unsigned int iter{0};\n+\n+            while (pcursor->Valid()) {\n+                if (iter % 5000 == 0) node.rpc_interruption_point();\n+                ++iter;\n+                if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                    afile << key;\n+                    afile << coin;\n+                }\n \n-    afile << metadata;\n+                pcursor->Next();\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            afile.fclose();\n+            break;\n         }\n+    case UTXOSnapshotFormat::SQLITE:\n+        {\n+#ifdef USE_SQLITE\n+            LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                    tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n \n-        pcursor->Next();\n-    }\n+            sqlite3* db;\n+            int ret;\n+\n+            if (!ValidAsCString(fs::PathToString(path))) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+            }\n+\n+            ret = sqlite3_open(fs::PathToString(path).c_str(), &db);\n+            if (ret != SQLITE_OK) {\n+                sqlite3_close(db);\n+                throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));\n+            }\n \n-    afile.fclose();\n+            // We have no need for rollbacks here, so we can set the `journal_mode` to 'off'. See: https://www.sqlite.org/pragma.html#pragma_journal_mode\n+            ret = sqlite3_exec(db, \"PRAGMA journal_mode=off;\", nullptr, nullptr, nullptr);\n+            if (ret != SQLITE_OK) {\n+                throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set wal2: %s\\n\", sqlite3_errstr(ret)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857429350",
      "id" : 857429350,
      "in_reply_to_id" : 857179874,
      "line" : 2415,
      "node_id" : "PRRC_kwDOABII584zG1Vm",
      "original_commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "original_line" : 2415,
      "original_position" : 147,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 147,
      "pull_request_review_id" : 951583527,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857429350/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-25T09:26:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857429350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857471771"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857471771"
         }
      },
      "author_association" : "MEMBER",
      "body" : "indentation nit (or just run clang-format on the diff)\r\n```diff\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -2366,8 +2366,8 @@ UniValue CreateUTXOSnapshot(\r\n     case UTXOSnapshotFormat::COMPACT:\r\n         {\r\n             LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\r\n-                                    tip->nHeight, tip->GetBlockHash().ToString(),\r\n-                                    fs::PathToString(path), fs::PathToString(temppath)));\r\n+                                       tip->nHeight, tip->GetBlockHash().ToString(),\r\n+                                       fs::PathToString(path), fs::PathToString(temppath)));\r\n             SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\r\n ```\r\n",
      "commit_id" : "2d95dbb489ba32d4965dd42e87d9e899bd52a01d",
      "created_at" : "2022-04-25T10:15:51Z",
      "diff_hunk" : "@@ -2334,30 +2362,117 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n-\n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT:\n+        {\n+            LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                    tip->nHeight, tip->GetBlockHash().ToString(),\n+                                    fs::PathToString(path), fs::PathToString(temppath)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857471771",
      "id" : 857471771,
      "line" : 2370,
      "node_id" : "PRRC_kwDOABII584zG_sb",
      "original_commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "original_line" : 2370,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 90,
      "pull_request_review_id" : 951640797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857471771/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-25T10:37:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857471771",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857472277"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857472277"
         }
      },
      "author_association" : "MEMBER",
      "body" : "indentation nit\r\n```suggestion\r\n                                       tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\r\n```\r\n",
      "commit_id" : "2d95dbb489ba32d4965dd42e87d9e899bd52a01d",
      "created_at" : "2022-04-25T10:16:31Z",
      "diff_hunk" : "@@ -2334,30 +2362,117 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n-\n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT:\n+        {\n+            LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                    tip->nHeight, tip->GetBlockHash().ToString(),\n+                                    fs::PathToString(path), fs::PathToString(temppath)));\n+            SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+\n+            afile << metadata;\n+\n+            COutPoint key;\n+            Coin coin;\n+            unsigned int iter{0};\n+\n+            while (pcursor->Valid()) {\n+                if (iter % 5000 == 0) node.rpc_interruption_point();\n+                ++iter;\n+                if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                    afile << key;\n+                    afile << coin;\n+                }\n \n-    afile << metadata;\n+                pcursor->Next();\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            afile.fclose();\n+            break;\n         }\n+    case UTXOSnapshotFormat::SQLITE:\n+        {\n+#ifdef USE_SQLITE\n+            LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                    tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857472277",
      "id" : 857472277,
      "line" : 2397,
      "node_id" : "PRRC_kwDOABII584zG_0V",
      "original_commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "original_line" : 2397,
      "original_position" : 126,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 128,
      "pull_request_review_id" : 951640797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857472277/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-25T10:35:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857472277",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857475674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857475674"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The code blocks below each case are indented 4 spaces too deeply (don't hesitate to run clang-format on the diff).\r\n```suggestion\r\n    case UTXOSnapshotFormat::COMPACT: {\r\n```",
      "commit_id" : "2d95dbb489ba32d4965dd42e87d9e899bd52a01d",
      "created_at" : "2022-04-25T10:20:49Z",
      "diff_hunk" : "@@ -2334,30 +2362,117 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n-\n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857475674",
      "id" : 857475674,
      "line" : 2366,
      "node_id" : "PRRC_kwDOABII584zHApa",
      "original_commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "original_line" : 2366,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 86,
      "pull_request_review_id" : 951640797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857475674/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-25T10:35:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857475674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857482529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857482529"
         }
      },
      "author_association" : "MEMBER",
      "body" : "suggestions\r\n```diff\r\n+++ b/test/functional/rpc_dumptxoutset.py\r\n@@ -21,6 +21,7 @@ class DumptxoutsetTest(BitcoinTestFramework):\r\n         self.num_nodes = 1\r\n \r\n     def test_compact_format(self):\r\n+        self.log.info(\"Test compact format\")\r\n         node = self.nodes[0]\r\n@@ -55,8 +56,8 @@ class DumptxoutsetTest(BitcoinTestFramework):\r\n \r\n     def test_sqlite_format(self):\r\n+        self.log.info(\"Test sqlite format\")\r\n         node = self.nodes[0]\r\n-\r\n         FILENAME = 'txoutset.db'\r\n@@ -83,10 +84,10 @@ class DumptxoutsetTest(BitcoinTestFramework):\r\n     def run_test(self):\r\n-        \"\"\"Test trivial usage of the dumptxoutset RPC command.\"\"\"\r\n         self.test_compact_format()\r\n         if self.is_sqlite_compiled():\r\n             self.test_sqlite_format()\r\n \r\n+\r\n if __name__ == '__main__':\r\n     DumptxoutsetTest().main()\r\n```\r\n",
      "commit_id" : "2d95dbb489ba32d4965dd42e87d9e899bd52a01d",
      "created_at" : "2022-04-25T10:29:38Z",
      "diff_hunk" : "@@ -53,5 +54,41 @@ def run_test(self):\n         assert_raises_rpc_error(\n             -8, '{} already exists'.format(FILENAME),  node.dumptxoutset, FILENAME)\n \n+    def test_sqlite_format(self):\n+        node = self.nodes[1]\n+        mocktime = node.getblockheader(node.getblockhash(0))['time'] + 1\n+        node.setmocktime(mocktime)\n+\n+        FILENAME = 'txoutset.db'\n+        out = node.dumptxoutset(FILENAME, 'sqlite')\n+        expected_path = Path(node.datadir) / self.chain / FILENAME\n+\n+        assert expected_path.is_file()\n+\n+        assert_equal(out['coins_written'], 100)\n+        assert_equal(out['base_height'], 100)\n+        assert_equal(out['path'], str(expected_path))\n+        # Blockhash should be deterministic based on mocked time.\n+        assert_equal(\n+            out['base_hash'],\n+            '09abf0e7b510f61ca6cf33bab104e9ee99b3528b371d27a2d4b39abb800fba7e')\n+\n+        assert_equal(\n+            out['txoutset_hash'], '1f7e3befd45dc13ae198dfbb22869a9c5c4196f8e9ef9735831af1288033f890')\n+        assert_equal(out['nchaintx'], 101)\n+\n+        # Checking that no temporary file remains for a sqlite dump.\n+        assert not os.path.exists(Path(node.datadir) / self.chain / (FILENAME + '.incomplete'))\n+\n+        # Specifying a path to an existing file will fail.\n+        assert_raises_rpc_error(\n+            -8, '{} already exists'.format(FILENAME),  node.dumptxoutset, FILENAME)\n+\n+    def run_test(self):\n+        \"\"\"Test trivial usage of the dumptxoutset RPC command.\"\"\"\n+        self.test_compact_format()\n+        if self.is_sqlite_compiled():\n+            self.test_sqlite_format()\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857482529",
      "id" : 857482529,
      "line" : 92,
      "node_id" : "PRRC_kwDOABII584zHCUh",
      "original_commit_id" : "2d95dbb489ba32d4965dd42e87d9e899bd52a01d",
      "original_line" : 92,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "test/functional/rpc_dumptxoutset.py",
      "position" : 61,
      "pull_request_review_id" : 951640797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857482529/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-25T10:36:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857482529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857486251"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857486251"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This outputs the following:\r\n```\r\n2. format    (string, optional, default=\"compact\") 'compact' to output a compact binary serialized format, 'sqlite' to output a SQLite database with table 'txoutset' (requires sqlite3)\r\n```\r\nMaybe use quotes the same as the default.\r\n```suggestion\r\n            {\"format\", RPCArg::Type::STR, RPCArg::Default{\"compact\"}, \"\\\"compact\\\" to output a compact binary serialized format, \\\"sqlite\\\" to output a SQLite database with table \\\"txoutset\\\" (requires sqlite3)\", \"format\"},\r\n```",
      "commit_id" : "2d95dbb489ba32d4965dd42e87d9e899bd52a01d",
      "created_at" : "2022-04-25T10:34:26Z",
      "diff_hunk" : "@@ -2255,6 +2258,7 @@ static RPCHelpMan dumptxoutset()\n         \"Write the serialized UTXO set to disk.\",\n         {\n             {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Path to the output file. If relative, will be prefixed by datadir.\"},\n+            {\"format\", RPCArg::Type::STR, RPCArg::Default{\"compact\"}, \"'compact' to output a compact binary serialized format, 'sqlite' to output a SQLite database with table 'txoutset' (requires sqlite3)\", \"format\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857486251",
      "id" : 857486251,
      "line" : 2261,
      "node_id" : "PRRC_kwDOABII584zHDOr",
      "original_commit_id" : "2d95dbb489ba32d4965dd42e87d9e899bd52a01d",
      "original_line" : 2261,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 14,
      "pull_request_review_id" : 951640797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857486251/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-25T10:35:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857486251",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857500861"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857500861"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks. I had removed a formatting change to make review a bit easier and then was not running it on subsequent changes.",
      "commit_id" : "2d95dbb489ba32d4965dd42e87d9e899bd52a01d",
      "created_at" : "2022-04-25T10:53:38Z",
      "diff_hunk" : "@@ -2334,30 +2362,117 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n-\n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r857500861",
      "id" : 857500861,
      "in_reply_to_id" : 857475674,
      "line" : 2366,
      "node_id" : "PRRC_kwDOABII584zHGy9",
      "original_commit_id" : "889f6c719dbd2bca5f38a6a5a89f39fb4639558f",
      "original_line" : 2366,
      "original_position" : 84,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 86,
      "pull_request_review_id" : 951680276,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857500861/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-25T10:53:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/857500861",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> * Is there any reason why we store prevoutHash and scriptPubKey with type TEXT rather than a BLOB?\r\n\r\nOne of the goals of this change is to enable trivial creation of JSON/CSV files with the data. This can be achieved simply by using one of the following:\r\n\r\n* `sqlite3 -header -csv utxo.db \"SELECT * FROM utxos\" > utxo.csv`\r\n* `sqlite3 -json utxo.db \"SELECT * FROM utxos\" > utxo.json`\r\n\r\nIf BLOB was used instead of hex stored in TEXT, this conversion step could not have been done trivially as one would have to specify a more complex SQL query such as:\r\n\r\n`SELECT hex(txid), vout, value, coinbase, height, hex(scriptpubkey) FROM utxos`\r\n\r\nHowever, it might still be worth a shot to require more complicated SQL query if we really gain 2x the performance and decrease the disk space to 50%.",
      "created_at" : "2022-04-25T16:00:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1108758629",
      "id" : 1108758629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CFlBl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108758629/reactions"
      },
      "updated_at" : "2022-04-25T16:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108758629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> - Not sure if it helps in this scenario or is worthy to investigate, but in some cases I've made good experiences by tuning the `cache_size` parameter (https://www.sqlite.org/pragma.html#pragma_cache_size) in order to have less frequent writes (the default is 2 MB)\n\nThanks! I'm happy to investigate tuning this. We're currently roughly getting it to be double the time of a compact dump.\n",
      "created_at" : "2022-04-25T16:06:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1108765388",
      "id" : 1108765388,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CFmrM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108765388/reactions"
      },
      "updated_at" : "2022-04-25T16:06:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108765388",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> We're currently roughly getting it to be double the time of a compact dump.\r\n\r\nI think you can't get much better than this. You are writing approx 2x the data (because of hex representation of `txid` and `scriptpubkey` and my guess is that the whole operation is I/O bound and not CPU bound.\r\n\r\nIMO the only way how to make the process fast is to use BLOB type as suggested by @theStack above at the expense of requiring more complex query when working with the data.",
      "created_at" : "2022-04-25T16:09:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1108768814",
      "id" : 1108768814,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CFngu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108768814/reactions"
      },
      "updated_at" : "2022-04-25T16:09:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108768814",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> However, it might still be worth a shot to require more complicated SQL query if we really gain 2x the performance and decrease the disk space to 50%.\n\nI think that's a fair trade-off. Also should not be all that more complicated of a query.\n\n",
      "created_at" : "2022-04-25T16:10:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1108770480",
      "id" : 1108770480,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CFn6w",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108770480/reactions"
      },
      "updated_at" : "2022-04-25T16:10:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108770480",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@prusnak: Thanks for elaborating, easy conversion to CSV/JSON etc. makes sense!\r\n\r\nOne thing that has to be taken care of is the endianness of the txid hash. Unfortunately Bitcoin displays (and accepts, in case of user input for RPCs) txids and block hashes as little endian, but they are stored internally as big endian: https://bitcoin.stackexchange.com/a/2069\r\nThat means, if we decide to store in TEXT, then the txid has already the typical form as we know them from wallets, block explorers, debug outputs etc. (`hash.GetHex()` takes care of that), but on the other hand if we want to use that prevout for e.g. constructing a transaction in a raw byte-by-byte way, then it would need to be reversed first.\r\nIf we store it as a BLOB though, it has the internal big endian format, but `hex(txid)` doesn't show it in the right way, as it would need to be reversed first. Unfortunately, there is no built-in \"reverse\" operator in SQLite :/ If there was, we could simply do something like the following for the conversion script:\r\n`SELECT hex(reverse(txid)), vout, value, coinbase, height, hex(scriptpubkey) FROM utxos`\r\n\r\n(For the scriptPubKey, there is no such endianness problem as it is simply a sequence of bytes)\r\n\r\nSo as far as I can see, we have to decide between either easy-conversion or ~2x performance / 50% size (though the latter is still just an assumption). One possible idea would be to store the BLOB already reversed, but this is kind of a something in-between solution that possibly is even more confusing for users.",
      "created_at" : "2022-04-25T16:34:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1108794823",
      "id" : 1108794823,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CFt3H",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108794823/reactions"
      },
      "updated_at" : "2022-04-25T16:34:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108794823",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r858129535"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858129535"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "maybe we could cover this error in the functional test, passing a wrong path.",
      "commit_id" : "2d95f24c358cfea7bd7cb11c14e26954560c651d",
      "created_at" : "2022-04-26T00:46:01Z",
      "diff_hunk" : "@@ -2334,30 +2362,115 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT: {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(),\n+                                   fs::PathToString(path), fs::PathToString(temppath)));\n+        SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n \n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+        afile << metadata;\n \n-    afile << metadata;\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                afile << key;\n+                afile << coin;\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            pcursor->Next();\n         }\n \n-        pcursor->Next();\n+        afile.fclose();\n+        break;\n     }\n+    case UTXOSnapshotFormat::SQLITE: {\n+#ifdef USE_SQLITE\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n+\n+        sqlite3* db;\n+        int ret;\n+\n+        if (!ValidAsCString(fs::PathToString(path))) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+        }\n+\n+        ret = sqlite3_open(fs::PathToString(path).c_str(), &db);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r858129535",
      "id" : 858129535,
      "line" : 2407,
      "node_id" : "PRRC_kwDOABII584zJgR_",
      "original_commit_id" : "2d95f24c358cfea7bd7cb11c14e26954560c651d",
      "original_line" : 2407,
      "original_position" : 165,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 165,
      "pull_request_review_id" : 952583827,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858129535/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-26T00:46:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858129535",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r858130507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858130507"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: is there a reason to call the original format `COMPACT` ?\r\nSomething like `BINARY` might be more accurate.\r\n\r\n```suggestion\r\n    BINARY,\r\n```",
      "commit_id" : "2d95f24c358cfea7bd7cb11c14e26954560c651d",
      "created_at" : "2022-04-26T00:48:27Z",
      "diff_hunk" : "@@ -48,11 +48,18 @@ UniValue blockheaderToJSON(const CBlockIndex* tip, const CBlockIndex* blockindex\n /** Used by getblockstats to get feerates at different percentiles by weight  */\n void CalculatePercentilesByWeight(CAmount result[NUM_GETBLOCKSTATS_PERCENTILES], std::vector<std::pair<CAmount, int64_t>>& scores, int64_t total_weight);\n \n+/** File format type for CreateUTXOSnapshot() */\n+enum class UTXOSnapshotFormat {\n+    COMPACT,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r858130507",
      "id" : 858130507,
      "line" : 53,
      "node_id" : "PRRC_kwDOABII584zJghL",
      "original_commit_id" : "2d95f24c358cfea7bd7cb11c14e26954560c651d",
      "original_line" : 53,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.h",
      "position" : 6,
      "pull_request_review_id" : 952585250,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858130507/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-26T00:49:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858130507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94266259?v=4",
         "events_url" : "https://api.github.com/users/w0xlt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/w0xlt/followers",
         "following_url" : "https://api.github.com/users/w0xlt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/w0xlt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/w0xlt",
         "id" : 94266259,
         "login" : "w0xlt",
         "node_id" : "U_kgDOBZ5jkw",
         "organizations_url" : "https://api.github.com/users/w0xlt/orgs",
         "received_events_url" : "https://api.github.com/users/w0xlt/received_events",
         "repos_url" : "https://api.github.com/users/w0xlt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/w0xlt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/w0xlt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/w0xlt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "So I did try with blobs and managed to get the db down from 11 GB to 7 GB (about 2 GB more than the compact format). There was only really around a 15% increase in performance for me (but I possibly have other bottlenecks on my machine).",
      "created_at" : "2022-04-26T07:33:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1109449844",
      "id" : 1109449844,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CINx0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1109449844/reactions"
      },
      "updated_at" : "2022-04-26T07:33:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1109449844",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r858429422"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858429422"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No fundamental reason. I just used nomenclature from the CSV attempt: #18689.\r\nHappy to change if we think it's clearer and people have strong opinions about it.",
      "commit_id" : "2d95f24c358cfea7bd7cb11c14e26954560c651d",
      "created_at" : "2022-04-26T08:24:06Z",
      "diff_hunk" : "@@ -48,11 +48,18 @@ UniValue blockheaderToJSON(const CBlockIndex* tip, const CBlockIndex* blockindex\n /** Used by getblockstats to get feerates at different percentiles by weight  */\n void CalculatePercentilesByWeight(CAmount result[NUM_GETBLOCKSTATS_PERCENTILES], std::vector<std::pair<CAmount, int64_t>>& scores, int64_t total_weight);\n \n+/** File format type for CreateUTXOSnapshot() */\n+enum class UTXOSnapshotFormat {\n+    COMPACT,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r858429422",
      "id" : 858429422,
      "in_reply_to_id" : 858130507,
      "line" : 53,
      "node_id" : "PRRC_kwDOABII584zKpfu",
      "original_commit_id" : "2d95f24c358cfea7bd7cb11c14e26954560c651d",
      "original_line" : 53,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.h",
      "position" : 6,
      "pull_request_review_id" : 952969983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858429422/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-26T08:24:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858429422",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> So I did try with blobs and managed to get the db down from 11 GB to 7 GB (about 2 GB more than the compact format). There was only really around a 15% increase in performance for me (but I possibly have other bottlenecks on my machine).\r\n\r\nThanks for testing. Considering these results, it seems more reasonable to store the txid-hashes as text (like it is done currently in the PR), in order to have an easy conversion. Two more thoughts:\r\n- The compact-serialized output contains metadata, namely the blockhash of the snapshot and the number of UTXOs. Should we also at least include the blockhash (possibly also block height)? I think the SQLite output shouldn't contain _less_ information than the old format. (Storing the number of UTXOs seems unnecessary though, as it can simply be determined by `select count(*) from utxos`).\r\n- Do we want to add indices in the course of the conversion, or is that left to the user? Right now, the potential of having the UTXOs in a database is not fully unleashed, since it would still need to linearly search through all ~80 million rows. An index on nValue, nHeight and scriptPubKey probably would make sense, in order to quickly yield results e.g. for UTXOs with a certain amount or block range. Personally I don't have experience with indices on the TEXT type, but I believe this would help for quickly getting UTXOs with certain output types, e.g. one could query all P2WPKH coins by searching on scriptPubKeys with a prefix of `0014`.",
      "created_at" : "2022-04-26T11:52:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1109701021",
      "id" : 1109701021,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CJLGd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1109701021/reactions"
      },
      "updated_at" : "2022-04-26T11:53:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1109701021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r858697167"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858697167"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I like compact more than binary.",
      "commit_id" : "2d95f24c358cfea7bd7cb11c14e26954560c651d",
      "created_at" : "2022-04-26T13:12:50Z",
      "diff_hunk" : "@@ -48,11 +48,18 @@ UniValue blockheaderToJSON(const CBlockIndex* tip, const CBlockIndex* blockindex\n /** Used by getblockstats to get feerates at different percentiles by weight  */\n void CalculatePercentilesByWeight(CAmount result[NUM_GETBLOCKSTATS_PERCENTILES], std::vector<std::pair<CAmount, int64_t>>& scores, int64_t total_weight);\n \n+/** File format type for CreateUTXOSnapshot() */\n+enum class UTXOSnapshotFormat {\n+    COMPACT,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r858697167",
      "id" : 858697167,
      "in_reply_to_id" : 858130507,
      "line" : 53,
      "node_id" : "PRRC_kwDOABII584zLq3P",
      "original_commit_id" : "2d95f24c358cfea7bd7cb11c14e26954560c651d",
      "original_line" : 53,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.h",
      "position" : 6,
      "pull_request_review_id" : 953355662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858697167/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-26T13:12:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858697167",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> * The compact-serialized output contains metadata,\r\n\r\nWe can create another table called `metadata` with `blockhash` and `blockheight` columns.\r\n\r\n> * Do we want to add indices in the course of the conversion\r\n\r\nI don't think we want to push indices on all users that want this feature. They can still create indices afterwards via `sqlite3 utxo.db \"CREATE INDEX idx_script ON utxo(scriptpubkey)\"`",
      "created_at" : "2022-04-26T13:18:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1109787611",
      "id" : 1109787611,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CJgPb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1109787611/reactions"
      },
      "updated_at" : "2022-04-26T13:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1109787611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I don't think we want to push indices on all users that want this feature. They can still create indices afterwards via `sqlite3 utxo.db \"CREATE INDEX idx_script ON utxo(scriptpubkey)\"`\n\nI can maybe check the extra resource requirements and we can have a clearer picture on whether it would be worth it? The one thing is that without any indices then a simple `SELECT COUNT(*) FROM utxos` takes a while. Of course, it is a ROWID table so doing `SELECT MAX(rowid) FROM utxos` is constant time and works out the box. \n\nOtherwise, happy to keep indices out of it. I'll create the `metadata` table in my next push.",
      "created_at" : "2022-04-26T13:45:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1109817440",
      "id" : 1109817440,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CJnhg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1109817440/reactions"
      },
      "updated_at" : "2022-04-26T13:45:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1109817440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I can maybe check the extra resource requirements and we can have a clearer picture on whether it would be worth it? The one thing is that without any indices then a simple `SELECT COUNT(*) FROM utxos` takes a while. Of course, it is a ROWID table so doing `SELECT MAX(rowid) FROM utxos` is constant time and works out the box.\r\n\r\nSo dumping with indices will take _significantly_ longer. On my iMac it takes longer than the default `rpcclienttimeout` (so I have to disable timeout). The index for the `height` column alone adds about 1 GB to the overall size (but this is not really the main issue).\r\n\r\nI think it's fair to leave it to the user to create the indices they are most interested in. For now I think I'll just push the `metadata` table and test changes and then we can decide from there.\r\n\r\n",
      "created_at" : "2022-04-26T20:13:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1110206522",
      "id" : 1110206522,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CLGg6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110206522/reactions"
      },
      "updated_at" : "2022-04-26T20:14:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110206522",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r859115914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/859115914"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks. Have added one!",
      "commit_id" : "e393d2c7a2714a85dc01b2349a9dd60c21427b4d",
      "created_at" : "2022-04-26T20:27:18Z",
      "diff_hunk" : "@@ -2334,30 +2362,115 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT: {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(),\n+                                   fs::PathToString(path), fs::PathToString(temppath)));\n+        SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n \n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+        afile << metadata;\n \n-    afile << metadata;\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                afile << key;\n+                afile << coin;\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            pcursor->Next();\n         }\n \n-        pcursor->Next();\n+        afile.fclose();\n+        break;\n     }\n+    case UTXOSnapshotFormat::SQLITE: {\n+#ifdef USE_SQLITE\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n+\n+        sqlite3* db;\n+        int ret;\n+\n+        if (!ValidAsCString(fs::PathToString(path))) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+        }\n+\n+        ret = sqlite3_open(fs::PathToString(path).c_str(), &db);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r859115914",
      "id" : 859115914,
      "in_reply_to_id" : 858129535,
      "line" : 2403,
      "node_id" : "PRRC_kwDOABII584zNRGK",
      "original_commit_id" : "2d95f24c358cfea7bd7cb11c14e26954560c651d",
      "original_line" : 2403,
      "original_position" : 165,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 144,
      "pull_request_review_id" : 953960554,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/859115914/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-26T20:27:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/859115914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r860788596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860788596"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Rather than calling `uint256.GetHex()` twice per iteration and determining its size via `strlen`, could create the string once and use its `.size()` method:\r\n```suggestion\r\n                std::string prevouthash_hex{key.hash.GetHex()};\r\n                sqlite3_bind_text(stmt, 1, prevouthash_hex.c_str(), prevouthash_hex.size(), SQLITE_TRANSIENT);\r\n```\r\nIn theory one could even pass the length directly as constant (64) since `GetHex()` results always have that size (then the string variable is not even needed).",
      "commit_id" : "e393d2c7a2714a85dc01b2349a9dd60c21427b4d",
      "created_at" : "2022-04-28T11:42:50Z",
      "diff_hunk" : "@@ -2329,30 +2358,126 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT: {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(),\n+                                   fs::PathToString(path), fs::PathToString(temppath)));\n+        SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n \n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+        afile << metadata;\n \n-    afile << metadata;\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                afile << key;\n+                afile << coin;\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            pcursor->Next();\n         }\n \n-        pcursor->Next();\n+        afile.fclose();\n+        break;\n     }\n+    case UTXOSnapshotFormat::SQLITE: {\n+#ifdef USE_SQLITE\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n+\n+        sqlite3* db;\n+        int ret;\n+\n+        if (!ValidAsCString(fs::PathToString(path))) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+        }\n+\n+        ret = sqlite3_open(fs::PathToString(path).c_str(), &db);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));\n+        }\n+\n+        // We have no need for rollbacks here, so we can set the `journal_mode` to 'off'. See: https://www.sqlite.org/pragma.html#pragma_journal_mode\n+        ret = sqlite3_exec(db, \"PRAGMA journal_mode=off;\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set 'journal_mode=off': %s\\n\", sqlite3_errstr(ret)));\n+        }\n \n-    afile.fclose();\n+        // Create and populate 'metadata' table\n+        ret = sqlite3_exec(db, \"CREATE TABLE metadata(blockhash TEXT, blockheight INT);\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to create 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+        ret = sqlite3_exec(db, strprintf(\"INSERT INTO metadata VALUES ('%s', %d)\", tip->GetBlockHash().ToString(), tip->nHeight).c_str(), nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to insert into 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+\n+        const char* sql = \"CREATE TABLE utxos(txid TEXT, vout INT, value INT, coinbase INT, height INT, scriptpubkey TEXT);\";\n+        ret = sqlite3_exec(db, sql, nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to create 'utxos' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        sqlite3_stmt* stmt;\n+        sqlite3_prepare_v2(db, \"INSERT INTO utxos VALUES (?, ?, ?, ?, ?, ?);\", -1, &stmt, nullptr);\n+\n+        // Begin a transaction to wrap all INSERTs\n+        ret = sqlite3_exec(db, \"BEGIN TRANSACTION;\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to begin transaction: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                sqlite3_bind_text(stmt, 1, key.hash.GetHex().c_str(), strlen(key.hash.GetHex().c_str()), SQLITE_TRANSIENT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r860788596",
      "id" : 860788596,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zTpd0",
      "original_commit_id" : "39c392af35b22807ca53cbe3b9218bc055236ccd",
      "original_line" : 2449,
      "original_position" : 191,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 956290477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860788596/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-28T12:04:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860788596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r860793884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860793884"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Similar to the above suggestion:\r\n```suggestion\r\n                std::string scriptpubkey_hex{HexStr(coin.out.scriptPubKey)};\r\n                sqlite3_bind_text(stmt, 6, scriptpubkey_hex.c_str(), scriptpubkey_hex.size(), SQLITE_TRANSIENT);\r\n```",
      "commit_id" : "e393d2c7a2714a85dc01b2349a9dd60c21427b4d",
      "created_at" : "2022-04-28T11:47:21Z",
      "diff_hunk" : "@@ -2329,30 +2358,126 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT: {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(),\n+                                   fs::PathToString(path), fs::PathToString(temppath)));\n+        SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n \n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+        afile << metadata;\n \n-    afile << metadata;\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                afile << key;\n+                afile << coin;\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            pcursor->Next();\n         }\n \n-        pcursor->Next();\n+        afile.fclose();\n+        break;\n     }\n+    case UTXOSnapshotFormat::SQLITE: {\n+#ifdef USE_SQLITE\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n+\n+        sqlite3* db;\n+        int ret;\n+\n+        if (!ValidAsCString(fs::PathToString(path))) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+        }\n+\n+        ret = sqlite3_open(fs::PathToString(path).c_str(), &db);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));\n+        }\n+\n+        // We have no need for rollbacks here, so we can set the `journal_mode` to 'off'. See: https://www.sqlite.org/pragma.html#pragma_journal_mode\n+        ret = sqlite3_exec(db, \"PRAGMA journal_mode=off;\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set 'journal_mode=off': %s\\n\", sqlite3_errstr(ret)));\n+        }\n \n-    afile.fclose();\n+        // Create and populate 'metadata' table\n+        ret = sqlite3_exec(db, \"CREATE TABLE metadata(blockhash TEXT, blockheight INT);\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to create 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+        ret = sqlite3_exec(db, strprintf(\"INSERT INTO metadata VALUES ('%s', %d)\", tip->GetBlockHash().ToString(), tip->nHeight).c_str(), nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to insert into 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+\n+        const char* sql = \"CREATE TABLE utxos(txid TEXT, vout INT, value INT, coinbase INT, height INT, scriptpubkey TEXT);\";\n+        ret = sqlite3_exec(db, sql, nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to create 'utxos' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        sqlite3_stmt* stmt;\n+        sqlite3_prepare_v2(db, \"INSERT INTO utxos VALUES (?, ?, ?, ?, ?, ?);\", -1, &stmt, nullptr);\n+\n+        // Begin a transaction to wrap all INSERTs\n+        ret = sqlite3_exec(db, \"BEGIN TRANSACTION;\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to begin transaction: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                sqlite3_bind_text(stmt, 1, key.hash.GetHex().c_str(), strlen(key.hash.GetHex().c_str()), SQLITE_TRANSIENT);\n+                sqlite3_bind_int(stmt, 2, key.n);\n+                sqlite3_bind_int64(stmt, 3, coin.out.nValue);\n+                sqlite3_bind_int(stmt, 4, coin.fCoinBase);\n+                sqlite3_bind_int(stmt, 5, coin.nHeight);\n+                sqlite3_bind_text(stmt, 6, HexStr(coin.out.scriptPubKey).c_str(), strlen(HexStr(coin.out.scriptPubKey).c_str()), SQLITE_TRANSIENT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r860793884",
      "id" : 860793884,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zTqwc",
      "original_commit_id" : "39c392af35b22807ca53cbe3b9218bc055236ccd",
      "original_line" : 2454,
      "original_position" : 196,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 956290477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860793884/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-28T12:04:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/860793884",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r861079604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861079604"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think I'll stick to the creating the string as you mentioned, just so it's clearer.",
      "commit_id" : "e393d2c7a2714a85dc01b2349a9dd60c21427b4d",
      "created_at" : "2022-04-28T16:13:28Z",
      "diff_hunk" : "@@ -2329,30 +2358,126 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT: {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(),\n+                                   fs::PathToString(path), fs::PathToString(temppath)));\n+        SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n \n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+        afile << metadata;\n \n-    afile << metadata;\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                afile << key;\n+                afile << coin;\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            pcursor->Next();\n         }\n \n-        pcursor->Next();\n+        afile.fclose();\n+        break;\n     }\n+    case UTXOSnapshotFormat::SQLITE: {\n+#ifdef USE_SQLITE\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n+\n+        sqlite3* db;\n+        int ret;\n+\n+        if (!ValidAsCString(fs::PathToString(path))) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+        }\n+\n+        ret = sqlite3_open(fs::PathToString(path).c_str(), &db);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));\n+        }\n+\n+        // We have no need for rollbacks here, so we can set the `journal_mode` to 'off'. See: https://www.sqlite.org/pragma.html#pragma_journal_mode\n+        ret = sqlite3_exec(db, \"PRAGMA journal_mode=off;\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set 'journal_mode=off': %s\\n\", sqlite3_errstr(ret)));\n+        }\n \n-    afile.fclose();\n+        // Create and populate 'metadata' table\n+        ret = sqlite3_exec(db, \"CREATE TABLE metadata(blockhash TEXT, blockheight INT);\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to create 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+        ret = sqlite3_exec(db, strprintf(\"INSERT INTO metadata VALUES ('%s', %d)\", tip->GetBlockHash().ToString(), tip->nHeight).c_str(), nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to insert into 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+\n+        const char* sql = \"CREATE TABLE utxos(txid TEXT, vout INT, value INT, coinbase INT, height INT, scriptpubkey TEXT);\";\n+        ret = sqlite3_exec(db, sql, nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to create 'utxos' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        sqlite3_stmt* stmt;\n+        sqlite3_prepare_v2(db, \"INSERT INTO utxos VALUES (?, ?, ?, ?, ?, ?);\", -1, &stmt, nullptr);\n+\n+        // Begin a transaction to wrap all INSERTs\n+        ret = sqlite3_exec(db, \"BEGIN TRANSACTION;\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to begin transaction: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                sqlite3_bind_text(stmt, 1, key.hash.GetHex().c_str(), strlen(key.hash.GetHex().c_str()), SQLITE_TRANSIENT);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r861079604",
      "id" : 861079604,
      "in_reply_to_id" : 860788596,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zUwg0",
      "original_commit_id" : "39c392af35b22807ca53cbe3b9218bc055236ccd",
      "original_line" : 2449,
      "original_position" : 191,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : null,
      "pull_request_review_id" : 956713149,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861079604/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-28T16:13:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861079604",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> so `select max(rowid) from utxos` definitely is the better alternative here (works only as long as no rows have been deleted though)\r\n\r\nYes, the one caveat with that! Thanks for running a few nice examples :D",
      "created_at" : "2022-04-28T16:36:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1112422700",
      "id" : 1112422700,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CTjks",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1112422700/reactions"
      },
      "updated_at" : "2022-04-28T16:36:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1112422700",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I was slightly surprised at first to see sqlite used as a format outside the wallet, but I think it makes sense, it's a flexible and efficient data format, all languages worth their salt have bindings for it, without need for writing custom parsers. We also don't need to introduce a new dependency which we'd have to for another compact format like BSON.\r\n\r\nWhat I wonder, does this need special handling in the build system? E.g. would this need some use-sqlite-but-no-wallet flag?\r\n\r\n> Agreed, seems to be the right decision to not create any indices and leave that up to the user, considering the significant performance loss for dumping.\r\n\r\nI agree. Not adding indices makes the RPC call less complex, and if you know when you're done putting data in a database, I would think it's more efficient to create the indices afterward (processing the data in one go) anyway.",
      "created_at" : "2022-04-28T17:56:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1112502316",
      "id" : 1112502316,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CT3As",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1112502316/reactions"
      },
      "updated_at" : "2022-04-28T17:56:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1112502316",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> What I wonder, does this need special handling in the build system? E.g. would this need some use-sqlite-but-no-wallet flag?\r\n\r\nAh, yes. This is a good point! `--with-sqlite`'s `auto` option just checks for wallet being enabled and sqlite being available. It might be weird for this functionality to work if wallet is enabled and then not working if it's disabled if `--with-sqlite=yes` is not passed.",
      "created_at" : "2022-04-28T18:08:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1112512241",
      "id" : 1112512241,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CT5bx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1112512241/reactions"
      },
      "updated_at" : "2022-04-28T18:08:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1112512241",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Also see I need to rebase and update `ValidAsCString()`: https://github.com/bitcoin/bitcoin/commit/fa7078d84fc2858a466bc1a85404f821df682538",
      "created_at" : "2022-04-28T18:12:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1112515203",
      "id" : 1112515203,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CT6KD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1112515203/reactions"
      },
      "updated_at" : "2022-04-28T18:12:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1112515203",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj wrote:\r\n> What I wonder, does this need special handling in the build system? E.g. would this need some use-sqlite-but-no-wallet flag?\r\n\r\nI think we just need to document that this feature only works when compiled with the wallet or configured with Sqlite support. Inside `configure.ac` it would make sense to move `use_sqlite` outside of the wallet conditional:\r\n\r\n```\r\nif test \"$enable_wallet\" != \"no\"; then\r\n    echo \"    with sqlite   = $use_sqlite\"\r\n    echo \"    with bdb      = $use_bdb\"\r\nfi\r\n```",
      "created_at" : "2022-04-29T09:43:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1113118232",
      "id" : 1113118232,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CWNYY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113118232/reactions"
      },
      "updated_at" : "2022-04-29T09:43:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113118232",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "reACK `git range-diff 889f6c719dbd2bca5f38a6a5a89f39fb4639558f...8fe0e7c48e651fdf981675d0dd1542ec49ea91b7`",
      "created_at" : "2022-05-05T22:02:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1119085415",
      "id" : 1119085415,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585Cs-Nn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1119085415/reactions"
      },
      "updated_at" : "2022-05-05T22:02:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1119085415",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r867241253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867241253"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also need to actually check for and enable sqlite without wallet build",
      "commit_id" : "8fe0e7c48e651fdf981675d0dd1542ec49ea91b7",
      "created_at" : "2022-05-06T22:04:08Z",
      "diff_hunk" : "@@ -1999,9 +1999,9 @@ echo \"  with experimental syscall sandbox support = $use_syscall_sandbox\"\n echo \"  with libs       = $build_bitcoin_libs\"\n echo \"  with wallet     = $enable_wallet\"\n if test \"$enable_wallet\" != \"no\"; then\n-    echo \"    with sqlite   = $use_sqlite\"\n     echo \"    with bdb      = $use_bdb\"\n fi\n+echo \"  with sqlite     = $use_sqlite\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r867241253",
      "id" : 867241253,
      "line" : 2004,
      "node_id" : "PRRC_kwDOABII584zsQ0l",
      "original_commit_id" : "8fe0e7c48e651fdf981675d0dd1542ec49ea91b7",
      "original_line" : 2004,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "configure.ac",
      "position" : 7,
      "pull_request_review_id" : 965223224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867241253/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-06T22:15:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867241253",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r867241801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867241801"
         }
      },
      "author_association" : "MEMBER",
      "body" : "wrong indentation",
      "commit_id" : "8fe0e7c48e651fdf981675d0dd1542ec49ea91b7",
      "created_at" : "2022-05-06T22:05:52Z",
      "diff_hunk" : "@@ -2273,19 +2280,42 @@ static RPCHelpMan dumptxoutset()\n     // to avoid confusion due to an interruption.\n     const fs::path temppath = fsbridge::AbsPathJoin(args.GetDataDirNet(), fs::u8path(request.params[0].get_str() + \".incomplete\"));\n \n+    UTXOSnapshotFormat format;\n+    if (request.params[1].isNull() || request.params[1].get_str() == \"compact\") {\n+        format = UTXOSnapshotFormat::COMPACT;\n+    } else if (request.params[1].get_str() == \"sqlite\") {\n+#ifndef USE_SQLITE\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Compiled without sqlite support (required for dumptxoutset 'sqlite' format)\");\n+#endif\n+        format = UTXOSnapshotFormat::SQLITE;\n+    } else {\n+        throw JSONRPCError(\n+            RPC_INVALID_PARAMETER,\n+            request.params[1].get_str() + \" is not a valid format.\");\n+    }\n+\n     if (fs::exists(path)) {\n         throw JSONRPCError(\n             RPC_INVALID_PARAMETER,\n             path.u8string() + \" already exists. If you are sure this is what you want, \"\n-            \"move it out of the way first\");\n+                                \"move it out of the way first\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r867241801",
      "id" : 867241801,
      "line" : 2301,
      "node_id" : "PRRC_kwDOABII584zsQ9J",
      "original_commit_id" : "8fe0e7c48e651fdf981675d0dd1542ec49ea91b7",
      "original_line" : 2301,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 53,
      "pull_request_review_id" : 965223224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867241801/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-06T22:15:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867241801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r867244494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867244494"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`vout` is the wrong term",
      "commit_id" : "8fe0e7c48e651fdf981675d0dd1542ec49ea91b7",
      "created_at" : "2022-05-06T22:13:31Z",
      "diff_hunk" : "@@ -2329,30 +2360,130 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT: {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(),\n+                                   fs::PathToString(path), fs::PathToString(temppath)));\n+        SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n \n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+        afile << metadata;\n \n-    afile << metadata;\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                afile << key;\n+                afile << coin;\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            pcursor->Next();\n         }\n \n-        pcursor->Next();\n+        afile.fclose();\n+        break;\n     }\n+    case UTXOSnapshotFormat::SQLITE: {\n+#ifdef USE_SQLITE\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n+\n+        sqlite3* db;\n+        int ret;\n+        std::string path_string = fs::PathToString(path);\n+\n+        if (!ContainsNoNUL(path_string)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+        }\n+\n+        ret = sqlite3_open(path_string.c_str(), &db);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));\n+        }\n+\n+        // We have no need for rollbacks here, so we can set the `journal_mode` to 'off'. See: https://www.sqlite.org/pragma.html#pragma_journal_mode\n+        ret = sqlite3_exec(db, \"PRAGMA journal_mode=off;\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set 'journal_mode=off': %s\\n\", sqlite3_errstr(ret)));\n+        }\n \n-    afile.fclose();\n+        // Create and populate 'metadata' table\n+        ret = sqlite3_exec(db, \"CREATE TABLE metadata(blockhash TEXT, blockheight INT);\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to create 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+        ret = sqlite3_exec(db, strprintf(\"INSERT INTO metadata VALUES ('%s', %d)\", tip->GetBlockHash().ToString(), tip->nHeight).c_str(), nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to insert into 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+\n+        const char* sql = \"CREATE TABLE utxos(txid TEXT, vout INT, value INT, coinbase INT, height INT, scriptpubkey TEXT);\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r867244494",
      "id" : 867244494,
      "line" : 2427,
      "node_id" : "PRRC_kwDOABII584zsRnO",
      "original_commit_id" : "8fe0e7c48e651fdf981675d0dd1542ec49ea91b7",
      "original_line" : 2427,
      "original_position" : 169,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 169,
      "pull_request_review_id" : 965223224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867244494/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-06T22:15:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867244494",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r867244987"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867244987"
         }
      },
      "author_association" : "MEMBER",
      "body" : "At least scriptpubkey should probably be a binary BLOB?",
      "commit_id" : "8fe0e7c48e651fdf981675d0dd1542ec49ea91b7",
      "created_at" : "2022-05-06T22:15:00Z",
      "diff_hunk" : "@@ -2329,30 +2360,130 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT: {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(),\n+                                   fs::PathToString(path), fs::PathToString(temppath)));\n+        SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n \n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+        afile << metadata;\n \n-    afile << metadata;\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                afile << key;\n+                afile << coin;\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            pcursor->Next();\n         }\n \n-        pcursor->Next();\n+        afile.fclose();\n+        break;\n     }\n+    case UTXOSnapshotFormat::SQLITE: {\n+#ifdef USE_SQLITE\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n+\n+        sqlite3* db;\n+        int ret;\n+        std::string path_string = fs::PathToString(path);\n+\n+        if (!ContainsNoNUL(path_string)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+        }\n+\n+        ret = sqlite3_open(path_string.c_str(), &db);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));\n+        }\n+\n+        // We have no need for rollbacks here, so we can set the `journal_mode` to 'off'. See: https://www.sqlite.org/pragma.html#pragma_journal_mode\n+        ret = sqlite3_exec(db, \"PRAGMA journal_mode=off;\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set 'journal_mode=off': %s\\n\", sqlite3_errstr(ret)));\n+        }\n \n-    afile.fclose();\n+        // Create and populate 'metadata' table\n+        ret = sqlite3_exec(db, \"CREATE TABLE metadata(blockhash TEXT, blockheight INT);\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to create 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+        ret = sqlite3_exec(db, strprintf(\"INSERT INTO metadata VALUES ('%s', %d)\", tip->GetBlockHash().ToString(), tip->nHeight).c_str(), nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to insert into 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+\n+        const char* sql = \"CREATE TABLE utxos(txid TEXT, vout INT, value INT, coinbase INT, height INT, scriptpubkey TEXT);\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r867244987",
      "id" : 867244987,
      "line" : 2427,
      "node_id" : "PRRC_kwDOABII584zsRu7",
      "original_commit_id" : "8fe0e7c48e651fdf981675d0dd1542ec49ea91b7",
      "original_line" : 2427,
      "original_position" : 169,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 169,
      "pull_request_review_id" : 965223224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867244987/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-06T22:15:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867244987",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> What I wonder, does this need special handling in the build system? E.g. would this need some use-sqlite-but-no-wallet flag?\r\n\r\nYes I think it does. However this change is done, it should not be adding an auto-detected/enabled by default dependency on sqlite, for a \"nice to have\" RPC feature.",
      "created_at" : "2022-05-07T10:59:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1120187377",
      "id" : 1120187377,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585CxLPx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1120187377/reactions"
      },
      "updated_at" : "2022-05-07T10:59:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1120187377",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r867351518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867351518"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What would be a better alternative? Simply `n`? Right now `vout` is already used in quite some RPC calls to refer to an outpoint's index (e.g. in the resut of `scantxoutset`).",
      "commit_id" : "8fe0e7c48e651fdf981675d0dd1542ec49ea91b7",
      "created_at" : "2022-05-07T13:18:18Z",
      "diff_hunk" : "@@ -2329,30 +2360,130 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT: {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(),\n+                                   fs::PathToString(path), fs::PathToString(temppath)));\n+        SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n \n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+        afile << metadata;\n \n-    afile << metadata;\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                afile << key;\n+                afile << coin;\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            pcursor->Next();\n         }\n \n-        pcursor->Next();\n+        afile.fclose();\n+        break;\n     }\n+    case UTXOSnapshotFormat::SQLITE: {\n+#ifdef USE_SQLITE\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n+\n+        sqlite3* db;\n+        int ret;\n+        std::string path_string = fs::PathToString(path);\n+\n+        if (!ContainsNoNUL(path_string)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+        }\n+\n+        ret = sqlite3_open(path_string.c_str(), &db);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));\n+        }\n+\n+        // We have no need for rollbacks here, so we can set the `journal_mode` to 'off'. See: https://www.sqlite.org/pragma.html#pragma_journal_mode\n+        ret = sqlite3_exec(db, \"PRAGMA journal_mode=off;\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set 'journal_mode=off': %s\\n\", sqlite3_errstr(ret)));\n+        }\n \n-    afile.fclose();\n+        // Create and populate 'metadata' table\n+        ret = sqlite3_exec(db, \"CREATE TABLE metadata(blockhash TEXT, blockheight INT);\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to create 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+        ret = sqlite3_exec(db, strprintf(\"INSERT INTO metadata VALUES ('%s', %d)\", tip->GetBlockHash().ToString(), tip->nHeight).c_str(), nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to insert into 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+\n+        const char* sql = \"CREATE TABLE utxos(txid TEXT, vout INT, value INT, coinbase INT, height INT, scriptpubkey TEXT);\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r867351518",
      "id" : 867351518,
      "in_reply_to_id" : 867244494,
      "line" : 2427,
      "node_id" : "PRRC_kwDOABII584zsrve",
      "original_commit_id" : "8fe0e7c48e651fdf981675d0dd1542ec49ea91b7",
      "original_line" : 2427,
      "original_position" : 169,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 169,
      "pull_request_review_id" : 965331089,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867351518/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-07T13:18:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867351518",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r867351949"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867351949"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "One drawback with changing it to a BLOB is that the simply query `select * from utxos` doesn't yield a readable result anymore (see also https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1108758629). On the other hand the dumps would be a bit smaller ð¤ ",
      "commit_id" : "8fe0e7c48e651fdf981675d0dd1542ec49ea91b7",
      "created_at" : "2022-05-07T13:23:38Z",
      "diff_hunk" : "@@ -2329,30 +2360,130 @@ UniValue CreateUTXOSnapshot(\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(stats.hashBlock));\n     }\n \n-    LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n-        tip->nHeight, tip->GetBlockHash().ToString(),\n-        fs::PathToString(path), fs::PathToString(temppath)));\n+    switch (format) {\n+    case UTXOSnapshotFormat::COMPACT: {\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(),\n+                                   fs::PathToString(path), fs::PathToString(temppath)));\n+        SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n \n-    SnapshotMetadata metadata{tip->GetBlockHash(), stats.coins_count, tip->nChainTx};\n+        afile << metadata;\n \n-    afile << metadata;\n+        COutPoint key;\n+        Coin coin;\n+        unsigned int iter{0};\n+\n+        while (pcursor->Valid()) {\n+            if (iter % 5000 == 0) node.rpc_interruption_point();\n+            ++iter;\n+            if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n+                afile << key;\n+                afile << coin;\n+            }\n \n-    COutPoint key;\n-    Coin coin;\n-    unsigned int iter{0};\n-\n-    while (pcursor->Valid()) {\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\n-        ++iter;\n-        if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\n-            afile << key;\n-            afile << coin;\n+            pcursor->Next();\n         }\n \n-        pcursor->Next();\n+        afile.fclose();\n+        break;\n     }\n+    case UTXOSnapshotFormat::SQLITE: {\n+#ifdef USE_SQLITE\n+        LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to sqlite DB file %s\",\n+                                   tip->nHeight, tip->GetBlockHash().ToString(), fs::PathToString(path)));\n+\n+        sqlite3* db;\n+        int ret;\n+        std::string path_string = fs::PathToString(path);\n+\n+        if (!ContainsNoNUL(path_string)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid path\");\n+        }\n+\n+        ret = sqlite3_open(path_string.c_str(), &db);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Unable to open database file %s\", path.u8string()));\n+        }\n+\n+        // We have no need for rollbacks here, so we can set the `journal_mode` to 'off'. See: https://www.sqlite.org/pragma.html#pragma_journal_mode\n+        ret = sqlite3_exec(db, \"PRAGMA journal_mode=off;\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set 'journal_mode=off': %s\\n\", sqlite3_errstr(ret)));\n+        }\n \n-    afile.fclose();\n+        // Create and populate 'metadata' table\n+        ret = sqlite3_exec(db, \"CREATE TABLE metadata(blockhash TEXT, blockheight INT);\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to create 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+        ret = sqlite3_exec(db, strprintf(\"INSERT INTO metadata VALUES ('%s', %d)\", tip->GetBlockHash().ToString(), tip->nHeight).c_str(), nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            sqlite3_close(db);\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"SQLiteDatabase: Failed to insert into 'metadata' table: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+\n+        const char* sql = \"CREATE TABLE utxos(txid TEXT, vout INT, value INT, coinbase INT, height INT, scriptpubkey TEXT);\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#discussion_r867351949",
      "id" : 867351949,
      "in_reply_to_id" : 867244987,
      "line" : 2427,
      "node_id" : "PRRC_kwDOABII584zsr2N",
      "original_commit_id" : "8fe0e7c48e651fdf981675d0dd1542ec49ea91b7",
      "original_line" : 2427,
      "original_position" : 169,
      "original_start_line" : null,
      "path" : "src/rpc/blockchain.cpp",
      "position" : 169,
      "pull_request_review_id" : 965331436,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24952",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867351949/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-07T13:23:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867351949",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> (modulo needed build system changes w.r.t. sqlite)\r\n\r\nWorking on that today. Apologies for the delay!\r\n\r\n> In the course of researching possible alternatives for this PR I created a tool for converting an UTXO set dump from compact-serialized format to SQLite format (see https://github.com/theStack/utxo_dump_tools). Of course the tool will be obsolete after this PR is merged, but having it available enables a first step to lightly test the integrity of the created data (and also the correctness of conversion tool) for now by\r\n\r\nThank you! This is pretty helpful for testing.\r\n\r\n> The SQLite files are not equal on a byte-by-byte basis after dropping the `metadata` table (I guess there is possibly some internal metadata for SQLite as well that could differ), but their dumped data in e.g. CSV format is exactly equal.\r\n\r\nYeah, I'd imagine something of the sort w.r.t. the actual SQLite file metadata.\r\n\r\n> Even nicer would be the possibility to calculate the UTXO set hash of a SQLite database (which can be easily compared to the output of a call to the `gettxoutsetinfo` RPC), I'm working on a verification tool implementation using MuHash which should be ready soon.\r\n\r\nWould definitely be keen to try it out when ready!",
      "created_at" : "2022-05-10T15:24:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1122540760",
      "id" : 1122540760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585C6JzY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1122540760/reactions"
      },
      "updated_at" : "2022-05-10T15:24:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1122540760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Of course the tool will be obsolete after this PR is merged,\r\n\r\nAlternatively, the existence of the tool may make the PR obsolete. If it's possible for Core to just maintain a single, compact, dependency-less output format, and it's easy for devs or power users to write & use tools that can convert that compact format into whichever other formats they need, that seems superior to introducing more code (to maintain) into Core, and a new non-wallet sqlite dependency.",
      "created_at" : "2022-05-10T16:22:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1122612749",
      "id" : 1122612749,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585C6bYN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1122612749/reactions"
      },
      "updated_at" : "2022-05-10T16:22:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1122612749",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > Of course the tool will be obsolete after this PR is merged,\r\n> \r\n> Alternatively, the existence of the tool may make the PR obsolete. If it's possible for Core to just maintain a single, compact, dependency-less output format, and it's easy for devs or power users to write & use tools that can convert that compact format into whichever other formats they need, that seems superior to introducing more code (to maintain) into Core, and a new non-wallet sqlite dependency.\r\n\r\nThat's a valid counter-argument for sure and was also the initial reason I started writing this tool, as I wasn't convinced whether adding a second dump format with a dependency is really worth the additional code and maintenance burden (see https://github.com/bitcoin/bitcoin/issues/24628#issuecomment-1108469715 for more details). The grave drawback of the current UTXO dump format though is that it's solely designed for being compact but nothing else, i.e. it's not useful for inspection at all and unusable without further processing; too many fields are compressed in a non-trivial way. As the worst example, you even need elliptic curve math (modular field arithmetics on large integers, basically a subset of the secp256k1 library) to restore the scriptPubKeys for P2PK outputs, so it is unfortunately not really \"dependency-less\".\r\n\r\nA good dump format should IMHO contain only the pure data without trying to encode things in a smart non-standardized way that forces users to process it further to do even basic inspection. Since handling those huge amounts of data (>80 million rows on mainnet, currently) barely makes sense without having _some basic form_ of database, using a very widespread and stable single-file format like SQLite seems still like a good choice to me.",
      "created_at" : "2022-05-10T21:43:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1122906748",
      "id" : 1122906748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585C7jJ8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1122906748/reactions"
      },
      "updated_at" : "2022-05-10T21:43:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1122906748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Is it worth to consider to just write it to stdout while iterating all utxos?\r\n\r\nThat would make it easy for a consumer to bring it into any required format for further processing or analyzing without having Core to make that decision.\r\n\r\nsqlite3 is able to capture from stdin as an import source and most other formats like csv or json can already be processed via the command line. You could even already apply filtering while dumping all records.\r\n\r\n\r\n",
      "created_at" : "2022-05-10T22:34:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1122968661",
      "id" : 1122968661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585C7yRV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1122968661/reactions"
      },
      "updated_at" : "2022-05-10T22:40:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1122968661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91447896?v=4",
         "events_url" : "https://api.github.com/users/pk-b2/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pk-b2/followers",
         "following_url" : "https://api.github.com/users/pk-b2/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pk-b2/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pk-b2",
         "id" : 91447896,
         "login" : "pk-b2",
         "node_id" : "MDQ6VXNlcjkxNDQ3ODk2",
         "organizations_url" : "https://api.github.com/users/pk-b2/orgs",
         "received_events_url" : "https://api.github.com/users/pk-b2/received_events",
         "repos_url" : "https://api.github.com/users/pk-b2/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pk-b2/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pk-b2/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pk-b2"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The grave drawback of the current UTXO dump format though is that it's solely designed for being compact but nothing else, i.e. it's not useful for inspection at all and unusable without further processing; too many fields are compressed in a non-trivial way.\r\n\r\nIt really sounds like we should be improving the current format (I don't think we need to worry about backwards compatibility too much), given the issues you've outlined, rather than adding a new format, more code, and a dependency we don't want. Otherwise we've still got to maintain the old format, which is compressed (convenient), but not really useful unless you write your own parser (clearly doable), and also maintain the new format, which is seemingly only being introduced because the current format isn't really usable for what everyone wants.",
      "created_at" : "2022-05-11T07:45:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1123302632",
      "id" : 1123302632,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585C9Dzo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1123302632/reactions"
      },
      "updated_at" : "2022-05-11T07:45:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1123302632",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It really sounds like we should be improving the current format (I don't think we need to worry about backwards compatibility too much), given the issues you've outlined, rather than adding a new format, more code, and a dependency we don't want. Otherwise we've still got to maintain the old format, which is compressed (convenient), but not really useful unless you write your own parser (clearly doable), and also maintain the new format, which is seemingly only being introduced because the current format isn't really usable for what everyone wants.\r\n\r\nThe compact-serialized format was introduced as part of the AssumeUTXO project (see https://github.com/bitcoin/bitcoin/pull/16899) for creating and loading UTXO snapshots. Not sure if at this point changing the specification is desired/needed, I guess for this specific use-case the format is just fine (maybe @jamesob can comment on this?). So it seems that we really have two different goals here: on the one hand a snapshot format to be saved/loaded by bitcoind  or even other clients (and that in the most space-efficient way possible), on the other hand providing a neutral easy-to-process dump-format that can be inspected by users. I agree that it would be the best solution if both of these goals could be met by a single format.",
      "created_at" : "2022-05-11T11:09:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1123587321",
      "id" : 1123587321,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585C-JT5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1123587321/reactions"
      },
      "updated_at" : "2022-05-11T11:09:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1123587321",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "There's an issue in the latest push with configuring with `--disable-wallet --with-sqlite=yes` with the build system. I'll take a look in the morning. `USE_SQLITE` comes out true as expected, though. Maybe something that the wallet flag is guarding.",
      "created_at" : "2022-05-11T16:55:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1124016843",
      "id" : 1124016843,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585C_yLL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1124016843/reactions"
      },
      "updated_at" : "2022-05-11T16:55:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1124016843",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-05-24T13:39:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1135937103",
      "id" : 1135937103,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585DtQZP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1135937103/reactions"
      },
      "updated_at" : "2022-05-24T13:39:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1135937103",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> . I agree that it would be the best solution if both of these goals could be met by a single format.\r\n\r\nThis could be argued the other way around too: maybe it's good to have an internal and an external format. The internal format could be changed more easily when necessary for our internal purposes. It's like the block index, the utxo index, etc. Someone can write a perser but there are no guarantees of compatibility. Also, it only needs the data we need to reconstruct from a snapshot, nothing more, nothing less.\r\n\r\nHowever, changes in the external format, a documented API, have to take external clients into account.",
      "created_at" : "2022-05-31T14:08:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1142185714",
      "id" : 1142185714,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585EFF7y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142185714/reactions"
      },
      "updated_at" : "2022-05-31T14:09:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1142185714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Alternatively, the existence of the tool may make the PR obsolete. If it's possible for Core to just maintain a single, compact, dependency-less output format, and it's easy for devs or power users to write & use tools that can convert that compact format into whichever other formats they need, that seems superior to introducing more code (to maintain) into Core, and a new non-wallet sqlite dependency.\r\n\r\n> So it seems that we really have two different goals here: on the one hand a snapshot format to be saved/loaded by bitcoind or even other clients (and that in the most space-efficient way possible), on the other hand providing a neutral easy-to-process dump-format that can be inspected by users.\r\n\r\n@fanquake @theStack yeah, the existing format is intended to be as space efficient as possible since, ideally, that output will be commonly shared across network to help get nodes going. That consideration, in conjunction with \r\n\r\n- external tools needing libsecp to render the compressed data, and\r\n- the obligation that would be introduced by making a previously opaque data blob \"publicly\" consumable\r\n\r\nmakes me sympathetic to this changeset. I think as long as this feature gracefully degrades when sqlite support isn't compiled in, I'm concept ACK and will be happy to review this soon.",
      "created_at" : "2022-06-06T17:20:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1147690348",
      "id" : 1147690348,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585EaF1s",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1147690348/reactions"
      },
      "updated_at" : "2022-06-06T17:20:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1147690348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs a trivial rebase for #24410:\r\n```\r\nSnapshotMetadata metadata{tip->GetBlockHash(), maybe_stats->coins_count, tip->nChainTx};\r\n```\r\n\r\nEdit: i get the following error locally while running the `rpc_dumptxoutset.py` test:\r\n```\r\n test  2022-06-22T17:09:26.669000Z TestFramework (ERROR): Assertion failed\r\n                                   Traceback (most recent call last):\r\n                                     File \"/store/user/projects/bitcoin/bitcoin/test/functional/test_framework/util.py\", line 134, in try_rpc\r\n                                       fun(*args, **kwds)\r\n                                     File \"/home/user/projects/bitcoin/bitcoin/test/functional/rpc_dumptxoutset.py\", line 95, in <lambda>\r\n                                       assert_raises_rpc_error(-32603, 'Unable to open database file', lambda: node.dumptxoutset('bad_path/' + FILENAME, 'sqlite'))\r\n                                     File \"/store/user/projects/bitcoin/bitcoin/test/functional/test_framework/coverage.py\", line 49, in __call__\r\n                                       return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n                                     File \"/store/user/projects/bitcoin/bitcoin/test/functional/test_framework/authproxy.py\", line 144, in __call__\r\n                                       raise JSONRPCException(response['error'], status)\r\n                                   test_framework.authproxy.JSONRPCException: Couldn't open file /tmp/test_runner_â¿_ð_20220622_190924/rpc_dumptxoutset_0/node0/regtest/bad_path/txoutset.db.incomplete for writing. (-8)\r\n\r\n```\r\nLooks like it expects error code `-32603` but gets `-8`.",
      "created_at" : "2022-06-22T16:52:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1163377303",
      "id" : 1163377303,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585FV7qX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163377303/reactions"
      },
      "updated_at" : "2022-06-22T17:23:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163377303",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept NACK - I hope we don't go down this route. We've spent years trying to reduce the number of external dependencies in Bitcoin Core; especially in the option-less build. At this point in the project, I think adding new, or expanding the scope of, dependencies in this code base, should be reserved for things that are actually important/mission critical, i.e libsecp256k1, not for nice-to-have features, that are going to be used by a (relatively) small number of developers and enthusiasts, and not actually by the majority of nodes running this peice of software.\r\n\r\nIf anything, Bitcoin Core should be removing more code, and creating external tooling for new features, rather than continuing to accumulate functionality in this codebase because it's convenient. In this case, an external tool even exists already (I don't really understand why it needing libsecp as a dependency is a problem). My longer term conern is that if something like this is merged, in 3 months time, we'll have a new pull-request, to add support for using sqlite to dump out logs in json format, or some other thing, that clearly shouldn't be a concern/maintenance burnden of Bitcoin Core.\r\n\r\nThis PR also gives us somewhat awkward build logic, where an RPC feature is enabled if a user compiles with a certain dependency, that previously, only controlled whether or not you got a certain type of wallet.\r\n\r\nHow is this going to work with https://github.com/bitcoin/bitcoin/pull/24202? Are we abandoning that PR in favour of this, or will we end up with a trifecta of output formats?\r\n\r\nIn any case, this PR (rebased) is currently broken on arm64 macOS, when building with `--disable-wallet --with-sqlite`. sqlite is available, and building master with the same options works as expected:\r\n```bash\r\n  CXXLD    bitcoin-cli\r\n  CXXLD    minisketch/test\r\n  CXXLD    bitcoin-tx\r\n  CXXLD    bitcoin-util\r\nar: -L/opt/homebrew/Cellar/sqlite/3.38.5/lib: No such file or directory\r\nar: -lsqlite3: No such file or directory\r\ngmake[2]: *** [Makefile:5897: libbitcoin_node.a] Error 1\r\n```",
      "created_at" : "2022-06-22T20:07:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1163551060",
      "id" : 1163551060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585FWmFU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163551060/reactions"
      },
      "updated_at" : "2022-06-22T20:07:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163551060",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@fanquake: Great points raised that should be considered, I agree that an additional external dependency definitely has its drawbacks. Still, the somewhat uncomfortable fact is that right now we don't have a proper \"dumb\" (sic!) dump format for the UTXO set that only contains pure information and thus can easily be searched/processed. I think there should be one, as [the current compact-serialized format has a different purpose and won't change](https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1147690348), and considering that the UTXO set is one of the (if not _the_) most important data-structures on all nodes (be it pruned or non-pruned), as it reflects the current state / distribution of funds with all (visible) spending conditions, I would argue it's worth to make an exception here to the \"we don't add convenience features if the same result can also be achieved somehow with external tools\" rule. This enables the user to easily inspect that state without the need for further fiddling around between different formats and investing extra time and disk space.\r\n\r\n> How is this going to work with https://github.com/bitcoin/bitcoin/pull/24202? Are we abandoning that PR in favour of this, or will we end up with a trifecta of output formats?\r\n\r\nI think it's pretty obvious that this PR would obsolete #24202, at least I can't come up with a good reason why anyone would still be interested in a text format if you can already have a superset in the form of a simple but still powerful database (converting from SQLite to CSV format is not a big deal)? Though, if this PR is too controversial, it's probably still better to have #24202 instead of no proper UTXO set dump format at all. A compromise could be #24202 plus as follow-up a trivial tool (e.g. in contrib/ or external) that converts the text output to a SQLite database? (Would maybe still be faster than the current approach of emiting a compact-serialized dump + converting that to SQLite format via [utxo_to_sqlite](https://github.com/theStack/utxo_dump_tools)). Very curious to hear others opinions.",
      "created_at" : "2022-06-22T22:08:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1163658248",
      "id" : 1163658248,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585FXAQI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163658248/reactions"
      },
      "updated_at" : "2022-06-22T22:08:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163658248",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> How is this going to work with https://github.com/bitcoin/bitcoin/pull/24202? Are we abandoning that PR in favour of this, or will we end up with a trifecta of output formats?\r\n\r\nI think we should settle on two formats. The format for internal use and a format for external use. From there on, it's for people with custom scripts to analyze it or convert it into anything they want (it's not like end users have a use for an UTXO dump anyway). As external format I think sqlite is a [surprisingly good choice](https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1112502316) for these kind of huge data dumps (better than say, JSON, or formats that require writing custom parsers). It should still be possible to compile the node without sqlite though for people (most) who don't need external UTXO exports.\r\n\r\n> Though, if this PR is too controversial, it's probably still better to have https://github.com/bitcoin/bitcoin/pull/24202 instead of no proper UTXO set dump format at all. A compromise could be https://github.com/bitcoin/bitcoin/pull/24202 plus as follow-up a trivial tool (e.g. in contrib/ or external) that converts the text output to a SQLite database? (Would maybe still be faster than the current approach of emiting a compact-serialized dump + converting that to SQLite format via [utxo_to_sqlite](https://github.com/theStack/utxo_dump_tools)). Very curious to hear others opinions.\r\n\r\nI agree.\r\n",
      "created_at" : "2022-06-23T08:06:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1164090027",
      "id" : 1164090027,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585FYpqr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164090027/reactions"
      },
      "updated_at" : "2022-06-23T08:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164090027",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think answers to these questions would be illuminating for comparison to #24202:\r\n- is there a considerable difference in final output size for CSV vs. sqlite? is one more space efficient than the other?\r\n- what is the code complexity and runtime of, say, a Python script that writes streaming CSV input into sqlite?\r\n\r\nIf space is comparable between the two options, and a script that adapts CSV -> sqlite is easy (I think it would be) and relatively quick (not sure here), I would say that #24202 is preferable, since it would ship with all builds. We could even bundle such a script in `contrib/`.\r\n\r\nThat said, I think dependency considerations aside, sqlite is probably a much more practical output format for actual consumption. Reading sqlite into, say, `pandas` for further analysis is as trivial CSV - in fact, based on the function signatures of [`pandas.read_csv`](https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html) vs. [`pandas.read_sql_table`](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_sql_table.html#pandas.read_sql_table), sqlite is probably the easier choice.",
      "created_at" : "2022-06-23T15:56:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1164592237",
      "id" : 1164592237,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585FakRt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164592237/reactions"
      },
      "updated_at" : "2022-06-23T15:56:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164592237",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> is there a considerable difference in final output size for CSV vs. sqlite? is one more space efficient than the other?\r\n\r\nDid a quick comparison between a SQLite output that I created with this PR ~3 weeks ago (82401330 UTXO entries) and a text output with #24202 that I created just a few minutes ago (82801821 UTXO entries):\r\n```\r\n$ ls -l ~/.bitcoin/utxos.sqlite ~/.bitcoin/utxo_set.txt\r\n[...] 11009749503 Jun 23 19:20 /home/honeybadger/.bitcoin/utxo_set.txt\r\n[...] 12445270016 Jun  3 15:44 /home/honeybadger/.bitcoin/utxos.sqlite\r\n```\r\nBoth seem to take roughly ~2x of the size of the compact-serialized format, with the text output even being a bit smaller (~10.25 GB vs ~11.59 GB). The vast majority of the space per entry is taken by txid and scriptPubKey, and since we store them as hex-encoded strings (both in this PR and in #24202), it makes sense that the sizes are in a similar area.\r\n\r\n> what is the code complexity and runtime of, say, a Python script that writes streaming CSV input into sqlite?\r\n\r\nPretty sure that the code complexity is low (seems like sqlite3 can even directly import CSV files and it could be a very simple shell-script? https://stackoverflow.com/a/1045961), while the runtime could be a bit of a show-stopper here. Will try to write such a script within the next days and report the results then.",
      "created_at" : "2022-06-23T17:47:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1164699018",
      "id" : 1164699018,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585Fa-WK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164699018/reactions"
      },
      "updated_at" : "2022-06-23T17:47:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164699018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Unfortunately, there is no built-in \"reverse\" operator in SQLite :/ If there was, we could simply do something like the following for the conversion script: `SELECT hex(reverse(txid)), vout, value, coinbase, height, hex(scriptpubkey) FROM utxos`\r\n\r\nActually, you can use the SUBSTR and LENGTH https://www.sqlite.org/lang_corefunc.html#substr \r\n\r\n> The substr(X,Y,Z) function returns a substring of input string X that begins with the Y-th character and which is Z characters long. If Z is omitted then substr(X,Y) returns all characters through the end of the string X beginning with the Y-th. The left-most character of X is number 1. If Y is negative then the first character of the substring is found by counting from the right rather than the left. If Z is negative then the abs(Z) characters preceding the Y-th character are returned. If X is a string then characters indices refer to actual UTF-8 characters. If X is a BLOB then the indices refer to bytes.\r\n\r\nso in theory:\r\n\r\n```sql\r\nSELECT hex(SUBSTR(txid, -1, -LENGTH(txid))), vout, value, coinbase, height, hex(scriptpubkey) FROM utxos\r\n```\r\n\r\nworks.\r\n\r\n\r\n\r\n\r\n----------\r\n\r\n\r\nIn general I think dumping to sqlite sounds like a fine idea. One point of contention though is it would be nice if we could return the SQLITE file over the network _somehow_, since not all RPC users have local filesystem access.\r\n",
      "created_at" : "2022-06-23T18:24:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1164733346",
      "id" : 1164733346,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585FbGui",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164733346/reactions"
      },
      "updated_at" : "2022-06-23T18:24:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164733346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > Unfortunately, there is no built-in \"reverse\" operator in SQLite :/ If there was, we could simply do something like the following for the conversion script: `SELECT hex(reverse(txid)), vout, value, coinbase, height, hex(scriptpubkey) FROM utxos`\r\n> \r\n> Actually, you can use the SUBSTR and LENGTH https://www.sqlite.org/lang_corefunc.html#substr\r\n> \r\n> [...]\r\n> \r\n> so in theory:\r\n> \r\n> ```sql\r\n> SELECT hex(SUBSTR(txid, -1, -LENGTH(txid))), vout, value, coinbase, height, hex(scriptpubkey) FROM utxos\r\n> ```\r\n> \r\n> works.\r\n\r\nUnfortunately that doesn't work. The substring is still extracted from left to right without any reversing operation involved, the only thing possible is to specify the start and end offsets by counting from right to left:\r\n```\r\n$ sqlite3\r\nSQLite version 3.38.2 2022-03-26 13:51:10\r\nEnter \".help\" for usage hints.\r\nConnected to a transient in-memory database.\r\nUse \".open FILENAME\" to reopen on a persistent database.\r\nsqlite> select hex(substr(x'11223344', -1, -4));\r\n112233\r\n\r\n```\r\nIf reversing in SQLite was possible, it would be very tempting to store the txid and scriptPubkey as BLOBs [to have more compact dumps that are created faster](https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1109449844).",
      "created_at" : "2022-06-24T11:54:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1165499803",
      "id" : 1165499803,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585FeB2b",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165499803/reactions"
      },
      "updated_at" : "2022-06-24T11:54:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165499803",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ah interesting... since we know TXIDs are 32 bytes, one option would be to do a 32 byte expansion of something like:\r\n\r\nsubstr('abc',3, 1) || substr('abc', 2, 1) || substr('abc', 1,1)\r\n\r\nas a generated virtual table. this would have no storage overhead, but would have some overhead on retrieval.",
      "created_at" : "2022-06-24T17:55:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1165804095",
      "id" : 1165804095,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585FfMI_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165804095/reactions"
      },
      "updated_at" : "2022-06-24T17:55:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165804095",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Are you still working on this?\r\n\r\ncc @jamesob",
      "created_at" : "2022-10-12T19:14:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1276627715",
      "id" : 1276627715,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585MF8sD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276627715/reactions"
      },
      "updated_at" : "2022-10-12T19:14:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276627715",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Are you still working on this?\n> \n> \n> \n> cc @jamesob\n\nWill get back to it this week, been busy with other work :)",
      "created_at" : "2022-10-12T19:25:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24952#issuecomment-1276638886",
      "id" : 1276638886,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24952",
      "node_id" : "IC_kwDOABII585MF_am",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276638886/reactions"
      },
      "updated_at" : "2022-10-12T19:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276638886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   }
]
