[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25619](https://github.com/bitcoin/bitcoin/pull/25619) (net: avoid overriding non-virtual ToString() in CService and use better naming by vasild)\n* [#25203](https://github.com/bitcoin/bitcoin/pull/25203) (logging: update to severity-based logging by jonatack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-04-25T17:48:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1108862564",
      "id" : 1108862564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24974",
      "node_id" : "IC_kwDOABII585CF-Zk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108862564/reactions"
      },
      "updated_at" : "2022-07-20T20:32:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108862564",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK fae94c6591231722f01ccde689f0b36febf824cc",
      "created_at" : "2022-04-29T13:54:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1113339042",
      "id" : 1113339042,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24974",
      "node_id" : "IC_kwDOABII585CXDSi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113339042/reactions"
      },
      "updated_at" : "2022-04-29T13:54:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113339042",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns You might be interested in (N)ACKing this change, based on the conversation in https://github.com/bitcoin/bitcoin/pull/24697#discussion_r848094959",
      "created_at" : "2022-04-29T14:00:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1113345946",
      "id" : 1113345946,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24974",
      "node_id" : "IC_kwDOABII585CXE-a",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113345946/reactions"
      },
      "updated_at" : "2022-04-29T14:00:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113345946",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r861932886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861932886"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think it makes sense to pass in a time point here; even if we used `sleep_until` that would just end up doing `now() + rand - now()` which seems silly.\r\n\r\nBut, rather than parameterise by a duration; we could parameterise by a Clock:\r\n\r\n```c++\r\n    template <typename C=std::chrono::steady_clock>\r\n    typename C::duration rand_uniform_duration(typename C::duration max) noexcept\r\n    {\r\n        assert(max.count() > 0);\r\n        return typename C::duration{GetRand(max.count())};\r\n    };\r\n```\r\nwhich would make it just be:\r\n\r\n```c++\r\n    if (!interruptNet.sleep_for(rng.rand_uniform_duration(FEELER_SLEEP_WINDOW)))\r\n```\r\n\r\n(That avoids the need for the `common_type` stuff too)\r\n\r\nAt least for me, `steady_clock` operates in nanoseconds, so the existing `sleep_for(millis)` doesn't work, but replacing the three `CThreadInterrupt::sleep_for` methods with a single one that accepts `std::chrono::steady_clock::duration rel_time` would fix that. Alternatively, so would:\r\n\r\n```c++\r\n    template <typename Dur>\r\n    bool sleep_for(Dur rel_time)\r\n    {\r\n        return sleep_for_ms(std::chrono::duration_cast<std::chrono::milliseconds>(rel_time));\r\n    }\r\n```",
      "commit_id" : "fa9970a769a2f03cd5c9b2f4a00e530d395d7ffb",
      "created_at" : "2022-04-29T15:49:53Z",
      "diff_hunk" : "@@ -2151,12 +2152,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         }\n \n         if (addrConnect.IsValid()) {\n-\n             if (fFeeler) {\n                 // Add small amount of random noise before connection to avoid synchronization.\n-                int randsleep = GetRandInt(FEELER_SLEEP_WINDOW * 1000);\n-                if (!interruptNet.sleep_for(std::chrono::milliseconds(randsleep)))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r861932886",
      "id" : 861932886,
      "line" : 2164,
      "node_id" : "PRRC_kwDOABII584zYA1W",
      "original_commit_id" : "fae94c6591231722f01ccde689f0b36febf824cc",
      "original_line" : 2164,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 27,
      "pull_request_review_id" : 957931396,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861932886/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-29T16:01:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861932886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r862330618"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862330618"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, changed",
      "commit_id" : "fa9970a769a2f03cd5c9b2f4a00e530d395d7ffb",
      "created_at" : "2022-04-30T08:33:41Z",
      "diff_hunk" : "@@ -2151,12 +2152,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         }\n \n         if (addrConnect.IsValid()) {\n-\n             if (fFeeler) {\n                 // Add small amount of random noise before connection to avoid synchronization.\n-                int randsleep = GetRandInt(FEELER_SLEEP_WINDOW * 1000);\n-                if (!interruptNet.sleep_for(std::chrono::milliseconds(randsleep)))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r862330618",
      "id" : 862330618,
      "in_reply_to_id" : 861932886,
      "line" : 2164,
      "node_id" : "PRRC_kwDOABII584zZh76",
      "original_commit_id" : "fae94c6591231722f01ccde689f0b36febf824cc",
      "original_line" : 2164,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 27,
      "pull_request_review_id" : 958470493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862330618/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-30T08:33:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862330618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r862331287"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862331287"
         }
      },
      "author_association" : "MEMBER",
      "body" : "review note: https://eel.is/c++draft/thread.condition.condvar#24",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-04-30T08:41:57Z",
      "diff_hunk" : "@@ -19,13 +19,12 @@\n class CThreadInterrupt\n {\n public:\n+    using Clock = std::chrono::steady_clock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r862331287",
      "id" : 862331287,
      "line" : 22,
      "node_id" : "PRRC_kwDOABII584zZiGX",
      "original_commit_id" : "fa9970a769a2f03cd5c9b2f4a00e530d395d7ffb",
      "original_line" : 22,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/threadinterrupt.h",
      "position" : 4,
      "pull_request_review_id" : 958471002,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862331287/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-10T13:58:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862331287",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-05-10T06:08:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1121968018",
      "id" : 1121968018,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24974",
      "node_id" : "IC_kwDOABII585C39-S",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121968018/reactions"
      },
      "updated_at" : "2022-05-10T06:08:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121968018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2022-05-10T07:24:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1122025635",
      "id" : 1122025635,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24974",
      "node_id" : "IC_kwDOABII585C4MCj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1122025635/reactions"
      },
      "updated_at" : "2022-05-10T07:24:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1122025635",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869264320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869264320"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why support negative ranges?",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-05-10T13:49:07Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869264320",
      "id" : 869264320,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII584zz-vA",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 240,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 967818872,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869264320/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-10T13:49:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869264320",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869277448"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869277448"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Some call sites may use a negative range. For example in addr relay, the timestamp of some address messages is randomly pushed into the past.\r\n\r\nAlso, it seems safer when the alternative is either unspecified behaviour, or a crash.",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-05-10T13:59:27Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869277448",
      "id" : 869277448,
      "in_reply_to_id" : 869264320,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII584z0B8I",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 240,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 967837669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869277448/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-10T13:59:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869277448",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869286539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869286539"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The behavior here still seems odd in those cases. I'd expect call sites that actually can result in negative range values to want \"rand_uniform_duration(T)\" to mean: \"give me a uniform duration not exceeding T\". If T is negative, that probably means just returning 0?",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-05-10T14:07:24Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869286539",
      "id" : 869286539,
      "in_reply_to_id" : 869264320,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII584z0EKL",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 240,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 967851370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869286539/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-10T14:07:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869286539",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869294988"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869294988"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, the interval is determined at run-time and the passed in value can either mean the start or the end of the interval, with the other value being `0`.\r\n\r\nI am not sure if mapping any negative value to a constant `0` is less confusing. And I couldn't find another solution that is well defined at run time (no unspecified behaviour, no crash).",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-05-10T14:14:39Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869294988",
      "id" : 869294988,
      "in_reply_to_id" : 869264320,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII584z0GOM",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 240,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 967863809,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869294988/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-10T14:14:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869294988",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869317017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869317017"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, I'm not objecting to this change. It just strikes me as bizarre semantics; the simplest interpretation of a range is specifying how wide the window of possible values is - and that simply cannot be negative.\r\n\r\nAn alternative is always returning range itself if it is <= 0. That at least satisfies the constraint \"never return a value exceeding range\", and probably works just as well for the intended call sites (who I suspect use to determine how long to wait)?",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-05-10T14:33:30Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869317017",
      "id" : 869317017,
      "in_reply_to_id" : 869264320,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII584z0LmZ",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 240,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 967896063,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869317017/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-10T14:33:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869317017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869337240"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869337240"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Again, I am not sure that returning any constant is less confusing for a random function that took a non-zero input.\r\n\r\nFor reference, one potential call site would be:\r\n\r\n```\r\naddr.nTime = GetTime() - rng.randrange(nOneWeek) - nOneWeek;\r\n```\r\n\r\nThis (and any other) call site can obviously be written without relying on a negative range, but we'd also need to avoid this with a compile error. Without `consteval`, this is probably only possible with some template magic?",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-05-10T14:50:41Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869337240",
      "id" : 869337240,
      "in_reply_to_id" : 869264320,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII584z0QiY",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 240,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 967925108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869337240/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-10T14:50:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869337240",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869400677"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869400677"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think template magic works for this -- you get \"non-type template parameter\" errors trying to pass chrono::duration's as template parameters. I think you could do it with c++20 which allows \"literal class types\" as a non-type template parameter. https://en.cppreference.com/w/cpp/language/template_parameters",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-05-10T15:39:39Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869400677",
      "id" : 869400677,
      "in_reply_to_id" : 869264320,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII584z0gBl",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 240,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 968017606,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869400677/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-10T15:39:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869400677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869427321"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869427321"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe `if (Assume(range.count()) > 0) { return Dur{randrange...}; } else { return range; }` ? I don't think we could make it a `consteval` function even with c++20, because `rng.randrange()` isn't going to be `consteval`?",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-05-10T15:59:36Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869427321",
      "id" : 869427321,
      "in_reply_to_id" : 869264320,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII584z0mh5",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 240,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 968049722,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869427321/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-10T15:59:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869427321",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r870996381"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/870996381"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It would be ideal to enforce non-negative at compile time, and then force every caller to switch to a non-negative construction.\r\n\r\nWhile I don't think how this is possible, I don't have much preference for the behavior if the value is negative. It is indeed annoying. We're not making it worse at least.\r\nPerhaps status quo makes more sense in this case.",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-05-12T06:33:51Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r870996381",
      "id" : 870996381,
      "in_reply_to_id" : 869264320,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII584z6lmd",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 240,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 970318092,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/870996381/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-12T06:33:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/870996381",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-05-12T08:44:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1124700561",
      "id" : 1124700561,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24974",
      "node_id" : "IC_kwDOABII585DCZGR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1124700561/reactions"
      },
      "updated_at" : "2022-05-12T08:44:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1124700561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872481737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872481737"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmm, if I'm reading this right, this seems like quite an odd api to me. I'm not sure why passing a clock is necessary.\r\n\r\nFrom what I can tell, you pass it a duration and a clock, and it gives you a new random duration in the clock's period. In other words.. we basically want a `std::chrono::duration_cast` which is hijacked and randomized. So why not use that api?\r\n\r\nIt'd look like (simplified for positive-only and untested):\r\n```c++\r\ntemplate <class ToDuration, class Rep, class Period>\r\nconstexpr ToDuration rand_uniform_duration(const std::chrono::duration<Rep, Period>& d)\r\n{\r\n    auto max_ret = std::chrono::duration_cast<ToDuration>(d);\r\n    auto rand_offset = ToDuration(randrange(d.count()));\r\n    return max_ret - rand_offset;\r\n}\r\n```\r\n\r\nUsed like:\r\n```c++\r\nauto foo = rand_uniform_duration<std::chrono::milliseconds>(30s);\r\n```\r\n\r\nOr in this case:\r\n```c++\r\nauto foo = rand_uniform_duration<CThreadInterrupt::Clock::duration>(FEELER_SLEEP_WINDOW);\r\n\r\n```\r\n\r\nThat way, we effectively communicate that we're randomizing in the target period as opposed to the provided one.",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-05-13T14:46:51Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872481737",
      "id" : 872481737,
      "in_reply_to_id" : 869264320,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII5840AQPJ",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 240,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 972376270,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872481737/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-13T14:46:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872481737",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872496925"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872496925"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think a `duration_cast` is dangerous and not very useful here. Recall that the compiler will do the cast for you if it is safe to do. And in cases where it isn't safe, you are better off not calling this function in the first place.\r\n\r\nI used clock, as it was suggested here: https://github.com/bitcoin/bitcoin/pull/24974#discussion_r861932886\r\n\r\nThough, I think durations should be fine, too.",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-05-13T15:02:40Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872496925",
      "id" : 872496925,
      "in_reply_to_id" : 869264320,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII5840AT8d",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 240,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 972398618,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872496925/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-13T15:02:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872496925",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872517814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872517814"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As @ajtowns and I discussed yesterday in the office, here's a quick attempt at compile-time checking (to side-step the question of negative durations) just for fun. It's not completely unreasonable imo.\r\n\r\nEdit: Whoops, deleted, that was horribly broken.",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-05-13T15:25:24Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872517814",
      "id" : 872517814,
      "in_reply_to_id" : 869264320,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII5840AZC2",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 240,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 972431903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872517814/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-13T15:30:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872517814",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872521324"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872521324"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Interesting. I guess you'd still have to static_assert against implicit sign conversion when going from 64-bit unsigned to 64-bit signed.",
      "commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "created_at" : "2022-05-13T15:29:18Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872521324",
      "id" : 872521324,
      "in_reply_to_id" : 869264320,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII5840AZ5s",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 240,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 972441881,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872521324/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-13T15:29:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872521324",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872557872"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872557872"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok, here's a full working test-case. Statically checked for non-negative, passed durations, and no `duration_cast ` as @MarcoFalke suggested:\r\n\r\n```c++\r\n#include <chrono>\r\n#include <cstdlib>\r\n#include <cstdio>\r\n\r\nlong int randrange(uint64_t mod)\r\n{\r\n    auto ret = random() % mod;\r\n    return ret;\r\n}\r\n\r\ntemplate <typename Duration, typename Duration::rep Ticks>\r\nstruct static_duration\r\n{\r\n    using duration = Duration;\r\n    static constexpr typename Duration::rep ticks = Ticks;\r\n};\r\n\r\ntemplate <typename ToDuration, typename FromDuration, typename FromDuration::rep Ticks>\r\nconstexpr ToDuration rand_uniform_duration(const static_duration<FromDuration, Ticks>&)\r\n{\r\n    static_assert(Ticks >= 0);\r\n    FromDuration from(Ticks);\r\n    ToDuration max_ret{from};\r\n    return ToDuration{randrange(max_ret.count())};\r\n}\r\n\r\nstatic constexpr static_duration<std::chrono::seconds, 30> foo;\r\nstatic constexpr static_duration<std::chrono::seconds, -30> negfoo;\r\n\r\nint main()\r\n{\r\n    srand(time(nullptr));\r\n    auto bar = rand_uniform_duration<std::chrono::milliseconds>(foo);\r\n    // auto negbar = rand_uniform_duration<std::chrono::milliseconds>(negfoo); // Compiler error\r\n    \r\n    printf(\"duration: %ld\\n\", bar.count());\r\n}\r\n```\r\n\r\nEdit: I cleaned up a little. Made the static rep duration type dependent on the duration's. Added a static assert and an example compile error.\r\n\r\nEdit2: Require a `static_duration` rather than its parts and no need to subtract.",
      "commit_id" : "fabfedecd689e9086c7c2eb116ae9467c9993511",
      "created_at" : "2022-05-13T15:58:40Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872557872",
      "id" : 872557872,
      "in_reply_to_id" : 869264320,
      "line" : 249,
      "node_id" : "PRRC_kwDOABII5840Ai0w",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 249,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 972481771,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872557872/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-13T19:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872557872",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872561944"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872561944"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Interesting. I guess you'd still have to static_assert against implicit sign conversion when going from 64-bit unsigned to 64-bit signed.\r\n\r\n~Right, I guess you'd want to accept a `int64_t` and `static_assert` that it's > 0 instead.~\r\nFixed above.\r\n\r\nFeel free to disregard or clean up and use :)",
      "commit_id" : "fabfedecd689e9086c7c2eb116ae9467c9993511",
      "created_at" : "2022-05-13T16:03:39Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872561944",
      "id" : 872561944,
      "in_reply_to_id" : 869264320,
      "line" : 249,
      "node_id" : "PRRC_kwDOABII5840Aj0Y",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 249,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 972487392,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872561944/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-13T21:45:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872561944",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r883733694"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883733694"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok, glad we figured out how to implement this, but is this something that is actually preferable? :sweat_smile: ",
      "commit_id" : "fabfedecd689e9086c7c2eb116ae9467c9993511",
      "created_at" : "2022-05-27T15:42:40Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r883733694",
      "id" : 883733694,
      "in_reply_to_id" : 869264320,
      "line" : 249,
      "node_id" : "PRRC_kwDOABII5840rLS-",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 249,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 987682222,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883733694/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-27T15:42:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883733694",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased only for now",
      "created_at" : "2022-05-27T15:42:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1139735921",
      "id" : 1139735921,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24974",
      "node_id" : "IC_kwDOABII585D7v1x",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1139735921/reactions"
      },
      "updated_at" : "2022-05-27T15:42:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1139735921",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r884043414"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884043414"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ð¤·\r\nIt's perfectly expressive and constexpr, so there's not much downside other than (the syntax and) the emitted per-constant symbol. The obvious realistic downside being that it's kinda overkill...\r\n\r\nBut maybe not it's a bad thing to be able to express only-positive-time more generally? So maybe that's the test... is there somewhere else where it might be useful to describe time constants as positive only?",
      "commit_id" : "fabfedecd689e9086c7c2eb116ae9467c9993511",
      "created_at" : "2022-05-28T00:52:42Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r884043414",
      "id" : 884043414,
      "in_reply_to_id" : 869264320,
      "line" : 249,
      "node_id" : "PRRC_kwDOABII5840sW6W",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 249,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 988257928,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884043414/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-28T00:52:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884043414",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r885880534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885880534"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm happy (or about equally unhappy...) with any of the approaches really; and I guess we'd want to switch to C++20 syntax when that's available either way, so *shrug* from me. @sipa?",
      "commit_id" : "fabfedecd689e9086c7c2eb116ae9467c9993511",
      "created_at" : "2022-05-31T16:52:13Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r885880534",
      "id" : 885880534,
      "in_reply_to_id" : 869264320,
      "line" : 249,
      "node_id" : "PRRC_kwDOABII5840zXbW",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 249,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 990803762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885880534/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T16:52:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885880534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r885887251"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885887251"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think there is a *minimal, theoretical* advantage to disallowing negative values, as the inverting the most negative value is an integer sanitizer violation. Though, this shouldn't affect execution of a program that is not compiled with the integer sanitizer and shouldn't happen in practise either.\r\n\r\nWhat is the \"C++20\" syntax, if I may ask? ",
      "commit_id" : "fabfedecd689e9086c7c2eb116ae9467c9993511",
      "created_at" : "2022-05-31T16:59:42Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r885887251",
      "id" : 885887251,
      "in_reply_to_id" : 869264320,
      "line" : 249,
      "node_id" : "PRRC_kwDOABII5840zZET",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 249,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 990812850,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885887251/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T16:59:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885887251",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r885905964"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885905964"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "With C++20 you can pass a duration to a template, and then do a static_assert on its value, so you'd write `rand_uniform_duration<dur>()` instead of `rand_uniform_duration(dur)` and get the compile-time check.",
      "commit_id" : "fabfedecd689e9086c7c2eb116ae9467c9993511",
      "created_at" : "2022-05-31T17:22:14Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r885905964",
      "id" : 885905964,
      "in_reply_to_id" : 869264320,
      "line" : 249,
      "node_id" : "PRRC_kwDOABII5840zdos",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 249,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 990838586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885905964/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-31T17:22:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885905964",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r886882040"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886882040"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, with `dur` you mean `static_duration`, not `std::chrono::duration`?\r\n\r\nI can't get it to work with `std::chrono::duration`:\r\n\r\n```cpp\r\n#include <chrono>\r\n\r\nusing namespace std::chrono_literals;\r\n\r\nstruct FRC {\r\n    template <std::chrono::duration range>\r\n    auto rand_uniform_delay(auto time) {\r\n        return time + rand_uniform_duration<decltype(time)::duration, range>();\r\n    }\r\n    template <typename Duration, std::chrono::duration range>\r\n    Duration rand_uniform_duration() noexcept {\r\n        static_assert(range.count() > 0);\r\n        return Duration{randrange(range.count())};\r\n    }\r\n};\r\n\r\nint main() {\r\n    FRC frc;\r\n    frc.rand_uniform_delay<9h>(std::chrono::sys_seconds{1s});\r\n    frc.rand_uniform_duration<std::chrono::seconds, 9h>();\r\n}\r\n```\r\n\r\nhttps://godbolt.org/z/8Y868s98K",
      "commit_id" : "fabfedecd689e9086c7c2eb116ae9467c9993511",
      "created_at" : "2022-06-01T14:32:50Z",
      "diff_hunk" : "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r886882040",
      "id" : 886882040,
      "in_reply_to_id" : 869264320,
      "line" : 249,
      "node_id" : "PRRC_kwDOABII58403L74",
      "original_commit_id" : "fac6af70fd14c380a016152ce38c20158da03136",
      "original_line" : 249,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/random.h",
      "position" : 26,
      "pull_request_review_id" : 992081676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886882040/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-01T14:32:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886882040",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2022-07-13T15:04:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1183340995",
      "id" : 1183340995,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24974",
      "node_id" : "IC_kwDOABII585GiFnD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1183340995/reactions"
      },
      "updated_at" : "2022-07-13T15:04:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1183340995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "created_at" : "2022-07-26T11:56:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1195387397",
      "id" : 1195387397,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24974",
      "node_id" : "IC_kwDOABII585HQCoF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1195387397/reactions"
      },
      "updated_at" : "2022-07-26T11:56:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1195387397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "created_at" : "2022-07-26T14:00:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1195524400",
      "id" : 1195524400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24974",
      "node_id" : "IC_kwDOABII585HQkEw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1195524400/reactions"
      },
      "updated_at" : "2022-07-26T14:00:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1195524400",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   }
]
