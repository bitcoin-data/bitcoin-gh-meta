[
   {
      "author_association" : "MEMBER",
      "body" : "> These implicit castings are dangerous.\n\nCan you explain why?\n",
      "created_at" : "2014-10-07T06:58:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5054#issuecomment-58144634",
      "id" : 58144634,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5054",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MTQ0NjM0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58144634/reactions"
      },
      "updated_at" : "2014-10-07T06:58:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58144634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The implicit casting can cause hard to find segmentation faults. Any function or method (including constructors) that takes a CTransaction (or a reference to it) as parameter will create a temporary instance using the implicit constructor from a CMutableTransaction. That instance is only in memory during the execution of the function and gets destroyed just after it. Any later access to a reference of the temporary CTransaction should raise an unauthorized memory access exception.\nThat would be the case in #4989 if it wasn't for\n\n```\n    const CTransaction txAux;\n    SignatureHasher(const CMutableTransaction& txToIn, unsigned int nInIn) : txAux(txToIn), txTo(this->txAux), nIn(nInIn) { }\n```\n\n https://github.com/jtimon/bitcoin/commit/dfd5c6d85b4b613a42581488fdf5ef918e47775d#diff-b81dfdd8a5bd80fe9f82b5a40c4c991eR45\n\nThe auxiliary variable and constructor could be eliminated if there was a guarantee that the Constructor will always be called with a CTransaction& and never a CMutationCTransaction that gets implicitly copied to a temporary CTransaction. That guarantee can be achieved with the \"explicit\" keyword.\nhttp://stackoverflow.com/questions/121162/what-does-the-explicit-keyword-in-c-mean\n",
      "created_at" : "2014-10-07T08:59:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5054#issuecomment-58155613",
      "id" : 58155613,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5054",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MTU1NjEz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58155613/reactions"
      },
      "updated_at" : "2014-10-07T08:59:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58155613",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Indeed, the parameter will create a temporary instance using the implicit constructor. It will have the scope of the current statement only.\n\nIsn't the root issue then that some functions assume that a const reference that is passed has a longer validity than the function call? Not the implicit conversion itself?\n\nIe if a function takes a `const std::string &`, this could be a temporary converted from a `const char*`. There is nothing inherently dangerous in this except if the callee assumes that the caller will keep the reference alive instead of making a copy.\n\nIMO if the goal is to pass a  longer-living structure, I don't think references are the right thing to use. Using a pointer will avoid any implicit conversions, and documents that something potentially dangerous is going on (and you need reference counting, or ownership transfer, or at least make it clear what the scope is). Or if acceptable, just make a copy.\n",
      "created_at" : "2014-10-07T09:06:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5054#issuecomment-58156491",
      "id" : 58156491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5054",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MTU2NDkx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58156491/reactions"
      },
      "updated_at" : "2014-10-07T09:10:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58156491",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "What you say makes sense, but creating an additional copy has some cost that I would like to save when it's not necessary. Maybe this only makes sense after #4989.\n@sipa told me that he introduced that constructor without the explicit keyword to minimize the diff but leave it as something to do later.\n",
      "created_at" : "2014-10-07T21:29:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5054#issuecomment-58265971",
      "id" : 58265971,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5054",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MjY1OTcx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58265971/reactions"
      },
      "updated_at" : "2014-10-07T21:34:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58265971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "So use a pointer, then. I think no matter what, assuming that a reference that is passed to a function outlives that function is wrong.\nImplicit conversions are just a fact of life with references. You can make one constructor explicit, but this will keep biting you as long as you use C++.\n",
      "created_at" : "2014-10-08T06:46:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5054#issuecomment-58317090",
      "id" : 58317090,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5054",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MzE3MDkw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58317090/reactions"
      },
      "updated_at" : "2014-10-08T06:48:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58317090",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I tried to do it with pointers and castings instead of implicit constructors but the tests keep failing \" memory access violation\"\nhttps://github.com/jtimon/bitcoin/tree/ptrsighash\n\nWe could make all constructors with a single parameter explicit. We could even make that a style rule. If we did, when we \"assume that a reference that is passed to a function outlives that function\"  either by mistake or due to a conscientious decision based purely on performance (and no, just like  performance is not always more important than appropriate semantics, style is not always more important than performance). And although in my preferred language \"explicit is better than implicit\", I don't think it's fair to blame C++ in this case when it provides a specific keyword to avoid the explosions.\nIn any case, I will use a copy in #4989 and its continuations as suggested, maintaining that branch independent from this one (I'm mostly reffering to https://github.com/jtimon/bitcoin/tree/libscriptpreview a rewrite of #4809 on top of this and the latest changes). The penalty shouldn't be very big anyway and it can always be optimized later. After rewriting it without this, it should be easier to review as well.\n\nBut if you don't mind, I will keep this open for now to hear more feedback.\n",
      "created_at" : "2014-10-08T10:33:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5054#issuecomment-58338945",
      "id" : 58338945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5054",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MzM4OTQ1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58338945/reactions"
      },
      "updated_at" : "2014-10-08T10:33:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58338945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I am not _blaming_ C++. I'm just saying that temporaries are something to be expected if you use (const) references. You can try to change the world around it, or just accept it and use a style that is not conductive to a kind of error. Even if you make sure that all constructors in bitcoin core itself are explicit, there could still be an implicit conversion through boost, or the standard library (like the std::string/const char\\* I mention above).\n\n(to be clear: there are very good reasons for making constructors explicit, for example if the goal of the constructor is not to convert between types, or when the constructor does something unsafe to the object passed in. But `CMutableTranscaction`->`CTransaction` seems to me to be the kind of conversion that makes sense, and making that explicit adds a lot of verbosity to the code)\n",
      "created_at" : "2014-10-08T11:25:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5054#issuecomment-58343659",
      "id" : 58343659,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5054",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MzQzNjU5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58343659/reactions"
      },
      "updated_at" : "2014-10-10T10:05:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/58343659",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Avoiding a copy is probably always an optimization. Your rule of simply not using constructors that use a const ref and expect it to remain in memory makes a lot of sense to me.\nI wasn't misunderstanding explicit, I was misunderstanding const&.\nThanks for the explanations, closing (and sorry for not having closing it earlier).\n",
      "created_at" : "2014-10-28T16:58:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/5054#issuecomment-60791020",
      "id" : 60791020,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/5054",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNzkxMDIw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60791020/reactions"
      },
      "updated_at" : "2014-10-28T16:58:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/60791020",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   }
]
