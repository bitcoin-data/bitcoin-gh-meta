[
   {
      "author_association" : "MEMBER",
      "body" : "cr ACK fc471814dc34abb4d5479803ebb1033b572eda43",
      "created_at" : "2022-02-28T07:34:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24449#issuecomment-1053969495",
      "id" : 1053969495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24449",
      "node_id" : "IC_kwDOABII584-0kxX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1053969495/reactions"
      },
      "updated_at" : "2022-02-28T07:34:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1053969495",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Just to confirm, there are no steps to reproduce?",
      "created_at" : "2022-02-28T08:05:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24449#issuecomment-1053990159",
      "id" : 1053990159,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24449",
      "node_id" : "IC_kwDOABII584-0p0P",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1053990159/reactions"
      },
      "updated_at" : "2022-02-28T08:05:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1053990159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "No steps to reproduce. My earlier comment was wrong, this shouldn't change any of the seeds since triggering an overflow of a `int64_t` at steps with maximum size of 4096 is infeasible.",
      "created_at" : "2022-02-28T14:11:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24449#issuecomment-1054296796",
      "id" : 1054296796,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24449",
      "node_id" : "IC_kwDOABII584-10rc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1054296796/reactions"
      },
      "updated_at" : "2022-02-28T14:11:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1054296796",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> On another note, I noticed that FuzzedFileProvider::seek has some confusing behavior with SEEK_END. It seems to me that if these handlers are supposed to mimic the real functions, that SEEK_END would use the offset from the end of the stream, rather than changing the offset with a random value between 0 and 4096. I could also open a PR to fix SEEK_END, but it would invalidate the seeds.\r\n\r\nI wonder if this is related to https://bugs.chromium.org/p/oss-fuzz/issues/list?q=FuzzedFileProvider&can=2",
      "created_at" : "2022-02-28T14:23:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24449#issuecomment-1054308101",
      "id" : 1054308101,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24449",
      "node_id" : "IC_kwDOABII584-13cF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1054308101/reactions"
      },
      "updated_at" : "2022-02-28T14:23:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1054308101",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "That is what I was trying to figure out, but didn't finish setting up oss-fuzz. I think FuzzedFileProvider would have to track the end of the filestream",
      "created_at" : "2022-02-28T15:31:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24449#issuecomment-1054375598",
      "id" : 1054375598,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24449",
      "node_id" : "IC_kwDOABII584-2H6u",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1054375598/reactions"
      },
      "updated_at" : "2022-02-28T15:31:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1054375598",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Not sure what the right place to post this is, but posting here. It seems that the offset value under ASAN+i386 is converted to a 32-bit pointer that's passed into `FuzzedFileProvider::seek` and that is the reason for the crash. I modified the `autofile` harness to only call `(void)fseek(file, 12, SEEK_CUR);` and exit. Here `file` is one created from `fopencookie` and the fuzzed file provider. This was the result:\r\n```\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==12==ERROR: AddressSanitizer: SEGV on unknown address 0x0000000c (pc 0x583fa6d4 bp 0xff8722e8 sp 0xff872240 T0)\r\n==12==The signal is caused by a READ memory access.\r\n==12==Hint: address points to the zero page.\r\nSCARINESS: 10 (null-deref)\r\n    #0 0x583fa6d4 in FuzzedFileProvider::seek(void*, long long*, int) /src/bitcoin-core/src/test/fuzz/util.cpp:621:39\r\n    #1 0x56be7d99 in wrapped_seek(void*, unsigned long long*, int) /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6454:22\r\n    #2 0xf7cde492  (/lib32/libc.so.6+0x141492)\r\n    #3 0xf7c14999 in _IO_file_seekoff (/lib32/libc.so.6+0x77999)\r\n    #4 0xf7c10bc8 in fseek (/lib32/libc.so.6+0x73bc8)\r\n    #5 0x56cc20ac in autofile_fuzz_target(Span<unsigned char const>) /src/bitcoin-core/src/test/fuzz/autofile.cpp:25:11\r\n    #6 0x56c716f6 in __invoke<void (*&)(Span<const unsigned char>), Span<const unsigned char> > /usr/local/bin/../include/c++/v1/type_traits:3663:23\r\n    #7 0x56c716f6 in __call<void (*&)(Span<const unsigned char>), Span<const unsigned char> > /usr/local/bin/../include/c++/v1/__functional/invoke.h:61:9\r\n    #8 0x56c716f6 in operator() /usr/local/bin/../include/c++/v1/__functional/function.h:172:16\r\n    #9 0x56c716f6 in std::__1::__function::__func<void (*)(Span<unsigned char const>), std::__1::allocator<void (*)(Span<unsigned char const>)>, void (Span<unsigned char const>)>::operator()(Span<unsigned char const>&&) /usr/local/bin/../include/c++/v1/__functional/function.h:346:12\r\n    #10 0x583dca19 in operator() /usr/local/bin/../include/c++/v1/__functional/function.h:499:16\r\n    #11 0x583dca19 in operator() /usr/local/bin/../include/c++/v1/__functional/function.h:1176:12\r\n    #12 0x583dca19 in LLVMFuzzerTestOneInput /src/bitcoin-core/src/test/fuzz/fuzz.cpp:119:5\r\n    #13 0x56b3fc6d in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15\r\n    #14 0x56b40f66 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:804:3\r\n    #15 0x56b4140e in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:857:3\r\n    #16 0x56b30c6d in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6\r\n    #17 0x56b59a67 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\r\n    #18 0xf7bb7ee4 in __libc_start_main (/lib32/libc.so.6+0x1aee4)\r\n    #19 0x56b09114 in _start (/out/autofile+0x59b114)\r\n\r\nDEDUP_TOKEN: FuzzedFileProvider::seek(void*, long long*, int)--wrapped_seek(void*, unsigned long long*, int)--\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV /src/bitcoin-core/src/test/fuzz/util.cpp:621:39 in FuzzedFileProvider::seek(void*, long long*, int)\r\n==12==ABORTING\r\nMS: 0 ; base unit: 0000000000000000000000000000000000000000\r\n```\r\nSince 0xc = 12, this leads me to believe my above statement. This also makes me think this is the reason why the crashes I've observed without modifying `autofile` were in the high `0xffff....` range (small negative number converted to 32-bit pointer). This seems to either be:\r\n- a problem with ASAN's fopencookie wrapper which calls wrapped_seek\r\n- a problem with bitcoind's build for ASAN + i386",
      "created_at" : "2022-03-22T13:10:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24449#issuecomment-1075161245",
      "id" : 1075161245,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24449",
      "node_id" : "IC_kwDOABII585AFaid",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1075161245/reactions"
      },
      "updated_at" : "2022-03-22T13:10:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1075161245",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Interesting. I wonder where this happens, as the reproducer is 8KB, so it seems to only happen after some \"state\" is accumulated.",
      "created_at" : "2022-03-22T14:22:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24449#issuecomment-1075246553",
      "id" : 1075246553,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24449",
      "node_id" : "IC_kwDOABII585AFvXZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1075246553/reactions"
      },
      "updated_at" : "2022-03-22T14:22:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1075246553",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "In the stripped-down autofile test I created, it only happened with ASAN (non-ASAN builds correctly used a heap pointer to the value) and it occurred on the very first run since FuzzedFileProvider::seek was immediately called via fseek. When running the regular autofile harness with ASAN, it would happen on the first call to FuzzedFileProvider::seek, which could take hundreds of thousands of iterations. When I reproduced it, it would only happen in r+ mode after fclose which would flush the pending writes, call FuzzedFileProvider::seek, then crash. Granted, I did modify the regular autofile harness a little bit, so the crash I received may not be the only callpath to FuzzedFileProvider::seek.",
      "created_at" : "2022-03-22T17:00:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24449#issuecomment-1075395673",
      "id" : 1075395673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24449",
      "node_id" : "IC_kwDOABII585AGTxZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1075395673/reactions"
      },
      "updated_at" : "2022-03-22T17:50:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1075395673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I finally figured out a way to reproduce this locally on a fresh install of Ubuntu Focal. (Ubuntu Jammy doesn't work due to #24289)\r\n\r\n\r\n```\r\nexport V=12 && dpkg --add-architecture i386 && export DEBIAN_FRONTEND=noninteractive && apt update && apt install curl wget htop git vim ccache -y && git clone https://github.com/bitcoin/bitcoin.git ./bitcoin-core && cd bitcoin-core && apt install libc++abi-$V-dev:i386 libc++-$V-dev:i386 clang-$V:i386 llvm-$V:i386        make automake cmake curl libtool  bsdmainutils pkg-config patch bison        -y  && ( cd depends && make CC=\"clang-$V -m32 -O1 -fno-omit-frame-pointer -gline-tables-only -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link\" CXX=\"clang++-$V -m32 -g -O1 -fno-omit-frame-pointer -gline-tables-only -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++\" DEBUG=1 NO_QT=1 NO_WALLET=1 NO_ZMQ=1 NO_UPNP=1 NO_NATPMP=1 -j $(nproc) ) && ./autogen.sh && CONFIG_SITE=\"$PWD/depends/x86_64-pc-linux-gnu/share/config.site\" ./configure CC=\"clang-$V -m32 -O1 -fno-omit-frame-pointer -gline-tables-only\" CXX=\"clang++-$V -m32 -g -O1 -fno-omit-frame-pointer -gline-tables-only -stdlib=libc++\" --with-sanitizers=fuzzer,address --enable-fuzz --with-seccomp=no --enable-fuzz  && make -j $(nproc)\r\n\r\n\r\nwget --quiet https://oss-fuzz.com/download?testcase_id=6045002537500672\r\n\r\n\r\nFUZZ=autofile ./src/test/fuzz/fuzz ./download\\?testcase_id\\=6045002537500672\r\n```\r\n\r\n```\r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 29997060\r\nINFO: Loaded 1 modules   (191707 inline 8-bit counters): 191707 [0x58e7c440, 0x58eab11b), \r\nINFO: Loaded 1 PC tables (191707 PCs): 191707 [0x58eab11c,0x590217f4), \r\n./src/test/fuzz/fuzz: Running 1 inputs 1 time(s) each.\r\nRunning: ./download?testcase_id=6045002537500672\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==20952==ERROR: AddressSanitizer: SEGV on unknown address 0xffffe583 (pc 0x582f6a6b bp 0xfff4ee28 sp 0xfff4ee00 T0)\r\n==20952==The signal is caused by a READ memory access.\r\n    #0 0x582f6a6b in FuzzedFileProvider::seek(void*, long long*, int) src/test/fuzz/util.cpp:584:13\r\n    #1 0x56e090b9 in wrapped_seek(void*, unsigned long long*, int) (/bitcoin-core/src/test/fuzz/fuzz+0x7c80b9)\r\n    #2 0xf7c76d22  (/lib/i386-linux-gnu/libc.so.6+0x143d22)\r\n    #3 0xf7baaa90  (/lib/i386-linux-gnu/libc.so.6+0x77a90)\r\n    #4 0xf7bacade in _IO_do_write (/lib/i386-linux-gnu/libc.so.6+0x79ade)\r\n    #5 0xf7bacf4a in _IO_file_overflow (/lib/i386-linux-gnu/libc.so.6+0x79f4a)\r\n    #6 0xf7bada19 in _IO_switch_to_get_mode (/lib/i386-linux-gnu/libc.so.6+0x7aa19)\r\n    #7 0xf7badc64 in __underflow (/lib/i386-linux-gnu/libc.so.6+0x7ac64)\r\n    #8 0xf7bae248 in _IO_default_xsgetn (/lib/i386-linux-gnu/libc.so.6+0x7b248)\r\n    #9 0xf7b9f546 in fread (/lib/i386-linux-gnu/libc.so.6+0x6c546)\r\n    #10 0x56dd06be in fread (/bitcoin-core/src/test/fuzz/fuzz+0x78f6be)\r\n    #11 0x56ef5356 in CAutoFile::read(Span<std::byte>) src/./streams.h:532:13\r\n    #12 0x56ef9824 in unsigned int ser_readdata32<CAutoFile>(CAutoFile&) src/./serialize.h:103:7\r\n    #13 0x56ef963f in void Unserialize<CAutoFile>(CAutoFile&, int&) src/./serialize.h:214:81\r\n    #14 0x56ef9453 in CAutoFile& CAutoFile::operator>><int&>(int&) src/./streams.h:575:9\r\n    #15 0x56ef7512 in void ReadFromStream<CAutoFile>(FuzzedDataProvider&, CAutoFile&)::'lambda4'()::operator()() const src/./test/fuzz/util.h:422:17\r\n    #16 0x56ef6b70 in unsigned int CallOneOf<void ReadFromStream<CAutoFile>(FuzzedDataProvider&, CAutoFile&)::'lambda'(), void ReadFromStream<CAutoFile>(FuzzedDataProvider&, CAutoFile&)::'lambda0'(), void ReadFromStream<CAutoFile>(FuzzedDataProvider&, CAutoFile&)::'lambda1'(), void ReadFromStream<CAutoFile>(FuzzedDataProvider&, CAutoFile&)::'lambda2'(), void ReadFromStream<CAutoFile>(FuzzedDataProvider&, CAutoFile&)::'lambda3'(), void ReadFromStream<CAutoFile>(FuzzedDataProvider&, CAutoFile&)::'lambda4'(), void ReadFromStream<CAutoFile>(FuzzedDataProvider&, CAutoFile&)::'lambda5'(), void ReadFromStream<CAutoFile>(FuzzedDataProvider&, CAutoFile&)::'lambda6'(), void ReadFromStream<CAutoFile>(FuzzedDataProvider&, CAutoFile&)::'lambda7'(), void ReadFromStream<CAutoFile>(FuzzedDataProvider&, CAutoFile&)::'lambda8'(), void ReadFromStream<CAutoFile>(FuzzedDataProvider&, CAutoFile&)::'lambda9'()>(FuzzedDataProvider&, CAutoFile...) src/./test/fuzz/util.h:89:27\r\n    #17 0x56ef6580 in void ReadFromStream<CAutoFile>(FuzzedDataProvider&, CAutoFile&) src/./test/fuzz/util.h:415:13\r\n    #18 0x56ef50f5 in autofile_fuzz_target(Span<unsigned char const>)::$_4::operator()() const src/test/fuzz/autofile.cpp:49:17\r\n    #19 0x56ef4167 in unsigned int CallOneOf<autofile_fuzz_target(Span<unsigned char const>)::$_0, autofile_fuzz_target(Span<unsigned char const>)::$_1, autofile_fuzz_target(Span<unsigned char const>)::$_2, autofile_fuzz_target(Span<unsigned char const>)::$_3, autofile_fuzz_target(Span<unsigned char const>)::$_4, autofile_fuzz_target(Span<unsigned char const>)::$_5>(FuzzedDataProvider&, autofile_fuzz_target(Span<unsigned char const>)::$_0, autofile_fuzz_target(Span<unsigned char const>)::$_1, autofile_fuzz_target(Span<unsigned char const>)::$_2, autofile_fuzz_target(Span<unsigned char const>)::$_3, autofile_fuzz_target(Span<unsigned char const>)::$_4, autofile_fuzz_target(Span<unsigned char const>)::$_5) src/./test/fuzz/util.h:89:27\r\n    #20 0x56ef3999 in autofile_fuzz_target(Span<unsigned char const>) src/test/fuzz/autofile.cpp:23:9\r\n    #21 0x56e72e5e in decltype(std::__1::forward<void (*&)(Span<unsigned char const>)>(fp)(std::__1::forward<Span<unsigned char const> >(fp0))) std::__1::__invoke<void (*&)(Span<unsigned char const>), Span<unsigned char const> >(void (*&)(Span<unsigned char const>), Span<unsigned char const>&&) /usr/lib/llvm-12/bin/../include/c++/v1/type_traits:3694:1\r\n    #22 0x56e72c3a in void std::__1::__invoke_void_return_wrapper<void, true>::__call<void (*&)(Span<unsigned char const>), Span<unsigned char const> >(void (*&)(Span<unsigned char const>), Span<unsigned char const>&&) /usr/lib/llvm-12/bin/../include/c++/v1/__functional_base:348:9\r\n    #23 0x56e72b7a in std::__1::__function::__alloc_func<void (*)(Span<unsigned char const>), std::__1::allocator<void (*)(Span<unsigned char const>)>, void (Span<unsigned char const>)>::operator()(Span<unsigned char const>&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1558:16\r\n    #24 0x56e6f343 in std::__1::__function::__func<void (*)(Span<unsigned char const>), std::__1::allocator<void (*)(Span<unsigned char const>)>, void (Span<unsigned char const>)>::operator()(Span<unsigned char const>&&) /usr/lib/llvm-12/bin/../include/c++/v1/functional:1732:12\r\n    #25 0x582ecd7b in std::__1::__function::__value_func<void (Span<unsigned char const>)>::operator()(Span<unsigned char const>&&) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:1885:16\r\n    #26 0x582dfe6d in std::__1::function<void (Span<unsigned char const>)>::operator()(Span<unsigned char const>) const /usr/lib/llvm-12/bin/../include/c++/v1/functional:2560:12\r\n    #27 0x582dfb96 in LLVMFuzzerTestOneInput src/test/fuzz/fuzz.cpp:154:5\r\n    #28 0x56d69f46 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) (/bitcoin-core/src/test/fuzz/fuzz+0x728f46)\r\n    #29 0x56d5692e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) (/bitcoin-core/src/test/fuzz/fuzz+0x71592e)\r\n    #30 0x56d5bf74 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) (/bitcoin-core/src/test/fuzz/fuzz+0x71af74)\r\n    #31 0x56d810c7 in main (/bitcoin-core/src/test/fuzz/fuzz+0x7400c7)\r\n    #32 0xf7b4dee4 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x1aee4)\r\n    #33 0x56d33204 in _start (/bitcoin-core/src/test/fuzz/fuzz+0x6f2204)\r\n\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV src/test/fuzz/util.cpp:584:13 in FuzzedFileProvider::seek(void*, long long*, int)\r\n==20952==ABORTING\r\n",
      "created_at" : "2022-03-23T15:02:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24449#issuecomment-1076472059",
      "id" : 1076472059,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24449",
      "node_id" : "IC_kwDOABII585AKaj7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1076472059/reactions"
      },
      "updated_at" : "2022-03-23T15:02:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1076472059",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think this happens when reading a few bytes from an empty file, then writing to it, then closing it?",
      "created_at" : "2022-03-23T16:05:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24449#issuecomment-1076515883",
      "id" : 1076515883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24449",
      "node_id" : "IC_kwDOABII585AKlQr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1076515883/reactions"
      },
      "updated_at" : "2022-03-23T16:05:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1076515883",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Oh, actually the fuzz target doesn't have the concept of empty file when it is opened? I'll try to transform the fuzz input into a unit test ...",
      "created_at" : "2022-03-24T19:46:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24449#issuecomment-1078056461",
      "id" : 1078056461,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24449",
      "node_id" : "IC_kwDOABII585AQdYN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1078056461/reactions"
      },
      "updated_at" : "2022-03-24T19:46:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1078056461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think this happens when reading a few bytes from an empty file, then writing to it, then closing it?\r\n\r\nIn the stacktrace you posted above, I only see an fread and then an fwrite (I couldn't really understand the libc source code here, but I think it switches to write mode in certain conditions) rather than an fclose triggering it, so I think there are multiple ways to hit the seek call. I'm going to try making a simple test case outside of bitcoind that just uses fopencookie and asan on i386 to see what happens.",
      "created_at" : "2022-03-24T20:06:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24449#issuecomment-1078116513",
      "id" : 1078116513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24449",
      "node_id" : "IC_kwDOABII585AQsCh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1078116513/reactions"
      },
      "updated_at" : "2022-03-24T20:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1078116513",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I believe this is an ASAN issue with fopencookie. I get the following stacktrace when running ASAN on a minimal test case:\r\n```\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==1323==ERROR: AddressSanitizer: SEGV on unknown address 0x0000271f (pc 0x08110fa6 bp 0xffb33f88 sp 0xffb33f50 T0)\r\n==1323==The signal is caused by a READ memory access.\r\n    #0 0x8110fa6 in cookie::cookie_seek(void*, long long*, int) /build/main.cpp:52:22\r\n    #1 0x80b03d9 in wrapped_seek(void*, unsigned long long*, int) (/build/main+0x80b03d9)\r\n    #2 0xf7c1ed22  (/lib/i386-linux-gnu/libc.so.6+0x143d22)\r\n    #3 0xf7b534b9 in _IO_file_seekoff (/lib/i386-linux-gnu/libc.so.6+0x784b9)\r\n    #4 0xf7b4f6c8 in fseek (/lib/i386-linux-gnu/libc.so.6+0x746c8)\r\n    #5 0x811113e in main /build/main.cpp:65:15\r\n    #6 0xf7af5ee4 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x1aee4)\r\n    #7 0x8060355 in _start (/build/main+0x8060355)\r\n\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV /build/main.cpp:52:22 in cookie::cookie_seek(void*, long long*, int)\r\n==1323==ABORTING\r\n```\r\nCode is here: https://github.com/Crypt-iQ/fopencookie\r\nI ran it with: `docker run -it $(docker build -q .)` and removing `-fsanitize=address` makes it pass. The pointer address is the number I used in fseek.",
      "created_at" : "2022-03-25T01:08:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24449#issuecomment-1078556096",
      "id" : 1078556096,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24449",
      "node_id" : "IC_kwDOABII585ASXXA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1078556096/reactions"
      },
      "updated_at" : "2022-03-25T01:08:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1078556096",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   }
]
