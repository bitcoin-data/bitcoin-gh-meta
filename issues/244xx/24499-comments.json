[
   {
      "author_association" : "MEMBER",
      "body" : "I don't think we can run mutation tests in CI. If they are not deterministic or reproducible, they are of no use (in fact negative use). Moreover they require re-running the whole task, which is CPU intense and thus impossible to do in our current CI setup.\r\n\r\nDoing this in a separate repository would probably give more flexibility and allow to move faster.",
      "created_at" : "2022-03-08T09:15:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1061564867",
      "id" : 1061564867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_RjHD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061564867/reactions"
      },
      "updated_at" : "2022-03-08T09:15:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061564867",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I don't think we can run mutation tests in CI. If they are not deterministic or reproducible, they are of no use (in fact negative use). Moreover they require re-running the whole task, which is CPU intense and thus impossible to do in our current CI setup.\r\n> \r\n> Doing this in a separate repository would probably give more flexibility and allow to move faster.\r\n\r\nYeah, you're right! Just edited the PR description.",
      "created_at" : "2022-03-08T11:33:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1061684060",
      "id" : 1061684060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_SANc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061684060/reactions"
      },
      "updated_at" : "2022-03-08T11:33:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061684060",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on doing mutation testing though, and thanks for working on it, it's been suggested quite a few times over the life of this project.",
      "created_at" : "2022-03-08T11:54:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1061699271",
      "id" : 1061699271,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_SD7H",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061699271/reactions"
      },
      "updated_at" : "2022-03-08T11:54:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061699271",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes, Concept ACK on mutation testing.\r\n\r\nLast time I was looking into this I used dextool mutate ( https://github.com/joakim-brannstrom/dextool ), which covers C mutations, but no C++ STL ones.\r\n\r\nThere was also https://github.com/bitcoin/bitcoin/issues/22690 by @agroce .\r\n\r\nNot sure what the shiniest mutation engine is these days, but if we are looking for one, I think we should pick one that makes it easy to categorize the surviving mutants. Some parts of our code are just impossible to reach (belt-and-suspender code, `src/util/check.h`-failures, ...) and it would be good to have a mutation engine that can deal with this. It seems unlikely that we'll do major refactors to our consensus code to kill mutants, so a mutation engine that can take the fingerprint of mutants and put them in a \"harmless\"-bucket seems ideal. This would be beneficial because a large part of mutation testing Bitcoin Core is categorizing mutants into harmless/harmful and doing it at most once per mutation allows more time to be spent on \"fixing\" the harmful ones.\r\n",
      "created_at" : "2022-03-10T13:08:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1064038898",
      "id" : 1064038898,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_a_Hy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064038898/reactions"
      },
      "updated_at" : "2022-03-10T13:08:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064038898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "UniversalMutator (https://github.com/agroce/universalmutator/tree/master/universalmutator) doesn't have any special rules for C++ STL code, but they should be easy to add if you have anything in mind.  If you have an idea of what would be useful to do to STL code, I imagine I could add it to UM myself.\r\n\r\nUM supports annotating a _line_ as DO_NOT_MUTATE permanently, and adding that for file or block of code would be easy (you can actually do it for a block/file now with an annotation marking as \"test code\" but it'd be nice to not have to claim the un-killable parts are test code).\r\n\r\nDownside is UM is fairly slow at generation, and doesn't inherently do any tricks to speed evaluation of mutants.  But I'm not sure a currently working C/C++ tool exists that supports that kind of thing.",
      "created_at" : "2022-03-10T13:31:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1064068051",
      "id" : 1064068051,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_bGPT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064068051/reactions"
      },
      "updated_at" : "2022-03-10T13:31:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064068051",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "With C++ STL stuff I mean mostly what is added in this pull (`std::min`<->`std::max`).\r\n\r\nThe issue with putting `// DO_NOT_MUTATE` into the source code in every line is that it makes the code more verbose and hard to follow, especially for consensus code.",
      "created_at" : "2022-03-10T13:36:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1064072217",
      "id" : 1064072217,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_bHQZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064072217/reactions"
      },
      "updated_at" : "2022-03-10T13:36:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064072217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Right.  How about block or file level annotations?  Would they be a pain?  I assume most things you want to not mutate are entire sections or is it mostly individual lines?\r\n\r\nAn external, non-source notation for that has to be robust to still apply as the code changes, so I haven't tackled it yet, but something might not be too hard to work up.",
      "created_at" : "2022-03-10T14:21:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1064114929",
      "id" : 1064114929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_bRrx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064114929/reactions"
      },
      "updated_at" : "2022-03-10T14:21:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064114929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I wonder if we could simply use the mutation-diff-hunks themselves as fingerprint? This would also make it easier to adjust them during a refactor/rename",
      "created_at" : "2022-03-10T14:27:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1064120973",
      "id" : 1064120973,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_bTKN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064120973/reactions"
      },
      "updated_at" : "2022-03-10T14:27:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064120973",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "That's a pretty good idea, using the diffs.  I was thinking it is sensitive to minor changes in the code, but as a method in addition to marking lines/chunks, it makes a lot of sense.  And if the code substantially changes, you might want to revisit if it's ignorable after all...\r\n\r\nThis kind of question is the engineering side of an NSF grant (https://www.nsf.gov/awardsearch/showAward?AWD_ID=2129446&HistoricalAwards=false) I'm working on with folks at Carnegie Mellon (@kjain and @clegoues, plus my student at NAU, @goutamkalburgi) so we have significant interest in getting this kind of question right for projects.",
      "created_at" : "2022-03-10T16:50:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1064278746",
      "id" : 1064278746,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_b5ra",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064278746/reactions"
      },
      "updated_at" : "2022-03-10T16:50:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064278746",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "As to the STL, I actually now think that `min` <-> `max` and `begin` <-> `end` mutants are pretty useful and probably should just be at the any-language level, and so even potentially apply to non-library code.  They're semantic concepts, not just STL-specific.  Are there others you have in mind?",
      "created_at" : "2022-03-10T16:51:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1064280237",
      "id" : 1064280237,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_b6Ct",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064280237/reactions"
      },
      "updated_at" : "2022-03-10T16:51:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064280237",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok, min/max and begin/end mutants are in GitHub, will release to pip when I get a chance\r\n\r\nhttps://github.com/agroce/universalmutator/commit/d0548384500bddfbe127d2d1a6bb4257ce731907",
      "created_at" : "2022-03-10T17:09:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1064297546",
      "id" : 1064297546,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_b-RK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064297546/reactions"
      },
      "updated_at" : "2022-03-10T17:09:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064297546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'll take a look at `universalmutator`. I've been testing [mutate_cpp](https://github.com/nlohmann/mutate_cpp) which is good but it is a complete app (with db, front-end, and so on.. not cool to use in here but as an external tool). This script I added here is simple and it's more like a `tool` for devs than a complete test suite at this moment.",
      "created_at" : "2022-03-10T18:29:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1064367240",
      "id" : 1064367240,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_cPSI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064367240/reactions"
      },
      "updated_at" : "2022-03-10T18:29:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064367240",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@brunoerg Universal Mutator is definitely meant to be scriptable; it's pretty much meant for running inside \"experiments\" / CI / or other automation.",
      "created_at" : "2022-03-10T18:31:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1064368782",
      "id" : 1064368782,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_cPqO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064368782/reactions"
      },
      "updated_at" : "2022-03-10T18:31:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064368782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @brunoerg Universal Mutator is definitely meant to be scriptable; it's pretty much meant for running inside \"experiments\" / CI / or other automation.\r\n\r\nCool, I am taking a look at it. Thanks!",
      "created_at" : "2022-03-10T18:35:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1064371314",
      "id" : 1064371314,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII584_cQRy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064371314/reactions"
      },
      "updated_at" : "2022-03-10T18:35:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1064371314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hello, @agroce \r\n\r\nI've been testing `universalmutator` for a time and I thought it very cool, especially because it is scriptable. I created a [Python script](https://github.com/brunoerg/bitcoin/blob/2022-04-universal-mutation/test/mutation/mutation.py) similar to what I found on your `tests` folder and it worked very well with Bitcoin Core. I am using the functional tests to analyze the mutations. Compared to other libs I tested with the same proposal, `universalmutation` is one of my favorites (one of the reasons is the `analyze_mutation`). \r\n\r\nHowever, since it is a tool for many languages, not 100% focused on C++, it makes some mistakes when mutating c++ files I guess. \r\n\r\nExamples:\r\n\r\n1. It mutate comments:\r\n\r\nBefore\r\n```cpp\r\n* The search continues to search for better solutions after one solution has been found. The best\r\n * solution is chosen by minimizing the waste metric. The waste metric is defined as the cost to\r\n * spend the current inputs at the given fee rate minus the long term expected cost to spend the\r\n * inputs, plus the amount by which the selection exceeds the spending target:\r\n *\r\n * waste = selectionTotal - target + inputs Ã (currentFeeRate - longTermFeeRate)\r\n *\r\n```\r\n\r\nAfter\r\n```cpp\r\n* The search continues to search for better solutions after one solution has been found. The best\r\n * solution is chosen by minimizing the waste metric. The waste metric is defined as the cost to\r\n * spend the current inputs at the given fee rate minus the long term expected cost to spend the\r\n * inputs, plus the amount by which the selection exceeds the spending target:\r\n /\r\n * waste = selectionTotal - target + inputs Ã (currentFeeRate - longTermFeeRate)\r\n *\r\n```\r\nor\r\n```\r\n* The search continues to search for better solutions after one solution has been found. The best\r\n * solution is chosen by minimizing the waste metric. The waste metric is defined as the cost to\r\n continue; spend the current inputs at the given fee rate minus the long term expected cost to spend the\r\n * inputs, plus the amount by which the selection exceeds the spending target:\r\n continue;\r\n * waste = selectionTotal - target + inputs Ã (currentFeeRate - longTermFeeRate)\r\n *\r\n```\r\n\r\nI think it is considering the `*` as an operator even though it's inside a comment block.\r\n\r\n\r\n2. It mutates imports\r\n\r\nExample:\r\n\r\nBefore\r\n```cpp\r\n#include <consensus/amount.h>\r\n#include <policy/feerate.h>\r\n#include <util/check.h>\r\n#include <util/system.h>\r\n#include <util/moneystr.h>\r\n```\r\n\r\nAfter\r\n```cpp\r\n#include <consensus/amount.h/\r\n#include <policy/feerate.h>\r\n#include <util/check.h>\r\n#include <util/system.h>\r\n#include <util/moneystr.h>\r\n```\r\nor\r\n```\r\n#include <consensus/amount.h>\r\n#include <policy/feerate.h>\r\n#include <util/check.h<\r\n#include <util/system.h>\r\n#include <util/moneystr.h>\r\n```\r\n\r\nI think it's unnecessary to mutate the `includes`. It is probably considering the `<` and `>` as operators even being in an `include`. Anyway, `universalmutator` is very good but needs some improves related to c++. I will create an issue in your repository pointing out some improvements in addition to those mentioned here.\r\n\r\nThanks.",
      "created_at" : "2022-04-13T00:12:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1097414340",
      "id" : 1097414340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII585BaTbE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1097414340/reactions"
      },
      "updated_at" : "2022-04-13T00:12:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1097414340",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This is great.  C++ rules could definitely use some improving!  Iâm surprised the âgarbage checkâ rule didnât avoid the comment changes, Iâll have to investigate.  Unless you are turning that off for some reason?",
      "created_at" : "2022-04-13T02:31:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1097488577",
      "id" : 1097488577,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII585BaljB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1097488577/reactions"
      },
      "updated_at" : "2022-04-13T02:31:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1097488577",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Unless you are turning that off for some reason?\r\n\r\nI don't think I did it, but how can I check if I did it btw? \r\n\r\n",
      "created_at" : "2022-04-16T19:27:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1100738396",
      "id" : 1100738396,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII585Bm-9c",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100738396/reactions"
      },
      "updated_at" : "2022-04-16T19:27:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100738396",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it is just what we noted in the issue: not using a check command to compile",
      "created_at" : "2022-04-16T22:33:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1100764756",
      "id" : 1100764756,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII585BnFZU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100764756/reactions"
      },
      "updated_at" : "2022-04-16T22:33:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100764756",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed changing the approach! \r\n\r\nI moved it from `devtools` to `test`, added more operators (now it mutates some Core stuff like `CAmount`) and now it creates one file per mutator and save it on `test/mutation/mutators` (so we can use `analyze_mutators` from @agroce`s project to test them).\r\n\r\nBtw, I changed the description to fit on this new approach! \r\n\r\nThanks!  \r\n\r\ncc: @laanwj @MarcoFalke ",
      "created_at" : "2022-05-09T14:21:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1121168734",
      "id" : 1121168734,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII585C061e",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121168734/reactions"
      },
      "updated_at" : "2022-05-09T14:22:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121168734",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@brunoerg I don't know if it's useful, but it's easy to put those operators in a single custom file and call the tool to just run with those rules, on the set of files you have -- don't know if you want/need that, but it's supported functionality, you don't have to use the default rules applied to a file",
      "created_at" : "2022-05-09T15:35:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1121259699",
      "id" : 1121259699,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII585C1RCz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121259699/reactions"
      },
      "updated_at" : "2022-05-09T15:35:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121259699",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/967816?v=4",
         "events_url" : "https://api.github.com/users/agroce/events{/privacy}",
         "followers_url" : "https://api.github.com/users/agroce/followers",
         "following_url" : "https://api.github.com/users/agroce/following{/other_user}",
         "gists_url" : "https://api.github.com/users/agroce/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/agroce",
         "id" : 967816,
         "login" : "agroce",
         "node_id" : "MDQ6VXNlcjk2NzgxNg==",
         "organizations_url" : "https://api.github.com/users/agroce/orgs",
         "received_events_url" : "https://api.github.com/users/agroce/received_events",
         "repos_url" : "https://api.github.com/users/agroce/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/agroce/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/agroce/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/agroce"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I don't know if it's useful, but it's easy to put those operators in a single custom file and call the tool to just run with those rules, on the set of files you have -- don't know if you want/need that, but it's supported functionality, you don't have to use the default rules applied to a file\r\n\r\nYeah, I noticed it, but I think it doesn't cover 100% of the approach I am using here.",
      "created_at" : "2022-05-26T14:02:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1138612665",
      "id" : 1138612665,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII585D3dm5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138612665/reactions"
      },
      "updated_at" : "2022-05-26T14:02:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138612665",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [laanwj](https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1061699271), [MarcoFalke](https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1064038898) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2022-09-23T12:51:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1256171331",
      "id" : 1256171331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII585K36dD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1256171331/reactions"
      },
      "updated_at" : "2022-12-01T15:03:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1256171331",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've been experimenting with mutation testing on my side as well. I built a tool to generate mutations and run the CI with different workers along with a web interface to sort mutations.\r\nI would appreciate any feedback on how to make it better.\r\nThe code (bit ugly for now) is here https://github.com/aureleoules/bticoin-core-mutuaitons and the UI can be found here https://bcm-ui.aureleoules.com/.",
      "created_at" : "2022-12-01T15:03:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1333900702",
      "id" : 1333900702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII585PgbWe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1333900702/reactions"
      },
      "updated_at" : "2022-12-01T15:03:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1333900702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think an external repository (as demonstrated above) is going to be a better place for scripting like this. Not only does that allow more frequent updates and new tests to be added, but the same repository can be used to store past/current interesting mutations found etc.\r\n\r\nThis is an approach already taken by other contributors with external tooling / fuzzers / etc.",
      "created_at" : "2022-12-06T15:38:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1339566882",
      "id" : 1339566882,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII585P2Csi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339566882/reactions"
      },
      "updated_at" : "2022-12-06T15:38:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339566882",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think an external repository (as demonstrated above) is going to be a better place for scripting like this. Not only does that allow more frequent updates and new tests to be added, but the same repository can be used to store past/current interesting mutations found etc.\r\n\r\n> This is an approach already taken by other contributors with external tooling / fuzzers / etc.\r\n\r\nI agree! I'm working with @aureleoules on it in an external repo, going close this PR!\r\n",
      "created_at" : "2022-12-06T15:40:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24499#issuecomment-1339570344",
      "id" : 1339570344,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24499",
      "node_id" : "IC_kwDOABII585P2Dio",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 2,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339570344/reactions"
      },
      "updated_at" : "2022-12-06T15:40:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1339570344",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   }
]
