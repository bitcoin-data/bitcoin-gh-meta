{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "According to [BIP37](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki#Extensions_to_existing_messages), `getdata` commands with a request for filtered blocks via type `MSG_FILTERED_BLOCK` in the `inv` submessage are only responded to if a filter is set:\r\n\r\n> The getdata command is extended to allow a new type in the inv submessage. The type field can now be MSG_FILTERED_BLOCK (== 3) rather than MSG_BLOCK. **If no filter has been set on the connection, a request for filtered blocks is ignored.** If a filter has been set, a merkleblock message is returned for the requested block hash.\r\n\r\n**Expected behavior**\r\n\r\nWhen no BIP37 filter is set and a we request a filtered block, there should be no response from the node.\r\n\r\n**Actual behavior**\r\n\r\nWhen no BIP37 filter is set and a we request a filtered block, we get a `merkleblock` message in reply.\r\n\r\n**To reproduce**\r\n\r\nThe behaviour can reproduced by adding the following lines to the functional test `p2p_filter.py` (introduced recently with PR https://github.com/bitcoin/bitcoin/pull/18334, commit https://github.com/bitcoin/bitcoin/pull/18334/commits/fa156999695ddaeb016d8320bee62f8d96679d55), that has already a callback implemented which requests filtered blocks as reply to `inv` messages:\r\n```\r\n    # add this lines after filtered P2P connection is added to the node, but before filter is set\r\n    filter_node.merkleblock_received = False\r\n    self.nodes[0].generatetoaddress(1, self.node[0].getnewaddress())[0]\r\n    filter_node.sync_with_ping()\r\n    assert not filter_node.merkleblock_received\r\n```\r\nThe assertion fails, meaning that a merkleblock was indeed received.\r\n\r\n**Possible solution**\r\nLooking at the code in `net_processing.cpp`/`net.h`, it is quite obvious why this happens: the condition to answer to a filtered block request is just whether the (unique) pointer `pfrom->m_tx_relay->pfilter` is set, and this condition is always true. Initially the pointer is set in the constructor of the `struct TxRelay`, pointing to a default-constructed instance of `CBloomFilter`:\r\nhttps://github.com/bitcoin/bitcoin/blob/d52ba21dfff99173abb927bc964ce7ceb711d789/src/net.h#L812\r\nAnd after receiving a `filterclear` message it is also reset to an empty instance again:\r\nhttps://github.com/bitcoin/bitcoin/blob/d52ba21dfff99173abb927bc964ce7ceb711d789/src/net_processing.cpp#L3201\r\nIn the following code, the boolean variable `sendMerkleBlock` will thus _always_ be set to true:\r\nhttps://github.com/bitcoin/bitcoin/blob/d52ba21dfff99173abb927bc964ce7ceb711d789/src/net_processing.cpp#L1500-L1508\r\n\r\nA simple solution would be to just set `pfilter` to `nullptr` initially and after receiving a `filterclear` message. The question is if its worth the change, as the described behaviour is IMHO not harmful at all (it just doesn't fit the description in the BIP37 document, which could be adapted?) and connection bloom filters are deprecated anway and [not recommended to be used due to privacy concerns](https://en.bitcoin.it/wiki/BIP37_privacy_problems). It is noteworthy though that possibly other parts in `net_processing.cpp` assume the test on `pfilter` means \"a bloom filter has been set\", and the fact that this always evaluates to `true` could possibly lead to some unintended behaviour. For example, in the following code part, where a `NodeEvictionCandidate` is created, its member `fBloomFilter` will always be set to true:\r\nhttps://github.com/bitcoin/bitcoin/blob/d52ba21dfff99173abb927bc964ce7ceb711d789/src/net.cpp#L864-L875",
   "closed_at" : "2020-04-20T11:02:16Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 16,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483/comments",
   "created_at" : "2020-03-31T15:03:42Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483",
   "id" : 591184186,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "description" : null,
         "id" : 64585,
         "name" : "Bug",
         "node_id" : "MDU6TGFiZWw2NDU4NQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      },
      {
         "color" : "006b75",
         "default" : false,
         "description" : null,
         "id" : 98298007,
         "name" : "P2P",
         "node_id" : "MDU6TGFiZWw5ODI5ODAwNw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483/labels{/name}",
   "locked" : false,
   "milestone" : {
      "closed_at" : null,
      "closed_issues" : 10,
      "created_at" : "2019-12-09T08:39:58Z",
      "creator" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      },
      "description" : "",
      "due_on" : null,
      "html_url" : "https://github.com/bitcoin/bitcoin/milestone/45",
      "id" : 4914019,
      "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
      "node_id" : "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
      "number" : 45,
      "open_issues" : 19,
      "state" : "open",
      "title" : "0.21.0",
      "updated_at" : "2020-04-20T11:02:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/45"
   },
   "node_id" : "MDU6SXNzdWU1OTExODQxODY=",
   "number" : 18483,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "BIP37: 'getdata' request for filtered blocks is answered with 'merkleblock's even if no filter is set",
   "updated_at" : "2020-04-20T11:02:17Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
      "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
      "followers_url" : "https://api.github.com/users/theStack/followers",
      "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/theStack",
      "id" : 91535,
      "login" : "theStack",
      "node_id" : "MDQ6VXNlcjkxNTM1",
      "organizations_url" : "https://api.github.com/users/theStack/orgs",
      "received_events_url" : "https://api.github.com/users/theStack/received_events",
      "repos_url" : "https://api.github.com/users/theStack/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/theStack"
   }
}
