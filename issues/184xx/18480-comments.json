[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Could you link the precedent in the original PR that you are referring to?",
      "created_at" : "2020-04-02T14:26:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18480#issuecomment-607879471",
      "id" : 607879471,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18480",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNzg3OTQ3MQ==",
      "updated_at" : "2020-04-02T14:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607879471",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The original `testmempoolaccept`Â PR is https://github.com/bitcoin/bitcoin/pull/11742, and by precedent I meant that it was a lot of previous attempt to do this (see https://github.com/bitcoin/bitcoin/pull/11742#issuecomment-352776951 and the response) and apparently the scope of what it should \"verify\" / test. Maybe \"precedent\" was not the right term?",
      "created_at" : "2020-04-02T15:22:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18480#issuecomment-607912730",
      "id" : 607912730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18480",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNzkxMjczMA==",
      "updated_at" : "2020-04-02T15:22:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607912730",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hm, I guess that comment is mainly referring to these previous attempts: #11201 and #7552 but I don't see any explicit argument against implementing this feature (just skimmed the conversation though). The error message in #11742 states \"Array must contain exactly one raw transaction for now\", if there had been a consensus that there should not be an array of multiple txs, then this RPC would not have been implemented with an array and this error message would be different. So I don't see a reason why you should not work on it. The only open question that came to me: Is it intuitive that the transactions in the array depend on each other to be accepted to the mempool? It could also just be for convenience to test multiple txs that don't depend on each other. So maybe think about how both use cases could be made possible. Maybe by default, the txs don't depend on each other but if you give an additional parameter `-chain` or so, then they do.",
      "created_at" : "2020-04-22T17:21:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18480#issuecomment-617917006",
      "id" : 617917006,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18480",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNzkxNzAwNg==",
      "updated_at" : "2020-04-22T17:21:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/617917006",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The fact that `MemPoolAccept::AcceptSingleTransaction` exists and that the RPC accepts an array seems to suggest this is planned but I don't know much about who's working on/thinking about what. Is there ongoing work that would enable this as a side effect?\r\n\r\nI think this would be very nice to have. Doing this for non-chained transactions would probably have little value (just make separate calls), but I definitely see why we'd want to test accept chained transactions.\r\n\r\nI'm not 100% sure what needs to be done to implement this. My intuition is that this requires making a temporary copy of chainstate/mempool on which we apply each transaction so that we can use it for the ones that come after it. Also, won't ordering matter? If a child comes before a parent in the array, should we make a temporary orphan pool too? Seems nontrivial ð¤ ",
      "created_at" : "2020-08-19T16:22:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18480#issuecomment-676526069",
      "id" : 676526069,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18480",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NjUyNjA2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-19T16:22:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/676526069",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/gzhao408/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gzhao408/followers",
         "following_url" : "https://api.github.com/users/gzhao408/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gzhao408/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gzhao408",
         "id" : 25183001,
         "login" : "gzhao408",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/gzhao408/orgs",
         "received_events_url" : "https://api.github.com/users/gzhao408/received_events",
         "repos_url" : "https://api.github.com/users/gzhao408/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gzhao408/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gzhao408/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gzhao408"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Leaning to concept nack, there are too many cases where mempool validity is not the thing you want to check (e.g., suppose an input has a 1 block relative sequence, such arrays will always fail).\r\n\r\nConcept ACK on generally having an AnalyzePackage RPC to help a user figure out if all txns can go in within some time bound?",
      "created_at" : "2020-08-19T19:36:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18480#issuecomment-676620321",
      "id" : 676620321,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18480",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NjYyMDMyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-19T19:36:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/676620321",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   }
]
