[
   {
      "author_association" : "MEMBER",
      "body" : "See also: https://bugs.gentoo.org/715268",
      "created_at" : "2020-03-29T15:19:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18465#issuecomment-605652930",
      "id" : 605652930,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNTY1MjkzMA==",
      "updated_at" : "2020-03-29T15:19:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605652930",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It could be moved to bitcoin_server (`src/rpc/url` or so)?",
      "created_at" : "2020-03-29T15:33:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18465#issuecomment-605655111",
      "id" : 605655111,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNTY1NTExMQ==",
      "updated_at" : "2020-03-29T15:33:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605655111",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I suspect that will make problems for `bitcoin-wallet` tool",
      "created_at" : "2020-03-30T00:24:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18465#issuecomment-605725824",
      "id" : 605725824,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNTcyNTgyNA==",
      "updated_at" : "2020-03-30T00:24:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605725824",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I can reproduce this on ubuntu with:\r\n\r\n```bash\r\nsudo apt remove libevent-dev\r\n./configure --disable-util-cli --disable-util-wallet --with-daemon=no --with-gui=no --disable-tests --disable-bench\r\nmake\r\n```\r\n\r\nExpected behavior: successful build of `bitcoin-tx`\r\n\r\nActual behavior: compile error\r\n\r\n```\r\n  CXX      util/libbitcoin_util_a-url.o\r\nutil/url.cpp:7:10: fatal error: event2/http.h: No such file or directory\r\n #include <event2/http.h>\r\n          ^~~~~~~~~~~~~~~\r\n```\r\n\r\nSuggested fix:\r\n\r\n```diff\r\ndiff --git a/configure.ac b/configure.ac\r\nindex 1f85dd3a99d..b43a29c7fb8 100644\r\n--- a/configure.ac\r\n+++ b/configure.ac\r\n@@ -1255,7 +1255,7 @@ if test x$use_pkgconfig = xyes; then\r\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\r\n       fi\r\n       if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench != xnonononono; then\r\n-        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\r\n+        PKG_CHECK_MODULES([EVENT], [libevent], [use_libevent=yes], [AC_MSG_ERROR(libevent not found.)])\r\n         if test x$TARGET_OS != xwindows; then\r\n           PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\r\n         fi\r\n@@ -1275,7 +1275,7 @@ if test x$use_pkgconfig = xyes; then\r\n else\r\n \r\n   if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench != xnonononono; then\r\n-    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\r\n+    AC_CHECK_HEADER([event2/event.h], [use_libevent=yes], AC_MSG_ERROR(libevent headers missing),)\r\n     AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\r\n     if test x$TARGET_OS != xwindows; then\r\n       AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\r\n@@ -1529,6 +1529,7 @@ AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\r\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\r\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\r\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\r\n+AM_CONDITIONAL([USE_LIBEVENT],[test x$use_libevent = xyes])\r\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\r\n AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\r\n AM_CONDITIONAL([ENABLE_SSE42],[test x$enable_sse42 = xyes])\r\ndiff --git a/src/Makefile.am b/src/Makefile.am\r\nindex 8c927f330b8..c38a87a1e4b 100644\r\n--- a/src/Makefile.am\r\n+++ b/src/Makefile.am\r\n@@ -523,9 +523,12 @@ libbitcoin_util_a_SOURCES = \\\r\n   util/strencodings.cpp \\\r\n   util/string.cpp \\\r\n   util/time.cpp \\\r\n-  util/url.cpp \\\r\n   $(BITCOIN_CORE_H)\r\n \r\n+if USE_LIBEVENT\r\n+libbitcoin_util_a_SOURCES += util/url.cpp\r\n+endif\r\n+\r\n if GLIBC_BACK_COMPAT\r\n libbitcoin_util_a_SOURCES += compat/glibc_compat.cpp\r\n AM_LDFLAGS += $(COMPAT_LDFLAGS)\r\n```\r\n\r\n\r\n",
      "created_at" : "2020-03-30T09:34:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18465#issuecomment-605891317",
      "id" : 605891317,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNTg5MTMxNw==",
      "updated_at" : "2020-03-30T09:34:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605891317",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "`wallet/rpcwallet.cpp` calls `urlDecode`, which will presumably give a new linker error when building `bitcoin-wallet` without libevent?",
      "created_at" : "2020-03-30T11:38:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18465#issuecomment-605948385",
      "id" : 605948385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNTk0ODM4NQ==",
      "updated_at" : "2020-03-30T11:38:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605948385",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> `wallet/rpcwallet.cpp` calls `urlDecode`, which will presumably give a new linker error when building `bitcoin-wallet` without libevent?\r\n\r\nYes, I didn't mention it, but for the future I do want bitcoin-wallet to be able to optionally depend on libevent so it can listen for RPC requests (https://github.com/ryanofsky/bitcoin/blob/ipc-export/doc/multiprocess.md#next-steps).\r\n\r\nIf it's important for bitcoin-wallet to be built without libevent, then something needs to break the link dependency between `bitcoin-wallet.cpp` and `urlDecode`. Your PR #18469 does this by breaking the dependency at the RegisterWalletRPCCommands symbol, but I would do it at the GetWalletNameFromJSONRPCRequest symbol instead so `bitcoin-wallet.cpp`  isn't cut off entirely from rpcwallet.\r\n\r\nRight now I am worried about code duplication in bitcoin-wallet, and concerned that it if gains more offline functionality it is going to turn into a third wallet interface duplicating functionality already implemented in the two current interfaces (RPC and GUI). This concern would go away if bitcoin-wallet could be a simple shim around rpcwallet methods that are tweaked to work offline (https://github.com/bitcoin/bitcoin/pull/15307#issuecomment-461480203, https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455187379)\r\n\r\nAny case I believe simplest possible fix for gentoo bitcoin-tx problem is one from my comment https://github.com/bitcoin/bitcoin/issues/18465#issuecomment-605891317. Simplest fix for bitcoin-wallet link error without libevent is to just require libevent to build bitcoin-wallet. Second simplest fix would be to tweak GetWalletNameFromJSONRPCRequest to return false when urlDecode function isn't available. Lots of ways to do this, you can make urlDecode a function pointer, use a HAVE_LIBEVENT macro, or make rule. I can post something later if it would be helpful.",
      "created_at" : "2020-03-30T13:01:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18465#issuecomment-605984805",
      "id" : 605984805,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNTk4NDgwNQ==",
      "updated_at" : "2020-03-30T13:02:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605984805",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Fix for bitcoin-wallet as well as bitcoin-tx:\r\n\r\n```diff\r\ndiff --git a/configure.ac b/configure.ac\r\nindex 1f85dd3a99d..05ab0dd1e55 100644\r\n--- a/configure.ac\r\n+++ b/configure.ac\r\n@@ -1255,7 +1255,9 @@ if test x$use_pkgconfig = xyes; then\r\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\r\n       fi\r\n       if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench != xnonononono; then\r\n-        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\r\n+        PKG_CHECK_MODULES([EVENT], [libevent],\r\n+          [AC_DEFINE(USE_LIBEVENT, 1, [Define this symbol to enable libevent dependency])],\r\n+          [AC_MSG_ERROR(libevent not found.)])\r\n         if test x$TARGET_OS != xwindows; then\r\n           PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\r\n         fi\r\n@@ -1275,7 +1277,9 @@ if test x$use_pkgconfig = xyes; then\r\n else\r\n \r\n   if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench != xnonononono; then\r\n-    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\r\n+    AC_CHECK_HEADER([event2/event.h],\r\n+      [AC_DEFINE(USE_LIBEVENT, 1, [Define this symbol to enable libevent dependency])],\r\n+      AC_MSG_ERROR(libevent headers missing),)\r\n     AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\r\n     if test x$TARGET_OS != xwindows; then\r\n       AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\r\ndiff --git a/src/util/url.cpp b/src/util/url.cpp\r\nindex e42d93bce8a..ae15815f0f7 100644\r\n--- a/src/util/url.cpp\r\n+++ b/src/util/url.cpp\r\n@@ -4,6 +4,10 @@\r\n \r\n #include <util/url.h>\r\n \r\n+#include <config/bitcoin-config.h>\r\n+\r\n+#if USE_LIBEVENT\r\n+\r\n #include <event2/http.h>\r\n #include <stdlib.h>\r\n #include <string>\r\n@@ -19,3 +23,11 @@ std::string urlDecode(const std::string &urlEncoded) {\r\n     }\r\n     return res;\r\n }\r\n+\r\n+UrlDecodeFn* const g_url_decode = urlDecode;\r\n+\r\n+#else\r\n+\r\n+UrlDecodeFn* const g_url_decode = nullptr;\r\n+\r\n+#endif\r\ndiff --git a/src/util/url.h b/src/util/url.h\r\nindex e9ea2ab765a..4c5da762c31 100644\r\n--- a/src/util/url.h\r\n+++ b/src/util/url.h\r\n@@ -7,6 +7,8 @@\r\n \r\n #include <string>\r\n \r\n-std::string urlDecode(const std::string &urlEncoded);\r\n+using UrlDecodeFn = std::string(const std::string& url_encoded);\r\n+UrlDecodeFn urlDecode;\r\n+extern UrlDecodeFn* const g_url_decode;\r\n \r\n #endif // BITCOIN_UTIL_URL_H\r\ndiff --git a/src/wallet/rpcwallet.cpp b/src/wallet/rpcwallet.cpp\r\nindex 5d34e592dbe..901d5ce9d4d 100644\r\n--- a/src/wallet/rpcwallet.cpp\r\n+++ b/src/wallet/rpcwallet.cpp\r\n@@ -77,9 +77,9 @@ bool HaveKey(const SigningProvider& wallet, const CKey& key)\r\n \r\n bool GetWalletNameFromJSONRPCRequest(const JSONRPCRequest& request, std::string& wallet_name)\r\n {\r\n-    if (request.URI.substr(0, WALLET_ENDPOINT_BASE.size()) == WALLET_ENDPOINT_BASE) {\r\n+    if (g_url_decode && request.URI.substr(0, WALLET_ENDPOINT_BASE.size()) == WALLET_ENDPOINT_BASE) {\r\n         // wallet endpoint was used\r\n-        wallet_name = urlDecode(request.URI.substr(WALLET_ENDPOINT_BASE.size()));\r\n+        wallet_name = g_url_decode(request.URI.substr(WALLET_ENDPOINT_BASE.size()));\r\n         return true;\r\n     }\r\n     return false;\r\n```",
      "created_at" : "2020-03-30T13:38:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18465#issuecomment-606004479",
      "id" : 606004479,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjAwNDQ3OQ==",
      "updated_at" : "2020-03-30T13:38:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606004479",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "IMO a build of `bitcoin-wallet` shouldn't change based on whether or not it was built with bitcoind/bitcoin-qt at the same time?",
      "created_at" : "2020-03-30T15:34:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18465#issuecomment-606072924",
      "id" : 606072924,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjA3MjkyNA==",
      "updated_at" : "2020-03-30T15:34:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606072924",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> IMO a build of `bitcoin-wallet` shouldn't change based on whether or not it was built with bitcoind/bitcoin-qt at the same time?\r\n\r\nGood point, it seems like a nice property to avoid changing. You could use:\r\n\r\n```diff\r\ndiff --git a/configure.ac b/configure.ac\r\nindex 1f85dd3a99d..b43a29c7fb8 100644\r\n--- a/configure.ac\r\n+++ b/configure.ac\r\n@@ -1255,7 +1255,7 @@ if test x$use_pkgconfig = xyes; then\r\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\r\n       fi\r\n       if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench != xnonononono; then\r\n-        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\r\n+        PKG_CHECK_MODULES([EVENT], [libevent], [use_libevent=yes], [AC_MSG_ERROR(libevent not found.)])\r\n         if test x$TARGET_OS != xwindows; then\r\n           PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\r\n         fi\r\n@@ -1275,7 +1275,7 @@ if test x$use_pkgconfig = xyes; then\r\n else\r\n \r\n   if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench != xnonononono; then\r\n-    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\r\n+    AC_CHECK_HEADER([event2/event.h], [use_libevent=yes], AC_MSG_ERROR(libevent headers missing),)\r\n     AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\r\n     if test x$TARGET_OS != xwindows; then\r\n       AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\r\n@@ -1529,6 +1529,7 @@ AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\r\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\r\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\r\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\r\n+AM_CONDITIONAL([USE_LIBEVENT],[test x$use_libevent = xyes])\r\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\r\n AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\r\n AM_CONDITIONAL([ENABLE_SSE42],[test x$enable_sse42 = xyes])\r\ndiff --git a/src/Makefile.am b/src/Makefile.am\r\nindex 8c927f330b8..c38a87a1e4b 100644\r\n--- a/src/Makefile.am\r\n+++ b/src/Makefile.am\r\n@@ -523,9 +523,12 @@ libbitcoin_util_a_SOURCES = \\\r\n   util/strencodings.cpp \\\r\n   util/string.cpp \\\r\n   util/time.cpp \\\r\n-  util/url.cpp \\\r\n   $(BITCOIN_CORE_H)\r\n \r\n+if USE_LIBEVENT\r\n+libbitcoin_util_a_SOURCES += util/url.cpp\r\n+endif\r\n+\r\n if GLIBC_BACK_COMPAT\r\n libbitcoin_util_a_SOURCES += compat/glibc_compat.cpp\r\n AM_LDFLAGS += $(COMPAT_LDFLAGS)\r\ndiff --git a/src/bitcoin-cli.cpp b/src/bitcoin-cli.cpp\r\nindex 6982eaab61d..3c773fb64db 100644\r\n--- a/src/bitcoin-cli.cpp\r\n+++ b/src/bitcoin-cli.cpp\r\n@@ -15,6 +15,7 @@\r\n #include <util/strencodings.h>\r\n #include <util/system.h>\r\n #include <util/translation.h>\r\n+#include <util/url.h>\r\n \r\n #include <functional>\r\n #include <memory>\r\n@@ -29,6 +30,7 @@\r\n #include <compat/stdin.h>\r\n \r\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\r\n+UrlDecodeFn* const URL_DECODE = urlDecode;\r\n \r\n static const char DEFAULT_RPCCONNECT[] = \"127.0.0.1\";\r\n static const int DEFAULT_HTTP_CLIENT_TIMEOUT=900;\r\ndiff --git a/src/bitcoin-wallet.cpp b/src/bitcoin-wallet.cpp\r\nindex 7f1a4a114ba..76152a81d84 100644\r\n--- a/src/bitcoin-wallet.cpp\r\n+++ b/src/bitcoin-wallet.cpp\r\n@@ -11,11 +11,13 @@\r\n #include <logging.h>\r\n #include <util/system.h>\r\n #include <util/translation.h>\r\n+#include <util/url.h>\r\n #include <wallet/wallettool.h>\r\n \r\n #include <functional>\r\n \r\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\r\n+UrlDecodeFn* const URL_DECODE = nullptr;\r\n \r\n static void SetupWalletToolArgs()\r\n {\r\ndiff --git a/src/bitcoind.cpp b/src/bitcoind.cpp\r\nindex e284dce0d5d..f26eb45fcea 100644\r\n--- a/src/bitcoind.cpp\r\n+++ b/src/bitcoind.cpp\r\n@@ -20,10 +20,12 @@\r\n #include <util/system.h>\r\n #include <util/threadnames.h>\r\n #include <util/translation.h>\r\n+#include <util/url.h>\r\n \r\n #include <functional>\r\n \r\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\r\n+UrlDecodeFn* const URL_DECODE = urlDecode;\r\n \r\n static void WaitForShutdown(NodeContext& node)\r\n {\r\ndiff --git a/src/qt/main.cpp b/src/qt/main.cpp\r\nindex 3dfd9e850ef..607cf9f9760 100644\r\n--- a/src/qt/main.cpp\r\n+++ b/src/qt/main.cpp\r\n@@ -5,6 +5,7 @@\r\n #include <qt/bitcoin.h>\r\n \r\n #include <util/translation.h>\r\n+#include <util/url.h>\r\n \r\n #include <QCoreApplication>\r\n \r\n@@ -15,5 +16,6 @@\r\n extern const std::function<std::string(const char*)> G_TRANSLATION_FUN = [](const char* psz) {\r\n     return QCoreApplication::translate(\"bitcoin-core\", psz).toStdString();\r\n };\r\n+UrlDecodeFn* const URL_DECODE = urlDecode;\r\n \r\n int main(int argc, char* argv[]) { return GuiMain(argc, argv); }\r\ndiff --git a/src/test/util/setup_common.cpp b/src/test/util/setup_common.cpp\r\nindex d684b977876..b7f5dcfe43b 100644\r\n--- a/src/test/util/setup_common.cpp\r\n+++ b/src/test/util/setup_common.cpp\r\n@@ -27,12 +27,14 @@\r\n #include <util/string.h>\r\n #include <util/time.h>\r\n #include <util/translation.h>\r\n+#include <util/url.h>\r\n #include <validation.h>\r\n #include <validationinterface.h>\r\n \r\n #include <functional>\r\n \r\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\r\n+UrlDecodeFn* const URL_DECODE = nullptr;\r\n \r\n FastRandomContext g_insecure_rand_ctx;\r\n /** Random context to get unique temp data dirs. Separate from g_insecure_rand_ctx, which can be seeded from a const env var */\r\ndiff --git a/src/util/url.h b/src/util/url.h\r\nindex e9ea2ab765a..be9f1c9e8a7 100644\r\n--- a/src/util/url.h\r\n+++ b/src/util/url.h\r\n@@ -7,6 +7,8 @@\r\n \r\n #include <string>\r\n \r\n-std::string urlDecode(const std::string &urlEncoded);\r\n+using UrlDecodeFn = std::string(const std::string& url_encoded);\r\n+UrlDecodeFn urlDecode;\r\n+extern UrlDecodeFn* const URL_DECODE;\r\n \r\n #endif // BITCOIN_UTIL_URL_H\r\ndiff --git a/src/wallet/rpcwallet.cpp b/src/wallet/rpcwallet.cpp\r\nindex 5d34e592dbe..9dd684a94c0 100644\r\n--- a/src/wallet/rpcwallet.cpp\r\n+++ b/src/wallet/rpcwallet.cpp\r\n@@ -77,9 +77,9 @@ bool HaveKey(const SigningProvider& wallet, const CKey& key)\r\n \r\n bool GetWalletNameFromJSONRPCRequest(const JSONRPCRequest& request, std::string& wallet_name)\r\n {\r\n-    if (request.URI.substr(0, WALLET_ENDPOINT_BASE.size()) == WALLET_ENDPOINT_BASE) {\r\n+    if (URL_DECODE && request.URI.substr(0, WALLET_ENDPOINT_BASE.size()) == WALLET_ENDPOINT_BASE) {\r\n         // wallet endpoint was used\r\n-        wallet_name = urlDecode(request.URI.substr(WALLET_ENDPOINT_BASE.size()));\r\n+        wallet_name = URL_DECODE(request.URI.substr(WALLET_ENDPOINT_BASE.size()));\r\n         return true;\r\n     }\r\n     return false;\r\n```",
      "created_at" : "2020-03-30T17:31:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18465#issuecomment-606137014",
      "id" : 606137014,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18465",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjEzNzAxNA==",
      "updated_at" : "2020-03-30T18:08:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606137014",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
