[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "To show another example of the consequences of the \"pfilter is never nullptr\"-inaccuracy, in the following `filteradd`-processing code, the last `else`-branch is dead code:\r\nhttps://github.com/bitcoin/bitcoin/blob/d52ba21dfff99173abb927bc964ce7ceb711d789/src/net_processing.cpp#L3177-L3187",
      "created_at" : "2020-03-31T15:14:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-606690752",
      "id" : 606690752,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjY5MDc1Mg==",
      "updated_at" : "2020-03-31T15:14:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606690752",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> A simple solution would be to just set pfilter to nullptr initially and after receiving a filterclear message.\r\n\r\nI remember chatting to @naumenkogs about this when reviewing #17164 due to memory usage concerns. The empty constructor leaves the `vData` member untouched https://doxygen.bitcoincore.org/bloom_8h_source.html#l00067. So at least it doesn't waste too much memory. Though, the logic bugs should be fixed in the long term and we should add test coverage for all net processing code.",
      "created_at" : "2020-03-31T16:41:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-606741599",
      "id" : 606741599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjc0MTU5OQ==",
      "updated_at" : "2020-03-31T16:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606741599",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Is the errorneously sent `merkleblock` empty, or does it have transactions too?",
      "created_at" : "2020-03-31T17:55:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-606780190",
      "id" : 606780190,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjc4MDE5MA==",
      "updated_at" : "2020-03-31T17:55:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606780190",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "`CBloomFilter() : isFull(true)`, so the block should be full as well?",
      "created_at" : "2020-03-31T18:17:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-606791302",
      "id" : 606791302,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjc5MTMwMg==",
      "updated_at" : "2020-03-31T18:17:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606791302",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Could this be related to https://github.com/bitcoin/bitcoin/issues/18324 ?",
      "created_at" : "2020-03-31T18:21:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-606793192",
      "id" : 606793192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjc5MzE5Mg==",
      "updated_at" : "2020-03-31T18:21:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606793192",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the very well-described issue, it's indeed an odd behavior.\r\n#18324 is a good example of why this issue matters (even if the cause of #18324 is something else). We don't want to waste bandwidth like that.\r\nI think we should make the code follow the BIP, and add the test.\r\n\r\nSending a post to the mailing list would be a good idea too I guess.",
      "created_at" : "2020-03-31T22:51:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-606926191",
      "id" : 606926191,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjkyNjE5MQ==",
      "updated_at" : "2020-03-31T22:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606926191",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> \r\n> \r\n> Could this be related to #18324 ?\r\n\r\nThe issue described could be the cause of #18324 in the unlikely case that -- for whatever reason -- the `filterload` message sent from the client doesn't arrive at the node. Then obviously no filter is set but due to the bug described in this issue, requested filtered blocks leads to getting _all_ blocks. \r\n\r\n@naumenkogs:\r\nOkay, will look deeper into the issue then what possible side-effects a possible bugfix would have and how to test this thoroughly. Posting to the mailing list is also a good plan.",
      "created_at" : "2020-04-01T12:32:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-607221583",
      "id" : 607221583,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNzIyMTU4Mw==",
      "updated_at" : "2020-04-01T12:32:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607221583",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it should be prevented in any case that an empty filtered block is sent, or any filtered block resulting from some arbitrary filter operation. Because **this would lead to missed transactions** for wallets, fixable only by replaying the entire blockchain (from wallet birthdate).\r\n\r\nLooking at the issue description, I think the expected behaviour would be the connection should be dropped. It simply makes no sense to request a filtered block with an undefined filter.\r\n",
      "created_at" : "2020-04-01T12:54:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-607231527",
      "id" : 607231527,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNzIzMTUyNw==",
      "updated_at" : "2020-04-01T12:54:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607231527",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/743306?v=4",
         "events_url" : "https://api.github.com/users/schildbach/events{/privacy}",
         "followers_url" : "https://api.github.com/users/schildbach/followers",
         "following_url" : "https://api.github.com/users/schildbach/following{/other_user}",
         "gists_url" : "https://api.github.com/users/schildbach/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/schildbach",
         "id" : 743306,
         "login" : "schildbach",
         "node_id" : "MDQ6VXNlcjc0MzMwNg==",
         "organizations_url" : "https://api.github.com/users/schildbach/orgs",
         "received_events_url" : "https://api.github.com/users/schildbach/received_events",
         "repos_url" : "https://api.github.com/users/schildbach/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/schildbach/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/schildbach/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/schildbach"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@theStack Just curious, what kind of client did you see this first? Is it based on bitcoinj? If yes, can you see the version from the user agent?",
      "created_at" : "2020-04-01T13:29:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-607249524",
      "id" : 607249524,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNzI0OTUyNA==",
      "updated_at" : "2020-04-01T13:29:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607249524",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/743306?v=4",
         "events_url" : "https://api.github.com/users/schildbach/events{/privacy}",
         "followers_url" : "https://api.github.com/users/schildbach/followers",
         "following_url" : "https://api.github.com/users/schildbach/following{/other_user}",
         "gists_url" : "https://api.github.com/users/schildbach/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/schildbach",
         "id" : 743306,
         "login" : "schildbach",
         "node_id" : "MDQ6VXNlcjc0MzMwNg==",
         "organizations_url" : "https://api.github.com/users/schildbach/orgs",
         "received_events_url" : "https://api.github.com/users/schildbach/received_events",
         "repos_url" : "https://api.github.com/users/schildbach/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/schildbach/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/schildbach/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/schildbach"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Looking at the issue description, I think the expected behaviour would be the connection should be dropped. It simply makes no sense to request a filtered block with an undefined filter.\r\n\r\n_Expected_ was meant in the sense of \"matches the description in the BIP\". While I agree that dropping the connection would be a good idea (requesting filtered blocks without filter clearly doesn't make sense), I don't know though if this would need a change of the BIP. Maybe some deeper in the BIP process can comment on this. Will anyways send out a mailing list post soon to reach more people in this discussion.\r\n\r\n> @theStack Just curious, what kind of client did you see this first? Is it based on bitcoinj? If yes, can you see the version from the user agent?\r\n\r\nUnfortunately not. I didn't use a real client, but noticed the behaviour while experimenting with the new [BIP37 test](https://github.com/bitcoin/bitcoin/blob/master/test/functional/p2p_filter.py) in the functional test framework, then digged into the network processing code to verify this.",
      "created_at" : "2020-04-01T13:58:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-607266278",
      "id" : 607266278,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNzI2NjI3OA==",
      "updated_at" : "2020-04-01T14:02:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607266278",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "After digging deeper into the issue, I found out that commit https://github.com/bitcoin/bitcoin/commit/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07 (particularly https://github.com/bitcoin/bitcoin/commit/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07#diff-7ec3c68a81efff79b6ca22ac1f1eabba and https://github.com/bitcoin/bitcoin/commit/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07#diff-1a8b9d1ad0a6fda5e751286c73102fc2) introduced this behaviour, first showing up in v0.8.4. As the commit message says \"It sets a default match everything filter for peers [...]\", i.e. the state of \"no filter set\" is not available anymore since then.",
      "created_at" : "2020-04-02T14:33:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-607883471",
      "id" : 607883471,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNzg4MzQ3MQ==",
      "updated_at" : "2020-04-02T14:33:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607883471",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I can't follow the part where it replaces `NULL` with `CBloomFilter{}`. That part should probably just be reverted?",
      "created_at" : "2020-04-02T14:40:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-607887207",
      "id" : 607887207,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNzg4NzIwNw==",
      "updated_at" : "2020-04-02T14:40:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607887207",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> \r\n> \r\n> I can't follow the part where it replaces `NULL` with `CBloomFilter{}`. That part should probably just be reverted?\r\n\r\nI also don't get what the advantage of having a default match-everything-filter is over not having a filter. At a first glance at the code, reverting that part would be unproblematic in my opinion. Maybe @gmaxwell as the author of the commit could comment on what the reason was to introduce this change?\r\n\r\nP.S.: Also posted about the issue on the mailing list now: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-April/017743.html\r\n(Just as quick info for anyone not subscribed there)",
      "created_at" : "2020-04-02T17:49:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-608008338",
      "id" : 608008338,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwODAwODMzOA==",
      "updated_at" : "2020-04-02T17:49:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608008338",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@theStack That commit was a fix for CVE-2013-5700 (a division by zero in the Bloom filter code), FWIW.",
      "created_at" : "2020-04-02T18:05:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-608017121",
      "id" : 608017121,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwODAxNzEyMQ==",
      "updated_at" : "2020-04-02T18:05:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608017121",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The change in behaviour was an intentional covert fix for the remote crasher bug introduced by BIP37.  It obviously could be changed now the vulnerably was made public, but I seem to recall that prior discussion around cleaning up that code was just answered by comments about the desire to deactivate and eventually remove BIP37 entirely.",
      "created_at" : "2020-04-03T04:35:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-608224095",
      "id" : 608224095,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwODIyNDA5NQ==",
      "updated_at" : "2020-04-03T04:35:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608224095",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@gmaxwell: Thanks for clarifying. I think it makes sense to add a functional test checking that this vulnerability remains fixed in the course of changing the behaviour back. I couldn't find any concrete description how to trigger this remote crash, but looking into `bloom.cpp` it seems as simple as:\r\n1. sending a `filterload` message with zero-length data\r\n2. sending a random `filteradd` message\r\n\r\nThat should be sufficient to trigger a modulo-by-0 operation in the following line?\r\nhttps://github.com/bitcoin/bitcoin/blob/f0d6487e290761a4fb03798240a351b5fddfdb38/src/bloom.cpp#L45",
      "created_at" : "2020-04-03T12:08:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18483#issuecomment-608397991",
      "id" : 608397991,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwODM5Nzk5MQ==",
      "updated_at" : "2020-04-03T12:08:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608397991",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   }
]
