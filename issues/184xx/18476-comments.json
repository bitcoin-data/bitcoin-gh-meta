[
   {
      "author_association" : "MEMBER",
      "body" : "I disagree this is a bug. The RPC user cannot know that the UTXO doesn't exist (its existence is part of the RPC answer), so it shouldn't be an error when this occurs. The response is a JSON null, which is printed by `bitcoin-cli` as the empty string.\r\n\r\nIn retrospect it would probably have been better to add a field \"exists\" or so, and only emit `\"exits\": false` in case of a non-existing UTXO. That'd be a pretty big breaking change though.",
      "created_at" : "2020-03-30T22:08:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18476#issuecomment-606277250",
      "id" : 606277250,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18476",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjI3NzI1MA==",
      "updated_at" : "2020-03-30T22:10:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606277250",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Yeah I understand that from an RPC point of view, a null response is correct, but from the bitcoin-cli point of view it seems strange.  How about something like what getzmqnotifications does:\r\n\r\n```\r\nuser@computer:~$ bitcoin-cli getzmqnotifications\r\n[\r\n]\r\nuser@computer:~$ \r\n```\r\nMaybe not quite the same, because the brackets indicate an empty array, but some kind of indication that an empty response was received?\r\n",
      "created_at" : "2020-03-30T22:12:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18476#issuecomment-606278884",
      "id" : 606278884,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18476",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjI3ODg4NA==",
      "updated_at" : "2020-03-30T22:12:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606278884",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/22841402?v=4",
         "events_url" : "https://api.github.com/users/adiabat/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adiabat/followers",
         "following_url" : "https://api.github.com/users/adiabat/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adiabat/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adiabat",
         "id" : 22841402,
         "login" : "adiabat",
         "node_id" : "MDQ6VXNlcjIyODQxNDAy",
         "organizations_url" : "https://api.github.com/users/adiabat/orgs",
         "received_events_url" : "https://api.github.com/users/adiabat/received_events",
         "repos_url" : "https://api.github.com/users/adiabat/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adiabat/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adiabat/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adiabat"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes, I agree that a better response is possible. I don't see how to introduce it in a backward-compatible way, except adding an extra argument to the input to tell it to produce new-style output - which seems like overkill. Thoughts?",
      "created_at" : "2020-03-30T22:18:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18476#issuecomment-606281090",
      "id" : 606281090,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18476",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjI4MTA5MA==",
      "updated_at" : "2020-03-30T22:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606281090",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Hm, if users are currently depending on bitcoin-cli returning nothing in this case, then returning an error message is a breaking change.  Are there any strings that will still parse as empty, like ` \"\" ` or `{}` ?\r\nWhile somewhat ambiguous, either of those would be a good indication that the command is working as expected, but the utxo queried isn't there.",
      "created_at" : "2020-03-30T22:22:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18476#issuecomment-606282622",
      "id" : 606282622,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18476",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjI4MjYyMg==",
      "updated_at" : "2020-03-30T22:22:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606282622",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/22841402?v=4",
         "events_url" : "https://api.github.com/users/adiabat/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adiabat/followers",
         "following_url" : "https://api.github.com/users/adiabat/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adiabat/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adiabat",
         "id" : 22841402,
         "login" : "adiabat",
         "node_id" : "MDQ6VXNlcjIyODQxNDAy",
         "organizations_url" : "https://api.github.com/users/adiabat/orgs",
         "received_events_url" : "https://api.github.com/users/adiabat/received_events",
         "repos_url" : "https://api.github.com/users/adiabat/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adiabat/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adiabat/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adiabat"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I doubt anyone is relying on `bitcoin-cli`'s response, but they may be relying on the JSON-RPC interface.",
      "created_at" : "2020-03-30T22:25:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18476#issuecomment-606283524",
      "id" : 606283524,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18476",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjI4MzUyNA==",
      "updated_at" : "2020-03-30T22:25:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606283524",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Do you think it's then OK to leave the RPC as-is, and change `bitcoin-cli` to say either an error or `{}`?\r\n\r\nAlso if other people think it's worth changing or best to leave as-is.",
      "created_at" : "2020-03-30T22:52:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18476#issuecomment-606293088",
      "id" : 606293088,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18476",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjI5MzA4OA==",
      "updated_at" : "2020-03-30T22:52:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606293088",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/22841402?v=4",
         "events_url" : "https://api.github.com/users/adiabat/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adiabat/followers",
         "following_url" : "https://api.github.com/users/adiabat/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adiabat/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adiabat",
         "id" : 22841402,
         "login" : "adiabat",
         "node_id" : "MDQ6VXNlcjIyODQxNDAy",
         "organizations_url" : "https://api.github.com/users/adiabat/orgs",
         "received_events_url" : "https://api.github.com/users/adiabat/received_events",
         "repos_url" : "https://api.github.com/users/adiabat/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adiabat/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adiabat/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adiabat"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@adiabat How would you do that? Add a special exception in `bitcoin-cli` just for that RPC?",
      "created_at" : "2020-03-30T23:06:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18476#issuecomment-606297842",
      "id" : 606297842,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18476",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjI5Nzg0Mg==",
      "updated_at" : "2020-03-30T23:06:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606297842",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "OK now that I'm looking more, this seems tricky.  A bunch of RPC calls return `NullUniValue`, and bitcoin-cli silently exits whenever that happens.\r\n\r\nBut returning `NullUniValue` usually means success, like with RPC calls like `ping`, `addnode`, `reconsiderblock`, and most other places.  In contrast, with `gettransaction`, `getrawtransaction`, `getblock`, `getmempoolentry` etc..., RPC errors are returned instead of `NullUniValue` when it can't find the transaction or block requested.  The JSON error then carries over into the `bitcoin-cli` response.\r\n\r\nIn fact, looking through the \"get*\" RPC calls, they all seem to return -5 errors when they can't find the thing specified...\r\n\r\nSo I guess the options are: change the RPC return to give back a \"not found\" error, to make it more in line with other \"get*\" RPC calls.  This is a breaking change though if people are expecting null responses for non-existent utxos.\r\n\r\nOr, there would have to be `gettxout` specific code in `bitcoin-cli`, since it does seem like most of the other `NullUniValue` feel \"correct\" in that they're traditional \"OK I did the thing you asked, no data to return\" situations.  This is certainly a bit of a hack / ugly to have RPC-specific code there.\r\n\r\nOr, 3rd option is to just leave it :)  Not a big deal.\r\nI certainly know what to expect from this RPC now, it just confused me for a few minutes when I was querying an invalid outpoint. ",
      "created_at" : "2020-03-30T23:38:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18476#issuecomment-606308179",
      "id" : 606308179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18476",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjMwODE3OQ==",
      "updated_at" : "2020-03-31T01:16:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606308179",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/22841402?v=4",
         "events_url" : "https://api.github.com/users/adiabat/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adiabat/followers",
         "following_url" : "https://api.github.com/users/adiabat/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adiabat/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adiabat",
         "id" : 22841402,
         "login" : "adiabat",
         "node_id" : "MDQ6VXNlcjIyODQxNDAy",
         "organizations_url" : "https://api.github.com/users/adiabat/orgs",
         "received_events_url" : "https://api.github.com/users/adiabat/received_events",
         "repos_url" : "https://api.github.com/users/adiabat/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adiabat/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adiabat/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adiabat"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think it's not worth changing the current behaviour (even if it is inconsistent with other `get*` calls). I see @sipa point of not returning an error because the user likes to probe an UTXO existence,... though, I guess we return errors for similar \"checks\" via RPC and REST.\r\n\r\n`bitcoin-cli` is currently more or less a dumb RPC client,.. but recently got more and more logic (like the `getinfo` call or the `rpcwallet` argument). Adding too much logic to the client side should be avoided IMO for the sake of maintainability and reduced (spaghetti-)complexity. Applications or users needing more client side feature should implement that in their own stack.",
      "created_at" : "2020-03-31T08:00:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18476#issuecomment-606465828",
      "id" : 606465828,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18476",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjQ2NTgyOA==",
      "updated_at" : "2020-03-31T08:00:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606465828",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I doubt anyone is relying on bitcoin-cli's response, but they may be relying on the JSON-RPC interface.\r\n\r\nC-lightning is, and fwiw we [rely on](https://github.com/ElementsProject/lightning/blob/5d4620484c843e572367b305ca9e31b077e5a2a1/plugins/bcli.c#L317) this specific behaviour..",
      "created_at" : "2020-03-31T08:27:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18476#issuecomment-606477688",
      "id" : 606477688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18476",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjQ3NzY4OA==",
      "updated_at" : "2020-03-31T08:27:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606477688",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe we could offer **extended** variants of original API calls?\r\nSomething similar to how Windows treats its APIs.\r\n\r\nFor example, you have [RegisterClass](https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-registerclassa) and [RegisterClassEx](https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-registerclassexa) functions.\r\nBoth of them can register window objects but the `Ex`-variant offers some additional options. \r\n\r\nSure, comparing low-level APIs with RPC calls is maybe not the best engineering approach, but I found no better example.\r\n\r\n-------\r\n\r\nIn our case, we could leave the original RPC untouched, thus maintaining compatibility, while at the same time offering new data to those clients who are interested in it (and who know what they're doing).\r\n\r\nInternally, the logic of those RPC calls could be reused without sacrificing the DRY principle. So, `gettxoutex` would internally call `gettxout` and only then add `\"exists\": boolean` field when there's an error.  \r\n\r\nHere's [my implementation](https://github.com/brakmic/bitcoin/commit/59721d7d5e8102766a4ecd9cc4a9cfc91244d43e) of this hypothetical `gettxoutex` RPC. \r\n\r\n_For now, I have just copied the whole **RPCHelpMan** stuff, but later we could maybe make it a static variable to reuse it in both functions._\r\n\r\n**Example**\r\n\r\n_success_\r\n\r\n```shell\r\n./src/bitcoin-cli -regtest gettxoutex 99a4e8132eac92e69a00845c0fa22013ecfd576a2d2\r\n111868881a412dea9bc0f 0\r\n{\r\n  \"bestblock\": \"471cb2312a77239dc39ae4cdd37e0394ba99788f4838af84f68479efc89b0996\",\r\n  \"confirmations\": 1,\r\n  \"value\": 1.56250000,\r\n  \"scriptPubKey\": {\r\n    \"asm\": \"0 77c449e951fb3fb3763ec521b6da3f847f86d19b\",\r\n    \"hex\": \"001477c449e951fb3fb3763ec521b6da3f847f86d19b\",\r\n    \"reqSigs\": 1,\r\n    \"type\": \"witness_v0_keyhash\",\r\n    \"addresses\": [\r\n      \"bcrt1qwlzyn623lvlmxa37c5smdk3ls3lcd5vmwxdx50\"\r\n    ]\r\n  },\r\n  \"coinbase\": true\r\n}\r\n```\r\n\r\n_failed_\r\n\r\n```shell\r\n./src/bitcoin-cli -regtest gettxoutex 99a4e8132eac92e69a00845c0fa22013ecfd576a2d2111868881a412dea9baaa 0\r\n{\r\n  \"exists\": false\r\n}\r\n```",
      "created_at" : "2020-04-12T12:35:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18476#issuecomment-612607714",
      "id" : 612607714,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18476",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMjYwNzcxNA==",
      "updated_at" : "2020-04-12T12:54:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612607714",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/56779?v=4",
         "events_url" : "https://api.github.com/users/brakmic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brakmic/followers",
         "following_url" : "https://api.github.com/users/brakmic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brakmic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brakmic",
         "id" : 56779,
         "login" : "brakmic",
         "node_id" : "MDQ6VXNlcjU2Nzc5",
         "organizations_url" : "https://api.github.com/users/brakmic/orgs",
         "received_events_url" : "https://api.github.com/users/brakmic/received_events",
         "repos_url" : "https://api.github.com/users/brakmic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brakmic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brakmic"
      }
   }
]
