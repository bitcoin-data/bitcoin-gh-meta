[
   {
      "author_association" : "MEMBER",
      "body" : "The code is here\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/e180be49d7d802d05b1850924be97fe27d353ffe/src/wallet/rpcwallet.cpp#L133-L134\r\n",
      "created_at" : "2019-10-15T19:21:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-542365350",
      "id" : 542365350,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjM2NTM1MA==",
      "updated_at" : "2019-10-15T19:21:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542365350",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Other fields in `gettransaction` not always present are e.g. `blockhash`, `blockindex` and `blocktime` -- they only exist for confirmed transactions, for unconfirmed the `trusted` field is generated instead (snippet starts one line below yours about `generated`, by the way):\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/e180be49d7d802d05b1850924be97fe27d353ffe/src/wallet/rpcwallet.cpp#L135-L145\r\n\r\nSo it doesn't seem too trivial to solve this (what values should `blockhash`, `blockindex` and `blocktime` get for unconfirmed transactions?). Or is it enough for a first step to approach this just for boolean values?",
      "created_at" : "2019-10-15T20:03:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-542381203",
      "id" : 542381203,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjM4MTIwMw==",
      "updated_at" : "2019-10-15T20:03:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542381203",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> what values should blockhash, blockindex and blocktime get for unconfirmed transactions?\r\n\r\nI think it is fine to solve it by mentioning it in the help text, which is missing right now.",
      "created_at" : "2019-10-15T20:33:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-542392285",
      "id" : 542392285,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjM5MjI4NQ==",
      "updated_at" : "2019-10-15T20:33:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542392285",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Similarly, `invovesWatchonly` should probably not be included for non-watchonly wallets, but always be included for watchonly wallets. See also slightly related #16383 which changed the fallbacks for RPC inputs when the wallet is watchonly.",
      "created_at" : "2019-10-15T20:36:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-542393686",
      "id" : 542393686,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjM5MzY4Ng==",
      "updated_at" : "2019-10-15T20:36:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542393686",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Okay it seems I got something wrong here -- is it not the goal to have a fixed result structure, i.e. all fields are always present (basically meaning that there are no conditional `.pushKV()` calls anymore), to get rid of all \"only present if....\" fields?",
      "created_at" : "2019-10-15T21:13:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-542407648",
      "id" : 542407648,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjQwNzY0OA==",
      "updated_at" : "2019-10-15T21:13:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542407648",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "You can set `blockhash` to a JSON-None value to keep the structure static. This will make the RPC response slightly larger, but is preferable I think.",
      "created_at" : "2019-10-15T22:09:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-542426343",
      "id" : 542426343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjQyNjM0Mw==",
      "updated_at" : "2019-10-15T22:09:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542426343",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> You can set `blockhash` to a JSON-None value to keep the structure static. This will make the RPC response slightly larger, but is preferable I think.\r\n\r\nThat would make sense. That \"JSON-None value\" can be created with the empty constructur of UniValue `UniValue()`, leading to `null`, as I just found out (as information for anyone wanting to work on this, I'm not sure if I will have time before end of the month).\r\n\r\nWhat confused me was this part:\r\n> Similarly, `invovesWatchonly` should probably not be included for non-watchonly wallets, but always be included for watchonly wallets. \r\n\r\nShouldn't this field `involvesWatchonly` also always be generated? Right now it is only add to the response if it is true.",
      "created_at" : "2019-10-15T22:48:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-542436841",
      "id" : 542436841,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjQzNjg0MQ==",
      "updated_at" : "2019-10-15T22:48:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542436841",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK: making the structure independent of return value makes the life easier for our users and the cost of doing so is essentially zero",
      "created_at" : "2019-10-16T08:51:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-542598004",
      "id" : 542598004,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjU5ODAwNA==",
      "updated_at" : "2019-10-16T08:51:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542598004",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I can take a look at this, seems like a good first issue.",
      "created_at" : "2019-10-16T08:54:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-542598962",
      "id" : 542598962,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjU5ODk2Mg==",
      "updated_at" : "2019-10-16T08:54:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542598962",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/16340977?v=4",
         "events_url" : "https://api.github.com/users/nijynot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nijynot/followers",
         "following_url" : "https://api.github.com/users/nijynot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nijynot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nijynot",
         "id" : 16340977,
         "login" : "nijynot",
         "node_id" : "MDQ6VXNlcjE2MzQwOTc3",
         "organizations_url" : "https://api.github.com/users/nijynot/orgs",
         "received_events_url" : "https://api.github.com/users/nijynot/received_events",
         "repos_url" : "https://api.github.com/users/nijynot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nijynot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nijynot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nijynot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK *in general*. I can think of only one place where it makes a considerable difference in structure size, and leaving out zero fields was intentional: for the message type statistics in `getpeerinfo`.",
      "created_at" : "2019-10-16T13:49:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-542710374",
      "id" : 542710374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjcxMDM3NA==",
      "updated_at" : "2019-10-16T13:50:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542710374",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think response schemas dependent of the actual result are fine. Missing keys and null values are things that any JSON RPC client must handle. So it should be fine especially if the result is well documented (and tested).\r\n\r\nBut I also don't mind otherwise. My concern is that we can't go thru all RPC and make this change lightly - clients are expecting missing keys and we should avoid breaking changes. So we will end up with a non-consistent API anyway. For this reason I also don't think this is a good first issue.",
      "created_at" : "2019-10-17T08:41:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-543071147",
      "id" : 543071147,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MzA3MTE0Nw==",
      "updated_at" : "2019-10-17T08:41:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543071147",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nI fully agree that static response structures make the lives of people developing against the RPC easier. While responses may be heavier we can overall probably reduce the number of LoC and making this a general rule prevents future discussions whether certain RPC return values could be made conditional, which mostly seems like a waste of energy IMO.",
      "created_at" : "2019-10-17T13:24:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-543173415",
      "id" : 543173415,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MzE3MzQxNQ==",
      "updated_at" : "2019-10-17T13:24:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543173415",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I fully agree that static response structures make the lives of people developing against the RPC easier.\r\n\r\nI think the key advantage of static structures is reduced ambiguity. If field is set conditionally and absent, it's ambiguous whether the field has no value, or the backend just doesn't support returning it. It can make it harder than it needs to be write an RPC client that isn't tied to specific bitcoind version.",
      "created_at" : "2019-10-17T14:43:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-543208180",
      "id" : 543208180,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MzIwODE4MA==",
      "updated_at" : "2019-10-17T14:43:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543208180",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> clients are expecting missing keys and we should avoid breaking changes. So we will end up with a non-consistent API anyway. For this reason I also don't think this is a good first issue.\r\n\r\nGood point @promag . Removed \"good first issue\" for now.",
      "created_at" : "2019-10-17T15:01:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-543217124",
      "id" : 543217124,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MzIxNzEyNA==",
      "updated_at" : "2019-10-17T15:01:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543217124",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Also good point by @ryanofsky . A living example for that is https://github.com/bitcoin/bitcoin/pull/15077#issuecomment-452077683",
      "created_at" : "2019-10-17T15:05:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-543218752",
      "id" : 543218752,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MzIxODc1Mg==",
      "updated_at" : "2019-10-17T15:05:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543218752",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "My view is that well-documented cases where values are conditionally present based on other fields are fine (e.g. getaddressinfo only contains the sub-structure that recurses into p2sh when it also indicates you have a p2sh address). That avoids the issue @ryanofsky brings up above where you don't know if something is not present because the software doesn't support it, or because it is intended to be missing.\n\nIn other words: I think it would be ideal that fields being missing or not itself should never be used to convey information. But that does not mean that all responses should be completely static.",
      "created_at" : "2019-10-17T16:10:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-543248130",
      "id" : 543248130,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MzI0ODEzMA==",
      "updated_at" : "2019-10-17T16:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543248130",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke and what would be `decoded` value in `gettransaction verbose=false` result?",
      "created_at" : "2020-05-06T01:24:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17155#issuecomment-624396286",
      "id" : 624396286,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17155",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDM5NjI4Ng==",
      "updated_at" : "2020-05-06T01:24:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624396286",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
