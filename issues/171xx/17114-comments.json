[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Was able to build successfully (same clang version):\r\n```\r\nBuild Options:\r\n  with endomorphism   = no\r\n  with ecmult precomp = yes\r\n  with jni            = no\r\n  with benchmarks     = no\r\n  with coverage       = no\r\n  module ecdh         = no\r\n  module recovery     = yes\r\n\r\n  asm                 = x86_64\r\n  bignum              = no\r\n  field               = 64bit\r\n  scalar              = 64bit\r\n\r\n  CC                  = clang\r\n  CFLAGS              = -fno-stack-check -W -std=c89 -pedantic -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes -Wno-unused-function -Wno-long-long -Wno-overlength-strings -fvisibility=hidden -O3\r\n  CPPFLAGS            = -DDEBUG_LOCKORDER\r\n  LDFLAGS             =\r\n\r\n\r\nOptions used to compile and link:\r\n  with wallet   = yes\r\n  with gui / qt = yes\r\n    with bip70  = no\r\n    with qr     = yes\r\n  with zmq      = no\r\n  with test     = yes\r\n    with prop   = no\r\n    with fuzz   = no\r\n  with bench    = no\r\n  with upnp     = yes\r\n  use asm       = no\r\n  sanitizers    = address,integer,undefined\r\n  debug enabled = yes\r\n  gprof enabled = no\r\n  werror        = no\r\n\r\n  target os     = darwin\r\n  build os      = darwin\r\n\r\n  CC            = clang\r\n  CFLAGS        = -fno-stack-check\r\n  CPPFLAGS      =  -DDEBUG -DDEBUG_LOCKORDER  -DDEBUG_LOCKORDER -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -I/usr/local/opt/berkeley-db@4/include -DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0\r\n  CXX           = clang++ -std=c++11\r\n  CXXFLAGS      =  -O0 -g3 -ftrapv  -Wstack-protector -fstack-protector-all  -Wall -Wextra -Wformat -Wvla -Wswitch -Wformat-security -Wthread-safety-analysis -Wrange-loop-analysis -Wredundant-decls  -Wno-unused-parameter -Wno-self-assign -Wno-unused-local-typedef -Wno-deprecated-register -Wno-implicit-fallthrough\r\n  LDFLAGS       = -pthread    -Wl,-headerpad_max_install_names -Wl,-dead_strip\r\n  ARFLAGS       = cr\r\n```\r\n\r\nThe main difference in `./configure` output is the `CPPFLAGS` and `CXX` lines. Maybe it's the ccache issue?",
      "created_at" : "2019-10-22T13:51:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17114#issuecomment-544972590",
      "id" : 544972590,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17114",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NDk3MjU5MA==",
      "updated_at" : "2019-10-22T13:51:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/544972590",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7646953?v=4",
         "events_url" : "https://api.github.com/users/mrwhythat/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mrwhythat/followers",
         "following_url" : "https://api.github.com/users/mrwhythat/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mrwhythat/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mrwhythat",
         "id" : 7646953,
         "login" : "mrwhythat",
         "node_id" : "MDQ6VXNlcjc2NDY5NTM=",
         "organizations_url" : "https://api.github.com/users/mrwhythat/orgs",
         "received_events_url" : "https://api.github.com/users/mrwhythat/received_events",
         "repos_url" : "https://api.github.com/users/mrwhythat/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mrwhythat/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mrwhythat/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mrwhythat"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This looks more like an issue with Apple Clangs sanitizer support, which isn't comprehensive, and not related to Catalina (I can repro on 10.14). I'd suggest using LLVM Clang instead.",
      "created_at" : "2020-02-03T01:03:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17114#issuecomment-581199583",
      "id" : 581199583,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17114",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MTE5OTU4Mw==",
      "updated_at" : "2020-02-03T01:03:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/581199583",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
