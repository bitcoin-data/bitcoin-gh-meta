[
   {
      "author_association" : "MEMBER",
      "body" : "There is also a broader proposal to get rid of asserts in non-rpc code:\r\n\r\n*  [discussion] Dealing with assertions and optional consistency checking #4576",
      "created_at" : "2019-10-17T20:45:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17181#issuecomment-543354557",
      "id" : 543354557,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17181",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MzM1NDU1Nw==",
      "updated_at" : "2019-10-17T20:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543354557",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I tend to agree. I think assertion errors should be used for critical errors when the sane state of the process can't be guaranteed anymore. When internal assumptions don't hold anymore, and when continuing would have a high risk of causing further corruption.\r\n\r\nThen it's valid to crash.\r\n\r\nFor all other cases, please use some form of error handling. In RPC code, we use exceptions for this.",
      "created_at" : "2019-10-18T09:18:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17181#issuecomment-543623359",
      "id" : 543623359,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17181",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MzYyMzM1OQ==",
      "updated_at" : "2019-10-18T09:18:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543623359",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I would encourage more use of `std::logic_error` instead of asserts. I see logic errors and asserts as semantically equivalent, both indicating the presence of bugs, but logic_errors working better with unit tests. I think the suggested macro could be a good idea, because `if (cond) throw std::logic_error(strprintf(...))` is pretty verbose, and I think that discourages use. (Grepping for logic_error` I think every existing logic_error throw actually comes from me and no one other bitcoin developer has written one.)\r\n\r\nHowever, I don't think it would be a good idea to ever catch `std::logic_error` outside of unit tests. I think that defeats the major advantage of logic_errors as logical assertions compatible with having good test coverage.\r\n\r\nIf the goal here is better isolation from nonfatal bugs in RPCs, I think I'd suggest instead defining a new `NonfatalError` class inheriting from `std::exception`, a `CHECK_NONFATAL` or similar macro throwing nonfatal error exceptions, and code to catch and handle those exceptions somewhere in the RPC framework.",
      "created_at" : "2019-10-18T10:23:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17181#issuecomment-543657302",
      "id" : 543657302,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17181",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MzY1NzMwMg==",
      "updated_at" : "2019-10-18T10:23:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543657302",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Going off previous suggestion, `CHECK_NONFATAL` / `NonFatalCheckError` might be more consistent naming",
      "created_at" : "2019-10-18T10:38:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17181#issuecomment-543664462",
      "id" : 543664462,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17181",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MzY2NDQ2Mg==",
      "updated_at" : "2019-10-18T10:38:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543664462",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't understand the rationale for not catching `logic_error`s from rpc threads and returning them as a verbose string to the caller. We already do that right now. Are you advocating to not catch them and crash? There shouldn't be any fatal error in rpc code that would warrant a crash. The only case I can think of is a rpc thread calling into validation and running into a database error, but then validation will take care of aborting the whole program.",
      "created_at" : "2019-10-18T13:37:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17181#issuecomment-543750750",
      "id" : 543750750,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17181",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Mzc1MDc1MA==",
      "updated_at" : "2019-10-18T13:37:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543750750",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Every time I have ever used `std::logic_error`, I've used it to mean that I've encountered a bug and I want the program to crash. If I found a bug and don't want the program to crash, I would use a different exception like `std::runtime_error` or a custom exception like the suggested `CHECK_NONFATAL` / `NonFatalCheckError`. Again, I think the nice thing about `logic_error` is that it can provide the same semantics as `assert` without getting in the way of unit test coverage. If we start catching `logic_error` exceptions then it loses those advantages because I no longer know what to expect when I throw it.\r\n\r\n> We already do that right now.\r\n\r\nlogic_error doesn't inherit from runtime_error, so I hope this isn't the case\r\n\r\n> There shouldn't be any fatal error in rpc code that would warrant a crash\r\n\r\nThis is subjective and is something reasonable people can disagree about. But I think it would be best for authors who add checks to clearly distinguish cases where they do and don't want crashes by using `assert` or `logic_error` in fatal cases, and `CHECK_NONFATAL` or `std::runtime_error` or similar in nonfatal cases.\r\n\r\nI'm fully onboard with your original suggestion to get rid of asserts in RPC code. All I'm suggesting is that instead of replacing them with `logic_error` throws, you replace them with something like `NonFatalCheckError` throws. You already proposed defining a custom `THROW_LOGIC_ERROR_IF_ASSERT_FAILS` macro, so I don't see what objection you would have to a shorter, clearer `CHECK_NONFATAL` macro instead.",
      "created_at" : "2019-10-18T14:18:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17181#issuecomment-543768402",
      "id" : 543768402,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17181",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Mzc2ODQwMg==",
      "updated_at" : "2019-10-18T14:18:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543768402",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Oops, it turns out we actually do have a lot of code catching std::exception, not std::runtime_error. So maybe std::logic_error is not as useful as I thought it was. I don't think it'i a good idea to catch std::exception without rethrowing or exiting, but if we're already doing that, then there are fewer practical consequences to indiscriminately using `logic_error` for both fatal and nonfatal errors like you are suggesting. I still think it would be better for clarity to use a distinct exception type if you are going out of your way to define a new custom macro. But it does look like our current code is bad enough that using std::logic_error wouldn't be worse in a practical way right now.",
      "created_at" : "2019-10-18T14:39:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17181#issuecomment-543777432",
      "id" : 543777432,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17181",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Mzc3NzQzMg==",
      "updated_at" : "2019-10-18T14:39:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543777432",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
