[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">We can forward it to these two groups IN ADDITION to forwarding to (1 or 2) peers, if there is a belief that this is might affect their security. The bandwidth overhead would be obviously very low.\r\n\r\nIt is good for SPV nodes to get addrs sent to them, but it doesn't benefit the network as much as sending addrs to a full node. Ensuring addrs go to 2 full node peers without excluding SPV nodes seems to capture the requirements well.",
      "created_at" : "2019-10-18T21:45:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-543965236",
      "id" : 543965236,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Mzk2NTIzNg==",
      "updated_at" : "2019-10-18T21:45:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543965236",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nThanks for working on this!",
      "created_at" : "2019-10-20T14:20:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-544256694",
      "id" : 544256694,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NDI1NjY5NA==",
      "updated_at" : "2019-10-20T14:20:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/544256694",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It is good for SPV nodes to get addrs sent to them\r\n\r\nDo you mean *unsolicited* addrs? If so, I tend to disagree. That would make it harder to run a bandwidth efficient non-addr-relay node (e.g. an \"SPV node\"). I think that addr messages should only be gossiped to bip-155 nodes or network nodes (detectable via service bit). All other nodes should send a `getaddr` or `getaddrv2` p2p message to solicit addresses.",
      "created_at" : "2019-10-22T19:46:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-545123214",
      "id" : 545123214,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTEyMzIxNA==",
      "updated_at" : "2019-10-22T19:46:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545123214",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think it's a bit more nuanced than that.\r\n\r\nIn an ideal world, I think light clients would participate in local IP address management. Perhaps they wouldn't relay addresses themselves, but even if not, they should be learning from IP addresses that are gossiped around.\r\n\r\nIn reality it seems that none of them do, and obviously gossipping IP addresses to nodes that are just going to ignore them is pointless.\r\n\r\n",
      "created_at" : "2019-10-22T19:53:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-545125684",
      "id" : 545125684,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NTEyNTY4NA==",
      "updated_at" : "2019-10-22T19:53:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545125684",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I wanted to note that one SPV client I'm aware of does (or at least did) use addr messages to find nodes.  E.g., see this code:\r\n\r\n- https://github.com/breadwallet/breadwallet-core/blob/494aa99ed61df24d13e45f6b335cda192c1b765c/bitcoin/BRPeer.c#L268\r\n\r\nHowever, that wallet also uses BIP37 bloom filters, so I don't know what their strategy will be going forward with regards to using the P2P protocol.  Directly relevant to this PR, it looks like they don't accept unsolicited addr messages anyway---they only accept responses to a getaddr message: https://github.com/breadwallet/breadwallet-core/blob/494aa99ed61df24d13e45f6b335cda192c1b765c/bitcoin/BRPeer.c#L282",
      "created_at" : "2019-11-03T15:29:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-549148189",
      "id" : 549148189,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTE0ODE4OQ==",
      "updated_at" : "2019-11-03T15:29:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549148189",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "So, it seems like most of us agree that we should allow light clients to request addrs, and we should **not** send them unsolicited addr messages assuming they forward them.\r\n\r\nJust wanted to clarify, it is exactly what this PR does.",
      "created_at" : "2019-11-05T18:48:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-549964175",
      "id" : 549964175,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTk2NDE3NQ==",
      "updated_at" : "2019-11-05T18:48:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549964175",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I updated the script to account for black holes and be more precise in general (original post is updated to reflect new numbers).\r\nThe result is: current behavior is actually not as bad as I thought.\r\nI still think it's worth merging it though, especially because it will take a while for us to figure out all addrV2 stuff.\r\nSo let's save some bandwidth and make address relay be more effective for the cost of merging one line.",
      "created_at" : "2019-12-01T18:09:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-560138545",
      "id" : 560138545,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MDEzODU0NQ==",
      "updated_at" : "2019-12-01T18:59:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/560138545",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@naumenkogs \r\nIf I understand you correctly this commit now excludes sending addrs to non-forward nodes, but would send addrs to SPV clients that do forward addrs?\r\n\r\nI looked through the commit and it wasn't completely obvious to me, how `MayHaveUsefulAddressDB` excludes non-forwarding nodes?\r\n\r\nI know `MayHaveUsefulAddressDB` checks the service flags and I read the service flag descriptions in the code but the flags seem obscure to me i.e. I have trouble understanding precisely what they denote. Also one imagines that a non-forwarding node may have a \"useful address DB\" so the name of the function call is slightly deceptive.\r\n\r\nI would advocate for a comment explaining the intention of the call: \"We are calling `MayHaveUsefulAddressDB` to exclude non-forwarding nodes.\"",
      "created_at" : "2019-12-02T15:55:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-560457030",
      "id" : 560457030,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MDQ1NzAzMA==",
      "updated_at" : "2019-12-02T15:55:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/560457030",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@EthanHeilman\r\n>this commit now excludes sending addrs to non-forward nodes, but would send addrs to SPV clients that do forward addrs?\r\n\r\nNo. Unfortunately, right now there is no way to distinguish forwarding SPV nodes and non-forwarding SPV nodes.\r\nBased on the implementations of SPV nodes I found, none of them forward addrs, so I suggest not forwarding to *all* SPV nodes for now (until we progress with an explicit opt-in addr forwarding).\r\nAlso we found that some implementations would still *request* addrs, and after this PR they would still be allowed to do so.\r\n\r\nFyi, service bits ``NODE_NETWORK | NODE_NETWORK_LIMITED`` currently literally mean \"everything except SPV\".\r\n\r\nNow I agree that documenting and renaming the function would be useful here, will do.",
      "created_at" : "2019-12-02T18:49:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-560528800",
      "id" : 560528800,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2MDUyODgwMA==",
      "updated_at" : "2019-12-02T18:49:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/560528800",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19860 (Improve diversification of new connections: privacy and stability by naumenkogs)\n* #19858 (Periodically make block-relay connections and sync headers by sdaftuar)\n* #19763 (net: don't try to relay to the address' originator by vasild)\n* #19724 ([net] Cleanup connection types- followups by amitiuttarwar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-01-17T07:45:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-575514104",
      "id" : 575514104,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTUxNDEwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-02T21:22:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575514104",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Here is a functional test that demonstrates this patch works as intended.\r\n\r\n<details>\r\n<summary>functional test</summary>\r\n\r\n```diff\r\ndiff --git c/test/functional/p2p_addr_relay.py i/test/functional/p2p_addr_relay.py\r\nnew file mode 100755\r\nindex 000000000..7b74888f0\r\n--- /dev/null\r\n+++ i/test/functional/p2p_addr_relay.py\r\n@@ -0,0 +1,75 @@\r\n+#!/usr/bin/env python3\r\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\r\n+# Distributed under the MIT software license, see the accompanying\r\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n+\"\"\"Tests address relaying to SPV nodes (aka clients aka ~(NODE_NETWORK | NODE_NETWORK_LIMITED))\r\n+\r\n+* set up nodeRelay (bitcoind)\r\n+* connect two mini nodes to nodeRelay - node1 and node2\r\n+* fire an \"addr message\" from node1 to nodeRelay\r\n+* observe if node2 will get the address relayed through nodeRelay\r\n+\r\n+Results should be:\r\n+\r\n+Without https://github.com/bitcoin/bitcoin/pull/17194:\r\n+node2 services=NODE_WITNESS | NODE_NETWORK_LIMITED -> relayed\r\n+node2 services=NODE_WITNESS | NODE_NETWORK -> relayed\r\n+node2 services=NODE_WITNESS -> relayed\r\n+\r\n+With https://github.com/bitcoin/bitcoin/pull/17194:\r\n+node2 services=NODE_WITNESS | NODE_NETWORK_LIMITED -> relayed\r\n+node2 services=NODE_WITNESS | NODE_NETWORK -> relayed\r\n+node2 services=NODE_WITNESS -> not relayed\r\n+\"\"\"\r\n+from test_framework.messages import CAddress, msg_addr, NODE_NETWORK, NODE_NETWORK_LIMITED, NODE_WITNESS\r\n+from test_framework.mininode import P2PInterface, mininode_lock\r\n+from test_framework.test_framework import BitcoinTestFramework\r\n+from test_framework.util import (\r\n+    assert_equal,\r\n+    wait_until,\r\n+)\r\n+\r\n+import time\r\n+\r\n+class P2Paddr(P2PInterface):\r\n+    def wait_for_addr(self, timeout=5):\r\n+        test_function = lambda: self.last_message.get(\"addr\")\r\n+        wait_until(test_function, timeout=timeout, lock=mininode_lock)\r\n+\r\n+class NodeNetworkLimitedTest(BitcoinTestFramework):\r\n+    def set_test_params(self):\r\n+        self.setup_clean_chain = True\r\n+        self.num_nodes = 1\r\n+        self.extra_args = [[]]\r\n+\r\n+    def setup_network(self):\r\n+        self.add_nodes(self.num_nodes, self.extra_args)\r\n+        self.start_nodes()\r\n+\r\n+    def run_test(self):\r\n+        nodeRelay = self.nodes[0]\r\n+\r\n+        node1 = nodeRelay.add_p2p_connection(P2Paddr(), services=NODE_WITNESS | NODE_NETWORK)\r\n+        #node2 = nodeRelay.add_p2p_connection(P2Paddr(), services=NODE_WITNESS | NODE_NETWORK)\r\n+        #node2 = nodeRelay.add_p2p_connection(P2Paddr(), services=NODE_WITNESS | NODE_NETWORK_LIMITED)\r\n+        node2 = nodeRelay.add_p2p_connection(P2Paddr(), services=NODE_WITNESS)\r\n+\r\n+        addr = CAddress()\r\n+        addr.time = int(time.time())\r\n+        addr.nServices = NODE_NETWORK | NODE_WITNESS\r\n+        addr.ip = \"123.123.123.123\"\r\n+        addr.port = 8333\r\n+\r\n+        msg = msg_addr()\r\n+        msg.addrs.append(addr)\r\n+\r\n+        self.log.info(\"Checking how nodeRelay relays the address it received from node1\")\r\n+\r\n+        node1.send_message(msg)\r\n+\r\n+        node2.wait_for_addr()\r\n+\r\n+        nodeRelay.disconnect_p2ps()\r\n+\r\n+if __name__ == '__main__':\r\n+    NodeNetworkLimitedTest().main()\r\ndiff --git c/src/net_processing.cpp i/src/net_processing.cpp\r\nindex 465a0c06e..795a9179f 100644\r\n--- c/src/net_processing.cpp\r\n+++ i/src/net_processing.cpp\r\n@@ -97,13 +97,16 @@ void EraseOrphansFor(NodeId peer);\r\n /** Increase a node's misbehavior score. */\r\n void Misbehaving(NodeId nodeid, int howmuch, const std::string& message=\"\") EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n \r\n /** Average delay between local address broadcasts in seconds. */\r\n static constexpr unsigned int AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL = 24 * 60 * 60;\r\n /** Average delay between peer address broadcasts in seconds. */\r\n-static const unsigned int AVG_ADDRESS_BROADCAST_INTERVAL = 30;\r\n+// Relay immediately, otherwise we may end up delaying the relay for a long\r\n+// time (without upper limit, see PoissonNextSend()) which makes the\r\n+// p2p_addr_relay.py test fragile because it waits for the relay.\r\n+static const unsigned int AVG_ADDRESS_BROADCAST_INTERVAL = 0;\r\n /** Average delay between trickled inventory transmissions in seconds.\r\n  *  Blocks and whitelisted receivers bypass this, outbound peers get half this delay. */\r\n static const unsigned int INVENTORY_BROADCAST_INTERVAL = 5;\r\n /** Maximum number of inventory items to send per transmission.\r\n  *  Limits the impact of low-fee transaction floods. */\r\n static constexpr unsigned int INVENTORY_BROADCAST_MAX = 7 * INVENTORY_BROADCAST_INTERVAL;\r\n@@ -1377,13 +1380,20 @@ static void RelayAddress(const CAddress& addr, bool fReachable, CConnman* connma\r\n     FastRandomContext insecure_rand;\r\n \r\n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\r\n     assert(nRelayNodes <= best.size());\r\n \r\n     auto sortfunc = [&best, &hasher, nRelayNodes](CNode* pnode) {\r\n-        if (pnode->nVersion >= CADDR_TIME_VERSION && pnode->IsAddrRelayPeer() && MayHaveUsefulAddressDB(pnode->nServices)) {\r\n+        if (pnode->nVersion >= CADDR_TIME_VERSION && pnode->IsAddrRelayPeer()\r\n+#if 1\r\n+                && MayHaveUsefulAddressDB(pnode->nServices)\r\n+#elif 1\r\n+                // same as above\r\n+                && !pnode->fClient\r\n+#endif\r\n+                ) {\r\n             uint64_t hashKey = CSipHasher(hasher).Write(pnode->GetId()).Finalize();\r\n             for (unsigned int i = 0; i < nRelayNodes; i++) {\r\n                  if (hashKey > best[i].first) {\r\n                      std::copy(best.begin() + i, best.begin() + nRelayNodes - 1, best.begin() + i + 1);\r\n                      best[i] = std::make_pair(hashKey, pnode);\r\n                      break;\r\n```\r\n</details>\r\n\r\nSince this PR is not getting traction for some time, if it looks like too risky behavioral change, what about making it optional under a newly introduced config option?",
      "created_at" : "2020-03-30T16:09:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-606093434",
      "id" : 606093434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjA5MzQzNA==",
      "updated_at" : "2020-03-30T16:09:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606093434",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@vasild  Thanks for the test! Will integrate it into this PR. \r\n\r\nI anticipate that there's not enough attention *not* because it's too risky, but rather just a natural thing. Maybe a lack of motivation.\r\nI would say that adding optional would make it even less attractive to review, because of new complexity.",
      "created_at" : "2020-03-30T19:16:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-606189322",
      "id" : 606189322,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjE4OTMyMg==",
      "updated_at" : "2020-03-30T19:16:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606189322",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, a config knob is not very attractive either.\r\n\r\nBtw I had to make this change in the code to make the test pass quickly and deterministically:\r\n\r\n```diff\r\n-static const unsigned int AVG_ADDRESS_BROADCAST_INTERVAL = 30;\r\n+// Relay immediately, otherwise we may end up delaying the relay for a long\r\n+// time (without upper limit, see PoissonNextSend()) which makes the\r\n+// p2p_addr_relay.py test fragile because it waits for the relay.\r\n+static const unsigned int AVG_ADDRESS_BROADCAST_INTERVAL = 0;\r\n```\r\n\r\nIt cannot be added to the repository in its current form, but is good enough for manual testing. Maybe I overlooked something and it can be done without requiring changes to the code?",
      "created_at" : "2020-03-30T19:46:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-606207494",
      "id" : 606207494,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjIwNzQ5NA==",
      "updated_at" : "2020-03-30T19:46:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606207494",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept and code review ACK 644eae6558b5becfdd8031ca83d6b92f4467cf3c\r\n\r\nGiven evidence that non-full-nodes don't do anything with unsollicited addr relays, and the fact that GETADDR still works, I think it's fine to drop relay to them.\r\n\r\nIt's probably worth announcing this on the bitcoin-dev mailinglist, to ask for comments, and suggest that if there are exceptions, we can work on a service flag for explicitly opting into addr relay.",
      "created_at" : "2020-07-07T19:23:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-655072930",
      "id" : 655072930,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NTA3MjkzMA==",
      "updated_at" : "2020-07-07T19:23:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655072930",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery @amitiuttarwar Did you want to take a look here?",
      "created_at" : "2020-07-26T05:05:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-663936382",
      "id" : 663936382,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzkzNjM4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-26T05:05:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663936382",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-07-26T18:49:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-664026089",
      "id" : 664026089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDAyNjA4OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-26T18:49:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664026089",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If the goal is to ensure that ADDR gossips don't disappear into a black hole, then I don't think this is the correct solution.\r\n\r\n> Ensuring addrs go to 2 full node peers without excluding SPV nodes seems to capture the requirements well.\r\n\r\nThis seems like a much better solution. We lose nothing by gossiping an address to SPV peers, as long as we also gossip to two \"address relay\" peers.\r\n\r\nWe don't know whether there are clients that rely on receiving address gossips. After this PR, SPV clients can still request addresses using GETADDR, but we only permit one GETADDR request per connection. If an SPV client wants to request fresh addresses, they'd need to disconnect-reconnect-GETADDR, which seems undesirable.\r\n\r\n> `<aj> how about just biassing against picking peers for the 1 or 2 to relay for if those peers haven't sent us ADDR messages already, if that makes sense?`\r\n\r\n(http://www.erisian.com.au/bitcoin-core-dev/log-2019-10-17.html#l-591)\r\n\r\nThis seems even better to me. What we actually care about is whether the peer is going to relay the address to more peers, not whether it's advertised that it's able to serve blocks. Whether the peer has previously sent us addresses is our best heuristic for this.",
      "created_at" : "2020-07-27T10:31:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-664287998",
      "id" : 664287998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDI4Nzk5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-28T16:26:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664287998",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery \r\nI don't have a strong opinion on the approach, indeed the goal is to make sure ADDRs don't go into black hole. ~~Otherwise, a node with 8 outbound peers and 100 inbound SPVs will be self-announcing very poorly.~~ (wrong, see [response](https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-665618327))\r\n\r\nWe seem to have 2 options: \r\n- don't send to SPV\r\n- make sure we choose those who sent us ADDR before\r\n\r\nThe only real difference is that the first option (current implementation 3a1629af23c101f19b371c68155411b0048409f4) might exclude some SPV implementations which handle ADDR messages (and send ADDR messages, as required per second option to reliably work), and nobody seen these clients so far. I guess we can ask on the ML whether they exist, but the lack of response won't prove the absence :)\r\n\r\nI don't mind switching to the second option, but since the activity in this PR is low, I would do it after *Concept ACK 2nd option* from someone?",
      "created_at" : "2020-07-28T10:43:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-664968052",
      "id" : 664968052,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDk2ODA1Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T11:57:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664968052",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If someone is interested in writing the concept ACK of the second option get in touch with me, happy to review your code provide input. Otherwise I might try to write this.",
      "created_at" : "2020-07-28T15:58:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-665125416",
      "id" : 665125416,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTEyNTQxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-28T15:58:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665125416",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Otherwise, a node with 8 outbound peers and 100 inbound SPVs will be self-announcing very poorly.\r\n\r\nThis isn't true. We self-announce our address to _all_ peers on a timer:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/a76ccb01b96424ef207762b704d81b9d2497f3d2/src/net_processing.cpp#L4058-L4065\r\n\r\n(although in practice most of the time this won't actually result in our address being advertised since it won't have cycled out of `m_addr_known` yet).\r\n\r\nIt _is_ true that we'll be ineffective at relaying new addresses that we hear about.",
      "created_at" : "2020-07-29T11:50:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-665618327",
      "id" : 665618327,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTYxODMyNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-29T11:50:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665618327",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-09-03T13:22:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-686486960",
      "id" : 686486960,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NjQ4Njk2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-03T13:22:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686486960",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@naumenkogs checking in on the status of the PR. Is this something you plan to continue to pursue?",
      "created_at" : "2020-12-08T15:03:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-740673593",
      "id" : 740673593,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MDY3MzU5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-08T15:03:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740673593",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If I understand the code at  \r\nhttps://github.com/bitcoin/bitcoin/blob/da69d9965a112c6421fce5649b5a18beb7513526/src/net_processing.cpp#L2783-L2786\r\ncorrectly, the assumption of 120 waves of relay in the simulation is too much, because with `nSince = nNow - 10 * 60`, gossip relay for a given addr will just end 10 minutes (=20 waves on average) after the self-announcement, assuming synchronized clocks. So I would expect relay to be worse than the simulations suggest.",
      "created_at" : "2021-06-18T20:20:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-864255228",
      "id" : 864255228,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NDI1NTIyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-18T20:20:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864255228",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing this because it was partially handled by #21528, but also arguments just get outdated after that PR, and the code as well.",
      "created_at" : "2021-09-15T13:00:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17194#issuecomment-919996728",
      "id" : 919996728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
      "node_id" : "IC_kwDOABII58421gk4",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-15T13:00:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/919996728",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   }
]
