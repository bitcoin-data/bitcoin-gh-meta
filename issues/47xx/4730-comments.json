[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4730#discussion_r16446603"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4730"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/16446603"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd write this as CHECK(numTest.SetNumStr(\"82\"));\n",
      "commit_id" : "dc271fc025d219c18428a4d36dbc372c8e457908",
      "created_at" : "2014-08-19T21:54:39Z",
      "diff_hunk" : "@@ -0,0 +1,264 @@\n+// Copyright 2014 BitPay, Inc.\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <stdint.h>\n+#include <vector>\n+#include <string>\n+#include <map>\n+#include \"univalue/univalue.h\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+using namespace std;\n+\n+BOOST_AUTO_TEST_SUITE(univalue_tests)\n+\n+BOOST_AUTO_TEST_CASE(univalue_constructor)\n+{\n+    UniValue v1;\n+    BOOST_CHECK_EQUAL(v1.isNull(), true);\n+\n+    UniValue v2(UniValue::VSTR);\n+    BOOST_CHECK_EQUAL(v2.isStr(), true);\n+\n+    UniValue v3(UniValue::VSTR, \"foo\");\n+    BOOST_CHECK_EQUAL(v3.isStr(), true);\n+    BOOST_CHECK_EQUAL(v3.getValStr(), \"foo\");\n+\n+    UniValue numTest;\n+    bool rc = numTest.setNumStr(\"82\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4730#discussion_r16446603",
      "id" : 16446603,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDQ2NjAz",
      "original_commit_id" : "0c4444a318932d87001106ed80d4edba57ca9f3b",
      "original_line" : null,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/test/univalue_tests.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4730",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/16446603/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-20T05:09:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/16446603",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4730_dc271fc025d219c18428a4d36dbc372c8e457908/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
      "created_at" : "2014-08-20T05:22:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4730#issuecomment-52735178",
      "id" : 52735178,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4730",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyNzM1MTc4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/52735178/reactions"
      },
      "updated_at" : "2014-08-20T05:22:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/52735178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=4",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "node_id" : "MDQ6VXNlcjIxMTA5MDc=",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ut ACK.\n",
      "created_at" : "2014-08-20T22:35:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4730#issuecomment-52854856",
      "id" : 52854856,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4730",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyODU0ODU2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/52854856/reactions"
      },
      "updated_at" : "2014-08-20T22:35:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/52854856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4730#discussion_r16512585"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4730"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/16512585"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It seems most of these checks assume pretty sane input. It'd be nice to see some exotic and/or blatantly wrong set's here, in order to test that they work or fail as anticipated.\nfor ex: \nsetInt(INT_MAX+1LL);\nsetNumStr(\"-2147483647\")\nsetNumStr(\"1.1\");\nsetStr(\"2\") && isStr()/isNum()\netc.\n\nFor those, I really don't know what the expected results would be, so I suppose it'd serve as some poor-man's documentation as well.\n",
      "commit_id" : "dc271fc025d219c18428a4d36dbc372c8e457908",
      "created_at" : "2014-08-20T23:22:55Z",
      "diff_hunk" : "@@ -0,0 +1,275 @@\n+// Copyright 2014 BitPay, Inc.\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <stdint.h>\n+#include <vector>\n+#include <string>\n+#include <map>\n+#include \"univalue/univalue.h\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+using namespace std;\n+\n+BOOST_AUTO_TEST_SUITE(univalue_tests)\n+\n+BOOST_AUTO_TEST_CASE(univalue_constructor)\n+{\n+    UniValue v1;\n+    BOOST_CHECK(v1.isNull());\n+\n+    UniValue v2(UniValue::VSTR);\n+    BOOST_CHECK(v2.isStr());\n+\n+    UniValue v3(UniValue::VSTR, \"foo\");\n+    BOOST_CHECK(v3.isStr());\n+    BOOST_CHECK_EQUAL(v3.getValStr(), \"foo\");\n+\n+    UniValue numTest;\n+    BOOST_CHECK(numTest.setNumStr(\"82\"));\n+    BOOST_CHECK(numTest.isNum());\n+    BOOST_CHECK_EQUAL(numTest.getValStr(), \"82\");\n+\n+    uint64_t vu64 = 82;\n+    UniValue v4(vu64);\n+    BOOST_CHECK(v4.isNum());\n+    BOOST_CHECK_EQUAL(v4.getValStr(), \"82\");\n+\n+    int64_t vi64 = -82;\n+    UniValue v5(vi64);\n+    BOOST_CHECK(v5.isNum());\n+    BOOST_CHECK_EQUAL(v5.getValStr(), \"-82\");\n+\n+    int vi = -688;\n+    UniValue v6(vi);\n+    BOOST_CHECK(v6.isNum());\n+    BOOST_CHECK_EQUAL(v6.getValStr(), \"-688\");\n+\n+    double vd = -7.21;\n+    UniValue v7(vd);\n+    BOOST_CHECK(v7.isNum());\n+    BOOST_CHECK_EQUAL(v7.getValStr(), \"-7.21\");\n+\n+    string vs(\"yawn\");\n+    UniValue v8(vs);\n+    BOOST_CHECK(v8.isStr());\n+    BOOST_CHECK_EQUAL(v8.getValStr(), \"yawn\");\n+\n+    const char *vcs = \"zappa\";\n+    UniValue v9(vcs);\n+    BOOST_CHECK(v9.isStr());\n+    BOOST_CHECK_EQUAL(v9.getValStr(), \"zappa\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(univalue_set)\n+{\n+    UniValue v(UniValue::VSTR, \"foo\");\n+    v.clear();\n+    BOOST_CHECK(v.isNull());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"\");\n+\n+    BOOST_CHECK(v.setObject());\n+    BOOST_CHECK(v.isObject());\n+    BOOST_CHECK_EQUAL(v.count(), 0);\n+    BOOST_CHECK_EQUAL(v.getType(), UniValue::VOBJ);\n+    BOOST_CHECK(v.empty());\n+\n+    BOOST_CHECK(v.setArray());\n+    BOOST_CHECK(v.isArray());\n+    BOOST_CHECK_EQUAL(v.count(), 0);\n+\n+    BOOST_CHECK(v.setStr(\"zum\"));\n+    BOOST_CHECK(v.isStr());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"zum\");\n+\n+    BOOST_CHECK(v.setFloat(-1.01));\n+    BOOST_CHECK(v.isNum());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"-1.01\");\n+\n+    BOOST_CHECK(v.setInt((int)1023));\n+    BOOST_CHECK(v.isNum());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"1023\");\n+\n+    BOOST_CHECK(v.setInt((int64_t)-1023LL));\n+    BOOST_CHECK(v.isNum());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"-1023\");\n+\n+    BOOST_CHECK(v.setInt((uint64_t)1023ULL));\n+    BOOST_CHECK(v.isNum());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"1023\");\n+\n+    BOOST_CHECK(v.setNumStr(\"-688\"));\n+    BOOST_CHECK(v.isNum());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"-688\");\n+\n+    BOOST_CHECK(v.setBool(false));\n+    BOOST_CHECK_EQUAL(v.isBool(), true);\n+    BOOST_CHECK_EQUAL(v.isTrue(), false);\n+    BOOST_CHECK_EQUAL(v.isFalse(), true);\n+    BOOST_CHECK_EQUAL(v.getBool(), false);\n+\n+    BOOST_CHECK(v.setBool(true));\n+    BOOST_CHECK_EQUAL(v.isBool(), true);\n+    BOOST_CHECK_EQUAL(v.isTrue(), true);\n+    BOOST_CHECK_EQUAL(v.isFalse(), false);\n+    BOOST_CHECK_EQUAL(v.getBool(), true);\n+\n+    BOOST_CHECK(!v.setNumStr(\"zombocom\"));\n+\n+    BOOST_CHECK(v.setNull());\n+    BOOST_CHECK(v.isNull());\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4730#discussion_r16512585",
      "id" : 16512585,
      "line" : 122,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTEyNTg1",
      "original_commit_id" : "dc271fc025d219c18428a4d36dbc372c8e457908",
      "original_line" : null,
      "original_position" : 122,
      "original_start_line" : null,
      "path" : "src/test/univalue_tests.cpp",
      "position" : 122,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4730",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/16512585/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-20T23:22:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/16512585",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4730#discussion_r16512774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4730"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/16512774"
         }
      },
      "author_association" : "MEMBER",
      "body" : "welcome to zombocom!\n",
      "commit_id" : "dc271fc025d219c18428a4d36dbc372c8e457908",
      "created_at" : "2014-08-20T23:27:34Z",
      "diff_hunk" : "@@ -0,0 +1,275 @@\n+// Copyright 2014 BitPay, Inc.\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <stdint.h>\n+#include <vector>\n+#include <string>\n+#include <map>\n+#include \"univalue/univalue.h\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+using namespace std;\n+\n+BOOST_AUTO_TEST_SUITE(univalue_tests)\n+\n+BOOST_AUTO_TEST_CASE(univalue_constructor)\n+{\n+    UniValue v1;\n+    BOOST_CHECK(v1.isNull());\n+\n+    UniValue v2(UniValue::VSTR);\n+    BOOST_CHECK(v2.isStr());\n+\n+    UniValue v3(UniValue::VSTR, \"foo\");\n+    BOOST_CHECK(v3.isStr());\n+    BOOST_CHECK_EQUAL(v3.getValStr(), \"foo\");\n+\n+    UniValue numTest;\n+    BOOST_CHECK(numTest.setNumStr(\"82\"));\n+    BOOST_CHECK(numTest.isNum());\n+    BOOST_CHECK_EQUAL(numTest.getValStr(), \"82\");\n+\n+    uint64_t vu64 = 82;\n+    UniValue v4(vu64);\n+    BOOST_CHECK(v4.isNum());\n+    BOOST_CHECK_EQUAL(v4.getValStr(), \"82\");\n+\n+    int64_t vi64 = -82;\n+    UniValue v5(vi64);\n+    BOOST_CHECK(v5.isNum());\n+    BOOST_CHECK_EQUAL(v5.getValStr(), \"-82\");\n+\n+    int vi = -688;\n+    UniValue v6(vi);\n+    BOOST_CHECK(v6.isNum());\n+    BOOST_CHECK_EQUAL(v6.getValStr(), \"-688\");\n+\n+    double vd = -7.21;\n+    UniValue v7(vd);\n+    BOOST_CHECK(v7.isNum());\n+    BOOST_CHECK_EQUAL(v7.getValStr(), \"-7.21\");\n+\n+    string vs(\"yawn\");\n+    UniValue v8(vs);\n+    BOOST_CHECK(v8.isStr());\n+    BOOST_CHECK_EQUAL(v8.getValStr(), \"yawn\");\n+\n+    const char *vcs = \"zappa\";\n+    UniValue v9(vcs);\n+    BOOST_CHECK(v9.isStr());\n+    BOOST_CHECK_EQUAL(v9.getValStr(), \"zappa\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(univalue_set)\n+{\n+    UniValue v(UniValue::VSTR, \"foo\");\n+    v.clear();\n+    BOOST_CHECK(v.isNull());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"\");\n+\n+    BOOST_CHECK(v.setObject());\n+    BOOST_CHECK(v.isObject());\n+    BOOST_CHECK_EQUAL(v.count(), 0);\n+    BOOST_CHECK_EQUAL(v.getType(), UniValue::VOBJ);\n+    BOOST_CHECK(v.empty());\n+\n+    BOOST_CHECK(v.setArray());\n+    BOOST_CHECK(v.isArray());\n+    BOOST_CHECK_EQUAL(v.count(), 0);\n+\n+    BOOST_CHECK(v.setStr(\"zum\"));\n+    BOOST_CHECK(v.isStr());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"zum\");\n+\n+    BOOST_CHECK(v.setFloat(-1.01));\n+    BOOST_CHECK(v.isNum());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"-1.01\");\n+\n+    BOOST_CHECK(v.setInt((int)1023));\n+    BOOST_CHECK(v.isNum());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"1023\");\n+\n+    BOOST_CHECK(v.setInt((int64_t)-1023LL));\n+    BOOST_CHECK(v.isNum());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"-1023\");\n+\n+    BOOST_CHECK(v.setInt((uint64_t)1023ULL));\n+    BOOST_CHECK(v.isNum());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"1023\");\n+\n+    BOOST_CHECK(v.setNumStr(\"-688\"));\n+    BOOST_CHECK(v.isNum());\n+    BOOST_CHECK_EQUAL(v.getValStr(), \"-688\");\n+\n+    BOOST_CHECK(v.setBool(false));\n+    BOOST_CHECK_EQUAL(v.isBool(), true);\n+    BOOST_CHECK_EQUAL(v.isTrue(), false);\n+    BOOST_CHECK_EQUAL(v.isFalse(), true);\n+    BOOST_CHECK_EQUAL(v.getBool(), false);\n+\n+    BOOST_CHECK(v.setBool(true));\n+    BOOST_CHECK_EQUAL(v.isBool(), true);\n+    BOOST_CHECK_EQUAL(v.isTrue(), true);\n+    BOOST_CHECK_EQUAL(v.isFalse(), false);\n+    BOOST_CHECK_EQUAL(v.getBool(), true);\n+\n+    BOOST_CHECK(!v.setNumStr(\"zombocom\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4730#discussion_r16512774",
      "id" : 16512774,
      "line" : 118,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTEyNzc0",
      "original_commit_id" : "dc271fc025d219c18428a4d36dbc372c8e457908",
      "original_line" : null,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/test/univalue_tests.cpp",
      "position" : 118,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4730",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/16512774/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-20T23:27:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/16512774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
