[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15649](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15649.html) (Add ChaCha20Poly1305@Bitcoin AEAD by jonasschnelli)\n* [#15519](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15519.html) (Add Poly1305 implementation by jonasschnelli)\n* [#15512](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15512.html) (Add ChaCha20 encryption option (XOR) by jonasschnelli)\n* [#14047](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14047.html) (Add HKDF_HMAC256_L32 and method to negate a private key by jonasschnelli)\n* [#14032](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14032.html) (Add p2p layer encryption with ECDH/ChaCha20Poly1305 by jonasschnelli)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-08-24T15:49:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-415800611",
      "id" : 415800611,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNTgwMDYxMQ==",
      "updated_at" : "2019-03-22T23:37:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415800611",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Why not [reuse the existing ChaCha20](https://github.com/bitcoin/bitcoin/compare/master...DesWurstes:master)?",
      "created_at" : "2018-08-25T07:09:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-415947069",
      "id" : 415947069,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNTk0NzA2OQ==",
      "updated_at" : "2018-08-25T07:09:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415947069",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/23437045?v=4",
         "events_url" : "https://api.github.com/users/DesWurstes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DesWurstes/followers",
         "following_url" : "https://api.github.com/users/DesWurstes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DesWurstes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DesWurstes",
         "id" : 23437045,
         "login" : "DesWurstes",
         "node_id" : "MDQ6VXNlcjIzNDM3MDQ1",
         "organizations_url" : "https://api.github.com/users/DesWurstes/orgs",
         "received_events_url" : "https://api.github.com/users/DesWurstes/received_events",
         "repos_url" : "https://api.github.com/users/DesWurstes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DesWurstes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DesWurstes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DesWurstes"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@DesWurstes: see PR description (out of scope).",
      "created_at" : "2018-08-27T11:59:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-416203421",
      "id" : 416203421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNjIwMzQyMQ==",
      "updated_at" : "2018-08-27T11:59:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416203421",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added benchmark for the AEAD (and for direct comparison also added the dbl-SHA (HASH) benchmark).\r\nBenchmarking 1MB data as well as 256bytes.\r\n\r\nMy system reports (!we compare SSE4 SHA256 vs non-optimized chacha20):\r\n```\r\n# Benchmark, evals, iterations, total, min, max, median\r\nCHACHA20POLY1305AEAD_BIG, 5, 340, 3.68279, 0.00215035, 0.00219169, 0.00216025\r\nCHACHA20POLY1305AEAD_SMALL, 5, 250000, 1.08673, 8.51516e-07, 8.93585e-07, 8.61119e-07\r\nHASH256_BIG, 5, 340, 3.81384, 0.00222589, 0.00226436, 0.00224086\r\nHASH256_SMALL, 5, 250000, 1.1305, 8.96669e-07, 9.15482e-07, 9.03866e-07\r\n```",
      "created_at" : "2018-08-27T19:37:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-416342883",
      "id" : 416342883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNjM0Mjg4Mw==",
      "updated_at" : "2018-08-27T19:37:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416342883",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r213763831"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213763831"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems this should include windows.h",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-08-29T17:17:56Z",
      "diff_hunk" : "@@ -0,0 +1,104 @@\n+#include <crypto/chachapoly_aead.h>\n+\n+#define __STDC_WANT_LIB_EXT1__ 1\n+#include <crypto/poly1305.h>\n+#include <string.h>\n+\n+#include <compat/endian.h>\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char *b1, const unsigned char *b2, size_t n) {\n+  const unsigned char *p1 = b1, *p2 = b2;\n+  int ret = 0;\n+\n+  for (; n > 0; n--)\n+    ret |= *p1++ ^ *p2++;\n+  return (ret != 0);\n+}\n+\n+#endif /* TIMINGSAFE_BCMP */\n+\n+void _memory_cleanse(void *ptr, size_t len)\n+{\n+    memset(ptr, 0, len);\n+\n+    /* As best as we can tell, this is sufficient to break any optimisations that\n+       might try to eliminate \"superfluous\" memsets. If there's an easy way to\n+       detect memset_s, it would be better to use that. */\n+#if defined(_MSC_VER)\n+    SecureZeroMemory(ptr, len);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r213763831",
      "id" : 213763831,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzc2MzgzMQ==",
      "original_commit_id" : "90702f472e5c9e3370db2b51c8c5942e570ff83a",
      "original_position" : 30,
      "path" : "src/crypto/chachapoly_aead.cpp",
      "position" : null,
      "pull_request_review_id" : 150667667,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213763831",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214523031"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523031"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Typo found by `codespell`: endiannes",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-01T21:05:50Z",
      "diff_hunk" : "@@ -0,0 +1,22 @@\n+#ifndef BITCOIN_CRYPTO_CHACHAPOLY_AEAD_H\n+#define BITCOIN_CRYPTO_CHACHAPOLY_AEAD_H\n+\n+#include <crypto/chacha.h>\n+\n+#define CHACHA_KEYLEN 32 /* 2 x 256 bit keys */\n+\n+struct chachapolyaead_ctx {\n+  struct chacha_ctx main_ctx, header_ctx;\n+};\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *cpctx, const uint8_t *key,\n+                          int keylen);\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt);\n+\n+// extracts the LE 24bit (3byte) length from the AAD and puts it into a uint32_t (host endiannes)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214523031",
      "id" : 214523031,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUyMzAzMQ==",
      "original_commit_id" : "ac477bcf8bf37d0a49692161ed058fe3db884e50",
      "original_position" : 18,
      "path" : "src/crypto/chachapoly_aead.h",
      "position" : null,
      "pull_request_review_id" : 151603370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523031",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214533236"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214533236"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-02T08:47:05Z",
      "diff_hunk" : "@@ -0,0 +1,22 @@\n+#ifndef BITCOIN_CRYPTO_CHACHAPOLY_AEAD_H\n+#define BITCOIN_CRYPTO_CHACHAPOLY_AEAD_H\n+\n+#include <crypto/chacha.h>\n+\n+#define CHACHA_KEYLEN 32 /* 2 x 256 bit keys */\n+\n+struct chachapolyaead_ctx {\n+  struct chacha_ctx main_ctx, header_ctx;\n+};\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *cpctx, const uint8_t *key,\n+                          int keylen);\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt);\n+\n+// extracts the LE 24bit (3byte) length from the AAD and puts it into a uint32_t (host endiannes)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214533236",
      "id" : 214533236,
      "in_reply_to_id" : 214523031,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzMzIzNg==",
      "original_commit_id" : "ac477bcf8bf37d0a49692161ed058fe3db884e50",
      "original_position" : 18,
      "path" : "src/crypto/chachapoly_aead.h",
      "position" : null,
      "pull_request_review_id" : 151613678,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214533236",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214535827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214535827"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This would be much easier to verify against the RFC document if you parse a hex string. ",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-02T10:33:08Z",
      "diff_hunk" : "@@ -562,4 +564,198 @@ BOOST_AUTO_TEST_CASE(sha256d64)\n     }\n }\n \n+\n+BOOST_AUTO_TEST_CASE(chacha20poly1305_openssh)\n+{\n+    struct chacha20_testvector {\n+        uint8_t key[32];\n+        uint8_t nonce[8];\n+        uint8_t resulting_keystream[512];\n+        int keystream_check_size;\n+    };\n+\n+    struct poly1305_testvector {\n+        uint8_t input[64];\n+        int inputlen;\n+        uint8_t key[64];\n+        uint8_t resulting_tag[16];\n+    };\n+\n+    /*\n+       Testvectors have been taken from the draft RFC\n+       https://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-04#section-7\n+    */\n+\n+    static const struct chacha20_testvector chacha20_testvectors[] = {\n+        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214535827",
      "id" : 214535827,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNTgyNw==",
      "original_commit_id" : "995c41af1b11116db32fb64325308276e6c9615c",
      "original_position" : 46,
      "path" : "src/test/crypto_tests.cpp",
      "position" : 46,
      "pull_request_review_id" : 151616192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214535827",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536074"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why did you remove the [poly1305_init](https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna-32.h), [poly1305_update](https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna.c#L27), [poly1305_finish](https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna-32.h#L134) separation?",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-02T10:44:38Z",
      "diff_hunk" : "@@ -0,0 +1,198 @@\n+/*\n+ * Public Domain poly1305 from Andrew Moon\n+ * poly1305-donna-unrolled.c from https://github.com/floodyberry/poly1305-donna\n+ */\n+\n+/* $OpenBSD: poly1305.c,v 1.3 2013/12/19 22:57:13 djm Exp $ */\n+\n+#include <crypto/poly1305.h>\n+\n+#define mul32x32_64(a, b) ((uint64_t)(a) * (b))\n+\n+#define U8TO32_LE(p)                                                           \\\n+  (((uint32_t)((p)[0])) | ((uint32_t)((p)[1]) << 8) |                          \\\n+   ((uint32_t)((p)[2]) << 16) | ((uint32_t)((p)[3]) << 24))\n+\n+#define U32TO8_LE(p, v)                                                        \\\n+  do {                                                                         \\\n+    (p)[0] = (uint8_t)((v));                                                   \\\n+    (p)[1] = (uint8_t)((v) >> 8);                                              \\\n+    (p)[2] = (uint8_t)((v) >> 16);                                             \\\n+    (p)[3] = (uint8_t)((v) >> 24);                                             \\\n+  } while (0)\n+\n+void poly1305_auth(unsigned char out[POLY1305_TAGLEN], const unsigned char *m,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536074",
      "id" : 214536074,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNjA3NA==",
      "original_commit_id" : "09ec49ba31867187cecd631593d37bcc5f3ca72f",
      "original_position" : 24,
      "path" : "src/crypto/poly1305.cpp",
      "position" : 24,
      "pull_request_review_id" : 151616192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536074",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536163"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536163"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I can confirm this function in 09ec49ba31867187cecd631593d37bcc5f3ca72f is identical to the original at de624c626ea081929df000b09932dbc804eda51d, modulo some whitespace.",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-02T10:48:24Z",
      "diff_hunk" : "@@ -0,0 +1,215 @@\n+/*\n+chacha-merged.c version 20080118\n+D. J. Bernstein\n+Public domain.\n+*/\n+\n+#include <crypto/chacha.h>\n+\n+/* $OpenBSD: chacha.c,v 1.1 2013/11/21 00:45:44 djm Exp $ */\n+\n+typedef unsigned char u8;\n+typedef unsigned int u32;\n+\n+typedef struct chacha_ctx chacha_ctx;\n+\n+#define U8C(v) (v##U)\n+#define U32C(v) (v##U)\n+\n+#define U8V(v) ((u8)(v)&U8C(0xFF))\n+#define U32V(v) ((u32)(v)&U32C(0xFFFFFFFF))\n+\n+#define ROTL32(v, n) (U32V((v) << (n)) | ((v) >> (32 - (n))))\n+\n+#define U8TO32_LITTLE(p)                                                       \\\n+  (((u32)((p)[0])) | ((u32)((p)[1]) << 8) | ((u32)((p)[2]) << 16) |            \\\n+   ((u32)((p)[3]) << 24))\n+\n+#define U32TO8_LITTLE(p, v)                                                    \\\n+  do {                                                                         \\\n+    (p)[0] = U8V((v));                                                         \\\n+    (p)[1] = U8V((v) >> 8);                                                    \\\n+    (p)[2] = U8V((v) >> 16);                                                   \\\n+    (p)[3] = U8V((v) >> 24);                                                   \\\n+  } while (0)\n+\n+#define ROTATE(v, c) (ROTL32(v, c))\n+#define XOR(v, w) ((v) ^ (w))\n+#define PLUS(v, w) (U32V((v) + (w)))\n+#define PLUSONE(v) (PLUS((v), 1))\n+\n+#define QUARTERROUND(a, b, c, d)                                               \\\n+  a = PLUS(a, b);                                                              \\\n+  d = ROTATE(XOR(d, a), 16);                                                   \\\n+  c = PLUS(c, d);                                                              \\\n+  b = ROTATE(XOR(b, c), 12);                                                   \\\n+  a = PLUS(a, b);                                                              \\\n+  d = ROTATE(XOR(d, a), 8);                                                    \\\n+  c = PLUS(c, d);                                                              \\\n+  b = ROTATE(XOR(b, c), 7);\n+\n+static const char sigma[] = \"expand 32-byte k\";\n+static const char tau[] = \"expand 16-byte k\";\n+\n+void chacha_keysetup(chacha_ctx *x, const u8 *k, u32 kbits) {\n+  const char *constants;\n+\n+  x->input[4] = U8TO32_LITTLE(k + 0);\n+  x->input[5] = U8TO32_LITTLE(k + 4);\n+  x->input[6] = U8TO32_LITTLE(k + 8);\n+  x->input[7] = U8TO32_LITTLE(k + 12);\n+  if (kbits == 256) { /* recommended */\n+    k += 16;\n+    constants = sigma;\n+  } else { /* kbits == 128 */\n+    constants = tau;\n+  }\n+  x->input[8] = U8TO32_LITTLE(k + 0);\n+  x->input[9] = U8TO32_LITTLE(k + 4);\n+  x->input[10] = U8TO32_LITTLE(k + 8);\n+  x->input[11] = U8TO32_LITTLE(k + 12);\n+  x->input[0] = U8TO32_LITTLE(constants + 0);\n+  x->input[1] = U8TO32_LITTLE(constants + 4);\n+  x->input[2] = U8TO32_LITTLE(constants + 8);\n+  x->input[3] = U8TO32_LITTLE(constants + 12);\n+}\n+\n+void chacha_ivsetup(chacha_ctx *x, const u8 *iv, const u8 *counter) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536163",
      "id" : 214536163,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNjE2Mw==",
      "original_commit_id" : "09ec49ba31867187cecd631593d37bcc5f3ca72f",
      "original_position" : 77,
      "path" : "src/crypto/chacha.cpp",
      "position" : 77,
      "pull_request_review_id" : 151616192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536163",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Which separation? I took Andrew Moons implementation found at https://github.com/openssh/openssh-portable/blob/90e51d672711c19a36573be1785caf35019ae7a8/poly1305.c",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-02T10:58:55Z",
      "diff_hunk" : "@@ -0,0 +1,198 @@\n+/*\n+ * Public Domain poly1305 from Andrew Moon\n+ * poly1305-donna-unrolled.c from https://github.com/floodyberry/poly1305-donna\n+ */\n+\n+/* $OpenBSD: poly1305.c,v 1.3 2013/12/19 22:57:13 djm Exp $ */\n+\n+#include <crypto/poly1305.h>\n+\n+#define mul32x32_64(a, b) ((uint64_t)(a) * (b))\n+\n+#define U8TO32_LE(p)                                                           \\\n+  (((uint32_t)((p)[0])) | ((uint32_t)((p)[1]) << 8) |                          \\\n+   ((uint32_t)((p)[2]) << 16) | ((uint32_t)((p)[3]) << 24))\n+\n+#define U32TO8_LE(p, v)                                                        \\\n+  do {                                                                         \\\n+    (p)[0] = (uint8_t)((v));                                                   \\\n+    (p)[1] = (uint8_t)((v) >> 8);                                              \\\n+    (p)[2] = (uint8_t)((v) >> 16);                                             \\\n+    (p)[3] = (uint8_t)((v) >> 24);                                             \\\n+  } while (0)\n+\n+void poly1305_auth(unsigned char out[POLY1305_TAGLEN], const unsigned char *m,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536423",
      "id" : 214536423,
      "in_reply_to_id" : 214536074,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNjQyMw==",
      "original_commit_id" : "09ec49ba31867187cecd631593d37bcc5f3ca72f",
      "original_position" : 24,
      "path" : "src/crypto/poly1305.cpp",
      "position" : 24,
      "pull_request_review_id" : 151616778,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536423",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@Sjors The existing ChaCha20 implementation doesn't do the XORing and can therefore only be used for the RNG.",
      "created_at" : "2018-09-02T10:59:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-417921804",
      "id" : 417921804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzkyMTgwNA==",
      "updated_at" : "2018-09-02T10:59:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417921804",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536689"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536689"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, I see, in that case the source code URL at the top of the file is confusing; probably should add a link to Moons' implementation instead / in addition.",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-02T11:09:49Z",
      "diff_hunk" : "@@ -0,0 +1,198 @@\n+/*\n+ * Public Domain poly1305 from Andrew Moon\n+ * poly1305-donna-unrolled.c from https://github.com/floodyberry/poly1305-donna\n+ */\n+\n+/* $OpenBSD: poly1305.c,v 1.3 2013/12/19 22:57:13 djm Exp $ */\n+\n+#include <crypto/poly1305.h>\n+\n+#define mul32x32_64(a, b) ((uint64_t)(a) * (b))\n+\n+#define U8TO32_LE(p)                                                           \\\n+  (((uint32_t)((p)[0])) | ((uint32_t)((p)[1]) << 8) |                          \\\n+   ((uint32_t)((p)[2]) << 16) | ((uint32_t)((p)[3]) << 24))\n+\n+#define U32TO8_LE(p, v)                                                        \\\n+  do {                                                                         \\\n+    (p)[0] = (uint8_t)((v));                                                   \\\n+    (p)[1] = (uint8_t)((v) >> 8);                                              \\\n+    (p)[2] = (uint8_t)((v) >> 16);                                             \\\n+    (p)[3] = (uint8_t)((v) >> 24);                                             \\\n+  } while (0)\n+\n+void poly1305_auth(unsigned char out[POLY1305_TAGLEN], const unsigned char *m,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r214536689",
      "id" : 214536689,
      "in_reply_to_id" : 214536074,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNjY4OQ==",
      "original_commit_id" : "09ec49ba31867187cecd631593d37bcc5f3ca72f",
      "original_position" : 24,
      "path" : "src/crypto/poly1305.cpp",
      "position" : 24,
      "pull_request_review_id" : 151617053,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214536689",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Instead of those U8TOU32_LE macros you can use our own function (ReadLE32,\nWriteLE32).\n\n>\n",
      "created_at" : "2018-09-02T11:34:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-417924355",
      "id" : 417924355,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzkyNDM1NQ==",
      "updated_at" : "2018-09-02T11:34:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417924355",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa: agree. Though as written in the PR description. I'd like to keep the code (extracted from openSSH) as identical as possible. I think (or hope) we can do refactoring after this has been merged.",
      "created_at" : "2018-09-02T11:44:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-417924839",
      "id" : 417924839,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzkyNDgzOQ==",
      "updated_at" : "2018-09-02T11:44:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417924839",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r216966077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216966077"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This seems like a mistake? `*len24_out` is assigned twice? `*len24_out = 0;` should be removed? :-)",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-12T09:49:35Z",
      "diff_hunk" : "@@ -0,0 +1,90 @@\n+#include <crypto/chachapoly_aead.h>\n+\n+#define __STDC_WANT_LIB_EXT1__ 1\n+#include <crypto/poly1305.h>\n+#include <string.h>\n+\n+#include <compat/endian.h>\n+#include <support/cleanse.h>\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char *b1, const unsigned char *b2, size_t n) {\n+  const unsigned char *p1 = b1, *p2 = b2;\n+  int ret = 0;\n+\n+  for (; n > 0; n--)\n+    ret |= *p1++ ^ *p2++;\n+  return (ret != 0);\n+}\n+\n+#endif /* TIMINGSAFE_BCMP */\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *ctx, const uint8_t *key,\n+                          int keylen) {\n+  if (keylen != (32 + 32)) /* 2 x 256 bit keys */\n+    return -1;\n+  chacha_keysetup(&ctx->main_ctx, key, 256);\n+  chacha_keysetup(&ctx->header_ctx, key + 32, 256);\n+  return 0;\n+}\n+\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt) {\n+  const uint8_t one[8] = {1, 0, 0, 0, 0, 0, 0, 0}; /* NB little-endian */\n+  uint8_t expected_tag[POLY1305_TAGLEN], poly_key[POLY1305_KEYLEN];\n+  int r = -1;\n+\n+  uint64_t seqnr64 = seqnr;\n+  uint64_t chacha_iv = htole64(seqnr64);\n+  memset(poly_key, 0, sizeof(poly_key));\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, NULL);\n+  chacha_encrypt_bytes(&ctx->main_ctx, poly_key, poly_key, sizeof(poly_key));\n+\n+  if (!is_encrypt) {\n+    const uint8_t *tag = src + aadlen + len;\n+\n+    poly1305_auth(expected_tag, src, aadlen + len, poly_key);\n+    if (timingsafe_bcmp(expected_tag, tag, POLY1305_TAGLEN) != 0) {\n+      r = -1;\n+      goto out;\n+    }\n+  }\n+\n+  if (aadlen) {\n+    chacha_ivsetup(&ctx->header_ctx, (uint8_t *)&chacha_iv, NULL);\n+    chacha_encrypt_bytes(&ctx->header_ctx, src, dest, aadlen);\n+  }\n+\n+  /* Set Chacha's block counter to 1 */\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, one);\n+  chacha_encrypt_bytes(&ctx->main_ctx, src + aadlen, dest + aadlen, len);\n+\n+  /* If encrypting, calculate and append tag */\n+  if (is_encrypt) {\n+    poly1305_auth(dest + aadlen + len, dest, aadlen + len, poly_key);\n+  }\n+  r = 0;\n+out:\n+  memory_cleanse(expected_tag, sizeof(expected_tag));\n+  memory_cleanse(&chacha_iv, sizeof(chacha_iv));\n+  memory_cleanse(poly_key, sizeof(poly_key));\n+  return r;\n+}\n+\n+int chacha20poly1305_get_length24(struct chachapolyaead_ctx *ctx,\n+                                uint32_t *len24_out, uint32_t seqnr,\n+                                const uint8_t *ciphertext) {\n+  uint8_t buf[3];\n+\n+  uint64_t seqnr64 = htole64(seqnr); //use LE for the nonce\n+  chacha_ivsetup(&ctx->header_ctx, (uint8_t *)&seqnr64, NULL);\n+  chacha_encrypt_bytes(&ctx->header_ctx, ciphertext, buf, 3);\n+  *len24_out = 0;\n+  *len24_out = buf[0] | (buf[1] << 8) | (buf[2] << 16);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r216966077",
      "id" : 216966077,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjk2NjA3Nw==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 85,
      "path" : "src/crypto/chachapoly_aead.cpp",
      "position" : 88,
      "pull_request_review_id" : 154567852,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216966077",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r216966884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216966884"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just to double check: This bit shifting takes place on a 32-bit value which is then expanded to a 64-bit type. That is the intention? Applies to `h1 << 26`, `h2 << 20`, `h3 << 14` and `h4 << 8`.",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-12T09:52:14Z",
      "diff_hunk" : "@@ -0,0 +1,198 @@\n+/*\n+ * Public Domain poly1305 from Andrew Moon\n+ * poly1305-donna-unrolled.c from https://github.com/floodyberry/poly1305-donna\n+ */\n+\n+/* $OpenBSD: poly1305.c,v 1.3 2013/12/19 22:57:13 djm Exp $ */\n+\n+#include <crypto/poly1305.h>\n+\n+#define mul32x32_64(a, b) ((uint64_t)(a) * (b))\n+\n+#define U8TO32_LE(p)                                                           \\\n+  (((uint32_t)((p)[0])) | ((uint32_t)((p)[1]) << 8) |                          \\\n+   ((uint32_t)((p)[2]) << 16) | ((uint32_t)((p)[3]) << 24))\n+\n+#define U32TO8_LE(p, v)                                                        \\\n+  do {                                                                         \\\n+    (p)[0] = (uint8_t)((v));                                                   \\\n+    (p)[1] = (uint8_t)((v) >> 8);                                              \\\n+    (p)[2] = (uint8_t)((v) >> 16);                                             \\\n+    (p)[3] = (uint8_t)((v) >> 24);                                             \\\n+  } while (0)\n+\n+void poly1305_auth(unsigned char out[POLY1305_TAGLEN], const unsigned char *m,\n+                   size_t inlen, const unsigned char key[POLY1305_KEYLEN]) {\n+  uint32_t t0, t1, t2, t3;\n+  uint32_t h0, h1, h2, h3, h4;\n+  uint32_t r0, r1, r2, r3, r4;\n+  uint32_t s1, s2, s3, s4;\n+  uint32_t b, nb;\n+  size_t j;\n+  uint64_t t[5];\n+  uint64_t f0, f1, f2, f3;\n+  uint32_t g0, g1, g2, g3, g4;\n+  uint64_t c;\n+  unsigned char mp[16];\n+\n+  /* clamp key */\n+  t0 = U8TO32_LE(key + 0);\n+  t1 = U8TO32_LE(key + 4);\n+  t2 = U8TO32_LE(key + 8);\n+  t3 = U8TO32_LE(key + 12);\n+\n+  /* precompute multipliers */\n+  r0 = t0 & 0x3ffffff;\n+  t0 >>= 26;\n+  t0 |= t1 << 6;\n+  r1 = t0 & 0x3ffff03;\n+  t1 >>= 20;\n+  t1 |= t2 << 12;\n+  r2 = t1 & 0x3ffc0ff;\n+  t2 >>= 14;\n+  t2 |= t3 << 18;\n+  r3 = t2 & 0x3f03fff;\n+  t3 >>= 8;\n+  r4 = t3 & 0x00fffff;\n+\n+  s1 = r1 * 5;\n+  s2 = r2 * 5;\n+  s3 = r3 * 5;\n+  s4 = r4 * 5;\n+\n+  /* init state */\n+  h0 = 0;\n+  h1 = 0;\n+  h2 = 0;\n+  h3 = 0;\n+  h4 = 0;\n+\n+  /* full blocks */\n+  if (inlen < 16)\n+    goto poly1305_donna_atmost15bytes;\n+poly1305_donna_16bytes:\n+  m += 16;\n+  inlen -= 16;\n+\n+  t0 = U8TO32_LE(m - 16);\n+  t1 = U8TO32_LE(m - 12);\n+  t2 = U8TO32_LE(m - 8);\n+  t3 = U8TO32_LE(m - 4);\n+\n+  h0 += t0 & 0x3ffffff;\n+  h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n+  h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n+  h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n+  h4 += (t3 >> 8) | (1 << 24);\n+\n+poly1305_donna_mul:\n+  t[0] = mul32x32_64(h0, r0) + mul32x32_64(h1, s4) + mul32x32_64(h2, s3) +\n+         mul32x32_64(h3, s2) + mul32x32_64(h4, s1);\n+  t[1] = mul32x32_64(h0, r1) + mul32x32_64(h1, r0) + mul32x32_64(h2, s4) +\n+         mul32x32_64(h3, s3) + mul32x32_64(h4, s2);\n+  t[2] = mul32x32_64(h0, r2) + mul32x32_64(h1, r1) + mul32x32_64(h2, r0) +\n+         mul32x32_64(h3, s4) + mul32x32_64(h4, s3);\n+  t[3] = mul32x32_64(h0, r3) + mul32x32_64(h1, r2) + mul32x32_64(h2, r1) +\n+         mul32x32_64(h3, r0) + mul32x32_64(h4, s4);\n+  t[4] = mul32x32_64(h0, r4) + mul32x32_64(h1, r3) + mul32x32_64(h2, r2) +\n+         mul32x32_64(h3, r1) + mul32x32_64(h4, r0);\n+\n+  h0 = (uint32_t)t[0] & 0x3ffffff;\n+  c = (t[0] >> 26);\n+  t[1] += c;\n+  h1 = (uint32_t)t[1] & 0x3ffffff;\n+  b = (uint32_t)(t[1] >> 26);\n+  t[2] += b;\n+  h2 = (uint32_t)t[2] & 0x3ffffff;\n+  b = (uint32_t)(t[2] >> 26);\n+  t[3] += b;\n+  h3 = (uint32_t)t[3] & 0x3ffffff;\n+  b = (uint32_t)(t[3] >> 26);\n+  t[4] += b;\n+  h4 = (uint32_t)t[4] & 0x3ffffff;\n+  b = (uint32_t)(t[4] >> 26);\n+  h0 += b * 5;\n+\n+  if (inlen >= 16)\n+    goto poly1305_donna_16bytes;\n+\n+/* final bytes */\n+poly1305_donna_atmost15bytes:\n+  if (!inlen)\n+    goto poly1305_donna_finish;\n+\n+  for (j = 0; j < inlen; j++)\n+    mp[j] = m[j];\n+  mp[j++] = 1;\n+  for (; j < 16; j++)\n+    mp[j] = 0;\n+  inlen = 0;\n+\n+  t0 = U8TO32_LE(mp + 0);\n+  t1 = U8TO32_LE(mp + 4);\n+  t2 = U8TO32_LE(mp + 8);\n+  t3 = U8TO32_LE(mp + 12);\n+\n+  h0 += t0 & 0x3ffffff;\n+  h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n+  h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n+  h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n+  h4 += (t3 >> 8);\n+\n+  goto poly1305_donna_mul;\n+\n+poly1305_donna_finish:\n+  b = h0 >> 26;\n+  h0 = h0 & 0x3ffffff;\n+  h1 += b;\n+  b = h1 >> 26;\n+  h1 = h1 & 0x3ffffff;\n+  h2 += b;\n+  b = h2 >> 26;\n+  h2 = h2 & 0x3ffffff;\n+  h3 += b;\n+  b = h3 >> 26;\n+  h3 = h3 & 0x3ffffff;\n+  h4 += b;\n+  b = h4 >> 26;\n+  h4 = h4 & 0x3ffffff;\n+  h0 += b * 5;\n+  b = h0 >> 26;\n+  h0 = h0 & 0x3ffffff;\n+  h1 += b;\n+\n+  g0 = h0 + 5;\n+  b = g0 >> 26;\n+  g0 &= 0x3ffffff;\n+  g1 = h1 + b;\n+  b = g1 >> 26;\n+  g1 &= 0x3ffffff;\n+  g2 = h2 + b;\n+  b = g2 >> 26;\n+  g2 &= 0x3ffffff;\n+  g3 = h3 + b;\n+  b = g3 >> 26;\n+  g3 &= 0x3ffffff;\n+  g4 = h4 + b - (1 << 26);\n+\n+  b = (g4 >> 31) - 1;\n+  nb = ~b;\n+  h0 = (h0 & nb) | (g0 & b);\n+  h1 = (h1 & nb) | (g1 & b);\n+  h2 = (h2 & nb) | (g2 & b);\n+  h3 = (h3 & nb) | (g3 & b);\n+  h4 = (h4 & nb) | (g4 & b);\n+\n+  f0 = ((h0) | (h1 << 26)) + (uint64_t)U8TO32_LE(&key[16]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r216966884",
      "id" : 216966884,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjk2Njg4NA==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 186,
      "path" : "src/crypto/poly1305.cpp",
      "position" : 186,
      "pull_request_review_id" : 154568860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216966884",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r217071702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217071702"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shouldn't this be `assert(memcmp(plaintext_buf, plaintext_buf_new, 255) == 0); `  or `assert(memcmp(plaintext_buf, plaintext_buf_new, sizeof(plaintext_buf)) == 0);`?",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-12T15:08:09Z",
      "diff_hunk" : "@@ -562,4 +564,198 @@ BOOST_AUTO_TEST_CASE(sha256d64)\n     }\n }\n \n+\n+BOOST_AUTO_TEST_CASE(chacha20poly1305_openssh)\n+{\n+    struct chacha20_testvector {\n+        uint8_t key[32];\n+        uint8_t nonce[8];\n+        uint8_t resulting_keystream[512];\n+        int keystream_check_size;\n+    };\n+\n+    struct poly1305_testvector {\n+        uint8_t input[64];\n+        int inputlen;\n+        uint8_t key[64];\n+        uint8_t resulting_tag[16];\n+    };\n+\n+    /*\n+       Testvectors have been taken from the draft RFC\n+       https://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-04#section-7\n+    */\n+\n+    static const struct chacha20_testvector chacha20_testvectors[] = {\n+        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            {0x76, 0xb8, 0xe0, 0xad, 0xa0, 0xf1, 0x3d, 0x90, 0x40, 0x5d, 0x6a,\n+                0xe5, 0x53, 0x86, 0xbd, 0x28, 0xbd, 0xd2, 0x19, 0xb8, 0xa0, 0x8d,\n+                0xed, 0x1a, 0xa8, 0x36, 0xef, 0xcc, 0x8b, 0x77, 0x0d, 0xc7, 0xda,\n+                0x41, 0x59, 0x7c, 0x51, 0x57, 0x48, 0x8d, 0x77, 0x24, 0xe0, 0x3f,\n+                0xb8, 0xd8, 0x4a, 0x37, 0x6a, 0x43, 0xb8, 0xf4, 0x15, 0x18, 0xa1,\n+                0x1c, 0xc3, 0x87, 0xb6, 0x69, 0xb2, 0xee, 0x65, 0x86},\n+            64},\n+        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01},\n+            {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            {0x45, 0x40, 0xf0, 0x5a, 0x9f, 0x1f, 0xb2, 0x96, 0xd7, 0x73, 0x6e,\n+                0x7b, 0x20, 0x8e, 0x3c, 0x96, 0xeb, 0x4f, 0xe1, 0x83, 0x46, 0x88,\n+                0xd2, 0x60, 0x4f, 0x45, 0x09, 0x52, 0xed, 0x43, 0x2d, 0x41, 0xbb,\n+                0xe2, 0xa0, 0xb6, 0xea, 0x75, 0x66, 0xd2, 0xa5, 0xd1, 0xe7, 0xe2,\n+                0x0d, 0x42, 0xaf, 0x2c, 0x53, 0xd7, 0x92, 0xb1, 0xc4, 0x3f, 0xea,\n+                0x81, 0x7e, 0x9a, 0xd2, 0x75, 0xae, 0x54, 0x69, 0x63},\n+            64},\n+        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01},\n+            {0xde, 0x9c, 0xba, 0x7b, 0xf3, 0xd6, 0x9e, 0xf5, 0xe7, 0x86, 0xdc, 0x63,\n+                0x97, 0x3f, 0x65, 0x3a, 0x0b, 0x49, 0xe0, 0x15, 0xad, 0xbf, 0xf7, 0x13,\n+                0x4f, 0xcb, 0x7d, 0xf1, 0x37, 0x82, 0x10, 0x31, 0xe8, 0x5a, 0x05, 0x02,\n+                0x78, 0xa7, 0x08, 0x45, 0x27, 0x21, 0x4f, 0x73, 0xef, 0xc7, 0xfa, 0x5b,\n+                0x52, 0x77, 0x06, 0x2e, 0xb7, 0xa0, 0x43, 0x3e, 0x44, 0x5f, 0x41, 0xe3},\n+            60},\n+        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            {0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            {0xef, 0x3f, 0xdf, 0xd6, 0xc6, 0x15, 0x78, 0xfb, 0xf5, 0xcf, 0x35,\n+                0xbd, 0x3d, 0xd3, 0x3b, 0x80, 0x09, 0x63, 0x16, 0x34, 0xd2, 0x1e,\n+                0x42, 0xac, 0x33, 0x96, 0x0b, 0xd1, 0x38, 0xe5, 0x0d, 0x32, 0x11,\n+                0x1e, 0x4c, 0xaf, 0x23, 0x7e, 0xe5, 0x3c, 0xa8, 0xad, 0x64, 0x26,\n+                0x19, 0x4a, 0x88, 0x54, 0x5d, 0xdc, 0x49, 0x7a, 0x0b, 0x46, 0x6e,\n+                0x7d, 0x6b, 0xbd, 0xb0, 0x04, 0x1b, 0x2f, 0x58, 0x6b},\n+            64},\n+        {{0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,\n+             0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15,\n+             0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f},\n+            {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07},\n+            {0xf7, 0x98, 0xa1, 0x89, 0xf1, 0x95, 0xe6, 0x69, 0x82, 0x10, 0x5f, 0xfb,\n+                0x64, 0x0b, 0xb7, 0x75, 0x7f, 0x57, 0x9d, 0xa3, 0x16, 0x02, 0xfc, 0x93,\n+                0xec, 0x01, 0xac, 0x56, 0xf8, 0x5a, 0xc3, 0xc1, 0x34, 0xa4, 0x54, 0x7b,\n+                0x73, 0x3b, 0x46, 0x41, 0x30, 0x42, 0xc9, 0x44, 0x00, 0x49, 0x17, 0x69,\n+                0x05, 0xd3, 0xbe, 0x59, 0xea, 0x1c, 0x53, 0xf1, 0x59, 0x16, 0x15, 0x5c,\n+                0x2b, 0xe8, 0x24, 0x1a, 0x38, 0x00, 0x8b, 0x9a, 0x26, 0xbc, 0x35, 0x94,\n+                0x1e, 0x24, 0x44, 0x17, 0x7c, 0x8a, 0xde, 0x66, 0x89, 0xde, 0x95, 0x26,\n+                0x49, 0x86, 0xd9, 0x58, 0x89, 0xfb, 0x60, 0xe8, 0x46, 0x29, 0xc9, 0xbd,\n+                0x9a, 0x5a, 0xcb, 0x1c, 0xc1, 0x18, 0xbe, 0x56, 0x3e, 0xb9, 0xb3, 0xa4,\n+                0xa4, 0x72, 0xf8, 0x2e, 0x09, 0xa7, 0xe7, 0x78, 0x49, 0x2b, 0x56, 0x2e,\n+                0xf7, 0x13, 0x0e, 0x88, 0xdf, 0xe0, 0x31, 0xc7, 0x9d, 0xb9, 0xd4, 0xf7,\n+                0xc7, 0xa8, 0x99, 0x15, 0x1b, 0x9a, 0x47, 0x50, 0x32, 0xb6, 0x3f, 0xc3,\n+                0x85, 0x24, 0x5f, 0xe0, 0x54, 0xe3, 0xdd, 0x5a, 0x97, 0xa5, 0xf5, 0x76,\n+                0xfe, 0x06, 0x40, 0x25, 0xd3, 0xce, 0x04, 0x2c, 0x56, 0x6a, 0xb2, 0xc5,\n+                0x07, 0xb1, 0x38, 0xdb, 0x85, 0x3e, 0x3d, 0x69, 0x59, 0x66, 0x09, 0x96,\n+                0x54, 0x6c, 0xc9, 0xc4, 0xa6, 0xea, 0xfd, 0xc7, 0x77, 0xc0, 0x40, 0xd7,\n+                0x0e, 0xaf, 0x46, 0xf7, 0x6d, 0xad, 0x39, 0x79, 0xe5, 0xc5, 0x36, 0x0c,\n+                0x33, 0x17, 0x16, 0x6a, 0x1c, 0x89, 0x4c, 0x94, 0xa3, 0x71, 0x87, 0x6a,\n+                0x94, 0xdf, 0x76, 0x28, 0xfe, 0x4e, 0xaa, 0xf2, 0xcc, 0xb2, 0x7d, 0x5a,\n+                0xaa, 0xe0, 0xad, 0x7a, 0xd0, 0xf9, 0xd4, 0xb6, 0xad, 0x3b, 0x54, 0x09,\n+                0x87, 0x46, 0xd4, 0x52, 0x4d, 0x38, 0x40, 0x7a, 0x6d, 0xeb, 0x3a, 0xb7,\n+                0x8f, 0xab, 0x78, 0xc9},\n+            256}};\n+\n+    static const struct poly1305_testvector poly1305_testvectors[] = {\n+        {\n+            {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            32,\n+            {0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x33, 0x32, 0x2d,\n+                0x62, 0x79, 0x74, 0x65, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x66, 0x6f,\n+                0x72, 0x20, 0x50, 0x6f, 0x6c, 0x79, 0x31, 0x33, 0x30, 0x35},\n+            {0x49, 0xec, 0x78, 0x09, 0x0e, 0x48, 0x1e, 0xc6, 0xc2, 0x6b, 0x33, 0xb9,\n+                0x1c, 0xcc, 0x03, 0x07},\n+        },\n+        {{0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x21},\n+            12,\n+            {0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x33, 0x32, 0x2d,\n+                0x62, 0x79, 0x74, 0x65, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x66, 0x6f,\n+                0x72, 0x20, 0x50, 0x6f, 0x6c, 0x79, 0x31, 0x33, 0x30, 0x35},\n+            {0xa6, 0xf7, 0x45, 0x00, 0x8f, 0x81, 0xc9, 0x16, 0xa2, 0x0d, 0xcc, 0x74,\n+                0xee, 0xf2, 0xb2, 0xf0}}};\n+\n+    struct chacha_ctx ctx;\n+    unsigned int i = 0;\n+    uint8_t keystream[512];\n+    uint8_t poly1305_tag[16];\n+\n+    /* test chacha20 */\n+    for (i = 0;\n+         i < (sizeof(chacha20_testvectors) / sizeof(chacha20_testvectors[0]));\n+         i++) {\n+        chacha_ivsetup(&ctx, chacha20_testvectors[i].nonce, NULL);\n+        memset(keystream, 0, 512);\n+        chacha_keysetup(&ctx, chacha20_testvectors[i].key, 256);\n+        chacha_encrypt_bytes(&ctx, keystream, keystream, 512);\n+        assert(memcmp(keystream, chacha20_testvectors[i].resulting_keystream,\n+                   chacha20_testvectors[i].keystream_check_size) == 0);\n+    }\n+\n+    /* test poly1305 */\n+    for (i = 0;\n+         i < (sizeof(poly1305_testvectors) / sizeof(poly1305_testvectors[0]));\n+         i++) {\n+        memset(poly1305_tag, 0, 16);\n+        poly1305_auth(poly1305_tag, poly1305_testvectors[i].input,\n+            poly1305_testvectors[i].inputlen,\n+            poly1305_testvectors[i].key);\n+        assert(memcmp(poly1305_tag, poly1305_testvectors[i].resulting_tag, 16) ==\n+               0);\n+    }\n+\n+    /* test chacha20poly1305 AEAD */\n+    struct chachapolyaead_ctx aead_ctx;\n+    uint32_t seqnr = 100;\n+    uint8_t aead_keys[64] = {\n+        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,\n+        0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15,\n+        0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};\n+\n+    uint8_t plaintext_buf[255] = {\n+        0xff, 0x00, 0x00, 0xf1, 0x95, 0xe6, 0x69, 0x82, 0x10, 0x5f, 0xfb,\n+        0x64, 0x0b, 0xb7, 0x75, 0x7f, 0x57, 0x9d, 0xa3, 0x16, 0x02, 0xfc, 0x93,\n+        0xec, 0x01, 0xac, 0x56, 0xf8, 0x5a, 0xc3, 0xc1, 0x34, 0xa4, 0x54, 0x7b,\n+        0x73, 0x3b, 0x46, 0x41, 0x30, 0x42, 0xc9, 0x44, 0x00, 0x49, 0x17, 0x69,\n+        0x05, 0xd3, 0xbe, 0x59, 0xea, 0x1c, 0x53, 0xf1, 0x59, 0x16, 0x15, 0x5c,\n+        0x2b, 0xe8, 0x24, 0x1a, 0x38, 0x00, 0x8b, 0x9a, 0x26, 0xbc, 0x35, 0x94,\n+        0x1e, 0x24, 0x44, 0x17, 0x7c, 0x8a, 0xde, 0x66, 0x89, 0xde, 0x95, 0x26,\n+        0x49, 0x86, 0xd9, 0x58, 0x89, 0xfb, 0x60, 0xe8, 0x46, 0x29, 0xc9, 0xbd,\n+        0x9a, 0x5a, 0xcb, 0x1c, 0xc1, 0x18, 0xbe, 0x56, 0x3e, 0xb9, 0xb3, 0xa4,\n+        0xa4, 0x72, 0xf8, 0x2e, 0x09, 0xa7, 0xe7, 0x78, 0x49, 0x2b, 0x56, 0x2e,\n+        0xf7, 0x13, 0x0e, 0x88, 0xdf, 0xe0, 0x31, 0xc7, 0x9d, 0xb9, 0xd4, 0xf7,\n+        0xc7, 0xa8, 0x99, 0x15, 0x1b, 0x9a, 0x47, 0x50, 0x32, 0xb6, 0x3f, 0xc3,\n+        0x85, 0x24, 0x5f, 0xe0, 0x54, 0xe3, 0xdd, 0x5a, 0x97, 0xa5, 0xf5, 0x76,\n+        0xfe, 0x06, 0x40, 0x25, 0xd3, 0xce, 0x04, 0x2c, 0x56, 0x6a, 0xb2, 0xc5,\n+        0x07, 0xb1, 0x38, 0xdb, 0x85, 0x3e, 0x3d, 0x69, 0x59, 0x66, 0x09, 0x96,\n+        0x54, 0x6c, 0xc9, 0xc4, 0xa6, 0xea, 0xfd, 0xc7, 0x77, 0xc0, 0x40, 0xd7,\n+        0x0e, 0xaf, 0x46, 0xf7, 0x6d, 0xad, 0x39, 0x79, 0xe5, 0xc5, 0x36, 0x0c,\n+        0x33, 0x17, 0x16, 0x6a, 0x1c, 0x89, 0x4c, 0x94, 0xa3, 0x71, 0x87, 0x6a,\n+        0x94, 0xdf, 0x76, 0x28, 0xfe, 0x4e, 0xaa, 0xf2, 0xcc, 0xb2, 0x7d, 0x5a,\n+        0xaa, 0xe0, 0xad, 0x7a, 0xd0, 0xf9, 0xd4, 0xb6, 0xad, 0x3b, 0x54, 0x09,\n+        0x87, 0x46, 0xd4, 0x52, 0x4d, 0x38, 0x40, 0x7a, 0x6d, 0xeb, 0x3a, 0xb7,\n+        0x8f, 0xab, 0x78, 0xc9};\n+\n+    uint8_t ciphertext_buf[300];\n+    uint8_t plaintext_buf_new[256];\n+    memset(ciphertext_buf, 0, 300);\n+    memset(plaintext_buf_new, 0, 256);\n+    chacha20poly1305_init(&aead_ctx, aead_keys, 64);\n+    assert((uint32_t)plaintext_buf[0] == 255);\n+    chacha20poly1305_crypt(&aead_ctx, seqnr, ciphertext_buf, plaintext_buf, 252,\n+        3, 1);\n+    uint32_t out_len = 0;\n+    chacha20poly1305_get_length24(&aead_ctx, &out_len, seqnr, ciphertext_buf);\n+    assert(out_len == 255);\n+    chacha20poly1305_crypt(&aead_ctx, seqnr, plaintext_buf_new, ciphertext_buf,\n+        252, 3, 0);\n+    assert(memcmp(plaintext_buf, plaintext_buf_new, 252) == 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r217071702",
      "id" : 217071702,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzA3MTcwMg==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 214,
      "path" : "src/test/crypto_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 154698661,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217071702",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r219691283"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691283"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n2018-09-22 21:20:48 cpplint(pr=14050): src/bench/chacha20poly1305.cpp:29:  Missing space after ,  [whitespace/comma] [3]\r\n```",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-23T08:00:28Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iostream>\n+\n+#include <bench/bench.h>\n+#include <hash.h>\n+#include <utiltime.h>\n+#include <crypto/chachapoly_aead.h>\n+\n+/* Number of bytes to crypt/hash per iteration */\n+static const uint64_t BUFFER_SIZE_A = 1000*1000;\n+static const uint64_t BUFFER_SIZE_B = 256;\n+\n+static void CHACHA20POLY1305AEAD_(benchmark::State& state, uint64_t bufsize)\n+{\n+    struct chachapolyaead_ctx aead_ctx;\n+    static const uint32_t seqnr = 100;\n+    static const uint8_t aead_keys[64] = {\n+        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,\n+        0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15,\n+        0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};\n+\n+    chacha20poly1305_init(&aead_ctx, aead_keys, 64);\n+    std::vector<uint8_t> in(bufsize,0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r219691283",
      "id" : 219691283,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTI4Mw==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 29,
      "path" : "src/bench/chacha20poly1305.cpp",
      "position" : null,
      "pull_request_review_id" : 157931848,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691283",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r219691292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691292"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n2018-09-22 21:20:48 cpplint(pr=14050): src/bench/chacha20poly1305.cpp:30:  Missing space after ,  [whitespace/comma] [3]\r\n```",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-23T08:00:45Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iostream>\n+\n+#include <bench/bench.h>\n+#include <hash.h>\n+#include <utiltime.h>\n+#include <crypto/chachapoly_aead.h>\n+\n+/* Number of bytes to crypt/hash per iteration */\n+static const uint64_t BUFFER_SIZE_A = 1000*1000;\n+static const uint64_t BUFFER_SIZE_B = 256;\n+\n+static void CHACHA20POLY1305AEAD_(benchmark::State& state, uint64_t bufsize)\n+{\n+    struct chachapolyaead_ctx aead_ctx;\n+    static const uint32_t seqnr = 100;\n+    static const uint8_t aead_keys[64] = {\n+        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,\n+        0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15,\n+        0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};\n+\n+    chacha20poly1305_init(&aead_ctx, aead_keys, 64);\n+    std::vector<uint8_t> in(bufsize,0);\n+    std::vector<uint8_t> out(bufsize,0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r219691292",
      "id" : 219691292,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTI5Mg==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 30,
      "path" : "src/bench/chacha20poly1305.cpp",
      "position" : null,
      "pull_request_review_id" : 157931859,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691292",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r219691295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691295"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n2018-09-22 21:20:48 cpplint(pr=14050): src/bench/chacha20poly1305.cpp:51:  Missing space after ,  [whitespace/comma] [3]\r\n```",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-23T08:01:01Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iostream>\n+\n+#include <bench/bench.h>\n+#include <hash.h>\n+#include <utiltime.h>\n+#include <crypto/chachapoly_aead.h>\n+\n+/* Number of bytes to crypt/hash per iteration */\n+static const uint64_t BUFFER_SIZE_A = 1000*1000;\n+static const uint64_t BUFFER_SIZE_B = 256;\n+\n+static void CHACHA20POLY1305AEAD_(benchmark::State& state, uint64_t bufsize)\n+{\n+    struct chachapolyaead_ctx aead_ctx;\n+    static const uint32_t seqnr = 100;\n+    static const uint8_t aead_keys[64] = {\n+        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,\n+        0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15,\n+        0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};\n+\n+    chacha20poly1305_init(&aead_ctx, aead_keys, 64);\n+    std::vector<uint8_t> in(bufsize,0);\n+    std::vector<uint8_t> out(bufsize,0);\n+\n+    while (state.KeepRunning()) {\n+        chacha20poly1305_crypt(&aead_ctx, seqnr, in.data(), out.data(), in.size()-16,\n+            4, 1);\n+    }\n+}\n+\n+static void CHACHA20POLY1305AEAD_BIG(benchmark::State& state)\n+{\n+    CHACHA20POLY1305AEAD_(state, BUFFER_SIZE_A);\n+}\n+\n+static void CHACHA20POLY1305AEAD_SMALL(benchmark::State& state)\n+{\n+    CHACHA20POLY1305AEAD_(state, BUFFER_SIZE_B);\n+}\n+\n+static void HASH256_(benchmark::State& state, uint64_t bufsize)\n+{\n+    uint8_t hash[CHash256::OUTPUT_SIZE];\n+    std::vector<uint8_t> in(bufsize,0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r219691295",
      "id" : 219691295,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTI5NQ==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 51,
      "path" : "src/bench/chacha20poly1305.cpp",
      "position" : null,
      "pull_request_review_id" : 157931864,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691295",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r219691309"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691309"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n2018-09-22 21:20:48 cpplint(pr=14050): src/crypto/chachapoly_aead.cpp:0:  No copyright message found.\r\n```",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-23T08:02:22Z",
      "diff_hunk" : "@@ -0,0 +1,90 @@\n+#include <crypto/chachapoly_aead.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r219691309",
      "id" : 219691309,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTMwOQ==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 1,
      "path" : "src/crypto/chachapoly_aead.cpp",
      "position" : 5,
      "pull_request_review_id" : 157931887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691309",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r219691320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691320"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n2018-09-22 21:20:48 cpplint(pr=14050): src/crypto/chachapoly_aead.cpp:81:  Should have a space between // and comment  [whitespace/comments] [4]\r\n```",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-23T08:02:55Z",
      "diff_hunk" : "@@ -0,0 +1,90 @@\n+#include <crypto/chachapoly_aead.h>\n+\n+#define __STDC_WANT_LIB_EXT1__ 1\n+#include <crypto/poly1305.h>\n+#include <string.h>\n+\n+#include <compat/endian.h>\n+#include <support/cleanse.h>\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char *b1, const unsigned char *b2, size_t n) {\n+  const unsigned char *p1 = b1, *p2 = b2;\n+  int ret = 0;\n+\n+  for (; n > 0; n--)\n+    ret |= *p1++ ^ *p2++;\n+  return (ret != 0);\n+}\n+\n+#endif /* TIMINGSAFE_BCMP */\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *ctx, const uint8_t *key,\n+                          int keylen) {\n+  if (keylen != (32 + 32)) /* 2 x 256 bit keys */\n+    return -1;\n+  chacha_keysetup(&ctx->main_ctx, key, 256);\n+  chacha_keysetup(&ctx->header_ctx, key + 32, 256);\n+  return 0;\n+}\n+\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt) {\n+  const uint8_t one[8] = {1, 0, 0, 0, 0, 0, 0, 0}; /* NB little-endian */\n+  uint8_t expected_tag[POLY1305_TAGLEN], poly_key[POLY1305_KEYLEN];\n+  int r = -1;\n+\n+  uint64_t seqnr64 = seqnr;\n+  uint64_t chacha_iv = htole64(seqnr64);\n+  memset(poly_key, 0, sizeof(poly_key));\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, NULL);\n+  chacha_encrypt_bytes(&ctx->main_ctx, poly_key, poly_key, sizeof(poly_key));\n+\n+  if (!is_encrypt) {\n+    const uint8_t *tag = src + aadlen + len;\n+\n+    poly1305_auth(expected_tag, src, aadlen + len, poly_key);\n+    if (timingsafe_bcmp(expected_tag, tag, POLY1305_TAGLEN) != 0) {\n+      r = -1;\n+      goto out;\n+    }\n+  }\n+\n+  if (aadlen) {\n+    chacha_ivsetup(&ctx->header_ctx, (uint8_t *)&chacha_iv, NULL);\n+    chacha_encrypt_bytes(&ctx->header_ctx, src, dest, aadlen);\n+  }\n+\n+  /* Set Chacha's block counter to 1 */\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, one);\n+  chacha_encrypt_bytes(&ctx->main_ctx, src + aadlen, dest + aadlen, len);\n+\n+  /* If encrypting, calculate and append tag */\n+  if (is_encrypt) {\n+    poly1305_auth(dest + aadlen + len, dest, aadlen + len, poly_key);\n+  }\n+  r = 0;\n+out:\n+  memory_cleanse(expected_tag, sizeof(expected_tag));\n+  memory_cleanse(&chacha_iv, sizeof(chacha_iv));\n+  memory_cleanse(poly_key, sizeof(poly_key));\n+  return r;\n+}\n+\n+int chacha20poly1305_get_length24(struct chachapolyaead_ctx *ctx,\n+                                uint32_t *len24_out, uint32_t seqnr,\n+                                const uint8_t *ciphertext) {\n+  uint8_t buf[3];\n+\n+  uint64_t seqnr64 = htole64(seqnr); //use LE for the nonce",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r219691320",
      "id" : 219691320,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTMyMA==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 81,
      "path" : "src/crypto/chachapoly_aead.cpp",
      "position" : null,
      "pull_request_review_id" : 157931898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691320",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r219691331"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691331"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n2018-09-22 21:20:48 cpplint(pr=14050): src/crypto/chachapoly_aead.h:0:  No copyright message found.\r\n```",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-23T08:03:16Z",
      "diff_hunk" : "@@ -0,0 +1,22 @@\n+#ifndef BITCOIN_CRYPTO_CHACHAPOLY_AEAD_H",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r219691331",
      "id" : 219691331,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTMzMQ==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 1,
      "path" : "src/crypto/chachapoly_aead.h",
      "position" : 5,
      "pull_request_review_id" : 157931910,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691331",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r220330250"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220330250"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n2018-09-25 21:29:15 clang(pr=14050): bench/chacha20poly1305.cpp:33:82: warning: implicit conversion loses integer precision: 'unsigned long' to 'uint32_t' (aka 'unsigned int') [-Wshorten-64-to-32]\r\n```",
      "commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "created_at" : "2018-09-25T19:46:25Z",
      "diff_hunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iostream>\n+\n+#include <bench/bench.h>\n+#include <hash.h>\n+#include <utiltime.h>\n+#include <crypto/chachapoly_aead.h>\n+\n+/* Number of bytes to crypt/hash per iteration */\n+static const uint64_t BUFFER_SIZE_A = 1000*1000;\n+static const uint64_t BUFFER_SIZE_B = 256;\n+\n+static void CHACHA20POLY1305AEAD_(benchmark::State& state, uint64_t bufsize)\n+{\n+    struct chachapolyaead_ctx aead_ctx;\n+    static const uint32_t seqnr = 100;\n+    static const uint8_t aead_keys[64] = {\n+        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,\n+        0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15,\n+        0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};\n+\n+    chacha20poly1305_init(&aead_ctx, aead_keys, 64);\n+    std::vector<uint8_t> in(bufsize,0);\n+    std::vector<uint8_t> out(bufsize,0);\n+\n+    while (state.KeepRunning()) {\n+        chacha20poly1305_crypt(&aead_ctx, seqnr, in.data(), out.data(), in.size()-16,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r220330250",
      "id" : 220330250,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDMzMDI1MA==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 33,
      "path" : "src/bench/chacha20poly1305.cpp",
      "position" : 33,
      "pull_request_review_id" : 158714036,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-09-25T19:46:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220330250",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r220330603"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220330603"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n2018-09-25 21:29:15 clang(pr=14050): test/crypto_tests.cpp:690:61: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]\r\n```\r\n\r\nUse `nullptr` :-)",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-25T19:47:21Z",
      "diff_hunk" : "@@ -562,4 +564,198 @@ BOOST_AUTO_TEST_CASE(sha256d64)\n     }\n }\n \n+\n+BOOST_AUTO_TEST_CASE(chacha20poly1305_openssh)\n+{\n+    struct chacha20_testvector {\n+        uint8_t key[32];\n+        uint8_t nonce[8];\n+        uint8_t resulting_keystream[512];\n+        int keystream_check_size;\n+    };\n+\n+    struct poly1305_testvector {\n+        uint8_t input[64];\n+        int inputlen;\n+        uint8_t key[64];\n+        uint8_t resulting_tag[16];\n+    };\n+\n+    /*\n+       Testvectors have been taken from the draft RFC\n+       https://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-04#section-7\n+    */\n+\n+    static const struct chacha20_testvector chacha20_testvectors[] = {\n+        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            {0x76, 0xb8, 0xe0, 0xad, 0xa0, 0xf1, 0x3d, 0x90, 0x40, 0x5d, 0x6a,\n+                0xe5, 0x53, 0x86, 0xbd, 0x28, 0xbd, 0xd2, 0x19, 0xb8, 0xa0, 0x8d,\n+                0xed, 0x1a, 0xa8, 0x36, 0xef, 0xcc, 0x8b, 0x77, 0x0d, 0xc7, 0xda,\n+                0x41, 0x59, 0x7c, 0x51, 0x57, 0x48, 0x8d, 0x77, 0x24, 0xe0, 0x3f,\n+                0xb8, 0xd8, 0x4a, 0x37, 0x6a, 0x43, 0xb8, 0xf4, 0x15, 0x18, 0xa1,\n+                0x1c, 0xc3, 0x87, 0xb6, 0x69, 0xb2, 0xee, 0x65, 0x86},\n+            64},\n+        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01},\n+            {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            {0x45, 0x40, 0xf0, 0x5a, 0x9f, 0x1f, 0xb2, 0x96, 0xd7, 0x73, 0x6e,\n+                0x7b, 0x20, 0x8e, 0x3c, 0x96, 0xeb, 0x4f, 0xe1, 0x83, 0x46, 0x88,\n+                0xd2, 0x60, 0x4f, 0x45, 0x09, 0x52, 0xed, 0x43, 0x2d, 0x41, 0xbb,\n+                0xe2, 0xa0, 0xb6, 0xea, 0x75, 0x66, 0xd2, 0xa5, 0xd1, 0xe7, 0xe2,\n+                0x0d, 0x42, 0xaf, 0x2c, 0x53, 0xd7, 0x92, 0xb1, 0xc4, 0x3f, 0xea,\n+                0x81, 0x7e, 0x9a, 0xd2, 0x75, 0xae, 0x54, 0x69, 0x63},\n+            64},\n+        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01},\n+            {0xde, 0x9c, 0xba, 0x7b, 0xf3, 0xd6, 0x9e, 0xf5, 0xe7, 0x86, 0xdc, 0x63,\n+                0x97, 0x3f, 0x65, 0x3a, 0x0b, 0x49, 0xe0, 0x15, 0xad, 0xbf, 0xf7, 0x13,\n+                0x4f, 0xcb, 0x7d, 0xf1, 0x37, 0x82, 0x10, 0x31, 0xe8, 0x5a, 0x05, 0x02,\n+                0x78, 0xa7, 0x08, 0x45, 0x27, 0x21, 0x4f, 0x73, 0xef, 0xc7, 0xfa, 0x5b,\n+                0x52, 0x77, 0x06, 0x2e, 0xb7, 0xa0, 0x43, 0x3e, 0x44, 0x5f, 0x41, 0xe3},\n+            60},\n+        {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            {0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            {0xef, 0x3f, 0xdf, 0xd6, 0xc6, 0x15, 0x78, 0xfb, 0xf5, 0xcf, 0x35,\n+                0xbd, 0x3d, 0xd3, 0x3b, 0x80, 0x09, 0x63, 0x16, 0x34, 0xd2, 0x1e,\n+                0x42, 0xac, 0x33, 0x96, 0x0b, 0xd1, 0x38, 0xe5, 0x0d, 0x32, 0x11,\n+                0x1e, 0x4c, 0xaf, 0x23, 0x7e, 0xe5, 0x3c, 0xa8, 0xad, 0x64, 0x26,\n+                0x19, 0x4a, 0x88, 0x54, 0x5d, 0xdc, 0x49, 0x7a, 0x0b, 0x46, 0x6e,\n+                0x7d, 0x6b, 0xbd, 0xb0, 0x04, 0x1b, 0x2f, 0x58, 0x6b},\n+            64},\n+        {{0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,\n+             0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15,\n+             0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f},\n+            {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07},\n+            {0xf7, 0x98, 0xa1, 0x89, 0xf1, 0x95, 0xe6, 0x69, 0x82, 0x10, 0x5f, 0xfb,\n+                0x64, 0x0b, 0xb7, 0x75, 0x7f, 0x57, 0x9d, 0xa3, 0x16, 0x02, 0xfc, 0x93,\n+                0xec, 0x01, 0xac, 0x56, 0xf8, 0x5a, 0xc3, 0xc1, 0x34, 0xa4, 0x54, 0x7b,\n+                0x73, 0x3b, 0x46, 0x41, 0x30, 0x42, 0xc9, 0x44, 0x00, 0x49, 0x17, 0x69,\n+                0x05, 0xd3, 0xbe, 0x59, 0xea, 0x1c, 0x53, 0xf1, 0x59, 0x16, 0x15, 0x5c,\n+                0x2b, 0xe8, 0x24, 0x1a, 0x38, 0x00, 0x8b, 0x9a, 0x26, 0xbc, 0x35, 0x94,\n+                0x1e, 0x24, 0x44, 0x17, 0x7c, 0x8a, 0xde, 0x66, 0x89, 0xde, 0x95, 0x26,\n+                0x49, 0x86, 0xd9, 0x58, 0x89, 0xfb, 0x60, 0xe8, 0x46, 0x29, 0xc9, 0xbd,\n+                0x9a, 0x5a, 0xcb, 0x1c, 0xc1, 0x18, 0xbe, 0x56, 0x3e, 0xb9, 0xb3, 0xa4,\n+                0xa4, 0x72, 0xf8, 0x2e, 0x09, 0xa7, 0xe7, 0x78, 0x49, 0x2b, 0x56, 0x2e,\n+                0xf7, 0x13, 0x0e, 0x88, 0xdf, 0xe0, 0x31, 0xc7, 0x9d, 0xb9, 0xd4, 0xf7,\n+                0xc7, 0xa8, 0x99, 0x15, 0x1b, 0x9a, 0x47, 0x50, 0x32, 0xb6, 0x3f, 0xc3,\n+                0x85, 0x24, 0x5f, 0xe0, 0x54, 0xe3, 0xdd, 0x5a, 0x97, 0xa5, 0xf5, 0x76,\n+                0xfe, 0x06, 0x40, 0x25, 0xd3, 0xce, 0x04, 0x2c, 0x56, 0x6a, 0xb2, 0xc5,\n+                0x07, 0xb1, 0x38, 0xdb, 0x85, 0x3e, 0x3d, 0x69, 0x59, 0x66, 0x09, 0x96,\n+                0x54, 0x6c, 0xc9, 0xc4, 0xa6, 0xea, 0xfd, 0xc7, 0x77, 0xc0, 0x40, 0xd7,\n+                0x0e, 0xaf, 0x46, 0xf7, 0x6d, 0xad, 0x39, 0x79, 0xe5, 0xc5, 0x36, 0x0c,\n+                0x33, 0x17, 0x16, 0x6a, 0x1c, 0x89, 0x4c, 0x94, 0xa3, 0x71, 0x87, 0x6a,\n+                0x94, 0xdf, 0x76, 0x28, 0xfe, 0x4e, 0xaa, 0xf2, 0xcc, 0xb2, 0x7d, 0x5a,\n+                0xaa, 0xe0, 0xad, 0x7a, 0xd0, 0xf9, 0xd4, 0xb6, 0xad, 0x3b, 0x54, 0x09,\n+                0x87, 0x46, 0xd4, 0x52, 0x4d, 0x38, 0x40, 0x7a, 0x6d, 0xeb, 0x3a, 0xb7,\n+                0x8f, 0xab, 0x78, 0xc9},\n+            256}};\n+\n+    static const struct poly1305_testvector poly1305_testvectors[] = {\n+        {\n+            {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},\n+            32,\n+            {0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x33, 0x32, 0x2d,\n+                0x62, 0x79, 0x74, 0x65, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x66, 0x6f,\n+                0x72, 0x20, 0x50, 0x6f, 0x6c, 0x79, 0x31, 0x33, 0x30, 0x35},\n+            {0x49, 0xec, 0x78, 0x09, 0x0e, 0x48, 0x1e, 0xc6, 0xc2, 0x6b, 0x33, 0xb9,\n+                0x1c, 0xcc, 0x03, 0x07},\n+        },\n+        {{0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x21},\n+            12,\n+            {0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x33, 0x32, 0x2d,\n+                0x62, 0x79, 0x74, 0x65, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x66, 0x6f,\n+                0x72, 0x20, 0x50, 0x6f, 0x6c, 0x79, 0x31, 0x33, 0x30, 0x35},\n+            {0xa6, 0xf7, 0x45, 0x00, 0x8f, 0x81, 0xc9, 0x16, 0xa2, 0x0d, 0xcc, 0x74,\n+                0xee, 0xf2, 0xb2, 0xf0}}};\n+\n+    struct chacha_ctx ctx;\n+    unsigned int i = 0;\n+    uint8_t keystream[512];\n+    uint8_t poly1305_tag[16];\n+\n+    /* test chacha20 */\n+    for (i = 0;\n+         i < (sizeof(chacha20_testvectors) / sizeof(chacha20_testvectors[0]));\n+         i++) {\n+        chacha_ivsetup(&ctx, chacha20_testvectors[i].nonce, NULL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r220330603",
      "id" : 220330603,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDMzMDYwMw==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 146,
      "path" : "src/test/crypto_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 158714410,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220330603",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221463737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221463737"
         }
      },
      "author_association" : "MEMBER",
      "body" : "An unsigned integer wraparound takes place here which is triggered by the tests. Worth adding a comment to make it clear it is intentional?",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-30T15:50:11Z",
      "diff_hunk" : "@@ -0,0 +1,198 @@\n+/*\n+ * Public Domain poly1305 from Andrew Moon\n+ * poly1305-donna-unrolled.c from https://github.com/floodyberry/poly1305-donna\n+ */\n+\n+/* $OpenBSD: poly1305.c,v 1.3 2013/12/19 22:57:13 djm Exp $ */\n+\n+#include <crypto/poly1305.h>\n+\n+#define mul32x32_64(a, b) ((uint64_t)(a) * (b))\n+\n+#define U8TO32_LE(p)                                                           \\\n+  (((uint32_t)((p)[0])) | ((uint32_t)((p)[1]) << 8) |                          \\\n+   ((uint32_t)((p)[2]) << 16) | ((uint32_t)((p)[3]) << 24))\n+\n+#define U32TO8_LE(p, v)                                                        \\\n+  do {                                                                         \\\n+    (p)[0] = (uint8_t)((v));                                                   \\\n+    (p)[1] = (uint8_t)((v) >> 8);                                              \\\n+    (p)[2] = (uint8_t)((v) >> 16);                                             \\\n+    (p)[3] = (uint8_t)((v) >> 24);                                             \\\n+  } while (0)\n+\n+void poly1305_auth(unsigned char out[POLY1305_TAGLEN], const unsigned char *m,\n+                   size_t inlen, const unsigned char key[POLY1305_KEYLEN]) {\n+  uint32_t t0, t1, t2, t3;\n+  uint32_t h0, h1, h2, h3, h4;\n+  uint32_t r0, r1, r2, r3, r4;\n+  uint32_t s1, s2, s3, s4;\n+  uint32_t b, nb;\n+  size_t j;\n+  uint64_t t[5];\n+  uint64_t f0, f1, f2, f3;\n+  uint32_t g0, g1, g2, g3, g4;\n+  uint64_t c;\n+  unsigned char mp[16];\n+\n+  /* clamp key */\n+  t0 = U8TO32_LE(key + 0);\n+  t1 = U8TO32_LE(key + 4);\n+  t2 = U8TO32_LE(key + 8);\n+  t3 = U8TO32_LE(key + 12);\n+\n+  /* precompute multipliers */\n+  r0 = t0 & 0x3ffffff;\n+  t0 >>= 26;\n+  t0 |= t1 << 6;\n+  r1 = t0 & 0x3ffff03;\n+  t1 >>= 20;\n+  t1 |= t2 << 12;\n+  r2 = t1 & 0x3ffc0ff;\n+  t2 >>= 14;\n+  t2 |= t3 << 18;\n+  r3 = t2 & 0x3f03fff;\n+  t3 >>= 8;\n+  r4 = t3 & 0x00fffff;\n+\n+  s1 = r1 * 5;\n+  s2 = r2 * 5;\n+  s3 = r3 * 5;\n+  s4 = r4 * 5;\n+\n+  /* init state */\n+  h0 = 0;\n+  h1 = 0;\n+  h2 = 0;\n+  h3 = 0;\n+  h4 = 0;\n+\n+  /* full blocks */\n+  if (inlen < 16)\n+    goto poly1305_donna_atmost15bytes;\n+poly1305_donna_16bytes:\n+  m += 16;\n+  inlen -= 16;\n+\n+  t0 = U8TO32_LE(m - 16);\n+  t1 = U8TO32_LE(m - 12);\n+  t2 = U8TO32_LE(m - 8);\n+  t3 = U8TO32_LE(m - 4);\n+\n+  h0 += t0 & 0x3ffffff;\n+  h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n+  h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n+  h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n+  h4 += (t3 >> 8) | (1 << 24);\n+\n+poly1305_donna_mul:\n+  t[0] = mul32x32_64(h0, r0) + mul32x32_64(h1, s4) + mul32x32_64(h2, s3) +\n+         mul32x32_64(h3, s2) + mul32x32_64(h4, s1);\n+  t[1] = mul32x32_64(h0, r1) + mul32x32_64(h1, r0) + mul32x32_64(h2, s4) +\n+         mul32x32_64(h3, s3) + mul32x32_64(h4, s2);\n+  t[2] = mul32x32_64(h0, r2) + mul32x32_64(h1, r1) + mul32x32_64(h2, r0) +\n+         mul32x32_64(h3, s4) + mul32x32_64(h4, s3);\n+  t[3] = mul32x32_64(h0, r3) + mul32x32_64(h1, r2) + mul32x32_64(h2, r1) +\n+         mul32x32_64(h3, r0) + mul32x32_64(h4, s4);\n+  t[4] = mul32x32_64(h0, r4) + mul32x32_64(h1, r3) + mul32x32_64(h2, r2) +\n+         mul32x32_64(h3, r1) + mul32x32_64(h4, r0);\n+\n+  h0 = (uint32_t)t[0] & 0x3ffffff;\n+  c = (t[0] >> 26);\n+  t[1] += c;\n+  h1 = (uint32_t)t[1] & 0x3ffffff;\n+  b = (uint32_t)(t[1] >> 26);\n+  t[2] += b;\n+  h2 = (uint32_t)t[2] & 0x3ffffff;\n+  b = (uint32_t)(t[2] >> 26);\n+  t[3] += b;\n+  h3 = (uint32_t)t[3] & 0x3ffffff;\n+  b = (uint32_t)(t[3] >> 26);\n+  t[4] += b;\n+  h4 = (uint32_t)t[4] & 0x3ffffff;\n+  b = (uint32_t)(t[4] >> 26);\n+  h0 += b * 5;\n+\n+  if (inlen >= 16)\n+    goto poly1305_donna_16bytes;\n+\n+/* final bytes */\n+poly1305_donna_atmost15bytes:\n+  if (!inlen)\n+    goto poly1305_donna_finish;\n+\n+  for (j = 0; j < inlen; j++)\n+    mp[j] = m[j];\n+  mp[j++] = 1;\n+  for (; j < 16; j++)\n+    mp[j] = 0;\n+  inlen = 0;\n+\n+  t0 = U8TO32_LE(mp + 0);\n+  t1 = U8TO32_LE(mp + 4);\n+  t2 = U8TO32_LE(mp + 8);\n+  t3 = U8TO32_LE(mp + 12);\n+\n+  h0 += t0 & 0x3ffffff;\n+  h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n+  h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n+  h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n+  h4 += (t3 >> 8);\n+\n+  goto poly1305_donna_mul;\n+\n+poly1305_donna_finish:\n+  b = h0 >> 26;\n+  h0 = h0 & 0x3ffffff;\n+  h1 += b;\n+  b = h1 >> 26;\n+  h1 = h1 & 0x3ffffff;\n+  h2 += b;\n+  b = h2 >> 26;\n+  h2 = h2 & 0x3ffffff;\n+  h3 += b;\n+  b = h3 >> 26;\n+  h3 = h3 & 0x3ffffff;\n+  h4 += b;\n+  b = h4 >> 26;\n+  h4 = h4 & 0x3ffffff;\n+  h0 += b * 5;\n+  b = h0 >> 26;\n+  h0 = h0 & 0x3ffffff;\n+  h1 += b;\n+\n+  g0 = h0 + 5;\n+  b = g0 >> 26;\n+  g0 &= 0x3ffffff;\n+  g1 = h1 + b;\n+  b = g1 >> 26;\n+  g1 &= 0x3ffffff;\n+  g2 = h2 + b;\n+  b = g2 >> 26;\n+  g2 &= 0x3ffffff;\n+  g3 = h3 + b;\n+  b = g3 >> 26;\n+  g3 &= 0x3ffffff;\n+  g4 = h4 + b - (1 << 26);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221463737",
      "id" : 221463737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTQ2MzczNw==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 176,
      "path" : "src/crypto/poly1305.cpp",
      "position" : 176,
      "pull_request_review_id" : 160119097,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221463737",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221463804"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221463804"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a dead store :-)\r\n\r\nInitialize to zero instead and remove the `r = 0` below?",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-30T15:53:04Z",
      "diff_hunk" : "@@ -0,0 +1,90 @@\n+#include <crypto/chachapoly_aead.h>\n+\n+#define __STDC_WANT_LIB_EXT1__ 1\n+#include <crypto/poly1305.h>\n+#include <string.h>\n+\n+#include <compat/endian.h>\n+#include <support/cleanse.h>\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char *b1, const unsigned char *b2, size_t n) {\n+  const unsigned char *p1 = b1, *p2 = b2;\n+  int ret = 0;\n+\n+  for (; n > 0; n--)\n+    ret |= *p1++ ^ *p2++;\n+  return (ret != 0);\n+}\n+\n+#endif /* TIMINGSAFE_BCMP */\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *ctx, const uint8_t *key,\n+                          int keylen) {\n+  if (keylen != (32 + 32)) /* 2 x 256 bit keys */\n+    return -1;\n+  chacha_keysetup(&ctx->main_ctx, key, 256);\n+  chacha_keysetup(&ctx->header_ctx, key + 32, 256);\n+  return 0;\n+}\n+\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt) {\n+  const uint8_t one[8] = {1, 0, 0, 0, 0, 0, 0, 0}; /* NB little-endian */\n+  uint8_t expected_tag[POLY1305_TAGLEN], poly_key[POLY1305_KEYLEN];\n+  int r = -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221463804",
      "id" : 221463804,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTQ2MzgwNA==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 37,
      "path" : "src/crypto/chachapoly_aead.cpp",
      "position" : null,
      "pull_request_review_id" : 160119178,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221463804",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221463848"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221463848"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Use `nullptr` :-)",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-30T15:54:30Z",
      "diff_hunk" : "@@ -0,0 +1,90 @@\n+#include <crypto/chachapoly_aead.h>\n+\n+#define __STDC_WANT_LIB_EXT1__ 1\n+#include <crypto/poly1305.h>\n+#include <string.h>\n+\n+#include <compat/endian.h>\n+#include <support/cleanse.h>\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char *b1, const unsigned char *b2, size_t n) {\n+  const unsigned char *p1 = b1, *p2 = b2;\n+  int ret = 0;\n+\n+  for (; n > 0; n--)\n+    ret |= *p1++ ^ *p2++;\n+  return (ret != 0);\n+}\n+\n+#endif /* TIMINGSAFE_BCMP */\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *ctx, const uint8_t *key,\n+                          int keylen) {\n+  if (keylen != (32 + 32)) /* 2 x 256 bit keys */\n+    return -1;\n+  chacha_keysetup(&ctx->main_ctx, key, 256);\n+  chacha_keysetup(&ctx->header_ctx, key + 32, 256);\n+  return 0;\n+}\n+\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt) {\n+  const uint8_t one[8] = {1, 0, 0, 0, 0, 0, 0, 0}; /* NB little-endian */\n+  uint8_t expected_tag[POLY1305_TAGLEN], poly_key[POLY1305_KEYLEN];\n+  int r = -1;\n+\n+  uint64_t seqnr64 = seqnr;\n+  uint64_t chacha_iv = htole64(seqnr64);\n+  memset(poly_key, 0, sizeof(poly_key));\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, NULL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221463848",
      "id" : 221463848,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTQ2Mzg0OA==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 42,
      "path" : "src/crypto/chachapoly_aead.cpp",
      "position" : 46,
      "pull_request_review_id" : 160119209,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221463848",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221463855"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221463855"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Use `nullptr` :-)",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-30T15:54:45Z",
      "diff_hunk" : "@@ -0,0 +1,90 @@\n+#include <crypto/chachapoly_aead.h>\n+\n+#define __STDC_WANT_LIB_EXT1__ 1\n+#include <crypto/poly1305.h>\n+#include <string.h>\n+\n+#include <compat/endian.h>\n+#include <support/cleanse.h>\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char *b1, const unsigned char *b2, size_t n) {\n+  const unsigned char *p1 = b1, *p2 = b2;\n+  int ret = 0;\n+\n+  for (; n > 0; n--)\n+    ret |= *p1++ ^ *p2++;\n+  return (ret != 0);\n+}\n+\n+#endif /* TIMINGSAFE_BCMP */\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *ctx, const uint8_t *key,\n+                          int keylen) {\n+  if (keylen != (32 + 32)) /* 2 x 256 bit keys */\n+    return -1;\n+  chacha_keysetup(&ctx->main_ctx, key, 256);\n+  chacha_keysetup(&ctx->header_ctx, key + 32, 256);\n+  return 0;\n+}\n+\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt) {\n+  const uint8_t one[8] = {1, 0, 0, 0, 0, 0, 0, 0}; /* NB little-endian */\n+  uint8_t expected_tag[POLY1305_TAGLEN], poly_key[POLY1305_KEYLEN];\n+  int r = -1;\n+\n+  uint64_t seqnr64 = seqnr;\n+  uint64_t chacha_iv = htole64(seqnr64);\n+  memset(poly_key, 0, sizeof(poly_key));\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, NULL);\n+  chacha_encrypt_bytes(&ctx->main_ctx, poly_key, poly_key, sizeof(poly_key));\n+\n+  if (!is_encrypt) {\n+    const uint8_t *tag = src + aadlen + len;\n+\n+    poly1305_auth(expected_tag, src, aadlen + len, poly_key);\n+    if (timingsafe_bcmp(expected_tag, tag, POLY1305_TAGLEN) != 0) {\n+      r = -1;\n+      goto out;\n+    }\n+  }\n+\n+  if (aadlen) {\n+    chacha_ivsetup(&ctx->header_ctx, (uint8_t *)&chacha_iv, NULL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221463855",
      "id" : 221463855,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTQ2Mzg1NQ==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 56,
      "path" : "src/crypto/chachapoly_aead.cpp",
      "position" : 60,
      "pull_request_review_id" : 160119217,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221463855",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221463861"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221463861"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Use `nullptr` :-)",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-09-30T15:54:59Z",
      "diff_hunk" : "@@ -0,0 +1,90 @@\n+#include <crypto/chachapoly_aead.h>\n+\n+#define __STDC_WANT_LIB_EXT1__ 1\n+#include <crypto/poly1305.h>\n+#include <string.h>\n+\n+#include <compat/endian.h>\n+#include <support/cleanse.h>\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char *b1, const unsigned char *b2, size_t n) {\n+  const unsigned char *p1 = b1, *p2 = b2;\n+  int ret = 0;\n+\n+  for (; n > 0; n--)\n+    ret |= *p1++ ^ *p2++;\n+  return (ret != 0);\n+}\n+\n+#endif /* TIMINGSAFE_BCMP */\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *ctx, const uint8_t *key,\n+                          int keylen) {\n+  if (keylen != (32 + 32)) /* 2 x 256 bit keys */\n+    return -1;\n+  chacha_keysetup(&ctx->main_ctx, key, 256);\n+  chacha_keysetup(&ctx->header_ctx, key + 32, 256);\n+  return 0;\n+}\n+\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt) {\n+  const uint8_t one[8] = {1, 0, 0, 0, 0, 0, 0, 0}; /* NB little-endian */\n+  uint8_t expected_tag[POLY1305_TAGLEN], poly_key[POLY1305_KEYLEN];\n+  int r = -1;\n+\n+  uint64_t seqnr64 = seqnr;\n+  uint64_t chacha_iv = htole64(seqnr64);\n+  memset(poly_key, 0, sizeof(poly_key));\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, NULL);\n+  chacha_encrypt_bytes(&ctx->main_ctx, poly_key, poly_key, sizeof(poly_key));\n+\n+  if (!is_encrypt) {\n+    const uint8_t *tag = src + aadlen + len;\n+\n+    poly1305_auth(expected_tag, src, aadlen + len, poly_key);\n+    if (timingsafe_bcmp(expected_tag, tag, POLY1305_TAGLEN) != 0) {\n+      r = -1;\n+      goto out;\n+    }\n+  }\n+\n+  if (aadlen) {\n+    chacha_ivsetup(&ctx->header_ctx, (uint8_t *)&chacha_iv, NULL);\n+    chacha_encrypt_bytes(&ctx->header_ctx, src, dest, aadlen);\n+  }\n+\n+  /* Set Chacha's block counter to 1 */\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, one);\n+  chacha_encrypt_bytes(&ctx->main_ctx, src + aadlen, dest + aadlen, len);\n+\n+  /* If encrypting, calculate and append tag */\n+  if (is_encrypt) {\n+    poly1305_auth(dest + aadlen + len, dest, aadlen + len, poly_key);\n+  }\n+  r = 0;\n+out:\n+  memory_cleanse(expected_tag, sizeof(expected_tag));\n+  memory_cleanse(&chacha_iv, sizeof(chacha_iv));\n+  memory_cleanse(poly_key, sizeof(poly_key));\n+  return r;\n+}\n+\n+int chacha20poly1305_get_length24(struct chachapolyaead_ctx *ctx,\n+                                uint32_t *len24_out, uint32_t seqnr,\n+                                const uint8_t *ciphertext) {\n+  uint8_t buf[3];\n+\n+  uint64_t seqnr64 = htole64(seqnr); //use LE for the nonce\n+  chacha_ivsetup(&ctx->header_ctx, (uint8_t *)&seqnr64, NULL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221463861",
      "id" : 221463861,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTQ2Mzg2MQ==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 82,
      "path" : "src/crypto/chachapoly_aead.cpp",
      "position" : 85,
      "pull_request_review_id" : 160119222,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221463861",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221594295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221594295"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Its upstream code from openssh,.. the plan is to refactor this to c++ after initial merge to master.",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-10-01T12:44:25Z",
      "diff_hunk" : "@@ -0,0 +1,198 @@\n+/*\n+ * Public Domain poly1305 from Andrew Moon\n+ * poly1305-donna-unrolled.c from https://github.com/floodyberry/poly1305-donna\n+ */\n+\n+/* $OpenBSD: poly1305.c,v 1.3 2013/12/19 22:57:13 djm Exp $ */\n+\n+#include <crypto/poly1305.h>\n+\n+#define mul32x32_64(a, b) ((uint64_t)(a) * (b))\n+\n+#define U8TO32_LE(p)                                                           \\\n+  (((uint32_t)((p)[0])) | ((uint32_t)((p)[1]) << 8) |                          \\\n+   ((uint32_t)((p)[2]) << 16) | ((uint32_t)((p)[3]) << 24))\n+\n+#define U32TO8_LE(p, v)                                                        \\\n+  do {                                                                         \\\n+    (p)[0] = (uint8_t)((v));                                                   \\\n+    (p)[1] = (uint8_t)((v) >> 8);                                              \\\n+    (p)[2] = (uint8_t)((v) >> 16);                                             \\\n+    (p)[3] = (uint8_t)((v) >> 24);                                             \\\n+  } while (0)\n+\n+void poly1305_auth(unsigned char out[POLY1305_TAGLEN], const unsigned char *m,\n+                   size_t inlen, const unsigned char key[POLY1305_KEYLEN]) {\n+  uint32_t t0, t1, t2, t3;\n+  uint32_t h0, h1, h2, h3, h4;\n+  uint32_t r0, r1, r2, r3, r4;\n+  uint32_t s1, s2, s3, s4;\n+  uint32_t b, nb;\n+  size_t j;\n+  uint64_t t[5];\n+  uint64_t f0, f1, f2, f3;\n+  uint32_t g0, g1, g2, g3, g4;\n+  uint64_t c;\n+  unsigned char mp[16];\n+\n+  /* clamp key */\n+  t0 = U8TO32_LE(key + 0);\n+  t1 = U8TO32_LE(key + 4);\n+  t2 = U8TO32_LE(key + 8);\n+  t3 = U8TO32_LE(key + 12);\n+\n+  /* precompute multipliers */\n+  r0 = t0 & 0x3ffffff;\n+  t0 >>= 26;\n+  t0 |= t1 << 6;\n+  r1 = t0 & 0x3ffff03;\n+  t1 >>= 20;\n+  t1 |= t2 << 12;\n+  r2 = t1 & 0x3ffc0ff;\n+  t2 >>= 14;\n+  t2 |= t3 << 18;\n+  r3 = t2 & 0x3f03fff;\n+  t3 >>= 8;\n+  r4 = t3 & 0x00fffff;\n+\n+  s1 = r1 * 5;\n+  s2 = r2 * 5;\n+  s3 = r3 * 5;\n+  s4 = r4 * 5;\n+\n+  /* init state */\n+  h0 = 0;\n+  h1 = 0;\n+  h2 = 0;\n+  h3 = 0;\n+  h4 = 0;\n+\n+  /* full blocks */\n+  if (inlen < 16)\n+    goto poly1305_donna_atmost15bytes;\n+poly1305_donna_16bytes:\n+  m += 16;\n+  inlen -= 16;\n+\n+  t0 = U8TO32_LE(m - 16);\n+  t1 = U8TO32_LE(m - 12);\n+  t2 = U8TO32_LE(m - 8);\n+  t3 = U8TO32_LE(m - 4);\n+\n+  h0 += t0 & 0x3ffffff;\n+  h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n+  h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n+  h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n+  h4 += (t3 >> 8) | (1 << 24);\n+\n+poly1305_donna_mul:\n+  t[0] = mul32x32_64(h0, r0) + mul32x32_64(h1, s4) + mul32x32_64(h2, s3) +\n+         mul32x32_64(h3, s2) + mul32x32_64(h4, s1);\n+  t[1] = mul32x32_64(h0, r1) + mul32x32_64(h1, r0) + mul32x32_64(h2, s4) +\n+         mul32x32_64(h3, s3) + mul32x32_64(h4, s2);\n+  t[2] = mul32x32_64(h0, r2) + mul32x32_64(h1, r1) + mul32x32_64(h2, r0) +\n+         mul32x32_64(h3, s4) + mul32x32_64(h4, s3);\n+  t[3] = mul32x32_64(h0, r3) + mul32x32_64(h1, r2) + mul32x32_64(h2, r1) +\n+         mul32x32_64(h3, r0) + mul32x32_64(h4, s4);\n+  t[4] = mul32x32_64(h0, r4) + mul32x32_64(h1, r3) + mul32x32_64(h2, r2) +\n+         mul32x32_64(h3, r1) + mul32x32_64(h4, r0);\n+\n+  h0 = (uint32_t)t[0] & 0x3ffffff;\n+  c = (t[0] >> 26);\n+  t[1] += c;\n+  h1 = (uint32_t)t[1] & 0x3ffffff;\n+  b = (uint32_t)(t[1] >> 26);\n+  t[2] += b;\n+  h2 = (uint32_t)t[2] & 0x3ffffff;\n+  b = (uint32_t)(t[2] >> 26);\n+  t[3] += b;\n+  h3 = (uint32_t)t[3] & 0x3ffffff;\n+  b = (uint32_t)(t[3] >> 26);\n+  t[4] += b;\n+  h4 = (uint32_t)t[4] & 0x3ffffff;\n+  b = (uint32_t)(t[4] >> 26);\n+  h0 += b * 5;\n+\n+  if (inlen >= 16)\n+    goto poly1305_donna_16bytes;\n+\n+/* final bytes */\n+poly1305_donna_atmost15bytes:\n+  if (!inlen)\n+    goto poly1305_donna_finish;\n+\n+  for (j = 0; j < inlen; j++)\n+    mp[j] = m[j];\n+  mp[j++] = 1;\n+  for (; j < 16; j++)\n+    mp[j] = 0;\n+  inlen = 0;\n+\n+  t0 = U8TO32_LE(mp + 0);\n+  t1 = U8TO32_LE(mp + 4);\n+  t2 = U8TO32_LE(mp + 8);\n+  t3 = U8TO32_LE(mp + 12);\n+\n+  h0 += t0 & 0x3ffffff;\n+  h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n+  h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n+  h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n+  h4 += (t3 >> 8);\n+\n+  goto poly1305_donna_mul;\n+\n+poly1305_donna_finish:\n+  b = h0 >> 26;\n+  h0 = h0 & 0x3ffffff;\n+  h1 += b;\n+  b = h1 >> 26;\n+  h1 = h1 & 0x3ffffff;\n+  h2 += b;\n+  b = h2 >> 26;\n+  h2 = h2 & 0x3ffffff;\n+  h3 += b;\n+  b = h3 >> 26;\n+  h3 = h3 & 0x3ffffff;\n+  h4 += b;\n+  b = h4 >> 26;\n+  h4 = h4 & 0x3ffffff;\n+  h0 += b * 5;\n+  b = h0 >> 26;\n+  h0 = h0 & 0x3ffffff;\n+  h1 += b;\n+\n+  g0 = h0 + 5;\n+  b = g0 >> 26;\n+  g0 &= 0x3ffffff;\n+  g1 = h1 + b;\n+  b = g1 >> 26;\n+  g1 &= 0x3ffffff;\n+  g2 = h2 + b;\n+  b = g2 >> 26;\n+  g2 &= 0x3ffffff;\n+  g3 = h3 + b;\n+  b = g3 >> 26;\n+  g3 &= 0x3ffffff;\n+  g4 = h4 + b - (1 << 26);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221594295",
      "id" : 221594295,
      "in_reply_to_id" : 221463737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTU5NDI5NQ==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 176,
      "path" : "src/crypto/poly1305.cpp",
      "position" : 176,
      "pull_request_review_id" : 160277293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221594295",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221596313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221596313"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd like to keep this as C code for now, the .cpp filename extension is for bypassing the CXXFLAGS/CFLAGS issue.",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-10-01T12:51:47Z",
      "diff_hunk" : "@@ -0,0 +1,90 @@\n+#include <crypto/chachapoly_aead.h>\n+\n+#define __STDC_WANT_LIB_EXT1__ 1\n+#include <crypto/poly1305.h>\n+#include <string.h>\n+\n+#include <compat/endian.h>\n+#include <support/cleanse.h>\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char *b1, const unsigned char *b2, size_t n) {\n+  const unsigned char *p1 = b1, *p2 = b2;\n+  int ret = 0;\n+\n+  for (; n > 0; n--)\n+    ret |= *p1++ ^ *p2++;\n+  return (ret != 0);\n+}\n+\n+#endif /* TIMINGSAFE_BCMP */\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *ctx, const uint8_t *key,\n+                          int keylen) {\n+  if (keylen != (32 + 32)) /* 2 x 256 bit keys */\n+    return -1;\n+  chacha_keysetup(&ctx->main_ctx, key, 256);\n+  chacha_keysetup(&ctx->header_ctx, key + 32, 256);\n+  return 0;\n+}\n+\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt) {\n+  const uint8_t one[8] = {1, 0, 0, 0, 0, 0, 0, 0}; /* NB little-endian */\n+  uint8_t expected_tag[POLY1305_TAGLEN], poly_key[POLY1305_KEYLEN];\n+  int r = -1;\n+\n+  uint64_t seqnr64 = seqnr;\n+  uint64_t chacha_iv = htole64(seqnr64);\n+  memset(poly_key, 0, sizeof(poly_key));\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, NULL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221596313",
      "id" : 221596313,
      "in_reply_to_id" : 221463848,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTU5NjMxMw==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 42,
      "path" : "src/crypto/chachapoly_aead.cpp",
      "position" : 46,
      "pull_request_review_id" : 160279931,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221596313",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221597018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221597018"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure if applying 3 time a uint_8t (24bits) the way its done here will guarantee to set the other 8 bits to 0. This is why I initialise with 0, then set bit 0 to 23. Could be that I'm wrong though.",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-10-01T12:54:22Z",
      "diff_hunk" : "@@ -0,0 +1,90 @@\n+#include <crypto/chachapoly_aead.h>\n+\n+#define __STDC_WANT_LIB_EXT1__ 1\n+#include <crypto/poly1305.h>\n+#include <string.h>\n+\n+#include <compat/endian.h>\n+#include <support/cleanse.h>\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char *b1, const unsigned char *b2, size_t n) {\n+  const unsigned char *p1 = b1, *p2 = b2;\n+  int ret = 0;\n+\n+  for (; n > 0; n--)\n+    ret |= *p1++ ^ *p2++;\n+  return (ret != 0);\n+}\n+\n+#endif /* TIMINGSAFE_BCMP */\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *ctx, const uint8_t *key,\n+                          int keylen) {\n+  if (keylen != (32 + 32)) /* 2 x 256 bit keys */\n+    return -1;\n+  chacha_keysetup(&ctx->main_ctx, key, 256);\n+  chacha_keysetup(&ctx->header_ctx, key + 32, 256);\n+  return 0;\n+}\n+\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt) {\n+  const uint8_t one[8] = {1, 0, 0, 0, 0, 0, 0, 0}; /* NB little-endian */\n+  uint8_t expected_tag[POLY1305_TAGLEN], poly_key[POLY1305_KEYLEN];\n+  int r = -1;\n+\n+  uint64_t seqnr64 = seqnr;\n+  uint64_t chacha_iv = htole64(seqnr64);\n+  memset(poly_key, 0, sizeof(poly_key));\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, NULL);\n+  chacha_encrypt_bytes(&ctx->main_ctx, poly_key, poly_key, sizeof(poly_key));\n+\n+  if (!is_encrypt) {\n+    const uint8_t *tag = src + aadlen + len;\n+\n+    poly1305_auth(expected_tag, src, aadlen + len, poly_key);\n+    if (timingsafe_bcmp(expected_tag, tag, POLY1305_TAGLEN) != 0) {\n+      r = -1;\n+      goto out;\n+    }\n+  }\n+\n+  if (aadlen) {\n+    chacha_ivsetup(&ctx->header_ctx, (uint8_t *)&chacha_iv, NULL);\n+    chacha_encrypt_bytes(&ctx->header_ctx, src, dest, aadlen);\n+  }\n+\n+  /* Set Chacha's block counter to 1 */\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, one);\n+  chacha_encrypt_bytes(&ctx->main_ctx, src + aadlen, dest + aadlen, len);\n+\n+  /* If encrypting, calculate and append tag */\n+  if (is_encrypt) {\n+    poly1305_auth(dest + aadlen + len, dest, aadlen + len, poly_key);\n+  }\n+  r = 0;\n+out:\n+  memory_cleanse(expected_tag, sizeof(expected_tag));\n+  memory_cleanse(&chacha_iv, sizeof(chacha_iv));\n+  memory_cleanse(poly_key, sizeof(poly_key));\n+  return r;\n+}\n+\n+int chacha20poly1305_get_length24(struct chachapolyaead_ctx *ctx,\n+                                uint32_t *len24_out, uint32_t seqnr,\n+                                const uint8_t *ciphertext) {\n+  uint8_t buf[3];\n+\n+  uint64_t seqnr64 = htole64(seqnr); //use LE for the nonce\n+  chacha_ivsetup(&ctx->header_ctx, (uint8_t *)&seqnr64, NULL);\n+  chacha_encrypt_bytes(&ctx->header_ctx, ciphertext, buf, 3);\n+  *len24_out = 0;\n+  *len24_out = buf[0] | (buf[1] << 8) | (buf[2] << 16);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221597018",
      "id" : 221597018,
      "in_reply_to_id" : 216966077,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTU5NzAxOA==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 85,
      "path" : "src/crypto/chachapoly_aead.cpp",
      "position" : 88,
      "pull_request_review_id" : 160280815,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221597018",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221597516"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221597516"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like.\r\nThis has been taken from openSSH (https://github.com/openssh/openssh-portable/blob/90e51d672711c19a36573be1785caf35019ae7a8/poly1305.c).",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-10-01T12:55:54Z",
      "diff_hunk" : "@@ -0,0 +1,198 @@\n+/*\n+ * Public Domain poly1305 from Andrew Moon\n+ * poly1305-donna-unrolled.c from https://github.com/floodyberry/poly1305-donna\n+ */\n+\n+/* $OpenBSD: poly1305.c,v 1.3 2013/12/19 22:57:13 djm Exp $ */\n+\n+#include <crypto/poly1305.h>\n+\n+#define mul32x32_64(a, b) ((uint64_t)(a) * (b))\n+\n+#define U8TO32_LE(p)                                                           \\\n+  (((uint32_t)((p)[0])) | ((uint32_t)((p)[1]) << 8) |                          \\\n+   ((uint32_t)((p)[2]) << 16) | ((uint32_t)((p)[3]) << 24))\n+\n+#define U32TO8_LE(p, v)                                                        \\\n+  do {                                                                         \\\n+    (p)[0] = (uint8_t)((v));                                                   \\\n+    (p)[1] = (uint8_t)((v) >> 8);                                              \\\n+    (p)[2] = (uint8_t)((v) >> 16);                                             \\\n+    (p)[3] = (uint8_t)((v) >> 24);                                             \\\n+  } while (0)\n+\n+void poly1305_auth(unsigned char out[POLY1305_TAGLEN], const unsigned char *m,\n+                   size_t inlen, const unsigned char key[POLY1305_KEYLEN]) {\n+  uint32_t t0, t1, t2, t3;\n+  uint32_t h0, h1, h2, h3, h4;\n+  uint32_t r0, r1, r2, r3, r4;\n+  uint32_t s1, s2, s3, s4;\n+  uint32_t b, nb;\n+  size_t j;\n+  uint64_t t[5];\n+  uint64_t f0, f1, f2, f3;\n+  uint32_t g0, g1, g2, g3, g4;\n+  uint64_t c;\n+  unsigned char mp[16];\n+\n+  /* clamp key */\n+  t0 = U8TO32_LE(key + 0);\n+  t1 = U8TO32_LE(key + 4);\n+  t2 = U8TO32_LE(key + 8);\n+  t3 = U8TO32_LE(key + 12);\n+\n+  /* precompute multipliers */\n+  r0 = t0 & 0x3ffffff;\n+  t0 >>= 26;\n+  t0 |= t1 << 6;\n+  r1 = t0 & 0x3ffff03;\n+  t1 >>= 20;\n+  t1 |= t2 << 12;\n+  r2 = t1 & 0x3ffc0ff;\n+  t2 >>= 14;\n+  t2 |= t3 << 18;\n+  r3 = t2 & 0x3f03fff;\n+  t3 >>= 8;\n+  r4 = t3 & 0x00fffff;\n+\n+  s1 = r1 * 5;\n+  s2 = r2 * 5;\n+  s3 = r3 * 5;\n+  s4 = r4 * 5;\n+\n+  /* init state */\n+  h0 = 0;\n+  h1 = 0;\n+  h2 = 0;\n+  h3 = 0;\n+  h4 = 0;\n+\n+  /* full blocks */\n+  if (inlen < 16)\n+    goto poly1305_donna_atmost15bytes;\n+poly1305_donna_16bytes:\n+  m += 16;\n+  inlen -= 16;\n+\n+  t0 = U8TO32_LE(m - 16);\n+  t1 = U8TO32_LE(m - 12);\n+  t2 = U8TO32_LE(m - 8);\n+  t3 = U8TO32_LE(m - 4);\n+\n+  h0 += t0 & 0x3ffffff;\n+  h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n+  h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n+  h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n+  h4 += (t3 >> 8) | (1 << 24);\n+\n+poly1305_donna_mul:\n+  t[0] = mul32x32_64(h0, r0) + mul32x32_64(h1, s4) + mul32x32_64(h2, s3) +\n+         mul32x32_64(h3, s2) + mul32x32_64(h4, s1);\n+  t[1] = mul32x32_64(h0, r1) + mul32x32_64(h1, r0) + mul32x32_64(h2, s4) +\n+         mul32x32_64(h3, s3) + mul32x32_64(h4, s2);\n+  t[2] = mul32x32_64(h0, r2) + mul32x32_64(h1, r1) + mul32x32_64(h2, r0) +\n+         mul32x32_64(h3, s4) + mul32x32_64(h4, s3);\n+  t[3] = mul32x32_64(h0, r3) + mul32x32_64(h1, r2) + mul32x32_64(h2, r1) +\n+         mul32x32_64(h3, r0) + mul32x32_64(h4, s4);\n+  t[4] = mul32x32_64(h0, r4) + mul32x32_64(h1, r3) + mul32x32_64(h2, r2) +\n+         mul32x32_64(h3, r1) + mul32x32_64(h4, r0);\n+\n+  h0 = (uint32_t)t[0] & 0x3ffffff;\n+  c = (t[0] >> 26);\n+  t[1] += c;\n+  h1 = (uint32_t)t[1] & 0x3ffffff;\n+  b = (uint32_t)(t[1] >> 26);\n+  t[2] += b;\n+  h2 = (uint32_t)t[2] & 0x3ffffff;\n+  b = (uint32_t)(t[2] >> 26);\n+  t[3] += b;\n+  h3 = (uint32_t)t[3] & 0x3ffffff;\n+  b = (uint32_t)(t[3] >> 26);\n+  t[4] += b;\n+  h4 = (uint32_t)t[4] & 0x3ffffff;\n+  b = (uint32_t)(t[4] >> 26);\n+  h0 += b * 5;\n+\n+  if (inlen >= 16)\n+    goto poly1305_donna_16bytes;\n+\n+/* final bytes */\n+poly1305_donna_atmost15bytes:\n+  if (!inlen)\n+    goto poly1305_donna_finish;\n+\n+  for (j = 0; j < inlen; j++)\n+    mp[j] = m[j];\n+  mp[j++] = 1;\n+  for (; j < 16; j++)\n+    mp[j] = 0;\n+  inlen = 0;\n+\n+  t0 = U8TO32_LE(mp + 0);\n+  t1 = U8TO32_LE(mp + 4);\n+  t2 = U8TO32_LE(mp + 8);\n+  t3 = U8TO32_LE(mp + 12);\n+\n+  h0 += t0 & 0x3ffffff;\n+  h1 += ((((uint64_t)t1 << 32) | t0) >> 26) & 0x3ffffff;\n+  h2 += ((((uint64_t)t2 << 32) | t1) >> 20) & 0x3ffffff;\n+  h3 += ((((uint64_t)t3 << 32) | t2) >> 14) & 0x3ffffff;\n+  h4 += (t3 >> 8);\n+\n+  goto poly1305_donna_mul;\n+\n+poly1305_donna_finish:\n+  b = h0 >> 26;\n+  h0 = h0 & 0x3ffffff;\n+  h1 += b;\n+  b = h1 >> 26;\n+  h1 = h1 & 0x3ffffff;\n+  h2 += b;\n+  b = h2 >> 26;\n+  h2 = h2 & 0x3ffffff;\n+  h3 += b;\n+  b = h3 >> 26;\n+  h3 = h3 & 0x3ffffff;\n+  h4 += b;\n+  b = h4 >> 26;\n+  h4 = h4 & 0x3ffffff;\n+  h0 += b * 5;\n+  b = h0 >> 26;\n+  h0 = h0 & 0x3ffffff;\n+  h1 += b;\n+\n+  g0 = h0 + 5;\n+  b = g0 >> 26;\n+  g0 &= 0x3ffffff;\n+  g1 = h1 + b;\n+  b = g1 >> 26;\n+  g1 &= 0x3ffffff;\n+  g2 = h2 + b;\n+  b = g2 >> 26;\n+  g2 &= 0x3ffffff;\n+  g3 = h3 + b;\n+  b = g3 >> 26;\n+  g3 &= 0x3ffffff;\n+  g4 = h4 + b - (1 << 26);\n+\n+  b = (g4 >> 31) - 1;\n+  nb = ~b;\n+  h0 = (h0 & nb) | (g0 & b);\n+  h1 = (h1 & nb) | (g1 & b);\n+  h2 = (h2 & nb) | (g2 & b);\n+  h3 = (h3 & nb) | (g3 & b);\n+  h4 = (h4 & nb) | (g4 & b);\n+\n+  f0 = ((h0) | (h1 << 26)) + (uint64_t)U8TO32_LE(&key[16]);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221597516",
      "id" : 221597516,
      "in_reply_to_id" : 216966884,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTU5NzUxNg==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 186,
      "path" : "src/crypto/poly1305.cpp",
      "position" : 186,
      "pull_request_review_id" : 160281448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T13:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221597516",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed points reported by @practicalswift",
      "created_at" : "2018-10-01T13:18:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-425904074",
      "id" : 425904074,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNTkwNDA3NA==",
      "updated_at" : "2018-10-01T13:18:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425904074",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221648668"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221648668"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We wouldn't initialise before assignment if the RHS was an integer, right? :-)\r\n\r\n`buf[0] | (buf[1] << 8) | (buf[2] << 16)` evaluates to an integer.\r\n\r\nBut don't trust me Ã¢ÂÂ I'm just a fellow human.\r\n\r\nLet's verify using our favourite C++ interpreter `cling`:\r\n\r\n```\r\n$ cling\r\n\r\n****************** CLING ******************\r\n* Type C++ code and press enter to run it *\r\n*             Type .q to exit             *\r\n*******************************************\r\n[cling]$ typeid(1).name()\r\n(const char *) \"i\"\r\n[cling]$ #include <cstdint>\r\n[cling]$ uint8_t buf[3] = {1, 2, 3}\r\n(uint8_t [3]) { '0x01', '0x02', '0x03' }\r\n[cling]$ typeid(buf[0] | (buf[1] << 8) | (buf[2] << 16)).name()\r\n(const char *) \"i\"\r\n[cling]$ buf[0] | (buf[1] << 8) | (buf[2] << 16)\r\n(int) 197121\r\n```\r\n\r\n:-)",
      "commit_id" : "e65a41853dcc1ba968e47a5e8d40e36d1f346a08",
      "created_at" : "2018-10-01T15:16:52Z",
      "diff_hunk" : "@@ -0,0 +1,90 @@\n+#include <crypto/chachapoly_aead.h>\n+\n+#define __STDC_WANT_LIB_EXT1__ 1\n+#include <crypto/poly1305.h>\n+#include <string.h>\n+\n+#include <compat/endian.h>\n+#include <support/cleanse.h>\n+\n+#ifndef HAVE_TIMINGSAFE_BCMP\n+\n+int timingsafe_bcmp(const unsigned char *b1, const unsigned char *b2, size_t n) {\n+  const unsigned char *p1 = b1, *p2 = b2;\n+  int ret = 0;\n+\n+  for (; n > 0; n--)\n+    ret |= *p1++ ^ *p2++;\n+  return (ret != 0);\n+}\n+\n+#endif /* TIMINGSAFE_BCMP */\n+\n+int chacha20poly1305_init(struct chachapolyaead_ctx *ctx, const uint8_t *key,\n+                          int keylen) {\n+  if (keylen != (32 + 32)) /* 2 x 256 bit keys */\n+    return -1;\n+  chacha_keysetup(&ctx->main_ctx, key, 256);\n+  chacha_keysetup(&ctx->header_ctx, key + 32, 256);\n+  return 0;\n+}\n+\n+int chacha20poly1305_crypt(struct chachapolyaead_ctx *ctx, uint32_t seqnr,\n+                           uint8_t *dest, const uint8_t *src, uint32_t len,\n+                           uint32_t aadlen, int is_encrypt) {\n+  const uint8_t one[8] = {1, 0, 0, 0, 0, 0, 0, 0}; /* NB little-endian */\n+  uint8_t expected_tag[POLY1305_TAGLEN], poly_key[POLY1305_KEYLEN];\n+  int r = -1;\n+\n+  uint64_t seqnr64 = seqnr;\n+  uint64_t chacha_iv = htole64(seqnr64);\n+  memset(poly_key, 0, sizeof(poly_key));\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, NULL);\n+  chacha_encrypt_bytes(&ctx->main_ctx, poly_key, poly_key, sizeof(poly_key));\n+\n+  if (!is_encrypt) {\n+    const uint8_t *tag = src + aadlen + len;\n+\n+    poly1305_auth(expected_tag, src, aadlen + len, poly_key);\n+    if (timingsafe_bcmp(expected_tag, tag, POLY1305_TAGLEN) != 0) {\n+      r = -1;\n+      goto out;\n+    }\n+  }\n+\n+  if (aadlen) {\n+    chacha_ivsetup(&ctx->header_ctx, (uint8_t *)&chacha_iv, NULL);\n+    chacha_encrypt_bytes(&ctx->header_ctx, src, dest, aadlen);\n+  }\n+\n+  /* Set Chacha's block counter to 1 */\n+  chacha_ivsetup(&ctx->main_ctx, (uint8_t *)&chacha_iv, one);\n+  chacha_encrypt_bytes(&ctx->main_ctx, src + aadlen, dest + aadlen, len);\n+\n+  /* If encrypting, calculate and append tag */\n+  if (is_encrypt) {\n+    poly1305_auth(dest + aadlen + len, dest, aadlen + len, poly_key);\n+  }\n+  r = 0;\n+out:\n+  memory_cleanse(expected_tag, sizeof(expected_tag));\n+  memory_cleanse(&chacha_iv, sizeof(chacha_iv));\n+  memory_cleanse(poly_key, sizeof(poly_key));\n+  return r;\n+}\n+\n+int chacha20poly1305_get_length24(struct chachapolyaead_ctx *ctx,\n+                                uint32_t *len24_out, uint32_t seqnr,\n+                                const uint8_t *ciphertext) {\n+  uint8_t buf[3];\n+\n+  uint64_t seqnr64 = htole64(seqnr); //use LE for the nonce\n+  chacha_ivsetup(&ctx->header_ctx, (uint8_t *)&seqnr64, NULL);\n+  chacha_encrypt_bytes(&ctx->header_ctx, ciphertext, buf, 3);\n+  *len24_out = 0;\n+  *len24_out = buf[0] | (buf[1] << 8) | (buf[2] << 16);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#discussion_r221648668",
      "id" : 221648668,
      "in_reply_to_id" : 216966077,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTY0ODY2OA==",
      "original_commit_id" : "d415a02a481c8c42786204a3a3dac64ccbff2953",
      "original_position" : 85,
      "path" : "src/crypto/chachapoly_aead.cpp",
      "position" : 88,
      "pull_request_review_id" : 160347486,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14050",
      "updated_at" : "2018-10-01T15:20:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221648668",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm afraid this PR doesn't compile when rebased on `master`",
      "created_at" : "2018-12-07T08:37:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-445161061",
      "id" : 445161061,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTE2MTA2MQ==",
      "updated_at" : "2018-12-07T08:37:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445161061",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Partially superseded by #15512 (the ChaCha20 part)",
      "created_at" : "2019-03-01T16:14:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-468718860",
      "id" : 468718860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2ODcxODg2MA==",
      "updated_at" : "2019-03-01T16:14:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468718860",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing...\r\nIt's now replaced with #15512,  #15519 and  #15649.",
      "created_at" : "2019-03-24T19:43:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14050#issuecomment-475992747",
      "id" : 475992747,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14050",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3NTk5Mjc0Nw==",
      "updated_at" : "2019-03-24T19:43:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475992747",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   }
]
