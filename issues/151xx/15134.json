{
   "assignee" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
      "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
      "followers_url" : "https://api.github.com/users/theuni/followers",
      "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/theuni",
      "id" : 417043,
      "login" : "theuni",
      "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
      "organizations_url" : "https://api.github.com/users/theuni/orgs",
      "received_events_url" : "https://api.github.com/users/theuni/received_events",
      "repos_url" : "https://api.github.com/users/theuni/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/theuni"
   },
   "assignees" : [
      {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   ],
   "author_association" : "MEMBER",
   "body" : "Switch one of the Travis jobs to an unsigned char environment (`-funsigned-char`).\r\n\r\nThis will help us catch errors due to code written under the assumption that `char` has the same value range as `signed char`.\r\n\r\nThe signedness of `char` is implementation-defined.\r\n\r\nExample:\r\n\r\n```\r\n$ uname -a\r\nLinux [â¦] x86_64 x86_64 x86_64 GNU/Linux\r\n$ cat foo.cpp\r\n#include <iostream>\r\n\r\nint main() {\r\n    char c;\r\n    std::cin >> c;\r\n    int i = (unsigned char)c;\r\n    std::cout << i << \"\\n\";\r\n}\r\n$ clang++ -o foo foo.cpp\r\n$ echo -e \"\\xff\" | ./foo\r\n255\r\n$ clang++ -fsigned-char -o foo foo.cpp\r\n$ echo -e \"\\xff\" | ./foo\r\n255\r\n$ clang++ -funsigned-char -o foo foo.cpp\r\n$ echo -e \"\\xff\" | ./foo\r\n255\r\n$ cat bar.cpp\r\n#include <iostream>\r\n\r\nint main() {\r\n    char c;\r\n    std::cin >> c;\r\n    int i = c;\r\n    std::cout << i << \"\\n\";\r\n}\r\n$ clang++ -o bar bar.cpp\r\n$ echo -e \"\\xff\" | ./bar\r\n-1\r\n$ clang++ -fsigned-char -o bar bar.cpp\r\n$ echo -e \"\\xff\" | ./bar\r\n-1\r\n$ clang++ -funsigned-char -o bar bar.cpp\r\n$ echo -e \"\\xff\" | ./bar\r\n255\r\n```\r\n\r\n`gcc` chars:\r\n* signed: alpha, hppa, ia64, m68k, mips, sh, sparc, x86\r\n* unsigned: arm, powerpc, s390\r\n\r\nAbout `-funsigned-char`:\r\n\r\n> Let the type \"char\" be unsigned, like \"unsigned char\".\r\n> \r\n> Each kind of machine has a default for what \"char\" should be.  It is either like \"unsigned char\" by default or like \"signed char\" by default.\r\n> \r\n> Ideally, a portable program should always use \"signed char\" or \"unsigned char\" when it depends on the signedness of an object.  But many programs have been written to use plain \"char\" and expect it to be signed, or expect it to be unsigned, depending on the machines they were written for.\r\n> \r\n> This option, and its inverse, let you make such a program work with the opposite default. The type \"char\" is always a distinct type from each of \"signed char\" or \"unsigned char\", even though its behavior is always just like one of those two.\r\n",
   "closed_at" : "2019-07-30T14:59:16Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 14,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15134/comments",
   "created_at" : "2019-01-09T07:05:25Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15134/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/15134",
   "id" : 397238331,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15134/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MjQzMjMxMzE1",
   "number" : 15134,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/15134.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15134",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/15134.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15134"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "tests: Switch one of the Travis jobs to an unsigned char environment (-funsigned-char)",
   "updated_at" : "2019-07-30T14:59:16Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15134",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
