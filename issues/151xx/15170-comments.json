[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-01-15T03:49:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15170#issuecomment-454258051",
      "id" : 454258051,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15170",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NDI1ODA1MQ==",
      "updated_at" : "2019-01-15T03:49:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454258051",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15166](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15166.html) (qa: Ignore shellcheck warnings introduced in new versions by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-01-15T06:59:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15170#issuecomment-454286979",
      "id" : 454286979,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15170",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NDI4Njk3OQ==",
      "updated_at" : "2019-01-15T06:59:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454286979",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15170#discussion_r247786720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15170"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247786720"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: duplicate",
      "commit_id" : "cbd9091ed5a76bb2e1e57cd0d8db035c15529341",
      "created_at" : "2019-01-15T07:35:45Z",
      "diff_hunk" : "@@ -22,27 +22,29 @@ if ! command -v shellcheck > /dev/null; then\n fi\n \n # Disabled warnings:\n-# SC1087: Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet).\n-# SC1117: Backslash is literal in \"\\.\". Prefer explicit escaping: \"\\\\.\".\n-# SC2001: See if you can use ${variable//search/replace} instead.\n-# SC2004: $/${} is unnecessary on arithmetic variables.\n-# SC2005: Useless echo? Instead of 'echo $(cmd)', just use 'cmd'.\n-# SC2006: Use $(..) instead of legacy `..`.\n-# SC2016: Expressions don't expand in single quotes, use double quotes for that.\n-# SC2028: echo won't expand escape sequences. Consider printf.\n-# SC2046: Quote this to prevent word splitting.\n-# SC2048: Use \"$@\" (with quotes) to prevent whitespace problems.\n-# SC2066: Since you double quoted this, it will not word split, and the loop will only run once.\n-# SC2086: Double quote to prevent globbing and word splitting.\n-# SC2116: Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n-# SC2148: Tips depend on target shell and yours is unknown. Add a shebang.\n-# SC2162: read without -r will mangle backslashes.\n-# SC2166: Prefer [ p ] && [ q ] as [ p -a q ] is not well defined.\n-# SC2166: Prefer [ p ] || [ q ] as [ p -o q ] is not well defined.\n-# SC2181: Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.\n-# SC2206: Quote to prevent word splitting, or split robustly with mapfile or read -a.\n-# SC2207: Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n-# SC2230: which is non-standard. Use builtin 'command -v' instead.\n-# SC2236: Don't force -n instead of ! -z.\n-shellcheck -e SC1087,SC1117,SC2001,SC2004,SC2005,SC2006,SC2016,SC2028,SC2046,SC2048,SC2066,SC2086,SC2116,SC2148,SC2162,SC2166,SC2181,SC2206,SC2207,SC2230,SC2236 \\\n+disabled=(\n+    SC1087 # Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet).\n+    SC1117 # Backslash is literal in \"\\.\". Prefer explicit escaping: \"\\\\.\".\n+    SC2001 # See if you can use ${variable//search/replace} instead.\n+    SC2004 # $/${} is unnecessary on arithmetic variables.\n+    SC2005 # Useless echo? Instead of 'echo $(cmd)', just use 'cmd'.\n+    SC2006 # Use $(..) instead of legacy `..`.\n+    SC2016 # Expressions don't expand in single quotes, use double quotes for that.\n+    SC2028 # echo won't expand escape sequences. Consider printf.\n+    SC2046 # Quote this to prevent word splitting.\n+    SC2048 # Use \"$@\" (with quotes) to prevent whitespace problems.\n+    SC2066 # Since you double quoted this, it will not word split, and the loop will only run once.\n+    SC2086 # Double quote to prevent globbing and word splitting.\n+    SC2116 # Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n+    SC2148 # Tips depend on target shell and yours is unknown. Add a shebang.\n+    SC2162 # read without -r will mangle backslashes.\n+    SC2166 # Prefer [ p ] && [ q ] as [ p -a q ] is not well defined.\n+    SC2166 # Prefer [ p ] || [ q ] as [ p -o q ] is not well defined.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15170#discussion_r247786720",
      "id" : 247786720,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Nzc4NjcyMA==",
      "original_commit_id" : "cbd9091ed5a76bb2e1e57cd0d8db035c15529341",
      "original_position" : 44,
      "path" : "test/lint/lint-shell.sh",
      "position" : 44,
      "pull_request_review_id" : 192513020,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15170",
      "updated_at" : "2019-01-15T07:35:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247786720",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15170#discussion_r247787213"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15170"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247787213"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: `--exclude=` would be a bit more explicit/self-documenting",
      "commit_id" : "cbd9091ed5a76bb2e1e57cd0d8db035c15529341",
      "created_at" : "2019-01-15T07:38:34Z",
      "diff_hunk" : "@@ -22,27 +22,29 @@ if ! command -v shellcheck > /dev/null; then\n fi\n \n # Disabled warnings:\n-# SC1087: Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet).\n-# SC1117: Backslash is literal in \"\\.\". Prefer explicit escaping: \"\\\\.\".\n-# SC2001: See if you can use ${variable//search/replace} instead.\n-# SC2004: $/${} is unnecessary on arithmetic variables.\n-# SC2005: Useless echo? Instead of 'echo $(cmd)', just use 'cmd'.\n-# SC2006: Use $(..) instead of legacy `..`.\n-# SC2016: Expressions don't expand in single quotes, use double quotes for that.\n-# SC2028: echo won't expand escape sequences. Consider printf.\n-# SC2046: Quote this to prevent word splitting.\n-# SC2048: Use \"$@\" (with quotes) to prevent whitespace problems.\n-# SC2066: Since you double quoted this, it will not word split, and the loop will only run once.\n-# SC2086: Double quote to prevent globbing and word splitting.\n-# SC2116: Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n-# SC2148: Tips depend on target shell and yours is unknown. Add a shebang.\n-# SC2162: read without -r will mangle backslashes.\n-# SC2166: Prefer [ p ] && [ q ] as [ p -a q ] is not well defined.\n-# SC2166: Prefer [ p ] || [ q ] as [ p -o q ] is not well defined.\n-# SC2181: Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.\n-# SC2206: Quote to prevent word splitting, or split robustly with mapfile or read -a.\n-# SC2207: Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n-# SC2230: which is non-standard. Use builtin 'command -v' instead.\n-# SC2236: Don't force -n instead of ! -z.\n-shellcheck -e SC1087,SC1117,SC2001,SC2004,SC2005,SC2006,SC2016,SC2028,SC2046,SC2048,SC2066,SC2086,SC2116,SC2148,SC2162,SC2166,SC2181,SC2206,SC2207,SC2230,SC2236 \\\n+disabled=(\n+    SC1087 # Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet).\n+    SC1117 # Backslash is literal in \"\\.\". Prefer explicit escaping: \"\\\\.\".\n+    SC2001 # See if you can use ${variable//search/replace} instead.\n+    SC2004 # $/${} is unnecessary on arithmetic variables.\n+    SC2005 # Useless echo? Instead of 'echo $(cmd)', just use 'cmd'.\n+    SC2006 # Use $(..) instead of legacy `..`.\n+    SC2016 # Expressions don't expand in single quotes, use double quotes for that.\n+    SC2028 # echo won't expand escape sequences. Consider printf.\n+    SC2046 # Quote this to prevent word splitting.\n+    SC2048 # Use \"$@\" (with quotes) to prevent whitespace problems.\n+    SC2066 # Since you double quoted this, it will not word split, and the loop will only run once.\n+    SC2086 # Double quote to prevent globbing and word splitting.\n+    SC2116 # Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n+    SC2148 # Tips depend on target shell and yours is unknown. Add a shebang.\n+    SC2162 # read without -r will mangle backslashes.\n+    SC2166 # Prefer [ p ] && [ q ] as [ p -a q ] is not well defined.\n+    SC2166 # Prefer [ p ] || [ q ] as [ p -o q ] is not well defined.\n+    SC2181 # Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.\n+    SC2206 # Quote to prevent word splitting, or split robustly with mapfile or read -a.\n+    SC2207 # Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n+    SC2230 # which is non-standard. Use builtin 'command -v' instead.\n+    SC2236 # Don't force -n instead of ! -z.\n+)\n+shellcheck -e \"$(IFS=\",\"; echo \"${disabled[*]}\")\" \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15170#discussion_r247787213",
      "id" : 247787213,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Nzc4NzIxMw==",
      "original_commit_id" : "cbd9091ed5a76bb2e1e57cd0d8db035c15529341",
      "original_position" : 51,
      "path" : "test/lint/lint-shell.sh",
      "position" : 51,
      "pull_request_review_id" : 192513683,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15170",
      "updated_at" : "2019-01-15T07:38:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247787213",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK https://github.com/bitcoin/bitcoin/pull/15170/commits/cbd9091ed5a76bb2e1e57cd0d8db035c15529341 - confirmed the same checks are disabled",
      "created_at" : "2019-01-15T07:43:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15170#issuecomment-454295681",
      "id" : 454295681,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15170",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NDI5NTY4MQ==",
      "updated_at" : "2019-01-15T07:43:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454295681",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK cbd9091ed5a76bb2e1e57cd0d8db035c15529341\r\n\r\nVery nice to see a contribution from the `shellcheck` author. @koalaman, welcome as a contributor! Would be nice if you were willing to review the `shellcheck` related PR #15166 :-)",
      "created_at" : "2019-01-15T09:05:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15170#issuecomment-454317052",
      "id" : 454317052,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15170",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NDMxNzA1Mg==",
      "updated_at" : "2019-01-15T09:05:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454317052",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Much better! I'd still prefer a list of cases to check, instead of those to not check, but this is at least DRY.\r\n\r\nutACK cbd9091ed5a76bb2e1e57cd0d8db035c15529341",
      "created_at" : "2019-01-16T10:56:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15170#issuecomment-454737825",
      "id" : 454737825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15170",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NDczNzgyNQ==",
      "updated_at" : "2019-01-16T10:56:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454737825",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
