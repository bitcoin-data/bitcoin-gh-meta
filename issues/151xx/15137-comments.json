[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15137#discussion_r246857886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15137"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246857886"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Choose another name for `coin` to avoid shadowing `coin` on L127?",
      "commit_id" : "24ec978f916ed546ae7042a57da6d3f0ff67b866",
      "created_at" : "2019-01-10T17:47:44Z",
      "diff_hunk" : "@@ -98,6 +98,78 @@ class CCoinsViewCacheTest : public CCoinsViewCache\n \n BOOST_FIXTURE_TEST_SUITE(coins_tests, BasicTestingSetup)\n \n+// This trivial contract must be tested, because instances of CCoinsView are used in production code\n+BOOST_AUTO_TEST_CASE(coins_CCoinsViewContract)\n+{\n+    CCoinsView view;\n+\n+    Coin coin;\n+    COutPoint const outPoint;\n+    BOOST_CHECK_EQUAL(view.GetCoin(outPoint, coin), false);\n+    BOOST_CHECK_EQUAL(view.GetBestBlock(), uint256());\n+    BOOST_CHECK_EQUAL(view.GetHeadBlocks().size(), 0);\n+\n+    CCoinsMap map;\n+    uint256 hashBlock;\n+    BOOST_CHECK_EQUAL(view.BatchWrite(map, hashBlock), false);\n+    BOOST_CHECK(view.Cursor() == nullptr);\n+    BOOST_CHECK_EQUAL(view.HaveCoin(outPoint), false);\n+    BOOST_CHECK_EQUAL(view.HaveCoin(outPoint), view.GetCoin(outPoint, coin));\n+}\n+\n+// Test the contract in order to detect unintended modifications\n+BOOST_AUTO_TEST_CASE(coins_CCoinsViewBackendContract)\n+{\n+    // CCoinsViewBacked effectively delegates to an instance of CCoinsView.\n+    CCoinsView view;\n+    CCoinsViewBacked vBacked(&view);\n+\n+    Coin coin;\n+    COutPoint outPoint;\n+    BOOST_CHECK_EQUAL(vBacked.GetCoin(outPoint, coin), false);\n+    BOOST_CHECK_EQUAL(vBacked.HaveCoin(outPoint), false);\n+    BOOST_CHECK_EQUAL(vBacked.GetBestBlock(), uint256());\n+    BOOST_CHECK_EQUAL(vBacked.GetHeadBlocks().size(), 0);\n+\n+    CCoinsMap map;\n+    uint256 hashBlock;\n+    BOOST_CHECK_EQUAL(vBacked.BatchWrite(map, hashBlock), false);\n+    BOOST_CHECK(vBacked.Cursor() == nullptr);\n+    BOOST_CHECK_EQUAL(vBacked.EstimateSize(), 0);\n+\n+    // Provide an alternaitve implementation of CCoinsView with the opposite behavior\n+    // and test that CCoinsViewBackend behaves accordingly\n+    class Opposite : public CCoinsView\n+    {\n+        bool GetCoin(const COutPoint& outpoint, Coin& coin) const override { return true; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15137#discussion_r246857886",
      "id" : 246857886,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Njg1Nzg4Ng==",
      "original_commit_id" : "6e541291d4dd9f73fbd652f310c0832c3adb4099",
      "original_position" : 47,
      "path" : "src/test/coins_tests.cpp",
      "position" : 47,
      "pull_request_review_id" : 191333595,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15137",
      "updated_at" : "2019-01-15T22:20:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246857886",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15137#discussion_r246858010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15137"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246858010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here but for `hashBlock`.",
      "commit_id" : "24ec978f916ed546ae7042a57da6d3f0ff67b866",
      "created_at" : "2019-01-10T17:48:08Z",
      "diff_hunk" : "@@ -98,6 +98,78 @@ class CCoinsViewCacheTest : public CCoinsViewCache\n \n BOOST_FIXTURE_TEST_SUITE(coins_tests, BasicTestingSetup)\n \n+// This trivial contract must be tested, because instances of CCoinsView are used in production code\n+BOOST_AUTO_TEST_CASE(coins_CCoinsViewContract)\n+{\n+    CCoinsView view;\n+\n+    Coin coin;\n+    COutPoint const outPoint;\n+    BOOST_CHECK_EQUAL(view.GetCoin(outPoint, coin), false);\n+    BOOST_CHECK_EQUAL(view.GetBestBlock(), uint256());\n+    BOOST_CHECK_EQUAL(view.GetHeadBlocks().size(), 0);\n+\n+    CCoinsMap map;\n+    uint256 hashBlock;\n+    BOOST_CHECK_EQUAL(view.BatchWrite(map, hashBlock), false);\n+    BOOST_CHECK(view.Cursor() == nullptr);\n+    BOOST_CHECK_EQUAL(view.HaveCoin(outPoint), false);\n+    BOOST_CHECK_EQUAL(view.HaveCoin(outPoint), view.GetCoin(outPoint, coin));\n+}\n+\n+// Test the contract in order to detect unintended modifications\n+BOOST_AUTO_TEST_CASE(coins_CCoinsViewBackendContract)\n+{\n+    // CCoinsViewBacked effectively delegates to an instance of CCoinsView.\n+    CCoinsView view;\n+    CCoinsViewBacked vBacked(&view);\n+\n+    Coin coin;\n+    COutPoint outPoint;\n+    BOOST_CHECK_EQUAL(vBacked.GetCoin(outPoint, coin), false);\n+    BOOST_CHECK_EQUAL(vBacked.HaveCoin(outPoint), false);\n+    BOOST_CHECK_EQUAL(vBacked.GetBestBlock(), uint256());\n+    BOOST_CHECK_EQUAL(vBacked.GetHeadBlocks().size(), 0);\n+\n+    CCoinsMap map;\n+    uint256 hashBlock;\n+    BOOST_CHECK_EQUAL(vBacked.BatchWrite(map, hashBlock), false);\n+    BOOST_CHECK(vBacked.Cursor() == nullptr);\n+    BOOST_CHECK_EQUAL(vBacked.EstimateSize(), 0);\n+\n+    // Provide an alternaitve implementation of CCoinsView with the opposite behavior\n+    // and test that CCoinsViewBackend behaves accordingly\n+    class Opposite : public CCoinsView\n+    {\n+        bool GetCoin(const COutPoint& outpoint, Coin& coin) const override { return true; }\n+        bool BatchWrite(CCoinsMap& mapCoins, const uint256& hashBlock) override { return true; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15137#discussion_r246858010",
      "id" : 246858010,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Njg1ODAxMA==",
      "original_commit_id" : "6e541291d4dd9f73fbd652f310c0832c3adb4099",
      "original_position" : 48,
      "path" : "src/test/coins_tests.cpp",
      "position" : 48,
      "pull_request_review_id" : 191333772,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15137",
      "updated_at" : "2019-01-15T22:20:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246858010",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15137#discussion_r246858187"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15137"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246858187"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be \"alternative\" :-)",
      "commit_id" : "24ec978f916ed546ae7042a57da6d3f0ff67b866",
      "created_at" : "2019-01-10T17:48:30Z",
      "diff_hunk" : "@@ -98,6 +98,78 @@ class CCoinsViewCacheTest : public CCoinsViewCache\n \n BOOST_FIXTURE_TEST_SUITE(coins_tests, BasicTestingSetup)\n \n+// This trivial contract must be tested, because instances of CCoinsView are used in production code\n+BOOST_AUTO_TEST_CASE(coins_CCoinsViewContract)\n+{\n+    CCoinsView view;\n+\n+    Coin coin;\n+    COutPoint const outPoint;\n+    BOOST_CHECK_EQUAL(view.GetCoin(outPoint, coin), false);\n+    BOOST_CHECK_EQUAL(view.GetBestBlock(), uint256());\n+    BOOST_CHECK_EQUAL(view.GetHeadBlocks().size(), 0);\n+\n+    CCoinsMap map;\n+    uint256 hashBlock;\n+    BOOST_CHECK_EQUAL(view.BatchWrite(map, hashBlock), false);\n+    BOOST_CHECK(view.Cursor() == nullptr);\n+    BOOST_CHECK_EQUAL(view.HaveCoin(outPoint), false);\n+    BOOST_CHECK_EQUAL(view.HaveCoin(outPoint), view.GetCoin(outPoint, coin));\n+}\n+\n+// Test the contract in order to detect unintended modifications\n+BOOST_AUTO_TEST_CASE(coins_CCoinsViewBackendContract)\n+{\n+    // CCoinsViewBacked effectively delegates to an instance of CCoinsView.\n+    CCoinsView view;\n+    CCoinsViewBacked vBacked(&view);\n+\n+    Coin coin;\n+    COutPoint outPoint;\n+    BOOST_CHECK_EQUAL(vBacked.GetCoin(outPoint, coin), false);\n+    BOOST_CHECK_EQUAL(vBacked.HaveCoin(outPoint), false);\n+    BOOST_CHECK_EQUAL(vBacked.GetBestBlock(), uint256());\n+    BOOST_CHECK_EQUAL(vBacked.GetHeadBlocks().size(), 0);\n+\n+    CCoinsMap map;\n+    uint256 hashBlock;\n+    BOOST_CHECK_EQUAL(vBacked.BatchWrite(map, hashBlock), false);\n+    BOOST_CHECK(vBacked.Cursor() == nullptr);\n+    BOOST_CHECK_EQUAL(vBacked.EstimateSize(), 0);\n+\n+    // Provide an alternaitve implementation of CCoinsView with the opposite behavior",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15137#discussion_r246858187",
      "id" : 246858187,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Njg1ODE4Nw==",
      "original_commit_id" : "6e541291d4dd9f73fbd652f310c0832c3adb4099",
      "original_position" : 43,
      "path" : "src/test/coins_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 191333947,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15137",
      "updated_at" : "2019-01-15T22:20:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246858187",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15137#discussion_r247156707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15137"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247156707"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done. Unfortunately, the build environment broke down.",
      "commit_id" : "24ec978f916ed546ae7042a57da6d3f0ff67b866",
      "created_at" : "2019-01-11T15:35:23Z",
      "diff_hunk" : "@@ -98,6 +98,78 @@ class CCoinsViewCacheTest : public CCoinsViewCache\n \n BOOST_FIXTURE_TEST_SUITE(coins_tests, BasicTestingSetup)\n \n+// This trivial contract must be tested, because instances of CCoinsView are used in production code\n+BOOST_AUTO_TEST_CASE(coins_CCoinsViewContract)\n+{\n+    CCoinsView view;\n+\n+    Coin coin;\n+    COutPoint const outPoint;\n+    BOOST_CHECK_EQUAL(view.GetCoin(outPoint, coin), false);\n+    BOOST_CHECK_EQUAL(view.GetBestBlock(), uint256());\n+    BOOST_CHECK_EQUAL(view.GetHeadBlocks().size(), 0);\n+\n+    CCoinsMap map;\n+    uint256 hashBlock;\n+    BOOST_CHECK_EQUAL(view.BatchWrite(map, hashBlock), false);\n+    BOOST_CHECK(view.Cursor() == nullptr);\n+    BOOST_CHECK_EQUAL(view.HaveCoin(outPoint), false);\n+    BOOST_CHECK_EQUAL(view.HaveCoin(outPoint), view.GetCoin(outPoint, coin));\n+}\n+\n+// Test the contract in order to detect unintended modifications\n+BOOST_AUTO_TEST_CASE(coins_CCoinsViewBackendContract)\n+{\n+    // CCoinsViewBacked effectively delegates to an instance of CCoinsView.\n+    CCoinsView view;\n+    CCoinsViewBacked vBacked(&view);\n+\n+    Coin coin;\n+    COutPoint outPoint;\n+    BOOST_CHECK_EQUAL(vBacked.GetCoin(outPoint, coin), false);\n+    BOOST_CHECK_EQUAL(vBacked.HaveCoin(outPoint), false);\n+    BOOST_CHECK_EQUAL(vBacked.GetBestBlock(), uint256());\n+    BOOST_CHECK_EQUAL(vBacked.GetHeadBlocks().size(), 0);\n+\n+    CCoinsMap map;\n+    uint256 hashBlock;\n+    BOOST_CHECK_EQUAL(vBacked.BatchWrite(map, hashBlock), false);\n+    BOOST_CHECK(vBacked.Cursor() == nullptr);\n+    BOOST_CHECK_EQUAL(vBacked.EstimateSize(), 0);\n+\n+    // Provide an alternaitve implementation of CCoinsView with the opposite behavior",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15137#discussion_r247156707",
      "id" : 247156707,
      "in_reply_to_id" : 246858187,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzE1NjcwNw==",
      "original_commit_id" : "6e541291d4dd9f73fbd652f310c0832c3adb4099",
      "original_position" : 43,
      "path" : "src/test/coins_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 191714536,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15137",
      "updated_at" : "2019-01-15T22:20:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247156707",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1525975?v=4",
         "events_url" : "https://api.github.com/users/mmachicao/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mmachicao/followers",
         "following_url" : "https://api.github.com/users/mmachicao/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mmachicao/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mmachicao",
         "id" : 1525975,
         "login" : "mmachicao",
         "node_id" : "MDQ6VXNlcjE1MjU5NzU=",
         "organizations_url" : "https://api.github.com/users/mmachicao/orgs",
         "received_events_url" : "https://api.github.com/users/mmachicao/received_events",
         "repos_url" : "https://api.github.com/users/mmachicao/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mmachicao/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mmachicao/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mmachicao"
      }
   }
]
