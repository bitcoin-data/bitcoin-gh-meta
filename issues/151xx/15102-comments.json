[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15102#discussion_r245289880"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15102"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245289880"
         }
      },
      "author_association" : "MEMBER",
      "body" : "typo \"deserialze\".",
      "commit_id" : "fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107",
      "created_at" : "2019-01-04T12:52:16Z",
      "diff_hunk" : "@@ -137,20 +137,24 @@ def run_test(self):\n         for TxTemplate in invalid_txs.iter_all_templates():\n             template = TxTemplate(spend_tx=attempt_spend_tx)\n \n-            # Something about the serialization code for missing inputs creates\n-            # a different hash in the test client than on bitcoind, resulting\n-            # in a mismatching merkle root during block validation.\n-            # Skip until we figure out what's going on.\n-            if TxTemplate == invalid_txs.InputMissing:\n-                continue\n             if template.valid_in_block:\n                 continue\n \n             self.log.info(\"Reject block with invalid tx: %s\", TxTemplate.__name__)\n             blockname = \"for_invalid.%s\" % TxTemplate.__name__\n             badblock = self.next_block(blockname)\n             badtx = template.get_tx()\n-            self.sign_tx(badtx, attempt_spend_tx)\n+            if TxTemplate != invalid_txs.InputMissing:\n+                self.sign_tx(badtx, attempt_spend_tx)\n+            else:\n+               # Segwit is active in regtest at this point, so to deserialze a",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15102#discussion_r245289880",
      "id" : 245289880,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTI4OTg4MA==",
      "original_commit_id" : "fa73d4005af2e79db1af66be62c61c2d2878eb81",
      "original_position" : 28,
      "path" : "test/functional/feature_block.py",
      "position" : null,
      "pull_request_review_id" : 189357183,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15102",
      "updated_at" : "2019-01-05T13:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245289880",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15102#discussion_r245354728"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15102"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245354728"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not familiar with this test, but just reading the comment, it makes me wonder what outputs were previously in `badtx.vout`, and why they were generated to begin with if they can be discarded here. If it would make the hack slightly less hacky to avoid generating the outputs originally, or if there is a reason outputs just aren't important, it would be nice to state this in the comment.",
      "commit_id" : "fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107",
      "created_at" : "2019-01-04T16:50:10Z",
      "diff_hunk" : "@@ -137,20 +137,24 @@ def run_test(self):\n         for TxTemplate in invalid_txs.iter_all_templates():\n             template = TxTemplate(spend_tx=attempt_spend_tx)\n \n-            # Something about the serialization code for missing inputs creates\n-            # a different hash in the test client than on bitcoind, resulting\n-            # in a mismatching merkle root during block validation.\n-            # Skip until we figure out what's going on.\n-            if TxTemplate == invalid_txs.InputMissing:\n-                continue\n             if template.valid_in_block:\n                 continue\n \n             self.log.info(\"Reject block with invalid tx: %s\", TxTemplate.__name__)\n             blockname = \"for_invalid.%s\" % TxTemplate.__name__\n             badblock = self.next_block(blockname)\n             badtx = template.get_tx()\n-            self.sign_tx(badtx, attempt_spend_tx)\n+            if TxTemplate != invalid_txs.InputMissing:\n+                self.sign_tx(badtx, attempt_spend_tx)\n+            else:\n+               # Segwit is active in regtest at this point, so to deserialze a\n+               # transaction without any inputs correctly, we set the outputs\n+               # to an empty list. This is a hack, as the serialization of an\n+               # empty list of outputs is deserialized as flags==0 and thus\n+               # deserialization of the outputs is skipped.\n+               # Though, it works for the purpose that both sides calculate the\n+               # same tx hash in the merkle tree",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15102#discussion_r245354728",
      "id" : 245354728,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTM1NDcyOA==",
      "original_commit_id" : "fa73d4005af2e79db1af66be62c61c2d2878eb81",
      "original_position" : 34,
      "path" : "test/functional/feature_block.py",
      "position" : null,
      "pull_request_review_id" : 189442781,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15102",
      "updated_at" : "2019-01-05T13:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245354728",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15102#discussion_r245473007"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15102"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245473007"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Indentation is not a multiple of four here :-)",
      "commit_id" : "fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107",
      "created_at" : "2019-01-05T09:54:34Z",
      "diff_hunk" : "@@ -137,20 +137,24 @@ def run_test(self):\n         for TxTemplate in invalid_txs.iter_all_templates():\n             template = TxTemplate(spend_tx=attempt_spend_tx)\n \n-            # Something about the serialization code for missing inputs creates\n-            # a different hash in the test client than on bitcoind, resulting\n-            # in a mismatching merkle root during block validation.\n-            # Skip until we figure out what's going on.\n-            if TxTemplate == invalid_txs.InputMissing:\n-                continue\n             if template.valid_in_block:\n                 continue\n \n             self.log.info(\"Reject block with invalid tx: %s\", TxTemplate.__name__)\n             blockname = \"for_invalid.%s\" % TxTemplate.__name__\n             badblock = self.next_block(blockname)\n             badtx = template.get_tx()\n-            self.sign_tx(badtx, attempt_spend_tx)\n+            if TxTemplate != invalid_txs.InputMissing:\n+                self.sign_tx(badtx, attempt_spend_tx)\n+            else:\n+               # Segwit is active in regtest at this point, so to deserialize a",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15102#discussion_r245473007",
      "id" : 245473007,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTQ3MzAwNw==",
      "original_commit_id" : "faccf2b098b5c3ed76e4aa8c2161f84b68a8086a",
      "original_position" : 28,
      "path" : "test/functional/feature_block.py",
      "position" : null,
      "pull_request_review_id" : 189592148,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15102",
      "updated_at" : "2019-01-05T13:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245473007",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15102#discussion_r245478472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15102"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245478472"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107",
      "created_at" : "2019-01-05T13:52:00Z",
      "diff_hunk" : "@@ -137,20 +137,24 @@ def run_test(self):\n         for TxTemplate in invalid_txs.iter_all_templates():\n             template = TxTemplate(spend_tx=attempt_spend_tx)\n \n-            # Something about the serialization code for missing inputs creates\n-            # a different hash in the test client than on bitcoind, resulting\n-            # in a mismatching merkle root during block validation.\n-            # Skip until we figure out what's going on.\n-            if TxTemplate == invalid_txs.InputMissing:\n-                continue\n             if template.valid_in_block:\n                 continue\n \n             self.log.info(\"Reject block with invalid tx: %s\", TxTemplate.__name__)\n             blockname = \"for_invalid.%s\" % TxTemplate.__name__\n             badblock = self.next_block(blockname)\n             badtx = template.get_tx()\n-            self.sign_tx(badtx, attempt_spend_tx)\n+            if TxTemplate != invalid_txs.InputMissing:\n+                self.sign_tx(badtx, attempt_spend_tx)\n+            else:\n+               # Segwit is active in regtest at this point, so to deserialize a",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15102#discussion_r245478472",
      "id" : 245478472,
      "in_reply_to_id" : 245473007,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTQ3ODQ3Mg==",
      "original_commit_id" : "faccf2b098b5c3ed76e4aa8c2161f84b68a8086a",
      "original_position" : 28,
      "path" : "test/functional/feature_block.py",
      "position" : null,
      "pull_request_review_id" : 189597471,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15102",
      "updated_at" : "2019-01-05T13:52:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245478472",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK https://github.com/bitcoin/bitcoin/pull/15102/commits/fac4e731a8e5f140dc3bbca4c9af6e23fc1cd107",
      "created_at" : "2019-01-07T02:42:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15102#issuecomment-451805227",
      "id" : 451805227,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15102",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MTgwNTIyNw==",
      "updated_at" : "2019-01-07T02:42:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451805227",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   }
]
