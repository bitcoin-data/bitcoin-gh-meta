[
   {
      "author_association" : "MEMBER",
      "body" : "@vasild do you have an example of this? The only instances I've seen are argument/parameter lists, which should be fixed by https://github.com/bitcoin/bitcoin/pull/21221.",
      "created_at" : "2021-02-18T15:52:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21223#issuecomment-781441755",
      "id" : 781441755,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21223",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MTQ0MTc1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-18T15:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/781441755",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes (those are not affected by `BinPackParameters` and `BinPackArguments` from #21221):\r\n\r\nbefore (without limit, `master`):\r\n```cpp\r\n    txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\r\n\r\n//\r\n\r\n                    for (std::set<uint256>::iterator it = pto->m_tx_relay->setInventoryTxToSend.begin(); it != pto->m_tx_relay->setInventoryTxToSend.end(); it++) {\r\n\r\n//\r\n\r\n        if (m_shift < n || m_shift >= std::numeric_limits<uint64_t>::max() || m_shift < std::numeric_limits<I>::min() || m_shift > std::numeric_limits<I>::max()) throw std::ios_base::failure(\"differential value overflow\");\r\n\r\n//\r\n\r\n    std::vector<CBlockIndex*>::const_iterator lower = std::lower_bound(vChain.begin(), vChain.end(), blockparams,\r\n        [](CBlockIndex* pBlock, const std::pair<int64_t, int>& blockparams) -> bool { return pBlock->GetBlockTimeMax() < blockparams.first || pBlock->nHeight < blockparams.second; });\r\n```\r\n\r\nafter (with limit, this PR):\r\n\r\n```cpp\r\n    txNew.vin[0].scriptSig = CScript()\r\n                             << 486604799 << CScriptNum(4)\r\n                             << std::vector<unsigned char>(\r\n                                    (const unsigned char*)pszTimestamp,\r\n                                    (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\r\n\r\n//\r\n\r\n                    for (std::set<uint256>::iterator it =\r\n                             pto->m_tx_relay->setInventoryTxToSend.begin();\r\n                         it != pto->m_tx_relay->setInventoryTxToSend.end(); it++) {\r\n\r\n//\r\n\r\n        if (m_shift < n || m_shift >= std::numeric_limits<uint64_t>::max() ||\r\n            m_shift < std::numeric_limits<I>::min() || m_shift > std::numeric_limits<I>::max())\r\n            throw std::ios_base::failure(\"differential value overflow\");\r\n\r\n//\r\n\r\n    std::vector<CBlockIndex*>::const_iterator lower = std::lower_bound(\r\n        vChain.begin(), vChain.end(), blockparams,\r\n        [](CBlockIndex* pBlock, const std::pair<int64_t, int>& blockparams) -> bool {\r\n            return pBlock->GetBlockTimeMax() < blockparams.first ||\r\n                   pBlock->nHeight < blockparams.second;\r\n        });\r\n```\r\n\r\nMaybe I did not pick the best examples, see the output of `git grep '.{100,}' '*.cpp' '*.h'` (or 150 for the extreme cases).",
      "created_at" : "2021-02-18T17:36:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21223#issuecomment-781514616",
      "id" : 781514616,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21223",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MTUxNDYxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-18T17:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/781514616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jnewbery, I just realized that you asked for an example where clang-format would join a manually broken line and I gave examples where it would break a long line (the opposite).\r\n\r\nIndeed I cannot find such examples, other than functions' arguments/parameters, which is addressed in #21221.\r\n\r\nClosing this in favor of #21221. Will reopen if I find examples where manually broken lines get joined (with #21221 merged).",
      "created_at" : "2021-02-19T09:21:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21223#issuecomment-781948188",
      "id" : 781948188,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21223",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MTk0ODE4OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-19T09:21:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/781948188",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @vasild!",
      "created_at" : "2021-02-19T09:23:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21223#issuecomment-781949115",
      "id" : 781949115,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21223",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4MTk0OTExNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-19T09:23:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/781949115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
