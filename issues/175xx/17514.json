{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Make the logging subsystem noexcept. This facilitates changes such as #17507 by making\r\nit possible to log in noexcept context.\r\n\r\nFirst, adds a function `tfm::format_noexcept` that works like `tfm::format` for use in noexcept context if the format string and number of arguments are guaranteed to be correct (for example, if it is trivial like \"%02x\"). It will abort on any tinyformat error. This is used in utility functions, not for the logging strings itself, as formatting exceptions there are internally caught and logged in LogPrintf (for better troubleshooting of the complex arbitrary formatting expressions used there).\r\n\r\nThen, go through the call hierarchy and make functions noexcept after checking them (see individual commits):\r\n```\r\nLogInstance\r\nLogAcceptCategory\r\n  Logger::WillLogCategory\r\nLogPrintf\r\n  Logger::Enabled\r\n  LogPrintStr\r\n    LogEscapeMessage\r\n    util::ThreadGetInternalName()\r\n    LogTimestampStr\r\n      GetTimeMicros\r\n      FormatISO8601DateTime\r\n      GetMockTime\r\n    fsbridge::fopen\r\n    FileWriteStr\r\n```\r\n\r\nThough I've checked these functions carefully, it is possible that I missed a function down the call tree. Please let me know if so.\r\n\r\nThe only functions I'm slightly uncertain about are the boost posix_time functions in\r\nGetTimeMicros/GetTimeMillis, but I could not find any documented exceptions in\r\nhttps://www.boost.org/doc/libs/1_71_0/doc/html/date_time/posix_time.html\r\n\r\n(I know the m_print_callbacks can potentially throw, there is as far as I saw no way\r\nto guarantee std::function as noexcept. I leave this as an responsibility to who registers it.\r\nFWIW, this functionality is only used as part of the test framework.)\r\n\r\n(Also, thinking of it, any kind of allocation in C++ can except with `bad_alloc&`, including inside string manipulation, which is almost 100% of the code here. If that's an issue, I'm no longer convinced this is possible at all)",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 3,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17514/comments",
   "created_at" : "2019-11-19T11:09:39Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17514/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/17514",
   "id" : 524939497,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "id" : 241832923,
         "name" : "Utils/log/libs",
         "node_id" : "MDU6TGFiZWwyNDE4MzI5MjM=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17514/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MzQyNjIxNTgw",
   "number" : 17514,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/17514.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17514",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/17514.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17514"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "util: Make logging noexcept",
   "updated_at" : "2019-11-19T12:05:31Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17514",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   }
}
