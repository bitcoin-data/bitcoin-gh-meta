[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "If no one else is taking a look at this, I'd like to take this one.",
      "created_at" : "2022-11-03T02:12:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1301567393",
      "id" : 1301567393,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585NlFeh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301567393/reactions"
      },
      "updated_at" : "2022-11-03T02:12:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301567393",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@satsie, I am not currently. Would be happy to review.",
      "created_at" : "2022-11-03T07:45:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1301742596",
      "id" : 1301742596,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585NlwQE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301742596/reactions"
      },
      "updated_at" : "2022-11-03T07:45:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1301742596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@vasild I've been working on this and noticed message types missing from the suggested RPC response you provided. Specifically, these message types are not there:\r\n\r\n- addr\r\n- merkleblock\r\n- getblocks\r\n- block\r\n- mempool\r\n- filterload\r\n- filteradd\r\n- filterclear\r\n- cmpctblock\r\n- getblocktxn\r\n- blocktxn\r\n- getcfilters\r\n- cfilter\r\n- getcfheaders\r\n- cfheaders\r\n- getcfcheckpt\r\n- sendtxrncl\r\n\r\nHave they intentionally been left out? I'm very new to the code base so I wasn't able to identify if there is something special or different about these types. \r\n",
      "created_at" : "2022-11-09T20:39:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1309348945",
      "id" : 1309348945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585OCxRR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1309348945/reactions"
      },
      "updated_at" : "2022-11-09T20:39:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1309348945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@satsie I assume @vasild is just giving an example, and there can always be messages that are never actually used. Presumably he means that messages that were never seen could be omitted from the RPC output, rather than be listed with value 0.\r\n\r\nIn any case, Concept ACK about having such statistics. I'd go even further and also add:\r\n* Broken down per connection type (as well as a total which has them all summed up like suggested above).\r\n* Also have statistics for counts of messages (not just how many bytes they were).",
      "created_at" : "2022-11-09T22:36:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1309479144",
      "id" : 1309479144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585ODRDo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1309479144/reactions"
      },
      "updated_at" : "2022-11-09T22:36:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1309479144",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I did not intentionally leave them out, sorry! I just copy pasted an output from my screen. I missed the fact that if some value is 0 it would not be in the output. I guess some global analogue of `CNode::mapSendBytesPerMsgType` and `CNode::mapRecvBytesPerMsgType` should do it. Every time the numbers in those `CNode` maps are incremented, also increment the newly added, global ones. I guess the new maps should be added to the `CConnman` class.\r\n\r\n> Broken down per connection type\r\n\r\nAha! I was thinking about the same and also per network type, but couldn't figure a nice way to visualize that. So we would have something like the following (using only some values for clarity):\r\n\r\n```json\r\n\"bytessent_per_msg\": {\r\n    \"outbound_full_relay\": {\r\n        \"addr\": 555,\r\n        \"inv\": 666,\r\n        \"tx\": 777\r\n    },\r\n    \"inbound\": {\r\n        \"addr\": 555,\r\n        \"inv\": 666,\r\n        \"tx\": 777\r\n    },\r\n    \"block_relay\": {\r\n        \"addr\": 555,\r\n        \"inv\": 666,\r\n        \"tx\": 777\r\n    }\r\n},\r\n\"bytesrecv_per_msg\": {\r\n    \"outbound_full_relay\": {\r\n        \"addr\": 555,\r\n        \"inv\": 666,\r\n        \"tx\": 777\r\n    },\r\n    \"inbound\": {\r\n        \"addr\": 555,\r\n        \"inv\": 666,\r\n        \"tx\": 777\r\n    },\r\n    \"block_relay\": {\r\n        \"addr\": 555,\r\n        \"inv\": 666,\r\n        \"tx\": 777\r\n    }\r\n}\r\n```\r\n\r\n@sipa, is this what you suggested? If broken down also per network:\r\n\r\n```json\r\n\"bytessent_per_msg\": {\r\n    \"outbound_full_relay\": {\r\n        \"ipv4\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"ipv6\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"tor\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        }\r\n    },\r\n    \"inbound\": {\r\n        \"ipv4\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"ipv6\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"tor\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        }\r\n    },\r\n    \"block_relay\": {\r\n        \"ipv4\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"ipv6\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"tor\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        }\r\n    }\r\n},\r\n\"bytesrecv_per_msg\": {\r\n    \"outbound_full_relay\": {\r\n        \"ipv4\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"ipv6\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"tor\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        }\r\n    },\r\n    \"inbound\": {\r\n        \"ipv4\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"ipv6\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"tor\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        }\r\n    },\r\n    \"block_relay\": {\r\n        \"ipv4\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"ipv6\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        },\r\n        \"tor\": {\r\n            \"addr\": 555,\r\n            \"inv\": 666,\r\n            \"tx\": 777\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI think that the information would be useful but is the presentation too ugly/cumbersome?\r\n\r\n> Also have statistics for counts of messages\r\n\r\nYes, please! :) I guess then e.g. `\"addr\": 555` would become `\"addr\": { \"count\": 5, \"bytes\": 555 }` or `\"addr\": [5, 555]`.\r\n",
      "created_at" : "2022-11-10T11:34:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1310148776",
      "id" : 1310148776,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585OF0io",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310148776/reactions"
      },
      "updated_at" : "2022-11-10T11:34:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310148776",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you both for the clarification! And thank you @vasild for the sample JSON for what a response might look like with connection types included. It does look busy, but what you've laid out makes sense to me. \r\n\r\nI'm not quite to the point where I'm ready to add connection type. I'm still working on the regular breakdown by message type (need to update/write a test). The good news is my implementation is right in line with what you said about new maps in `CConnman` that are similar to `CNode::mapSendBytesPerMsgType` and `CNode::mapRecvBytesPerMsgType` :) \r\n\r\nAdding message count also sounds like a great improvement. I like the `\"addr\": { \"count\": 5, \"bytes\": 555 }` proposal a lot.\r\n\r\nI'll be back when I have actual code to show!",
      "created_at" : "2022-11-10T12:34:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1310216661",
      "id" : 1310216661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585OGFHV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310216661/reactions"
      },
      "updated_at" : "2022-11-10T12:34:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310216661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@vasild Yeah, I think a breakdown by network is useful too. This does make me wonder whether all combinations should be provided:\r\n* number of messages sent in total\r\n* number of messages sent, per message type\r\n* number of messages sent, per network\r\n* number of messages sent, per connection type\r\n* number of messages sent, per message type and network\r\n* number of messages sent, per message type and connection type\r\n* number of messages sent, per network and connection type\r\n* number of messages sent, per message type, network, and connection type\r\n* ... all the above repeated for bytes instead of messages, and for received instead of sent\r\n\r\nThat's 32 distinct sets of data (each keyed by whatever they're broken down by), which is probably excessive. But only giving the most-broken-down version is far less usable (as I expect most users to be more interested in more-aggregated results than broken-down ones).",
      "created_at" : "2022-11-10T15:06:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1310431611",
      "id" : 1310431611,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585OG5l7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310431611/reactions"
      },
      "updated_at" : "2022-11-10T15:07:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310431611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Might be better to provide a new `getnetworkmsgstats` rpc that you invoke with up to three parameters: whether to split up per msgtype/conntype/network; whether to do msgs or bytes (or average bytes/msg?); whether to do received or sent (or combined?). Then just leave `getnettotals` for the actual totals.",
      "created_at" : "2022-11-11T04:23:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1311213890",
      "id" : 1311213890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585OJ4lC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1311213890/reactions"
      },
      "updated_at" : "2022-11-11T04:23:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1311213890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ajtowns I like your proposal for a new `getnetworkmsgstats` RPC, and it's seems like a intriguing design challenge that I'd love to dive into more.\r\n\r\nTo your last comment about leaving `getnettotals` for the actual totals, are you proposing to leave `getnettotals` alone entirely? To refrain from making any changes to it in favor of a new `getnetworkmsgstats` RPC?\r\n\r\nI like the symmetry of adding the breakdown by msgtype in `getnettotals` because it aligns with what `getpeerinfo` is returning. It also seems useful to me for node operators to have some kind of breakdown that they can get \"for free\" (i.e. without the need to make a second RPC call), which may spark curiosity and lead them to use a future `getnetworkmsgstats`.",
      "created_at" : "2022-11-15T20:43:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1315840376",
      "id" : 1315840376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585ObiF4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315840376/reactions"
      },
      "updated_at" : "2022-11-15T20:43:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1315840376",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@satsie Don't really have an opinion. What I had in mind was not changing what `getnettotals` reported, and just letting you get all the combinations from `getnetmsgstats`, but having the totals match the per-active-peer report from `getpeerinfo` makes sense too.",
      "created_at" : "2022-11-16T13:34:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1317030972",
      "id" : 1317030972,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585OgEw8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1317030972/reactions"
      },
      "updated_at" : "2022-11-16T13:34:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1317030972",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "- concept ACK to adding per message stats to the RPC interface\r\n- I like the idea of introducing `getnetmsgstats` to allow users to retrieve stats broken down along different categories (message type, connection type, network) & (sent vs received)",
      "created_at" : "2022-11-30T19:32:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1332642057",
      "id" : 1332642057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585PboEJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1332642057/reactions"
      },
      "updated_at" : "2022-11-30T19:32:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1332642057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hi all! I spent some time thinking about this. I actually implemented the breakdown of bytes by message type in `getnettotals` as the issue description suggests, but ultimately decided against making a PR for it.\r\n\r\n**Why I think these stats donât belong in getnettotals**\r\n\r\n`getnettotals` implies that the response will be totals only.\r\n\r\n**Why I think these stats could maybe go in getnetworkinfo**\r\n\r\nDoing so would mirror the `getpeerinfo` RPC. Since these two calls are so similarly named, it makes sense for their responses to align where possible.\r\n\r\n**Why I think these stats actually belong in a totally new RPC**\r\n\r\nBased on aj's comment, and the ones leading up to it, there is support for a new RPC to get network message stats, which can handle a number of different breakdowns. From a usability perspective, this seems preferable to the 32 distinct sets of data that sipa mentioned :) As a side note, if a new RPC is going to be the permanent solution, the question of adding one very specific type of breakdown in an existing RPC like `getnetinfo` doesn't necessarily need to be solved now.\r\n\r\nItâs also been brought to my attention that RPCs have a high maintenance cost. If a message type breakdown becomes available in two places (`getnetinfo` and a new RPC), it can not only add potential complexity, but it would be very difficult to deprecate from one of the calls later. \r\n\r\nLastly, a sticking point for me had originally been this idea of getting some kind of message stats for free with an RPC that you may already be making. The need to specify parameters, something that youâd have to do with a new get network message stats RPC, was friction I didnât want to add (I know itâs small but developers are lazy!). Then I realized having a default set of parameters on a new RPC provided the same easy ârun this one commandâ developer experience. \r\n\r\n**Conclusion**\r\n\r\nAt the end of the day, the only argument I had for only adding message stats to an existing RPC was to make the responses of `getnetworkinfo` and `getpeerinfo` more symmetric. By itself, that doesnât seem like enough to decide against a new RPC. These stats can also be added to `getnetworkinfo` at a later time if it seems like the right thing to do.\r\n\r\nHowever I acknowledge that there is a lot I donât know! If there are any holes in my reasoning, I want to talk about them.\r\n\r\n## **Proposal for a new RPC**\r\n\r\nFor the reasons above, Iâve decided to focus on a new RPC. Here, I present the design for feedback:\r\n\r\n**New RPC name:** `getnetworkmsgstats`\r\n**Notes:** I considered abbreviating ânetworkâ to ânetâ (aka `getnetmsgstats`) but saw three RPCs use ânetworkâ (`getnetworkhashps`, `getnetworkinfo`,  and `setnetworkactive`) as opposed to the one that used ânetâ (`getnettotals`)\r\n\r\n### **Arguments in**\r\n\r\n**Argument 1: breakdown** (is there a better name for this?)\r\n**Type:** string, optional, default=msgtype\r\n_How the results should be broken down. Possible options are âmsgtypeâ (message type), âconntypeâ (connection type), or ânetworkâ._\r\n\r\n**Argument 2: direction** (again, is there a better name for this?)\r\n**Type:** string, optional, default=received\r\n_If the results should be for received messages or ones that have been sent. Possible options are âreceivedâ and âsent;_\r\n\r\nAs youâll see below, Iâve decided to always return the message count and number of bytes. Admittedly, this decision is arbitrary. It makes naming easier, particularly because I am struggling with the return fields. \r\n\r\nShould they be generic enough to support any kind of response? Or should they be specific to what the user is requesting? For example, the call could just return a number like `âgetaddrâ: 5`, or fields could be more specific like `âgetaddr_bytesâ: 555` / `âgetaddr_countâ: 5`. I know that the user should remember what arguments they invoked the call with, but I can see someone copy pasting a response and sending it over to a friend without specifying the units (bytes or count). If a number is going to appear somewhere, I tend to prefer if the units are close by.\r\n\r\nOn the flip side, it's very hard to develop against APIs that don't have reliable return fields. It's much easier when you know exactly what you are getting back, regardless of how a call is being made.\r\n\r\n### Example responses\r\n\r\n**Example 1:** `bitcoin-cli getnetworkmsgstats`\r\n_defaults to received messages broken down by message type_\r\n```yaml\r\n {\r\n    âaddrâ: {\r\n        âcountâ: 5,\r\n        âbytesâ: 555\r\n    },\r\n    âblockâ: {\r\n        âcountâ: 3,\r\n        âbytesâ: 333\r\n    },\r\n    âinvâ: {\r\n        âcountâ: 7,\r\n        âbytesâ: 777\r\n    }\r\n    â¦\r\n}\r\n```\r\n\r\n**Example 2:** `bitcoin-cli getnetworkmsgstats âconntypeâ âsentâ`\r\n_sent messages broken down by connection type_\r\n\r\n```yaml\r\n{\r\n    âipv4â: {\r\n        âcountâ: 5,\r\n        âbytesâ: 555\r\n    },\r\n    âipv6â: {\r\n        âcountâ: 3,\r\n        âbytesâ: 333\r\n    },\r\n    âonionâ: {\r\n        âcountâ: 7,\r\n        âbytesâ: 777\r\n    }\r\n    â¦\r\n}\r\n```\r\n\r\n### Outstanding questions\r\n\r\nIâm having the most difficulty with where to draw the line for what should be a parameter, and what should always be returned. This leads to related questions on how return fields are named. Any opinions on removing the âdirectionâ argument (received/sent) and always returning stats for both received and sent messages (wrap the top level objects in my examples into `messages_received` and `messages_sent` objects)?\r\n\r\nAny guidance and feedback is much appreciated, and many thanks to @amitiuttarwar for helping me get this far!\r\n",
      "created_at" : "2022-12-01T04:35:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1333159042",
      "id" : 1333159042,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585PdmSC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1333159042/reactions"
      },
      "updated_at" : "2022-12-01T04:41:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1333159042",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems like the most flexible would be to have one argument - `breakdown` or `splitby` whose value is a coma separated list of `direction`, `msgtype`, `conntype`, `network`. I think we can always/unconditionally provide `{ \"count\": 5, \"bytes\": 55}` at the inner level.\r\n\r\nSo:\r\n* `direction` would split by `sent`, `recv`\r\n* `msgtype` would split by `tx`, `inv`, `addrv2`, etc\r\n* `conntype` would split by `inbound`, `full-outbound`, etc\r\n* `network` would split by `ipv4`, `tor`, etc\r\n\r\nFor example\r\n\r\n* `getnewrpcname direction`:\r\n```json\r\n\"sent\": {\r\n    \"count\": 5,\r\n    \"bytes\": 55\r\n},\r\n\"recv\": {\r\n    \"count\": 5,\r\n    \"bytes\": 55\r\n}\r\n```\r\n\r\n* `getnewrpcname network`:\r\n```json\r\n\"ipv4\": {\r\n    \"count\": 5,\r\n    \"bytes\": 55\r\n},\r\n\"i2p\": {\r\n    \"count\": 5,\r\n    \"bytes\": 55\r\n}\r\n```\r\n\r\n* `getnewrpcname msgtype,conntype`:\r\n```json\r\n\"tx\": {\r\n    \"inbound\": {\r\n        \"count\": 5,\r\n        \"bytes\": 55\r\n    },\r\n    \"full-outbound\": {\r\n        \"count\": 5,\r\n        \"bytes\": 55\r\n    }\r\n},\r\n\"inv\": {\r\n    \"inbound\": {\r\n        \"count\": 5,\r\n        \"bytes\": 55\r\n    },\r\n    \"full-outbound\": {\r\n        \"count\": 5,\r\n        \"bytes\": 55\r\n    }\r\n}\r\n```\r\n\r\n* `getnewrpcname \"\"`:\r\n```json\r\n\"count\": 5,\r\n\"bytes\": 55\r\n```\r\n",
      "created_at" : "2022-12-01T09:59:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1333508999",
      "id" : 1333508999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585Pe7uH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1333508999/reactions"
      },
      "updated_at" : "2022-12-01T09:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1333508999",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> **Notes:** I considered abbreviating ânetworkâ to ânetâ (aka `getnetmsgstats`) but saw three RPCs use ânetworkâ (`getnetworkhashps`, `getnetworkinfo`, and `setnetworkactive`) as opposed to the one that used ânetâ (`getnettotals`)\r\n\r\nHmm; I think for `getnetworkhasps` \"network\" refers to mainnet vs testnet vs regtest, which isn't really comparable. Could also consider `getpeermsgstats` but not sure how much sense that makes, since the stats aggregate over things that are no longer peers.\r\n\r\n> Iâm having the most difficulty with where to draw the line for what should be a parameter, and what should always be returned. This leads to related questions on how return fields are named. Any opinions on removing the âdirectionâ argument (received/sent) and always returning stats for both received and sent messages\r\n\r\nI think it'd be better to return both sent/recv with a single call, otherwise you get slight discrepancies due to only counting one not the other for msgs that happen between the two rpc calls. Something like:\r\n\r\n```json\r\n{\r\n  \"bytes_sent_per_conntype_msg\": {\r\n    \"full-outbound\": {\r\n      \"ping\": 123456,\r\n      \"pong\": 123440,\r\n    }\r\n  }\r\n  \"msgs_sent_per_conntype_msg\": {\r\n    \"full-outbound\": {\r\n      \"ping\": 7716,\r\n      \"pong\": 7715\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThat more or less matches the `bytesrecv_per_msg` etc fields that `getpeerinfo` uses, and avoids having many `count` and `bytes` fields, which just seem like noise to me. (Dropping the \"_per_*\" part entirely might be better, though; `result[\"msgs_sent\"][\"full-outbound\"][\"pong\"]` is already pretty self-documenting)\r\n\r\nYou could perhaps have \"direction\" and \"msg_bytes\" be optional filters. If they're enabled, then you split by them; if they're not enabled, then you respectively combine sent and received and just give a total, and only deal in bytes. So:\r\n\r\n```json\r\n$ bitcoin-cli getnetworkmsgstats '[\"direction\", \"conntype\", \"msg\"]'\r\n{\r\n  \"sent\": {\r\n    \"full-outbound\": {\r\n      \"ping\": 123456\r\n    }\r\n  },\r\n  \"recv\": {\r\n    \"full-outbound\": {\r\n      \"ping\": 123440,\r\n    }\r\n  }\r\n}\r\n$ bitcoin-cli getnetworkmsgstats '[\"msg_bytes\", \"conntype\"]'\r\n{\r\n  \"msgs\": {\r\n    \"full-outbound\": 15431\r\n  },\r\n  \"bytes\": {\r\n    \"full-outbound\": 246896\r\n  }\r\n}\r\n$ bitcoin-cli getnetworkmsgstats '[\"msg_bytes\", \"direction\", \"network\", \"conntype\", \"msg\"]' |\r\n     jq '.msgs.recv.ipv4.[\"full-outbound\"].ping'\r\n7715\r\n```\r\n\r\nOnly annoying thing there is that you'd perhaps want `direction` to be on by default, so you only have to specify it in the rare occassions when you don't care...",
      "created_at" : "2022-12-03T14:31:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1336171853",
      "id" : 1336171853,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585PpF1N",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1336171853/reactions"
      },
      "updated_at" : "2022-12-03T14:31:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1336171853",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you vasild and ajtowns! I really appreciate your feedback and the guidance on this. Wanted to reply sooner but have been tied up with a few things.\r\n\r\n@vasild - Does the ordering of the `splitby` parameters matter? For example, would the following command be valid? \r\n\r\n `getnewrpcname conntype direction`\r\n\r\nIf ordering matters, I believe that makes 16 possible ways to invoke the new RPC, right? An on/off option for each of the 4 dimensions (direction, msgtype, conntype, network) = 2 * 2 * 2 * 2 = 2^4 = 16 \r\n\r\nAs far as implementation goes, would it make sense to store the data at the most granular level (direction x msgtype x connectiontype x network), and then, if the user doesnât care about certain dimensions, do some aggregation?\r\n\r\nFor example, if the middle dimensions msgtype and and connection type were dropped and the user only wanted direction x network, the code would \"roll up\" and aggregate the results through the dimensions the user doesnât care about.\r\n\r\nIf this is the most granular breakdown for direction x msgtype x conntype x network, \r\n```\r\nsent: {\r\n  addr: {\r\n    inbound: {\r\n      ipv4: {\r\n        count: 2,\r\n        bytes: 22\r\n      },\r\n      tor: {\r\n      \tcount: 3,\r\n      \tbytes: 33\r\n      }\r\n    },\r\n    block_relay: {\r\n      ipv4: {\r\n        count: 2,\r\n        bytes: 22\r\n      },\r\n      tor: {\r\n      \tcount: 3,\r\n      \tbytes: 33\r\n      }\r\n    }\r\n  },\r\n  block: {\r\n    inbound: {\r\n      ipv4: {\r\n        count: 2,\r\n        bytes: 22\r\n      },\r\n      tor: {\r\n      \tcount: 3,\r\n      \tbytes: 33\r\n      }\r\n    },\r\n    block_relay: {\r\n      ipv4: {\r\n        count: 2,\r\n        bytes: 22\r\n      },\r\n      tor: {\r\n      \tcount: 3,\r\n      \tbytes: 33\r\n      }\r\n    }\r\n  }\r\n},\r\n(results for the received direction omitted for simplicity. It can be thought of as being very similar to the results for the sent direction)\r\n```\r\n\r\nStep 1 would be to eliminate the connection type breakdown by aggregating across this dimension:\r\n```\r\nsent: {\r\n  addr: {\r\n    ipv4: {\r\n      count: 4,\r\n      bytes: 44\r\n    },\r\n    tor: {\r\n     count: 6,\r\n     bytes: 66\r\n    }\r\n  },\r\n  block: {\r\n    ipv4: {\r\n      count: 4,\r\n      bytes: 44\r\n    },\r\n    tor: {\r\n      count: 6,\r\n      bytes: 66\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThen, step 2 would be to eliminate the msg type breakdown by aggregating again, but this time over msg type:\r\n```\r\nsent: {\r\n  ipv4: {\r\n    count: 8,\r\n    bytes: 88\r\n  },\r\n  tor: {\r\n   count: 12,\r\n   bytes: 132\r\n  }\r\n}\r\n```\r\n\r\nThis feels like the naive way to do it, but I canât think of a better way to always be able to serve up this data without storing everything at the most granular level. What do you think? \r\n\r\n-----------------------------------------------------\r\n\r\n@ajtowns - Thanks for the context on the naming! Personally I prefer `getnetmsgstats` because itâs shorter, and offers up information that would be complementary to `getnettotals`. On the flip side I am also hesitant to break any naming conventions that may already be in place, so I want to make sure I have an accurate lay of the land.\r\n\r\nIâm cool with returning both sent/recv in a single call, especially since thatâs what getpeerinfo is doing. I like how the fields you proposed match `getpeerinfo`âs `bytesrecv_per_msg`. Iâm also open to dropping the `count` and `byte` fields as you have done in the example. I know itâs a trade off, but I am trying to avoid returning a response with too many levels of nested data.\r\n\r\nI also agree with potentially dropping the âper*â part.\r\n\r\nI think the second example you shared with the optional filters is similar to where vasild was going with his comment. Iâd like to ask a question I also am asking him: does the ordering of the filters matter? Per the final example you provide:\r\n\r\n`$bitcoin-cli getnetworkmsgstats â[âmsg_bytesâ, âdirectionâ, ânetworkâ, âconntypeâ, âmsgâ]â`\r\n\r\nWould the following command be a valid? With the filters moved around?\r\n\r\n`$bitcoin-cli getnetworkmsgstats â[ânetworkâ, âmsg_bytesâ, âconntypeâ, âmsgâ, âdirectionâ]â`\r\n\r\nIn my above response to vasild I go into an implementation detail about always storing the results at the most granular level, and then doing some aggregation to deliver what the user requested. I believe this is in line with your comment, \r\n\r\n>  if they're not enabled, then you respectively combine sent and received and just give a total,\r\n\r\nbut I wanted to work through an example to make sure I understood.\r\n\r\n-----------------------------------------------------\r\n\r\nThank you again for your help! I have some assumptions that I first want to make sure are correct, but I think I am circling in on a design that I think makes sense. Excited for this to continue to evolve.\r\n",
      "created_at" : "2022-12-08T17:12:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1343038328",
      "id" : 1343038328,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585QDSN4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1343038328/reactions"
      },
      "updated_at" : "2022-12-08T17:12:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1343038328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> As far as implementation goes, would it make sense to store the data at the most granular level (direction x msgtype x connectiontype x network), and then, if the user doesnât care about certain dimensions, do some aggregation?\r\n\r\nYes, I think that's the most sensible approach.\r\n\r\nAllowing the order to vary would be nice, but it's probably tricky to implement, and not that crucial. Here's an example of how you could do that in python, in case it might be helpful:\r\n\r\n```python\r\nimport random\r\n\r\ndef setup():\r\n    x = {}\r\n    for net in [\"ipv4\", \"tor\"]:\r\n         for conntype in [\"outbound\", \"inbound\", \"blockonly\"]:\r\n             for direc in [\"send\", \"recv\"]:\r\n                 for msg in [\"ping\", \"pong\", \"inv\", \"addrv2\"]:\r\n                     msgs = random.randrange(1, 1000)\r\n                     b = random.randrange(msgs*16, msgs*5000)\r\n                     x[net,conntype,direc,msg,\"count\"] = msgs\r\n                     x[net,conntype,direc,msg,\"bytes\"] = b\r\n    # a map of a tuple of strings is fine for a demo in python;\r\n    # should be enums, and maybe just a fixed size array in C++?\r\n    return x\r\n\r\ndef aggregate(x, *keys):\r\n     assert len(keys) > 0\r\n     result = {}\r\n     for path, v in x.items():\r\n         # ignore msg counts if we're not splitting up by msg_bytes\r\n         if 4 not in keys and path[4] != \"bytes\": continue\r\n\r\n         # find the right place to add this item\r\n         r = result\r\n         for k in keys[:-1]:\r\n             p = path[k]\r\n             if p not in r: r[p] = {}\r\n             r = r[p]\r\n         p = path[keys[-1]]\r\n         if p not in r: r[p] = 0\r\n\r\n         # add it\r\n         r[p] += v\r\n\r\n     return result\r\n\r\nx=setup()\r\n\r\nsorted(x.items())[0]\r\n(('ipv4', 'blockonly', 'recv', 'addrv2', 'bytes'), 428731)\r\n\r\n# 0=net, 1=conntype, 2=direction, 3=msg, 4=msg_bytes\r\naggregate(x, 0,4)\r\n{'ipv4': {'count': 11879, 'bytes': 29856223},\r\n 'tor': {'count': 11945, 'bytes': 28160822}}\r\n\r\naggregate(x, 4,0)\r\n{'count': {'ipv4': 11879, 'tor': 11945},\r\n 'bytes': {'ipv4': 29856223, 'tor': 28160822}}\r\n\r\naggregate(x, 4)\r\n{'count': 23824, 'bytes': 58017045}\r\n\r\naggregate(x, 0)\r\n{'ipv4': 29856223, 'tor': 28160822}\r\n\r\naggregate(x, 2,3)\r\n{'send': {'ping': 6945670, 'pong': 8965830, 'inv': 4387195, 'addrv2': 3964518},\r\n 'recv': {'ping': 7467989, 'pong': 13483640, 'inv': 6491104, 'addrv2': 6311099}}\r\n\r\naggregate(x, 4,1,2)\r\n{'count': {'outbound': {'send': 3514, 'recv': 3461},\r\n  'inbound': {'send': 4504, 'recv': 4921},\r\n  'blockonly': {'send': 2931, 'recv': 4493}},\r\n 'bytes': {'outbound': {'send': 7440743, 'recv': 6742217},\r\n  'inbound': {'send': 8067908, 'recv': 15541030},\r\n  'blockonly': {'send': 8754562, 'recv': 11470585}}}\r\n```",
      "created_at" : "2022-12-08T20:39:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1343326472",
      "id" : 1343326472,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585QEYkI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1343326472/reactions"
      },
      "updated_at" : "2022-12-08T20:39:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1343326472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Does the ordering of the `splitby` parameters matter?\r\n\r\nNo idea :) Maybe whatever is easier to implement and results in less code.\r\n\r\n> As far as implementation goes, would it make sense to store the data at the most granular level ... This feels like the naive way to do it, but I canât think of a better way to always be able to serve up this data without storing everything at the most granular level. What do you think?\r\n\r\nYes, I don't see how else it could be. If we \"group by\" already in the C++ code then it would not be possible to split it later if requested.\r\n\r\nI do not object dropping the `direction` option value and always splitting by it, ie always returning `sent` and `recv`.\r\n\r\nThe `msg_bytes` option value seems a bit misaligned with the others. For example if split by `msgtype` produces tx=2, inv=5, addrv2=1 then not splitting by `msgtype` would produce a single number which is the sum of all (8). But the proposed `msg_bytes` would return both count and bytes if enabled and only bytes if disabled. I find this confusing. To follow the others' logic it would have to sum the count and the bytes if disabled, which is meaningless.\r\n\r\nI think it would be best if it is clearly labeled whether the number is bytes or count, either at the leaf level or somewhere higher. E.g. `.ipv4.inv.count` or `.count.ipv4.inv`. The extra nesting seems ok to me.",
      "created_at" : "2022-12-09T09:34:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1344072166",
      "id" : 1344072166,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585QHOnm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1344072166/reactions"
      },
      "updated_at" : "2022-12-09T09:34:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1344072166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you everyone for your input on the concept and design for this issue! I'd like to present the work I have so far for feedback: https://github.com/satsie/bitcoin/pull/4\r\n\r\nThe PR description has some sample request/responses and summarizes the path I took to get here. I also have some open comments on areas I want to take a closer look at, or am hoping for input on before I put an official PR up to Bitcoin Core.\r\n\r\nHuge thank you to Amiti, Vasil, and AJ for already chiming in on previous iterations of the code :heart:. Since I last commented here, I made a few changes to the design of the new RPC. Here's what changed:\r\n\r\n- Call the new RPC `getnetmsgstats` (instead of `getnetworkmsgstats`)\r\n- Always return the sent and received directions, and do so at the highest level of the response object. Direction is not available as a filter. This is to reduce possible discrepancies that may come out of separate calls for sent and received stats.\r\n- The `msg_count` and `total_bytes` fields are always returned. This is not available as a filter.\r\n- Arguments: just one optional array of one or more filters.\r\n\r\nHere's an updated summary of the design:\r\n\r\n## getnetmsgstats RPC\r\nReturns the message count and total number of bytes for sent and received network traffic. Results may optionally be broken down message type, connection type, and/or network.\r\n\r\n### Arguments\r\n\r\n**filters**: an optional array of one or more filters. Valid options are: msgtype, conntype, and network. If no filters are specified,  totals are returned.\r\n\r\n### Examples\r\n\r\n<details>\r\n  <summary>getnetmsgstats</summary>\r\n\r\n```\r\n ./src/bitcoin-cli getnetmsgstats\r\n{\r\n  \"sent\": {\r\n    \"total\": {\r\n      \"msg_count\": 175,\r\n      \"total_bytes\": 34109\r\n    }\r\n  },\r\n  \"received\": {\r\n    \"total\": {\r\n      \"msg_count\": 280,\r\n      \"total_bytes\": 2144499\r\n    }\r\n  }\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>getnetmsgstats '[\"conntype\", \"network\", \"msgtype\"]'</summary>\r\n\r\n```\r\n./src/bitcoin-cli getnetmsgstats '[\"conntype\", \"network\", \"msgtype\"]'\r\n{\r\n  \"sent\": {\r\n    \"block-relay-only\": {\r\n      \"ipv4\": {\r\n        \"getheaders\": {\r\n          \"msg_count\": 5,\r\n          \"total_bytes\": 5265\r\n        },\r\n        \"headers\": {\r\n          \"msg_count\": 4,\r\n          \"total_bytes\": 424\r\n        },\r\n        \"inv\": {\r\n          \"msg_count\": 1,\r\n          \"total_bytes\": 61\r\n        },\r\n        \"ping\": {\r\n          \"msg_count\": 6,\r\n          \"total_bytes\": 192\r\n        },\r\n        \"pong\": {\r\n          \"msg_count\": 4,\r\n          \"total_bytes\": 128\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"msg_count\": 4,\r\n          \"total_bytes\": 96\r\n        },\r\n        \"sendcmpct\": {\r\n          \"msg_count\": 5,\r\n          \"total_bytes\": 165\r\n        },\r\n        \"sendheaders\": {\r\n          \"msg_count\": 2,\r\n          \"total_bytes\": 48\r\n        },\r\n        \"verack\": {\r\n          \"msg_count\": 5,\r\n          \"total_bytes\": 120\r\n        },\r\n        \"version\": {\r\n          \"msg_count\": 5,\r\n          \"total_bytes\": 635\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"msg_count\": 4,\r\n          \"total_bytes\": 96\r\n        }\r\n      }\r\n    },\r\n    \"outbound-full-relay\": {\r\n      \"ipv4\": {\r\n        \"addr\": {\r\n          \"msg_count\": 6,\r\n          \"total_bytes\": 360\r\n        },\r\n        \"addrv2\": {\r\n          \"msg_count\": 15,\r\n          \"total_bytes\": 868\r\n        },\r\n        \"feefilter\": {\r\n          \"msg_count\": 9,\r\n          \"total_bytes\": 288\r\n        },\r\n        \"getaddr\": {\r\n          \"msg_count\": 9,\r\n          \"total_bytes\": 216\r\n        },\r\n        \"getblocktxn\": {\r\n          \"msg_count\": 2,\r\n          \"total_bytes\": 4027\r\n        },\r\n        \"getdata\": {\r\n          \"msg_count\": 210,\r\n          \"total_bytes\": 42978\r\n        },\r\n        \"getheaders\": {\r\n          \"msg_count\": 9,\r\n          \"total_bytes\": 9477\r\n        },\r\n        \"headers\": {\r\n          \"msg_count\": 11,\r\n          \"total_bytes\": 1004\r\n        },\r\n        \"inv\": {\r\n          \"msg_count\": 431,\r\n          \"total_bytes\": 175079\r\n        },\r\n        \"ping\": {\r\n          \"msg_count\": 17,\r\n          \"total_bytes\": 544\r\n        },\r\n        \"pong\": {\r\n          \"msg_count\": 17,\r\n          \"total_bytes\": 544\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"msg_count\": 7,\r\n          \"total_bytes\": 168\r\n        },\r\n        \"sendcmpct\": {\r\n          \"msg_count\": 11,\r\n          \"total_bytes\": 363\r\n        },\r\n        \"sendheaders\": {\r\n          \"msg_count\": 8,\r\n          \"total_bytes\": 192\r\n        },\r\n        \"tx\": {\r\n          \"msg_count\": 59,\r\n          \"total_bytes\": 41631\r\n        },\r\n        \"verack\": {\r\n          \"msg_count\": 9,\r\n          \"total_bytes\": 216\r\n        },\r\n        \"version\": {\r\n          \"msg_count\": 10,\r\n          \"total_bytes\": 1270\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"msg_count\": 7,\r\n          \"total_bytes\": 168\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"received\": {\r\n    \"block-relay-only\": {\r\n      \"ipv4\": {\r\n        \"feefilter\": {\r\n          \"msg_count\": 2,\r\n          \"total_bytes\": 64\r\n        },\r\n        \"getheaders\": {\r\n          \"msg_count\": 3,\r\n          \"total_bytes\": 3159\r\n        },\r\n        \"headers\": {\r\n          \"msg_count\": 3,\r\n          \"total_bytes\": 237\r\n        },\r\n        \"inv\": {\r\n          \"msg_count\": 1,\r\n          \"total_bytes\": 133\r\n        },\r\n        \"ping\": {\r\n          \"msg_count\": 4,\r\n          \"total_bytes\": 128\r\n        },\r\n        \"pong\": {\r\n          \"msg_count\": 4,\r\n          \"total_bytes\": 128\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"msg_count\": 3,\r\n          \"total_bytes\": 72\r\n        },\r\n        \"sendcmpct\": {\r\n          \"msg_count\": 5,\r\n          \"total_bytes\": 165\r\n        },\r\n        \"sendheaders\": {\r\n          \"msg_count\": 3,\r\n          \"total_bytes\": 72\r\n        },\r\n        \"verack\": {\r\n          \"msg_count\": 5,\r\n          \"total_bytes\": 120\r\n        },\r\n        \"version\": {\r\n          \"msg_count\": 5,\r\n          \"total_bytes\": 631\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"msg_count\": 3,\r\n          \"total_bytes\": 72\r\n        }\r\n      }\r\n    },\r\n    \"outbound-full-relay\": {\r\n      \"ipv4\": {\r\n        \"addr\": {\r\n          \"msg_count\": 5,\r\n          \"total_bytes\": 60219\r\n        },\r\n        \"addrv2\": {\r\n          \"msg_count\": 23,\r\n          \"total_bytes\": 110809\r\n        },\r\n        \"blocktxn\": {\r\n          \"msg_count\": 2,\r\n          \"total_bytes\": 4600726\r\n        },\r\n        \"cmpctblock\": {\r\n          \"msg_count\": 3,\r\n          \"total_bytes\": 37593\r\n        },\r\n        \"feefilter\": {\r\n          \"msg_count\": 9,\r\n          \"total_bytes\": 288\r\n        },\r\n        \"getdata\": {\r\n          \"msg_count\": 42,\r\n          \"total_bytes\": 3174\r\n        },\r\n        \"getheaders\": {\r\n          \"msg_count\": 9,\r\n          \"total_bytes\": 9477\r\n        },\r\n        \"headers\": {\r\n          \"msg_count\": 14,\r\n          \"total_bytes\": 1484\r\n        },\r\n        \"inv\": {\r\n          \"msg_count\": 243,\r\n          \"total_bytes\": 109647\r\n        },\r\n        \"notfound\": {\r\n          \"msg_count\": 1,\r\n          \"total_bytes\": 277\r\n        },\r\n        \"ping\": {\r\n          \"msg_count\": 17,\r\n          \"total_bytes\": 544\r\n        },\r\n        \"pong\": {\r\n          \"msg_count\": 17,\r\n          \"total_bytes\": 544\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"msg_count\": 8,\r\n          \"total_bytes\": 192\r\n        },\r\n        \"sendcmpct\": {\r\n          \"msg_count\": 16,\r\n          \"total_bytes\": 528\r\n        },\r\n        \"sendheaders\": {\r\n          \"msg_count\": 9,\r\n          \"total_bytes\": 216\r\n        },\r\n        \"tx\": {\r\n          \"msg_count\": 1039,\r\n          \"total_bytes\": 1225891\r\n        },\r\n        \"verack\": {\r\n          \"msg_count\": 10,\r\n          \"total_bytes\": 240\r\n        },\r\n        \"version\": {\r\n          \"msg_count\": 10,\r\n          \"total_bytes\": 1276\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"msg_count\": 8,\r\n          \"total_bytes\": 192\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n</details>\r\n\r\n---\r\n\r\nSo that is where things are at! Appreciate any and all feedback on the [new PR](https://github.com/satsie/bitcoin/pull/4) and thank you everyone for the time you've already put into helping guide this.\r\n",
      "created_at" : "2023-02-27T22:12:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1447193880",
      "id" : 1447193880,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585WQm0Y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1447193880/reactions"
      },
      "updated_at" : "2023-02-27T22:16:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1447193880",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hi, I'm back again :laughing: \r\n\r\nHere is the latest code I have: https://github.com/satsie/bitcoin/pull/5\r\n\r\nIt incorporates a bunch of feedback I got from the code I previously posted. The changes are mostly under the hood and have all been documented in the new PR's description for anyone that is curious. Design-wise, the only noteworthy thing is 'direction' is now available as a \"aggregate type\" (the term I am now using instead of \"filter\"). So now, results can be aggregated by:\r\n- direction\r\n- network\r\n- connection type\r\n- message type\r\n\r\nDirection will no longer be returned by default.\r\n\r\nAs mentioned, the RPC really hasn't changed, but attaching an updated summary of the latest so folks don't have to look through previous comments.\r\n\r\nHere's an updated summary of the design:\r\n\r\n## getnetmsgstats RPC\r\nReturns the message count and total number of bytes for sent and received network traffic. Results may optionally be broken down message type, connection type, and/or network.\r\n\r\n### Arguments\r\n\r\n**aggregate_by**: an optional array of one or more aggregate types. Valid options are: direction, network, message_type, and connection_type. If no aggregate types are specified, totals are returned.\r\n\r\n### Examples\r\n\r\n<details>\r\n  <summary>getnetmsgstats</summary>\r\n\r\n```\r\n ./src/bitcoin-cli getnetmsgstats\r\n{\r\n  \"totals\": {\r\n    \"message_count\": 1905,\r\n    \"byte_count\": 818941962\r\n  }\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>getnetmsgstats '[\"conntype\",\"msgtype\"]'</summary>\r\n\r\n```\r\n./src/bitcoin-cli getnetmsgstats '[\"conntype\",\"msgtype\"]'\r\n{\r\n  \"block-relay-only\": {\r\n    \"addrv2\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 40\r\n    },\r\n    \"block\": {\r\n      \"message_count\": 6,\r\n      \"byte_count\": 9899426\r\n    },\r\n    \"cmpctblock\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 16615\r\n    },\r\n    \"feefilter\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 32\r\n    },\r\n    \"getdata\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 241\r\n    },\r\n    \"getheaders\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 4212\r\n    },\r\n    \"headers\": {\r\n      \"message_count\": 10,\r\n      \"byte_count\": 1303\r\n    },\r\n    \"inv\": {\r\n      \"message_count\": 6,\r\n      \"byte_count\": 366\r\n    },\r\n    \"ping\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 128\r\n    },\r\n    \"pong\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 128\r\n    },\r\n    \"sendaddrv2\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 96\r\n    },\r\n    \"sendcmpct\": {\r\n      \"message_count\": 6,\r\n      \"byte_count\": 198\r\n    },\r\n    \"sendheaders\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 96\r\n    },\r\n    \"verack\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 96\r\n    },\r\n    \"version\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 507\r\n    },\r\n    \"wtxidrelay\": {\r\n      \"message_count\": 4,\r\n      \"byte_count\": 96\r\n    }\r\n  },\r\n  \"outbound-full-relay\": {\r\n    \"addr\": {\r\n      \"message_count\": 6,\r\n      \"byte_count\": 30302\r\n    },\r\n    \"addrv2\": {\r\n      \"message_count\": 10,\r\n      \"byte_count\": 76016\r\n    },\r\n    \"blocktxn\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 1288086\r\n    },\r\n    \"cmpctblock\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 16615\r\n    },\r\n    \"feefilter\": {\r\n      \"message_count\": 15,\r\n      \"byte_count\": 480\r\n    },\r\n    \"getaddr\": {\r\n      \"message_count\": 8,\r\n      \"byte_count\": 192\r\n    },\r\n    \"getblocktxn\": {\r\n      \"message_count\": 1,\r\n      \"byte_count\": 2515\r\n    },\r\n    \"getdata\": {\r\n      \"message_count\": 79,\r\n      \"byte_count\": 16951\r\n    },\r\n    \"getheaders\": {\r\n      \"message_count\": 15,\r\n      \"byte_count\": 15795\r\n    },\r\n    \"headers\": {\r\n      \"message_count\": 20,\r\n      \"byte_count\": 2039\r\n    },\r\n    \"inv\": {\r\n      \"message_count\": 134,\r\n      \"byte_count\": 58826\r\n    },\r\n    \"notfound\": {\r\n      \"message_count\": 7,\r\n      \"byte_count\": 787\r\n    },\r\n    \"other\": {\r\n      \"message_count\": 6,\r\n      \"byte_count\": 438\r\n    },\r\n    \"ping\": {\r\n      \"message_count\": 15,\r\n      \"byte_count\": 480\r\n    },\r\n    \"pong\": {\r\n      \"message_count\": 14,\r\n      \"byte_count\": 448\r\n    },\r\n    \"sendaddrv2\": {\r\n      \"message_count\": 10,\r\n      \"byte_count\": 240\r\n    },\r\n    \"sendcmpct\": {\r\n      \"message_count\": 19,\r\n      \"byte_count\": 627\r\n    },\r\n    \"sendheaders\": {\r\n      \"message_count\": 14,\r\n      \"byte_count\": 336\r\n    },\r\n    \"tx\": {\r\n      \"message_count\": 398,\r\n      \"byte_count\": 211333\r\n    },\r\n    \"verack\": {\r\n      \"message_count\": 16,\r\n      \"byte_count\": 384\r\n    },\r\n    \"version\": {\r\n      \"message_count\": 17,\r\n      \"byte_count\": 2151\r\n    },\r\n    \"wtxidrelay\": {\r\n      \"message_count\": 10,\r\n      \"byte_count\": 240\r\n    }\r\n  }\r\n}\r\n```\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>getnetmsgstats '[\"network\", \"direction\", \"connection_type\", \"message_type\"]'</summary>\r\n\r\n```\r\n./src/bitcoin-cli getnetmsgstats '[\"network\", \"direction\", \"connection_type\", \"message_type\"]'\r\n{\r\n  \"ipv4\": {\r\n    \"received\": {\r\n      \"block-relay-only\": {\r\n        \"addrv2\": {\r\n          \"message_count\": 5,\r\n          \"byte_count\": 227\r\n        },\r\n        \"block\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 9899426\r\n        },\r\n        \"cmpctblock\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 25184\r\n        },\r\n        \"feefilter\": {\r\n          \"message_count\": 1,\r\n          \"byte_count\": 32\r\n        },\r\n        \"getheaders\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 2106\r\n        },\r\n        \"headers\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 1041\r\n        },\r\n        \"inv\": {\r\n          \"message_count\": 3,\r\n          \"byte_count\": 183\r\n        },\r\n        \"ping\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 192\r\n        },\r\n        \"pong\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 192\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        },\r\n        \"sendcmpct\": {\r\n          \"message_count\": 3,\r\n          \"byte_count\": 99\r\n        },\r\n        \"sendheaders\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        },\r\n        \"verack\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        },\r\n        \"version\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 253\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        }\r\n      },\r\n      \"outbound-full-relay\": {\r\n        \"addr\": {\r\n          \"message_count\": 4,\r\n          \"byte_count\": 30222\r\n        },\r\n        \"addrv2\": {\r\n          \"message_count\": 26,\r\n          \"byte_count\": 148422\r\n        },\r\n        \"blocktxn\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 3752987\r\n        },\r\n        \"cmpctblock\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 25184\r\n        },\r\n        \"feefilter\": {\r\n          \"message_count\": 11,\r\n          \"byte_count\": 352\r\n        },\r\n        \"getdata\": {\r\n          \"message_count\": 24,\r\n          \"byte_count\": 2184\r\n        },\r\n        \"getheaders\": {\r\n          \"message_count\": 11,\r\n          \"byte_count\": 11583\r\n        },\r\n        \"headers\": {\r\n          \"message_count\": 20,\r\n          \"byte_count\": 2120\r\n        },\r\n        \"inv\": {\r\n          \"message_count\": 275,\r\n          \"byte_count\": 116207\r\n        },\r\n        \"notfound\": {\r\n          \"message_count\": 9,\r\n          \"byte_count\": 981\r\n        },\r\n        \"other\": {\r\n          \"message_count\": 44,\r\n          \"byte_count\": 3430\r\n        },\r\n        \"ping\": {\r\n          \"message_count\": 20,\r\n          \"byte_count\": 640\r\n        },\r\n        \"pong\": {\r\n          \"message_count\": 20,\r\n          \"byte_count\": 640\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"message_count\": 9,\r\n          \"byte_count\": 216\r\n        },\r\n        \"sendcmpct\": {\r\n          \"message_count\": 18,\r\n          \"byte_count\": 594\r\n        },\r\n        \"sendheaders\": {\r\n          \"message_count\": 11,\r\n          \"byte_count\": 264\r\n        },\r\n        \"tx\": {\r\n          \"message_count\": 1161,\r\n          \"byte_count\": 596142\r\n        },\r\n        \"verack\": {\r\n          \"message_count\": 12,\r\n          \"byte_count\": 288\r\n        },\r\n        \"version\": {\r\n          \"message_count\": 12,\r\n          \"byte_count\": 1536\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"message_count\": 9,\r\n          \"byte_count\": 216\r\n        }\r\n      }\r\n    },\r\n    \"sent\": {\r\n      \"block-relay-only\": {\r\n        \"getdata\": {\r\n          \"message_count\": 1,\r\n          \"byte_count\": 241\r\n        },\r\n        \"getheaders\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 2106\r\n        },\r\n        \"headers\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 474\r\n        },\r\n        \"inv\": {\r\n          \"message_count\": 3,\r\n          \"byte_count\": 183\r\n        },\r\n        \"ping\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 192\r\n        },\r\n        \"pong\": {\r\n          \"message_count\": 6,\r\n          \"byte_count\": 192\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        },\r\n        \"sendcmpct\": {\r\n          \"message_count\": 3,\r\n          \"byte_count\": 99\r\n        },\r\n        \"sendheaders\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        },\r\n        \"verack\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        },\r\n        \"version\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 254\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 48\r\n        }\r\n      },\r\n      \"outbound-full-relay\": {\r\n        \"addr\": {\r\n          \"message_count\": 4,\r\n          \"byte_count\": 250\r\n        },\r\n        \"addrv2\": {\r\n          \"message_count\": 19,\r\n          \"byte_count\": 938\r\n        },\r\n        \"feefilter\": {\r\n          \"message_count\": 12,\r\n          \"byte_count\": 384\r\n        },\r\n        \"getaddr\": {\r\n          \"message_count\": 12,\r\n          \"byte_count\": 288\r\n        },\r\n        \"getblocktxn\": {\r\n          \"message_count\": 2,\r\n          \"byte_count\": 3883\r\n        },\r\n        \"getdata\": {\r\n          \"message_count\": 249,\r\n          \"byte_count\": 48813\r\n        },\r\n        \"getheaders\": {\r\n          \"message_count\": 12,\r\n          \"byte_count\": 12636\r\n        },\r\n        \"headers\": {\r\n          \"message_count\": 13,\r\n          \"byte_count\": 1297\r\n        },\r\n        \"inv\": {\r\n          \"message_count\": 464,\r\n          \"byte_count\": 166868\r\n        },\r\n        \"ping\": {\r\n          \"message_count\": 21,\r\n          \"byte_count\": 672\r\n        },\r\n        \"pong\": {\r\n          \"message_count\": 20,\r\n          \"byte_count\": 640\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"message_count\": 9,\r\n          \"byte_count\": 216\r\n        },\r\n        \"sendcmpct\": {\r\n          \"message_count\": 13,\r\n          \"byte_count\": 429\r\n        },\r\n        \"sendheaders\": {\r\n          \"message_count\": 11,\r\n          \"byte_count\": 264\r\n        },\r\n        \"tx\": {\r\n          \"message_count\": 44,\r\n          \"byte_count\": 18966\r\n        },\r\n        \"verack\": {\r\n          \"message_count\": 12,\r\n          \"byte_count\": 288\r\n        },\r\n        \"version\": {\r\n          \"message_count\": 13,\r\n          \"byte_count\": 1651\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"message_count\": 9,\r\n          \"byte_count\": 216\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n</details>",
      "created_at" : "2023-04-17T21:08:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1512090103",
      "id" : 1512090103,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585aIKn3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1512090103/reactions"
      },
      "updated_at" : "2023-04-17T21:08:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1512090103",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@satsie, thanks, all looks good except the semantic of the argument (I have not looked at the code yet).\r\n\r\nTo me \"aggregate by\" means to \"sum by\" those fields, similarly to the `GROUP BY` clause in SQL. So, if I aggregate by `connection_type` and `message_type` I would expect to see only `network` and `direction` in the output. I do not have a strong opinion whether the argument should act that way or in the inverse way, but the name of the argument should be chosen in such a way as to avoid confusion. Some ideas:\r\n\r\n* to group by the listed fields: `group_by`, `aggregate_by`, `sum_by`, `omit`, `hide`\r\n* to group by the non-listed fields: `show_only`",
      "created_at" : "2023-04-18T08:44:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/26337#issuecomment-1512696265",
      "id" : 1512696265,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26337",
      "node_id" : "IC_kwDOABII585aKenJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1512696265/reactions"
      },
      "updated_at" : "2023-04-18T08:44:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1512696265",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
