[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25600](https://github.com/bitcoin/bitcoin/pull/25600) (p2p: Advertise `NODE_FULL_RBF` and connect to 4 outbound full-rbf peers if `-mempoolfullrbf` is set by ariard)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-10-19T21:50:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26343#issuecomment-1284610730",
      "id" : 1284610730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26343",
      "node_id" : "IC_kwDOABII585MkZqq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1284610730/reactions"
      },
      "updated_at" : "2022-10-19T21:50:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1284610730",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> However, we only want addresses from these peers, which are not related to any of the current service flags, so I don't see a point in aborting an AddrFetch attempt due to undesirable services.\r\n\r\n`MayHaveUsefulAddressDB` makes me think we that we are assuming nodes signaling `NODE_NETWORK` or `NODE_NETWORK_LIMITED` to have a useful addr db.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2ac71d20b2ebbfea76ee7369fddffbd78bd2c010/src/protocol.h#L352-L359",
      "created_at" : "2022-10-20T12:11:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26343#issuecomment-1285429210",
      "id" : 1285429210,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26343",
      "node_id" : "IC_kwDOABII585Mnhfa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1285429210/reactions"
      },
      "updated_at" : "2022-10-20T12:11:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1285429210",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> `MayHaveUsefulAddressDB` makes me think we that we are assuming nodes signaling `NODE_NETWORK` or `NODE_NETWORK_LIMITED` to have a useful addr db.\r\n\r\nInteresting! I guess we could leave `ExpectServicesFromConn` as is but check for `MayHaveUsefulAddressDB()` instead of `HasAllDesirableServiceFlags()` for an AddrFetch connections when deciding whether to accept the peer.\r\n\r\nHowever, I'm not sure this would be ideal, for the following reasons:\r\n- `MayHaveUsefulAddressDB` is used to decide whether we want to [connect to a feeler](https://github.com/bitcoin/bitcoin/blob/fabc0310480b49e159a15d494525c5aa15072cba/src/net.cpp#L1834), and whether to [process a received addr](https://github.com/bitcoin/bitcoin/blob/fabc0310480b49e159a15d494525c5aa15072cba/src/net_processing.cpp#L3606) at all. In neither of these situations we particularly care about the peer's address db (we don't even request addrs from feelers), we care whether it is a (pruned or not) full node, so the function might better be named `IsFullNode()`.\r\n- `MayHaveUsefulAddressDB` just makes the assumption that SPV clients don't know about address relay when they can't serve blocks - that may be the case for most current software, but I don't see why a SPV node shouldn't implement addr relay.\r\n- When we do an AddrFetch connection, we usually don't have a bunch of alternative addrs (otherwise there would be no need to make such a connection in the first place) - we either manually specified this peer (`-seednode`), it's a peer a DNS seed resolves to, or (if #26114 makes it in) it's a fixed seed. When we do make an AddrFetch connection and the peer doesn't deliver addrs, we disconnect them after a few minutes. So I can't see the hurt in trying, even if the service bits don't match, if we don't have a better alternative.",
      "created_at" : "2022-10-20T18:34:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26343#issuecomment-1285978072",
      "id" : 1285978072,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26343",
      "node_id" : "IC_kwDOABII585MpnfY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1285978072/reactions"
      },
      "updated_at" : "2022-10-20T18:36:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1285978072",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   }
]
