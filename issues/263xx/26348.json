{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "To characterize a transaction as standard or non-standard, Bitcoin Core tries to estimate the number of signature checks a particular script can potentially request. A maximum of 15 signature checks is allowed. The function GetSigopCount() \r\n counts the maximum number of signature checks performed by a script.\r\nFor each CHECKSIG or CHECKSIGVERIFY found in a script, one is added to the signature check counter. For multisigs, the maximum number of checks depends on the number of signatories. When CHECKMULTISIG is executed, this number is at the top of the stack. However, to avoid executing the script to obtain the top of the stack value, Bitcoin Core performs an estimation based on static analysis of the script, which returns only an upper bound. This is what GetSigOpCount(true) does. However, the static analysis is very rudimentary, and it overestimates the signature checks for certain common scripts.\r\n\r\n**How GetSigOpCount() works**\r\n\r\nGetSigOpCount() assumes that the number of signers is pushed into the stack immediately before the CHECKMULTISIG opcode. If the previous opcode is not a push opcode, then this function assumes the worst case for each CHECKMULTISIG found, which is 20 signatures (defined by MAX_PUBKEYS_PER_MULTISIG). The problem is that this constant is greater than the maximum number of checks allowed per P2SH redeem script, which means that any P2SH script that uses CHECKMULTISIG must specify the number of signers with a PUSH opcode right before.   \r\n\r\n**The bug in the RSK sidechain**\r\n\r\nTo add a time-locked emergency multisig to RSK powpeg, the RSK community, with the help of RSK core developers, migrated the multisig script that holds the funds of the peg from a traditional P2SH multisig to the following transaction redeem script:\r\n\r\n```\r\nOP_NOTIF \r\n\tOP_PUSHNUM_M\r\n\tOP_PUSHBYTES_33 pubkey1\r\n\t...\r\n\tOP_PUSHBYTES_33 pubkeyN\r\n\tOP_PUSHNUM_N \r\nOP_ELSE \r\n\tOP_PUSHBYTES_3 <time-lock-value>\r\n\tOP_CSV \r\n\tOP_DROP \r\n\tOP_PUSHNUM_3 \r\n\tOP_PUSHBYTES_33 emergencyPubkey1\r\n\tâ¦\r\n\tOP_PUSHBYTES_33 emergencyPubkey4\r\n\tOP_PUSHNUM_4 \r\nOP_ENDIF \r\nOP_CHECKMULTISIG\r\n```\r\n\r\nWe see that there are two script paths and, to reduce the script size, a single CHECKMULTISIG is used for the two paths, separating the signer count from the CHECKMULTISIG opcode. This script worked on testnet, because it lacks the standard checks performed in Mainnet. \r\nThe Liquid sidechain uses a very similar script, but using segwit addresses. \r\n\r\nWe can see [here](https://github.com/bitcoin/bitcoin/blob/d492dc1cdaabdc52b0766bf4cba4bd73178325d0/src/script/script.cpp#L153) that GetSigOpCount() will find that END_IF is not a push opcode and will assume the number of signature checks is MAX_PUBKEYS_PER_MULTISIG.\r\n\r\n**Motivation for Changing Bitcoin's standard rules**\r\n\r\nSince having two execution paths for two different multisigs, one of them usually time-locked, is a very common use case, Bitcoin users can benefit from relaxing the standard rule and making two-paths multisigs standard.\r\nThe alternate way of having two-paths multisigs is by adding the CHECKMULTISIG at the end of every path. However, this reduces the maximum number of functionaries of the first (non time-locked) multisig, since the sum of both must be below 15.\r\n\r\nAnother benefit is that this change separates the new GetStandardSigOpCount() function used for standard rules from the old GetSigOpCount() method that is used in consensus code (both with fAccurate==true and fAccurate=false). This is very important because consensus rules should not be mixed with non-consensus rules in a dangerous way, as it is today.\r\n\r\nAn additional benefit for the RSK community is that if Bitcoin Core implements this improvement, the RSK community avoids preparing and activating a hard-fork to unblock the funds in the peg.\r\n\r\nI include additional unit tests to show that:\r\n\r\n* Only a single level of nesting is supported. \"IF ELSE ENDIF CHECKMULTISIG\" is supported but \"IF IF ENDIF ENDIF CHECKMULTISIG\" is not supported. \r\n* There must be only two paths (IF ELSE ELSE ELSE ENDIF CHECKMULTISIG\" not supported).\r\n* The change does not affect any other script standard rules, apart from the two-paths multisig.\r\n* The change does not modify consensus rules.\r\n",
   "closed_at" : "2023-02-02T10:20:24Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 32,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26348/comments",
   "created_at" : "2022-10-20T02:54:29Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26348/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/26348",
   "id" : 1415851022,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 82428251,
         "name" : "TX fees and policy",
         "node_id" : "MDU6TGFiZWw4MjQyODI1MQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26348/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII585BJ5kZ",
   "number" : 26348,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/26348.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26348",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/26348.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26348"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26348/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26348/timeline",
   "title" : "Make P2SH redeem script \"IF .. PUSH <x> ELSE ... PUSH <y> ENDIF CHECKMULTISIG .. \" standard",
   "updated_at" : "2023-02-02T10:20:25Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26348",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/1752347?v=4",
      "events_url" : "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
      "followers_url" : "https://api.github.com/users/SergioDemianLerner/followers",
      "following_url" : "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
      "gists_url" : "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/SergioDemianLerner",
      "id" : 1752347,
      "login" : "SergioDemianLerner",
      "node_id" : "MDQ6VXNlcjE3NTIzNDc=",
      "organizations_url" : "https://api.github.com/users/SergioDemianLerner/orgs",
      "received_events_url" : "https://api.github.com/users/SergioDemianLerner/received_events",
      "repos_url" : "https://api.github.com/users/SergioDemianLerner/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/SergioDemianLerner/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/SergioDemianLerner"
   }
}
