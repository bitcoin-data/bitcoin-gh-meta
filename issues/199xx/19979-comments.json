[
   {
      "author_association" : "MEMBER",
      "body" : "cc @ajtowns @MarcoFalke @ryanofsky @vasild ",
      "created_at" : "2020-09-19T10:05:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-695193929",
      "id" : 695193929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19979",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTE5MzkyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-19T10:05:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695193929",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "As mentioned in previous prs, clang may have accidental bugs or intentional limitations when checking for locks held at compile time. So removing the run-time checks seems dangerous, see also https://github.com/bitcoin/bitcoin/pull/19865#issuecomment-687585243 .\r\n\r\nFor example, the following diff compiles, but is obviously wrong:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex b256d719a6..b6006427a7 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -1336,6 +1336,8 @@ void PeerManager::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_\r\n     std::shared_ptr<const CBlockHeaderAndShortTxIDs> pcmpctblock = std::make_shared<const CBlockHeaderAndShortTxIDs> (*pblock, true);\r\n     const CNetMsgMaker msgMaker(PROTOCOL_VERSION);\r\n \r\n+    CConnman::NodeFn fun;\r\n+    {\r\n     LOCK(cs_main);\r\n \r\n     static int nHighestFastAnnounce = 0;\r\n@@ -1353,8 +1355,7 @@ void PeerManager::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_\r\n         most_recent_compact_block = pcmpctblock;\r\n         fWitnessesPresentInMostRecentCompactBlock = fWitnessEnabled;\r\n     }\r\n-\r\n-    m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n+    fun =[this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n         // TODO: Avoid the repeated-serialization here\r\n         if (pnode->nVersion < INVALID_CB_NO_BAN_VERSION || pnode->fDisconnect)\r\n             return;\r\n@@ -1370,7 +1371,10 @@ void PeerManager::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_\r\n             m_connman.PushMessage(pnode, msgMaker.Make(NetMsgType::CMPCTBLOCK, *pcmpctblock));\r\n             state.pindexBestHeaderSent = pindex;\r\n         }\r\n-    });\r\n+    };\r\n+    }// release cs_main\r\n+\r\n+    m_connman.ForEachNode(fun);\r\n }\r\n \r\n /**\r\n",
      "created_at" : "2020-09-19T12:35:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-695207906",
      "id" : 695207906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19979",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTIwNzkwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-19T12:35:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695207906",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r491417794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491417794"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As the func is not consumed, shouldn't this keep the uref `&&`? ",
      "commit_id" : "0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "created_at" : "2020-09-19T12:37:47Z",
      "diff_hunk" : "@@ -268,8 +269,7 @@ class CConnman\n         }\n     };\n \n-    template<typename Callable>\n-    void ForEachNode(Callable&& func) const\n+    void ForEachNode(NodeFn func) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r491417794",
      "id" : 491417794,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQxNzc5NA==",
      "original_commit_id" : "774face46174120ea7f548911895416bc4794eaa",
      "original_line" : 272,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 491996119,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-19T15:06:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491417794",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> So removing the run-time checks seems dangerous\r\n\r\nThis moves the run time checks outside of the lambdas. I don't think it's fair to say it removes them. PR could be tweaked to move the checks inside the lambdas instead of outside if you prefer that.\r\n\r\nIt is true in general that the approach of annotating a lambda and calling it through a std::function so the annotation will not be enforced is less safe than using an ASSERT_EXCLUSIVE_LOCK assert, because an ASSERT_EXCLUSIVE_LOCK assert pairs any unproven declaration that a mutex is locked together with a runtime check. With this approach in this PR, you are responsible for doing the check separately yourself.",
      "created_at" : "2020-09-19T12:59:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-695210287",
      "id" : 695210287,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19979",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTIxMDI4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-19T12:59:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695210287",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r491428017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491428017"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This has to take a std::function argument so the lambda object is converted to a std::function and the EXCLUSIVE_LOCKS_REQUIRED requirement can by bypassed, otherwise static analysis will not accept this",
      "commit_id" : "0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "created_at" : "2020-09-19T13:05:54Z",
      "diff_hunk" : "@@ -268,8 +269,7 @@ class CConnman\n         }\n     };\n \n-    template<typename Callable>\n-    void ForEachNode(Callable&& func) const\n+    void ForEachNode(NodeFn func) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r491428017",
      "id" : 491428017,
      "in_reply_to_id" : 491417794,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQyODAxNw==",
      "original_commit_id" : "774face46174120ea7f548911895416bc4794eaa",
      "original_line" : 272,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 491997482,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-19T15:06:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491428017",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r491432206"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491432206"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    void ForEachNode(const NodeFn& func) const\r\n```\r\n\r\nshould work and be preferable? Obviously a style nit, as it doesn't make a difference with the current code.",
      "commit_id" : "0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "created_at" : "2020-09-19T13:17:17Z",
      "diff_hunk" : "@@ -268,8 +269,7 @@ class CConnman\n         }\n     };\n \n-    template<typename Callable>\n-    void ForEachNode(Callable&& func) const\n+    void ForEachNode(NodeFn func) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r491432206",
      "id" : 491432206,
      "in_reply_to_id" : 491417794,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQzMjIwNg==",
      "original_commit_id" : "774face46174120ea7f548911895416bc4794eaa",
      "original_line" : 272,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 491998153,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-19T15:06:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491432206",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19970 (sync.h: fix LockAssertion error reporting by ajtowns)\n* #19918 (sync: Replace LockAssertion with AssertLockHeldUnverified by ryanofsky)\n* #19865 (scripted-diff: Restore AssertLockHeld after #19668, remove LockAssertion by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-09-19T13:22:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-695212894",
      "id" : 695212894,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19979",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTIxMjg5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-21T11:40:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695212894",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 774face46174120ea7f548911895416bc4794eaa -> 0bd1184adf6610c0bd14f4e9a25c0a200e65ae25 ([pr19979.01](https://github.com/hebasto/bitcoin/commits/pr19979.01) -> [pr19979.02](https://github.com/hebasto/bitcoin/commits/pr19979.02), [diff](https://github.com/hebasto/bitcoin/compare/pr19979.01..pr19979.02)):\r\n\r\n- addressed @MarcoFalke's [comment](https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-695207906):\r\n> As mentioned in previous prs, clang may have accidental bugs or intentional limitations when checking for locks held at compile time. So removing the run-time checks seems dangerous, see also [#19865 (comment)](https://github.com/bitcoin/bitcoin/pull/19865#issuecomment-687585243)\r\n\r\n- addressed @MarcoFalke's [style nit](https://github.com/bitcoin/bitcoin/pull/19979#discussion_r491432206)",
      "created_at" : "2020-09-19T15:11:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-695243985",
      "id" : 695243985,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19979",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTI0Mzk4NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-19T15:11:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695243985",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r491464063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491464063"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! [Updated](https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-695243985).",
      "commit_id" : "0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "created_at" : "2020-09-19T15:12:19Z",
      "diff_hunk" : "@@ -268,8 +269,7 @@ class CConnman\n         }\n     };\n \n-    template<typename Callable>\n-    void ForEachNode(Callable&& func) const\n+    void ForEachNode(NodeFn func) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r491464063",
      "id" : 491464063,
      "in_reply_to_id" : 491417794,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ2NDA2Mw==",
      "original_commit_id" : "774face46174120ea7f548911895416bc4794eaa",
      "original_line" : 272,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 492004831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-19T15:12:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491464063",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> * May be less efficient because invoking a callback through a std::function can require a heap allocation and indirect call through a function pointer instead of an inlined call or call to a fixed address.\r\n\r\nIf that's a concern, use something like [LLVM's `function_ref`](https://github.com/llvm-mirror/llvm/blob/master/include/llvm/ADT/STLExtras.h#L98-L134). Still an indirect call, but without heap allocation.\r\n\r\n> * This pattern for bypassing thread safety analysis--annotating a lambda with a EXCLUSIVE_LOCKS_REQUIRED and assigning the lambda to a std::function which ignores the annotation--isn't as nice as directly telling the analysis a lock is held using an ASSERT_EXCLUSIVE_LOCK function. An ASSERT_EXCLUSIVE_LOCK call makes sure unprovable assertions look different than proven annotation, and ensures they are accompanied by runtime check.\r\n\r\nRight, casting away the annotations is not nice, the assertion is probably the best you can do here.\r\n\r\nSince the annotations live on declarations and not on types, we can't warn about these casts because there is no way to fix that warning. You can't annotate the function pointer type.\r\n\r\nEdit: thinking about it again, we could warn and for example require an explicit cast or `NO_THREAD_SAFETY_ANALYSIS`. But it would be an uphill battle.",
      "created_at" : "2020-09-19T17:36:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-695336133",
      "id" : 695336133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19979",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTMzNjEzMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-19T18:35:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695336133",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/1453952?v=4",
         "events_url" : "https://api.github.com/users/aaronpuchert/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aaronpuchert/followers",
         "following_url" : "https://api.github.com/users/aaronpuchert/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aaronpuchert/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aaronpuchert",
         "id" : 1453952,
         "login" : "aaronpuchert",
         "node_id" : "MDQ6VXNlcjE0NTM5NTI=",
         "organizations_url" : "https://api.github.com/users/aaronpuchert/orgs",
         "received_events_url" : "https://api.github.com/users/aaronpuchert/received_events",
         "repos_url" : "https://api.github.com/users/aaronpuchert/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aaronpuchert/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aaronpuchert/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aaronpuchert"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "FWIW, the same approach has already been used in the project code base in 6a72f26968cf931c985d8d4797b6264274cabd06 from #16426 by @ariard.",
      "created_at" : "2020-09-19T21:30:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-695358016",
      "id" : 695358016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19979",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTM1ODAxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695358016",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 0bd1184adf6610c0bd14f4e9a25c0a200e65ae25\r\n\r\n",
      "created_at" : "2020-09-20T06:40:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-695752111",
      "id" : 695752111,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19979",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTc1MjExMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-20T06:40:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695752111",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Since the annotations live on declarations and not on types, we can't warn about these casts because there is no way to fix that warning. You can't annotate the function pointer type.\r\n\r\nThis may provide some justification for the \"always do an AssertLockHeld(cs) in the functions with EXCLUSIVE_LOCKS_REQUIRED(cs)\" rule -- any function that gets called via a std::function cast or a function pointer generally won't have the lock validity checked at compile time, and (I think) there's no way to prevent functions from being called that way, so having the runtime check is a good backup. I guess there's no easy way to add a linter to check that we don't have functions with EXCLUSIVE_LOCKS_REQUIRED that lack an AssertLockHeld?\r\n\r\nIf there were a way to prevent an EXCLUSIVE_LOCKS_REQUIRED function from being called via std::function etc and having its annotation discarded, then I think we'd want to enable that, and switch to an ASSERT_LOCK_HELD approach for the lambdas, since then we could guarantee all the EXCLUSIVE_LOCKS_REQUIRED things are actually checked at compile time.\r\n\r\nBut assuming we can't do that today, then this approach is no worse at catching bugs than other alternatives, and simpler to deal with than any of them (since it's just \"always use EXCLUSIVE_LOCKS_REQUIRED, always use AssertLockHeld\") as far as I can see.\r\n\r\nI don't think the description (\"eliminates from the code base all cases when Clang Thread Safety Analysis cannot determine if a lock is held\") is quite accurate though -- clang still isn't able to determine the lock is held in these lambdas.\r\n\r\nACK 0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "created_at" : "2020-09-23T11:16:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-697298054",
      "id" : 697298054,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19979",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzI5ODA1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T11:16:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697298054",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't think the description (\"eliminates from the code base all cases when Clang Thread Safety Analysis cannot determine if a lock is held\") is quite accurate though -- clang still isn't able to determine the lock is held in these lambdas.\r\n\r\nWhat about \"Replace LockAssertion with AssertLockHeld, remove LockAssertion\" as OP?\r\n\r\nOther than that, I think this can go in.",
      "created_at" : "2020-09-23T13:57:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-697396590",
      "id" : 697396590,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19979",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzM5NjU5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T13:57:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697396590",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke \r\n> > I don't think the description (\"eliminates from the code base all cases when Clang Thread Safety Analysis cannot determine if a lock is held\") is quite accurate though -- clang still isn't able to determine the lock is held in these lambdas.\r\n> \r\n> What about \"Replace LockAssertion with AssertLockHeld, remove LockAssertion\" as OP?\r\n\r\nDone.\r\n",
      "created_at" : "2020-09-23T14:01:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-697402631",
      "id" : 697402631,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19979",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzQwMjYzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T14:01:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697402631",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> > Since the annotations live on declarations and not on types, we can't warn about these casts because there is no way to fix that warning. You can't annotate the function pointer type.\r\n> \r\n> This may provide some justification for the \"always do an AssertLockHeld(cs) in the functions with EXCLUSIVE_LOCKS_REQUIRED(cs)\" rule -- any function that gets called via a std::function cast or a function pointer generally won't have the lock validity checked at compile time, and (I think) there's no way to prevent functions from being called that way, so having the runtime check is a good backup. I guess there's no easy way to add a linter to check that we don't have functions with EXCLUSIVE_LOCKS_REQUIRED that lack an AssertLockHeld?\r\n\r\nWe can warn, but we need a good idea on a way out. Since `NO_THREAD_SAFETY_ANALYSIS` also disables checking for arguments, users could have a function\r\n\r\n```c++\r\ntemplate<typename F>\r\nF thread_safety_cast(F&& f) NO_THREAD_SAFETY_ANALYSIS\r\n{\r\n    return std::forward<F>(f);\r\n}\r\n```\r\n\r\nthat would allow casting away annotations. But I haven't thought this through yet.",
      "created_at" : "2020-09-24T00:00:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#issuecomment-698033450",
      "id" : 698033450,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19979",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5ODAzMzQ1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-24T00:00:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/698033450",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/1453952?v=4",
         "events_url" : "https://api.github.com/users/aaronpuchert/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aaronpuchert/followers",
         "following_url" : "https://api.github.com/users/aaronpuchert/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aaronpuchert/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aaronpuchert",
         "id" : 1453952,
         "login" : "aaronpuchert",
         "node_id" : "MDQ6VXNlcjE0NTM5NTI=",
         "organizations_url" : "https://api.github.com/users/aaronpuchert/orgs",
         "received_events_url" : "https://api.github.com/users/aaronpuchert/received_events",
         "repos_url" : "https://api.github.com/users/aaronpuchert/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aaronpuchert/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aaronpuchert/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aaronpuchert"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r494426834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494426834"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Remove unused LockAssertion struct\" (0bd1184adf6610c0bd14f4e9a25c0a200e65ae25)\r\n\r\nInstead of removing this section, maybe it would have been better to update. The example could be updated with EXCLUSIVE_LOCKS_REQUIRED to be consistent with the code. And the text could be something like \"When Clang Thread Safety Analysis is unable to determine if a mutex is locked, it is recommended to disable the analysis or to call the code through a function annotated with EXCLUSIVE_LOCKS_REQUIRED, using an indirect call so the requirement is not checked.\"",
      "commit_id" : "0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "created_at" : "2020-09-24T15:49:23Z",
      "diff_hunk" : "@@ -793,25 +793,6 @@ bool ChainstateManager::ProcessNewBlock(...)\n }\n ```\n \n-- When Clang Thread Safety Analysis is unable to determine if a mutex is locked, use `LockAssertion` class instances:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r494426834",
      "id" : 494426834,
      "line" : 796,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQyNjgzNA==",
      "original_commit_id" : "0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "original_line" : 796,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "doc/developer-notes.md",
      "position" : 4,
      "pull_request_review_id" : 495714462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-24T15:49:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494426834",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r494431446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494431446"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Imo using `NO_THREAD_SAFETY_ANALYSIS` (or `thread_safety_cast` above) or `EXCLUSIVE_LOCKS_REQUIRED` on the lambda is equivalent, as the resulting binary, as well as any compile time errors/warnings should be the same.\r\n\r\nAs there is no observable difference (except in the written code itself), is there a reason to mention it in the dev notes?",
      "commit_id" : "0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "created_at" : "2020-09-24T15:55:49Z",
      "diff_hunk" : "@@ -793,25 +793,6 @@ bool ChainstateManager::ProcessNewBlock(...)\n }\n ```\n \n-- When Clang Thread Safety Analysis is unable to determine if a mutex is locked, use `LockAssertion` class instances:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r494431446",
      "id" : 494431446,
      "in_reply_to_id" : 494426834,
      "line" : 796,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQzMTQ0Ng==",
      "original_commit_id" : "0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "original_line" : 796,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "doc/developer-notes.md",
      "position" : 4,
      "pull_request_review_id" : 495720325,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-24T15:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494431446",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r494445679"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494445679"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Imo, they're both not ideal. EXCLUSIVE_LOCKS_REQUIRED is preferable to NO_THREAD_SAFETY_ANALYSIS because it makes which mutex is assumed to be held explicit, and it doesn't disable checking for other mutexes. You might need to assume cs_main is held somewhere, and still want errors if you forget LOCK(cs_wallet) in the same function.\r\n\r\nIf it was useful before to have a section in developer notes advising how to deal with TSA errors, it's probably more useful now that the current practice is to add annotations that look like they might be enforced, but aren't enforced. But I don't know if the section was useful before it was removed. Just wanted to suggest here that it could be updated if it was useful.\r\n",
      "commit_id" : "0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "created_at" : "2020-09-24T16:17:05Z",
      "diff_hunk" : "@@ -793,25 +793,6 @@ bool ChainstateManager::ProcessNewBlock(...)\n }\n ```\n \n-- When Clang Thread Safety Analysis is unable to determine if a mutex is locked, use `LockAssertion` class instances:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r494445679",
      "id" : 494445679,
      "in_reply_to_id" : 494426834,
      "line" : 796,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ0NTY3OQ==",
      "original_commit_id" : "0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "original_line" : 796,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "doc/developer-notes.md",
      "position" : 4,
      "pull_request_review_id" : 495739135,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-24T16:17:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494445679",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r494457095"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494457095"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> You might need to assume cs_main is held somewhere, and still want errors if you forget LOCK(cs_wallet) in the same function.\r\n\r\nGood point. Yeah, I agree the new \"style\" could be mentioned in the docs.",
      "commit_id" : "0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "created_at" : "2020-09-24T16:34:34Z",
      "diff_hunk" : "@@ -793,25 +793,6 @@ bool ChainstateManager::ProcessNewBlock(...)\n }\n ```\n \n-- When Clang Thread Safety Analysis is unable to determine if a mutex is locked, use `LockAssertion` class instances:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19979#discussion_r494457095",
      "id" : 494457095,
      "in_reply_to_id" : 494426834,
      "line" : 796,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ1NzA5NQ==",
      "original_commit_id" : "0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "original_line" : 796,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "doc/developer-notes.md",
      "position" : 4,
      "pull_request_review_id" : 495753877,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-24T16:34:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494457095",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
