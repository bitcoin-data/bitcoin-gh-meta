[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-09-18T05:33:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19970#issuecomment-694662243",
      "id" : 694662243,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19970",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NDY2MjI0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-18T05:33:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694662243",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review ACK df7a0ab34606c6203eb53ff4061f656293ab0f7f. Code change looks fine, but I think this is a bad approach for a few reasons:\r\n\r\n- The approach is more complicated than it needs to be. There is no need to have a macro-wrapped fake lock class just to assert a mutex is locked. The ASSERT_CAPABILITY annotation literally exists for this purpose. If you have a can of beans, I'm sure you can probably open it with a hammer and screwdriver, but you are probably better off using the can opener.\r\n\r\n- This is introducing a new macro to do what clang developers specifically told us [not to do](https://reviews.llvm.org/D87629#2272676): \"please don't use [ACQUIRE](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#acquire-acquire-shared-release-release-shared-release-generic) when the capability is assumed to be held previously\"\r\n\r\n- This change makes LOCK_ASSERTION look like safer alternative to AssertLockHeld when actually it more dangerous (it is not checked at compile time unlike AssertLockHeld). It would be nice if the naming could give an indication of which assert should be preferred. (Of course we can get rid of two asserts with #19865).\r\n\r\n- Unclear why it's called a \"quick fix\". It's basically the same size as #19918 except it has fewer comments and an incomplete description with no stated rationale",
      "created_at" : "2020-09-18T12:26:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19970#issuecomment-694837644",
      "id" : 694837644,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19970",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NDgzNzY0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-18T12:27:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694837644",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Code review ACK [df7a0ab](https://github.com/bitcoin/bitcoin/commit/df7a0ab34606c6203eb53ff4061f656293ab0f7f). Code change looks fine, but I think this is a bad approach for a few reasons:\r\n> \r\n>     * The approach is more complicated than it needs to be. There is no need to have a macro-wrapped fake lock class just to assert a mutex is locked. The ASSERT_CAPABILITY annotation literally exists for this purpose. If you have a can of beans, I'm sure you can probably open it with a hammer and screwdriver, but you are probably better off using the can opener.\r\n>     * This is introducing a new macro to do what clang developers specifically told us [not to do](https://reviews.llvm.org/D87629#2272676): \"please don't use [ACQUIRE](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#acquire-acquire-shared-release-release-shared-release-generic) when the capability is assumed to be held previously\"\r\n\r\nBoth of those are appropriate justifications for a PR to change the approach. They'd be a valid objection to something that somehow prevents future PRs from changing the approach, but this PR doesn't do that.\r\n\r\n>     * This change makes LOCK_ASSERTION look like safer alternative to AssertLockHeld when actually it more dangerous (it is not checked at compile time unlike AssertLockHeld). It would be nice if the naming could give an indication of which assert should be preferred. (Of course we can get rid of two asserts with #19865).\r\n\r\nThe developer notes state that using compile-time annotations are to be used consistently, and LOCK_ASSERTION is only to be used when that fails. The implementation of LOCK_ASSERTION as it stands will cause compile errors if you use the wrong assertion. I think you're completely mistaken in thinking LOCK_ASSERTION looks \"safer\" than \"AssertLockHeld\".\r\n\r\n>     * Unclear why it's called a \"quick fix\". It's basically the same size as #19918 except it has fewer comments and an incomplete description with no stated rationale\r\n\r\nIt's a \"fix\" because it corrects obviously broken behaviour, and it's \"quick\" because it leaves the issues where there's debate about what to do them to be addressed elsewhere. This isn't an \"alternative\" to other approaches as you suggest in your edit to the PR description, it's just a first step.",
      "created_at" : "2020-09-19T04:57:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19970#issuecomment-695164886",
      "id" : 695164886,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19970",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTE2NDg4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-19T04:57:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695164886",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19979 (Use proper TSA attributes (attempt two) by hebasto)\n* #19918 (sync: Replace LockAssertion with AssertLockHeldUnverified by ryanofsky)\n* #19865 (scripted-diff: Restore AssertLockHeld after #19668, remove LockAssertion by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-09-19T13:24:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19970#issuecomment-695213113",
      "id" : 695213113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19970",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTIxMzExMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-21T11:42:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695213113",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-09-23T16:14:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19970#issuecomment-697621761",
      "id" : 697621761,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19970",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzYyMTc2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T16:14:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697621761",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "No longer relevant",
      "created_at" : "2020-09-24T03:23:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19970#issuecomment-698088130",
      "id" : 698088130,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19970",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5ODA4ODEzMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-24T03:23:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/698088130",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]
