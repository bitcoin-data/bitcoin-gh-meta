[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19809 (log: Prefix log messages with function name if -logfunctionnames is set by practicalswift)\n* #16673 (Relog configuration args on debug.log rotation by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-09-22T18:55:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#issuecomment-696915422",
      "id" : 696915422,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19995",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NjkxNTQyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-22T18:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/696915422",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I was wondering about this threat several times over last year, but never managed to look into it for real.",
      "created_at" : "2020-09-23T07:25:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#issuecomment-697185481",
      "id" : 697185481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19995",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzE4NTQ4MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T07:25:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697185481",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "~~I'm not sure about this. This kind of \"drop everything\" rate limiting can be used for a different kind of DoS that might be even more serious than just shutting down: prevent important things from being logged.~~\r\nEdit: I misunderstood the code here, it tracks per source location. Concept ACK.",
      "created_at" : "2020-09-23T12:04:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#issuecomment-697319173",
      "id" : 697319173,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19995",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzMxOTE3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-24T13:52:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697319173",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj \r\n\r\nHave you looked at the implementation? It certainly doesn't drop everything :)\r\n\r\nThe implementation was carefully written to minimise the risk of suppressing something important from being logged while at the same time killing the disk-fill-via-peer-triggered-logging bug class for good.\r\n\r\nDo you have any ideas on how to improve the implementation in a way to reduce the \"prevent important things from being logged\" risk?\r\n\r\nPerhaps this implementation isn't the way to go but I really think we need _some_ kind of general mitigation for disk fill attacks. This is a non-theoretical DoS vector which has been problematic for Bitcoin Core historically.\r\n",
      "created_at" : "2020-09-23T13:14:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#issuecomment-697356204",
      "id" : 697356204,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19995",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzM1NjIwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T13:25:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697356204",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't know how hard of a task that would be, but it would be great to see how easy it is to fill disk space depending on the protocol piece (message but also context).\r\nFor example,\r\ntx INV: X bytes per second\r\nADDR: Y bytes per second\r\nGETADDR: Z bytes per second\r\n\r\nFrom there we could make sure our rate-limiting is effective?",
      "created_at" : "2020-09-23T13:56:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#issuecomment-697394173",
      "id" : 697394173,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19995",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzM5NDE3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T14:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697394173",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs \r\n\r\nWhen testing this patch I reverted the fix for an historic disk fill bug to see if this mitigation would have been successful.\r\n\r\nIn that case an untrusted peer could achieve a disk fill rate of 15 GB/hour without this mitigation, and the expected 1 MB/hour with this mitigation. (The 15 GB/hour was achieved on a really old machine with mechanical disks so YMMV.)\r\n\r\nIn other words: the mitigation slowed that specific attack by a factor of 15 000 :)\r\n\r\nNote that the quota is set *per source location*. So every single source location (say `net_processing.cpp:418`) gets a quota of 1 MB of logging per hour. I think we could bump that to 10 MB/hour or even 100 MB/hour and still largely kill this bug class.\r\n\r\nPerhaps I misunderstood what you meant by the `INV`/`ADDR`/`GETADDR` bytes per second thing, but we only log per such message via `LogPrint(CATEGORY, â¦)` (`-debug`). `LogPrint(CATEGORY, â¦)` is intentionally not covered by the rate limiting, since end-users opt-ing in to `-debug` are assumed to know that doing so may cause excessive disk usage :)\r\n\r\nThe goal of this PR is to kill this bug class for a `bitcoind` node running with default settings (no `-debug`).",
      "created_at" : "2020-09-23T14:21:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#issuecomment-697434667",
      "id" : 697434667,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19995",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzQzNDY2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T14:26:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697434667",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r494332295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494332295"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, sorry, I thought this was a global flag. ",
      "commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "created_at" : "2020-09-24T13:47:05Z",
      "diff_hunk" : "@@ -247,6 +249,25 @@ void BCLog::Logger::LogPrintStr(const std::string& str)\n \n     str_prefixed = LogTimestampStr(str_prefixed);\n \n+    // Rate limit logging to disk to avoid disk filling attacks.\n+    bool skip_writing_to_disk_due_to_rate_limiting{false};\n+    if (!skip_disk_usage_rate_limiting) {\n+        const std::chrono::seconds now = GetTime<std::chrono::seconds>();\n+        if ((now - m_last_reset_of_bytes_logged_per_source_location) > std::chrono::hours{1}) {\n+            m_bytes_logged_per_source_location.clear();\n+            m_last_reset_of_bytes_logged_per_source_location = now;\n+        }\n+        m_bytes_logged_per_source_location[source_location] += str_prefixed.size();\n+        if (m_bytes_logged_per_source_location[source_location] > HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION) {\n+            const bool print_quota_state_change_message = (m_bytes_logged_per_source_location[source_location] - str_prefixed.size()) <= HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION;\n+            if (print_quota_state_change_message) {\n+                str_prefixed = LogTimestampStr(strprintf(\"Excessive logging detected from %s (%s): >%d MiB logged during the last hour. Suppressing logging to disk from this source location for up to one hour. Console logging unaffected. Last log entry: %s\", source_location, logging_function, HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION / (1024 * 1024), str_prefixed));\n+            } else {\n+                skip_writing_to_disk_due_to_rate_limiting = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r494332295",
      "id" : 494332295,
      "line" : 266,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzMjI5NQ==",
      "original_commit_id" : "88995e53bd526ab6278b6e383aad7c237a51184d",
      "original_line" : 266,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 29,
      "pull_request_review_id" : 495590558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T14:24:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494332295",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r494335323"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494335323"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We could save quite some memory and avoid having to build a `string` here by indexing with a `(const char*, int)` tuple. `__FUNC__` names end up in the `.text` segment after all so a pointer will do.",
      "commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "created_at" : "2020-09-24T13:49:55Z",
      "diff_hunk" : "@@ -173,17 +179,31 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n             /* Original format string will have newline so don't add one here */\n             log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n         }\n-        LogInstance().LogPrintStr(log_msg);\n+        const std::string source_location = source_file + \":\" + ToString(source_line);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r494335323",
      "id" : 494335323,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNTMyMw==",
      "original_commit_id" : "88995e53bd526ab6278b6e383aad7c237a51184d",
      "original_line" : 182,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 495593307,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T14:24:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494335323",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r494336067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494336067"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe `unordered_map`? we have no ordering constraing here.",
      "commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "created_at" : "2020-09-24T13:50:54Z",
      "diff_hunk" : "@@ -67,6 +69,8 @@ namespace BCLog {\n         FILE* m_fileout GUARDED_BY(m_cs) = nullptr;\n         std::list<std::string> m_msgs_before_open GUARDED_BY(m_cs);\n         bool m_buffering GUARDED_BY(m_cs) = true; //!< Buffer messages before logging can be started.\n+        std::map<std::string, uint64_t> m_bytes_logged_per_source_location GUARDED_BY(m_cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r494336067",
      "id" : 494336067,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNjA2Nw==",
      "original_commit_id" : "88995e53bd526ab6278b6e383aad7c237a51184d",
      "original_line" : 72,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 495594293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T14:24:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494336067",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r494599117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494599117"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed!",
      "commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "created_at" : "2020-09-24T20:43:30Z",
      "diff_hunk" : "@@ -173,17 +179,31 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n             /* Original format string will have newline so don't add one here */\n             log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n         }\n-        LogInstance().LogPrintStr(log_msg);\n+        const std::string source_location = source_file + \":\" + ToString(source_line);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r494599117",
      "id" : 494599117,
      "in_reply_to_id" : 494335323,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5OTExNw==",
      "original_commit_id" : "88995e53bd526ab6278b6e383aad7c237a51184d",
      "original_line" : 182,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 495936489,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T14:24:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494599117",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r494599233"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494599233"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed!",
      "commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "created_at" : "2020-09-24T20:43:45Z",
      "diff_hunk" : "@@ -67,6 +69,8 @@ namespace BCLog {\n         FILE* m_fileout GUARDED_BY(m_cs) = nullptr;\n         std::list<std::string> m_msgs_before_open GUARDED_BY(m_cs);\n         bool m_buffering GUARDED_BY(m_cs) = true; //!< Buffer messages before logging can be started.\n+        std::map<std::string, uint64_t> m_bytes_logged_per_source_location GUARDED_BY(m_cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r494599233",
      "id" : 494599233,
      "in_reply_to_id" : 494336067,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5OTIzMw==",
      "original_commit_id" : "88995e53bd526ab6278b6e383aad7c237a51184d",
      "original_line" : 72,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : null,
      "pull_request_review_id" : 495936641,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-25T14:24:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494599233",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Thanks for the Concept ACK! :)\r\n\r\nFeedback addressed.",
      "created_at" : "2020-09-24T20:44:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#issuecomment-698579113",
      "id" : 698579113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19995",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5ODU3OTExMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-24T20:44:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/698579113",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r497485083"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497485083"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This name is really awkward. I would prefer a more compact name, but don't really have any good suggestions.",
      "commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "created_at" : "2020-09-30T12:53:39Z",
      "diff_hunk" : "@@ -173,17 +192,31 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n             /* Original format string will have newline so don't add one here */\n             log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n         }\n-        LogInstance().LogPrintStr(log_msg);\n+        const SourceLocation source_location = std::make_pair(source_file, source_line);\n+        LogInstance().LogPrintStr(log_msg, logging_function, source_location, skip_disk_usage_rate_limiting);\n     }\n }\n \n+// Unconditional logging. Uses basic rate limiting to mitigate disk filling attacks.\n+#define LogPrintf(...) LogPrintf_(__func__, __FILE__, __LINE__, /* skip_disk_usage_rate_limiting */ false, __VA_ARGS__)\n+\n+// Unconditional logging WITHOUT rate limiting. Use only for log messages that\n+// MUST NOT be rate limited no matter how often they are logged. That requirement\n+// should be extremely rare, so please use with care. Prefer LogPrintf(...) if\n+// possible.\n+#define LogPrintfWithoutRateLimiting(...) LogPrintf_(__func__, __FILE__, __LINE__, /* skip_disk_usage_rate_limiting */ true, __VA_ARGS__)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r497485083",
      "id" : 497485083,
      "line" : 207,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ4NTA4Mw==",
      "original_commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "original_line" : 207,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 88,
      "pull_request_review_id" : 499396325,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-30T12:53:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497485083",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\n$ size -G src/bitcoind*\r\n      text       data        bss      total filename\r\n   6454125    1929533      38929    8422587 src/bitcoind\r\n   6564925    1942029      38929    8545883 src/bitcoind.19995\r\n```\r\nFWIW, this results in a 120 kB increase in stripped binary size for `bitcoind` on x86_64. In contrast to what I first thought, this is not because of the `__FILE__`. There's only 12 kB more in strings. The rest is extra instructions in `.text` to pass the line number to every logging call.\r\n\r\n(still concept ACK though, and thanks for addressing my comments, code changes LGTM now)",
      "created_at" : "2020-09-30T13:30:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#issuecomment-701391760",
      "id" : 701391760,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19995",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMTM5MTc2MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-30T13:30:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/701391760",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r497710432"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497710432"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Heh, I agree :)  Naming is hard! I'm happy to change the name of course.\r\n\r\nI expect `LogPrintfWithoutRateLimiting` to be used once: for `UpdateTip` which is the only non-category log message which we ever expect to legitimately log at a rate of >1 MB/hour (or whatever hourly source-location threshold we choose).\r\n\r\nOne alternative would be to call `LogPrintf_` directly from `UpdateTip` as it is a one-off. That would solve the naming problem too :)",
      "commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "created_at" : "2020-09-30T18:18:11Z",
      "diff_hunk" : "@@ -173,17 +192,31 @@ static inline void LogPrintf(const char* fmt, const Args&... args)\n             /* Original format string will have newline so don't add one here */\n             log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n         }\n-        LogInstance().LogPrintStr(log_msg);\n+        const SourceLocation source_location = std::make_pair(source_file, source_line);\n+        LogInstance().LogPrintStr(log_msg, logging_function, source_location, skip_disk_usage_rate_limiting);\n     }\n }\n \n+// Unconditional logging. Uses basic rate limiting to mitigate disk filling attacks.\n+#define LogPrintf(...) LogPrintf_(__func__, __FILE__, __LINE__, /* skip_disk_usage_rate_limiting */ false, __VA_ARGS__)\n+\n+// Unconditional logging WITHOUT rate limiting. Use only for log messages that\n+// MUST NOT be rate limited no matter how often they are logged. That requirement\n+// should be extremely rare, so please use with care. Prefer LogPrintf(...) if\n+// possible.\n+#define LogPrintfWithoutRateLimiting(...) LogPrintf_(__func__, __FILE__, __LINE__, /* skip_disk_usage_rate_limiting */ true, __VA_ARGS__)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r497710432",
      "id" : 497710432,
      "in_reply_to_id" : 497485083,
      "line" : 207,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxMDQzMg==",
      "original_commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "original_line" : 207,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/logging.h",
      "position" : 88,
      "pull_request_review_id" : 499695897,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-30T18:18:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497710432",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r502327758"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/502327758"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It'd be good to check here whether logging was suppressed for this log, and if so log that logging is restarting for this log (eg. \"Restarting logging from %s ...\")",
      "commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "created_at" : "2020-10-09T10:11:48Z",
      "diff_hunk" : "@@ -247,6 +249,25 @@ void BCLog::Logger::LogPrintStr(const std::string& str)\n \n     str_prefixed = LogTimestampStr(str_prefixed);\n \n+    // Rate limit logging to disk to avoid disk filling attacks.\n+    bool skip_writing_to_disk_due_to_rate_limiting{false};\n+    if (!skip_disk_usage_rate_limiting) {\n+        const std::chrono::seconds now = GetTime<std::chrono::seconds>();\n+        if ((now - m_last_reset_of_bytes_logged_per_source_location) > std::chrono::hours{1}) {\n+            m_bytes_logged_per_source_location.clear();\n+            m_last_reset_of_bytes_logged_per_source_location = now;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r502327758",
      "id" : 502327758,
      "line" : 258,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMyNzc1OA==",
      "original_commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "original_line" : 258,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 21,
      "pull_request_review_id" : 505540213,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-09T10:22:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/502327758",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r502329018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/502329018"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Consider keeping a tally of how many log messages were dropped, and then logging that number when you restart logging (eg `\"Restarting logging from <location>. <number> log messages dropped since <time>\"`)",
      "commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "created_at" : "2020-10-09T10:14:32Z",
      "diff_hunk" : "@@ -247,6 +249,25 @@ void BCLog::Logger::LogPrintStr(const std::string& str)\n \n     str_prefixed = LogTimestampStr(str_prefixed);\n \n+    // Rate limit logging to disk to avoid disk filling attacks.\n+    bool skip_writing_to_disk_due_to_rate_limiting{false};\n+    if (!skip_disk_usage_rate_limiting) {\n+        const std::chrono::seconds now = GetTime<std::chrono::seconds>();\n+        if ((now - m_last_reset_of_bytes_logged_per_source_location) > std::chrono::hours{1}) {\n+            m_bytes_logged_per_source_location.clear();\n+            m_last_reset_of_bytes_logged_per_source_location = now;\n+        }\n+        m_bytes_logged_per_source_location[source_location] += str_prefixed.size();\n+        if (m_bytes_logged_per_source_location[source_location] > HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION) {\n+            const bool print_quota_state_change_message = (m_bytes_logged_per_source_location[source_location] - str_prefixed.size()) <= HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION;\n+            if (print_quota_state_change_message) {\n+                str_prefixed = LogTimestampStr(strprintf(\"Excessive logging detected from %s:%d (%s): >%d MiB logged during the last hour. Suppressing logging to disk from this source location for up to one hour. Console logging unaffected. Last log entry: %s\", source_location.first, source_location.second, logging_function, HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION / (1024 * 1024), str_prefixed));\n+            } else {\n+                skip_writing_to_disk_due_to_rate_limiting = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r502329018",
      "id" : 502329018,
      "line" : 266,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMyOTAxOA==",
      "original_commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "original_line" : 266,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 29,
      "pull_request_review_id" : 505540213,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-09T10:22:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/502329018",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Conceptually, I am not sure if it is good to fight the symptoms. I'd prefer if unconditional logs were only used for the init/shutdown sequence and local system errors, such as data corruption. Anything else the average user probably doesn't care about, and if they did, they could enable the corresponding debug category and provide enough disk space for the debug log file.",
      "created_at" : "2020-10-13T11:48:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#issuecomment-707685569",
      "id" : 707685569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19995",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwNzY4NTU2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-13T11:48:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/707685569",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke \r\n\r\n> Conceptually, I am not sure if it is good to fight the symptoms.\r\n\r\nI fail to see how introducing a mitigation would be to \"fight the symptoms\".\r\n\r\nThe reason we use ASLR for example isn't that we've given up on the ambition to write non-vulnerable code :)\r\n\r\nThe reason we use mitigations is to make exploitation harder in case we fail to write non-vulnerable free code, and thus hopefully turn a vulnerability into a normal bug.\r\n\r\nHave you looked at the implementation in this PR? :)\r\n\r\nThe mitigation logic would only kick in in under extreme circumstances meaning that the only observable difference from a user perspective is that his/her node would be exploitable to disk fill attacks without the mitigation in place, whereas he/she would be safe with it.\r\n\r\nNote that this is not a theoretical issue: we've had exploitable disk filling vulnerabilities in the past which this mitigation would have successfully turned into just another non-exploitable non-security bug.\r\n\r\n> I'd prefer if unconditional logs were only used for the init/shutdown sequence and local system errors, such as data corruption. Anything else the average user probably doesn't care about, and if they did, they could enable the corresponding debug category and provide enough disk space for the debug log file.\r\n\r\nI agree that we should log more conservatively and ideally leave no room for disk filling attacks, but that doesn't preclude _also_ protecting our users in case we fail to do so :)",
      "created_at" : "2020-10-13T13:06:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#issuecomment-707725169",
      "id" : 707725169,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19995",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwNzcyNTE2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-13T13:10:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/707725169",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r503936154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/503936154"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's a good idea. I'll implement!",
      "commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "created_at" : "2020-10-13T13:09:28Z",
      "diff_hunk" : "@@ -247,6 +249,25 @@ void BCLog::Logger::LogPrintStr(const std::string& str)\n \n     str_prefixed = LogTimestampStr(str_prefixed);\n \n+    // Rate limit logging to disk to avoid disk filling attacks.\n+    bool skip_writing_to_disk_due_to_rate_limiting{false};\n+    if (!skip_disk_usage_rate_limiting) {\n+        const std::chrono::seconds now = GetTime<std::chrono::seconds>();\n+        if ((now - m_last_reset_of_bytes_logged_per_source_location) > std::chrono::hours{1}) {\n+            m_bytes_logged_per_source_location.clear();\n+            m_last_reset_of_bytes_logged_per_source_location = now;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r503936154",
      "id" : 503936154,
      "in_reply_to_id" : 502327758,
      "line" : 258,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkzNjE1NA==",
      "original_commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "original_line" : 258,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 21,
      "pull_request_review_id" : 507414302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-13T13:09:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/503936154",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r503936262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/503936262"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Makes sense. I'll implement.",
      "commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "created_at" : "2020-10-13T13:09:38Z",
      "diff_hunk" : "@@ -247,6 +249,25 @@ void BCLog::Logger::LogPrintStr(const std::string& str)\n \n     str_prefixed = LogTimestampStr(str_prefixed);\n \n+    // Rate limit logging to disk to avoid disk filling attacks.\n+    bool skip_writing_to_disk_due_to_rate_limiting{false};\n+    if (!skip_disk_usage_rate_limiting) {\n+        const std::chrono::seconds now = GetTime<std::chrono::seconds>();\n+        if ((now - m_last_reset_of_bytes_logged_per_source_location) > std::chrono::hours{1}) {\n+            m_bytes_logged_per_source_location.clear();\n+            m_last_reset_of_bytes_logged_per_source_location = now;\n+        }\n+        m_bytes_logged_per_source_location[source_location] += str_prefixed.size();\n+        if (m_bytes_logged_per_source_location[source_location] > HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION) {\n+            const bool print_quota_state_change_message = (m_bytes_logged_per_source_location[source_location] - str_prefixed.size()) <= HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION;\n+            if (print_quota_state_change_message) {\n+                str_prefixed = LogTimestampStr(strprintf(\"Excessive logging detected from %s:%d (%s): >%d MiB logged during the last hour. Suppressing logging to disk from this source location for up to one hour. Console logging unaffected. Last log entry: %s\", source_location.first, source_location.second, logging_function, HOURLY_LOG_QUOTA_IN_BYTES_PER_SOURCE_LOCATION / (1024 * 1024), str_prefixed));\n+            } else {\n+                skip_writing_to_disk_due_to_rate_limiting = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#discussion_r503936262",
      "id" : 503936262,
      "in_reply_to_id" : 502329018,
      "line" : 266,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkzNjI2Mg==",
      "original_commit_id" : "a86ab571106884e9f6188c4d1f45e4e810b66a6e",
      "original_line" : 266,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 29,
      "pull_request_review_id" : 507414453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19995",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-13T13:09:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/503936262",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Can we get a way to disable this via config file?",
      "created_at" : "2020-10-24T17:23:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#issuecomment-716020627",
      "id" : 716020627,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19995",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcxNjAyMDYyNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-24T17:23:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716020627",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Could a maintainer mark this PR as \"Up for grabs\"? I'm afraid I won't have time to incorporate the suggested changes any time soon.\r\n\r\nFWIW I still think this mitigation is very much worth doing: the \"up for grabs\" state is purely due to lack of time on my part.  I'd be glad to review any work being done to reduce the risk of disk fill attacks.\r\n",
      "created_at" : "2020-12-27T22:18:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#issuecomment-751522514",
      "id" : 751522514,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19995",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1MTUyMjUxNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-27T22:18:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/751522514",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Picked up in #21603.",
      "created_at" : "2021-04-07T06:32:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19995#issuecomment-814642455",
      "id" : 814642455,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19995",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgxNDY0MjQ1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-04-07T06:32:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/814642455",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
