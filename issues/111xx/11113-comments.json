[
   {
      "author_association" : "MEMBER",
      "body" : "Hmm, we should also handle the case where they have orphans in their locator similarly (ie parse their locator further back to find the first locator entry that is on our main chain).",
      "created_at" : "2017-08-22T21:44:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-324160641",
      "id" : 324160641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMyNDE2MDY0MQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324160641/reactions"
      },
      "updated_at" : "2017-08-22T21:47:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324160641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@TheBlueMatt This is the case where the locator is empty and only the stopHash is set. It's a special case request for a particular header by hash.",
      "created_at" : "2017-08-22T22:03:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-324164657",
      "id" : 324164657,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMyNDE2NDY1Nw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324164657/reactions"
      },
      "updated_at" : "2017-08-22T22:03:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324164657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jimpo yes, sorry, I had since edited my comment to note that we should do something similar for locator-present requests.",
      "created_at" : "2017-08-22T22:13:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-324166578",
      "id" : 324166578,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMyNDE2NjU3OA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324166578/reactions"
      },
      "updated_at" : "2017-08-22T22:13:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324166578",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r134616874"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134616874"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Generally referred to as \"Orphans\" not \"SideBlocks\".",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-08-22T22:24:03Z",
      "diff_hunk" : "@@ -725,6 +725,17 @@ void Misbehaving(NodeId pnode, int howmuch)\n // blockchain -> download logic notification\n //\n \n+// To prevent fingerprinting attacks, only send blocks/headers outside of the\n+// active chain if they are no more than a month older (both in time, and in\n+// best equivalent proof of work) than the best header chain we know about.\n+static bool SideBlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Params& consensusParams)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r134616874",
      "id" : 134616874,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDYxNjg3NA==",
      "original_commit_id" : "4f559f1d884e6999cf2c7b31741664238695752f",
      "original_line" : 731,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 57929673,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134616874/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134616874",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, good catch.  Would be great to have a p2p test case for this too.",
      "created_at" : "2017-08-24T20:49:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-324753419",
      "id" : 324753419,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMyNDc1MzQxOQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324753419/reactions"
      },
      "updated_at" : "2017-08-24T20:49:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324753419",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sdaftuar Added a test with 58bc23d.",
      "created_at" : "2017-08-26T00:26:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-325063036",
      "id" : 325063036,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMyNTA2MzAzNg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325063036/reactions"
      },
      "updated_at" : "2017-08-26T00:26:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325063036",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK, and thanks for writing the test!  I just looked at the travis failure, and it appears to be a subtle merge conflict because the semantics of `wait_until` was just changed in master, see #11068.",
      "created_at" : "2017-08-26T02:07:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-325073512",
      "id" : 325073512,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMyNTA3MzUxMg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325073512/reactions"
      },
      "updated_at" : "2017-08-26T02:07:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325073512",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK fed7483751cc94a7ce27fc6057a2080af8178223. Only had a casual look at the tests.",
      "created_at" : "2017-08-27T19:30:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-325219111",
      "id" : 325219111,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMyNTIxOTExMQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325219111/reactions"
      },
      "updated_at" : "2017-08-27T19:30:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/325219111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 3d61d72",
      "created_at" : "2017-08-30T19:10:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-326089822",
      "id" : 326089822,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMyNjA4OTgyMg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326089822/reactions"
      },
      "updated_at" : "2017-08-30T19:10:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326089822",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r136873279"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136873279"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Constants should be caps with snake case",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-04T22:13:42Z",
      "diff_hunk" : "@@ -725,6 +725,17 @@ void Misbehaving(NodeId pnode, int howmuch)\n // blockchain -> download logic notification\n //\n \n+// To prevent fingerprinting attacks, only send blocks/headers outside of the\n+// active chain if they are no more than a month older (both in time, and in\n+// best equivalent proof of work) than the best header chain we know about.\n+static bool OrphanBlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Params& consensusParams)\n+{\n+    static const int nOneMonth = 30 * 24 * 60 * 60;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r136873279",
      "id" : 136873279,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjg3MzI3OQ==",
      "original_commit_id" : "3d61d728d114b26eb2b49292f0da32ce4c90b3c3",
      "original_line" : 733,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 60471109,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136873279/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136873279",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r136873326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136873326"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "snake_case argument names",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-04T22:15:00Z",
      "diff_hunk" : "@@ -725,6 +725,17 @@ void Misbehaving(NodeId pnode, int howmuch)\n // blockchain -> download logic notification\n //\n \n+// To prevent fingerprinting attacks, only send blocks/headers outside of the\n+// active chain if they are no more than a month older (both in time, and in\n+// best equivalent proof of work) than the best header chain we know about.\n+static bool OrphanBlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Params& consensusParams)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r136873326",
      "id" : 136873326,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjg3MzMyNg==",
      "original_commit_id" : "3d61d728d114b26eb2b49292f0da32ce4c90b3c3",
      "original_line" : 720,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 60471109,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136873326/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136873326",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r137432772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137432772"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`consensusParams` is camelCase everywhere else in the file, so I think it's better to leave as is. Feel free to replace everywhere in a separate PR.",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-07T02:09:24Z",
      "diff_hunk" : "@@ -725,6 +725,17 @@ void Misbehaving(NodeId pnode, int howmuch)\n // blockchain -> download logic notification\n //\n \n+// To prevent fingerprinting attacks, only send blocks/headers outside of the\n+// active chain if they are no more than a month older (both in time, and in\n+// best equivalent proof of work) than the best header chain we know about.\n+static bool OrphanBlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Params& consensusParams)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r137432772",
      "id" : 137432772,
      "in_reply_to_id" : 136873326,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzQzMjc3Mg==",
      "original_commit_id" : "3d61d728d114b26eb2b49292f0da32ce4c90b3c3",
      "original_line" : 720,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 61098230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137432772/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137432772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK.\r\n\r\nPerhaps a small test nit, if I'm not misreading the test, I think the test would pass if it started failing for all really old headers even if they're on the active chain.  We should have a check that that is still successful.   We should also include a note in the tests that we don't test both criteria (both time and PET) as those tests would be good to add later.\r\n\r\nobNitpickSummoning: @sipa you're okay with calling this function 'orphanblock' rather than something like 'staleblock'? :)\r\n\r\n",
      "created_at" : "2017-09-08T18:35:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-328181819",
      "id" : 328181819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMyODE4MTgxOQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/328181819/reactions"
      },
      "updated_at" : "2017-09-08T18:35:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/328181819",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@gmaxwell Thanks, added another test for that case. What do you mean by PET?\r\n\r\nAlso, yeah, I don't like the term orphan block (because it's ambiguous). Is stale block the preferred term now? I originally named it \"side block\" but I hear no one else calls it that.\r\n\r\nEDIT: Nevermind, PET = Proof (of work) Equivalent Time. Will add the comment.",
      "created_at" : "2017-09-08T20:21:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-328204347",
      "id" : 328204347,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMyODIwNDM0Nw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/328204347/reactions"
      },
      "updated_at" : "2017-09-08T20:30:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/328204347",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r137891976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137891976"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Style-only PRs are highly discouraged, developer guide says to use the style in all new code regardless of style around it, because eventually it will all be replaced",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-08T21:19:00Z",
      "diff_hunk" : "@@ -725,6 +725,17 @@ void Misbehaving(NodeId pnode, int howmuch)\n // blockchain -> download logic notification\n //\n \n+// To prevent fingerprinting attacks, only send blocks/headers outside of the\n+// active chain if they are no more than a month older (both in time, and in\n+// best equivalent proof of work) than the best header chain we know about.\n+static bool OrphanBlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Params& consensusParams)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r137891976",
      "id" : 137891976,
      "in_reply_to_id" : 136873326,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzg5MTk3Ng==",
      "original_commit_id" : "3d61d728d114b26eb2b49292f0da32ce4c90b3c3",
      "original_line" : 720,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 61625488,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137891976/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137891976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/meshcollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/meshcollider/followers",
         "following_url" : "https://api.github.com/users/meshcollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/meshcollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/meshcollider",
         "id" : 3211283,
         "login" : "meshcollider",
         "node_id" : "MDQ6VXNlcjMyMTEyODM=",
         "organizations_url" : "https://api.github.com/users/meshcollider/orgs",
         "received_events_url" : "https://api.github.com/users/meshcollider/received_events",
         "repos_url" : "https://api.github.com/users/meshcollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/meshcollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/meshcollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139555336"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139555336"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Specify unit.",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-18T22:19:48Z",
      "diff_hunk" : "@@ -61,6 +61,14 @@ static std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact GUAR\n \n static const uint64_t RANDOMIZER_ID_ADDRESS_RELAY = 0x3cac0035b5866b90ULL; // SHA256(\"main address relay\")[0:8]\n \n+/// Age after which an orphan block will no longer be served if requested as\n+/// protection against fingerprinting.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139555336",
      "id" : 139555336,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTU1NTMzNg==",
      "original_commit_id" : "d07a788f256427f861b2bac5cf2784a5ed26e654",
      "original_line" : 65,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 63504715,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139555336/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139555336",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139555363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139555363"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Specify unit.",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-18T22:19:56Z",
      "diff_hunk" : "@@ -61,6 +61,14 @@ static std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact GUAR\n \n static const uint64_t RANDOMIZER_ID_ADDRESS_RELAY = 0x3cac0035b5866b90ULL; // SHA256(\"main address relay\")[0:8]\n \n+/// Age after which an orphan block will no longer be served if requested as\n+/// protection against fingerprinting.\n+static const int ORPHAN_RELAY_AGE_LIMIT = 30 * 24 * 60 * 60;\n+\n+/// Age after which a block is considered historical for purposes of rate\n+/// limiting block relay. Set to one week.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139555363",
      "id" : 139555363,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTU1NTM2Mw==",
      "original_commit_id" : "d07a788f256427f861b2bac5cf2784a5ed26e654",
      "original_line" : 69,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 63504715,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139555363/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139555363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139555500"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139555500"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just `params`?",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-18T22:20:44Z",
      "diff_hunk" : "@@ -725,6 +725,17 @@ void Misbehaving(NodeId pnode, int howmuch)\n // blockchain -> download logic notification\n //\n \n+// To prevent fingerprinting attacks, only send blocks/headers outside of the\n+// active chain if they are no more than a month older (both in time, and in\n+// best equivalent proof of work) than the best header chain we know about.\n+static bool OrphanBlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Params& consensusParams)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139555500",
      "id" : 139555500,
      "in_reply_to_id" : 136873326,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTU1NTUwMA==",
      "original_commit_id" : "3d61d728d114b26eb2b49292f0da32ce4c90b3c3",
      "original_line" : 720,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 63504715,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139555500/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139555500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139557154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139557154"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just?\r\n```py\r\n    def __init__(self, headers=[]):\r\n        self.headers = headers\r\n```",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-18T22:30:46Z",
      "diff_hunk" : "@@ -1310,8 +1310,8 @@ def __repr__(self):\n class msg_headers(object):\n     command = b\"headers\"\n \n-    def __init__(self):\n-        self.headers = []\n+    def __init__(self, headers=None):\n+        self.headers = headers if headers is not None else []",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139557154",
      "id" : 139557154,
      "line" : 1314,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTU1NzE1NA==",
      "original_commit_id" : "d07a788f256427f861b2bac5cf2784a5ed26e654",
      "original_line" : 1314,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 7,
      "pull_request_review_id" : 63504715,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139557154/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139557154",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139557256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139557256"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit, I also prefer periods, but at least be consistent, remove?",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-18T22:31:26Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various fingerprinting protections.\n+\n+If an orphan block more than a month old or its header are requested by a peer,\n+the node should pretend that it does not have it to avoid fingerprinting.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.blocktools import (create_block, create_coinbase)\n+from test_framework.mininode import (\n+    CInv,\n+    NetworkThread,\n+    NodeConn,\n+    NodeConnCB,\n+    msg_headers,\n+    msg_block,\n+    msg_getdata,\n+    msg_getheaders,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    p2p_port,\n+)\n+\n+class P2PFingerprintTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    # Build a chain of blocks on top of given one\n+    def build_chain(self, nblocks, prev_hash, prev_height, prev_median_time):\n+        blocks = []\n+        for _ in range(nblocks):\n+            coinbase = create_coinbase(prev_height + 1)\n+            block_time = prev_median_time + 1\n+            block = create_block(int(prev_hash, 16), coinbase, block_time)\n+            block.solve()\n+\n+            blocks.append(block)\n+            prev_hash = block.hash\n+            prev_height += 1\n+            prev_median_time = block_time\n+        return blocks\n+\n+    # Send a getdata request for a given block hash\n+    def send_block_request(self, block_hash, node):\n+        msg = msg_getdata()\n+        msg.inv.append(CInv(2, block_hash))  # 2 == \"Block\"\n+        node.send_message(msg)\n+\n+    # Send a getheaders request for a given single block hash\n+    def send_header_request(self, block_hash, node):\n+        msg = msg_getheaders()\n+        msg.hashstop = block_hash\n+        node.send_message(msg)\n+\n+    # Check whether last block received from node has a given hash\n+    def last_block_equals(self, expected_hash, node):\n+        block_msg = node.last_message.get(\"block\")\n+        return block_msg and block_msg.block.rehash() == expected_hash\n+\n+    # Check whether last block header received from node has a given hash\n+    def last_header_equals(self, expected_hash, node):\n+        headers_msg = node.last_message.get(\"headers\")\n+        return (headers_msg and\n+                headers_msg.headers and\n+                headers_msg.headers[0].rehash() == expected_hash)\n+\n+    # Checks that orphan blocks timestamped more than a month ago are not served\n+    # by the node while recent orphan blocks and old active chain blocks are.\n+    # This does not currently test that orphan blocks timestamped within the\n+    # last month but that have over a month's worth of work are also withheld.\n+    def run_test(self):\n+        node0 = NodeConnCB()\n+\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+\n+        NetworkThread().start()\n+        node0.wait_for_verack()\n+\n+        # Set node time to 60 days ago\n+        self.nodes[0].setmocktime(int(time.time()) - 60 * 24 * 60 * 60)\n+\n+        # Generating a chain of 10 blocks\n+        block_hashes = self.nodes[0].generate(nblocks=10)\n+\n+        # Create longer chain starting 2 blocks before current tip\n+        height = len(block_hashes) - 2\n+        block_hash = block_hashes[height - 1]\n+        block_time = self.nodes[0].getblockheader(block_hash)[\"mediantime\"] + 1\n+        new_blocks = self.build_chain(5, block_hash, height, block_time)\n+\n+        # Force reorg to a longer chain\n+        node0.send_message(msg_headers(new_blocks))\n+        node0.wait_for_getdata()\n+        for block in new_blocks:\n+            node0.send_and_ping(msg_block(block))\n+\n+        # Check that reorg succeeded\n+        assert_equal(self.nodes[0].getblockcount(), 13)\n+\n+        orphan_hash = int(block_hashes[-1], 16)\n+\n+        # Check that getdata request for orphan block succeeds\n+        self.send_block_request(orphan_hash, node0)\n+        test_function = lambda: self.last_block_equals(orphan_hash, node0)\n+        wait_until(test_function, timeout=3)\n+\n+        # Check that getheader request for orphan block header succeeds\n+        self.send_header_request(orphan_hash, node0)\n+        test_function = lambda: self.last_header_equals(orphan_hash, node0)\n+        wait_until(test_function, timeout=3)\n+\n+        # Longest chain is extended so orphan is much older than chain tip\n+        self.nodes[0].setmocktime(0)\n+        tip = self.nodes[0].generate(nblocks=1)[0]\n+        assert_equal(self.nodes[0].getblockcount(), 14)\n+\n+        # Send getdata & getheaders to refresh last received getheader message\n+        block_hash = int(tip, 16)\n+        self.send_block_request(block_hash, node0)\n+        self.send_header_request(block_hash, node0)\n+        node0.sync_with_ping()\n+\n+        # Request for very old orphan block should now fail\n+        self.send_block_request(orphan_hash, node0)\n+        time.sleep(3)\n+        assert not self.last_block_equals(orphan_hash, node0)\n+\n+        # Request for very old orphan block header should now fail\n+        self.send_header_request(orphan_hash, node0)\n+        time.sleep(3)\n+        assert not self.last_header_equals(orphan_hash, node0)\n+\n+        # Verify we can fetch very old blocks and headers on the active chain.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139557256",
      "id" : 139557256,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTU1NzI1Ng==",
      "original_commit_id" : "d07a788f256427f861b2bac5cf2784a5ed26e654",
      "original_line" : 143,
      "original_position" : 143,
      "original_start_line" : null,
      "path" : "test/functional/p2p-fingerprint.py",
      "position" : null,
      "pull_request_review_id" : 63504715,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139557256/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139557256",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139557464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139557464"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit\r\n```py\r\nfrom time import (sleep, time)\r\n```",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-18T22:32:35Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various fingerprinting protections.\n+\n+If an orphan block more than a month old or its header are requested by a peer,\n+the node should pretend that it does not have it to avoid fingerprinting.\n+\"\"\"\n+\n+import time",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139557464",
      "id" : 139557464,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTU1NzQ2NA==",
      "original_commit_id" : "d07a788f256427f861b2bac5cf2784a5ed26e654",
      "original_line" : 11,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/p2p-fingerprint.py",
      "position" : null,
      "pull_request_review_id" : 63504715,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139557464/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139557464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139558059"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139558059"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Missing `AssertLockHeld` because of `pindexBestHeader`?",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-18T22:36:42Z",
      "diff_hunk" : "@@ -706,6 +714,16 @@ void Misbehaving(NodeId pnode, int howmuch)\n // blockchain -> download logic notification\n //\n \n+// To prevent fingerprinting attacks, only send blocks/headers outside of the\n+// active chain if they are no more than a month older (both in time, and in\n+// best equivalent proof of work) than the best header chain we know about.\n+static bool OrphanBlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Params& consensusParams)\n+{\n+    return (pindexBestHeader != nullptr) &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139558059",
      "id" : 139558059,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTU1ODA1OQ==",
      "original_commit_id" : "d07a788f256427f861b2bac5cf2784a5ed26e654",
      "original_line" : 723,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 63504715,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139558059/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139558059",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139762647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139762647"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@promag The variable is referred to as `consensusParams` everywhere else, probably to differentiate from an instance of `CChainParams`.",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-19T17:32:43Z",
      "diff_hunk" : "@@ -725,6 +725,17 @@ void Misbehaving(NodeId pnode, int howmuch)\n // blockchain -> download logic notification\n //\n \n+// To prevent fingerprinting attacks, only send blocks/headers outside of the\n+// active chain if they are no more than a month older (both in time, and in\n+// best equivalent proof of work) than the best header chain we know about.\n+static bool OrphanBlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Params& consensusParams)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139762647",
      "id" : 139762647,
      "in_reply_to_id" : 136873326,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTc2MjY0Nw==",
      "original_commit_id" : "3d61d728d114b26eb2b49292f0da32ce4c90b3c3",
      "original_line" : 720,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 63741066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139762647/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139762647",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139763178"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139763178"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That is not safe in Python: http://docs.python-guide.org/en/latest/writing/gotchas/#mutable-default-arguments.",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-19T17:34:35Z",
      "diff_hunk" : "@@ -1310,8 +1310,8 @@ def __repr__(self):\n class msg_headers(object):\n     command = b\"headers\"\n \n-    def __init__(self):\n-        self.headers = []\n+    def __init__(self, headers=None):\n+        self.headers = headers if headers is not None else []",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139763178",
      "id" : 139763178,
      "in_reply_to_id" : 139557154,
      "line" : 1314,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTc2MzE3OA==",
      "original_commit_id" : "d07a788f256427f861b2bac5cf2784a5ed26e654",
      "original_line" : 1314,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 7,
      "pull_request_review_id" : 63741641,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139763178/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139763178",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139764713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139764713"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If other people feel strongly, I'm willing to change it, but I prefer to [only import packages and modules](https://google.github.io/styleguide/pyguide.html?showone=Imports#Imports), not values. This makes it a bit more clear where the function is coming from.",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-19T17:40:21Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various fingerprinting protections.\n+\n+If an orphan block more than a month old or its header are requested by a peer,\n+the node should pretend that it does not have it to avoid fingerprinting.\n+\"\"\"\n+\n+import time",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139764713",
      "id" : 139764713,
      "in_reply_to_id" : 139557464,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTc2NDcxMw==",
      "original_commit_id" : "d07a788f256427f861b2bac5cf2784a5ed26e654",
      "original_line" : 11,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/p2p-fingerprint.py",
      "position" : null,
      "pull_request_review_id" : 63743330,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139764713/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139764713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139780508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139780508"
         }
      },
      "author_association" : "MEMBER",
      "body" : "+1",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-19T18:40:46Z",
      "diff_hunk" : "@@ -706,6 +714,16 @@ void Misbehaving(NodeId pnode, int howmuch)\n // blockchain -> download logic notification\n //\n \n+// To prevent fingerprinting attacks, only send blocks/headers outside of the\n+// active chain if they are no more than a month older (both in time, and in\n+// best equivalent proof of work) than the best header chain we know about.\n+static bool OrphanBlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Params& consensusParams)\n+{\n+    return (pindexBestHeader != nullptr) &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r139780508",
      "id" : 139780508,
      "in_reply_to_id" : 139558059,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTc4MDUwOA==",
      "original_commit_id" : "d07a788f256427f861b2bac5cf2784a5ed26e654",
      "original_line" : 723,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 63761496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139780508/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139780508",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK, though I would prefer to see the AssertLockHeld added as @promag suggested.",
      "created_at" : "2017-09-19T18:41:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-330632976",
      "id" : 330632976,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMzMDYzMjk3Ng==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330632976/reactions"
      },
      "updated_at" : "2017-09-19T18:41:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330632976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@theuni Added.",
      "created_at" : "2017-09-19T18:48:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-330634971",
      "id" : 330634971,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMzMDYzNDk3MQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330634971/reactions"
      },
      "updated_at" : "2017-09-19T18:48:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330634971",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK non-test parts of 8e57e82942c6ccb6ac905bd44d0d476bcf1651ec",
      "created_at" : "2017-09-21T01:41:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-331026865",
      "id" : 331026865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMzMTAyNjg2NQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331026865/reactions"
      },
      "updated_at" : "2017-09-21T01:41:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331026865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r140890209"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140890209"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh! nice, ty!",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-25T20:34:54Z",
      "diff_hunk" : "@@ -1310,8 +1310,8 @@ def __repr__(self):\n class msg_headers(object):\n     command = b\"headers\"\n \n-    def __init__(self):\n-        self.headers = []\n+    def __init__(self, headers=None):\n+        self.headers = headers if headers is not None else []",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r140890209",
      "id" : 140890209,
      "in_reply_to_id" : 139557154,
      "line" : 1314,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDg5MDIwOQ==",
      "original_commit_id" : "d07a788f256427f861b2bac5cf2784a5ed26e654",
      "original_line" : 1314,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : 7,
      "pull_request_review_id" : 65026987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140890209/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140890209",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK modulus periods in commit messages and PR title ð.",
      "created_at" : "2017-09-25T20:37:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-332004832",
      "id" : 332004832,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMzMjAwNDgzMg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332004832/reactions"
      },
      "updated_at" : "2017-09-25T20:37:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332004832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@promag: can you retest/re-ack if the requested changes are ok?",
      "created_at" : "2017-09-27T17:53:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-332603773",
      "id" : 332603773,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMzMjYwMzc3Mw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332603773/reactions"
      },
      "updated_at" : "2017-09-27T17:53:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332603773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141488406"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141488406"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Inline lambdas in `wait_until`? ",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-27T22:52:36Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various fingerprinting protections.\n+\n+If an orphan block more than a month old or its header are requested by a peer,\n+the node should pretend that it does not have it to avoid fingerprinting.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.blocktools import (create_block, create_coinbase)\n+from test_framework.mininode import (\n+    CInv,\n+    NetworkThread,\n+    NodeConn,\n+    NodeConnCB,\n+    msg_headers,\n+    msg_block,\n+    msg_getdata,\n+    msg_getheaders,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    p2p_port,\n+)\n+\n+class P2PFingerprintTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    # Build a chain of blocks on top of given one\n+    def build_chain(self, nblocks, prev_hash, prev_height, prev_median_time):\n+        blocks = []\n+        for _ in range(nblocks):\n+            coinbase = create_coinbase(prev_height + 1)\n+            block_time = prev_median_time + 1\n+            block = create_block(int(prev_hash, 16), coinbase, block_time)\n+            block.solve()\n+\n+            blocks.append(block)\n+            prev_hash = block.hash\n+            prev_height += 1\n+            prev_median_time = block_time\n+        return blocks\n+\n+    # Send a getdata request for a given block hash\n+    def send_block_request(self, block_hash, node):\n+        msg = msg_getdata()\n+        msg.inv.append(CInv(2, block_hash))  # 2 == \"Block\"\n+        node.send_message(msg)\n+\n+    # Send a getheaders request for a given single block hash\n+    def send_header_request(self, block_hash, node):\n+        msg = msg_getheaders()\n+        msg.hashstop = block_hash\n+        node.send_message(msg)\n+\n+    # Check whether last block received from node has a given hash\n+    def last_block_equals(self, expected_hash, node):\n+        block_msg = node.last_message.get(\"block\")\n+        return block_msg and block_msg.block.rehash() == expected_hash\n+\n+    # Check whether last block header received from node has a given hash\n+    def last_header_equals(self, expected_hash, node):\n+        headers_msg = node.last_message.get(\"headers\")\n+        return (headers_msg and\n+                headers_msg.headers and\n+                headers_msg.headers[0].rehash() == expected_hash)\n+\n+    # Checks that orphan blocks timestamped more than a month ago are not served\n+    # by the node while recent orphan blocks and old active chain blocks are.\n+    # This does not currently test that orphan blocks timestamped within the\n+    # last month but that have over a month's worth of work are also withheld.\n+    def run_test(self):\n+        node0 = NodeConnCB()\n+\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+\n+        NetworkThread().start()\n+        node0.wait_for_verack()\n+\n+        # Set node time to 60 days ago\n+        self.nodes[0].setmocktime(int(time.time()) - 60 * 24 * 60 * 60)\n+\n+        # Generating a chain of 10 blocks\n+        block_hashes = self.nodes[0].generate(nblocks=10)\n+\n+        # Create longer chain starting 2 blocks before current tip\n+        height = len(block_hashes) - 2\n+        block_hash = block_hashes[height - 1]\n+        block_time = self.nodes[0].getblockheader(block_hash)[\"mediantime\"] + 1\n+        new_blocks = self.build_chain(5, block_hash, height, block_time)\n+\n+        # Force reorg to a longer chain\n+        node0.send_message(msg_headers(new_blocks))\n+        node0.wait_for_getdata()\n+        for block in new_blocks:\n+            node0.send_and_ping(msg_block(block))\n+\n+        # Check that reorg succeeded\n+        assert_equal(self.nodes[0].getblockcount(), 13)\n+\n+        orphan_hash = int(block_hashes[-1], 16)\n+\n+        # Check that getdata request for orphan block succeeds\n+        self.send_block_request(orphan_hash, node0)\n+        test_function = lambda: self.last_block_equals(orphan_hash, node0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141488406",
      "id" : 141488406,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTQ4ODQwNg==",
      "original_commit_id" : "b74b0b788fb86bfef698965e7c99d1c291de70d7",
      "original_line" : 114,
      "original_position" : 114,
      "original_start_line" : null,
      "path" : "test/functional/p2p-fingerprint.py",
      "position" : null,
      "pull_request_review_id" : 65710767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141488406/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141488406",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141489518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141489518"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also use `wait_until` instead of fixed sleep?",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-27T23:00:12Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various fingerprinting protections.\n+\n+If an orphan block more than a month old or its header are requested by a peer,\n+the node should pretend that it does not have it to avoid fingerprinting.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.blocktools import (create_block, create_coinbase)\n+from test_framework.mininode import (\n+    CInv,\n+    NetworkThread,\n+    NodeConn,\n+    NodeConnCB,\n+    msg_headers,\n+    msg_block,\n+    msg_getdata,\n+    msg_getheaders,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    p2p_port,\n+)\n+\n+class P2PFingerprintTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    # Build a chain of blocks on top of given one\n+    def build_chain(self, nblocks, prev_hash, prev_height, prev_median_time):\n+        blocks = []\n+        for _ in range(nblocks):\n+            coinbase = create_coinbase(prev_height + 1)\n+            block_time = prev_median_time + 1\n+            block = create_block(int(prev_hash, 16), coinbase, block_time)\n+            block.solve()\n+\n+            blocks.append(block)\n+            prev_hash = block.hash\n+            prev_height += 1\n+            prev_median_time = block_time\n+        return blocks\n+\n+    # Send a getdata request for a given block hash\n+    def send_block_request(self, block_hash, node):\n+        msg = msg_getdata()\n+        msg.inv.append(CInv(2, block_hash))  # 2 == \"Block\"\n+        node.send_message(msg)\n+\n+    # Send a getheaders request for a given single block hash\n+    def send_header_request(self, block_hash, node):\n+        msg = msg_getheaders()\n+        msg.hashstop = block_hash\n+        node.send_message(msg)\n+\n+    # Check whether last block received from node has a given hash\n+    def last_block_equals(self, expected_hash, node):\n+        block_msg = node.last_message.get(\"block\")\n+        return block_msg and block_msg.block.rehash() == expected_hash\n+\n+    # Check whether last block header received from node has a given hash\n+    def last_header_equals(self, expected_hash, node):\n+        headers_msg = node.last_message.get(\"headers\")\n+        return (headers_msg and\n+                headers_msg.headers and\n+                headers_msg.headers[0].rehash() == expected_hash)\n+\n+    # Checks that orphan blocks timestamped more than a month ago are not served\n+    # by the node while recent orphan blocks and old active chain blocks are.\n+    # This does not currently test that orphan blocks timestamped within the\n+    # last month but that have over a month's worth of work are also withheld.\n+    def run_test(self):\n+        node0 = NodeConnCB()\n+\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+\n+        NetworkThread().start()\n+        node0.wait_for_verack()\n+\n+        # Set node time to 60 days ago\n+        self.nodes[0].setmocktime(int(time.time()) - 60 * 24 * 60 * 60)\n+\n+        # Generating a chain of 10 blocks\n+        block_hashes = self.nodes[0].generate(nblocks=10)\n+\n+        # Create longer chain starting 2 blocks before current tip\n+        height = len(block_hashes) - 2\n+        block_hash = block_hashes[height - 1]\n+        block_time = self.nodes[0].getblockheader(block_hash)[\"mediantime\"] + 1\n+        new_blocks = self.build_chain(5, block_hash, height, block_time)\n+\n+        # Force reorg to a longer chain\n+        node0.send_message(msg_headers(new_blocks))\n+        node0.wait_for_getdata()\n+        for block in new_blocks:\n+            node0.send_and_ping(msg_block(block))\n+\n+        # Check that reorg succeeded\n+        assert_equal(self.nodes[0].getblockcount(), 13)\n+\n+        orphan_hash = int(block_hashes[-1], 16)\n+\n+        # Check that getdata request for orphan block succeeds\n+        self.send_block_request(orphan_hash, node0)\n+        test_function = lambda: self.last_block_equals(orphan_hash, node0)\n+        wait_until(test_function, timeout=3)\n+\n+        # Check that getheader request for orphan block header succeeds\n+        self.send_header_request(orphan_hash, node0)\n+        test_function = lambda: self.last_header_equals(orphan_hash, node0)\n+        wait_until(test_function, timeout=3)\n+\n+        # Longest chain is extended so orphan is much older than chain tip\n+        self.nodes[0].setmocktime(0)\n+        tip = self.nodes[0].generate(nblocks=1)[0]\n+        assert_equal(self.nodes[0].getblockcount(), 14)\n+\n+        # Send getdata & getheaders to refresh last received getheader message\n+        block_hash = int(tip, 16)\n+        self.send_block_request(block_hash, node0)\n+        self.send_header_request(block_hash, node0)\n+        node0.sync_with_ping()\n+\n+        # Request for very old orphan block should now fail\n+        self.send_block_request(orphan_hash, node0)\n+        time.sleep(3)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141489518",
      "id" : 141489518,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTQ4OTUxOA==",
      "original_commit_id" : "b74b0b788fb86bfef698965e7c99d1c291de70d7",
      "original_line" : 135,
      "original_position" : 135,
      "original_start_line" : null,
      "path" : "test/functional/p2p-fingerprint.py",
      "position" : null,
      "pull_request_review_id" : 65710767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141489518/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141489518",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141490128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141490128"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same as above.",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-27T23:04:54Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various fingerprinting protections.\n+\n+If an orphan block more than a month old or its header are requested by a peer,\n+the node should pretend that it does not have it to avoid fingerprinting.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.blocktools import (create_block, create_coinbase)\n+from test_framework.mininode import (\n+    CInv,\n+    NetworkThread,\n+    NodeConn,\n+    NodeConnCB,\n+    msg_headers,\n+    msg_block,\n+    msg_getdata,\n+    msg_getheaders,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    p2p_port,\n+)\n+\n+class P2PFingerprintTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    # Build a chain of blocks on top of given one\n+    def build_chain(self, nblocks, prev_hash, prev_height, prev_median_time):\n+        blocks = []\n+        for _ in range(nblocks):\n+            coinbase = create_coinbase(prev_height + 1)\n+            block_time = prev_median_time + 1\n+            block = create_block(int(prev_hash, 16), coinbase, block_time)\n+            block.solve()\n+\n+            blocks.append(block)\n+            prev_hash = block.hash\n+            prev_height += 1\n+            prev_median_time = block_time\n+        return blocks\n+\n+    # Send a getdata request for a given block hash\n+    def send_block_request(self, block_hash, node):\n+        msg = msg_getdata()\n+        msg.inv.append(CInv(2, block_hash))  # 2 == \"Block\"\n+        node.send_message(msg)\n+\n+    # Send a getheaders request for a given single block hash\n+    def send_header_request(self, block_hash, node):\n+        msg = msg_getheaders()\n+        msg.hashstop = block_hash\n+        node.send_message(msg)\n+\n+    # Check whether last block received from node has a given hash\n+    def last_block_equals(self, expected_hash, node):\n+        block_msg = node.last_message.get(\"block\")\n+        return block_msg and block_msg.block.rehash() == expected_hash\n+\n+    # Check whether last block header received from node has a given hash\n+    def last_header_equals(self, expected_hash, node):\n+        headers_msg = node.last_message.get(\"headers\")\n+        return (headers_msg and\n+                headers_msg.headers and\n+                headers_msg.headers[0].rehash() == expected_hash)\n+\n+    # Checks that orphan blocks timestamped more than a month ago are not served\n+    # by the node while recent orphan blocks and old active chain blocks are.\n+    # This does not currently test that orphan blocks timestamped within the\n+    # last month but that have over a month's worth of work are also withheld.\n+    def run_test(self):\n+        node0 = NodeConnCB()\n+\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+\n+        NetworkThread().start()\n+        node0.wait_for_verack()\n+\n+        # Set node time to 60 days ago\n+        self.nodes[0].setmocktime(int(time.time()) - 60 * 24 * 60 * 60)\n+\n+        # Generating a chain of 10 blocks\n+        block_hashes = self.nodes[0].generate(nblocks=10)\n+\n+        # Create longer chain starting 2 blocks before current tip\n+        height = len(block_hashes) - 2\n+        block_hash = block_hashes[height - 1]\n+        block_time = self.nodes[0].getblockheader(block_hash)[\"mediantime\"] + 1\n+        new_blocks = self.build_chain(5, block_hash, height, block_time)\n+\n+        # Force reorg to a longer chain\n+        node0.send_message(msg_headers(new_blocks))\n+        node0.wait_for_getdata()\n+        for block in new_blocks:\n+            node0.send_and_ping(msg_block(block))\n+\n+        # Check that reorg succeeded\n+        assert_equal(self.nodes[0].getblockcount(), 13)\n+\n+        orphan_hash = int(block_hashes[-1], 16)\n+\n+        # Check that getdata request for orphan block succeeds\n+        self.send_block_request(orphan_hash, node0)\n+        test_function = lambda: self.last_block_equals(orphan_hash, node0)\n+        wait_until(test_function, timeout=3)\n+\n+        # Check that getheader request for orphan block header succeeds\n+        self.send_header_request(orphan_hash, node0)\n+        test_function = lambda: self.last_header_equals(orphan_hash, node0)\n+        wait_until(test_function, timeout=3)\n+\n+        # Longest chain is extended so orphan is much older than chain tip\n+        self.nodes[0].setmocktime(0)\n+        tip = self.nodes[0].generate(nblocks=1)[0]\n+        assert_equal(self.nodes[0].getblockcount(), 14)\n+\n+        # Send getdata & getheaders to refresh last received getheader message\n+        block_hash = int(tip, 16)\n+        self.send_block_request(block_hash, node0)\n+        self.send_header_request(block_hash, node0)\n+        node0.sync_with_ping()\n+\n+        # Request for very old orphan block should now fail\n+        self.send_block_request(orphan_hash, node0)\n+        time.sleep(3)\n+        assert not self.last_block_equals(orphan_hash, node0)\n+\n+        # Request for very old orphan block header should now fail\n+        self.send_header_request(orphan_hash, node0)\n+        time.sleep(3)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141490128",
      "id" : 141490128,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTQ5MDEyOA==",
      "original_commit_id" : "b74b0b788fb86bfef698965e7c99d1c291de70d7",
      "original_line" : 140,
      "original_position" : 140,
      "original_start_line" : null,
      "path" : "test/functional/p2p-fingerprint.py",
      "position" : null,
      "pull_request_review_id" : 65710767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141490128/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141490128",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141490421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141490421"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit, remove above `height` and:\r\n```python\r\nblock_hash = block_hashes[-3]\r\n```",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-27T23:06:59Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various fingerprinting protections.\n+\n+If an orphan block more than a month old or its header are requested by a peer,\n+the node should pretend that it does not have it to avoid fingerprinting.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.blocktools import (create_block, create_coinbase)\n+from test_framework.mininode import (\n+    CInv,\n+    NetworkThread,\n+    NodeConn,\n+    NodeConnCB,\n+    msg_headers,\n+    msg_block,\n+    msg_getdata,\n+    msg_getheaders,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    p2p_port,\n+)\n+\n+class P2PFingerprintTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    # Build a chain of blocks on top of given one\n+    def build_chain(self, nblocks, prev_hash, prev_height, prev_median_time):\n+        blocks = []\n+        for _ in range(nblocks):\n+            coinbase = create_coinbase(prev_height + 1)\n+            block_time = prev_median_time + 1\n+            block = create_block(int(prev_hash, 16), coinbase, block_time)\n+            block.solve()\n+\n+            blocks.append(block)\n+            prev_hash = block.hash\n+            prev_height += 1\n+            prev_median_time = block_time\n+        return blocks\n+\n+    # Send a getdata request for a given block hash\n+    def send_block_request(self, block_hash, node):\n+        msg = msg_getdata()\n+        msg.inv.append(CInv(2, block_hash))  # 2 == \"Block\"\n+        node.send_message(msg)\n+\n+    # Send a getheaders request for a given single block hash\n+    def send_header_request(self, block_hash, node):\n+        msg = msg_getheaders()\n+        msg.hashstop = block_hash\n+        node.send_message(msg)\n+\n+    # Check whether last block received from node has a given hash\n+    def last_block_equals(self, expected_hash, node):\n+        block_msg = node.last_message.get(\"block\")\n+        return block_msg and block_msg.block.rehash() == expected_hash\n+\n+    # Check whether last block header received from node has a given hash\n+    def last_header_equals(self, expected_hash, node):\n+        headers_msg = node.last_message.get(\"headers\")\n+        return (headers_msg and\n+                headers_msg.headers and\n+                headers_msg.headers[0].rehash() == expected_hash)\n+\n+    # Checks that orphan blocks timestamped more than a month ago are not served\n+    # by the node while recent orphan blocks and old active chain blocks are.\n+    # This does not currently test that orphan blocks timestamped within the\n+    # last month but that have over a month's worth of work are also withheld.\n+    def run_test(self):\n+        node0 = NodeConnCB()\n+\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+\n+        NetworkThread().start()\n+        node0.wait_for_verack()\n+\n+        # Set node time to 60 days ago\n+        self.nodes[0].setmocktime(int(time.time()) - 60 * 24 * 60 * 60)\n+\n+        # Generating a chain of 10 blocks\n+        block_hashes = self.nodes[0].generate(nblocks=10)\n+\n+        # Create longer chain starting 2 blocks before current tip\n+        height = len(block_hashes) - 2\n+        block_hash = block_hashes[height - 1]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141490421",
      "id" : 141490421,
      "line" : 97,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTQ5MDQyMQ==",
      "original_commit_id" : "b74b0b788fb86bfef698965e7c99d1c291de70d7",
      "original_line" : 97,
      "original_position" : 97,
      "original_start_line" : null,
      "path" : "test/functional/p2p-fingerprint.py",
      "position" : 97,
      "pull_request_review_id" : 65710767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141490421/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141490421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141492533"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141492533"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Determine `prev_height` and `prev_median_time` here and simplify code below.",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-27T23:23:27Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various fingerprinting protections.\n+\n+If an orphan block more than a month old or its header are requested by a peer,\n+the node should pretend that it does not have it to avoid fingerprinting.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.blocktools import (create_block, create_coinbase)\n+from test_framework.mininode import (\n+    CInv,\n+    NetworkThread,\n+    NodeConn,\n+    NodeConnCB,\n+    msg_headers,\n+    msg_block,\n+    msg_getdata,\n+    msg_getheaders,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    p2p_port,\n+)\n+\n+class P2PFingerprintTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    # Build a chain of blocks on top of given one\n+    def build_chain(self, nblocks, prev_hash, prev_height, prev_median_time):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141492533",
      "id" : 141492533,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTQ5MjUzMw==",
      "original_commit_id" : "b74b0b788fb86bfef698965e7c99d1c291de70d7",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p-fingerprint.py",
      "position" : 37,
      "pull_request_review_id" : 65710767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141492533/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141492533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141494036"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141494036"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That doesn't work. We're waiting to make sure a change does not happen.",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-27T23:35:40Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various fingerprinting protections.\n+\n+If an orphan block more than a month old or its header are requested by a peer,\n+the node should pretend that it does not have it to avoid fingerprinting.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.blocktools import (create_block, create_coinbase)\n+from test_framework.mininode import (\n+    CInv,\n+    NetworkThread,\n+    NodeConn,\n+    NodeConnCB,\n+    msg_headers,\n+    msg_block,\n+    msg_getdata,\n+    msg_getheaders,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    p2p_port,\n+)\n+\n+class P2PFingerprintTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    # Build a chain of blocks on top of given one\n+    def build_chain(self, nblocks, prev_hash, prev_height, prev_median_time):\n+        blocks = []\n+        for _ in range(nblocks):\n+            coinbase = create_coinbase(prev_height + 1)\n+            block_time = prev_median_time + 1\n+            block = create_block(int(prev_hash, 16), coinbase, block_time)\n+            block.solve()\n+\n+            blocks.append(block)\n+            prev_hash = block.hash\n+            prev_height += 1\n+            prev_median_time = block_time\n+        return blocks\n+\n+    # Send a getdata request for a given block hash\n+    def send_block_request(self, block_hash, node):\n+        msg = msg_getdata()\n+        msg.inv.append(CInv(2, block_hash))  # 2 == \"Block\"\n+        node.send_message(msg)\n+\n+    # Send a getheaders request for a given single block hash\n+    def send_header_request(self, block_hash, node):\n+        msg = msg_getheaders()\n+        msg.hashstop = block_hash\n+        node.send_message(msg)\n+\n+    # Check whether last block received from node has a given hash\n+    def last_block_equals(self, expected_hash, node):\n+        block_msg = node.last_message.get(\"block\")\n+        return block_msg and block_msg.block.rehash() == expected_hash\n+\n+    # Check whether last block header received from node has a given hash\n+    def last_header_equals(self, expected_hash, node):\n+        headers_msg = node.last_message.get(\"headers\")\n+        return (headers_msg and\n+                headers_msg.headers and\n+                headers_msg.headers[0].rehash() == expected_hash)\n+\n+    # Checks that orphan blocks timestamped more than a month ago are not served\n+    # by the node while recent orphan blocks and old active chain blocks are.\n+    # This does not currently test that orphan blocks timestamped within the\n+    # last month but that have over a month's worth of work are also withheld.\n+    def run_test(self):\n+        node0 = NodeConnCB()\n+\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+\n+        NetworkThread().start()\n+        node0.wait_for_verack()\n+\n+        # Set node time to 60 days ago\n+        self.nodes[0].setmocktime(int(time.time()) - 60 * 24 * 60 * 60)\n+\n+        # Generating a chain of 10 blocks\n+        block_hashes = self.nodes[0].generate(nblocks=10)\n+\n+        # Create longer chain starting 2 blocks before current tip\n+        height = len(block_hashes) - 2\n+        block_hash = block_hashes[height - 1]\n+        block_time = self.nodes[0].getblockheader(block_hash)[\"mediantime\"] + 1\n+        new_blocks = self.build_chain(5, block_hash, height, block_time)\n+\n+        # Force reorg to a longer chain\n+        node0.send_message(msg_headers(new_blocks))\n+        node0.wait_for_getdata()\n+        for block in new_blocks:\n+            node0.send_and_ping(msg_block(block))\n+\n+        # Check that reorg succeeded\n+        assert_equal(self.nodes[0].getblockcount(), 13)\n+\n+        orphan_hash = int(block_hashes[-1], 16)\n+\n+        # Check that getdata request for orphan block succeeds\n+        self.send_block_request(orphan_hash, node0)\n+        test_function = lambda: self.last_block_equals(orphan_hash, node0)\n+        wait_until(test_function, timeout=3)\n+\n+        # Check that getheader request for orphan block header succeeds\n+        self.send_header_request(orphan_hash, node0)\n+        test_function = lambda: self.last_header_equals(orphan_hash, node0)\n+        wait_until(test_function, timeout=3)\n+\n+        # Longest chain is extended so orphan is much older than chain tip\n+        self.nodes[0].setmocktime(0)\n+        tip = self.nodes[0].generate(nblocks=1)[0]\n+        assert_equal(self.nodes[0].getblockcount(), 14)\n+\n+        # Send getdata & getheaders to refresh last received getheader message\n+        block_hash = int(tip, 16)\n+        self.send_block_request(block_hash, node0)\n+        self.send_header_request(block_hash, node0)\n+        node0.sync_with_ping()\n+\n+        # Request for very old orphan block should now fail\n+        self.send_block_request(orphan_hash, node0)\n+        time.sleep(3)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141494036",
      "id" : 141494036,
      "in_reply_to_id" : 141489518,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTQ5NDAzNg==",
      "original_commit_id" : "b74b0b788fb86bfef698965e7c99d1c291de70d7",
      "original_line" : 135,
      "original_position" : 135,
      "original_start_line" : null,
      "path" : "test/functional/p2p-fingerprint.py",
      "position" : null,
      "pull_request_review_id" : 65717302,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141494036/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141494036",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141494130"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141494130"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't understand. Example code?",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-27T23:36:25Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various fingerprinting protections.\n+\n+If an orphan block more than a month old or its header are requested by a peer,\n+the node should pretend that it does not have it to avoid fingerprinting.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.blocktools import (create_block, create_coinbase)\n+from test_framework.mininode import (\n+    CInv,\n+    NetworkThread,\n+    NodeConn,\n+    NodeConnCB,\n+    msg_headers,\n+    msg_block,\n+    msg_getdata,\n+    msg_getheaders,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    p2p_port,\n+)\n+\n+class P2PFingerprintTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    # Build a chain of blocks on top of given one\n+    def build_chain(self, nblocks, prev_hash, prev_height, prev_median_time):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141494130",
      "id" : 141494130,
      "in_reply_to_id" : 141492533,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTQ5NDEzMA==",
      "original_commit_id" : "b74b0b788fb86bfef698965e7c99d1c291de70d7",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p-fingerprint.py",
      "position" : 37,
      "pull_request_review_id" : 65717413,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141494130/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141494130",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141494166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141494166"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd rather not.",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-27T23:36:47Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various fingerprinting protections.\n+\n+If an orphan block more than a month old or its header are requested by a peer,\n+the node should pretend that it does not have it to avoid fingerprinting.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.blocktools import (create_block, create_coinbase)\n+from test_framework.mininode import (\n+    CInv,\n+    NetworkThread,\n+    NodeConn,\n+    NodeConnCB,\n+    msg_headers,\n+    msg_block,\n+    msg_getdata,\n+    msg_getheaders,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    p2p_port,\n+)\n+\n+class P2PFingerprintTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    # Build a chain of blocks on top of given one\n+    def build_chain(self, nblocks, prev_hash, prev_height, prev_median_time):\n+        blocks = []\n+        for _ in range(nblocks):\n+            coinbase = create_coinbase(prev_height + 1)\n+            block_time = prev_median_time + 1\n+            block = create_block(int(prev_hash, 16), coinbase, block_time)\n+            block.solve()\n+\n+            blocks.append(block)\n+            prev_hash = block.hash\n+            prev_height += 1\n+            prev_median_time = block_time\n+        return blocks\n+\n+    # Send a getdata request for a given block hash\n+    def send_block_request(self, block_hash, node):\n+        msg = msg_getdata()\n+        msg.inv.append(CInv(2, block_hash))  # 2 == \"Block\"\n+        node.send_message(msg)\n+\n+    # Send a getheaders request for a given single block hash\n+    def send_header_request(self, block_hash, node):\n+        msg = msg_getheaders()\n+        msg.hashstop = block_hash\n+        node.send_message(msg)\n+\n+    # Check whether last block received from node has a given hash\n+    def last_block_equals(self, expected_hash, node):\n+        block_msg = node.last_message.get(\"block\")\n+        return block_msg and block_msg.block.rehash() == expected_hash\n+\n+    # Check whether last block header received from node has a given hash\n+    def last_header_equals(self, expected_hash, node):\n+        headers_msg = node.last_message.get(\"headers\")\n+        return (headers_msg and\n+                headers_msg.headers and\n+                headers_msg.headers[0].rehash() == expected_hash)\n+\n+    # Checks that orphan blocks timestamped more than a month ago are not served\n+    # by the node while recent orphan blocks and old active chain blocks are.\n+    # This does not currently test that orphan blocks timestamped within the\n+    # last month but that have over a month's worth of work are also withheld.\n+    def run_test(self):\n+        node0 = NodeConnCB()\n+\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+\n+        NetworkThread().start()\n+        node0.wait_for_verack()\n+\n+        # Set node time to 60 days ago\n+        self.nodes[0].setmocktime(int(time.time()) - 60 * 24 * 60 * 60)\n+\n+        # Generating a chain of 10 blocks\n+        block_hashes = self.nodes[0].generate(nblocks=10)\n+\n+        # Create longer chain starting 2 blocks before current tip\n+        height = len(block_hashes) - 2\n+        block_hash = block_hashes[height - 1]\n+        block_time = self.nodes[0].getblockheader(block_hash)[\"mediantime\"] + 1\n+        new_blocks = self.build_chain(5, block_hash, height, block_time)\n+\n+        # Force reorg to a longer chain\n+        node0.send_message(msg_headers(new_blocks))\n+        node0.wait_for_getdata()\n+        for block in new_blocks:\n+            node0.send_and_ping(msg_block(block))\n+\n+        # Check that reorg succeeded\n+        assert_equal(self.nodes[0].getblockcount(), 13)\n+\n+        orphan_hash = int(block_hashes[-1], 16)\n+\n+        # Check that getdata request for orphan block succeeds\n+        self.send_block_request(orphan_hash, node0)\n+        test_function = lambda: self.last_block_equals(orphan_hash, node0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141494166",
      "id" : 141494166,
      "in_reply_to_id" : 141488406,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTQ5NDE2Ng==",
      "original_commit_id" : "b74b0b788fb86bfef698965e7c99d1c291de70d7",
      "original_line" : 114,
      "original_position" : 114,
      "original_start_line" : null,
      "path" : "test/functional/p2p-fingerprint.py",
      "position" : null,
      "pull_request_review_id" : 65717457,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141494166/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141494166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141494264"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141494264"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this better represents my intent as is. Also, height is used two lines below.",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-27T23:37:24Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various fingerprinting protections.\n+\n+If an orphan block more than a month old or its header are requested by a peer,\n+the node should pretend that it does not have it to avoid fingerprinting.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.blocktools import (create_block, create_coinbase)\n+from test_framework.mininode import (\n+    CInv,\n+    NetworkThread,\n+    NodeConn,\n+    NodeConnCB,\n+    msg_headers,\n+    msg_block,\n+    msg_getdata,\n+    msg_getheaders,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    p2p_port,\n+)\n+\n+class P2PFingerprintTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    # Build a chain of blocks on top of given one\n+    def build_chain(self, nblocks, prev_hash, prev_height, prev_median_time):\n+        blocks = []\n+        for _ in range(nblocks):\n+            coinbase = create_coinbase(prev_height + 1)\n+            block_time = prev_median_time + 1\n+            block = create_block(int(prev_hash, 16), coinbase, block_time)\n+            block.solve()\n+\n+            blocks.append(block)\n+            prev_hash = block.hash\n+            prev_height += 1\n+            prev_median_time = block_time\n+        return blocks\n+\n+    # Send a getdata request for a given block hash\n+    def send_block_request(self, block_hash, node):\n+        msg = msg_getdata()\n+        msg.inv.append(CInv(2, block_hash))  # 2 == \"Block\"\n+        node.send_message(msg)\n+\n+    # Send a getheaders request for a given single block hash\n+    def send_header_request(self, block_hash, node):\n+        msg = msg_getheaders()\n+        msg.hashstop = block_hash\n+        node.send_message(msg)\n+\n+    # Check whether last block received from node has a given hash\n+    def last_block_equals(self, expected_hash, node):\n+        block_msg = node.last_message.get(\"block\")\n+        return block_msg and block_msg.block.rehash() == expected_hash\n+\n+    # Check whether last block header received from node has a given hash\n+    def last_header_equals(self, expected_hash, node):\n+        headers_msg = node.last_message.get(\"headers\")\n+        return (headers_msg and\n+                headers_msg.headers and\n+                headers_msg.headers[0].rehash() == expected_hash)\n+\n+    # Checks that orphan blocks timestamped more than a month ago are not served\n+    # by the node while recent orphan blocks and old active chain blocks are.\n+    # This does not currently test that orphan blocks timestamped within the\n+    # last month but that have over a month's worth of work are also withheld.\n+    def run_test(self):\n+        node0 = NodeConnCB()\n+\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+\n+        NetworkThread().start()\n+        node0.wait_for_verack()\n+\n+        # Set node time to 60 days ago\n+        self.nodes[0].setmocktime(int(time.time()) - 60 * 24 * 60 * 60)\n+\n+        # Generating a chain of 10 blocks\n+        block_hashes = self.nodes[0].generate(nblocks=10)\n+\n+        # Create longer chain starting 2 blocks before current tip\n+        height = len(block_hashes) - 2\n+        block_hash = block_hashes[height - 1]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141494264",
      "id" : 141494264,
      "in_reply_to_id" : 141490421,
      "line" : 97,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTQ5NDI2NA==",
      "original_commit_id" : "b74b0b788fb86bfef698965e7c99d1c291de70d7",
      "original_line" : 97,
      "original_position" : 97,
      "original_start_line" : null,
      "path" : "test/functional/p2p-fingerprint.py",
      "position" : 97,
      "pull_request_review_id" : 65717562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141494264/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141494264",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "node_id" : "MDQ6VXNlcjg4MTI1Mw==",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141556292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141556292"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I mean something like:\r\n```python\r\ndef build_chain(self, nblocks, prev_hash):\r\n    header = self.nodes[0].getblockheader(prev_hash)\r\n    height = header[\"height\"]\r\n    cur_time = header[\"mediantime\"]\r\n\r\n    blocks = []\r\n    for _ in range(nblocks):\r\n        height += 1\r\n        cur_time += 1\r\n        \r\n        coinbase = create_coinbase(height)\r\n        block = create_block(int(prev_hash, 16), coinbase, cur_time)\r\n        block.solve()\r\n\r\n        blocks.append(block)\r\n        prev_hash = block.hash\r\n    return blocks\r\n\r\n...\r\n\r\n    new_blocks = self.build_chain(5, block_hashes[-3])\r\n```\r\nThis way height below is not needed.",
      "commit_id" : "eff4bd8ab257a553ca8898ccd803630b4d44a771",
      "created_at" : "2017-09-28T08:32:21Z",
      "diff_hunk" : "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test various fingerprinting protections.\n+\n+If an orphan block more than a month old or its header are requested by a peer,\n+the node should pretend that it does not have it to avoid fingerprinting.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.blocktools import (create_block, create_coinbase)\n+from test_framework.mininode import (\n+    CInv,\n+    NetworkThread,\n+    NodeConn,\n+    NodeConnCB,\n+    msg_headers,\n+    msg_block,\n+    msg_getdata,\n+    msg_getheaders,\n+    wait_until,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    p2p_port,\n+)\n+\n+class P2PFingerprintTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    # Build a chain of blocks on top of given one\n+    def build_chain(self, nblocks, prev_hash, prev_height, prev_median_time):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#discussion_r141556292",
      "id" : 141556292,
      "in_reply_to_id" : 141492533,
      "line" : 37,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTU1NjI5Mg==",
      "original_commit_id" : "b74b0b788fb86bfef698965e7c99d1c291de70d7",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/p2p-fingerprint.py",
      "position" : 37,
      "pull_request_review_id" : 65786163,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11113",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141556292/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2017-10-03T17:28:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/141556292",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> obNitpickSummoning: @sipa you're okay with calling this function 'orphanblock' rather than something like 'staleblock'? :)\r\n\r\nYes, a small nit regarding language: there is some ambiguity with regard to \"orphan\". Sometimes this is used for disconnected blocks/transactions (of which the parent is not known), sometimes for blocks/transactions outside the active chain. \"stale\" would be more specific, maybe.\r\n\r\nutACK otherwise.",
      "created_at" : "2017-09-28T11:15:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-332805896",
      "id" : 332805896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMzMjgwNTg5Ng==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332805896/reactions"
      },
      "updated_at" : "2017-09-28T11:18:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332805896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 00ec5a3. Nits and other possible improvements can be worked out later.\r\n\r\n",
      "created_at" : "2017-09-28T13:19:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11113#issuecomment-332833601",
      "id" : 332833601,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11113",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDMzMjgzMzYwMQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332833601/reactions"
      },
      "updated_at" : "2017-09-28T13:19:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/332833601",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
