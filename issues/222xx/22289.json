{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "Hi, in span.h you define a strange macro\r\nhttps://github.com/bitcoin/bitcoin/blob/965e93743454112c0c3c66bf24852f63ee07b862/src/span.h#L14\r\n\r\ncould someone please tell me the reasoning behind this? \r\nIt doesn't seem to be mentionned in the comments, maybe I overlooked it. \r\n\r\nThe reason I don't understand is that it, as far as I know, does not have to change anything whatsoever in terms of code generation.\r\nStatic initialization can happen without constexpr. (In fact it's a sneaky way to introduce bugs whenever you have a global std::mapâ¦ It's a lot of \"fun\" but I digress). \r\n\r\nThen we have this \r\nhttps://github.com/bitcoin/bitcoin/blob/965e93743454112c0c3c66bf24852f63ee07b862/src/span.h#L116-L125\r\nNow I'm very confused. \r\nIs this checking if an incomplete type is convertible to another incomplete type? \r\nI don't know how that template could possibly do anything else. It's not checking if `T**` is implicitly convertible to `C**`, is it? **I don't know what that does.** \r\n\r\nWhy is it only constexpr when not in debug? \r\nWhy is it only doing this, rather important looking, assertion in debug? \r\nDoes it become valid to violate that assertion in prod? \r\nWhy? It seems odd and bug prone. \r\n\r\nThank you for your time. ",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22289/comments",
   "created_at" : "2021-06-20T14:40:14Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22289/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/22289",
   "id" : 925613748,
   "labels" : [
      {
         "color" : "006688",
         "default" : false,
         "description" : null,
         "id" : 477890092,
         "name" : "Questions and Help",
         "node_id" : "MDU6TGFiZWw0Nzc4OTAwOTI=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Questions%20and%20Help"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22289/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU5MjU2MTM3NDg=",
   "number" : 22289,
   "performed_via_github_app" : null,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Need help understanding parts of span.h",
   "updated_at" : "2021-06-20T15:46:20Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22289",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/7462994?v=4",
      "events_url" : "https://api.github.com/users/ViralTaco/events{/privacy}",
      "followers_url" : "https://api.github.com/users/ViralTaco/followers",
      "following_url" : "https://api.github.com/users/ViralTaco/following{/other_user}",
      "gists_url" : "https://api.github.com/users/ViralTaco/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/ViralTaco",
      "id" : 7462994,
      "login" : "ViralTaco",
      "node_id" : "MDQ6VXNlcjc0NjI5OTQ=",
      "organizations_url" : "https://api.github.com/users/ViralTaco/orgs",
      "received_events_url" : "https://api.github.com/users/ViralTaco/received_events",
      "repos_url" : "https://api.github.com/users/ViralTaco/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/ViralTaco/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/ViralTaco/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/ViralTaco"
   }
}
