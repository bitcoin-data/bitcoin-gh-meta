[
   {
      "author_association" : "MEMBER",
      "body" : "`./src/test/test_bitcoin -t net_peer_eviction_tests/peer_protection_test` runs about 10% faster for me on this branch, though it is a debug build and the unit tests use very low numbers of eviction candidates (between 4 and 24).  I'll write a test with higher numbers of eviction candidates and benchmark with optimized builds (and fix the fuzzer CI failure).",
      "created_at" : "2021-06-19T17:40:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#issuecomment-864441022",
      "id" : 864441022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22284",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NDQ0MTAyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-19T17:40:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864441022",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added benchmarks. This pull speeds up `ProtectEvictionCandidatesByRatio()` between 2x and 6x for the benchmarked cases. It's not a hotspot, but the improvement is significant.\r\n\r\n\r\n```\r\n$ ./src/bench/bench_bitcoin -filter=EvictionProtection*.*\r\n```\r\n\r\nmaster\r\n\r\n```rake\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|    5,403,043,444.00 |                0.19 |    1.8% |     59.74 | `EvictionProtection1Network250Candidates`\r\n|    2,946,547,379.00 |                0.34 |    2.7% |     33.45 | `EvictionProtection3Networks050Candidates`\r\n|    2,798,691,071.00 |                0.36 |    2.2% |     30.79 | `EvictionProtection3Networks100Candidates`\r\n|    7,288,364,370.00 |                0.14 |    0.7% |     80.16 | `EvictionProtection3Networks250Candidates`\r\n```\r\n\r\nthis PR\r\n\r\n```rake\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|    1,183,198,205.00 |                0.85 |    1.2% |     13.12 | `EvictionProtection1Network250Candidates`\r\n|    1,151,709,186.00 |                0.87 |    1.7% |     12.67 | `EvictionProtection3Networks050Candidates`\r\n|    1,261,170,266.00 |                0.79 |    2.9% |     14.26 | `EvictionProtection3Networks100Candidates`\r\n|    1,157,625,808.00 |                0.86 |    1.0% |     12.95 | `EvictionProtection3Networks250Candidates`\r\n```\r\n\r\n------\r\n\r\n(intermediate commits)\r\n\r\n*p2p: iterate over eviction candidates once instead of thrice*\r\n\r\n```rake\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|    3,952,529,089.00 |                0.25 |    1.8% |     43.47 | `EvictionProtection1Network250Candidates`\r\n|    2,239,435,919.00 |                0.45 |    3.8% |     25.85 | `EvictionProtection3Networks050Candidates`\r\n|    2,060,389,113.00 |                0.49 |    1.9% |     22.85 | `EvictionProtection3Networks100Candidates`\r\n|    5,258,681,959.00 |                0.19 |    1.0% |     58.26 | `EvictionProtection3Networks250Candidates`\r\n```\r\n\r\n*p2p: iterate eviction protection only on networks having candidates*\r\n\r\n```rake\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|    1,224,597,989.00 |                0.82 |    2.2% |     13.60 | `EvictionProtection1Network250Candidates`\r\n```\r\n",
      "created_at" : "2021-06-20T14:39:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#issuecomment-864564794",
      "id" : 864564794,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22284",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NDU2NDc5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-20T15:26:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864564794",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Tested on macOs 11.4 and this PR indeed optimize it by 1.3x to 5x. \r\n\r\n<details> \r\n<summary> Test result </summary>\r\n\r\nOn 272f327fbfcb8bb61f8e1c9d65c665372cd60976(master with benchmarks):\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|      756,331,588.00 |                1.32 |    1.2% |      8.38 | `EvictionProtection1Network250Candidates`\r\n|    1,579,971,776.00 |                0.63 |    1.1% |     17.45 | `EvictionProtection3Networks050Candidates`\r\n|    1,395,431,168.00 |                0.72 |    1.0% |     15.70 | `EvictionProtection3Networks100Candidates`\r\n|    3,716,091,921.00 |                0.27 |    1.0% |     41.32 | `EvictionProtection3Networks250Candidates`\r\n```\r\nThis PR:\r\n```          \r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|      492,425,456.00 |                2.03 |    0.9% |      5.45 | `EvictionProtection1Network250Candidates`\r\n|      739,073,603.00 |                1.35 |    1.3% |      8.13 | `EvictionProtection3Networks050Candidates`\r\n|      937,281,186.00 |                1.07 |    0.7% |     10.38 | `EvictionProtection3Networks100Candidates`\r\n|      828,820,224.00 |                1.21 |    1.6% |      9.10 | `EvictionProtection3Networks250Candidates`\r\n```\r\n</details>\r\n\r\nNot sure if it is an issue on my side but I had to test with `./src/bench/bench_bitcoin -filter=\"EvictionProtection*.*\"`(quotes around regex) instead of the command provided by the PR description. ",
      "created_at" : "2021-06-20T15:18:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#issuecomment-864569995",
      "id" : 864569995,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22284",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NDU2OTk5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-20T15:18:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864569995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/49265907?v=4",
         "events_url" : "https://api.github.com/users/klementtan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/klementtan/followers",
         "following_url" : "https://api.github.com/users/klementtan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/klementtan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/klementtan",
         "id" : 49265907,
         "login" : "klementtan",
         "node_id" : "MDQ6VXNlcjQ5MjY1OTA3",
         "organizations_url" : "https://api.github.com/users/klementtan/orgs",
         "received_events_url" : "https://api.github.com/users/klementtan/received_events",
         "repos_url" : "https://api.github.com/users/klementtan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/klementtan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/klementtan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/klementtan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19377 by hebasto\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-06-20T17:24:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#issuecomment-864586340",
      "id" : 864586340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22284",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NDU4NjM0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-24T13:40:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864586340",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2021-06-22T16:22:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#issuecomment-866133352",
      "id" : 866133352,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22284",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NjEzMzM1Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-22T16:22:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/866133352",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @jarolrod!  If anyone else would like to review or ACK that would be great as this completes merged PR #21261.",
      "created_at" : "2021-06-26T18:18:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#issuecomment-869042211",
      "id" : 869042211,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22284",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2OTA0MjIxMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-26T18:18:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/869042211",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r661275001"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661275001"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This function already exists in `src/test/net_peer_eviction_tests.cpp`. Dedup:\r\n\r\n```diff\r\n    test: make GetRandomNodeEvictionCandidates() reusable\r\n\r\n    Move `GetRandomNodeEvictionCandidates()` from\r\n    `src/test/net_peer_eviction_tests.cpp` to `src/test/util/net.h` and\r\n    `src/test/util/net.cpp` so that it can be reused by other tests.\r\n\r\ndiff --git a/src/test/net_peer_eviction_tests.cpp b/src/test/net_peer_eviction_tests.cpp\r\nindex 4bfd487b86..5eb280b498 100644\r\n--- a/src/test/net_peer_eviction_tests.cpp\r\n+++ b/src/test/net_peer_eviction_tests.cpp\r\n@@ -14,34 +14,12 @@\r\n #include <optional>\r\n #include <unordered_set>\r\n #include <vector>\r\n\r\n BOOST_FIXTURE_TEST_SUITE(net_peer_eviction_tests, BasicTestingSetup)\r\n\r\n-std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(const int n_candidates, FastRandomContext& random_context)\r\n-{\r\n-    std::vector<NodeEvictionCandidate> candidates;\r\n-    for (int id = 0; id < n_candidates; ++id) {\r\n-        candidates.push_back({\r\n-            /* id */ id,\r\n-            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\r\n-            /* m_min_ping_time */ std::chrono::microseconds{random_context.randrange(100)},\r\n-            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\r\n-            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\r\n-            /* fRelevantServices */ random_context.randbool(),\r\n-            /* fRelayTxes */ random_context.randbool(),\r\n-            /* fBloomFilter */ random_context.randbool(),\r\n-            /* nKeyedNetGroup */ random_context.randrange(100),\r\n-            /* prefer_evict */ random_context.randbool(),\r\n-            /* m_is_local */ random_context.randbool(),\r\n-            /* m_network */ ALL_NETWORKS[random_context.randrange(ALL_NETWORKS.size())],\r\n-        });\r\n-    }\r\n-    return candidates;\r\n-}\r\n-\r\n // Create `num_peers` random nodes, apply setup function `candidate_setup_fn`,\r\n // call ProtectEvictionCandidatesByRatio() to apply protection logic, and then\r\n // return true if all of `protected_peer_ids` and none of `unprotected_peer_ids`\r\n // are protected from eviction, i.e. removed from the eviction candidates.\r\n bool IsProtected(int num_peers,\r\n                  std::function<void(NodeEvictionCandidate&)> candidate_setup_fn,\r\ndiff --git a/src/test/util/net.cpp b/src/test/util/net.cpp\r\nindex 847a490e03..64b70a61f0 100644\r\n--- a/src/test/util/net.cpp\r\n+++ b/src/test/util/net.cpp\r\n@@ -34,6 +34,28 @@ bool ConnmanTestMsg::ReceiveMsgFrom(CNode& node, CSerializedNetMsg& ser_msg) con\r\n\r\n     bool complete;\r\n     NodeReceiveMsgBytes(node, ser_msg_header, complete);\r\n     NodeReceiveMsgBytes(node, ser_msg.data, complete);\r\n     return complete;\r\n }\r\n+\r\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(const int n_candidates, FastRandomContext& random_context)\r\n+{\r\n+    std::vector<NodeEvictionCandidate> candidates;\r\n+    for (int id = 0; id < n_candidates; ++id) {\r\n+        candidates.push_back({\r\n+            /* id */ id,\r\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\r\n+            /* m_min_ping_time */ std::chrono::microseconds{random_context.randrange(100)},\r\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\r\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\r\n+            /* fRelevantServices */ random_context.randbool(),\r\n+            /* fRelayTxes */ random_context.randbool(),\r\n+            /* fBloomFilter */ random_context.randbool(),\r\n+            /* nKeyedNetGroup */ random_context.randrange(100),\r\n+            /* prefer_evict */ random_context.randbool(),\r\n+            /* m_is_local */ random_context.randbool(),\r\n+            /* m_network */ ALL_NETWORKS[random_context.randrange(ALL_NETWORKS.size())],\r\n+        });\r\n+    }\r\n+    return candidates;\r\n+}\r\ndiff --git a/src/test/util/net.h b/src/test/util/net.h\r\nindex 1b49a671bd..66f6cc61b8 100644\r\n--- a/src/test/util/net.h\r\n+++ b/src/test/util/net.h\r\n@@ -138,7 +138,9 @@ public:\r\n\r\n private:\r\n     const std::string m_contents;\r\n     mutable size_t m_consumed;\r\n };\r\n\r\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(const int n_candidates, FastRandomContext& random_context);\r\n+\r\n #endif // BITCOIN_TEST_UTIL_NET_H\r\n```\r\n",
      "commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "created_at" : "2021-06-30T09:09:09Z",
      "diff_hunk" : "@@ -0,0 +1,169 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <random.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int num_peers, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates;\n+    for (int id = 0; id < num_peers; ++id) {\n+        candidates.push_back({\n+            /* id */ id,\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* m_min_ping_time */ std::chrono::microseconds{random_context.randrange(100)},\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* fRelevantServices */ random_context.randbool(),\n+            /* fRelayTxes */ random_context.randbool(),\n+            /* fBloomFilter */ random_context.randbool(),\n+            /* nKeyedNetGroup */ random_context.randrange(100),\n+            /* prefer_evict */ random_context.randbool(),\n+            /* m_is_local */ random_context.randbool(),\n+            /* m_network */ ALL_NETWORKS[random_context.randrange(ALL_NETWORKS.size())],\n+        });\n+    }\n+    return candidates;\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r661275001",
      "id" : 661275001,
      "line" : 36,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTI3NTAwMQ==",
      "original_commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : 16,
      "path" : "src/bench/peer_eviction.cpp",
      "position" : 36,
      "pull_request_review_id" : 695881962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284",
      "side" : "RIGHT",
      "start_line" : 16,
      "start_side" : "RIGHT",
      "updated_at" : "2021-06-30T09:48:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661275001",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r661285594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661285594"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think [nanobench](https://nanobench.ankerl.com/reference.html#_CPPv4N6ankerl9nanobench5Bench6epochsE6size_t) is designed to make such loops unnecessary. It can provide stable results even if the test function is very fast/short, no need to loop 60k times.\r\n\r\nAlso, the above benchmarks the copying of the data which could add noise to the test. Given that the input is not huge we can create a separate copy for each iteration of the test, this consumes a few tens of megabytes which is ok. Here is an example (that also uses the de-duplicated `GetRandomNodeEvictionCandidates()` from `test/util/net.h`):\r\n\r\n```cpp\r\n// Copyright (c) 2021 The Bitcoin Core developers\r\n// Distributed under the MIT software license, see the accompanying\r\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n\r\n#include <bench/bench.h>\r\n#include <net.h>\r\n#include <netaddress.h>\r\n#include <random.h>\r\n#include <test/util/net.h>\r\n#include <test/util/setup_common.h>\r\n\r\n#include <algorithm>\r\n#include <functional>\r\n#include <vector>\r\n\r\nstatic void EvictionProtectionCommon(\r\n    benchmark::Bench& bench,\r\n    int num_candidates,\r\n    std::function<void(NodeEvictionCandidate&)> candidate_setup_fn,\r\n    size_t epochs,\r\n    uint64_t epoch_iterations)\r\n{\r\n    using Candidates = std::vector<NodeEvictionCandidate>;\r\n\r\n    FastRandomContext random_context{true};\r\n\r\n    bench.epochs(epochs).epochIterations(epoch_iterations);\r\n\r\n    Candidates candidates{GetRandomNodeEvictionCandidates(num_candidates, random_context)};\r\n    for (auto& c : candidates) {\r\n        candidate_setup_fn(c);\r\n    }\r\n\r\n    std::vector<Candidates> copies{bench.epochs() * bench.epochIterations(), candidates};\r\n    size_t i{0};\r\n    bench.run([&] {\r\n        ProtectEvictionCandidatesByRatio(copies.at(i));\r\n        ++i;\r\n    });\r\n}\r\n\r\n/* Benchmarks */\r\n\r\nstatic void EvictionProtection1Network250Candidates(benchmark::Bench& bench)\r\n{\r\n    EvictionProtectionCommon(\r\n        bench,\r\n        250 /* num_candidates */,\r\n        [](NodeEvictionCandidate& c) {\r\n            c.nTimeConnected = c.id;\r\n            c.m_is_local = false;\r\n            if (c.id >= 130 && c.id < 240) { // 110 Tor\r\n                c.m_network = NET_ONION;\r\n            } else {\r\n                c.m_network = NET_IPV6;\r\n            }\r\n        },\r\n        10 /* epochs */,\r\n        100 /* epoch_iterations */);\r\n}\r\n\r\nstatic void EvictionProtection3Networks050Candidates(benchmark::Bench& bench)\r\n{\r\n    EvictionProtectionCommon(\r\n        bench,\r\n        50 /* num_candidates */,\r\n        [](NodeEvictionCandidate& c) {\r\n            c.nTimeConnected = c.id;\r\n            c.m_is_local = (c.id == 28 || c.id == 47); //  2 localhost\r\n            if (c.id >= 30 && c.id < 47) {             // 17 I2P\r\n                c.m_network = NET_I2P;\r\n            } else if (c.id >= 24 && c.id < 28) { //  4 Tor\r\n                c.m_network = NET_ONION;\r\n            } else {\r\n                c.m_network = NET_IPV4;\r\n            }\r\n        },\r\n        10 /* epochs */,\r\n        100 /* epoch_iterations */);\r\n}\r\n\r\nstatic void EvictionProtection3Networks100Candidates(benchmark::Bench& bench)\r\n{\r\n    EvictionProtectionCommon(\r\n        bench,\r\n        100 /* num_candidates */,\r\n        [](NodeEvictionCandidate& c) {\r\n            c.nTimeConnected = c.id;\r\n            c.m_is_local = (c.id >= 55 && c.id < 60); //  5 localhost\r\n            if (c.id >= 70 && c.id < 80) {            // 10 I2P\r\n                c.m_network = NET_I2P;\r\n            } else if (c.id >= 80 && c.id < 96) { // 16 Tor\r\n                c.m_network = NET_ONION;\r\n            } else {\r\n                c.m_network = NET_IPV4;\r\n            }\r\n        },\r\n        10 /* epochs */,\r\n        100 /* epoch_iterations */);\r\n}\r\n\r\nstatic void EvictionProtection3Networks250Candidates(benchmark::Bench& bench)\r\n{\r\n    EvictionProtectionCommon(\r\n        bench,\r\n        250 /* num_candidates */,\r\n        [](NodeEvictionCandidate& c) {\r\n            c.nTimeConnected = c.id;\r\n            c.m_is_local = (c.id >= 140 && c.id < 160); // 20 localhost\r\n            if (c.id >= 170 && c.id < 180) {            // 10 I2P\r\n                c.m_network = NET_I2P;\r\n            } else if (c.id >= 190 && c.id < 240) { // 50 Tor\r\n                c.m_network = NET_ONION;\r\n            } else {\r\n                c.m_network = NET_IPV4;\r\n            }\r\n        },\r\n        10 /* epochs */,\r\n        100 /* epoch_iterations */);\r\n}\r\n\r\n// 1 disadvantaged network (Tor) with 250 eviction candidates.\r\nBENCHMARK(EvictionProtection1Network250Candidates);\r\n\r\n// 3 disadvantaged networks (I2P/localhost/Tor) with 50/100/250 eviction candidates.\r\nBENCHMARK(EvictionProtection3Networks050Candidates);\r\nBENCHMARK(EvictionProtection3Networks100Candidates);\r\nBENCHMARK(EvictionProtection3Networks250Candidates);\r\n```",
      "commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "created_at" : "2021-06-30T09:23:24Z",
      "diff_hunk" : "@@ -0,0 +1,169 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <random.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int num_peers, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates;\n+    for (int id = 0; id < num_peers; ++id) {\n+        candidates.push_back({\n+            /* id */ id,\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* m_min_ping_time */ std::chrono::microseconds{random_context.randrange(100)},\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* fRelevantServices */ random_context.randbool(),\n+            /* fRelayTxes */ random_context.randbool(),\n+            /* fBloomFilter */ random_context.randbool(),\n+            /* nKeyedNetGroup */ random_context.randrange(100),\n+            /* prefer_evict */ random_context.randbool(),\n+            /* m_is_local */ random_context.randbool(),\n+            /* m_network */ ALL_NETWORKS[random_context.randrange(ALL_NETWORKS.size())],\n+        });\n+    }\n+    return candidates;\n+}\n+\n+static std::vector<NodeEvictionCandidate> CreateEvictionCandidates(int num_peers, std::function<void(NodeEvictionCandidate&)> candidate_setup_fn, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates{GetRandomNodeEvictionCandidates(num_peers, random_context)};\n+    for (NodeEvictionCandidate& candidate : candidates) {\n+        candidate_setup_fn(candidate);\n+    }\n+    return candidates;\n+}\n+\n+/* Benchmarks */\n+\n+static void EvictionProtection1Network250Candidates(benchmark::Bench& bench)\n+{\n+    const int num_peers{250};\n+    FastRandomContext random_context{true};\n+\n+    const std::vector<NodeEvictionCandidate> eviction_candidates{\n+        CreateEvictionCandidates(\n+            num_peers, [](NodeEvictionCandidate& c) {\n+                c.nTimeConnected = c.id;\n+                c.m_is_local = false;\n+                if (c.id >= 130 && c.id < 240) { // 110 Tor\n+                    c.m_network = NET_ONION;\n+                } else {\n+                    c.m_network = NET_IPV6;\n+                }\n+            },\n+            random_context)};\n+\n+    bench.run([&] {\n+        std::vector<NodeEvictionCandidate> candidates;\n+        for (int id = 0; id < 60000; ++id) {\n+            candidates = eviction_candidates;\n+            ProtectEvictionCandidatesByRatio(candidates);\n+        }\n+    });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r661285594",
      "id" : 661285594,
      "line" : 73,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTI4NTU5NA==",
      "original_commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "original_line" : 73,
      "original_position" : 73,
      "original_start_line" : 67,
      "path" : "src/bench/peer_eviction.cpp",
      "position" : 73,
      "pull_request_review_id" : 695881962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284",
      "side" : "RIGHT",
      "start_line" : 67,
      "start_side" : "RIGHT",
      "updated_at" : "2021-06-30T09:48:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661285594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r661294200"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661294200"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "99a25fb393 `p2p: iterate over eviction candidates once instead of thrice`\r\n\r\nI did not observe any difference in performance due to this commit.\r\n\r\nIt changes the complexity from `O(num networks * num candidates)` to `O(num candidates * num networks)`. The early `break` optimization maybe makes it `O(num candidates * num networks * 0.5)` on average, but that is equal to `O(num candidates * num networks)`.\r\n\r\nJust to experiment I made this `O(num candidates)` which is as fast as it could be (unfortunately a bit hackish due to the hardcoded indexes):\r\n\r\n```diff\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -918,18 +918,26 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\r\n     // array members have first opportunity to recover unused slots from the previous iteration.\r\n     struct Net { bool is_local; Network id; size_t count; };\r\n     std::array<Net, 3> networks{\r\n         {{false, NET_I2P, 0}, {/* localhost */ true, NET_MAX, 0}, {false, NET_ONION, 0}}};\r\n \r\n     // Count and store the number of eviction candidates per network.\r\n-    for (auto& c : eviction_candidates) {\r\n-        for (int i{networks.size() - 1}; i >= 0; --i) {\r\n-            if (networks[i].is_local ? c.m_is_local : c.m_network == networks[i].id) {\r\n-                ++networks[i].count;\r\n-                break;\r\n-            }\r\n+    for (const auto& c : eviction_candidates) {\r\n+        const Network net = c.m_is_local ? NET_MAX : c.m_network;\r\n+        switch (net) {\r\n+        case NET_I2P:\r\n+            ++networks[0].count;\r\n+            break;\r\n+        case NET_MAX:\r\n+            ++networks[1].count;\r\n+            break;\r\n+        case NET_ONION:\r\n+            ++networks[2].count;\r\n+            break;\r\n+        default:\r\n+            break;\r\n         }\r\n     }\r\n     // Sort `networks` by ascending candidate count, to give networks having fewer candidates\r\n     // the first opportunity to recover unused protected slots from the previous iteration.\r\n```\r\n\r\nNo difference in performance either. I guess this is operating on too small amount of data to make any performance impact and so this commit can be dropped if its purpose is to improve performance and we can't observe any changes.",
      "commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "created_at" : "2021-06-30T09:34:42Z",
      "diff_hunk" : "@@ -921,11 +921,13 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n         {{false, NET_I2P, 0}, {/* localhost */ true, NET_MAX, 0}, {false, NET_ONION, 0}}};\n \n     // Count and store the number of eviction candidates per network.\n-    for (Net& n : networks) {\n-        n.count = std::count_if(eviction_candidates.cbegin(), eviction_candidates.cend(),\n-                                [&n](const NodeEvictionCandidate& c) {\n-                                    return n.is_local ? c.m_is_local : c.m_network == n.id;\n-                                });\n+    for (auto& c : eviction_candidates) {\n+        for (int i{networks.size() - 1}; i >= 0; --i) {\n+            if (networks[i].is_local ? c.m_is_local : c.m_network == networks[i].id) {\n+                ++networks[i].count;\n+                break;\n+            }\n+        }\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r661294200",
      "id" : 661294200,
      "line" : 931,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTI5NDIwMA==",
      "original_commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "original_line" : 931,
      "original_position" : 16,
      "original_start_line" : 924,
      "path" : "src/net.cpp",
      "position" : 16,
      "pull_request_review_id" : 695881962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284",
      "side" : "RIGHT",
      "start_line" : 924,
      "start_side" : "LEFT",
      "updated_at" : "2021-06-30T09:48:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661294200",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r661302739"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661302739"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "06b898c3e1 `p2p: iterate eviction protection only on networks having candidates`\r\n\r\nLooking at this commit - there is no need to re-calculate `num_networks` inside the loop because `networks` is not changed in the loop. It can be calculated just once before the loop:\r\n\r\n```cpp\r\nauto num_networks = std::count_if(networks.begin(), networks.end(), [](const Net& n) { return n.count; });\r\nif (networks > 0) {\r\n    while (num_protected < max_protect_by_network) {\r\n        ...\r\n```\r\n\r\nI did not observe any performance change due to this commit.\r\n\r\nBut considering the subsequent ab2993336f `p2p: earlier continuation when no remaining eviction candidates` (this one brings pefromance boost!) it should be inside the loop because then we change `networks[].count` in the loop. Maybe squash both commits into one?",
      "commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "created_at" : "2021-06-30T09:46:31Z",
      "diff_hunk" : "@@ -936,27 +938,34 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     size_t num_protected{0};\n \n     while (num_protected < max_protect_by_network) {\n+        // Count the number of disadvantaged networks from which we have peers to protect.\n+        auto num_networks = std::count_if(networks.begin(), networks.end(), [](const Net& n) { return n.count; });\n+        if (num_networks == 0) {\n+            break;\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r661302739",
      "id" : 661302739,
      "line" : 945,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTMwMjczOQ==",
      "original_commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "original_line" : 945,
      "original_position" : 27,
      "original_start_line" : 940,
      "path" : "src/net.cpp",
      "position" : 27,
      "pull_request_review_id" : 695881962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284",
      "side" : "RIGHT",
      "start_line" : 940,
      "start_side" : "RIGHT",
      "updated_at" : "2021-06-30T09:48:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661302739",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r661341225"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661341225"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I did not observe any difference in performance due to this commit.\r\n\r\nHere are the results I get:\r\n\r\n272f327fbf `bench: add peer eviction protection benchmarks`\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|      706,673,971.00 |                1.42 |    1.7% |      7.79 | `EvictionProtection1Network250Candidates`\r\n|    1,299,063,388.00 |                0.77 |    0.7% |     14.30 | `EvictionProtection3Networks050Candidates`\r\n|    1,155,171,747.00 |                0.87 |    0.5% |     12.73 | `EvictionProtection3Networks100Candidates`\r\n|    2,900,919,398.00 |                0.34 |    1.3% |     31.93 | `EvictionProtection3Networks250Candidates`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|      714,684,192.00 |                1.40 |    1.0% |      7.91 | `EvictionProtection1Network250Candidates`\r\n|    1,296,579,234.00 |                0.77 |    0.5% |     14.22 | `EvictionProtection3Networks050Candidates`\r\n|    1,159,393,440.00 |                0.86 |    0.7% |     12.71 | `EvictionProtection3Networks100Candidates`\r\n|    2,854,527,930.00 |                0.35 |    0.7% |     31.44 | `EvictionProtection3Networks250Candidates`\r\n```\r\n\r\n99a25fb393 `p2p: iterate over eviction candidates once instead of thrice`\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|      709,622,212.00 |                1.41 |    1.0% |      7.79 | `EvictionProtection1Network250Candidates`\r\n|    1,310,376,054.00 |                0.76 |    1.2% |     14.39 | `EvictionProtection3Networks050Candidates`\r\n|    1,160,800,660.00 |                0.86 |    0.4% |     12.72 | `EvictionProtection3Networks100Candidates`\r\n|    2,983,258,845.00 |                0.34 |    0.5% |     32.71 | `EvictionProtection3Networks250Candidates`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|      711,091,374.00 |                1.41 |    0.5% |      7.82 | `EvictionProtection1Network250Candidates`\r\n|    1,318,781,548.00 |                0.76 |    0.3% |     14.38 | `EvictionProtection3Networks050Candidates`\r\n|    1,142,837,118.00 |                0.88 |    0.2% |     12.40 | `EvictionProtection3Networks100Candidates`\r\n|    2,943,154,182.00 |                0.34 |    0.4% |     32.22 | `EvictionProtection3Networks250Candidates`\r\n```",
      "commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "created_at" : "2021-06-30T10:44:33Z",
      "diff_hunk" : "@@ -921,11 +921,13 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n         {{false, NET_I2P, 0}, {/* localhost */ true, NET_MAX, 0}, {false, NET_ONION, 0}}};\n \n     // Count and store the number of eviction candidates per network.\n-    for (Net& n : networks) {\n-        n.count = std::count_if(eviction_candidates.cbegin(), eviction_candidates.cend(),\n-                                [&n](const NodeEvictionCandidate& c) {\n-                                    return n.is_local ? c.m_is_local : c.m_network == n.id;\n-                                });\n+    for (auto& c : eviction_candidates) {\n+        for (int i{networks.size() - 1}; i >= 0; --i) {\n+            if (networks[i].is_local ? c.m_is_local : c.m_network == networks[i].id) {\n+                ++networks[i].count;\n+                break;\n+            }\n+        }\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r661341225",
      "id" : 661341225,
      "in_reply_to_id" : 661294200,
      "line" : 931,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTM0MTIyNQ==",
      "original_commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "original_line" : 931,
      "original_position" : 16,
      "original_start_line" : 924,
      "path" : "src/net.cpp",
      "position" : 16,
      "pull_request_review_id" : 695969918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284",
      "side" : "RIGHT",
      "start_line" : 924,
      "start_side" : "LEFT",
      "updated_at" : "2021-06-30T10:44:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/661341225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r662277055"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662277055"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done (thanks!)",
      "commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "created_at" : "2021-07-01T13:13:17Z",
      "diff_hunk" : "@@ -0,0 +1,169 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <random.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int num_peers, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates;\n+    for (int id = 0; id < num_peers; ++id) {\n+        candidates.push_back({\n+            /* id */ id,\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* m_min_ping_time */ std::chrono::microseconds{random_context.randrange(100)},\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* fRelevantServices */ random_context.randbool(),\n+            /* fRelayTxes */ random_context.randbool(),\n+            /* fBloomFilter */ random_context.randbool(),\n+            /* nKeyedNetGroup */ random_context.randrange(100),\n+            /* prefer_evict */ random_context.randbool(),\n+            /* m_is_local */ random_context.randbool(),\n+            /* m_network */ ALL_NETWORKS[random_context.randrange(ALL_NETWORKS.size())],\n+        });\n+    }\n+    return candidates;\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r662277055",
      "id" : 662277055,
      "in_reply_to_id" : 661275001,
      "line" : 36,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjI3NzA1NQ==",
      "original_commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "original_line" : 36,
      "original_position" : 36,
      "original_start_line" : 16,
      "path" : "src/bench/peer_eviction.cpp",
      "position" : 36,
      "pull_request_review_id" : 697227746,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284",
      "side" : "RIGHT",
      "start_line" : 16,
      "start_side" : "RIGHT",
      "updated_at" : "2021-07-01T13:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662277055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r662283296"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662283296"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I tried this, and am playing with your proposal that looks good! but as before when I was trying to use these options, nanobench kept saying it was unstable and to increase the iterations, beyond even the numbers I settled on in my manual loops that yielded slowish but stableish results for me.\r\n```\r\n:wavy_dash: ... (Unstable with ~1,000.0 iters. Increase `minEpochIterations` to e.g. 10000)\r\n:wavy_dash: ... (Unstable with ~1,000.0 iters. Increase `minEpochIterations` to e.g. 10000)\r\n```\r\nSo I'm still looking at this and may punt on using the options.  \r\n\r\nYes, I benched the data copying alone, and it seemed insignificant relative to the call under test, not worth messing with by making (potentially many, e.g. 100k) copies instead.  That could be ok if we don't need so many copies, so I understand why you proposed reducing the number of iters.",
      "commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "created_at" : "2021-07-01T13:21:12Z",
      "diff_hunk" : "@@ -0,0 +1,169 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <random.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int num_peers, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates;\n+    for (int id = 0; id < num_peers; ++id) {\n+        candidates.push_back({\n+            /* id */ id,\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* m_min_ping_time */ std::chrono::microseconds{random_context.randrange(100)},\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* fRelevantServices */ random_context.randbool(),\n+            /* fRelayTxes */ random_context.randbool(),\n+            /* fBloomFilter */ random_context.randbool(),\n+            /* nKeyedNetGroup */ random_context.randrange(100),\n+            /* prefer_evict */ random_context.randbool(),\n+            /* m_is_local */ random_context.randbool(),\n+            /* m_network */ ALL_NETWORKS[random_context.randrange(ALL_NETWORKS.size())],\n+        });\n+    }\n+    return candidates;\n+}\n+\n+static std::vector<NodeEvictionCandidate> CreateEvictionCandidates(int num_peers, std::function<void(NodeEvictionCandidate&)> candidate_setup_fn, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates{GetRandomNodeEvictionCandidates(num_peers, random_context)};\n+    for (NodeEvictionCandidate& candidate : candidates) {\n+        candidate_setup_fn(candidate);\n+    }\n+    return candidates;\n+}\n+\n+/* Benchmarks */\n+\n+static void EvictionProtection1Network250Candidates(benchmark::Bench& bench)\n+{\n+    const int num_peers{250};\n+    FastRandomContext random_context{true};\n+\n+    const std::vector<NodeEvictionCandidate> eviction_candidates{\n+        CreateEvictionCandidates(\n+            num_peers, [](NodeEvictionCandidate& c) {\n+                c.nTimeConnected = c.id;\n+                c.m_is_local = false;\n+                if (c.id >= 130 && c.id < 240) { // 110 Tor\n+                    c.m_network = NET_ONION;\n+                } else {\n+                    c.m_network = NET_IPV6;\n+                }\n+            },\n+            random_context)};\n+\n+    bench.run([&] {\n+        std::vector<NodeEvictionCandidate> candidates;\n+        for (int id = 0; id < 60000; ++id) {\n+            candidates = eviction_candidates;\n+            ProtectEvictionCandidatesByRatio(candidates);\n+        }\n+    });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r662283296",
      "id" : 662283296,
      "in_reply_to_id" : 661285594,
      "line" : 73,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjI4MzI5Ng==",
      "original_commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "original_line" : 73,
      "original_position" : 73,
      "original_start_line" : 67,
      "path" : "src/bench/peer_eviction.cpp",
      "position" : 73,
      "pull_request_review_id" : 697236534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284",
      "side" : "RIGHT",
      "start_line" : 67,
      "start_side" : "RIGHT",
      "updated_at" : "2021-07-01T13:22:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662283296",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r662288417"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662288417"
         }
      },
      "author_association" : "MEMBER",
      "body" : "99a25fb393c791bb6b6edeab3677d39bf6b1d97d I agree that it's probably not worth it.",
      "commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "created_at" : "2021-07-01T13:27:36Z",
      "diff_hunk" : "@@ -921,11 +921,13 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n         {{false, NET_I2P, 0}, {/* localhost */ true, NET_MAX, 0}, {false, NET_ONION, 0}}};\n \n     // Count and store the number of eviction candidates per network.\n-    for (Net& n : networks) {\n-        n.count = std::count_if(eviction_candidates.cbegin(), eviction_candidates.cend(),\n-                                [&n](const NodeEvictionCandidate& c) {\n-                                    return n.is_local ? c.m_is_local : c.m_network == n.id;\n-                                });\n+    for (auto& c : eviction_candidates) {\n+        for (int i{networks.size() - 1}; i >= 0; --i) {\n+            if (networks[i].is_local ? c.m_is_local : c.m_network == networks[i].id) {\n+                ++networks[i].count;\n+                break;\n+            }\n+        }\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r662288417",
      "id" : 662288417,
      "in_reply_to_id" : 661294200,
      "line" : 931,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjI4ODQxNw==",
      "original_commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "original_line" : 931,
      "original_position" : 16,
      "original_start_line" : 924,
      "path" : "src/net.cpp",
      "position" : 16,
      "pull_request_review_id" : 697243615,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284",
      "side" : "RIGHT",
      "start_line" : 924,
      "start_side" : "LEFT",
      "updated_at" : "2021-07-01T13:27:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662288417",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r662428128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662428128"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Here are some numbers:\r\n\r\n* `sizeof(NodeEvictionCandidate)` is 64\r\n* number of candidates is 250\r\n* the current test contains 60k iterations\r\n\r\nSo that would make 64 * 250 * 60000 = 916 MiB.\r\n\r\nIn the changes above I suggested 10 epochs * 100 iterations (1000 copies): 64 * 250 * 1000 = 15 MiB.\r\n\r\n> so I understand why you proposed reducing the number of iters\r\n\r\nYes, I was concerned about the memory usage, but also I stopped getting the \"unstable results\" warning at around 500 iters so I decided to double it to 1000 just in case, since 15 MiB is not too much. I guess a few times more than that would also be ok.",
      "commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "created_at" : "2021-07-01T16:18:27Z",
      "diff_hunk" : "@@ -0,0 +1,169 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <random.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int num_peers, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates;\n+    for (int id = 0; id < num_peers; ++id) {\n+        candidates.push_back({\n+            /* id */ id,\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* m_min_ping_time */ std::chrono::microseconds{random_context.randrange(100)},\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* fRelevantServices */ random_context.randbool(),\n+            /* fRelayTxes */ random_context.randbool(),\n+            /* fBloomFilter */ random_context.randbool(),\n+            /* nKeyedNetGroup */ random_context.randrange(100),\n+            /* prefer_evict */ random_context.randbool(),\n+            /* m_is_local */ random_context.randbool(),\n+            /* m_network */ ALL_NETWORKS[random_context.randrange(ALL_NETWORKS.size())],\n+        });\n+    }\n+    return candidates;\n+}\n+\n+static std::vector<NodeEvictionCandidate> CreateEvictionCandidates(int num_peers, std::function<void(NodeEvictionCandidate&)> candidate_setup_fn, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates{GetRandomNodeEvictionCandidates(num_peers, random_context)};\n+    for (NodeEvictionCandidate& candidate : candidates) {\n+        candidate_setup_fn(candidate);\n+    }\n+    return candidates;\n+}\n+\n+/* Benchmarks */\n+\n+static void EvictionProtection1Network250Candidates(benchmark::Bench& bench)\n+{\n+    const int num_peers{250};\n+    FastRandomContext random_context{true};\n+\n+    const std::vector<NodeEvictionCandidate> eviction_candidates{\n+        CreateEvictionCandidates(\n+            num_peers, [](NodeEvictionCandidate& c) {\n+                c.nTimeConnected = c.id;\n+                c.m_is_local = false;\n+                if (c.id >= 130 && c.id < 240) { // 110 Tor\n+                    c.m_network = NET_ONION;\n+                } else {\n+                    c.m_network = NET_IPV6;\n+                }\n+            },\n+            random_context)};\n+\n+    bench.run([&] {\n+        std::vector<NodeEvictionCandidate> candidates;\n+        for (int id = 0; id < 60000; ++id) {\n+            candidates = eviction_candidates;\n+            ProtectEvictionCandidatesByRatio(candidates);\n+        }\n+    });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r662428128",
      "id" : 662428128,
      "in_reply_to_id" : 661285594,
      "line" : 73,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjQyODEyOA==",
      "original_commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "original_line" : 73,
      "original_position" : 73,
      "original_start_line" : 67,
      "path" : "src/bench/peer_eviction.cpp",
      "position" : 73,
      "pull_request_review_id" : 697435315,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284",
      "side" : "RIGHT",
      "start_line" : 67,
      "start_side" : "RIGHT",
      "updated_at" : "2021-07-01T16:18:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662428128",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r663886898"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663886898"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Two random thoughts:\r\n\r\n1. Do you get \"unstable results\" warnings when running other benchmarks from `src/bench`?\r\n2. Nanobench's [`warmup()`](https://nanobench.ankerl.com/reference.html#_CPPv4N6ankerl9nanobench5Bench6warmupE8uint64_t) may help?",
      "commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "created_at" : "2021-07-05T12:18:56Z",
      "diff_hunk" : "@@ -0,0 +1,169 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <random.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int num_peers, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates;\n+    for (int id = 0; id < num_peers; ++id) {\n+        candidates.push_back({\n+            /* id */ id,\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* m_min_ping_time */ std::chrono::microseconds{random_context.randrange(100)},\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* fRelevantServices */ random_context.randbool(),\n+            /* fRelayTxes */ random_context.randbool(),\n+            /* fBloomFilter */ random_context.randbool(),\n+            /* nKeyedNetGroup */ random_context.randrange(100),\n+            /* prefer_evict */ random_context.randbool(),\n+            /* m_is_local */ random_context.randbool(),\n+            /* m_network */ ALL_NETWORKS[random_context.randrange(ALL_NETWORKS.size())],\n+        });\n+    }\n+    return candidates;\n+}\n+\n+static std::vector<NodeEvictionCandidate> CreateEvictionCandidates(int num_peers, std::function<void(NodeEvictionCandidate&)> candidate_setup_fn, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates{GetRandomNodeEvictionCandidates(num_peers, random_context)};\n+    for (NodeEvictionCandidate& candidate : candidates) {\n+        candidate_setup_fn(candidate);\n+    }\n+    return candidates;\n+}\n+\n+/* Benchmarks */\n+\n+static void EvictionProtection1Network250Candidates(benchmark::Bench& bench)\n+{\n+    const int num_peers{250};\n+    FastRandomContext random_context{true};\n+\n+    const std::vector<NodeEvictionCandidate> eviction_candidates{\n+        CreateEvictionCandidates(\n+            num_peers, [](NodeEvictionCandidate& c) {\n+                c.nTimeConnected = c.id;\n+                c.m_is_local = false;\n+                if (c.id >= 130 && c.id < 240) { // 110 Tor\n+                    c.m_network = NET_ONION;\n+                } else {\n+                    c.m_network = NET_IPV6;\n+                }\n+            },\n+            random_context)};\n+\n+    bench.run([&] {\n+        std::vector<NodeEvictionCandidate> candidates;\n+        for (int id = 0; id < 60000; ++id) {\n+            candidates = eviction_candidates;\n+            ProtectEvictionCandidatesByRatio(candidates);\n+        }\n+    });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r663886898",
      "id" : 663886898,
      "in_reply_to_id" : 661285594,
      "line" : 73,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mzg4Njg5OA==",
      "original_commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "original_line" : 73,
      "original_position" : 73,
      "original_start_line" : 67,
      "path" : "src/bench/peer_eviction.cpp",
      "position" : 73,
      "pull_request_review_id" : 699119908,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284",
      "side" : "RIGHT",
      "start_line" : 67,
      "start_side" : "RIGHT",
      "updated_at" : "2021-07-05T12:18:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663886898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r664666909"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664666909"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Reorganized to be step by step, with no anticipatory changes.",
      "commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "created_at" : "2021-07-06T15:35:18Z",
      "diff_hunk" : "@@ -936,27 +938,34 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     size_t num_protected{0};\n \n     while (num_protected < max_protect_by_network) {\n+        // Count the number of disadvantaged networks from which we have peers to protect.\n+        auto num_networks = std::count_if(networks.begin(), networks.end(), [](const Net& n) { return n.count; });\n+        if (num_networks == 0) {\n+            break;\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r664666909",
      "id" : 664666909,
      "in_reply_to_id" : 661302739,
      "line" : 945,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDY2NjkwOQ==",
      "original_commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "original_line" : 945,
      "original_position" : 27,
      "original_start_line" : 940,
      "path" : "src/net.cpp",
      "position" : 27,
      "pull_request_review_id" : 700104496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284",
      "side" : "RIGHT",
      "start_line" : 940,
      "start_side" : "RIGHT",
      "updated_at" : "2021-07-06T15:35:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664666909",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r664667111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664667111"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Dropped.",
      "commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "created_at" : "2021-07-06T15:35:32Z",
      "diff_hunk" : "@@ -921,11 +921,13 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n         {{false, NET_I2P, 0}, {/* localhost */ true, NET_MAX, 0}, {false, NET_ONION, 0}}};\n \n     // Count and store the number of eviction candidates per network.\n-    for (Net& n : networks) {\n-        n.count = std::count_if(eviction_candidates.cbegin(), eviction_candidates.cend(),\n-                                [&n](const NodeEvictionCandidate& c) {\n-                                    return n.is_local ? c.m_is_local : c.m_network == n.id;\n-                                });\n+    for (auto& c : eviction_candidates) {\n+        for (int i{networks.size() - 1}; i >= 0; --i) {\n+            if (networks[i].is_local ? c.m_is_local : c.m_network == networks[i].id) {\n+                ++networks[i].count;\n+                break;\n+            }\n+        }\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r664667111",
      "id" : 664667111,
      "in_reply_to_id" : 661294200,
      "line" : 931,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDY2NzExMQ==",
      "original_commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "original_line" : 931,
      "original_position" : 16,
      "original_start_line" : 924,
      "path" : "src/net.cpp",
      "position" : 16,
      "pull_request_review_id" : 700104762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284",
      "side" : "RIGHT",
      "start_line" : 924,
      "start_side" : "LEFT",
      "updated_at" : "2021-07-06T15:35:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664667111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r664668934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664668934"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've tuned my system for benchmarking, and nevertheless, any iterations less than in my original proposal still return bench error rates above 5%, often 10-25%, rendering the benchmark somewhat useless for me.\r\n\r\nI'm going to consider that my system (2 physical cores, 4 logical ones, with an open source coreboot) is unusual and unsuited to running these benchmarks and use this feedback provided that reviewers find the results stable for them.",
      "commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "created_at" : "2021-07-06T15:37:46Z",
      "diff_hunk" : "@@ -0,0 +1,169 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <random.h>\n+#include <test/util/net.h>\n+#include <test/util/setup_common.h>\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int num_peers, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates;\n+    for (int id = 0; id < num_peers; ++id) {\n+        candidates.push_back({\n+            /* id */ id,\n+            /* nTimeConnected */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* m_min_ping_time */ std::chrono::microseconds{random_context.randrange(100)},\n+            /* nLastBlockTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* nLastTXTime */ static_cast<int64_t>(random_context.randrange(100)),\n+            /* fRelevantServices */ random_context.randbool(),\n+            /* fRelayTxes */ random_context.randbool(),\n+            /* fBloomFilter */ random_context.randbool(),\n+            /* nKeyedNetGroup */ random_context.randrange(100),\n+            /* prefer_evict */ random_context.randbool(),\n+            /* m_is_local */ random_context.randbool(),\n+            /* m_network */ ALL_NETWORKS[random_context.randrange(ALL_NETWORKS.size())],\n+        });\n+    }\n+    return candidates;\n+}\n+\n+static std::vector<NodeEvictionCandidate> CreateEvictionCandidates(int num_peers, std::function<void(NodeEvictionCandidate&)> candidate_setup_fn, FastRandomContext& random_context)\n+{\n+    std::vector<NodeEvictionCandidate> candidates{GetRandomNodeEvictionCandidates(num_peers, random_context)};\n+    for (NodeEvictionCandidate& candidate : candidates) {\n+        candidate_setup_fn(candidate);\n+    }\n+    return candidates;\n+}\n+\n+/* Benchmarks */\n+\n+static void EvictionProtection1Network250Candidates(benchmark::Bench& bench)\n+{\n+    const int num_peers{250};\n+    FastRandomContext random_context{true};\n+\n+    const std::vector<NodeEvictionCandidate> eviction_candidates{\n+        CreateEvictionCandidates(\n+            num_peers, [](NodeEvictionCandidate& c) {\n+                c.nTimeConnected = c.id;\n+                c.m_is_local = false;\n+                if (c.id >= 130 && c.id < 240) { // 110 Tor\n+                    c.m_network = NET_ONION;\n+                } else {\n+                    c.m_network = NET_IPV6;\n+                }\n+            },\n+            random_context)};\n+\n+    bench.run([&] {\n+        std::vector<NodeEvictionCandidate> candidates;\n+        for (int id = 0; id < 60000; ++id) {\n+            candidates = eviction_candidates;\n+            ProtectEvictionCandidatesByRatio(candidates);\n+        }\n+    });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#discussion_r664668934",
      "id" : 664668934,
      "in_reply_to_id" : 661285594,
      "line" : 73,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDY2ODkzNA==",
      "original_commit_id" : "ab2993336fbdff72d125f906c2baec4c5dcb79e3",
      "original_line" : 73,
      "original_position" : 73,
      "original_start_line" : 67,
      "path" : "src/bench/peer_eviction.cpp",
      "position" : 73,
      "pull_request_review_id" : 700107138,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22284",
      "side" : "RIGHT",
      "start_line" : 67,
      "start_side" : "RIGHT",
      "updated_at" : "2021-07-06T15:37:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664668934",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thank you @vasild, @jarolrod, @klementtan and @theStack; feedback taken (and rebased, apologies).",
      "created_at" : "2021-07-06T16:46:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#issuecomment-874919226",
      "id" : 874919226,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22284",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NDkxOTIyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-06T16:46:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/874919226",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Tested on 524aa5dc6a6f20f2fd16a63bd1356d577794d510\r\n- Didn't notice any significant improvement with c0d658f1806a81ae5bf20355861979eb7f7ea1f4\r\n- d2bb6231aaa798590b85700e03dac79f32204aec reduced time for `EvictionProtection1Network250Candidates` by about **40%**\r\n- Didn't notice any significant improvement with edc59d08fc57f5f10657a044224a0b3ae2d2b9bc\r\n- 524aa5dc6a6f20f2fd16a63bd1356d577794d510 reduced time for `EvictionProtection3Networks050Candidates` by about **50%**, `EvictionProtection3Networks100Candidates` by about **40%** and `EvictionProtection3Networks250Candidates` by about **75%**\r\n- Not sure if it is intended but the warning message `:wavy_dash: EvictionProtection3Networks100Candidates (Unstable with ~100.0 iters. Increase minEpochIterations to e.g. 1000)` seems to be quite flaky\r\n\r\n<details> \r\n<summary> Bench Results </summary>\r\n\r\n\r\n**Note:** Results are in reverse chronological order of commits\r\n\r\n<details>\r\n<summary>Master + Bench(edebbe7375de02df544ba9c2b566d62b435c0ab1) results </summary>\r\n\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           14,383.08 |           69,526.14 |    5.1% |      0.02 | :wavy_dash: `EvictionProtection1Network250Candidates` (Unstable with ~100.0 iters. Increase `minEpochIterations` to e.g. 1000)\r\n|            5,818.85 |          171,855.12 |    0.3% |      0.01 | `EvictionProtection3Networks050Candidates`\r\n|           13,127.23 |           76,177.56 |    1.8% |      0.01 | `EvictionProtection3Networks100Candidates`\r\n|           92,835.73 |           10,771.71 |    7.0% |      0.09 | :wavy_dash: `EvictionProtection3Networks250Candidates` (Unstable with ~100.0 iters. Increase `minEpochIterations` to e.g. 1000)\r\n```\r\n\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>c0d658f1806a81ae5bf20355861979eb7f7ea1f4 results </summary>\r\n\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           13,408.72 |           74,578.36 |    1.7% |      0.01 | `EvictionProtection1Network250Candidates`\r\n|            5,610.19 |          178,247.08 |    0.1% |      0.01 | `EvictionProtection3Networks050Candidates`\r\n|           13,536.82 |           73,872.57 |    6.3% |      0.01 | :wavy_dash: `EvictionProtection3Networks100Candidates` (Unstable with ~100.0 iters. Increase `minEpochIterations` to e.g. 1000)\r\n|           87,720.01 |           11,399.91 |    2.2% |      0.09 | `EvictionProtection3Networks250Candidates`\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>d2bb6231aaa798590b85700e03dac79f32204aec results </summary>\r\n\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|            8,080.88 |          123,748.98 |    2.8% |      0.01 | `EvictionProtection1Network250Candidates`\r\n|            5,650.52 |          176,974.71 |    0.1% |      0.01 | `EvictionProtection3Networks050Candidates`\r\n|           13,847.64 |           72,214.45 |   11.6% |      0.01 | :wavy_dash: `EvictionProtection3Networks100Candidates` (Unstable with ~100.0 iters. Increase `minEpochIterations` to e.g. 1000)\r\n|           88,185.71 |           11,339.71 |    1.8% |      0.09 | `EvictionProtection3Networks250Candidates`\r\n```\r\n</details>\r\n\r\n\r\n<details>\r\n<summary> edc59d08fc57f5f10657a044224a0b3ae2d2b9bc resutls</summary>\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|            7,874.32 |          126,995.09 |    0.9% |      0.01 | `EvictionProtection1Network250Candidates`\r\n|            5,736.20 |          174,331.44 |    1.0% |      0.01 | `EvictionProtection3Networks050Candidates`\r\n|           13,836.98 |           72,270.11 |    9.0% |      0.02 | :wavy_dash: `EvictionProtection3Networks100Candidates` (Unstable with ~100.0 iters. Increase `minEpochIterations` to e.g. 1000)\r\n|           98,370.21 |           10,165.68 |    5.4% |      0.10 | :wavy_dash: `EvictionProtection3Networks250Candidates` (Unstable with ~100.0 iters. Increase `minEpochIterations` to e.g. 1000)\r\n```\r\n</details>\r\n\r\n\r\n<details>\r\n<summary> 524aa5dc6a6f20f2fd16a63bd1356d577794d510 results </summary>\r\n\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|            7,854.82 |          127,310.36 |    0.6% |      0.01 | `EvictionProtection1Network250Candidates`\r\n|            2,774.58 |          360,414.26 |    0.1% |      0.00 | `EvictionProtection3Networks050Candidates`\r\n|            8,513.58 |          117,459.47 |    0.1% |      0.01 | `EvictionProtection3Networks100Candidates`\r\n|           22,571.88 |           44,302.90 |   10.1% |      0.02 | :wavy_dash: `EvictionProtection3Networks250Candidates` (Unstable with ~100.0 iters. Increase `minEpochIterations` to e.g. 1000)\r\n```\r\n</details>\r\n</details>",
      "created_at" : "2021-07-07T01:41:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#issuecomment-875202761",
      "id" : 875202761,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22284",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NTIwMjc2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-08T13:49:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875202761",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/49265907?v=4",
         "events_url" : "https://api.github.com/users/klementtan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/klementtan/followers",
         "following_url" : "https://api.github.com/users/klementtan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/klementtan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/klementtan",
         "id" : 49265907,
         "login" : "klementtan",
         "node_id" : "MDQ6VXNlcjQ5MjY1OTA3",
         "organizations_url" : "https://api.github.com/users/klementtan/orgs",
         "received_events_url" : "https://api.github.com/users/klementtan/received_events",
         "repos_url" : "https://api.github.com/users/klementtan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/klementtan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/klementtan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/klementtan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for testing @klementtan!\r\n\r\n> Didn't notice any significant improvement with [c0d658f](https://github.com/bitcoin/bitcoin/commit/c0d658f1806a81ae5bf20355861979eb7f7ea1f4)\r\n\r\nThanks for pointing this out. The benchmarks don't test it. Will look at adding a bench with no protected networks.\r\n\r\n> Didn't notice any significant improvement with [edc59d0](https://github.com/bitcoin/bitcoin/commit/edc59d08fc57f5f10657a044224a0b3ae2d2b9bc)\r\n\r\nThis commit doesn't help performance <strike>but fixes an off-by-one in the logic that doesn't affect the protection currently, but without it, the last commit would fail the `node_eviction` fuzzer by trying to save (1 - 2) = -1 into `Net::count`, which is `size_t` (unsigned long).</strike> The CI initially reported this, but I can no longer reproduce it locally (thanks @vasild for testing this) and have dropped the commit.\r\n\r\n> Not sure if it is intended but the warning message `:wavy_dash: EvictionProtection3Networks100Candidates (Unstable with ~100.0 iters. Increase `minEpochIterations` to e.g. 1000)` seems to be quite flaky\r\n\r\nThanks for reporting.  The benchmark was sped up in the last push, but am looking at maybe increasing the iterations to improve this.\r\n",
      "created_at" : "2021-07-07T11:23:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#issuecomment-875523082",
      "id" : 875523082,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22284",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NTUyMzA4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-08T13:52:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875523082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated per `git diff 524aa5d b1d905c`\r\n- adjusted the benchmarks to use the default `Epochs` of 11, increased the `epochIterations` from 100 to 1000, and added a warmup of 100; I didn't find a magic sweet spot (I have to run it several times) but this seems to improve the `err%` somewhat while keeping the benchmark fast\r\n- added two benchmarks, EvictionProtection0Networks250Candidates and EvictionProtection2Networks250Candidates\r\n- dropped commit https://github.com/bitcoin/bitcoin/commit/edc59d08fc57f5f10657a044224a0b3ae2d2b9bc \"p2p: don't protect more than the network candidates count\"\r\n\r\n<details><summary>benchmark results, CPU 2.50GHz, Turbo off, performance mode, Debian Clang 11 non-debug build, lowest <code>err%</code> runs of several</summary><p>\r\n\r\n```\r\n5adb064 bench: add peer eviction protection benchmarks\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           74,657.56 |           13,394.49 |    2.5% |      0.85 | `EvictionProtection0Networks250Candidates`\r\n|           71,502.14 |           13,985.60 |    1.1% |      0.78 | `EvictionProtection1Networks250Candidates`\r\n|           74,242.65 |           13,469.35 |    2.1% |      0.88 | `EvictionProtection2Networks250Candidates`\r\n|            9,280.36 |          107,754.43 |    3.0% |      0.11 | `EvictionProtection3Networks050Candidates`\r\n|           22,320.52 |           44,801.83 |    2.5% |      0.25 | `EvictionProtection3Networks100Candidates`\r\n|          149,821.48 |            6,674.61 |    2.7% |      1.64 | `EvictionProtection3Networks250Candidates`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           73,715.17 |           13,565.73 |    1.9% |      0.82 | `EvictionProtection0Networks250Candidates`\r\n|           71,505.03 |           13,985.03 |    1.7% |      0.79 | `EvictionProtection1Networks250Candidates`\r\n|           74,924.25 |           13,346.81 |    2.6% |      0.86 | `EvictionProtection2Networks250Candidates`\r\n|            9,493.08 |          105,339.84 |    4.4% |      0.11 | `EvictionProtection3Networks050Candidates`\r\n|           23,528.00 |           42,502.55 |    2.7% |      0.26 | `EvictionProtection3Networks100Candidates`\r\n|          148,696.37 |            6,725.11 |    0.6% |      1.68 | `EvictionProtection3Networks250Candidates`\r\n\r\n\r\nb1d905c p2p: earlier continuation when no remaining eviction candidates\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           19,051.62 |           52,488.98 |    2.6% |      0.21 | `EvictionProtection0Networks250Candidates`\r\n|           25,607.00 |           39,051.82 |    1.9% |      0.28 | `EvictionProtection1Networks250Candidates`\r\n|           31,392.03 |           31,855.22 |    3.5% |      0.40 | `EvictionProtection2Networks250Candidates`\r\n|            4,873.49 |          205,191.84 |    2.1% |      0.06 | `EvictionProtection3Networks050Candidates`\r\n|           13,827.88 |           72,317.64 |    3.9% |      0.16 | `EvictionProtection3Networks100Candidates`\r\n|           34,605.17 |           28,897.42 |    1.5% |      0.39 | `EvictionProtection3Networks250Candidates`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           19,255.11 |           51,934.26 |    2.9% |      0.21 | `EvictionProtection0Networks250Candidates`\r\n|           26,797.82 |           37,316.47 |    3.4% |      0.30 | `EvictionProtection1Networks250Candidates`\r\n|           31,007.27 |           32,250.50 |    1.8% |      0.35 | `EvictionProtection2Networks250Candidates`\r\n|            5,075.53 |          197,023.62 |    3.3% |      0.06 | `EvictionProtection3Networks050Candidates`\r\n|           13,964.15 |           71,611.94 |    3.5% |      0.16 | `EvictionProtection3Networks100Candidates`\r\n|           34,294.63 |           29,159.08 |    1.6% |      0.39 | `EvictionProtection3Networks250Candidates`\r\n```\r\n</p></details>\r\n\r\nIt looks like the performance gains of 2x-5x will be even higher when additional disadvantaged networks are added.",
      "created_at" : "2021-07-08T10:25:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#issuecomment-876322380",
      "id" : 876322380,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22284",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NjMyMjM4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-08T14:02:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876322380",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Tested and code review ACK b1d905c2. \r\n\r\nAlso no longer seeing `... Unstable with ~100.0 iters. Increase minEpochIterations to e.g. 1000)` warning. \r\n\r\n<details>\r\n<summary> Bench results </summary>\r\n\r\n5adb0645:\r\n\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           18,612.89 |           53,726.22 |    1.3% |      0.21 | `EvictionProtection0Networks250Candidates`\r\n|           15,604.12 |           64,085.64 |    1.1% |      0.17 | `EvictionProtection1Networks250Candidates`\r\n|           46,098.96 |           21,692.46 |    1.4% |      0.51 | `EvictionProtection2Networks250Candidates`\r\n|            7,573.28 |          132,043.17 |    2.2% |      0.09 | `EvictionProtection3Networks050Candidates`\r\n|           16,631.50 |           60,126.87 |    3.2% |      0.18 | `EvictionProtection3Networks100Candidates`\r\n|           97,775.81 |           10,227.48 |    3.3% |      1.09 | `EvictionProtection3Networks250Candidates`\r\n```\r\n\r\n02e411ec\r\n```\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           18,389.64 |           54,378.44 |    1.7% |      0.20 | `EvictionProtection0Networks250Candidates`\r\n|           13,869.52 |           72,100.52 |    1.3% |      0.15 | `EvictionProtection1Networks250Candidates`\r\n|           46,016.06 |           21,731.55 |    3.4% |      0.50 | `EvictionProtection2Networks250Candidates`\r\n|            6,408.73 |          156,037.13 |    3.6% |      0.07 | `EvictionProtection3Networks050Candidates`\r\n|           16,160.17 |           61,880.55 |    2.1% |      0.18 | `EvictionProtection3Networks100Candidates`\r\n|           96,984.48 |           10,310.93 |    4.5% |      1.07 | `EvictionProtection3Networks250Candidates`\r\n```\r\n\r\nc9e8d8f9\r\n```\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           13,422.68 |           74,500.80 |    1.3% |      0.15 | `EvictionProtection0Networks250Candidates`\r\n|           10,170.63 |           98,322.35 |    1.5% |      0.11 | `EvictionProtection1Networks250Candidates`\r\n|           17,204.80 |           58,123.30 |    1.0% |      0.19 | `EvictionProtection2Networks250Candidates`\r\n|            7,508.82 |          133,176.80 |    2.6% |      0.08 | `EvictionProtection3Networks050Candidates`\r\n|           16,172.34 |           61,833.97 |    1.1% |      0.17 | `EvictionProtection3Networks100Candidates`\r\n|           95,083.59 |           10,517.06 |    4.0% |      1.05 | `EvictionProtection3Networks250Candidates`\r\n\r\n```\r\nb1d905c2\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           23,721.76 |           42,155.39 |    1.2% |      0.27 | `EvictionProtection0Networks250Candidates`\r\n|           17,557.76 |           56,954.87 |    0.2% |      0.20 | `EvictionProtection1Networks250Candidates`\r\n|           29,148.45 |           34,307.14 |    0.4% |      0.33 | `EvictionProtection2Networks250Candidates`\r\n|            6,159.56 |          162,349.31 |    0.1% |      0.07 | `EvictionProtection3Networks050Candidates`\r\n|           19,989.47 |           50,026.33 |    0.6% |      0.22 | `EvictionProtection3Networks100Candidates`\r\n|           42,009.48 |           23,804.15 |    0.8% |      0.47 | `EvictionProtection3Networks250Candidates`\r\n```\r\n</details>",
      "created_at" : "2021-07-08T13:49:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#issuecomment-876455300",
      "id" : 876455300,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22284",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NjQ1NTMwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-08T13:49:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876455300",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/49265907?v=4",
         "events_url" : "https://api.github.com/users/klementtan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/klementtan/followers",
         "following_url" : "https://api.github.com/users/klementtan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/klementtan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/klementtan",
         "id" : 49265907,
         "login" : "klementtan",
         "node_id" : "MDQ6VXNlcjQ5MjY1OTA3",
         "organizations_url" : "https://api.github.com/users/klementtan/orgs",
         "received_events_url" : "https://api.github.com/users/klementtan/received_events",
         "repos_url" : "https://api.github.com/users/klementtan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/klementtan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/klementtan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/klementtan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Not sure what to make of it because I'm running the `macOS 12` Beta (not a super stable system overall).\r\n\r\nYes, I tuned my system and yet still see that most of the time on at least half of the benchmarks when running all of them with `./src/bench/bench_bitcoin`.  It came down to the preference of being able to run these new benchmarks 10 times in ~20 seconds rather than once in 30-60 seconds, and having a rapid result that works for the most people.  There just seems to be decreasing utility in adding iterations.",
      "created_at" : "2021-07-09T15:56:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22284#issuecomment-877286823",
      "id" : 877286823,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22284",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NzI4NjgyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-09T15:56:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/877286823",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   }
]
