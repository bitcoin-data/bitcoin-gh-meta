[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.\r\n\r\nI'm wondering if it would make sense to test this behaviour in `functional/mempool_unbroadcast.py`? If so, I wouldn't mind doing a follow-up PR :)",
      "created_at" : "2021-06-16T20:12:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-862680790",
      "id" : 862680790,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MjY4MDc5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-16T20:12:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862680790",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/duncandean/events{/privacy}",
         "followers_url" : "https://api.github.com/users/duncandean/followers",
         "following_url" : "https://api.github.com/users/duncandean/following{/other_user}",
         "gists_url" : "https://api.github.com/users/duncandean/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/duncandean",
         "id" : 3072149,
         "login" : "duncandean",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/duncandean/orgs",
         "received_events_url" : "https://api.github.com/users/duncandean/received_events",
         "repos_url" : "https://api.github.com/users/duncandean/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/duncandean/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/duncandean/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/duncandean"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2021-06-16T23:43:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-862804025",
      "id" : 862804025,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MjgwNDAyNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-10T12:18:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862804025",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@duncandean I agree a test would be very useful here. If you want to have a go at writing it, please go ahead and I can add it to this PR. If not, I'll try to write one next week.",
      "created_at" : "2021-06-17T10:40:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-863131368",
      "id" : 863131368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MzEzMTM2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-17T10:40:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863131368",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Cool! Working on it now. I've got `1` down, just busy with `2`.",
      "created_at" : "2021-06-17T12:33:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-863200393",
      "id" : 863200393,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MzIwMDM5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-17T12:33:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863200393",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/duncandean/events{/privacy}",
         "followers_url" : "https://api.github.com/users/duncandean/followers",
         "following_url" : "https://api.github.com/users/duncandean/following{/other_user}",
         "gists_url" : "https://api.github.com/users/duncandean/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/duncandean",
         "id" : 3072149,
         "login" : "duncandean",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/duncandean/orgs",
         "received_events_url" : "https://api.github.com/users/duncandean/received_events",
         "repos_url" : "https://api.github.com/users/duncandean/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/duncandean/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/duncandean/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/duncandean"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r653739094"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/653739094"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Very smol suggestion for ease of review - This improvement in the naming is in the \"[mempol] Allow rebroadcast for same-txid-different-wtxid transactions\" commit 14cf5dec17af9cc57a85dfe4910f30d8e17581d8, but txid part would fit better in the subsequent [style] commit.",
      "commit_id" : "5a77abd4e657458852875a07692898982f4b1db5",
      "created_at" : "2021-06-17T16:42:57Z",
      "diff_hunk" : "@@ -34,7 +34,8 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n     assert(node.peerman);\n     assert(node.mempool);\n     std::promise<void> promise;\n-    uint256 hashTx = tx->GetHash();\n+    uint256 txid = tx->GetHash();\n+    uint256 wtxid = tx->GetWitnessHash();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r653739094",
      "id" : 653739094,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MzczOTA5NA==",
      "original_commit_id" : "14cf5dec17af9cc57a85dfe4910f30d8e17581d8",
      "original_line" : 40,
      "original_position" : 6,
      "original_start_line" : 37,
      "path" : "src/node/transaction.cpp",
      "position" : 18,
      "pull_request_review_id" : 686568353,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261",
      "side" : "RIGHT",
      "start_line" : 37,
      "start_side" : "LEFT",
      "updated_at" : "2021-06-18T13:17:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/653739094",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Nice catch! Looking forward to a test :)\r\n",
      "created_at" : "2021-06-18T09:41:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-863906917",
      "id" : 863906917,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MzkwNjkxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-18T09:41:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863906917",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I was able to reproduce the bugs on [this branch](https://github.com/glozow/bitcoin/tree/test-22261) - I conveniently had a same-txid-different-wtxid test on hand that made it easy to write.\r\n\r\nHey @glozow, the first bug was straightforward enough to write a test for. I've been struggling a bit for the same-txid-different-wtxid bug. I was able to construct a new tx with same txid and different wtxid, but I'm just having trouble with the actual checks for relay. If you have that test handy, then maybe you could add it to this PR? :) I'd be curious to see what I should be doing.",
      "created_at" : "2021-06-18T09:41:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-863907149",
      "id" : 863907149,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MzkwNzE0OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-18T09:41:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863907149",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/duncandean/events{/privacy}",
         "followers_url" : "https://api.github.com/users/duncandean/followers",
         "following_url" : "https://api.github.com/users/duncandean/following{/other_user}",
         "gists_url" : "https://api.github.com/users/duncandean/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/duncandean",
         "id" : 3072149,
         "login" : "duncandean",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/duncandean/orgs",
         "received_events_url" : "https://api.github.com/users/duncandean/received_events",
         "repos_url" : "https://api.github.com/users/duncandean/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/duncandean/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/duncandean/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/duncandean"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r654348595"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654348595"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I changed the name `hashTx` -> `txid` in the same commit as adding the `wtxid` variable. It seemed to make sense to me to have the variables named `txid`/`wtxid` from the start instead of `hashTx`/`wtxid`.\r\n\r\nNot sure the ordering matters that much. I'm inclined to leave it as it is right now, but will happily reorder/split commits if that's helpful for other reviewers.",
      "commit_id" : "ba99f37a51a277284c060e38651071d39dd9b42b",
      "created_at" : "2021-06-18T11:15:53Z",
      "diff_hunk" : "@@ -34,7 +34,8 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n     assert(node.peerman);\n     assert(node.mempool);\n     std::promise<void> promise;\n-    uint256 hashTx = tx->GetHash();\n+    uint256 txid = tx->GetHash();\n+    uint256 wtxid = tx->GetWitnessHash();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r654348595",
      "id" : 654348595,
      "in_reply_to_id" : 653739094,
      "line" : 40,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NDM0ODU5NQ==",
      "original_commit_id" : "14cf5dec17af9cc57a85dfe4910f30d8e17581d8",
      "original_line" : 38,
      "original_position" : 6,
      "original_start_line" : 37,
      "path" : "src/node/transaction.cpp",
      "position" : 18,
      "pull_request_review_id" : 687299546,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261",
      "side" : "RIGHT",
      "start_line" : 37,
      "start_side" : "LEFT",
      "updated_at" : "2021-06-18T11:15:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/654348595",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Hi @duncandean. I think the following test should demonstrate the new functionality of _Allow rebroadcast for same-txid-different-wtxid transactions_:\r\n\r\n- submit tx A to node's mempool\r\n- Make new wtxidrelay P2PConnection to node\r\n- submit tx A' to node's mempool\r\n- wait for node to announce the wtxid from A to P2PConnection\r\n\r\nBefore the fix, the P2PConnection will never receive an announcement for the transaction. After the fix, it'll receive an announcement for the wtxid from A.\r\n\r\n@glozow's branch gives you the code you need to construct A and A'.",
      "created_at" : "2021-06-18T11:31:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-863971587",
      "id" : 863971587,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2Mzk3MTU4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-18T11:31:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863971587",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@duncandean [this commit](https://github.com/glozow/bitcoin/commit/5069a834ed06f2df5f43c416dc5a501c3b010b33) implements the test jnewbery described - feel free to put that on top of the same-txid-diff-wtxid code you've written.",
      "created_at" : "2021-06-18T12:52:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-864015702",
      "id" : 864015702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NDAxNTcwMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-18T12:52:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864015702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @duncandean [this commit](https://github.com/glozow/bitcoin/commit/5069a834ed06f2df5f43c416dc5a501c3b010b33) implements the test jnewbery described - feel free to put that on top of the same-txid-diff-wtxid code you've written.\r\n\r\n@glozow Ah, I actually got pretty close to that commit based on the previous work on your branch :D So would be good just to use your commit probably.\r\n\r\nFor `1` I think it was as simple as adding the following to the end of [`test_broadcast()`](https://github.com/bitcoin/bitcoin/blob/7fcf53f7b4524572d1d0c9a5fdc388e87eb02416/test/functional/mempool_unbroadcast.py#L30) in `mempool_unbroadcast.py`:\r\n\r\n<details>\r\n<summary></summary>\r\n\r\n```python\r\nself.log.info(\"Rebroadcast transaction & ensure it is not added to unbroadcast set when already in mempool\")\r\nrpc_tx_hsh = node.sendrawtransaction(txFS[\"hex\"])\r\nmempool = node.getrawmempool(True)\r\nassert rpc_tx_hsh in mempool\r\nfor tx in mempool:\r\n    assert_equal(mempool[tx]['unbroadcast'], False)\r\n```\r\n</details>\r\n\r\nIt fails before the fix, with the transaction being added to the unbroadcast set, and it passes after the fix.",
      "created_at" : "2021-06-18T13:22:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-864036125",
      "id" : 864036125,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NDAzNjEyNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-18T13:22:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864036125",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/duncandean/events{/privacy}",
         "followers_url" : "https://api.github.com/users/duncandean/followers",
         "following_url" : "https://api.github.com/users/duncandean/following{/other_user}",
         "gists_url" : "https://api.github.com/users/duncandean/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/duncandean",
         "id" : 3072149,
         "login" : "duncandean",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/duncandean/orgs",
         "received_events_url" : "https://api.github.com/users/duncandean/received_events",
         "repos_url" : "https://api.github.com/users/duncandean/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/duncandean/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/duncandean/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/duncandean"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK ba99f37a51a277284c060e38651071d39dd9b42b",
      "created_at" : "2021-06-18T17:33:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-864183446",
      "id" : 864183446,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NDE4MzQ0Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-18T17:33:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864183446",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK, Approach ACK.\r\n\r\nTook me a while to understand the two problems that were being fixed but I got there eventually in the Bitcoin Core PR review [club](https://bitcoincore.reviews/22261). Essentially 1) is unnecessary relaying and 2) causes an increased number of relay failures. \r\n\r\nSkimmed code, test(s) sounds like they are on the way.",
      "created_at" : "2021-06-24T08:31:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-867447558",
      "id" : 867447558,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2NzQ0NzU1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-24T08:31:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/867447558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the tests @duncandean and @glozow. I've added them as separate commits, and verified that they both fail without the fixes and pass with the fixes.\r\n\r\nAlso rebased on latest master.",
      "created_at" : "2021-07-07T09:37:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-875453104",
      "id" : 875453104,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NTQ1MzEwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-07T09:37:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875453104",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This has a small conflict in the tests with #22253. @theStack @duncandean @lsilva01 do you mind looking at that PR first? It's easy enough for me to rebase this on that PR once it's been merged.",
      "created_at" : "2021-07-07T11:24:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-875523332",
      "id" : 875523332,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NTUyMzMzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-07T11:24:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875523332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK b8a976f3945283c26d1e206eabf181305d407c8a\r\n\r\nI'm wondering if this is a good opportunity to document same-txid-different-witness somewhere in the codebase?\r\nI can totally imagine some wallet or L2 protocol attempt to submit these kinds of transactions in a non-malicious way? And at least what we could do is to clearly set up expectations.\r\nAt the same time, not even sure what's the best place to have this knowledge.\r\n",
      "created_at" : "2021-07-07T11:28:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-875526011",
      "id" : 875526011,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NTUyNjAxMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-07T11:28:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875526011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@naumenkogs see #22253?",
      "created_at" : "2021-07-07T11:31:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-875527858",
      "id" : 875527858,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NTUyNzg1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-07T11:31:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875527858",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-07-09T16:41:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-877315394",
      "id" : 877315394,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NzMxNTM5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-09T16:41:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/877315394",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased. This is now ready for review again!",
      "created_at" : "2021-07-09T17:21:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-877339000",
      "id" : 877339000,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NzMzOTAwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-09T17:21:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/877339000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667323286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667323286"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe I am confused and missing other details, but here's my doubt.\r\n\r\nIt seems here that if a new tx (with a same mempool-tx `txid` but diff `wtxid`) is passed into broadcast, then it will just check against the `txid`, see that it already exist in mempool, and then attempt to broadcast the existing `wtxid` instead of the new `wtxid`. It also wont try to add it to mempool or the unbroadcast list. But it should, as its a brand new transaction.\r\n\r\nIt seems to me that in case of `same-txid-different-wtxid` here, nothing happens with the new transaction, and we just relay the existing tx and call it a day? How is that not a problem?    ",
      "commit_id" : "5a77abd4e657458852875a07692898982f4b1db5",
      "created_at" : "2021-07-10T10:41:13Z",
      "diff_hunk" : "@@ -28,65 +28,83 @@ static TransactionError HandleATMPError(const TxValidationState& state, std::str\n \n TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef tx, std::string& err_string, const CAmount& max_tx_fee, bool relay, bool wait_callback)\n {\n-    // BroadcastTransaction can be called by either sendrawtransaction RPC or wallet RPCs.\n-    // node.peerman is assigned both before chain clients and before RPC server is accepting calls,\n-    // and reset after chain clients and RPC sever are stopped. node.peerman should never be null here.\n-    assert(node.peerman);\n+    // BroadcastTransaction can be called by either sendrawtransaction RPC or the wallet.\n+    // chainman, mempool and peerman are initialized before the RPC server and wallet are started\n+    // and reset after the RPC sever and wallet are stopped.\n+    assert(node.chainman);\n     assert(node.mempool);\n+    assert(node.peerman);\n+\n     std::promise<void> promise;\n-    uint256 hashTx = tx->GetHash();\n+    uint256 txid = tx->GetHash();\n+    uint256 wtxid = tx->GetWitnessHash();\n     bool callback_set = false;\n \n-    { // cs_main scope\n-    assert(node.chainman);\n-    LOCK(cs_main);\n-    // If the transaction is already confirmed in the chain, don't do anything\n-    // and return early.\n-    CCoinsViewCache &view = node.chainman->ActiveChainstate().CoinsTip();\n-    for (size_t o = 0; o < tx->vout.size(); o++) {\n-        const Coin& existingCoin = view.AccessCoin(COutPoint(hashTx, o));\n-        // IsSpent doesn't mean the coin is spent, it means the output doesn't exist.\n-        // So if the output does exist, then this transaction exists in the chain.\n-        if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n-    }\n-    if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool.\n-        if (max_tx_fee > 0) {\n-            // First, call ATMP with test_accept and check the fee. If ATMP\n-            // fails here, return error immediately.\n+    {\n+        LOCK(cs_main);\n+\n+        // If the transaction is already confirmed in the chain, don't do anything\n+        // and return early.\n+        CCoinsViewCache &view = node.chainman->ActiveChainstate().CoinsTip();\n+        for (size_t o = 0; o < tx->vout.size(); o++) {\n+            const Coin& existingCoin = view.AccessCoin(COutPoint(txid, o));\n+            // IsSpent doesn't mean the coin is spent, it means the output doesn't exist.\n+            // So if the output does exist, then this transaction exists in the chain.\n+            if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n+        }\n+\n+        if (auto mempool_tx = node.mempool->get(txid); mempool_tx) {\n+            // There's already a transaction in the mempool with this txid. Don't\n+            // try to submit this transaction to the mempool (since it'll be\n+            // rejected as a TX_CONFLICT), but do attempt to reannounce the mempool\n+            // transaction if relay=true.\n+            //\n+            // The mempool transaction may have the same or different witness (and\n+            // wtxid) as this transaction. Use the mempool's wtxid for reannouncement.\n+            wtxid = mempool_tx->GetWitnessHash();\n+        } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667323286",
      "id" : 667323286,
      "line" : 65,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzMyMzI4Ng==",
      "original_commit_id" : "5a77abd4e657458852875a07692898982f4b1db5",
      "original_line" : 65,
      "original_position" : 60,
      "original_start_line" : 56,
      "path" : "src/node/transaction.cpp",
      "position" : 60,
      "pull_request_review_id" : 703491177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261",
      "side" : "RIGHT",
      "start_line" : 56,
      "start_side" : "RIGHT",
      "updated_at" : "2021-07-10T10:50:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667323286",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/36541669?v=4",
         "events_url" : "https://api.github.com/users/rajarshimaitra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rajarshimaitra/followers",
         "following_url" : "https://api.github.com/users/rajarshimaitra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rajarshimaitra",
         "id" : 36541669,
         "login" : "rajarshimaitra",
         "node_id" : "MDQ6VXNlcjM2NTQxNjY5",
         "organizations_url" : "https://api.github.com/users/rajarshimaitra/orgs",
         "received_events_url" : "https://api.github.com/users/rajarshimaitra/received_events",
         "repos_url" : "https://api.github.com/users/rajarshimaitra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rajarshimaitra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rajarshimaitra"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667382532"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667382532"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> But it should, as its a brand new transaction.\r\n\r\nIn terms of adding it to the mempool, it cannot since it'll be rejected as `TX_CONFLICT`. And if we cannot add it to our mempool, then we should not relay the new `wtxid` as this is not in our mempool.\r\n\r\nAFAIU with `same-txid-different-wtxid` the effect of the transaction (in terms of inputs and outputs) would be identical as it's just the witness that would be different. I don't think it would matter which one ends up being confirmed.\r\n\r\nAt least this is how I understand it to be :)",
      "commit_id" : "5a77abd4e657458852875a07692898982f4b1db5",
      "created_at" : "2021-07-10T20:33:41Z",
      "diff_hunk" : "@@ -28,65 +28,83 @@ static TransactionError HandleATMPError(const TxValidationState& state, std::str\n \n TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef tx, std::string& err_string, const CAmount& max_tx_fee, bool relay, bool wait_callback)\n {\n-    // BroadcastTransaction can be called by either sendrawtransaction RPC or wallet RPCs.\n-    // node.peerman is assigned both before chain clients and before RPC server is accepting calls,\n-    // and reset after chain clients and RPC sever are stopped. node.peerman should never be null here.\n-    assert(node.peerman);\n+    // BroadcastTransaction can be called by either sendrawtransaction RPC or the wallet.\n+    // chainman, mempool and peerman are initialized before the RPC server and wallet are started\n+    // and reset after the RPC sever and wallet are stopped.\n+    assert(node.chainman);\n     assert(node.mempool);\n+    assert(node.peerman);\n+\n     std::promise<void> promise;\n-    uint256 hashTx = tx->GetHash();\n+    uint256 txid = tx->GetHash();\n+    uint256 wtxid = tx->GetWitnessHash();\n     bool callback_set = false;\n \n-    { // cs_main scope\n-    assert(node.chainman);\n-    LOCK(cs_main);\n-    // If the transaction is already confirmed in the chain, don't do anything\n-    // and return early.\n-    CCoinsViewCache &view = node.chainman->ActiveChainstate().CoinsTip();\n-    for (size_t o = 0; o < tx->vout.size(); o++) {\n-        const Coin& existingCoin = view.AccessCoin(COutPoint(hashTx, o));\n-        // IsSpent doesn't mean the coin is spent, it means the output doesn't exist.\n-        // So if the output does exist, then this transaction exists in the chain.\n-        if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n-    }\n-    if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool.\n-        if (max_tx_fee > 0) {\n-            // First, call ATMP with test_accept and check the fee. If ATMP\n-            // fails here, return error immediately.\n+    {\n+        LOCK(cs_main);\n+\n+        // If the transaction is already confirmed in the chain, don't do anything\n+        // and return early.\n+        CCoinsViewCache &view = node.chainman->ActiveChainstate().CoinsTip();\n+        for (size_t o = 0; o < tx->vout.size(); o++) {\n+            const Coin& existingCoin = view.AccessCoin(COutPoint(txid, o));\n+            // IsSpent doesn't mean the coin is spent, it means the output doesn't exist.\n+            // So if the output does exist, then this transaction exists in the chain.\n+            if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n+        }\n+\n+        if (auto mempool_tx = node.mempool->get(txid); mempool_tx) {\n+            // There's already a transaction in the mempool with this txid. Don't\n+            // try to submit this transaction to the mempool (since it'll be\n+            // rejected as a TX_CONFLICT), but do attempt to reannounce the mempool\n+            // transaction if relay=true.\n+            //\n+            // The mempool transaction may have the same or different witness (and\n+            // wtxid) as this transaction. Use the mempool's wtxid for reannouncement.\n+            wtxid = mempool_tx->GetWitnessHash();\n+        } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667382532",
      "id" : 667382532,
      "in_reply_to_id" : 667323286,
      "line" : 65,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzM4MjUzMg==",
      "original_commit_id" : "5a77abd4e657458852875a07692898982f4b1db5",
      "original_line" : 65,
      "original_position" : 60,
      "original_start_line" : 56,
      "path" : "src/node/transaction.cpp",
      "position" : 60,
      "pull_request_review_id" : 703527935,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261",
      "side" : "RIGHT",
      "start_line" : 56,
      "start_side" : "RIGHT",
      "updated_at" : "2021-07-10T20:33:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667382532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/duncandean/events{/privacy}",
         "followers_url" : "https://api.github.com/users/duncandean/followers",
         "following_url" : "https://api.github.com/users/duncandean/following{/other_user}",
         "gists_url" : "https://api.github.com/users/duncandean/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/duncandean",
         "id" : 3072149,
         "login" : "duncandean",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/duncandean/orgs",
         "received_events_url" : "https://api.github.com/users/duncandean/received_events",
         "repos_url" : "https://api.github.com/users/duncandean/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/duncandean/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/duncandean/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/duncandean"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "reACK 5a77abd",
      "created_at" : "2021-07-10T20:34:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-877700423",
      "id" : 877700423,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3NzcwMDQyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-10T20:34:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/877700423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/duncandean/events{/privacy}",
         "followers_url" : "https://api.github.com/users/duncandean/followers",
         "following_url" : "https://api.github.com/users/duncandean/following{/other_user}",
         "gists_url" : "https://api.github.com/users/duncandean/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/duncandean",
         "id" : 3072149,
         "login" : "duncandean",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/duncandean/orgs",
         "received_events_url" : "https://api.github.com/users/duncandean/received_events",
         "repos_url" : "https://api.github.com/users/duncandean/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/duncandean/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/duncandean/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/duncandean"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667412711"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667412711"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @duncandean, that makes sense. So in the case of `same-txid-different-wtxid` transaction, we are really talking about the same transaction (input-output set) but for some reason with a different signature value.\r\n\r\nIn that case it would make sense to only handle one version of it, and yes its better to handle the version already in the mempool.  ",
      "commit_id" : "5a77abd4e657458852875a07692898982f4b1db5",
      "created_at" : "2021-07-11T02:56:55Z",
      "diff_hunk" : "@@ -28,65 +28,83 @@ static TransactionError HandleATMPError(const TxValidationState& state, std::str\n \n TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef tx, std::string& err_string, const CAmount& max_tx_fee, bool relay, bool wait_callback)\n {\n-    // BroadcastTransaction can be called by either sendrawtransaction RPC or wallet RPCs.\n-    // node.peerman is assigned both before chain clients and before RPC server is accepting calls,\n-    // and reset after chain clients and RPC sever are stopped. node.peerman should never be null here.\n-    assert(node.peerman);\n+    // BroadcastTransaction can be called by either sendrawtransaction RPC or the wallet.\n+    // chainman, mempool and peerman are initialized before the RPC server and wallet are started\n+    // and reset after the RPC sever and wallet are stopped.\n+    assert(node.chainman);\n     assert(node.mempool);\n+    assert(node.peerman);\n+\n     std::promise<void> promise;\n-    uint256 hashTx = tx->GetHash();\n+    uint256 txid = tx->GetHash();\n+    uint256 wtxid = tx->GetWitnessHash();\n     bool callback_set = false;\n \n-    { // cs_main scope\n-    assert(node.chainman);\n-    LOCK(cs_main);\n-    // If the transaction is already confirmed in the chain, don't do anything\n-    // and return early.\n-    CCoinsViewCache &view = node.chainman->ActiveChainstate().CoinsTip();\n-    for (size_t o = 0; o < tx->vout.size(); o++) {\n-        const Coin& existingCoin = view.AccessCoin(COutPoint(hashTx, o));\n-        // IsSpent doesn't mean the coin is spent, it means the output doesn't exist.\n-        // So if the output does exist, then this transaction exists in the chain.\n-        if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n-    }\n-    if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool.\n-        if (max_tx_fee > 0) {\n-            // First, call ATMP with test_accept and check the fee. If ATMP\n-            // fails here, return error immediately.\n+    {\n+        LOCK(cs_main);\n+\n+        // If the transaction is already confirmed in the chain, don't do anything\n+        // and return early.\n+        CCoinsViewCache &view = node.chainman->ActiveChainstate().CoinsTip();\n+        for (size_t o = 0; o < tx->vout.size(); o++) {\n+            const Coin& existingCoin = view.AccessCoin(COutPoint(txid, o));\n+            // IsSpent doesn't mean the coin is spent, it means the output doesn't exist.\n+            // So if the output does exist, then this transaction exists in the chain.\n+            if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n+        }\n+\n+        if (auto mempool_tx = node.mempool->get(txid); mempool_tx) {\n+            // There's already a transaction in the mempool with this txid. Don't\n+            // try to submit this transaction to the mempool (since it'll be\n+            // rejected as a TX_CONFLICT), but do attempt to reannounce the mempool\n+            // transaction if relay=true.\n+            //\n+            // The mempool transaction may have the same or different witness (and\n+            // wtxid) as this transaction. Use the mempool's wtxid for reannouncement.\n+            wtxid = mempool_tx->GetWitnessHash();\n+        } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667412711",
      "id" : 667412711,
      "in_reply_to_id" : 667323286,
      "line" : 65,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzQxMjcxMQ==",
      "original_commit_id" : "5a77abd4e657458852875a07692898982f4b1db5",
      "original_line" : 65,
      "original_position" : 60,
      "original_start_line" : 56,
      "path" : "src/node/transaction.cpp",
      "position" : 60,
      "pull_request_review_id" : 703543179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261",
      "side" : "RIGHT",
      "start_line" : 56,
      "start_side" : "RIGHT",
      "updated_at" : "2021-07-11T02:56:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667412711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/36541669?v=4",
         "events_url" : "https://api.github.com/users/rajarshimaitra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rajarshimaitra/followers",
         "following_url" : "https://api.github.com/users/rajarshimaitra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rajarshimaitra",
         "id" : 36541669,
         "login" : "rajarshimaitra",
         "node_id" : "MDQ6VXNlcjM2NTQxNjY5",
         "organizations_url" : "https://api.github.com/users/rajarshimaitra/orgs",
         "received_events_url" : "https://api.github.com/users/rajarshimaitra/received_events",
         "repos_url" : "https://api.github.com/users/rajarshimaitra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rajarshimaitra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rajarshimaitra"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667740703"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667740703"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Previously, we would also best-effort rebroadcast (meaning not initial). After this change, best-effort applies only to the initial broadcast indeed (or the absent-from-mempool broadcast).\r\n\r\nIs this the expected rebroadcast behavior? Do we clearly communicate that software-triggered-rebroadcast (wallet or whatever) won't be assisted by the node if the node was offline at the time in the same way the node assists initial broadcast.\r\n\r\nBehavior change:\r\n1. A transaction added to the mempool initially broadcasted\r\n2. Node goes offline\r\n3. A transaction is still in the mempool, triggers rebroadcast.\r\n4. Rebroadcast fails because offline\r\n\r\nThe difference is that after this code, UnbroadcastTx won't help in step 4.\r\nIndeed, the peers are unlikely to request it again. It's still possible though, if our mempool is more persistent (e.g., deeper in size).\r\n\r\nThis applies backward too: if our mempool is less persistent, we will make useless rebroadcasts (peers won't send GETDATA because they still have it in the mempool). This part is indeed not a degradation over master, but still something to think about. Small-mempool  nodes may become are likely to become \"10-15 minutes\" rebroadcast spammers (after only one extra broadcast trigger, but because Unbroadcast set never clears)",
      "commit_id" : "5a77abd4e657458852875a07692898982f4b1db5",
      "created_at" : "2021-07-12T08:44:50Z",
      "diff_hunk" : "@@ -71,6 +71,12 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n \n         // Transaction was accepted to the mempool.\n \n+        if (relay) {\n+            // the mempool tracks locally submitted transactions to make a\n+            // best-effort of initial broadcast",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667740703",
      "id" : 667740703,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Nzc0MDcwMw==",
      "original_commit_id" : "2837a9f1eaa2c6bf402d1d9891d9aa84c4a56033",
      "original_line" : 76,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 703863702,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-12T08:44:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667740703",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667786642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667786642"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Previously, we would also best-effort rebroadcast (meaning not initial). After this change, best-effort applies only to the initial broadcast indeed (or the absent-from-mempool broadcast).\r\n>\r\n> Is this the expected rebroadcast behavior?\r\n\r\nYes, this is the intention, and was the original intention behind the unbroadcast set. Locally submitted transactions should be tracked to make sure that at least one peer had requested them _at least once_.\r\n\r\n> Behavior change:\r\n>\r\n> 1. A transaction added to the mempool initially broadcasted\r\n> 2. Node goes offline\r\n> 3. A transaction is still in the mempool, triggers rebroadcast.\r\n> 4. Rebroadcast fails because offline\r\n>\r\n> The difference is that after this code, UnbroadcastTx won't help in step 4.\r\n\r\nCorrect. That's intentional. The eventual aim of the rebroadcast project is to remove the need for the local wallet to rebroadcast transactions in the majority of cases. I hope that eventually the default behavior is that (3) doesn't happen at all.",
      "commit_id" : "5a77abd4e657458852875a07692898982f4b1db5",
      "created_at" : "2021-07-12T09:48:28Z",
      "diff_hunk" : "@@ -71,6 +71,12 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n \n         // Transaction was accepted to the mempool.\n \n+        if (relay) {\n+            // the mempool tracks locally submitted transactions to make a\n+            // best-effort of initial broadcast",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667786642",
      "id" : 667786642,
      "in_reply_to_id" : 667740703,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Nzc4NjY0Mg==",
      "original_commit_id" : "2837a9f1eaa2c6bf402d1d9891d9aa84c4a56033",
      "original_line" : 76,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 703922879,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/22261",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-07-12T09:48:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667786642",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Not 100% sure I agree with all the thoughts from [this comment](https://github.com/bitcoin/bitcoin/pull/22261#discussion_r667786642), but this fix is indeed needed.\r\nACK 5a77abd4e657458852875a07692898982f4b1db5",
      "created_at" : "2021-07-20T11:41:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-883324641",
      "id" : 883324641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "IC_kwDOABII5840pnbh",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-20T11:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/883324641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "post merge ACK 5a77abd",
      "created_at" : "2021-07-20T13:06:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/22261#issuecomment-883377190",
      "id" : 883377190,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/22261",
      "node_id" : "IC_kwDOABII5840p0Qm",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-20T13:06:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/883377190",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   }
]
