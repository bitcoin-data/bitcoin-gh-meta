{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "**See the proposal for assumeutxo [here](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal).**\r\n\r\nTesting instructions can be found below the \"Progress\" section.\r\n\r\n---\r\n\r\n### Progress\r\n\r\nAll items here have corresponding commits here, but are unchecked if they haven't been merged yet.\r\n\r\n- [x] **Chainstate interface**\r\n  - https://github.com/bitcoin/bitcoin/pull/15976\r\n- [x] **Localize chainstate data**\r\n  - https://github.com/bitcoin/bitcoin/pull/16443\r\n- [x] **Share block data**\r\n  - https://github.com/bitcoin/bitcoin/pull/16194\r\n- [x] **Deglobalize chainstate**\r\n  - https://github.com/bitcoin/bitcoin/pull/15948\r\n- [x] **UpdateTip/CheckBlockIndex** modifications\r\n  - https://github.com/bitcoin/bitcoin/pull/21526\r\n- [x] **ChainstateManager**\r\n  - https://github.com/bitcoin/bitcoin/pull/17737\r\n- [x] **Mempool**\r\n  - https://github.com/bitcoin/bitcoin/pull/22415\r\n- [x] **LoadBlockIndex**\r\n  - https://github.com/bitcoin/bitcoin/pull/23174\r\n- [x] **Init/teardown**\r\n  - https://github.com/bitcoin/bitcoin/pull/24232\r\n  - https://github.com/bitcoin/bitcoin/pull/25667\r\n  - https://github.com/bitcoin/bitcoin/pull/25740\r\n- [x] **Wallet**: includes avoiding rescans when assumed-valid block data is in use\r\n  - https://github.com/bitcoin/bitcoin/pull/23997\r\n  - https://github.com/bitcoin/bitcoin/pull/26282\r\n- [ ] **P2P**: minor changes are made to `init.cpp` and `net_processing.cpp` to make simultaneous IBD across multiple chainstates work.\r\n  - #24008 \r\n- [ ] **Pruning**: implement correct pruning behavior when using a background chainstate\r\n- [ ] **Blockfile separation**: to prevent \"fragmentation\" in blockfile storage, have background chainstates use separate blockfiles from active snapshot chainstates to avoid interleaving heights and impairing pruning.\r\n- [ ] **Indexing**: all existing `CValidationInterface` events are given with an additional parameter, ChainstateRole, and all indexers ignore events from ChainstateRole::ASSUMEDVALID so that indexation only happens sequentially.\r\n- [ ] Raise error when both `-reindex` and assumeutxo are in use.\r\n- [ ] **RPC**: introduce RPC commands `dumptxoutset`, `loadtxoutset`, and (the probably temporary) `monitorsnapshot`.\r\n  - https://github.com/bitcoin/bitcoin/pull/16899\r\n- [ ] **Release docs & first assumeutxo commitment**: add notes and a particular assumeutxo hash value for first AU-enabled release.\r\n  - This will complete the project and allow use of UTXO snapshots for faster node bootstrap.\r\n- [ ] *(optional)* **Coinscache optimization**: allow flushing chainstate data without emptying the coins cache; results in better performance after UTXO snapshot load.\r\n  - https://github.com/bitcoin/bitcoin/pull/17487\r\n  - https://github.com/bitcoin/bitcoin/pull/27008\r\n\r\n---\r\n\r\n### Testing\r\n\r\n#### For fun (~5min)\r\n\r\nIf you want to do a quick test, you can run `./contrib/devtools/test_utxo_snapshots.sh` and follow the instructions. This is mostly obviated by the functional tests, though.\r\n\r\n#### For real (longer)\r\n\r\nIf you'd like to experience a real usage of assumeutxo, you can do that too.\r\nI've cut a new snapshot at height 788'000 (http://img.jameso.be/utxo-788000.dat - but you can do it yourself with `./contrib/devtools/utxo_snapshot.sh` if you want). Download that, and then create a datadir for testing:\r\n```sh\r\n$ cd ~/src/bitcoin  # or whatever\r\n\r\n# get the snapshot\r\n$ curl http://img.jameso.be/utxo-788000.dat > utxo-788000.dat\r\n\r\n# you'll want to do this if you like copy/pasting \r\n$ export AU_DATADIR=/home/${USER}/au-test # or wherever\r\n\r\n$ mkdir ${AU_DATADIR}\r\n$ vim ${AU_DATADIR}/bitcoin.conf\r\n\r\ndbcache=8000  # or, you know, something high\r\nblockfilterindex=1\r\ncoinstatsindex=1\r\nprune=3000\r\nlogthreadnames=1\r\n```\r\nObtain this branch, build it, and then start bitcoind:\r\n```sh\r\n$ git remote add jamesob https://github.com/jamesob/bitcoin\r\n$ git fetch jamesob utxo-dumpload-compressed\r\n$ git checkout jamesob/utxo-dumpload-compressed\r\n\r\n$ ./configure $conf_args && make  # (whatever you like to do here)\r\n\r\n# start 'er up and watch the logs\r\n$ ./src/bitcoind -datadir=${AU_DATADIR}\r\n```\r\nThen, in some other window, load the snapshot\r\n```sh\r\n$ ./src/bitcoin-cli -datadir=${AU_DATADIR} loadtxoutset $(pwd)/utxo-788000.dat\r\n```\r\n\r\nYou'll see some log messages about headers retrieval and waiting to see the snapshot in the headers chain. Once you get the full headers chain, you'll spend a decent amount of time (~10min) loading the snapshot, checking it, and flushing it to disk. After all that happens, you should be syncing to tip in pretty short order, and you'll see the occasional `[background validation]` log message go by.\r\n\r\nIn yet another window, you can check out chainstate status with\r\n```sh\r\n$ ./src/bitcoin-cli -datadir=${AU_DATADIR} getchainstates\r\n```\r\nas well as usual favorites like `getblockchaininfo`.\r\n\r\n---\r\n\r\n### Original change description\r\n\r\nFor those unfamiliar with assumeutxo, here's a brief summary from [the issue](https://github.com/bitcoin/bitcoin/issues/15605) (where any conceptual discussion not specific to this implementation should happen):\r\n\r\n> assumeutxo would be a way to initialize a node using a headers chain and a serialized version of the UTXO state which was generated from another node at some block height. A client making use of this UTXO \"snapshot\" would specify a hash and expect the content of the resulting UTXO set to yield this hash after deserialization. \r\n> \r\n> This would allow users to bootstrap a usable pruned node & wallet far more quickly (and with less disk usage) than waiting for a full initial block download to complete, since we only have to sync blocks between the base of the snapshot and the current network tip. Needless to say this is at expense of accepting a different trust model, though how different this really ends up being from `assumevalid` in effect is worth debate.\r\n\r\nIn short, this is an interesting change because it would allow nodes to get up and running within minutes given a ~3GB file (at time of writing) under an almost identical trust model to assumevalid.\r\n\r\nIn this implementation, I add a few RPC commands: `dumptxoutset` creates a UTXO snapshot and writes it to disk, and `loadtxoutset` intakes a snapshot from disk, constructs and activates chainstate based on it, and continues a from-scratch initial block download in the background for the sole purpose of validating the snapshot. Once the snapshot is validated, we throw away the chainstate used for background validation.\r\n\r\nThe assumeutxo procedure as implemented is as follows:\r\n\r\n1. A UTXO snapshot is loaded with the `loadtxoutset <path>` RPC command.\r\n1. A new chainstate (`CChainState`) is initialized using `ChainstateManager::ActivateSnapshot()`:\r\n   1. The serialized UTXO data is read in and various sanity checks are performed, e.g. compare expected coin count, recompute the hash and compare it with assumeutxo hash in source code.\r\n   1. We \"fast forward\" `new_chainstate->m_chain` to have a tip at the base of the snapshot (with or without block data). Lacking block data, we fake the `nTx` counts of the constituent `CBlockIndex` entries.\r\n   1. `LoadChainTip()` is called on the new snapshot and it is installed as our active chainstate.\r\n1. The new assumed-valid chainstate is now our active, and so that enters IBD until it is synced to the network's tip. Presumably the snapshot would be taken relatively close to the current tip but far enough away to avoid meaningful reorgs, say 10,000 blocks deep.\r\n1. Once the active chainstate is out of IBD, our old validation chain continues IBD \"in the background\" while the active chainstate services requests from most of the system.\r\n1. Once the background validation chainstate reaches a height equal the base of the snapshot, we take the hash of its UTXO set and ensure it equals the expected hash based on the snapshot. If the hashes are equivalent, we delete the validation chainstate and move on without event; if they aren't, we log loudly and fall back to the validation chainstate (we should probably just shut down).\r\n\r\nThe implicit assumption is that the background validation chain will always be a subset of the assumed-valid snapshot chain while the latter is active. We don't properly handle reorgs that go deeper than the base of the snapshot.\r\n\r\n### Changes (already merged/outdated)\r\n\r\n![chainstate-beforeafter (1)](https://user-images.githubusercontent.com/73197/54435797-a16b0780-4707-11e9-89c3-c90b5686804d.png)\r\n \r\nThe crux of this change is in removing any assumptions in the codebase that there is a single chainstate, i.e. any references to global variables `chainActive`, `pcoinsTip`, et al. need to be replaced with functions that return the relevant chainstate data at that moment in time. This change also takes `CChainState` to its logical conclusion by making it more self-contained - any references to globals like `chainActive` are removed with class-local references (`m_chain`).\r\n\r\nA few minor notes on the implementation:\r\n\r\n- When we attempt to load a wallet with a BestBlock locator lower than the base of a snapshot and the snapshot has not yet been validated, we refuse to load the wallet.\r\n\r\n- For additional notes, see [the new assumeutxo docs](https://github.com/jamesob/bitcoin/blob/utxo-dumpload-compressed/doc/assumeutxo.md).",
   "closed_at" : "2023-05-08T15:09:24Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
      "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jamesob/followers",
      "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jamesob",
      "id" : 73197,
      "login" : "jamesob",
      "node_id" : "MDQ6VXNlcjczMTk3",
      "organizations_url" : "https://api.github.com/users/jamesob/orgs",
      "received_events_url" : "https://api.github.com/users/jamesob/received_events",
      "repos_url" : "https://api.github.com/users/jamesob/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jamesob"
   },
   "comments" : 66,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606/comments",
   "created_at" : "2019-03-15T13:58:22Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606",
   "id" : 421531882,
   "labels" : [
      {
         "color" : "7cf575",
         "default" : false,
         "description" : null,
         "id" : 64583,
         "name" : "Feature",
         "node_id" : "MDU6TGFiZWw2NDU4Mw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature"
      },
      {
         "color" : "fbca04",
         "default" : false,
         "description" : null,
         "id" : 97470796,
         "name" : "UTXO Db and Indexes",
         "node_id" : "MDU6TGFiZWw5NzQ3MDc5Ng==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes"
      },
      {
         "color" : "6060aa",
         "default" : false,
         "description" : null,
         "id" : 118379652,
         "name" : "Validation",
         "node_id" : "MDU6TGFiZWwxMTgzNzk2NTI=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MjYxNTYxNTQ3",
   "number" : 15606,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/15606.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15606",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/15606.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606"
   },
   "reactions" : {
      "+1" : 6,
      "-1" : 1,
      "confused" : 0,
      "eyes" : 1,
      "heart" : 2,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 10,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606/timeline",
   "title" : "assumeutxo",
   "updated_at" : "2023-05-08T15:09:24Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
      "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jamesob/followers",
      "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jamesob",
      "id" : 73197,
      "login" : "jamesob",
      "node_id" : "MDQ6VXNlcjczMTk3",
      "organizations_url" : "https://api.github.com/users/jamesob/orgs",
      "received_events_url" : "https://api.github.com/users/jamesob/received_events",
      "repos_url" : "https://api.github.com/users/jamesob/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jamesob"
   }
}
