[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Since I'm still working on this...closing for now. I mainly wanted to ping @theuni and what is here works and is enough to start receiving feedback.\n",
      "created_at" : "2015-07-02T14:36:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6359#issuecomment-118052171",
      "id" : 118052171,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6359",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDExODA1MjE3MQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/118052171/reactions"
      },
      "updated_at" : "2015-07-02T14:37:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/118052171",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jtimon I'm not sure it's worth the complication of a factory here. Given that all chainparams and consensusparams are immutable, why not just pass around new instances when necessary? That should still be cheap, and much simpler? Especially given the trend to pass the params around as necessary rather than call Params() directly.\n\nSomething like:\n\n``` c++\nstatic CBaseChainParams::Network nCurrentParams = CBaseChainParams::MAX_NETWORK_TYPES;\n\nconst CChainParams Params() {\n    switch (nCurrentParams) {\n        case CBaseChainParams::MAIN:\n            return CChainParams(CMainParams());\n        case CBaseChainParams::TESTNET:\n            return CChainParams(CTestNetParams());\n        case CBaseChainParams::REGTEST:\n            return CChainParams(CRegTestParams());\n        default:\n            assert(false && \"Unimplemented network\");\n            return CChainParams(CMainParams());\n    }\n}\n\nvoid SelectParams(CBaseChainParams::Network network) {\n    SelectBaseParams(network);\n    nCurrentParams = network;\n}\n```\n\nHell, since there are no virtual functions left (nor should there be), we could even do away with the inheritance and just make CBaseChainParams::Network a ctor arg for CChainParams.\n",
      "created_at" : "2015-07-02T16:43:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6359#issuecomment-118089634",
      "id" : 118089634,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6359",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDExODA4OTYzNA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/118089634/reactions"
      },
      "updated_at" : "2015-07-02T16:46:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/118089634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "node_id" : "MDQ6VXNlcjQxNzA0Mw==",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The main point of the factory is that it is not on globals/ because once we're finished \"passing chainparams around\" there should be no need for any global at all: You either take it as parameter or use the factory (this includes removing the SelectParams from `BasicTestingSetup::BasicTestingSetup()`, since nobody depends on the global and tests can use the factory directly).\n\nBut if copying the object in the factory (like you do with the `Params()` of your example), then the factory doesn't need to return a pointer (it could just be the current parametrized Params() ), and the Container would also be unnecessary (and the same goes for CPolicy).\n\nThe enum doesn't scale very well once you go beyond -testnet and -regtest (see #5229 in fact, I'm preparing a PR to add infinite new testing altchains). The same happens with the single constructor parameter. \nBut you are right, the inheritance is overkill here.\nWith a fully parametric constructor the factory can just always call that constructor with different values.\nie:\n\n```\nCChainParams* Params(const std::string& chain)\n{\n   if (chain == CBaseChainParams::MAIN)\n        return new CChainParams(\"main\", 210000, 750, 950, 1000...);\n    else if (chain == CBaseChainParams::TESTNET)\n ...\n```\n",
      "created_at" : "2015-07-02T19:22:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6359#issuecomment-118139777",
      "id" : 118139777,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6359",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDExODEzOTc3Nw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/118139777/reactions"
      },
      "updated_at" : "2015-07-02T19:25:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/118139777",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@theuni I've been exploring your suggestion and it's not so straight-forward as you may think.\nIf Params(string) returns a new object instead of a reference some places will crash, like this one: \nhttps://github.com/bitcoin/bitcoin/blob/master/src/test/alert_tests.cpp#L125\nIt also means that Params() and BaseParams() have to return a new object as well instead of a const reference.\nIt works fine for ParamsBase, which doesn't have a similar &ParamsBase(enum/string) psedo-factory.\nBut I really prefer to just remove the interface functions in this case (where it's easy, see https://github.com/jtimon/bitcoin/commit/7fb9f6ad7bad4b64df0fdb36e5230becd2290864 ).\nCan we first agree that it will be better to remove SelectParamsFromCommandLine and SelectBaseParamsFromCommandLine before separating the globals?\nI have reopened #6235 with that.\n@rustyrussell you may be interested in this discussion, or reviewing #6235.\n",
      "created_at" : "2015-07-06T14:20:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6359#issuecomment-118870341",
      "id" : 118870341,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6359",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDExODg3MDM0MQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/118870341/reactions"
      },
      "updated_at" : "2015-07-06T14:20:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/118870341",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   }
]
