[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33161485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33161485"
         }
      },
      "body" : "Indentation style is 4 spaces per level.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-24T15:42:29Z",
      "diff_hunk" : "@@ -101,4 +101,67 @@ BOOST_AUTO_TEST_CASE(MempoolRemoveTest)\n     removed.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n+{\n+  CTxMemPool pool(CFeeRate(0));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33161485",
      "id" : 33161485,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 6,
      "path" : "src/test/mempool_tests.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33161485",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Untested ACK. This is one of the few places where I think boost shines.",
      "created_at" : "2015-06-24T15:51:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-114922628",
      "id" : 114922628,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-06-24T15:51:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/114922628",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "It would be nice to see how much the block creation code could be sped up and simplified with this, though.",
      "created_at" : "2015-06-24T15:51:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-114922915",
      "id" : 114922915,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-06-24T15:51:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/114922915",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33162696"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33162696"
         }
      },
      "body" : "I think we want to know priorities aimed for the next block's height, as that is where the transactions are expected to end up.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-24T15:53:07Z",
      "diff_hunk" : "@@ -2216,6 +2217,7 @@ bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew, CBlock *\n     // Remove conflicting transactions from the mempool.\n     list<CTransaction> txConflicted;\n     mempool.removeForBlock(pblock->vtx, pindexNew->nHeight, txConflicted, !IsInitialBlockDownload());\n+    mempool.recalcPriorities(pindexNew->nHeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33162696",
      "id" : 33162696,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 12,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33162696",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33163140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33163140"
         }
      },
      "body" : "Nit: I think that over time we will want this to be primarily a non-ordered set (because hash-based lookups are faster). Something like transaction_map or indexed_transaction_map would maybe be more appropriate? Maybe define it inside CTxMempool, so it is more clearly scoped.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-24T15:56:46Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33163140",
      "id" : 33163140,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33163140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33182254"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33182254"
         }
      },
      "body" : "For the unordered index I need a hash function for uint256 because the build fails when it defaults to `boost::hash<uint256>`.  I think you mentioned to me before about some existing code that does this and prevents a dos case - where do I find that function?",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-24T18:51:35Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33182254",
      "id" : 33182254,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33182254",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33182418"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33182418"
         }
      },
      "body" : "Don't bother about that now.\r\n\r\nI just mean that an \"unordered transaction set\" is not what this intends to function as. It's just how the current implementation works.\r\n\r\nAs I said, a nit.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-24T18:53:22Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33182418",
      "id" : 33182418,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33182418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33183459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33183459"
         }
      },
      "body" : "What about indexed_transaction_set since the indexes have a set-like interface?",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-24T19:03:58Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33183459",
      "id" : 33183459,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33183459",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33346732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33346732"
         }
      },
      "body" : "Sounds good to me.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-26T11:09:09Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33346732",
      "id" : 33346732,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33346732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33379346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33379346"
         }
      },
      "body" : "@sipa, wouldn't it be better to go ahead and make that change now?  We're looking up transactions by hash in the mempool all the time (for instance `CCoinsViewMemPool::GetCoins`).  I'm not sure what the efficiency difference is, but given that its currently a hash lookup, its probably not something we should make slower.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-26T17:58:03Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33379346",
      "id" : 33379346,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33379346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33385453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33385453"
         }
      },
      "body" : "oops, silly me..  std::map is ordered",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-26T19:02:08Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33385453",
      "id" : 33385453,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33385453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33386474"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33386474"
         }
      },
      "body" : "It is nontrivial to make boost::multi_index_container work with salted hash\nfunctions (you want to avoid the ability for network players to produce\ntransactions that collide in the hashtable). I've tried myself, so I think\nit's reasonable to first get this in without. One of the advantages of\nboost::multi_index_container is that changing the indexes should be easy.\n",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-26T19:13:13Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33386474",
      "id" : 33386474,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T11:59:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33386474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33412259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33412259"
         }
      },
      "body" : "Fixed in latest commit",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-27T12:00:14Z",
      "diff_hunk" : "@@ -101,4 +101,67 @@ BOOST_AUTO_TEST_CASE(MempoolRemoveTest)\n     removed.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n+{\n+  CTxMemPool pool(CFeeRate(0));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33412259",
      "id" : 33412259,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 6,
      "path" : "src/test/mempool_tests.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T12:00:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33412259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33412267"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33412267"
         }
      },
      "body" : "Fixed in latest commit.  Also moved the recalcPriorities call to happen after UpdateTip(), because I didn't think the priority recalc was important enough to delay updating the tip.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-27T12:01:25Z",
      "diff_hunk" : "@@ -2216,6 +2217,7 @@ bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew, CBlock *\n     // Remove conflicting transactions from the mempool.\n     list<CTransaction> txConflicted;\n     mempool.removeForBlock(pblock->vtx, pindexNew->nHeight, txConflicted, !IsInitialBlockDownload());\n+    mempool.recalcPriorities(pindexNew->nHeight);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33412267",
      "id" : 33412267,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 12,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T12:01:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33412267",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33412276"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33412276"
         }
      },
      "body" : "I've now renamed it to CTxMemPool::indexed_transaction_set in my latest commit.",
      "commit_id" : "362bf769edc6f15495a78461902d54d649c83c08",
      "created_at" : "2015-06-27T12:02:47Z",
      "diff_hunk" : "@@ -53,13 +57,66 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n+    double GetCurrentPriority() const { return dCurrentPriority; }\n     CAmount GetFee() const { return nFee; }\n+    CFeeRate GetFeeRate() const { return feeRate; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n+    void recalcCurrentPriority (unsigned int height) { dCurrentPriority = GetPriority(height); }\n };\n \n+// extracts a TxMemPoolEntry's transaction hash\n+struct mempoolentry_txid\n+{\n+    typedef uint256 result_type;\n+    result_type operator() (const CTxMemPoolEntry &entry) const\n+    {\n+        return entry.GetTx().GetHash();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByPriority\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetCurrentPriority() == b.GetCurrentPriority())\n+            return a.GetFeeRate() > b.GetFeeRate();\n+        return a.GetCurrentPriority() > b.GetCurrentPriority();\n+    }\n+};\n+\n+class CompareTxMemPoolEntryByFee\n+{\n+public:\n+    bool operator()(const CTxMemPoolEntry& a, const CTxMemPoolEntry& b)\n+    {\n+        if (a.GetFeeRate() == b.GetFeeRate())\n+            return a.GetCurrentPriority() > b.GetCurrentPriority();\n+        return a.GetFeeRate() > b.GetFeeRate();\n+    }\n+};\n+\n+typedef boost::multi_index_container<\n+    CTxMemPoolEntry,\n+    boost::multi_index::indexed_by<\n+        // sorted by txid\n+        boost::multi_index::ordered_unique<mempoolentry_txid>,\n+        // sorted by fee rate\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByFee\n+        >,\n+        // sorted by priority\n+        boost::multi_index::ordered_non_unique<\n+            boost::multi_index::identity<CTxMemPoolEntry>,\n+            CompareTxMemPoolEntryByPriority\n+        >\n+    >\n+> ordered_transaction_set;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#discussion_r33412276",
      "id" : 33412276,
      "original_commit_id" : "f27cd7ed6d6bbe242a64ecabf581edd498bc65e7",
      "original_position" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/6331",
      "updated_at" : "2015-06-27T12:02:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/33412276",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "body" : "If this gets merged, the next thing I would look at is changing CreateNewBlock to use the indexes.\r\n\r\nBut first I need to fix the bug from #6292 because the CreateNewBlock code currently calculates priorities correctly, whereas these indexes use CTxMemPoolEntry::GetPriority which gives incorrect results.",
      "created_at" : "2015-06-27T12:06:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-116024487",
      "id" : 116024487,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-06-27T12:06:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/116024487",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "body" : "@ashleyholman One thing to consider is that these things are policy, so need to be easily modified by the end user - especially for miners. Obviously we're far from that with the current code, but I wouldn't want to make the situation worse (I'm not saying this PR does, but it's something to keep in mind).",
      "created_at" : "2015-06-27T17:46:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-116108233",
      "id" : 116108233,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-06-27T17:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/116108233",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=3",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "body" : "Multiple indexes are great but, the building-block for eviction policy will probably take the form of an enhanced \"priority\" calc that depends on fees, and anything else that's required.\r\n\r\nSeparate indexes leave unsolved the problem of how to combine them to find the next tx to evict.",
      "created_at" : "2015-07-08T18:11:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-119681982",
      "id" : 119681982,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-08T18:11:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119681982",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4284124?v=3",
         "events_url" : "https://api.github.com/users/dgenr8/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dgenr8/followers",
         "following_url" : "https://api.github.com/users/dgenr8/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dgenr8/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dgenr8",
         "id" : 4284124,
         "login" : "dgenr8",
         "organizations_url" : "https://api.github.com/users/dgenr8/orgs",
         "received_events_url" : "https://api.github.com/users/dgenr8/received_events",
         "repos_url" : "https://api.github.com/users/dgenr8/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dgenr8/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dgenr8"
      }
   },
   {
      "body" : "It's one step towards it.\n",
      "created_at" : "2015-07-08T18:15:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-119683191",
      "id" : 119683191,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-08T18:15:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119683191",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa Completely agree.   At least 2 indexes are needed - txid and \"priority\".\r\n\r\nEDIT: @morcos by quoted \"priority\" I mean the same thing as \"effective fee\" or fees with fee deltas applied.  Another name for it is an *objective function* (that which is to be maximized).",
      "created_at" : "2015-07-08T18:25:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-119689012",
      "id" : 119689012,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T01:46:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119689012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4284124?v=3",
         "events_url" : "https://api.github.com/users/dgenr8/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dgenr8/followers",
         "following_url" : "https://api.github.com/users/dgenr8/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dgenr8/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dgenr8",
         "id" : 4284124,
         "login" : "dgenr8",
         "organizations_url" : "https://api.github.com/users/dgenr8/orgs",
         "received_events_url" : "https://api.github.com/users/dgenr8/received_events",
         "repos_url" : "https://api.github.com/users/dgenr8/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dgenr8/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dgenr8"
      }
   },
   {
      "body" : "Continuing to support transaction priority (as defined by coin age) seems more trouble that its worth.  However, by combining this with #6357, it'll be easy and efficient to keep the existing policies in place.  I did some timing tests on the first 7 days of July and there was some small increase in the average of 250ms to connect a block.  Calling recalcPriorities took about 2ms.  In the busy spam period of July 7th, recalcPriorities was averaging about 8ms out of 500ms to connect a block.  Those seem like acceptable performance hits to me.  #6357 did not seem to adversely affect that performance and causes the priorities to actually be correct.\r\n\r\nWhere the default policies will break is when we start adding mempool eviction.  We'd need to maintain two separate maps of transactions, one for those destined to be included in the fee section and one for those to be included in the priority section of blocks and evict from them independently.  I'd argue that instead, we should accept that high priority but low fee transactions may get evicted from the mempool if we hit mempool saturation.   Alternatively we could implement @petertodd's exponentially increasing minRelayTxFee and not actually evict things.  Either way those are next steps and shouldn't hold up this getting merged.\r\n\r\nutACK at this point, I'm going to keep testing.\r\n\r\n",
      "created_at" : "2015-07-08T19:20:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-119703575",
      "id" : 119703575,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-08T19:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119703575",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@mikehearn insight: mempool DoS attack may be mitigated through some reliance on coin age priority, as coin age is not something that can be trivially bought on the spot, unlike fee priority.",
      "created_at" : "2015-07-08T21:38:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-119739092",
      "id" : 119739092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-08T22:21:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119739092",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4284124?v=3",
         "events_url" : "https://api.github.com/users/dgenr8/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dgenr8/followers",
         "following_url" : "https://api.github.com/users/dgenr8/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dgenr8/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dgenr8",
         "id" : 4284124,
         "login" : "dgenr8",
         "organizations_url" : "https://api.github.com/users/dgenr8/orgs",
         "received_events_url" : "https://api.github.com/users/dgenr8/received_events",
         "repos_url" : "https://api.github.com/users/dgenr8/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dgenr8/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dgenr8"
      }
   },
   {
      "body" : "@morcos thanks for measuring the recalcPriorities performance",
      "created_at" : "2015-07-09T10:50:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-119907677",
      "id" : 119907677,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-09T10:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/119907677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "body" : "Drop the priority index, IMO\r\n",
      "created_at" : "2015-07-10T14:24:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120421409",
      "id" : 120421409,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T14:24:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120421409",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "@wumpus @jgarzik @pstratem @gmaxwell @morcos @ashleyholman @jtimon @luke-jr Ping to get attention of the people involved here.\r\n\r\nThere are a bunch of related but not quite compatible changes being made here (better indexes, limited mempool, removing priority, accounting memory usage). I think we need to figure out what to do here at a higher level.\r\n\r\n1) Remain compatible with the existing priorities system. This means the recomputations of priority as implemented in this PR, and retaining the relatively complex multi-faceted block creation code. This is likely the least controversial change, but implementing correct mempool limiting becomes pretty hard.\r\n\r\n2) Simplify the priority mechanism to become single-faceted. This would mean defining a (potentially policy-dependent) single scoring function for transactions that can give a benefit to specific transactions. Something similar to priority could be implemented by mapping the \"zero-fee\" transactions onto a negative number -1/priority. A single ordered index would suffice, and mempool limiting and block creation would be simplified significantly, but re-evaluating the ordering would be necessary after every block.\r\n\r\n3) The same as (2), but only compute the policy-dependent scoring once only - when entering the mempool. You can approximate something similar to priority by counting old/large inputs as a virtual small increase in fee. It would not get updated for new blocks, simplifying code for replacement/limiting further.\r\n\r\n4) Just have a single feerate index, essentially limiting ourselves to a single mempool policy. This is arguably the most economic thing to do for miners, and has the best predictability for fee estimation. It's perhaps the most controversial change.\r\n\r\nI would prefer 2 or 3.",
      "created_at" : "2015-07-10T15:32:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120437240",
      "id" : 120437240,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T15:32:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120437240",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I think my preference is a mix between 3 and 4.\r\nI would prefer a single heuristic function that doesn't need to be recalculated with every block.\r\nMy preference: ```priority(tx, utxo) = fee(tx) / (size(tx) + delta_utxo_size(tx, utxo))```\r\nNote that ```delta_utxo_size(tx, utxo)``` can be negative but ```size(tx) + delta_utxo_size(tx, utxo)``` shouldn't.\r\nIn fact, we could make a ```consensus_size(tx, utxo) = size(tx) + delta_utxo_size(tx, utxo)``` a consensus rule, but I guess that's a topic for another PR.\r\n\r\n> essentially limiting ourselves to a single mempool policy\r\n\r\nNote that this limitation disappears when we have a CPolicy interface class and a -policy=<str> command line option.\r\n",
      "created_at" : "2015-07-10T16:00:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120444547",
      "id" : 120444547,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T16:02:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120444547",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon I wasn't even talking about specific policy we would like to see implemented, but rather about what type the \"framework\" should support. (3) and (4) cannot do the same thing as policy now. (4) doesn't have any policy in the mix at all for prioritization of transactions.",
      "created_at" : "2015-07-10T16:04:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120445376",
      "id" : 120445376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T16:04:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120445376",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "I think I'd vote for 1.  Not because I really care about keeping priority, but because I don't want the controversy of removing it to delay the other needed improvements.  I can see two downsides to 1.  There is some additional memory footprint and complication by maintaining correct priorities, but I think the efficiency hit is tolerable.  And the issue about defining \"correct\" mempool limiting.  However, I think that issue exists regardless of whether we maintain priority.  @jgarzik's comments about booting oldest first make a lot of sense for relay nodes which are incapable of perfectly guessing the composite miner transaction inclusion policies, but don't make sense for miners who should boot based on their own inclusion policies.   Also if we combine a floating relay minimum with these other things, we might be able to reach a situation where limiting the mempool is an edge case safety measure.",
      "created_at" : "2015-07-10T16:04:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120445454",
      "id" : 120445454,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T16:04:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120445454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@morcos My largest objection to 1 is that it makes implementing limiting the mempool harder, and (2) can be made to do the (almost?) same thing, but needs a larger code change.\r\n\r\nI don't think we can make mempool limiting an edge case. Adjusting the relayfee works preventive, while mempool limiting works on-the-fly. ",
      "created_at" : "2015-07-10T16:11:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120447860",
      "id" : 120447860,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T16:11:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120447860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> @jtimon I wasn't even talking about specific policy we would like to see implemented, but rather about what type the \"framework\" should support.\r\n\r\nOk, then I'd like a unified ```Priority(const CTransaction& tx, const CCoinsViewCache& mapInputs)``` function and a single unified space: no separated space for low fee transactions. If I understood you correctly, that's the same as 3.\r\n\r\n> (3) and (4) cannot do the same thing as policy now.\r\n\r\nI don't think I understand this. Why can't ```Priority(const CTransaction& tx, const CCoinsViewCache& mapInputs)``` be implemented in policy/policy or policy/fees.\r\n",
      "created_at" : "2015-07-10T16:13:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120448498",
      "id" : 120448498,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T16:13:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120448498",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon (3) and (4) cannot update the score after acceptance into the mempool. Priority is time-dependent (needs to be recomputed after every block).",
      "created_at" : "2015-07-10T16:15:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120448889",
      "id" : 120448889,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T16:15:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120448889",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "> @jtimon (3) and (4) cannot update the score after acceptance into the mempool.\r\n\r\nYes, that's why I said \"single heuristic function that doesn't need to be recalculated\".\r\n\r\n> Priority is time-dependent (needs to be recomputed after every block).\r\n\r\nOh, I'm talking about redefining what priority means: to a single unified heuristic for ordering transactions that takes size, fees and the change in size to the utxo (but not time) into account. Otherwise I would have said ```priority(tx, utxo, time)``` instead of ```priority(tx, utxo)```. \r\nIs this option 5 then? I thought this was 3.\r\n",
      "created_at" : "2015-07-10T16:21:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120450191",
      "id" : 120450191,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T16:21:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120450191",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@sipa I'm trying to understand how it makes limiting the mempool harder?  Do you mean that high priority transactions might accidentally be booted?   That's the problem that I'm saying exists regardless.  If you boot by fee, then you might end up with high fee (but for some other reason unlikely to be mined) tx's sticking around in your mempool forever.  If you boot by time, then you might accidentally boot a high fee transaction.  So I feel like we already need to put more thought into how we boot.\r\n\r\nBy adjusting the relayfee, I meant on the fly.  Such as in [this idea](https://github.com/morcos/bitcoin/commit/1ff50ca373d8684061b617d9183999e7f1b33251) I got from @petertodd.  The downside of that is that you might mine low fee transactions which made it in your mempool earlier, but reject higher fee transactions that come later.  But I think it might be easier to reason about mempools that have a changing relay cutoff, than mempools that are booting things.  ",
      "created_at" : "2015-07-10T16:22:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120450481",
      "id" : 120450481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T16:22:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120450481",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "As I noted on IRC:  I think the current multi-index patch is fine _for the current codebase_.  It is most aligned with current code (fee, priority)\r\n\r\nThus concept ACK for as-is implementation.\r\n",
      "created_at" : "2015-07-10T16:40:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120454992",
      "id" : 120454992,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T16:40:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120454992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=3",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "body" : "@jtimon No, that's just 3. I guess it was just a semantics discussion.\r\n\r\nPut another way:\r\n(a) Do we need a separate fee area and priority area (1), or is a unified score sufficient (continue)?\r\n(b) Does the unified score need to be height dependent (2), or can it be computed only at mempool entrance (continue)\r\n(c) Does the only-once-computed score need to be policy dependent at all (3) or does only feerate suffice (4) ?",
      "created_at" : "2015-07-10T16:48:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120456691",
      "id" : 120456691,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T16:48:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120456691",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Ok, so I think the best is 3: a unified score is sufficient and it can be computed only at mempool entrance, but it needs to be a function so that we can support different policies with different scores in the future (so nack 4).",
      "created_at" : "2015-07-10T17:08:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120461921",
      "id" : 120461921,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T17:08:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120461921",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Ok, suggested deployment:\r\n* Merge this (#6331) without the priority-based index (@ashleyholman, if you agree, can you remove the priority code here?)\r\n* Implement block size (as in #6281) limiting using this index, using actual usage stats (#6410).\r\n* Generalize the feerate here to a unified policy-dependent score (effectively removing the priority as it exists today, as in #6405).\r\n* Implement block creation using this score-based index.\r\n\r\nThis results at every step in a usable system without degradation.",
      "created_at" : "2015-07-10T17:23:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120464993",
      "id" : 120464993,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T17:23:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120464993",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa ACK for suggested deployment plan.\r\n\r\n",
      "created_at" : "2015-07-10T17:43:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120475275",
      "id" : 120475275,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T17:43:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120475275",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4360349?v=3",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "body" : "@sipa the overall plan doesn't sound bad, but some points:\r\nFor #6281 would CTxMemPool::removeOldTransactions work better if we introduce a time index here like morcos proposes?\r\n\r\nAlso, I think your third point \"Generalize the feerate here to a unified policy-dependent score (effectively removing the priority as it exists today, as in #6405).\"\r\nCan be divided in 2:\r\n1) Replace the pure feerate index with the new unified index.\r\n2) Stop using feerates and priorities and just use the new unified heuristics (as in #6405)\r\n\r\n1 can be done directly in this PR. The new index is first unused, then used for the cap, then for almost anything else, then for block creation too.\r\nSo CompareTxMemPoolEntryByFee would need to be replaced with something more generic, ideally, compatible with multiple policies. Instead of using CTxMemPoolEntry::GetFeeRate(), we could directly use something like GetTxPriority(const CTransaction&) that can be implemented in policy/policy.cpp [to be later replaced with the method CPolicy::GetTxPriority(const CTransaction&)].\r\n\r\nI still don't know how the comparator will get a const reference to a Policy without using the global directly though. But that will only be a problem when we want to turn the function into a method.\r\n ",
      "created_at" : "2015-07-10T18:14:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120483624",
      "id" : 120483624,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-10T18:14:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120483624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@sipa I have removed the priority index.  The fee-rate index previously used priority as a secondary ordering, so I have now changed that to use nTime instead.  Ie. when the fee-rate is equal, the index will favour older transactions.\r\n\r\n@jtimon I can add an index on time, but first I would like to understand the reasoning for CTxMemPool::removeOldTransactions.  I've posted a comment in #6281 to clarify.",
      "created_at" : "2015-07-11T10:34:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120603044",
      "id" : 120603044,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T10:34:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120603044",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "body" : "@ashleyholman sure, that it's something that could be always added later anyway (for example, in #6281 ).\r\n\r\nWhat about replacing CompareTxMemPoolEntryByFee with something that calls an independent function instead of calling CTxMemPoolEntry::GetFeeRate() ?\r\nIt can be functionally identical as what you have (ie: the independent function also looks returns the feerate), but it will make it easier to support multiple policies with different heuristic functions later (specially if you define the function in policy/policy.cpp). The new priority function can return just an integer instead of a double, and it should take const CTransaction& as parameter instead of a CTxMemPoolEntry like CTxMemPoolEntry::GetFeeRate() [as this \"parameter\"] IMO.\r\n",
      "created_at" : "2015-07-11T12:40:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120614499",
      "id" : 120614499,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T12:40:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120614499",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon You might as well just replace the feerate field in CTxMemPoolEntry with a score field, and call a policy function to compute the score when creating the entry, and then simply compare the scores. Alternatively, you definitely have to pass the CTxMemPoolEntry and not CTransaction, as you can't compute the feerate from a CTransaction.",
      "created_at" : "2015-07-11T12:45:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120614666",
      "id" : 120614666,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T12:45:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120614666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Concept ACK @sipa's unified priority ideas.\r\n\r\nDone right this should make implementing CPFP reasonably easy, as the child can have a high priority, meaning \"mine this tx, and whatever txs it depends on\" Block creation then needs to be taught to to keep a list of already included txs; if it has a list of already spent txouts we can easily implement CPFP RBF scorched-earth by simply not removing double-spent txs immediately.\r\n\r\nI did some work on that idea awhile back; didn't have time/funding to finish it, but it seemed like a reasonable approach at least.",
      "created_at" : "2015-07-11T13:16:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120615914",
      "id" : 120615914,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T13:16:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120615914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "@ashleyholman What I'm saying above, corrected and in code (on top of fad00fb7 ): https://github.com/bitcoin/bitcoin/commit/f86244ea960cb0a9fabf7c89886061034c46774b\r\nAlso, I think https://github.com/bitcoin/bitcoin/pull/6331/files#diff-8304b3e94624036c3673f31eeb7e9de0R83 removes the need for the time index.\r\n\r\n@sipa Yes, there were some wrong things in what I said. I decided that it would be faster for me to communicate with code. Please, let me know what you think about that. Most of the arguments are not used, but they could be useful for some other policies. I believe this is the most policy-flexible thing we can do without disturbing anything.",
      "created_at" : "2015-07-11T14:05:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120623510",
      "id" : 120623510,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T14:05:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120623510",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon I fully agree that the sorting order should be something controlled by policy. I think there are more urgent issues than that now, though.",
      "created_at" : "2015-07-11T14:09:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120624911",
      "id" : 120624911,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T14:09:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120624911",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@ashleyholman See rebased version of this PR on top of #6410 inside #6421. ",
      "created_at" : "2015-07-11T14:10:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120625109",
      "id" : 120625109,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T14:10:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120625109",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa The point is that my proposal is functionally equivalent and almost diff-free (compared to the total PR diff) if it is done in this PR. If it is not done in this PR, it can be done later with a less clean history and more work as additional costs. In terms of git history bike-shedding, this is the perfect time and place to do this, precisely because it's almost free to do so (nothing is depending on the new index yet).\r\nNote that my 19+7- (compared to the PR, not as a delta(PR, PR+jtimon_nits) which is even smaller) proposal doesn't have any dependencies besides this PR in itself. It is intended to be squashed in this PR or left for later.\r\nWhat is the disadvantage of squashing my suggestion? ",
      "created_at" : "2015-07-11T14:17:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120625327",
      "id" : 120625327,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T14:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120625327",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon I'm sorry, but I have no time to deal with that right now.",
      "created_at" : "2015-07-11T14:18:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120625388",
      "id" : 120625388,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T14:18:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120625388",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@jtimon looks good to me.  The only thing I wonder about is the nHeight ordering which is still inside the comparator.  I wonder if there's a nice way to move that inside the policy as well.  Maybe the comparator function has to be provided by the policy class?\r\n\r\nBTW I'm not sure how to fetch your commit down into my local repository, because github isn't telling me which repo/branch it's from.",
      "created_at" : "2015-07-11T14:43:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120626618",
      "id" : 120626618,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T14:43:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120626618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "body" : "Since @sipa is worried that introducing policy may slow this down, here's an even simpler fixup commit ( https://github.com/bitcoin/bitcoin/commit/1bae6755ade6a4158477fcb19ef6af70f9704fd7 ) that would solve my concerns, which I will try to summarize.\r\nI'm fine with using the feeRate alone as the heuristics/score for the new index, but let's not get married to it, we don't know what the score will depend on in the future: all we know it's that we want it to be calculated once and the information we have available in CTxMemPoolEntry's constructor.\r\nPlease, let's calculate the feeRate score in an independent function that doesn't make any additional assumptions. I don't think I'm asking for that much (specially when it's almost free total-diff-wise).\r\n\r\n",
      "created_at" : "2015-07-11T14:52:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120626988",
      "id" : 120626988,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T14:52:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120626988",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Keep in mind that some of @sipa's fixes may wind up getting backported  to v0.10.x as a emergency hot fix, so it pays to keep them as minimal as possible.\n\nOn 11 July 2015 10:53:14 GMT-04:00, \"Jorge TimÃÂ³n\" <notifications@github.com> wrote:\n>Since @sipa is worried that introducing policy may slow this down,\n>here's an even simpler fixup commit (\n>https://github.com/bitcoin/bitcoin/commit/1bae6755ade6a4158477fcb19ef6af70f9704fd7\n>) that would solve my concerns, which I will try to summarize.\n>I'm fine with using the feeRate alone as the heuristics/score for the\n>new index, but let's not get married to it, we don't know what the\n>score will depend on in the future: all we know it's that we want it to\n>be calculated once and the information we have available in\n>CTxMemPoolEntry's constructor.\n>Please, let's calculate the feeRate score in an independent function\n>that doesn't make any additional assumptions. I don't think I'm asking\n>for that much (specially when it's almost free total-diff-wise).\n>\n>\n>\n>---\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120626988\n\n",
      "created_at" : "2015-07-11T15:01:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120627646",
      "id" : 120627646,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T15:01:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120627646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "@petertodd I believe my current suggestion is very minimal and portable (no less than the current PR, since it only adds a single-line function that can be easily pasted in previous versions).\r\nMy suggestion isn't actually not functionally equivalent but superior: the PR as it stands is ~~dividing~~multiplying the score by 1000 for no good reason.",
      "created_at" : "2015-07-11T15:05:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120627819",
      "id" : 120627819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T15:07:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120627819",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Sure, so make it a separate pull-req to make that easy to evaluate; easier to cherry pick if its separate.\n\nOn 11 July 2015 11:05:50 GMT-04:00, \"Jorge TimÃÂ³n\" <notifications@github.com> wrote:\n>@petertodd I believe my current suggestion is very minimal and portable\n>(no less than the current PR, since it only adds a single-line function\n>that can be easily pasted in previous versions).\n>My suggestion isn't actually not functionally equivalent but superior:\n>the PR as it stands is dividing the score by 1000 for no good reason.\n>\n>---\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120627819\n\n",
      "created_at" : "2015-07-11T15:07:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120627951",
      "id" : 120627951,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T15:07:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120627951",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=3",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "body" : "@petertodd No, it is better to cherry pick this one if ashleyholman squashes my commit.",
      "created_at" : "2015-07-11T15:08:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120627989",
      "id" : 120627989,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T15:12:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120627989",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon The code in that commit looks perfectly fine to me, but I don't think there's a benefit to including it now.",
      "created_at" : "2015-07-11T15:09:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120628033",
      "id" : 120628033,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T15:09:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120628033",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=3",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "@sipa the only benefit is that it won't have to be introduced in the future (when it won't be free total-diff-of-this-PR-wise [well, it's actually +4 for the new function but \"just now\" is as cheap as it can get diff-wise]).\r\nWhat is the disadvantage? That's totally what I'm missing.",
      "created_at" : "2015-07-11T15:14:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120629695",
      "id" : 120629695,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T15:14:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120629695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "IMO the question is why would CTxMemPoolEntry::feeRate ever need to be replaced by CTxMemPoolEntry::nScore if CTxMemPoolEntry::feeRate hasn't been introduced yet, forget about the independent function if you want:\r\n```\r\n    nScore = _nFee / nTxSize;\r\n```\r\nor even (to be fully-funcationally equivalent to the current PR)\r\n```\r\n    nScore = _nFee * 1000 / nTxSize;\r\n```\r\nis enough for me: fully diff-free if included in this PR.\r\n\r\nEDIT: @ashleyholman My latest proposal is ~~https://github.com/bitcoin/bitcoin/commit/a596abe48dd070385316c1cf711a63fa012dc66f~~ https://github.com/ashleyholman/bitcoin/compare/mempool_multiindex...jtimon:pr-6331-0.11.99 +7-7 with respect to your PR and +0-0 total-diff-wise. You tell me if what I'm asking is that crazy. ",
      "created_at" : "2015-07-11T15:31:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120634244",
      "id" : 120634244,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T16:11:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120634244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Nits commit rebased.",
      "created_at" : "2015-07-11T16:12:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120636401",
      "id" : 120636401,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T16:12:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120636401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "@jtimon I see your point, but I think that keeping each patch understandable and isolated is just as important as minimizing the lines changed.\r\n\r\nThis patch is more readable if it is just introducing an index on fee rate without trying to genericize the policy at the same time.  A future patch could externalize the policy while introducing the score variable(s).\r\n",
      "created_at" : "2015-07-11T21:25:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120662462",
      "id" : 120662462,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T21:25:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120662462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   },
   {
      "body" : "@ashleyholman The code (that doesn't contain anything related to policy) is here https://github.com/jtimon/bitcoin/commits/pr-6331-0.11.99\r\n\r\n@sipa whatever call it nRevenueScore instead of nScore or even feeRate, but there's not reason to use CFeeRate instead of int64_t.\r\nWhat is the disadvantage of using int64_t instead of CFeeRate. Or, what is the advantage of doing the opposite?\r\n\r\nThe main advantage of not using CFeeRate right now is not having to fix it later.",
      "created_at" : "2015-07-11T21:38:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-120662917",
      "id" : 120662917,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-11T21:38:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/120662917",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1008458?v=3",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "body" : "Priority cannot be removed without breaking things for current users and programs that rely on it. In particular, priority is the main reason that a transaction that undershoots on fee will still confirm eventually, which lends significant robustness. And priority is probably very useful for ensuring that at least some legitimate transactions confirm even if someone is burning fee money to flood the network with DoS transactions. Please do not remove it.",
      "created_at" : "2015-07-14T12:23:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-121221282",
      "id" : 121221282,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-14T12:23:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/121221282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/971089?v=3",
         "events_url" : "https://api.github.com/users/mikehearn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mikehearn/followers",
         "following_url" : "https://api.github.com/users/mikehearn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mikehearn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mikehearn",
         "id" : 971089,
         "login" : "mikehearn",
         "organizations_url" : "https://api.github.com/users/mikehearn/orgs",
         "received_events_url" : "https://api.github.com/users/mikehearn/received_events",
         "repos_url" : "https://api.github.com/users/mikehearn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mikehearn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mikehearn"
      }
   },
   {
      "body" : "This work has been rolled into #6421 so I'll close this off now.",
      "created_at" : "2015-07-14T13:12:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/6331#issuecomment-121234366",
      "id" : 121234366,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/6331",
      "updated_at" : "2015-07-14T13:12:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/121234366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/549484?v=3",
         "events_url" : "https://api.github.com/users/ashleyholman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ashleyholman/followers",
         "following_url" : "https://api.github.com/users/ashleyholman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ashleyholman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ashleyholman",
         "id" : 549484,
         "login" : "ashleyholman",
         "organizations_url" : "https://api.github.com/users/ashleyholman/orgs",
         "received_events_url" : "https://api.github.com/users/ashleyholman/received_events",
         "repos_url" : "https://api.github.com/users/ashleyholman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ashleyholman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ashleyholman"
      }
   }
]
