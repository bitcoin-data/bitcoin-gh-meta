[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-03-22T21:44:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1075674350",
      "id" : 1075674350,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585AHXzu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1075674350/reactions"
      },
      "updated_at" : "2022-03-22T21:44:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1075674350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Huge Concept ACK!\r\n\r\nLooking at existing tracing contexts, it seems `wallet` context would be better level of granularity. Also `doc/tracing.md` needs to be updated to mention new context.\r\n\r\nCould you also add an example to `contrib/tracing` about how to use the new tracing points?",
      "created_at" : "2022-03-23T08:39:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1076090888",
      "id" : 1076090888,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585AI9gI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1076090888/reactions"
      },
      "updated_at" : "2022-03-23T08:42:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1076090888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r833021087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/833021087"
         }
      },
      "author_association" : "NONE",
      "body" : "There is any motivation to use the plain `enum` here and not the `enum class`?\r\n\r\nMaybe I'm missing some things but usually, the enum class is preferred in C++.",
      "commit_id" : "4fed26af961a87a976d537e496f38b72e1a6c5e8",
      "created_at" : "2022-03-23T09:09:49Z",
      "diff_hunk" : "@@ -200,21 +200,32 @@ struct OutputGroup\n  */\n [[nodiscard]] CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, CAmount change_cost, CAmount target, bool use_effective_value = true);\n \n+enum SelectionAlgorithm : uint8_t\n+{\n+    BNB = 0,\n+    KNAPSACK = 1,\n+    SRD = 2,\n+    MANUAL = 3,\n+};\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r833021087",
      "id" : 833021087,
      "line" : 210,
      "node_id" : "PRRC_kwDOABII584xpuSf",
      "original_commit_id" : "4fed26af961a87a976d537e496f38b72e1a6c5e8",
      "original_line" : 210,
      "original_position" : 11,
      "original_start_line" : 203,
      "path" : "src/wallet/coinselection.h",
      "position" : 11,
      "pull_request_review_id" : 918428306,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/833021087/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 203,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-23T09:09:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/833021087",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/17150045?v=4",
         "events_url" : "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vincenzopalazzo/followers",
         "following_url" : "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vincenzopalazzo",
         "id" : 17150045,
         "login" : "vincenzopalazzo",
         "node_id" : "MDQ6VXNlcjE3MTUwMDQ1",
         "organizations_url" : "https://api.github.com/users/vincenzopalazzo/orgs",
         "received_events_url" : "https://api.github.com/users/vincenzopalazzo/received_events",
         "repos_url" : "https://api.github.com/users/vincenzopalazzo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vincenzopalazzo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vincenzopalazzo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @0xB10C ",
      "created_at" : "2022-03-23T09:47:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1076162532",
      "id" : 1076162532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585AJO_k",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1076162532/reactions"
      },
      "updated_at" : "2022-03-23T09:47:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1076162532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Cool, Concept ACK! Will review.\r\n\r\nWe might want to start adding tracepoint interface tests (see https://github.com/bitcoin/bitcoin/pull/24358) in the same PR when adding new tracepoints. This makes review a lot easier and provides an usage example.",
      "created_at" : "2022-03-23T10:07:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1076181553",
      "id" : 1076181553,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585AJTox",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1076181553/reactions"
      },
      "updated_at" : "2022-03-23T10:07:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1076181553",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r833528856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/833528856"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "64338c1a1f4dadb371919042f6be4399ec16b8ec",
      "created_at" : "2022-03-23T17:18:16Z",
      "diff_hunk" : "@@ -200,21 +200,32 @@ struct OutputGroup\n  */\n [[nodiscard]] CAmount GetSelectionWaste(const std::set<CInputCoin>& inputs, CAmount change_cost, CAmount target, bool use_effective_value = true);\n \n+enum SelectionAlgorithm : uint8_t\n+{\n+    BNB = 0,\n+    KNAPSACK = 1,\n+    SRD = 2,\n+    MANUAL = 3,\n+};\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r833528856",
      "id" : 833528856,
      "in_reply_to_id" : 833021087,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584xrqQY",
      "original_commit_id" : "4fed26af961a87a976d537e496f38b72e1a6c5e8",
      "original_line" : 210,
      "original_position" : 11,
      "original_start_line" : 203,
      "path" : "src/wallet/coinselection.h",
      "position" : null,
      "pull_request_review_id" : 919154983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/833528856/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-23T17:18:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/833528856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24935](https://github.com/bitcoin/bitcoin/pull/24935) (mempool: Add usdt event tracepoints and eBPF logging tool. by russeree)\n* [#24897](https://github.com/bitcoin/bitcoin/pull/24897) ([Draft / POC] Silent Payments by w0xlt)\n* [#24845](https://github.com/bitcoin/bitcoin/pull/24845) (wallet: createTransaction, return proper error description for  \"too-long-mempool-chain\" + introduce generic Result classes by furszy)\n* [#24752](https://github.com/bitcoin/bitcoin/pull/24752) (wallet: increase BnB upper limit by S3RK)\n* [#20640](https://github.com/bitcoin/bitcoin/pull/20640) (wallet, refactor: return out-params of CreateTransaction() as optional struct by theStack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-03-24T16:13:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1077797641",
      "id" : 1077797641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585APeMJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1077797641/reactions"
      },
      "updated_at" : "2022-04-21T20:08:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1077797641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-03-24T22:16:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1078434227",
      "id" : 1078434227,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585AR5mz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1078434227/reactions"
      },
      "updated_at" : "2022-03-24T22:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1078434227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-03-25T21:27:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1079447448",
      "id" : 1079447448,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585AVw-Y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1079447448/reactions"
      },
      "updated_at" : "2022-03-25T21:27:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1079447448",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-03-26T00:29:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1079533303",
      "id" : 1079533303,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585AWF73",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1079533303/reactions"
      },
      "updated_at" : "2022-03-26T00:29:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1079533303",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/45598?v=4",
         "events_url" : "https://api.github.com/users/jb55/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jb55/followers",
         "following_url" : "https://api.github.com/users/jb55/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jb55/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jb55",
         "id" : 45598,
         "login" : "jb55",
         "node_id" : "MDQ6VXNlcjQ1NTk4",
         "organizations_url" : "https://api.github.com/users/jb55/orgs",
         "received_events_url" : "https://api.github.com/users/jb55/received_events",
         "repos_url" : "https://api.github.com/users/jb55/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jb55/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jb55/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jb55"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2022-04-04T12:41:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1087505741",
      "id" : 1087505741,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585A0gVN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087505741/reactions"
      },
      "updated_at" : "2022-04-04T12:41:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087505741",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "fwiw: I think to move this forward at least documentation in [doc/tracing.md#tracepoint-documentation](https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#tracepoint-documentation) and interface tests similar to #24358 are needed.\r\n\r\nI'm not too familiar with coin selection and don't know what e.g. the `coin_selection:aps_create_tx_internal` tracepoint traces. This makes reviewing cumbersome for me.",
      "created_at" : "2022-04-14T09:05:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1098894676",
      "id" : 1098894676,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585Bf81U",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098894676/reactions"
      },
      "updated_at" : "2022-04-14T09:05:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1098894676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've added docs and a test.",
      "created_at" : "2022-04-14T18:38:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1099517472",
      "id" : 1099517472,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585BiU4g",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1099517472/reactions"
      },
      "updated_at" : "2022-04-14T18:38:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1099517472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, thanks for adding tracepoints. I'll try to have a more detailed look at this soon.",
      "created_at" : "2022-04-14T18:59:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1099532283",
      "id" : 1099532283,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585BiYf7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1099532283/reactions"
      },
      "updated_at" : "2022-04-14T18:59:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1099532283",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854949055"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854949055"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "duplicate docs for `coin_selection:attempting_aps_create_tx`",
      "commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "created_at" : "2022-04-21T08:57:04Z",
      "diff_hunk" : "@@ -168,6 +168,58 @@ Arguments passed:\n 4. Value of the coin as `int64`\n 5. If the coin is a coinbase as `bool`\n \n+### Context `coin_selection`\n+\n+#### Tracepoint `coin_selection:selected_coins`\n+\n+Is called when `SelectCoins` completes.\n+\n+Arguments passed:\n+1. Wallet name as `pointer to C-style string`\n+2. Coin selection algorithm name as `pointer to C-style string`\n+3. Selection target value as `int64`\n+4. Calculated waste metric of the solution as `int64`\n+5. Total value of the selected inputs as `int64`\n+\n+#### Tracepoint `coin_selection:normal_create_tx_internal`\n+\n+Is called when the first `CreateTransactionInternal` completes.\n+\n+Arguments passed:\n+1. Wallet name as `pointer to C-style string`\n+2. Whether `CreateTransactionInternal` succeeded as `bool`\n+3. The expected transaction fee as an `int64`\n+4. The position of the change output as an `int32`\n+\n+#### Tracepoint `coin_selection:attempting_aps_create_tx`\n+\n+Is called when `CreateTransactionInternal` is called the second time for the optimistic\n+Avoid Partial Spends selection attempt. This is used to determine whether the next\n+tracepoints called are for the Avoid Partial Spends solution, or a different transaction.\n+\n+Arguments passed:\n+1. Wallet name as `pointer to C-style string`\n+\n+#### Tracepoint `coin_selection:aps_create_tx_internal`\n+\n+Is called when the second `CreateTransactionInternal` with Avoid Partial Spends enabled completes.\n+\n+Arguments passed:\n+1. Wallet name as `pointer to C-style string`\n+2. Whether the Avoid Partial Spends solution will be used as `bool`\n+3. Whether `CreateTransactionInternal` succeeded as` bool`\n+4. The expected transaction fee as an `int64`\n+5. The position of the change output as an `int32`\n+\n+#### Tracepoint `coin_selection:attempting_aps_create_tx`\n+\n+Is called when `CreateTransactionInternal` is called the second time for the optimistic\n+Avoid Partial Spends selection attempt. This is used to determine whether the next\n+tracepoints called are for the Avoid Partial Spends solution, or a different transaction.\n+\n+Arguments passed:\n+1. Wallet name as `pointer to C-style string`",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854949055",
      "id" : 854949055,
      "line" : 221,
      "node_id" : "PRRC_kwDOABII584y9Xy_",
      "original_commit_id" : "e1aff5c2db24425a007e32da2de8cba3593d10ad",
      "original_line" : 221,
      "original_position" : 54,
      "original_start_line" : 214,
      "path" : "doc/tracing.md",
      "position" : 54,
      "pull_request_review_id" : 948286342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854949055/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 214,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-21T09:55:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854949055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854956480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854956480"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "CI linter complains:\r\n```\r\ntest/functional/interface_usdt_coinselection.py:10:1: F401 'ctypes' imported but unused\r\ntest/functional/interface_usdt_coinselection.py:11:1: F401 'io.BytesIO' imported but unused\r\n```",
      "commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "created_at" : "2022-04-21T09:04:47Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854956480",
      "id" : 854956480,
      "line" : 11,
      "node_id" : "PRRC_kwDOABII584y9ZnA",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 11,
      "original_position" : 11,
      "original_start_line" : 10,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : 11,
      "pull_request_review_id" : 948286342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854956480/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 10,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-21T09:55:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854956480",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854966780"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854966780"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I found this to be unclear, probably because I was unfamiliar with Python's `for/else`. If I understand correctly, you want to check that exactly `len(expected_types)` tracepoints were triggered? \r\n\r\n```suggestion\r\n        try:\r\n            for i in range(0, len(expected_types) + 1):\r\n                event = self.bpf[\"coin_selection_events\"].pop()\r\n                assert_equal(event.wallet_name.decode(), self.default_wallet_name)\r\n                assert_equal(event.type, expected_types[i])\r\n                events.append(event)\r\n            else:\r\n                # If the loop exits successfully instead of throwing a KeyError, then we have had\r\n                # more events than expected. There should be no more than `len(expected_types)` events.\r\n                assert False\r\n        except KeyError:\r\n            assert_equal(len(events), len(expected_types))\r\n            return events\r\n```",
      "commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "created_at" : "2022-04-21T09:15:39Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;\n+    s64 fee;\n+    s32 change_pos;\n+\n+    // aps create tx event\n+    u8 use_aps;\n+};\n+\n+BPF_QUEUE(coin_selection_events, struct event_data, 1024);\n+\n+int trace_selected_coins(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 1;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg_p(2, ctx, &data.algo, ALGO_NAME_LENGTH);\n+    bpf_usdt_readarg(3, ctx, &data.target);\n+    bpf_usdt_readarg(4, ctx, &data.waste);\n+    bpf_usdt_readarg(5, ctx, &data.selected_value);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_normal_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 2;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.success);\n+    bpf_usdt_readarg(3, ctx, &data.fee);\n+    bpf_usdt_readarg(4, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_attempt_aps(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 3;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_aps_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 4;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.use_aps);\n+    bpf_usdt_readarg(3, ctx, &data.success);\n+    bpf_usdt_readarg(4, ctx, &data.fee);\n+    bpf_usdt_readarg(5, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\"\"\"\n+\n+\n+class CoinSelectionTracepointTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_platform_not_linux()\n+        self.skip_if_no_bitcoind_tracepoints()\n+        self.skip_if_no_python_bcc()\n+        self.skip_if_no_bpf_permissions()\n+        self.skip_if_no_wallet()\n+\n+    def get_tracepoints(self, expected_types):\n+        events = []\n+        try:\n+            for i in range(0, 6):\n+                event = self.bpf[\"coin_selection_events\"].pop()\n+                assert_equal(event.wallet_name.decode(), self.default_wallet_name)\n+                assert_equal(event.type, expected_types[i])\n+                events.append(event)\n+            else:\n+                # If the loop exits successfully instead of throwing a KeyError, then we have had\n+                # more events than expected. There should be no more than 5 events.\n+                assert False\n+        except KeyError:\n+            assert_equal(len(events), len(expected_types))\n+            return events",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854966780",
      "id" : 854966780,
      "line" : 127,
      "node_id" : "PRRC_kwDOABII584y9cH8",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 127,
      "original_position" : 127,
      "original_start_line" : 115,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : 127,
      "pull_request_review_id" : 948286342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854966780/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 115,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-21T09:55:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854966780",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854970298"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854970298"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    bool success;\r\n```",
      "commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "created_at" : "2022-04-21T09:19:13Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854970298",
      "id" : 854970298,
      "line" : 42,
      "node_id" : "PRRC_kwDOABII584y9c-6",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 42,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : 42,
      "pull_request_review_id" : 948286342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854970298/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-21T09:55:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854970298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854970461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854970461"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    bool use_aps;\r\n```",
      "commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "created_at" : "2022-04-21T09:19:24Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;\n+    s64 fee;\n+    s32 change_pos;\n+\n+    // aps create tx event\n+    u8 use_aps;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854970461",
      "id" : 854970461,
      "line" : 47,
      "node_id" : "PRRC_kwDOABII584y9dBd",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 47,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : 47,
      "pull_request_review_id" : 948286342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854970461/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-21T09:55:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854970461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854971486"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854971486"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "with event.success being a `bool` rather than a `u8`\r\n```suggestion\r\n                success = event.success\r\n```",
      "commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "created_at" : "2022-04-21T09:20:27Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;\n+    s64 fee;\n+    s32 change_pos;\n+\n+    // aps create tx event\n+    u8 use_aps;\n+};\n+\n+BPF_QUEUE(coin_selection_events, struct event_data, 1024);\n+\n+int trace_selected_coins(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 1;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg_p(2, ctx, &data.algo, ALGO_NAME_LENGTH);\n+    bpf_usdt_readarg(3, ctx, &data.target);\n+    bpf_usdt_readarg(4, ctx, &data.waste);\n+    bpf_usdt_readarg(5, ctx, &data.selected_value);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_normal_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 2;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.success);\n+    bpf_usdt_readarg(3, ctx, &data.fee);\n+    bpf_usdt_readarg(4, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_attempt_aps(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 3;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_aps_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 4;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.use_aps);\n+    bpf_usdt_readarg(3, ctx, &data.success);\n+    bpf_usdt_readarg(4, ctx, &data.fee);\n+    bpf_usdt_readarg(5, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\"\"\"\n+\n+\n+class CoinSelectionTracepointTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_platform_not_linux()\n+        self.skip_if_no_bitcoind_tracepoints()\n+        self.skip_if_no_python_bcc()\n+        self.skip_if_no_bpf_permissions()\n+        self.skip_if_no_wallet()\n+\n+    def get_tracepoints(self, expected_types):\n+        events = []\n+        try:\n+            for i in range(0, 6):\n+                event = self.bpf[\"coin_selection_events\"].pop()\n+                assert_equal(event.wallet_name.decode(), self.default_wallet_name)\n+                assert_equal(event.type, expected_types[i])\n+                events.append(event)\n+            else:\n+                # If the loop exits successfully instead of throwing a KeyError, then we have had\n+                # more events than expected. There should be no more than 5 events.\n+                assert False\n+        except KeyError:\n+            assert_equal(len(events), len(expected_types))\n+            return events\n+\n+\n+    def determine_selection_from_usdt(self, events):\n+        success = None\n+        use_aps = None\n+        algo = None\n+        waste = None\n+        change_pos = None\n+\n+        is_aps = False\n+        sc_events = []\n+        for event in events:\n+            if event.type == 1:\n+                if not is_aps:\n+                    algo = event.algo.decode()\n+                    waste = event.waste\n+                sc_events.append(event)\n+            elif event.type == 2:\n+                success = event.success == 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854971486",
      "id" : 854971486,
      "line" : 146,
      "node_id" : "PRRC_kwDOABII584y9dRe",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 146,
      "original_position" : 146,
      "original_start_line" : null,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : 146,
      "pull_request_review_id" : 948286342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854971486/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-21T09:55:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854971486",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854972103"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854972103"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "with event.use_aps being a `bool` rather than a `u8`\r\n\r\n```suggestion\r\n                if event.use_aps:\r\n```",
      "commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "created_at" : "2022-04-21T09:21:07Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;\n+    s64 fee;\n+    s32 change_pos;\n+\n+    // aps create tx event\n+    u8 use_aps;\n+};\n+\n+BPF_QUEUE(coin_selection_events, struct event_data, 1024);\n+\n+int trace_selected_coins(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 1;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg_p(2, ctx, &data.algo, ALGO_NAME_LENGTH);\n+    bpf_usdt_readarg(3, ctx, &data.target);\n+    bpf_usdt_readarg(4, ctx, &data.waste);\n+    bpf_usdt_readarg(5, ctx, &data.selected_value);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_normal_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 2;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.success);\n+    bpf_usdt_readarg(3, ctx, &data.fee);\n+    bpf_usdt_readarg(4, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_attempt_aps(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 3;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_aps_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 4;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.use_aps);\n+    bpf_usdt_readarg(3, ctx, &data.success);\n+    bpf_usdt_readarg(4, ctx, &data.fee);\n+    bpf_usdt_readarg(5, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\"\"\"\n+\n+\n+class CoinSelectionTracepointTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_platform_not_linux()\n+        self.skip_if_no_bitcoind_tracepoints()\n+        self.skip_if_no_python_bcc()\n+        self.skip_if_no_bpf_permissions()\n+        self.skip_if_no_wallet()\n+\n+    def get_tracepoints(self, expected_types):\n+        events = []\n+        try:\n+            for i in range(0, 6):\n+                event = self.bpf[\"coin_selection_events\"].pop()\n+                assert_equal(event.wallet_name.decode(), self.default_wallet_name)\n+                assert_equal(event.type, expected_types[i])\n+                events.append(event)\n+            else:\n+                # If the loop exits successfully instead of throwing a KeyError, then we have had\n+                # more events than expected. There should be no more than 5 events.\n+                assert False\n+        except KeyError:\n+            assert_equal(len(events), len(expected_types))\n+            return events\n+\n+\n+    def determine_selection_from_usdt(self, events):\n+        success = None\n+        use_aps = None\n+        algo = None\n+        waste = None\n+        change_pos = None\n+\n+        is_aps = False\n+        sc_events = []\n+        for event in events:\n+            if event.type == 1:\n+                if not is_aps:\n+                    algo = event.algo.decode()\n+                    waste = event.waste\n+                sc_events.append(event)\n+            elif event.type == 2:\n+                success = event.success == 1\n+                if not is_aps:\n+                    change_pos = event.change_pos\n+            elif event.type == 3:\n+                is_aps = True\n+            elif event.type == 4:\n+                assert is_aps\n+                if event.use_aps == 1:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854972103",
      "id" : 854972103,
      "line" : 153,
      "node_id" : "PRRC_kwDOABII584y9dbH",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 153,
      "original_position" : 153,
      "original_start_line" : null,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : 153,
      "pull_request_review_id" : 948286342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854972103/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-21T09:55:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854972103",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854977517"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854977517"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "does it make sense to check `use_aps`, `algo`, and `waste` here too?",
      "commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "created_at" : "2022-04-21T09:26:50Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;\n+    s64 fee;\n+    s32 change_pos;\n+\n+    // aps create tx event\n+    u8 use_aps;\n+};\n+\n+BPF_QUEUE(coin_selection_events, struct event_data, 1024);\n+\n+int trace_selected_coins(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 1;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg_p(2, ctx, &data.algo, ALGO_NAME_LENGTH);\n+    bpf_usdt_readarg(3, ctx, &data.target);\n+    bpf_usdt_readarg(4, ctx, &data.waste);\n+    bpf_usdt_readarg(5, ctx, &data.selected_value);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_normal_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 2;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.success);\n+    bpf_usdt_readarg(3, ctx, &data.fee);\n+    bpf_usdt_readarg(4, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_attempt_aps(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 3;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_aps_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 4;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.use_aps);\n+    bpf_usdt_readarg(3, ctx, &data.success);\n+    bpf_usdt_readarg(4, ctx, &data.fee);\n+    bpf_usdt_readarg(5, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\"\"\"\n+\n+\n+class CoinSelectionTracepointTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_platform_not_linux()\n+        self.skip_if_no_bitcoind_tracepoints()\n+        self.skip_if_no_python_bcc()\n+        self.skip_if_no_bpf_permissions()\n+        self.skip_if_no_wallet()\n+\n+    def get_tracepoints(self, expected_types):\n+        events = []\n+        try:\n+            for i in range(0, 6):\n+                event = self.bpf[\"coin_selection_events\"].pop()\n+                assert_equal(event.wallet_name.decode(), self.default_wallet_name)\n+                assert_equal(event.type, expected_types[i])\n+                events.append(event)\n+            else:\n+                # If the loop exits successfully instead of throwing a KeyError, then we have had\n+                # more events than expected. There should be no more than 5 events.\n+                assert False\n+        except KeyError:\n+            assert_equal(len(events), len(expected_types))\n+            return events\n+\n+\n+    def determine_selection_from_usdt(self, events):\n+        success = None\n+        use_aps = None\n+        algo = None\n+        waste = None\n+        change_pos = None\n+\n+        is_aps = False\n+        sc_events = []\n+        for event in events:\n+            if event.type == 1:\n+                if not is_aps:\n+                    algo = event.algo.decode()\n+                    waste = event.waste\n+                sc_events.append(event)\n+            elif event.type == 2:\n+                success = event.success == 1\n+                if not is_aps:\n+                    change_pos = event.change_pos\n+            elif event.type == 3:\n+                is_aps = True\n+            elif event.type == 4:\n+                assert is_aps\n+                if event.use_aps == 1:\n+                    use_aps = True\n+                    assert_equal(len(sc_events), 2)\n+                    algo = sc_events[1].algo.decode()\n+                    waste = sc_events[1].waste\n+                    change_pos = event.change_pos\n+        return success, use_aps, algo, waste, change_pos\n+\n+    def run_test(self):\n+        self.log.info(\"hook into the coin_selection tracepoints\")\n+        ctx = USDT(pid=self.nodes[0].process.pid)\n+        ctx.enable_probe(probe=\"coin_selection:selected_coins\", fn_name=\"trace_selected_coins\")\n+        ctx.enable_probe(probe=\"coin_selection:normal_create_tx_internal\", fn_name=\"trace_normal_create_tx\")\n+        ctx.enable_probe(probe=\"coin_selection:attempting_aps_create_tx\", fn_name=\"trace_attempt_aps\")\n+        ctx.enable_probe(probe=\"coin_selection:aps_create_tx_internal\", fn_name=\"trace_aps_create_tx\")\n+        self.bpf = BPF(text=coinselection_tracepoints_program, usdt_contexts=[ctx], debug=0)\n+\n+        self.log.info(\"Prepare wallets\")\n+        self.generate(self.nodes[0], 101)\n+        wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.log.info(\"Sending a transaction should result in all tracepoints\")\n+        # We should have 5 tracepoints in the order:\n+        # 1. selected_coins (type 1)\n+        # 2. normal_create_tx_internal (type 2)\n+        # 3. attempting_aps_create_tx (type 3)\n+        # 4. selected_coins (type 1)\n+        # 5. aps_create_tx_internal (type 4)\n+        wallet.sendtoaddress(wallet.getnewaddress(), 10)\n+        events = self.get_tracepoints([1, 2, 3, 1, 4])\n+        success, use_aps, algo, waste, change_pos = self.determine_selection_from_usdt(events)\n+        assert_equal(success, True)\n+        assert_greater_than(change_pos, -1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854977517",
      "id" : 854977517,
      "line" : 185,
      "node_id" : "PRRC_kwDOABII584y9evt",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 185,
      "original_position" : 185,
      "original_start_line" : 184,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : 185,
      "pull_request_review_id" : 948286342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854977517/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 184,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-21T09:55:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854977517",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854979774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854979774"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "does it make sense to check `algo`, `change_pos`, and `waste` here too?",
      "commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "created_at" : "2022-04-21T09:29:04Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;\n+    s64 fee;\n+    s32 change_pos;\n+\n+    // aps create tx event\n+    u8 use_aps;\n+};\n+\n+BPF_QUEUE(coin_selection_events, struct event_data, 1024);\n+\n+int trace_selected_coins(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 1;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg_p(2, ctx, &data.algo, ALGO_NAME_LENGTH);\n+    bpf_usdt_readarg(3, ctx, &data.target);\n+    bpf_usdt_readarg(4, ctx, &data.waste);\n+    bpf_usdt_readarg(5, ctx, &data.selected_value);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_normal_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 2;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.success);\n+    bpf_usdt_readarg(3, ctx, &data.fee);\n+    bpf_usdt_readarg(4, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_attempt_aps(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 3;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_aps_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 4;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.use_aps);\n+    bpf_usdt_readarg(3, ctx, &data.success);\n+    bpf_usdt_readarg(4, ctx, &data.fee);\n+    bpf_usdt_readarg(5, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\"\"\"\n+\n+\n+class CoinSelectionTracepointTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_platform_not_linux()\n+        self.skip_if_no_bitcoind_tracepoints()\n+        self.skip_if_no_python_bcc()\n+        self.skip_if_no_bpf_permissions()\n+        self.skip_if_no_wallet()\n+\n+    def get_tracepoints(self, expected_types):\n+        events = []\n+        try:\n+            for i in range(0, 6):\n+                event = self.bpf[\"coin_selection_events\"].pop()\n+                assert_equal(event.wallet_name.decode(), self.default_wallet_name)\n+                assert_equal(event.type, expected_types[i])\n+                events.append(event)\n+            else:\n+                # If the loop exits successfully instead of throwing a KeyError, then we have had\n+                # more events than expected. There should be no more than 5 events.\n+                assert False\n+        except KeyError:\n+            assert_equal(len(events), len(expected_types))\n+            return events\n+\n+\n+    def determine_selection_from_usdt(self, events):\n+        success = None\n+        use_aps = None\n+        algo = None\n+        waste = None\n+        change_pos = None\n+\n+        is_aps = False\n+        sc_events = []\n+        for event in events:\n+            if event.type == 1:\n+                if not is_aps:\n+                    algo = event.algo.decode()\n+                    waste = event.waste\n+                sc_events.append(event)\n+            elif event.type == 2:\n+                success = event.success == 1\n+                if not is_aps:\n+                    change_pos = event.change_pos\n+            elif event.type == 3:\n+                is_aps = True\n+            elif event.type == 4:\n+                assert is_aps\n+                if event.use_aps == 1:\n+                    use_aps = True\n+                    assert_equal(len(sc_events), 2)\n+                    algo = sc_events[1].algo.decode()\n+                    waste = sc_events[1].waste\n+                    change_pos = event.change_pos\n+        return success, use_aps, algo, waste, change_pos\n+\n+    def run_test(self):\n+        self.log.info(\"hook into the coin_selection tracepoints\")\n+        ctx = USDT(pid=self.nodes[0].process.pid)\n+        ctx.enable_probe(probe=\"coin_selection:selected_coins\", fn_name=\"trace_selected_coins\")\n+        ctx.enable_probe(probe=\"coin_selection:normal_create_tx_internal\", fn_name=\"trace_normal_create_tx\")\n+        ctx.enable_probe(probe=\"coin_selection:attempting_aps_create_tx\", fn_name=\"trace_attempt_aps\")\n+        ctx.enable_probe(probe=\"coin_selection:aps_create_tx_internal\", fn_name=\"trace_aps_create_tx\")\n+        self.bpf = BPF(text=coinselection_tracepoints_program, usdt_contexts=[ctx], debug=0)\n+\n+        self.log.info(\"Prepare wallets\")\n+        self.generate(self.nodes[0], 101)\n+        wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.log.info(\"Sending a transaction should result in all tracepoints\")\n+        # We should have 5 tracepoints in the order:\n+        # 1. selected_coins (type 1)\n+        # 2. normal_create_tx_internal (type 2)\n+        # 3. attempting_aps_create_tx (type 3)\n+        # 4. selected_coins (type 1)\n+        # 5. aps_create_tx_internal (type 4)\n+        wallet.sendtoaddress(wallet.getnewaddress(), 10)\n+        events = self.get_tracepoints([1, 2, 3, 1, 4])\n+        success, use_aps, algo, waste, change_pos = self.determine_selection_from_usdt(events)\n+        assert_equal(success, True)\n+        assert_greater_than(change_pos, -1)\n+\n+        self.log.info(\"Failing to fund results in 1 tracepoint\")\n+        # We should have 1 tracepoints in the order\n+        # 1. normal_create_tx_internal (type 2)\n+        assert_raises_rpc_error(-6, \"Insufficient funds\", wallet.sendtoaddress, wallet.getnewaddress(), 102 * 50)\n+        events = self.get_tracepoints([2])\n+        success, use_aps, algo, waste, change_pos = self.determine_selection_from_usdt(events)\n+        assert_equal(success, False)\n+\n+        self.log.info(\"Explicitly enabling APS results in 2 tracepoints\")\n+        # We should have 2 tracepoints in the order\n+        # 1. selected_coins (type 1)\n+        # 2. normal_create_tx_internal (type 2)\n+        wallet.setwalletflag(\"avoid_reuse\")\n+        wallet.sendtoaddress(address=wallet.getnewaddress(), amount=10, avoid_reuse=True)\n+        events = self.get_tracepoints([1, 2])\n+        success, use_aps, algo, waste, change_pos = self.determine_selection_from_usdt(events)\n+        assert_equal(success, True)\n+        assert_equal(use_aps, None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r854979774",
      "id" : 854979774,
      "line" : 204,
      "node_id" : "PRRC_kwDOABII584y9fS-",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 204,
      "original_position" : 204,
      "original_start_line" : null,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : 204,
      "pull_request_review_id" : 948286342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854979774/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-21T09:55:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/854979774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The tracepoint part looks good. Left a few comments.\r\n\r\nI also wrote a quick and dirty bpftrace script to test the documentation. In case that's helpful to anyone:\r\n\r\n<details>\r\n<summary>\r\nbpftrace script\r\n</summary>\r\n\r\n``` bpftrace\r\n#!/usr/bin/env bpftrace\r\n\r\nBEGIN\r\n{\r\n  printf(\"Logging coin selection\\n\")\r\n}\r\n\r\nusdt:./src/bitcoind:coin_selection:selected_coins\r\n{\r\n  $name = str(arg0);\r\n  $algo = str(arg1);\r\n  $target = (int64) arg2;\r\n  $waste = (int64) arg3;\r\n  $inputsum = (int64) arg4;\r\n  printf(\"selected_coins: wallet=%s, algo=%s, target=%ld, waste=%ld, inputsum=%ld\\n\", $name, $algo, $target, $waste, $inputsum);\r\n}\r\n\r\nusdt:./src/bitcoind:coin_selection:normal_create_tx_internal\r\n{\r\n  $name = str(arg0);\r\n  $success = arg1;\r\n  $fee = (int64) arg2;\r\n  $change_pos = (int32) arg3;\r\n  printf(\"normal_create_tx_internal: wallet=%s, success=%d, fee=%d, change_pos=%d\\n\", $name, $success, $fee, $change_pos);\r\n}\r\n\r\nusdt:./src/bitcoind:coin_selection:attempting_aps_create_tx\r\n{\r\n  $name = str(arg0);\r\n  printf(\"attempting_aps_create_tx: wallet=%s\\n\", $name);\r\n}\r\n\r\nusdt:./src/bitcoind:coin_selection:aps_create_tx_internal\r\n{\r\n  $name = str(arg0);\r\n  $use_aps = arg1;\r\n  $success = arg2;\r\n  $fee = (int64) arg3;\r\n  $change_pos = (int32) arg4;\r\n  printf(\"aps_create_tx_internal: wallet=%s, use_aps=%d, success=%d, fee=%ld, change_pos=%d\\n\", $name, $use_aps, $success, $fee, $change_pos);\r\n}\r\n```\r\n</details>\r\n\r\nRunning e.g. the `wallet_taproot.py` functional test logs negative values for some fields (`target`, `inputsum`) where I didn't expect them. I'm not sure what's up with that. \r\n\r\n```\r\nselected_coins: wallet=rpc_online, algo=bnb, target=-1436883448, waste=118372, inputsum=-1436883448\r\naps_create_tx_internal: wallet=rpc_online, use_aps=1, success=1, fee=131993, change_pos=-1\r\nselected_coins: wallet=psbt_online, algo=bnb, target=-2146144343, waste=95374, inputsum=-2146144343\r\nnormal_create_tx_internal: wallet=psbt_online, success=1, fee=107994, change_pos=-1\r\nattempting_aps_create_tx: wallet=psbt_online\r\nselected_coins: wallet=psbt_online, algo=bnb, target=-2146144343, waste=95374, inputsum=-2146144343\r\naps_create_tx_internal: wallet=psbt_online, use_aps=1, success=1, fee=107994, change_pos=-1\r\n```",
      "created_at" : "2022-04-21T09:55:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1104985129",
      "id" : 1104985129,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585B3Lwp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1104985129/reactions"
      },
      "updated_at" : "2022-04-21T16:28:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1104985129",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855303905"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855303905"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, removed.",
      "commit_id" : "ab5af9ca7293239ffc24ea7e23159b8184543f94",
      "created_at" : "2022-04-21T15:17:40Z",
      "diff_hunk" : "@@ -168,6 +168,58 @@ Arguments passed:\n 4. Value of the coin as `int64`\n 5. If the coin is a coinbase as `bool`\n \n+### Context `coin_selection`\n+\n+#### Tracepoint `coin_selection:selected_coins`\n+\n+Is called when `SelectCoins` completes.\n+\n+Arguments passed:\n+1. Wallet name as `pointer to C-style string`\n+2. Coin selection algorithm name as `pointer to C-style string`\n+3. Selection target value as `int64`\n+4. Calculated waste metric of the solution as `int64`\n+5. Total value of the selected inputs as `int64`\n+\n+#### Tracepoint `coin_selection:normal_create_tx_internal`\n+\n+Is called when the first `CreateTransactionInternal` completes.\n+\n+Arguments passed:\n+1. Wallet name as `pointer to C-style string`\n+2. Whether `CreateTransactionInternal` succeeded as `bool`\n+3. The expected transaction fee as an `int64`\n+4. The position of the change output as an `int32`\n+\n+#### Tracepoint `coin_selection:attempting_aps_create_tx`\n+\n+Is called when `CreateTransactionInternal` is called the second time for the optimistic\n+Avoid Partial Spends selection attempt. This is used to determine whether the next\n+tracepoints called are for the Avoid Partial Spends solution, or a different transaction.\n+\n+Arguments passed:\n+1. Wallet name as `pointer to C-style string`\n+\n+#### Tracepoint `coin_selection:aps_create_tx_internal`\n+\n+Is called when the second `CreateTransactionInternal` with Avoid Partial Spends enabled completes.\n+\n+Arguments passed:\n+1. Wallet name as `pointer to C-style string`\n+2. Whether the Avoid Partial Spends solution will be used as `bool`\n+3. Whether `CreateTransactionInternal` succeeded as` bool`\n+4. The expected transaction fee as an `int64`\n+5. The position of the change output as an `int32`\n+\n+#### Tracepoint `coin_selection:attempting_aps_create_tx`\n+\n+Is called when `CreateTransactionInternal` is called the second time for the optimistic\n+Avoid Partial Spends selection attempt. This is used to determine whether the next\n+tracepoints called are for the Avoid Partial Spends solution, or a different transaction.\n+\n+Arguments passed:\n+1. Wallet name as `pointer to C-style string`",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855303905",
      "id" : 855303905,
      "in_reply_to_id" : 854949055,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584y-ubh",
      "original_commit_id" : "e1aff5c2db24425a007e32da2de8cba3593d10ad",
      "original_line" : 221,
      "original_position" : 54,
      "original_start_line" : 214,
      "path" : "doc/tracing.md",
      "position" : null,
      "pull_request_review_id" : 948794767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855303905/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-21T15:17:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855303905",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855304016"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304016"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed",
      "commit_id" : "ab5af9ca7293239ffc24ea7e23159b8184543f94",
      "created_at" : "2022-04-21T15:17:47Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855304016",
      "id" : 855304016,
      "in_reply_to_id" : 854956480,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584y-udQ",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 11,
      "original_position" : 11,
      "original_start_line" : 10,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : null,
      "pull_request_review_id" : 948794960,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304016/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-21T15:17:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855304278"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304278"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "ab5af9ca7293239ffc24ea7e23159b8184543f94",
      "created_at" : "2022-04-21T15:18:02Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;\n+    s64 fee;\n+    s32 change_pos;\n+\n+    // aps create tx event\n+    u8 use_aps;\n+};\n+\n+BPF_QUEUE(coin_selection_events, struct event_data, 1024);\n+\n+int trace_selected_coins(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 1;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg_p(2, ctx, &data.algo, ALGO_NAME_LENGTH);\n+    bpf_usdt_readarg(3, ctx, &data.target);\n+    bpf_usdt_readarg(4, ctx, &data.waste);\n+    bpf_usdt_readarg(5, ctx, &data.selected_value);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_normal_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 2;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.success);\n+    bpf_usdt_readarg(3, ctx, &data.fee);\n+    bpf_usdt_readarg(4, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_attempt_aps(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 3;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_aps_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 4;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.use_aps);\n+    bpf_usdt_readarg(3, ctx, &data.success);\n+    bpf_usdt_readarg(4, ctx, &data.fee);\n+    bpf_usdt_readarg(5, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\"\"\"\n+\n+\n+class CoinSelectionTracepointTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_platform_not_linux()\n+        self.skip_if_no_bitcoind_tracepoints()\n+        self.skip_if_no_python_bcc()\n+        self.skip_if_no_bpf_permissions()\n+        self.skip_if_no_wallet()\n+\n+    def get_tracepoints(self, expected_types):\n+        events = []\n+        try:\n+            for i in range(0, 6):\n+                event = self.bpf[\"coin_selection_events\"].pop()\n+                assert_equal(event.wallet_name.decode(), self.default_wallet_name)\n+                assert_equal(event.type, expected_types[i])\n+                events.append(event)\n+            else:\n+                # If the loop exits successfully instead of throwing a KeyError, then we have had\n+                # more events than expected. There should be no more than 5 events.\n+                assert False\n+        except KeyError:\n+            assert_equal(len(events), len(expected_types))\n+            return events",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855304278",
      "id" : 855304278,
      "in_reply_to_id" : 854966780,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584y-uhW",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 125,
      "original_position" : 127,
      "original_start_line" : 115,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : null,
      "pull_request_review_id" : 948795391,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304278/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-21T15:18:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304278",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855304371"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304371"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "ab5af9ca7293239ffc24ea7e23159b8184543f94",
      "created_at" : "2022-04-21T15:18:08Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;\n+    s64 fee;\n+    s32 change_pos;\n+\n+    // aps create tx event\n+    u8 use_aps;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855304371",
      "id" : 855304371,
      "in_reply_to_id" : 854970461,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584y-uiz",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 47,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : null,
      "pull_request_review_id" : 948795534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304371/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-21T15:18:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304371",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855304594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304594"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "ab5af9ca7293239ffc24ea7e23159b8184543f94",
      "created_at" : "2022-04-21T15:18:19Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855304594",
      "id" : 855304594,
      "in_reply_to_id" : 854970298,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584y-umS",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 42,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : null,
      "pull_request_review_id" : 948795823,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304594/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-21T15:18:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855304665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304665"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "ab5af9ca7293239ffc24ea7e23159b8184543f94",
      "created_at" : "2022-04-21T15:18:23Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;\n+    s64 fee;\n+    s32 change_pos;\n+\n+    // aps create tx event\n+    u8 use_aps;\n+};\n+\n+BPF_QUEUE(coin_selection_events, struct event_data, 1024);\n+\n+int trace_selected_coins(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 1;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg_p(2, ctx, &data.algo, ALGO_NAME_LENGTH);\n+    bpf_usdt_readarg(3, ctx, &data.target);\n+    bpf_usdt_readarg(4, ctx, &data.waste);\n+    bpf_usdt_readarg(5, ctx, &data.selected_value);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_normal_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 2;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.success);\n+    bpf_usdt_readarg(3, ctx, &data.fee);\n+    bpf_usdt_readarg(4, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_attempt_aps(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 3;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_aps_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 4;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.use_aps);\n+    bpf_usdt_readarg(3, ctx, &data.success);\n+    bpf_usdt_readarg(4, ctx, &data.fee);\n+    bpf_usdt_readarg(5, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\"\"\"\n+\n+\n+class CoinSelectionTracepointTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_platform_not_linux()\n+        self.skip_if_no_bitcoind_tracepoints()\n+        self.skip_if_no_python_bcc()\n+        self.skip_if_no_bpf_permissions()\n+        self.skip_if_no_wallet()\n+\n+    def get_tracepoints(self, expected_types):\n+        events = []\n+        try:\n+            for i in range(0, 6):\n+                event = self.bpf[\"coin_selection_events\"].pop()\n+                assert_equal(event.wallet_name.decode(), self.default_wallet_name)\n+                assert_equal(event.type, expected_types[i])\n+                events.append(event)\n+            else:\n+                # If the loop exits successfully instead of throwing a KeyError, then we have had\n+                # more events than expected. There should be no more than 5 events.\n+                assert False\n+        except KeyError:\n+            assert_equal(len(events), len(expected_types))\n+            return events\n+\n+\n+    def determine_selection_from_usdt(self, events):\n+        success = None\n+        use_aps = None\n+        algo = None\n+        waste = None\n+        change_pos = None\n+\n+        is_aps = False\n+        sc_events = []\n+        for event in events:\n+            if event.type == 1:\n+                if not is_aps:\n+                    algo = event.algo.decode()\n+                    waste = event.waste\n+                sc_events.append(event)\n+            elif event.type == 2:\n+                success = event.success == 1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855304665",
      "id" : 855304665,
      "in_reply_to_id" : 854971486,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584y-unZ",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 146,
      "original_position" : 146,
      "original_start_line" : null,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : null,
      "pull_request_review_id" : 948795930,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304665/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-21T15:18:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304665",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855304749"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304749"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "ab5af9ca7293239ffc24ea7e23159b8184543f94",
      "created_at" : "2022-04-21T15:18:27Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;\n+    s64 fee;\n+    s32 change_pos;\n+\n+    // aps create tx event\n+    u8 use_aps;\n+};\n+\n+BPF_QUEUE(coin_selection_events, struct event_data, 1024);\n+\n+int trace_selected_coins(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 1;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg_p(2, ctx, &data.algo, ALGO_NAME_LENGTH);\n+    bpf_usdt_readarg(3, ctx, &data.target);\n+    bpf_usdt_readarg(4, ctx, &data.waste);\n+    bpf_usdt_readarg(5, ctx, &data.selected_value);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_normal_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 2;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.success);\n+    bpf_usdt_readarg(3, ctx, &data.fee);\n+    bpf_usdt_readarg(4, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_attempt_aps(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 3;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_aps_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 4;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.use_aps);\n+    bpf_usdt_readarg(3, ctx, &data.success);\n+    bpf_usdt_readarg(4, ctx, &data.fee);\n+    bpf_usdt_readarg(5, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\"\"\"\n+\n+\n+class CoinSelectionTracepointTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_platform_not_linux()\n+        self.skip_if_no_bitcoind_tracepoints()\n+        self.skip_if_no_python_bcc()\n+        self.skip_if_no_bpf_permissions()\n+        self.skip_if_no_wallet()\n+\n+    def get_tracepoints(self, expected_types):\n+        events = []\n+        try:\n+            for i in range(0, 6):\n+                event = self.bpf[\"coin_selection_events\"].pop()\n+                assert_equal(event.wallet_name.decode(), self.default_wallet_name)\n+                assert_equal(event.type, expected_types[i])\n+                events.append(event)\n+            else:\n+                # If the loop exits successfully instead of throwing a KeyError, then we have had\n+                # more events than expected. There should be no more than 5 events.\n+                assert False\n+        except KeyError:\n+            assert_equal(len(events), len(expected_types))\n+            return events\n+\n+\n+    def determine_selection_from_usdt(self, events):\n+        success = None\n+        use_aps = None\n+        algo = None\n+        waste = None\n+        change_pos = None\n+\n+        is_aps = False\n+        sc_events = []\n+        for event in events:\n+            if event.type == 1:\n+                if not is_aps:\n+                    algo = event.algo.decode()\n+                    waste = event.waste\n+                sc_events.append(event)\n+            elif event.type == 2:\n+                success = event.success == 1\n+                if not is_aps:\n+                    change_pos = event.change_pos\n+            elif event.type == 3:\n+                is_aps = True\n+            elif event.type == 4:\n+                assert is_aps\n+                if event.use_aps == 1:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855304749",
      "id" : 855304749,
      "in_reply_to_id" : 854972103,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584y-uot",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 153,
      "original_position" : 153,
      "original_start_line" : null,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : null,
      "pull_request_review_id" : 948796064,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304749/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-21T15:18:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855304749",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855305458"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855305458"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, this test doesn't make any assumptions about what coin selection algorithm was used.",
      "commit_id" : "ab5af9ca7293239ffc24ea7e23159b8184543f94",
      "created_at" : "2022-04-21T15:19:10Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;\n+    s64 fee;\n+    s32 change_pos;\n+\n+    // aps create tx event\n+    u8 use_aps;\n+};\n+\n+BPF_QUEUE(coin_selection_events, struct event_data, 1024);\n+\n+int trace_selected_coins(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 1;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg_p(2, ctx, &data.algo, ALGO_NAME_LENGTH);\n+    bpf_usdt_readarg(3, ctx, &data.target);\n+    bpf_usdt_readarg(4, ctx, &data.waste);\n+    bpf_usdt_readarg(5, ctx, &data.selected_value);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_normal_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 2;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.success);\n+    bpf_usdt_readarg(3, ctx, &data.fee);\n+    bpf_usdt_readarg(4, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_attempt_aps(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 3;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_aps_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 4;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.use_aps);\n+    bpf_usdt_readarg(3, ctx, &data.success);\n+    bpf_usdt_readarg(4, ctx, &data.fee);\n+    bpf_usdt_readarg(5, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\"\"\"\n+\n+\n+class CoinSelectionTracepointTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_platform_not_linux()\n+        self.skip_if_no_bitcoind_tracepoints()\n+        self.skip_if_no_python_bcc()\n+        self.skip_if_no_bpf_permissions()\n+        self.skip_if_no_wallet()\n+\n+    def get_tracepoints(self, expected_types):\n+        events = []\n+        try:\n+            for i in range(0, 6):\n+                event = self.bpf[\"coin_selection_events\"].pop()\n+                assert_equal(event.wallet_name.decode(), self.default_wallet_name)\n+                assert_equal(event.type, expected_types[i])\n+                events.append(event)\n+            else:\n+                # If the loop exits successfully instead of throwing a KeyError, then we have had\n+                # more events than expected. There should be no more than 5 events.\n+                assert False\n+        except KeyError:\n+            assert_equal(len(events), len(expected_types))\n+            return events\n+\n+\n+    def determine_selection_from_usdt(self, events):\n+        success = None\n+        use_aps = None\n+        algo = None\n+        waste = None\n+        change_pos = None\n+\n+        is_aps = False\n+        sc_events = []\n+        for event in events:\n+            if event.type == 1:\n+                if not is_aps:\n+                    algo = event.algo.decode()\n+                    waste = event.waste\n+                sc_events.append(event)\n+            elif event.type == 2:\n+                success = event.success == 1\n+                if not is_aps:\n+                    change_pos = event.change_pos\n+            elif event.type == 3:\n+                is_aps = True\n+            elif event.type == 4:\n+                assert is_aps\n+                if event.use_aps == 1:\n+                    use_aps = True\n+                    assert_equal(len(sc_events), 2)\n+                    algo = sc_events[1].algo.decode()\n+                    waste = sc_events[1].waste\n+                    change_pos = event.change_pos\n+        return success, use_aps, algo, waste, change_pos\n+\n+    def run_test(self):\n+        self.log.info(\"hook into the coin_selection tracepoints\")\n+        ctx = USDT(pid=self.nodes[0].process.pid)\n+        ctx.enable_probe(probe=\"coin_selection:selected_coins\", fn_name=\"trace_selected_coins\")\n+        ctx.enable_probe(probe=\"coin_selection:normal_create_tx_internal\", fn_name=\"trace_normal_create_tx\")\n+        ctx.enable_probe(probe=\"coin_selection:attempting_aps_create_tx\", fn_name=\"trace_attempt_aps\")\n+        ctx.enable_probe(probe=\"coin_selection:aps_create_tx_internal\", fn_name=\"trace_aps_create_tx\")\n+        self.bpf = BPF(text=coinselection_tracepoints_program, usdt_contexts=[ctx], debug=0)\n+\n+        self.log.info(\"Prepare wallets\")\n+        self.generate(self.nodes[0], 101)\n+        wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.log.info(\"Sending a transaction should result in all tracepoints\")\n+        # We should have 5 tracepoints in the order:\n+        # 1. selected_coins (type 1)\n+        # 2. normal_create_tx_internal (type 2)\n+        # 3. attempting_aps_create_tx (type 3)\n+        # 4. selected_coins (type 1)\n+        # 5. aps_create_tx_internal (type 4)\n+        wallet.sendtoaddress(wallet.getnewaddress(), 10)\n+        events = self.get_tracepoints([1, 2, 3, 1, 4])\n+        success, use_aps, algo, waste, change_pos = self.determine_selection_from_usdt(events)\n+        assert_equal(success, True)\n+        assert_greater_than(change_pos, -1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855305458",
      "id" : 855305458,
      "in_reply_to_id" : 854977517,
      "line" : 183,
      "node_id" : "PRRC_kwDOABII584y-uzy",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 183,
      "original_position" : 185,
      "original_start_line" : 184,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : 183,
      "pull_request_review_id" : 948797123,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855305458/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 182,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-21T15:19:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855305458",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855305489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855305489"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, this test doesn't make any assumptions about what coin selection algorithm was used.",
      "commit_id" : "ab5af9ca7293239ffc24ea7e23159b8184543f94",
      "created_at" : "2022-04-21T15:19:12Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;\n+    s64 fee;\n+    s32 change_pos;\n+\n+    // aps create tx event\n+    u8 use_aps;\n+};\n+\n+BPF_QUEUE(coin_selection_events, struct event_data, 1024);\n+\n+int trace_selected_coins(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 1;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg_p(2, ctx, &data.algo, ALGO_NAME_LENGTH);\n+    bpf_usdt_readarg(3, ctx, &data.target);\n+    bpf_usdt_readarg(4, ctx, &data.waste);\n+    bpf_usdt_readarg(5, ctx, &data.selected_value);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_normal_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 2;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.success);\n+    bpf_usdt_readarg(3, ctx, &data.fee);\n+    bpf_usdt_readarg(4, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_attempt_aps(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 3;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_aps_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 4;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.use_aps);\n+    bpf_usdt_readarg(3, ctx, &data.success);\n+    bpf_usdt_readarg(4, ctx, &data.fee);\n+    bpf_usdt_readarg(5, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\"\"\"\n+\n+\n+class CoinSelectionTracepointTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_platform_not_linux()\n+        self.skip_if_no_bitcoind_tracepoints()\n+        self.skip_if_no_python_bcc()\n+        self.skip_if_no_bpf_permissions()\n+        self.skip_if_no_wallet()\n+\n+    def get_tracepoints(self, expected_types):\n+        events = []\n+        try:\n+            for i in range(0, 6):\n+                event = self.bpf[\"coin_selection_events\"].pop()\n+                assert_equal(event.wallet_name.decode(), self.default_wallet_name)\n+                assert_equal(event.type, expected_types[i])\n+                events.append(event)\n+            else:\n+                # If the loop exits successfully instead of throwing a KeyError, then we have had\n+                # more events than expected. There should be no more than 5 events.\n+                assert False\n+        except KeyError:\n+            assert_equal(len(events), len(expected_types))\n+            return events\n+\n+\n+    def determine_selection_from_usdt(self, events):\n+        success = None\n+        use_aps = None\n+        algo = None\n+        waste = None\n+        change_pos = None\n+\n+        is_aps = False\n+        sc_events = []\n+        for event in events:\n+            if event.type == 1:\n+                if not is_aps:\n+                    algo = event.algo.decode()\n+                    waste = event.waste\n+                sc_events.append(event)\n+            elif event.type == 2:\n+                success = event.success == 1\n+                if not is_aps:\n+                    change_pos = event.change_pos\n+            elif event.type == 3:\n+                is_aps = True\n+            elif event.type == 4:\n+                assert is_aps\n+                if event.use_aps == 1:\n+                    use_aps = True\n+                    assert_equal(len(sc_events), 2)\n+                    algo = sc_events[1].algo.decode()\n+                    waste = sc_events[1].waste\n+                    change_pos = event.change_pos\n+        return success, use_aps, algo, waste, change_pos\n+\n+    def run_test(self):\n+        self.log.info(\"hook into the coin_selection tracepoints\")\n+        ctx = USDT(pid=self.nodes[0].process.pid)\n+        ctx.enable_probe(probe=\"coin_selection:selected_coins\", fn_name=\"trace_selected_coins\")\n+        ctx.enable_probe(probe=\"coin_selection:normal_create_tx_internal\", fn_name=\"trace_normal_create_tx\")\n+        ctx.enable_probe(probe=\"coin_selection:attempting_aps_create_tx\", fn_name=\"trace_attempt_aps\")\n+        ctx.enable_probe(probe=\"coin_selection:aps_create_tx_internal\", fn_name=\"trace_aps_create_tx\")\n+        self.bpf = BPF(text=coinselection_tracepoints_program, usdt_contexts=[ctx], debug=0)\n+\n+        self.log.info(\"Prepare wallets\")\n+        self.generate(self.nodes[0], 101)\n+        wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.log.info(\"Sending a transaction should result in all tracepoints\")\n+        # We should have 5 tracepoints in the order:\n+        # 1. selected_coins (type 1)\n+        # 2. normal_create_tx_internal (type 2)\n+        # 3. attempting_aps_create_tx (type 3)\n+        # 4. selected_coins (type 1)\n+        # 5. aps_create_tx_internal (type 4)\n+        wallet.sendtoaddress(wallet.getnewaddress(), 10)\n+        events = self.get_tracepoints([1, 2, 3, 1, 4])\n+        success, use_aps, algo, waste, change_pos = self.determine_selection_from_usdt(events)\n+        assert_equal(success, True)\n+        assert_greater_than(change_pos, -1)\n+\n+        self.log.info(\"Failing to fund results in 1 tracepoint\")\n+        # We should have 1 tracepoints in the order\n+        # 1. normal_create_tx_internal (type 2)\n+        assert_raises_rpc_error(-6, \"Insufficient funds\", wallet.sendtoaddress, wallet.getnewaddress(), 102 * 50)\n+        events = self.get_tracepoints([2])\n+        success, use_aps, algo, waste, change_pos = self.determine_selection_from_usdt(events)\n+        assert_equal(success, False)\n+\n+        self.log.info(\"Explicitly enabling APS results in 2 tracepoints\")\n+        # We should have 2 tracepoints in the order\n+        # 1. selected_coins (type 1)\n+        # 2. normal_create_tx_internal (type 2)\n+        wallet.setwalletflag(\"avoid_reuse\")\n+        wallet.sendtoaddress(address=wallet.getnewaddress(), amount=10, avoid_reuse=True)\n+        events = self.get_tracepoints([1, 2])\n+        success, use_aps, algo, waste, change_pos = self.determine_selection_from_usdt(events)\n+        assert_equal(success, True)\n+        assert_equal(use_aps, None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r855305489",
      "id" : 855305489,
      "in_reply_to_id" : 854979774,
      "line" : 202,
      "node_id" : "PRRC_kwDOABII584y-u0R",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 202,
      "original_position" : 204,
      "original_start_line" : null,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : 202,
      "pull_request_review_id" : 948797185,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855305489/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-04-21T15:19:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/855305489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Running e.g. the `wallet_taproot.py` functional test logs negative values for some fields (`target`, `inputsum`) where I didn't expect them. I'm not sure what's up with that.\r\n\r\nYour script uses `%d` instead of `%ld`. `%d` is for 32-bit ints, whereas `%ld` is for 64 bit.",
      "created_at" : "2022-04-21T15:56:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1105410940",
      "id" : 1105410940,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585B4zt8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1105410940/reactions"
      },
      "updated_at" : "2022-04-21T15:56:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1105410940",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "crACK ab5af9ca7293239ffc24ea7e23159b8184543f94\n",
      "created_at" : "2022-04-21T16:18:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1105434230",
      "id" : 1105434230,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585B45Z2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1105434230/reactions"
      },
      "updated_at" : "2022-04-21T16:18:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1105434230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/45598?v=4",
         "events_url" : "https://api.github.com/users/jb55/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jb55/followers",
         "following_url" : "https://api.github.com/users/jb55/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jb55/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jb55",
         "id" : 45598,
         "login" : "jb55",
         "node_id" : "MDQ6VXNlcjQ1NTk4",
         "organizations_url" : "https://api.github.com/users/jb55/orgs",
         "received_events_url" : "https://api.github.com/users/jb55/received_events",
         "repos_url" : "https://api.github.com/users/jb55/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jb55/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jb55/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jb55"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r856610862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856610862"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As a sanity check that it's not malformed, you could `assert algo in [\"bnb\", \"srd\", \"knapsack\", \"manual\"]`",
      "commit_id" : "ab5af9ca7293239ffc24ea7e23159b8184543f94",
      "created_at" : "2022-04-22T22:17:52Z",
      "diff_hunk" : "@@ -0,0 +1,210 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2022 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"  Tests the coin_selection:* tracepoint API interface.\n+     See https://github.com/bitcoin/bitcoin/blob/master/doc/tracing.md#context-coin_selection\n+\"\"\"\n+\n+import ctypes\n+from io import BytesIO\n+# Test will be skipped if we don't have bcc installed\n+try:\n+    from bcc import BPF, USDT # type: ignore[import]\n+except ImportError:\n+    pass\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+coinselection_tracepoints_program = \"\"\"\n+#include <uapi/linux/ptrace.h>\n+\n+#define WALLET_NAME_LENGTH 16\n+#define ALGO_NAME_LENGTH 16\n+\n+struct event_data\n+{\n+    u8 type;\n+    char wallet_name[WALLET_NAME_LENGTH];\n+\n+    // selected coins event\n+    char algo[ALGO_NAME_LENGTH];\n+    s64 target;\n+    s64 waste;\n+    s64 selected_value;\n+\n+    // create tx event\n+    u8 success;\n+    s64 fee;\n+    s32 change_pos;\n+\n+    // aps create tx event\n+    u8 use_aps;\n+};\n+\n+BPF_QUEUE(coin_selection_events, struct event_data, 1024);\n+\n+int trace_selected_coins(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 1;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg_p(2, ctx, &data.algo, ALGO_NAME_LENGTH);\n+    bpf_usdt_readarg(3, ctx, &data.target);\n+    bpf_usdt_readarg(4, ctx, &data.waste);\n+    bpf_usdt_readarg(5, ctx, &data.selected_value);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_normal_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 2;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.success);\n+    bpf_usdt_readarg(3, ctx, &data.fee);\n+    bpf_usdt_readarg(4, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_attempt_aps(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 3;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\n+int trace_aps_create_tx(struct pt_regs *ctx) {\n+    struct event_data data;\n+    __builtin_memset(&data, 0, sizeof(data));\n+    data.type = 4;\n+    bpf_usdt_readarg_p(1, ctx, &data.wallet_name, WALLET_NAME_LENGTH);\n+    bpf_usdt_readarg(2, ctx, &data.use_aps);\n+    bpf_usdt_readarg(3, ctx, &data.success);\n+    bpf_usdt_readarg(4, ctx, &data.fee);\n+    bpf_usdt_readarg(5, ctx, &data.change_pos);\n+    coin_selection_events.push(&data, 0);\n+    return 0;\n+}\n+\"\"\"\n+\n+\n+class CoinSelectionTracepointTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_platform_not_linux()\n+        self.skip_if_no_bitcoind_tracepoints()\n+        self.skip_if_no_python_bcc()\n+        self.skip_if_no_bpf_permissions()\n+        self.skip_if_no_wallet()\n+\n+    def get_tracepoints(self, expected_types):\n+        events = []\n+        try:\n+            for i in range(0, 6):\n+                event = self.bpf[\"coin_selection_events\"].pop()\n+                assert_equal(event.wallet_name.decode(), self.default_wallet_name)\n+                assert_equal(event.type, expected_types[i])\n+                events.append(event)\n+            else:\n+                # If the loop exits successfully instead of throwing a KeyError, then we have had\n+                # more events than expected. There should be no more than 5 events.\n+                assert False\n+        except KeyError:\n+            assert_equal(len(events), len(expected_types))\n+            return events\n+\n+\n+    def determine_selection_from_usdt(self, events):\n+        success = None\n+        use_aps = None\n+        algo = None\n+        waste = None\n+        change_pos = None\n+\n+        is_aps = False\n+        sc_events = []\n+        for event in events:\n+            if event.type == 1:\n+                if not is_aps:\n+                    algo = event.algo.decode()\n+                    waste = event.waste\n+                sc_events.append(event)\n+            elif event.type == 2:\n+                success = event.success == 1\n+                if not is_aps:\n+                    change_pos = event.change_pos\n+            elif event.type == 3:\n+                is_aps = True\n+            elif event.type == 4:\n+                assert is_aps\n+                if event.use_aps == 1:\n+                    use_aps = True\n+                    assert_equal(len(sc_events), 2)\n+                    algo = sc_events[1].algo.decode()\n+                    waste = sc_events[1].waste\n+                    change_pos = event.change_pos\n+        return success, use_aps, algo, waste, change_pos\n+\n+    def run_test(self):\n+        self.log.info(\"hook into the coin_selection tracepoints\")\n+        ctx = USDT(pid=self.nodes[0].process.pid)\n+        ctx.enable_probe(probe=\"coin_selection:selected_coins\", fn_name=\"trace_selected_coins\")\n+        ctx.enable_probe(probe=\"coin_selection:normal_create_tx_internal\", fn_name=\"trace_normal_create_tx\")\n+        ctx.enable_probe(probe=\"coin_selection:attempting_aps_create_tx\", fn_name=\"trace_attempt_aps\")\n+        ctx.enable_probe(probe=\"coin_selection:aps_create_tx_internal\", fn_name=\"trace_aps_create_tx\")\n+        self.bpf = BPF(text=coinselection_tracepoints_program, usdt_contexts=[ctx], debug=0)\n+\n+        self.log.info(\"Prepare wallets\")\n+        self.generate(self.nodes[0], 101)\n+        wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.log.info(\"Sending a transaction should result in all tracepoints\")\n+        # We should have 5 tracepoints in the order:\n+        # 1. selected_coins (type 1)\n+        # 2. normal_create_tx_internal (type 2)\n+        # 3. attempting_aps_create_tx (type 3)\n+        # 4. selected_coins (type 1)\n+        # 5. aps_create_tx_internal (type 4)\n+        wallet.sendtoaddress(wallet.getnewaddress(), 10)\n+        events = self.get_tracepoints([1, 2, 3, 1, 4])\n+        success, use_aps, algo, waste, change_pos = self.determine_selection_from_usdt(events)\n+        assert_equal(success, True)\n+        assert_greater_than(change_pos, -1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r856610862",
      "id" : 856610862,
      "in_reply_to_id" : 854977517,
      "line" : 183,
      "node_id" : "PRRC_kwDOABII584zDtgu",
      "original_commit_id" : "421c9319767ab1fa75833a53151984633aa666e7",
      "original_line" : 183,
      "original_position" : 185,
      "original_start_line" : 184,
      "path" : "test/functional/interface_usdt_coinselection.py",
      "position" : 183,
      "pull_request_review_id" : 950638342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856610862/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 182,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-22T22:26:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/856610862",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r858636253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858636253"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "why is `m_algo` added as private and then moved here to public? wouldn't it be better to move `m_target` to public and add `m_algo` in the first commit?",
      "commit_id" : "ab5af9ca7293239ffc24ea7e23159b8184543f94",
      "created_at" : "2022-04-26T12:10:28Z",
      "diff_hunk" : "@@ -254,16 +254,17 @@ struct SelectionResult\n private:\n     /** Set of inputs selected by the algorithm to use in the transaction */\n     std::set<COutput> m_selected_inputs;\n-    /** The target the algorithm selected for. Note that this may not be equal to the recipient amount as it can include non-input fees */\n-    const CAmount m_target;\n     /** Whether the input values for calculations should be the effective value (true) or normal value (false) */\n     bool m_use_effective{false};\n     /** The computed waste */\n     std::optional<CAmount> m_waste;\n-    /** The algorithm used to produce this result */\n-    SelectionAlgorithm m_algo;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#discussion_r858636253",
      "id" : 858636253,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584zLb_d",
      "original_commit_id" : "8e3f39e4fa2d8c63bc697c9ebd303965fcccea55",
      "original_line" : 264,
      "original_position" : 11,
      "original_start_line" : 257,
      "path" : "src/wallet/coinselection.h",
      "position" : 11,
      "pull_request_review_id" : 953267748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858636253/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2022-04-26T12:13:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/858636253",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "tACK https://github.com/bitcoin/bitcoin/commit/ab5af9ca7293239ffc24ea7e23159b8184543f94\r\n\r\nwasn't paying attention earlier and it was actually skipping the USDT functional tests, not running them :facepalm: . \r\n\r\nI got tracepoints working by running `sudo apt install systemtap-sdt-dev` (per [doc/build-unix.md](../tree/master/doc/build-unix.md)) and building `bcc` from source (https://github.com/iovisor/bcc/blob/master/INSTALL.md#ubuntu---source)\r\n\r\neverything works as expected. i also noticed `test/functional/wallet_send.py` is failing in the CI, but i the test locally with no issues and then re-ran the whole test suite, so perhaps just a transient failure due to a timeout?",
      "created_at" : "2022-04-26T18:00:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1110093808",
      "id" : 1110093808,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585CKq_w",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110093808/reactions"
      },
      "updated_at" : "2022-04-26T18:00:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110093808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ref: https://github.com/bitcoin/bitcoin/pull/25003 tracing: fix coin_selection:aps_create_tx_internal calling logic",
      "created_at" : "2022-04-28T09:31:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1111974325",
      "id" : 1111974325,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585CR2G1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111974325/reactions"
      },
      "updated_at" : "2022-04-28T09:31:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111974325",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Tests will fail on RHEL linux when default yum dist. of bcc is used. To remedy bcc needs to be build from bcc git master. \r\n\r\nError output\r\nhttps://gist.github.com/russeree/39a3f13aababe44ba8bac52224626d0b\r\n\r\nAfter building and running the current master of bcc https://gist.github.com/russeree/888c52a85e9bcd69c758ff0bc91f3d13\r\n\r\nThis issue only presents on RHEL (Fedora, Centos, Redhat) Ubuntu seemed to not be affected by this using apt installed versions of bcc. \r\n\r\n",
      "created_at" : "2022-04-30T08:32:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24644#issuecomment-1113949161",
      "id" : 1113949161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
      "node_id" : "IC_kwDOABII585CZYPp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113949161/reactions"
      },
      "updated_at" : "2022-04-30T08:32:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113949161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3104223?v=4",
         "events_url" : "https://api.github.com/users/russeree/events{/privacy}",
         "followers_url" : "https://api.github.com/users/russeree/followers",
         "following_url" : "https://api.github.com/users/russeree/following{/other_user}",
         "gists_url" : "https://api.github.com/users/russeree/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/russeree",
         "id" : 3104223,
         "login" : "russeree",
         "node_id" : "MDQ6VXNlcjMxMDQyMjM=",
         "organizations_url" : "https://api.github.com/users/russeree/orgs",
         "received_events_url" : "https://api.github.com/users/russeree/received_events",
         "repos_url" : "https://api.github.com/users/russeree/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/russeree/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/russeree/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/russeree"
      }
   }
]
