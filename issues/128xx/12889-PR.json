{
   "_links" : {
      "comments" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12889/comments"
      },
      "commits" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12889/commits"
      },
      "html" : {
         "href" : "https://github.com/bitcoin/bitcoin/pull/12889"
      },
      "issue" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12889"
      },
      "review_comment" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments{/number}"
      },
      "review_comments" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12889/comments"
      },
      "self" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12889"
      },
      "statuses" : {
         "href" : "https://api.github.com/repos/bitcoin/bitcoin/statuses/924d4ae38d34738b6313992a2b10984c398b23d2"
      }
   },
   "additions" : 8652,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "base" : {
      "label" : "bitcoin:master",
      "ref" : "master",
      "repo" : {
         "archive_url" : "https://api.github.com/repos/bitcoin/bitcoin/{archive_format}{/ref}",
         "archived" : false,
         "assignees_url" : "https://api.github.com/repos/bitcoin/bitcoin/assignees{/user}",
         "blobs_url" : "https://api.github.com/repos/bitcoin/bitcoin/git/blobs{/sha}",
         "branches_url" : "https://api.github.com/repos/bitcoin/bitcoin/branches{/branch}",
         "clone_url" : "https://github.com/bitcoin/bitcoin.git",
         "collaborators_url" : "https://api.github.com/repos/bitcoin/bitcoin/collaborators{/collaborator}",
         "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/comments{/number}",
         "commits_url" : "https://api.github.com/repos/bitcoin/bitcoin/commits{/sha}",
         "compare_url" : "https://api.github.com/repos/bitcoin/bitcoin/compare/{base}...{head}",
         "contents_url" : "https://api.github.com/repos/bitcoin/bitcoin/contents/{+path}",
         "contributors_url" : "https://api.github.com/repos/bitcoin/bitcoin/contributors",
         "created_at" : "2010-12-19T15:16:43Z",
         "default_branch" : "master",
         "deployments_url" : "https://api.github.com/repos/bitcoin/bitcoin/deployments",
         "description" : "Bitcoin Core integration/staging tree",
         "downloads_url" : "https://api.github.com/repos/bitcoin/bitcoin/downloads",
         "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/events",
         "fork" : false,
         "forks" : 22275,
         "forks_count" : 22275,
         "forks_url" : "https://api.github.com/repos/bitcoin/bitcoin/forks",
         "full_name" : "bitcoin/bitcoin",
         "git_commits_url" : "https://api.github.com/repos/bitcoin/bitcoin/git/commits{/sha}",
         "git_refs_url" : "https://api.github.com/repos/bitcoin/bitcoin/git/refs{/sha}",
         "git_tags_url" : "https://api.github.com/repos/bitcoin/bitcoin/git/tags{/sha}",
         "git_url" : "git://github.com/bitcoin/bitcoin.git",
         "has_downloads" : false,
         "has_issues" : true,
         "has_pages" : false,
         "has_projects" : true,
         "has_wiki" : false,
         "homepage" : "https://bitcoincore.org/en/download",
         "hooks_url" : "https://api.github.com/repos/bitcoin/bitcoin/hooks",
         "html_url" : "https://github.com/bitcoin/bitcoin",
         "id" : 1181927,
         "issue_comment_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments{/number}",
         "issue_events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/events{/number}",
         "issues_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues{/number}",
         "keys_url" : "https://api.github.com/repos/bitcoin/bitcoin/keys{/key_id}",
         "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/labels{/name}",
         "language" : "C++",
         "languages_url" : "https://api.github.com/repos/bitcoin/bitcoin/languages",
         "license" : {
            "key" : "mit",
            "name" : "MIT License",
            "node_id" : "MDc6TGljZW5zZTEz",
            "spdx_id" : "MIT",
            "url" : "https://api.github.com/licenses/mit"
         },
         "merges_url" : "https://api.github.com/repos/bitcoin/bitcoin/merges",
         "milestones_url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones{/number}",
         "mirror_url" : null,
         "name" : "bitcoin",
         "node_id" : "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
         "notifications_url" : "https://api.github.com/repos/bitcoin/bitcoin/notifications{?since,all,participating}",
         "open_issues" : 911,
         "open_issues_count" : 911,
         "owner" : {
            "avatar_url" : "https://avatars2.githubusercontent.com/u/528860?v=4",
            "events_url" : "https://api.github.com/users/bitcoin/events{/privacy}",
            "followers_url" : "https://api.github.com/users/bitcoin/followers",
            "following_url" : "https://api.github.com/users/bitcoin/following{/other_user}",
            "gists_url" : "https://api.github.com/users/bitcoin/gists{/gist_id}",
            "gravatar_id" : "",
            "html_url" : "https://github.com/bitcoin",
            "id" : 528860,
            "login" : "bitcoin",
            "node_id" : "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
            "organizations_url" : "https://api.github.com/users/bitcoin/orgs",
            "received_events_url" : "https://api.github.com/users/bitcoin/received_events",
            "repos_url" : "https://api.github.com/users/bitcoin/repos",
            "site_admin" : false,
            "starred_url" : "https://api.github.com/users/bitcoin/starred{/owner}{/repo}",
            "subscriptions_url" : "https://api.github.com/users/bitcoin/subscriptions",
            "type" : "Organization",
            "url" : "https://api.github.com/users/bitcoin"
         },
         "private" : false,
         "pulls_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls{/number}",
         "pushed_at" : "2019-03-18T18:03:03Z",
         "releases_url" : "https://api.github.com/repos/bitcoin/bitcoin/releases{/id}",
         "size" : 123711,
         "ssh_url" : "git@github.com:bitcoin/bitcoin.git",
         "stargazers_count" : 37515,
         "stargazers_url" : "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
         "statuses_url" : "https://api.github.com/repos/bitcoin/bitcoin/statuses/{sha}",
         "subscribers_url" : "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
         "subscription_url" : "https://api.github.com/repos/bitcoin/bitcoin/subscription",
         "svn_url" : "https://github.com/bitcoin/bitcoin",
         "tags_url" : "https://api.github.com/repos/bitcoin/bitcoin/tags",
         "teams_url" : "https://api.github.com/repos/bitcoin/bitcoin/teams",
         "trees_url" : "https://api.github.com/repos/bitcoin/bitcoin/git/trees{/sha}",
         "updated_at" : "2019-03-18T18:04:21Z",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin",
         "watchers" : 37515,
         "watchers_count" : 37515
      },
      "sha" : "9a2db3b3d511b34489c3cda78d8b80f39e5ade0f",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/528860?v=4",
         "events_url" : "https://api.github.com/users/bitcoin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bitcoin/followers",
         "following_url" : "https://api.github.com/users/bitcoin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bitcoin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bitcoin",
         "id" : 528860,
         "login" : "bitcoin",
         "node_id" : "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
         "organizations_url" : "https://api.github.com/users/bitcoin/orgs",
         "received_events_url" : "https://api.github.com/users/bitcoin/received_events",
         "repos_url" : "https://api.github.com/users/bitcoin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bitcoin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bitcoin/subscriptions",
         "type" : "Organization",
         "url" : "https://api.github.com/users/bitcoin"
      }
   },
   "body" : "* [gitian] Re-order keys by owner first name alphabetic order\r\n\r\n* [gitian] Add kallewoof key for signing\r\n\r\n* Simplify Base32 and Base64 conversions\r\n\r\n* CheckMinimalPush comments are prescriptive\r\n\r\n* [rpc] createrawtransaction: Accept sorted outputs\r\n\r\n* qa: Cache only chain and wallet for regtest datadir\r\n\r\n* [wallet] Get rid of CWalletTx default constructor\r\n\r\nNo change in behavior in the normal case. But buggy mapWallet lookups with\r\ninvalid txids will now throw exceptions instead of inserting dummy entries into\r\nthe map, and potentially causing segfaults and other failures.\r\n\r\nThis also makes it a compiler error to use the mapWallet[hash] syntax which\r\ncould create dummy entries.\r\n\r\n* [wallet] Construct CWalletTx objects in CommitTransaction\r\n\r\nConstruct CWalletTx objects in CWallet::CommitTransaction, instead of having\r\ncallers do it. This ensures CWalletTx objects are constructed in a uniform way\r\nand all fields are set.\r\n\r\nThis also makes it possible to avoid confusing and wasteful CWalletTx copies in\r\nhttps://github.com/bitcoin/bitcoin/pull/9381\r\n\r\nThere is no change in behavior.\r\n\r\n* bitcoin-cli: Provide a better error message when bitcoind is not running\r\n\r\nBefore this patch:\r\n\r\n```\r\n$ bitcoin-cli -testnet echo 'hello world'\r\nerror: Could not locate RPC credentials. No authentication cookie could be found, and RPC password is not set.  See -rpcpassword and -stdinrpcpass.  Configuration file: (/root/.bitcoin/bitcoin.conf)\r\n```\r\n\r\nAfter this patch:\r\n\r\n```\r\n$ bitcoin-cli -testnet echo 'hello world'\r\nerror: Could not connect to the server 127.0.0.1:18332\r\n\r\nMake sure the bitcoind server is running and that you are connecting to the correct RPC port.\r\n```\r\n\r\n* Format timestamps using ISO 8601 formatting (e.g. \"2018-02-28T12:34:56Z\")\r\n\r\n* Z is the zone designator for the zero UTC offset.\r\n* T is the delimiter used to separate date and time.\r\n\r\nThis makes it clear for the end-user that the date/time logged is\r\nspecified in UTC and not in the local time zone.\r\n\r\n* scripted-diff: Convert 11 enums into scoped enums (C++11)\r\n\r\n-BEGIN VERIFY SCRIPT-\r\n\r\nsed -i 's/enum DBErrors/enum class DBErrors/g' src/wallet/walletdb.h\r\ngit grep -l DB_ | xargs sed -i 's/DB_\\(LOAD_OK\\|CORRUPT\\|NONCRITICAL_ERROR\\|TOO_NEW\\|LOAD_FAIL\\|NEED_REWRITE\\)/DBErrors::\\1/g'\r\nsed -i 's/^    DBErrors::/    /g' src/wallet/walletdb.h\r\n\r\nsed -i 's/enum VerifyResult/enum class VerifyResult/g' src/wallet/db.h\r\nsed -i 's/\\(VERIFY_OK\\|RECOVER_OK\\|RECOVER_FAIL\\)/VerifyResult::\\1/g' src/wallet/db.cpp\r\n\r\nsed -i 's/enum ThresholdState/enum class ThresholdState/g' src/versionbits.h\r\ngit grep -l THRESHOLD_ | xargs sed -i 's/THRESHOLD_\\(DEFINED\\|STARTED\\|LOCKED_IN\\|ACTIVE\\|FAILED\\)/ThresholdState::\\1/g'\r\nsed -i 's/^    ThresholdState::/    /g' src/versionbits.h\r\n\r\nsed -i 's/enum SigVersion/enum class SigVersion/g' src/script/interpreter.h\r\ngit grep -l SIGVERSION_ | xargs sed -i 's/SIGVERSION_\\(BASE\\|WITNESS_V0\\)/SigVersion::\\1/g'\r\nsed -i 's/^    SigVersion::/    /g' src/script/interpreter.h\r\n\r\nsed -i 's/enum RetFormat {/enum class RetFormat {/g' src/rest.cpp\r\nsed -i 's/RF_\\(UNDEF\\|BINARY\\|HEX\\|JSON\\)/RetFormat::\\1/g' src/rest.cpp\r\nsed -i 's/^    RetFormat::/    /g' src/rest.cpp\r\n\r\nsed -i 's/enum HelpMessageMode {/enum class HelpMessageMode {/g' src/init.h\r\ngit grep -l HMM_ | xargs sed -i 's/HMM_BITCOIN/HelpMessageMode::BITCOIN/g'\r\nsed -i 's/^    HelpMessageMode::/    /g' src/init.h\r\n\r\nsed -i 's/enum FeeEstimateHorizon/enum class FeeEstimateHorizon/g' src/policy/fees.h\r\n\r\nsed -i 's/enum RBFTransactionState/enum class RBFTransactionState/g' src/policy/rbf.h\r\ngit grep -l RBF_ | xargs sed -i 's/RBF_TRANSACTIONSTATE_\\(UNKNOWN\\|REPLACEABLE_BIP125\\|FINAL\\)/RBFTransactionState::\\1/g'\r\nsed -i 's/^    RBFTransactionState::/    /g' src/policy/rbf.h\r\n\r\nsed -i 's/enum BlockSource {/enum class BlockSource {/g' src/qt/clientmodel.h\r\ngit grep -l BLOCK_SOURCE_ | xargs sed -i 's/BLOCK_SOURCE_\\(NONE\\|REINDEX\\|DISK\\|NETWORK\\)/BlockSource::\\1/g'\r\nsed -i 's/^    BlockSource::/    /g' src/qt/clientmodel.h\r\n\r\nsed -i 's/enum FlushStateMode {/enum class FlushStateMode {/g' src/validation.cpp\r\nsed -i 's/FLUSH_STATE_\\(NONE\\|IF_NEEDED\\|PERIODIC\\|ALWAYS\\)/FlushStateMode::\\1/g' src/validation.cpp\r\nsed -i 's/^    FlushStateMode::/    /g' src/validation.cpp\r\n\r\nsed -i 's/enum WitnessMode {/enum class WitnessMode {/g' src/test/script_tests.cpp\r\nsed -i 's/WITNESS_\\(NONE\\|PKH\\|SH\\)/WitnessMode::\\1/g' src/test/script_tests.cpp\r\nsed -i 's/^    WitnessMode::/    /g' src/test/script_tests.cpp\r\n\r\n-END VERIFY SCRIPT-\r\n\r\n* Split up and sanitize CWalletTx serialization\r\n\r\n* Calculate and store the number of bytes required to spend an input\r\n\r\n* Store effective value, fee, and long term fee in CInputCoin\r\n\r\nHave CInputCOin store effective value information. This includes the effective\r\nvalue itself, the fee, and the long term fee for the input\r\n\r\n* Log fatal LevelDB errors more verbosely\r\n\r\n* configure: UniValue 1.0.4 is required for pushKV(, bool)\r\n\r\n* Allow to optional specify the directory for the blocks storage\r\n\r\n* Ubuntu xenial first dependencies\r\n\r\nAdd update and upgrade commands to enable the installation of the first dependencies on ubuntu xenial. If those are not executed some packages can not be found.\r\n\r\n* Split up and sanitize CAccountingEntry serialization\r\n\r\n* rpc: Update createrawtransaction examples\r\n\r\n* qt: Avoid querying unnecessary model data when filtering transactions\r\n\r\n* [qa] util: Remove unused sync_chain\r\n\r\n* Implement Branch and Bound coin selection in a new file\r\n\r\nCreate a new file for coin selection logic and implement the BnB algorithm in it.\r\n\r\n* Add a GetMinimumFeeRate function which is wrapped by GetMinimumFee\r\n\r\n* Remove coinselection.h -> wallet.h circular dependency\r\n\r\nChanges CInputCoin to coinselection and to use CTransactionRef in\r\norder to avoid a circular dependency. Also moves other coin selection\r\nspecific variables out of wallet.h to coinselectoin.h\r\n\r\n* Move output eligibility to a separate function\r\n\r\n* Move current coin selection algorithm to coinselection.{cpp,h}\r\n\r\nMoves the current coin selection algorithm out of SelectCoinsMinConf\r\nand puts it in coinselection.{cpp,h}. The new function, KnapsackSolver,\r\ninstead of taking a vector of COutputs, will take a vector of CInputCoins\r\nthat is prepared by SelectCoinsMinConf.\r\n\r\n* Use a struct for output eligibility\r\n\r\nInstead of specifying 3 parameters, use a struct for those parameters\r\nin order to reduce the number of arguments to SelectCoinsMinConf.\r\n\r\n* Add tests for the Branch and Bound algorithm\r\n\r\n* Move original knapsack solver tests to coinselector_tests.cpp\r\n\r\n* Have SelectCoinsMinConf and SelectCoins use BnB or Knapsack and use it\r\n\r\nAllows SelectCoinsMinConf and SelectCoins be able to switch between\r\nusing BnB or Knapsack for choosing coins.\r\n\r\nHas SelectCoinsMinConf do the preprocessing necessary to support either\r\nBnB or Knapsack. This includes calculating the filtering the effective\r\nvalues for each input.\r\n\r\nUses BnB in CreateTransaction to find an exact match for the output.\r\nIf BnB fails, it will fallback to the Knapsack solver.\r\n\r\n* Benchmark BnB in the worst case where it exhausts\r\n\r\n* Add a test to make sure that negative effective values are filtered\r\n\r\n* travis: Clone depth 1 unless $CHECK_DOC\r\n\r\n* Fix ComputeTimeSmart test failure with -DDEBUG_LOCKORDER\r\n\r\nFailure looks like:\r\n\r\n    Entering test case \"ComputeTimeSmart\"\r\n    test_bitcoin: sync.cpp:100: void potential_deadlock_detected(const std::pair<void*, void*>&, const LockStack&, const LockStack&): Assertion `false' failed.\r\n    unknown location(0): fatal error in \"ComputeTimeSmart\": signal: SIGABRT (application abort requested)\r\n    wallet/test/wallet_tests.cpp(566): last checkpoint\r\n\r\nReproducible with:\r\n\r\n    ./configure --enable-debug\r\n    make -C src test/test_bitcoin && src/test/test_bitcoin --log_level=test_suite --run_test=wallet_tests/ComputeTimeSmart\r\n\r\nHappens due to \"92fabcd443 Add LookupBlockIndex function\" which acquires\r\ncs_main from inside CWallet::ComputeTimeSmart.\r\n\r\n* Merge READWRITEMANY into READWRITE\r\n\r\n* Support deserializing into temporaries\r\n\r\nCurrently, the READWRITE macro cannot be passed any non-const temporaries, as\r\nthe SerReadWrite function only accepts lvalue references.\r\n\r\nDeserializing into a temporary is very common, however. See for example\r\nthings like 's >> VARINT(n)'. The VARINT macro produces a temporary wrapper\r\nthat holds a reference to n.\r\n\r\nFix this by accepting non-const rvalue references instead of lvalue references.\r\nWe don't propagate the rvalue-ness down, as there are no useful optimizations\r\nthat only apply to temporaries.\r\n\r\nThen use this new functionality to get rid of many (but not all) uses of the\r\n'REF' macro (which casts away constness).\r\n\r\n* Apply hardening measurements in bitcoind systemd service file\r\n\r\nAdds typical systemd hardening measurements for network services.\r\n\r\n* Polish interfaces around PeerLogicValidation\r\n\r\n* Make PeerLogicValidation final to prevent deriving from it [1]\r\n* Prevent deletions of NetEventsInterface and CValidationInterface\r\n  objects via a base class pointer\r\n\r\n[1] silences the following compiler warning (from Clang 7.0.0):\r\n\r\n/usr/include/c++/v1/memory:2285:5: error: delete called on non-final 'PeerLogicValidation' that has\r\n      virtual functions but non-virtual destructor [-Werror,-Wdelete-non-virtual-dtor]\r\n    delete __ptr;\r\n    ^\r\n/usr/include/c++/v1/memory:2598:7: note: in instantiation of member function\r\n      'std::__1::default_delete<PeerLogicValidation>::operator()' requested here\r\n      __ptr_.second()(__tmp);\r\n      ^\r\ninit.cpp:201:15: note: in instantiation of member function 'std::__1::unique_ptr<PeerLogicValidation,\r\n      std::__1::default_delete<PeerLogicValidation> >::reset' requested here\r\n    peerLogic.reset();\r\n                  ^\r\n\r\n* Provide relevant error message if datadir is not writable.\r\n\r\n* Remove unused variable in SortForBlock\r\n\r\n* Actually disable BnB when there are preset inputs\r\n\r\nWe don't want to use BnB when there are preset inputs because there\r\nis some weirdness with making that work with using the KnapsackSolver\r\nas the fallback. Currently we say that we haven't used bnb when\r\nthere are preset inputs, but we don't actually disable BnB. This fixes\r\nthat.\r\n\r\n* Do not check for main() in libminiupnpc\r\n\r\nmain() { main(); } causes \"infinite recursion\" compilation warning\r\nwhich with -Werror fails the check.\r\n\r\n* ax_boost_{chrono,unit_test_framework}.m4: take changes from upstream\r\n\r\nApply changes to\r\nbuild-aux/m4/ax_boost_chrono.m4 and\r\nbuild-aux/m4/ax_boost_unit_test_framework.m4\r\nfrom upstream: https://github.com/peti/autoconf-archive\r\n\r\n* Remove redundant checks for MSG_* from configure.ac\r\n\r\nIt is redundant to check for the presence of MSG_NOSIGNAL macro in\r\nconfigure.ac, define HAVE_MSG_NOSIGNAL and then check whether the later\r\nis defined in the source code. Instead we can check directly whether\r\nMSG_NOSIGNAL is defined. Same for MSG_DONTWAIT.\r\n\r\nIn addition to that, the checks we had in configure.ac produce a\r\ncompiler warning about unused variable and thus could fail if\r\n-Werror is present and erroneously proclaim that the macros are\r\nnot available.\r\n\r\n* Test that BnB is not used when there are preset inputs\r\n\r\n* Document RPC method aliasing\r\n\r\nSuggested by Sjors Provoost <sjors@sprovoost.nl> in\r\nhttps://github.com/bitcoin/bitcoin/pull/11536#issuecomment-372820660\r\n\r\n* Add static_assert to prevent VARINT(<signed value>)\r\n\r\nUsing VARINT with signed types is dangerous because negative values will appear\r\nto serialize correctly, but then deserialize as positive values mod 128.\r\n\r\nThis commit changes the VARINT macro to trigger an error by default if called\r\nwith an signed value, and updates broken uses of VARINT to pass a special flag\r\nthat lets them keep working with no change in behavior.\r\n\r\n* test: Use wait_until in tests where time was used for polling\r\n\r\n* test: Use os.path.join consistently in feature_pruning tests\r\n\r\n* [Trivial] Simplify if-else blocks and more descriptive variable naming\r\n\r\n* Append scripts to new test_list array to fix bad assignment\r\n\r\n* wallet: Change output type globals to members\r\n\r\n* QA: Add -blocksdir test\r\n\r\n* [Tests] Move assert_start_raises_init_error method to TestNode\r\n\r\n* [Tests] Require exact match in assert_start_raises_init_eror()\r\n\r\n* Avoiding 'file' function name from python2 with more descriptive variable naming\r\n\r\n* Qt: remove \"new\" button during receive-mode in addressbook\r\n\r\n* [tests] Fix flake8 warnings in feature_block.py\r\n\r\n* [tests] Tidy up feature_block.py\r\n\r\n- move all helper methods to the end\r\n- remove block, create_tx and create_and_sign_tx shortcuts\r\n- remove --runbarelyexpensive option, since it defaults to True and it's\r\nunlikely that anyone ever runs the test with this option set to false.\r\n\r\n* [tests] Add logging to feature_block.py\r\n\r\n* Remove unreachable help conditions\r\n\r\n* Rename account to label where appropriate\r\n\r\nThis change only updates strings and adds RPC aliases, but should simplify the\r\nimplementation of address labels in\r\nhttps://github.com/bitcoin/bitcoin/pull/7729, by getting renaming out of the\r\nway and letting it focus on semantics.\r\n\r\nThe difference between accounts and labels is that labels apply only to\r\naddresses, while accounts apply to both addresses and transactions\r\n(transactions have \"from\" and \"to\" accounts). The code associating accounts\r\nwith transactions is clumsy and unreliable so we would like get rid of it.\r\n\r\n* Rename wallet_accounts.py test\r\n\r\nThis is a separate commit because changing the test at the same time as\r\nrenaming it breaks git (and github) rename detection.\r\n\r\n* qa: Use node.datadir instead of tmpdir in test framework\r\n\r\n* [tests] Change feature_block.py to use BitcoinTestFramework\r\n\r\n* [tests] Improve assert message when wait_until() fails\r\n\r\n* scripted-diff: rename TestNode to TestP2PConn in tests\r\n\r\nSeveral test scripts define a subclass of P2PInterface called TestNode.\r\nThis commit renames those to TestP2PConn since we already have a\r\nTestNode class in the test framework.\r\n\r\n-BEGIN VERIFY SCRIPT-\r\nsed -i s/TestNode/TestP2PConn/ test/functional/*py test/functional/test_framework/comptool.py\r\n_END VERIFY SCRIPT-\r\n\r\n* qa: Allow for partial_match when checking init error\r\n\r\nThis allows the tests to pass on different platforms\r\n\r\n* tests: Test connecting to a non-existing server\r\n\r\n* tests: Test connecting with non-existing RPC cookie file\r\n\r\n* -blocksdir: keep blockindex leveldb database in datadir\r\n\r\n* Remove unnecessary NONNEGATIVE_SIGNED\r\n\r\nSwitch to unsigned encoding, which is backwards compatible and avoids MSVC\r\nerror reported https://github.com/bitcoin/bitcoin/issues/12732\r\n\r\n* use base58 map instead of strchr()\r\n\r\n* Make FastRandomContext support standard C++11 RNG interface\r\n\r\nThis makes it possible to plug it into the various standard C++11 random\r\ndistribution algorithms and other functions like std::shuffle.\r\n\r\n* Fix typos\r\n\r\n* tests: Remove unused argument max_invalid from check_estimates(...)\r\n\r\n* Fix typos\r\n\r\n* Qt: Warn users about invalid-BIP21 URI bitcoin://\r\n\r\n* shuffle selected coins before transaction finalization\r\n\r\n* Replace boost::call_once with std::call_once\r\n\r\n* Add native support for serializing char arrays without FLATDATA\r\n\r\nSupport is added to serialize arrays of type char or unsigned char directly,\r\nwithout any wrappers. All invocations of the FLATDATA wrappers that are\r\nobsoleted by this are removed.\r\n\r\nThis includes a patch by Russell Yanofsky to make char casting type safe.\r\n\r\nThe serialization of CSubNet is changed to serialize a bool directly rather\r\nthan though FLATDATA. This makes the serialization independent of the size\r\nof the bool type (and will use 1 byte everywhere).\r\n\r\n* Move compressor utility functions out of class\r\n\r\n* [config] Remove blockmaxsize option\r\n\r\nThe blockmaxsize option was marked as deprecated in V0.15.1, and code\r\nwas added to convert provided blockmaxsize into blockmaxweight. However,\r\nthis code was incorrectly implemented, and blockmaxsize was silently\r\nignored.\r\n\r\nNo users have complained about blockmaxsize being ignored, so just\r\nremove it in V0.17.\r\n\r\n* Docs: Improve documentation on standard communication channels\r\n\r\nMore information about connection on IRC will hopefully help new\r\ncontributors.\r\n\r\n* shuffle sendmany recipients ordering to shuffle tx outputs\r\n\r\n* add release note for sendmany output shuffling\r\n\r\n* [CI]: bump travis timeout for make check to 50m\r\n\r\n* Inline CKeyStore::AddKey(const CKey &) in CBasicKeyStore\r\n\r\n* Move CKeyStore::cs_KeyStore to CBasicKeyStore\r\n\r\n* Make CTxMemPool::isSpent() const\r\n\r\n* [REST] Handle UTXO retrieval when ignoring the mempool\r\n\r\nCurrent REST API always returns empty UTXO when invoked without `/checkmempool/` URL part.\r\n\r\nAfter the fix:\r\n```\r\n$ curl -s http://localhost:8332/rest/getutxos/0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098-0.json | jq\r\n{\r\n  \"chainHeight\": 514109,\r\n  \"chaintipHash\": \"0000000000000000001fe76d1445e8a6432fd2de04261dc9c5915311dc7ad6de\",\r\n  \"bitmap\": \"1\",\r\n  \"utxos\": [\r\n    {\r\n      \"height\": 1,\r\n      \"value\": 50,\r\n      \"scriptPubKey\": {\r\n        \"asm\": \"0496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858ee OP_CHECKSIG\",\r\n        \"hex\": \"410496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858eeac\",\r\n        \"reqSigs\": 1,\r\n        \"type\": \"pubkey\",\r\n        \"addresses\": [\r\n          \"12c6DSiU4Rq3P4ZxziKxzrL5LmMBrzjrJX\"\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nBefore the fix:\r\n```\r\n$ curl -s http://localhost:8332/rest/getutxos/0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098-0.json | jq\r\n{\r\n  \"chainHeight\": 514109,\r\n  \"chaintipHash\": \"0000000000000000001fe76d1445e8a6432fd2de04261dc9c5915311dc7ad6de\",\r\n  \"bitmap\": \"0\",\r\n  \"utxos\": []\r\n}\r\n```\r\n\r\n* Add username and ip logging for RPC method requests\r\n\r\n* Qt: Remove unused method setupAmountWidget(...)\r\n\r\n* Introduce interface for signing providers\r\n\r\nCKeyStore is a rich interface that provides many features, including knowledge\r\nof scripts and pubkeys for solving, private keys for signing, in addition to\r\nwatch-only keys and scripts, and distinguishing lack of keys from them just\r\nbeing encrypted.\r\n\r\nThe signing logic in script/sign does not actually need most of these features.\r\nHere we introduce a simpler interface (SigningProvider) which *only* provides\r\nkeys and scripts. This is actually sufficient for signing.\r\n\r\nIn addtion, we swap the dependency between keystore and script/sign\r\n(keystore now depends on script/script with CKeyStore deriving from\r\nSigningProvider, rather than CKeyStore being the interface that signing\r\nrelies on).\r\n\r\n* Reduce variable scopes\r\n\r\n* Qt: Add wallet selector to debug console\r\n\r\n* Qt: QComboBox::setVisible doesn't work in toolbars, so defer adding it at all until needed\r\n\r\n* Qt: Get wallet name from WalletModel rather than passing it around\r\n\r\n* Qt: When multiple wallets are used, include in notifications the name\r\n\r\n* GUI: RPCConsole: Log wallet changes\r\n\r\n* Qt: show wallet name in send confirmation dlg in case of multiwallet\r\n\r\n* Qt: show wallet name in request dlg in case of multiwallet\r\n\r\n* Qt: hide RPCConsole wallet selector when no wallets are present\r\n\r\n* rpc: Adjust ifdef to avoid unreachable code\r\n\r\n* [Tests] Use blockmaxweight where tests previously had blockmaxsize\r\n\r\n* [wallet] Move wallet init functions into WalletInit class.\r\n\r\n* [wallet] Create wallet init interface.\r\n\r\n* qt: Avoid resetting on resetguisettigs=0\r\n\r\n* do not truncate .dat extension for wallets in gui\r\n\r\n* Change all python files to use Python3\r\n\r\n* init: Fix help message for checkblockindex\r\n\r\n* doc: Refer to witness reserved value as spec. in the BIP\r\n\r\n* doc: Add note about our preference for scoped enumerations (\"enum class\")\r\n\r\n* [wallet] Use global g_wallet_init_interface to init/destroy the wallet.\r\n\r\nThis commit creates a global g_wallet_init_interface, which is created\r\nin bitcoind and bitcoin-qt. g_wallet_init_interface is used to init\r\nand destroy the wallet.\r\n\r\nThis removes the dependency from init.cpp on the wallet library.\r\n\r\n* [wallet] Add dummy wallet init class\r\n\r\n* Fix error in memory usage calculation (unintended integer division)\r\n\r\n* qa: Fix function names in feature_blocksdir\r\n\r\n* Add additional tests for GetBoolArg()\r\n\r\nThis is meant to be an intermediate commit to prove that the next does not\r\nintroduce any changes in the semantics of boolean option parsing.\r\n\r\n* Track negated arguments in the argument paser.\r\n\r\nThis commit adds tracking for negated arguments. This change will be used in a\r\nfuture commit that allows disabling the debug.log file using -nodebuglogfile.\r\n\r\n* test: Make summary row bold-red if any test failed\r\n\r\nMake the summary row of the test runner bold red if any test fails.\r\nThis helps visibility if something fails.\r\n\r\n* Make base58 python contrib code work with python3\r\n\r\n* test: List any failed tests at the end of test_runner output\r\n\r\nChange sorting output to put failed tests at the end of test_runner\r\noutput.\r\n\r\n* [Tests] fix a typo in TestNode.assert_start_raises_init_error()\r\n\r\nAlso, use specific exception for testing TestNode initialization failure.\r\n\r\n* contrib: Fix check-doc script regexes\r\n\r\n* contrib: Remove unused import string\r\n\r\n* init: Remove help text for non-existent -fuzzmessagestest arg\r\n\r\n* Revert \"test: Update trust git root\".\r\n\r\nThis reverts commit 7deba93bdc76616011a9f493cbc203d60084416f.\r\n\r\nThis is neither a \"test\" change, nor should the trusted-git-root\r\nhave been updated - there is a process for expired PGP keys.\r\n\r\n* Add Marco-expired-key-signed-commits to allow-revsig-commits\r\n\r\n* Improve formatting of developer notes\r\n\r\nSummary of changes:\r\n\r\n * Add a TOC to the page\r\n * Make tips and tricks section use h3 headings\r\n * Reformat and clarify some sections\r\n\r\n* Add --with-sanitizers option to configure\r\n\r\nThis enables the use of different compiler sanitizers, coresponding to\r\nthe -fsanitize option in GCC and Clang.\r\n\r\n* [tests] Fix intermittent rpc_net.py failure.\r\n\r\nrpc_net.py would intermittently fail on Travis, probably\r\ndue to assuming that two consecutive RPC calls were atomic.\r\nFix this by only testing that amounts are bounded above and\r\nbelow rather than equal.\r\n\r\n* [contrib] fixup security-check.py Python3 support\r\n\r\n* [contrib] fixup symbol-check.py Python3 support\r\n\r\n* Bugfix: RPC: savemempool: Don't save until LoadMempool() is finished\r\n\r\n* Increase LevelDB max_open_files unless on 32-bit Unix.\r\n\r\nThis change significantly increases IBD performance by increasing the\r\namount of the UTXO index that can remain in memory. To ensure this\r\ndoesn't cause problems in the future, a static_assert on the LevelDB\r\nversion has been added, which must be updated by anyone upgrading\r\nLevelDB.\r\n\r\n* [verify-commits] Add some additional useful documentation.\r\n\r\n* test: Remove travis checkout depth\r\n\r\nTests on branches of non-head commits are failing, because the depth of\r\n1 doesn't allow checking them out.\r\n\r\nRemove `depth` as was the case before fa44af5cd2152a21da9ef3e48c073a668bf2df27,\r\nso that Travis can determine the minimum depth to check out.\r\n\r\n* Fixes Missing QRCode Build\r\n\r\nBuild was missing qr code(qrencode libs) support and brew team no longer supports anything less than macOS 10.11\r\n\r\n* Fixed notes\r\n\r\nFixed notes to reflect that 10.8 is still supported via gitian\r\n\r\n* Rolled Back Tested on\r\n\r\nBelow is a suggestion for future release after EOL is done\r\n\r\n* Works with macOS 10.11 through 10.13 on 64-bit Intel processors only.\r\n\r\n* macOS 10.8 and higher is still supported on [gitian](/contrib) builds\r\n\r\n* Update build-osx.md\r\n\r\nBelow is a suggestion for future release after EOL is done\r\n\r\n* Works with macOS 10.11 through 10.13 on 64-bit Intel processors only.\r\n\r\n* macOS 10.8 and higher is still supported on [gitian](/contrib) builds",
   "changed_files" : 312,
   "closed_at" : "2018-04-05T04:57:26Z",
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12889/comments",
   "commits" : 1,
   "commits_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12889/commits",
   "created_at" : "2018-04-05T04:55:40Z",
   "deletions" : 5038,
   "diff_url" : "https://github.com/bitcoin/bitcoin/pull/12889.diff",
   "head" : {
      "label" : "buddilla:master",
      "ref" : "master",
      "repo" : {
         "archive_url" : "https://api.github.com/repos/buddilla/bitcoin/{archive_format}{/ref}",
         "archived" : false,
         "assignees_url" : "https://api.github.com/repos/buddilla/bitcoin/assignees{/user}",
         "blobs_url" : "https://api.github.com/repos/buddilla/bitcoin/git/blobs{/sha}",
         "branches_url" : "https://api.github.com/repos/buddilla/bitcoin/branches{/branch}",
         "clone_url" : "https://github.com/buddilla/bitcoin.git",
         "collaborators_url" : "https://api.github.com/repos/buddilla/bitcoin/collaborators{/collaborator}",
         "comments_url" : "https://api.github.com/repos/buddilla/bitcoin/comments{/number}",
         "commits_url" : "https://api.github.com/repos/buddilla/bitcoin/commits{/sha}",
         "compare_url" : "https://api.github.com/repos/buddilla/bitcoin/compare/{base}...{head}",
         "contents_url" : "https://api.github.com/repos/buddilla/bitcoin/contents/{+path}",
         "contributors_url" : "https://api.github.com/repos/buddilla/bitcoin/contributors",
         "created_at" : "2018-02-24T10:31:48Z",
         "default_branch" : "master",
         "deployments_url" : "https://api.github.com/repos/buddilla/bitcoin/deployments",
         "description" : "Bitcoin Core integration/staging tree",
         "downloads_url" : "https://api.github.com/repos/buddilla/bitcoin/downloads",
         "events_url" : "https://api.github.com/repos/buddilla/bitcoin/events",
         "fork" : true,
         "forks" : 0,
         "forks_count" : 0,
         "forks_url" : "https://api.github.com/repos/buddilla/bitcoin/forks",
         "full_name" : "buddilla/bitcoin",
         "git_commits_url" : "https://api.github.com/repos/buddilla/bitcoin/git/commits{/sha}",
         "git_refs_url" : "https://api.github.com/repos/buddilla/bitcoin/git/refs{/sha}",
         "git_tags_url" : "https://api.github.com/repos/buddilla/bitcoin/git/tags{/sha}",
         "git_url" : "git://github.com/buddilla/bitcoin.git",
         "has_downloads" : false,
         "has_issues" : false,
         "has_pages" : false,
         "has_projects" : true,
         "has_wiki" : false,
         "homepage" : "https://bitcoin.org/en/download",
         "hooks_url" : "https://api.github.com/repos/buddilla/bitcoin/hooks",
         "html_url" : "https://github.com/buddilla/bitcoin",
         "id" : 122730524,
         "issue_comment_url" : "https://api.github.com/repos/buddilla/bitcoin/issues/comments{/number}",
         "issue_events_url" : "https://api.github.com/repos/buddilla/bitcoin/issues/events{/number}",
         "issues_url" : "https://api.github.com/repos/buddilla/bitcoin/issues{/number}",
         "keys_url" : "https://api.github.com/repos/buddilla/bitcoin/keys{/key_id}",
         "labels_url" : "https://api.github.com/repos/buddilla/bitcoin/labels{/name}",
         "language" : "C++",
         "languages_url" : "https://api.github.com/repos/buddilla/bitcoin/languages",
         "license" : {
            "key" : "mit",
            "name" : "MIT License",
            "node_id" : "MDc6TGljZW5zZTEz",
            "spdx_id" : "MIT",
            "url" : "https://api.github.com/licenses/mit"
         },
         "merges_url" : "https://api.github.com/repos/buddilla/bitcoin/merges",
         "milestones_url" : "https://api.github.com/repos/buddilla/bitcoin/milestones{/number}",
         "mirror_url" : null,
         "name" : "bitcoin",
         "node_id" : "MDEwOlJlcG9zaXRvcnkxMjI3MzA1MjQ=",
         "notifications_url" : "https://api.github.com/repos/buddilla/bitcoin/notifications{?since,all,participating}",
         "open_issues" : 0,
         "open_issues_count" : 0,
         "owner" : {
            "avatar_url" : "https://avatars3.githubusercontent.com/u/13294167?v=4",
            "events_url" : "https://api.github.com/users/buddilla/events{/privacy}",
            "followers_url" : "https://api.github.com/users/buddilla/followers",
            "following_url" : "https://api.github.com/users/buddilla/following{/other_user}",
            "gists_url" : "https://api.github.com/users/buddilla/gists{/gist_id}",
            "gravatar_id" : "",
            "html_url" : "https://github.com/buddilla",
            "id" : 13294167,
            "login" : "buddilla",
            "node_id" : "MDQ6VXNlcjEzMjk0MTY3",
            "organizations_url" : "https://api.github.com/users/buddilla/orgs",
            "received_events_url" : "https://api.github.com/users/buddilla/received_events",
            "repos_url" : "https://api.github.com/users/buddilla/repos",
            "site_admin" : false,
            "starred_url" : "https://api.github.com/users/buddilla/starred{/owner}{/repo}",
            "subscriptions_url" : "https://api.github.com/users/buddilla/subscriptions",
            "type" : "User",
            "url" : "https://api.github.com/users/buddilla"
         },
         "private" : false,
         "pulls_url" : "https://api.github.com/repos/buddilla/bitcoin/pulls{/number}",
         "pushed_at" : "2018-11-30T07:59:44Z",
         "releases_url" : "https://api.github.com/repos/buddilla/bitcoin/releases{/id}",
         "size" : 102113,
         "ssh_url" : "git@github.com:buddilla/bitcoin.git",
         "stargazers_count" : 0,
         "stargazers_url" : "https://api.github.com/repos/buddilla/bitcoin/stargazers",
         "statuses_url" : "https://api.github.com/repos/buddilla/bitcoin/statuses/{sha}",
         "subscribers_url" : "https://api.github.com/repos/buddilla/bitcoin/subscribers",
         "subscription_url" : "https://api.github.com/repos/buddilla/bitcoin/subscription",
         "svn_url" : "https://github.com/buddilla/bitcoin",
         "tags_url" : "https://api.github.com/repos/buddilla/bitcoin/tags",
         "teams_url" : "https://api.github.com/repos/buddilla/bitcoin/teams",
         "trees_url" : "https://api.github.com/repos/buddilla/bitcoin/git/trees{/sha}",
         "updated_at" : "2018-08-21T19:00:07Z",
         "url" : "https://api.github.com/repos/buddilla/bitcoin",
         "watchers" : 0,
         "watchers_count" : 0
      },
      "sha" : "924d4ae38d34738b6313992a2b10984c398b23d2",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/13294167?v=4",
         "events_url" : "https://api.github.com/users/buddilla/events{/privacy}",
         "followers_url" : "https://api.github.com/users/buddilla/followers",
         "following_url" : "https://api.github.com/users/buddilla/following{/other_user}",
         "gists_url" : "https://api.github.com/users/buddilla/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/buddilla",
         "id" : 13294167,
         "login" : "buddilla",
         "node_id" : "MDQ6VXNlcjEzMjk0MTY3",
         "organizations_url" : "https://api.github.com/users/buddilla/orgs",
         "received_events_url" : "https://api.github.com/users/buddilla/received_events",
         "repos_url" : "https://api.github.com/users/buddilla/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/buddilla/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/buddilla/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/buddilla"
      }
   },
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/12889",
   "id" : 179572571,
   "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12889",
   "labels" : [],
   "locked" : false,
   "maintainer_can_modify" : false,
   "merge_commit_sha" : null,
   "mergeable" : false,
   "mergeable_state" : "dirty",
   "merged" : false,
   "merged_at" : null,
   "merged_by" : null,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MTc5NTcyNTcx",
   "number" : 12889,
   "patch_url" : "https://github.com/bitcoin/bitcoin/pull/12889.patch",
   "rebaseable" : false,
   "requested_reviewers" : [],
   "requested_teams" : [],
   "review_comment_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments{/number}",
   "review_comments" : 1,
   "review_comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12889/comments",
   "state" : "closed",
   "statuses_url" : "https://api.github.com/repos/bitcoin/bitcoin/statuses/924d4ae38d34738b6313992a2b10984c398b23d2",
   "title" : "doc: add qrencode to brew install instructions (#1)",
   "updated_at" : "2019-03-18T11:37:35Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12889",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/13294167?v=4",
      "events_url" : "https://api.github.com/users/buddilla/events{/privacy}",
      "followers_url" : "https://api.github.com/users/buddilla/followers",
      "following_url" : "https://api.github.com/users/buddilla/following{/other_user}",
      "gists_url" : "https://api.github.com/users/buddilla/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/buddilla",
      "id" : 13294167,
      "login" : "buddilla",
      "node_id" : "MDQ6VXNlcjEzMjk0MTY3",
      "organizations_url" : "https://api.github.com/users/buddilla/orgs",
      "received_events_url" : "https://api.github.com/users/buddilla/received_events",
      "repos_url" : "https://api.github.com/users/buddilla/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/buddilla/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/buddilla/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/buddilla"
   }
}
