{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "I'm new to bitcoin coming from a Python background. Wrapping my head around your test suite, I noticed that the base framework test class makes comments about how subclasses **should** override `set_test_params` and `run_test` but **should not** override `__init__` or `main`:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/3b62a913865777426c11992bae622fb48aa72a40/test/functional/test_framework/test_framework.py#L44\r\n\r\nTo make that more explicit, have we considered a meta class to actually check that those assumptions are valid instead of leaving it to the user to read the docstring and follow the rules? \r\n\r\nI've provided a sample implementation in the details below, where the commented methods would raise an error if included in any module. Happy to submit a PR if you think it is worth pursuing.\r\n\r\n<details>\r\n\r\n```python\r\nclass BitcoinTestMetaclass(type):\r\n\r\n    def __new__(cls, clsname, bases, dct):\r\n        if not ('run_test' in dct and 'set_test_params' in dct):\r\n            raise TypeError(\"BitcoinTestFramework subclasses must override \"\r\n                            \"'run_test' and 'set_test_params'\")\r\n        if '__init__' in dct or 'main' in dct:\r\n            raise TypeError(\"BitcoinTestFramework subclasses may not override \"\r\n                            \"'__init__' or 'main'\")\r\n        return super().__new__(cls, clsname, bases, dct)\r\n\r\n    \r\nclass BitcoinTestFramework(metaclass=BitcoinTestMetaclass):\r\n    def set_test_params(self):\r\n        ...\r\n\r\n    def run_test(self):\r\n        ...\r\n\r\n''' \r\nclass BadSubclass1(BitcoinTestFramework):\r\n    \"\"\"Doesn't subclass run_test\"\"\"\r\n    def set_test_params(self):\r\n        pass\r\n'''\r\n\r\n'''\r\nclass BadSubclass2(BitcoinTestFramework):\r\n    \"\"\"Overrides set_test_params and run_test, but also overrides __init__\"\"\"\r\n    def __init__(self):\r\n        super().__init__()\r\n\r\n    def set_test_params(self):\r\n        pass\r\n\r\n    def run_test(self):\r\n        pass\r\n'''\r\n\r\nclass GoodSubclass(BitcoinTestFramework):\r\n    def set_test_params(self):\r\n        pass\r\n\r\n    def run_test(self):\r\n        pass    \r\n```\r\n",
   "closed_at" : "2018-04-08T17:48:24Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12835/comments",
   "created_at" : "2018-03-30T07:37:54Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12835/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/12835",
   "id" : 309998764,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12835/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWUzMDk5OTg3NjQ=",
   "number" : 12835,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Metaclass for BitcoinTestFramework",
   "updated_at" : "2018-04-08T17:48:24Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12835",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/609873?v=4",
      "events_url" : "https://api.github.com/users/WillAyd/events{/privacy}",
      "followers_url" : "https://api.github.com/users/WillAyd/followers",
      "following_url" : "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url" : "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/WillAyd",
      "id" : 609873,
      "login" : "WillAyd",
      "node_id" : "MDQ6VXNlcjYwOTg3Mw==",
      "organizations_url" : "https://api.github.com/users/WillAyd/orgs",
      "received_events_url" : "https://api.github.com/users/WillAyd/received_events",
      "repos_url" : "https://api.github.com/users/WillAyd/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/WillAyd/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/WillAyd"
   }
}
