[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "NACK at quick glance. Why add complexity when it can be done outside? What happens to the queue when it restarts? Are the notifications lost? I don't think we should track state on behalf of the client.",
      "created_at" : "2018-03-27T21:36:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-376684018",
      "id" : 376684018,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-03-27T21:36:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376684018",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "re recovering state upon restart - if this option is enabled the wallet rescans the last n_confirmations_required blocks to repopulate this queue (see link below): the expectation is that the number of confirmations desired is a number closer to 6 than to 100k - so the rescan shouldn't add tremendous overhead. Of course, the number of confirmations desired is up to the user, and is off by default.\r\nhttps://github.com/bitcoin/bitcoin/pull/12801/commits/d232f62462c6cebf5e03b7cbe7c87469f46ca026#diff-b2bb174788c7409b671c46ccc86034bdR4072\r\n\r\nre the NACK - @laanwj expresses some support for putting this functionality into the daemon in #10021",
      "created_at" : "2018-03-27T21:46:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-376686454",
      "id" : 376686454,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-03-27T21:46:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376686454",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@promag this seems like it could be significantly more efficient than the suggested workaround from https://github.com/bitcoin/bitcoin/issues/10021#issuecomment-287344757 of calling listtransactions. Or did you have a different workaround in mind?\r\n\r\nFrom the original issue, it sounds like lack of a configurable notifications gives wallet users an incentive to only wait for a single confirmation, which seems not great.\r\n\r\nAs for code complexity, I'd have to look more closely, but the new logic might be reusable to update displayed transactions in the gui more efficiently, and the state tracking might be useful in the wallet itself to get rid of some synchronous chainactive lookups.",
      "created_at" : "2018-03-27T22:01:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-376690262",
      "id" : 376690262,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-03-27T22:01:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376690262",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Rebased to latest master (should solve test failures)",
      "created_at" : "2018-03-28T14:27:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-376906771",
      "id" : 376906771,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-03-28T14:27:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376906771",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'll review and test. I understand this feature is very desirable as it can save a lot of code for clients that want the Nth confirmation.",
      "created_at" : "2018-03-30T08:46:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-377480021",
      "id" : 377480021,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-03-30T08:46:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377480021",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12801#discussion_r178938513"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12801"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178938513"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Unused symbol (causing the Travis failure). You can catch stuff like this locally by running ` ../../contrib/devtools/lint-python.sh` from within `test/functional`.",
      "commit_id" : "23366c342da278ed8c2e337987be98db80d3871a",
      "created_at" : "2018-04-03T19:37:34Z",
      "diff_hunk" : "@@ -82,5 +83,36 @@ def run_test(self):\n         self.log.info(\"-alertnotify should not continue notifying for more unknown version blocks\")\n         assert_equal(alert_text, alert_text2)\n \n+        self.log.info(\"test -walletnotify with -walletnotifyconfirmations > 1\")\n+        n_confirmations = 6\n+\n+        # first have a different node generate blocks that we shouldn't see confirmations for\n+        self.nodes[0].generate(n_confirmations + 1)\n+        self.sync_all()\n+        os.remove(self.tx_filename)\n+\n+        # now generate some blocks but don't bury any enough to be confirmed (they'll be confirmed later)\n+        generated_before_restart = self.nodes[1].generate(n_confirmations - 2)\n+        confirmed_txids = [t['txid'] for t in self.nodes[1].listtransactions(\"*\", 100) if t['blockhash'] in generated_before_restart]\n+\n+        # restart node with notify on confirmations enabled\n+        self.restart_node(1, [\"-walletnotifyconfirmations=%s\" % n_confirmations,\n+                              \"-walletnotify=echo %%s >> %s\" % self.tx_filename])\n+\n+        # mine some more blocks (we should receive notifications on the ones above plus all but the last n_confirmations - 1 of these)\n+        generated_after_restart = self.nodes[1].generate(block_count + n_confirmations - 1)[:-n_confirmations + 1]\n+        wait_until(lambda: os.path.isfile(self.tx_filename) and os.stat(self.tx_filename).st_size >= (block_count * 65), timeout=10)\n+\n+        # get the list of block hashes that should now be confirmed\n+        buried_blocks = generated_before_restart + generated_after_restart",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#discussion_r178938513",
      "id" : 178938513,
      "original_commit_id" : "8afcf1fa910a5047a15d10015c334249358cc9b4",
      "original_position" : 33,
      "path" : "test/functional/feature_notifications.py",
      "position" : null,
      "pull_request_review_id" : 109088194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12801",
      "updated_at" : "2018-04-04T00:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178938513",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12801#discussion_r178997304"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12801"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178997304"
         }
      },
      "author_association" : "NONE",
      "body" : "Thanks! Updated",
      "commit_id" : "23366c342da278ed8c2e337987be98db80d3871a",
      "created_at" : "2018-04-04T00:16:17Z",
      "diff_hunk" : "@@ -82,5 +83,36 @@ def run_test(self):\n         self.log.info(\"-alertnotify should not continue notifying for more unknown version blocks\")\n         assert_equal(alert_text, alert_text2)\n \n+        self.log.info(\"test -walletnotify with -walletnotifyconfirmations > 1\")\n+        n_confirmations = 6\n+\n+        # first have a different node generate blocks that we shouldn't see confirmations for\n+        self.nodes[0].generate(n_confirmations + 1)\n+        self.sync_all()\n+        os.remove(self.tx_filename)\n+\n+        # now generate some blocks but don't bury any enough to be confirmed (they'll be confirmed later)\n+        generated_before_restart = self.nodes[1].generate(n_confirmations - 2)\n+        confirmed_txids = [t['txid'] for t in self.nodes[1].listtransactions(\"*\", 100) if t['blockhash'] in generated_before_restart]\n+\n+        # restart node with notify on confirmations enabled\n+        self.restart_node(1, [\"-walletnotifyconfirmations=%s\" % n_confirmations,\n+                              \"-walletnotify=echo %%s >> %s\" % self.tx_filename])\n+\n+        # mine some more blocks (we should receive notifications on the ones above plus all but the last n_confirmations - 1 of these)\n+        generated_after_restart = self.nodes[1].generate(block_count + n_confirmations - 1)[:-n_confirmations + 1]\n+        wait_until(lambda: os.path.isfile(self.tx_filename) and os.stat(self.tx_filename).st_size >= (block_count * 65), timeout=10)\n+\n+        # get the list of block hashes that should now be confirmed\n+        buried_blocks = generated_before_restart + generated_after_restart",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#discussion_r178997304",
      "id" : 178997304,
      "in_reply_to_id" : 178938513,
      "original_commit_id" : "8afcf1fa910a5047a15d10015c334249358cc9b4",
      "original_position" : 33,
      "path" : "test/functional/feature_notifications.py",
      "position" : null,
      "pull_request_review_id" : 109158370,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12801",
      "updated_at" : "2018-04-04T00:16:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178997304",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "(will address other comments, re: map/vec)\r\nThe tricky bits here involved being correct around chain re-orgs and I don't think a map makes that any less complex. It also doesn't let you discard the dependency on reliable invocation of the `BlockConnected` signal without introducing a lot more state, inefficient chain scanning, or discarding some of the guarantees about notification:\r\n\r\nHere's an explanation of the circular buffer approach.\r\n\r\n`n`: the number of confirmations needed for notification to occur\r\n\r\nWhen `n==1` we notify as soon as the block is mined so no state is needed.\r\n\r\nWhen `n>1` we need to keep around a state representing blocks with transactions with haven't yet been confirmed: there will be at most `n-1` of these.\r\n\r\nSince `n` is generally chosen to be a small number - and also since any node operating for sufficiently long time to observe `n` blocks will eventually have to store state of length `n-1` - we just pre-allocate a buffer with `n-1` slots. Most of the time (except for re-orgs) we will be adding a new highest height (new block) and removing the lowest height (block that has now received n confirmations and we've notified) - this is a natural fit for a circular buffer.\r\n\r\n`buffer_pos(height)`: maps every block height into a slot in this buffer with simple modulo arithmetic\r\n\r\nIf this buffer is reliably updated every time a block is connected, then it will always contain valid state for **up to** the `n-1` blocks on the active chain tip. **Up to**, and usually, but not always exactly, `n-1` because of re-orgs. In a reorg when the first block on the newly reorged chain gets connected at a height lower than the tip, we do not need to rescan any of the trailing blocks for which we no longer keep state because those have already been appropriately notified previously. We do have to maintain some bounding logic to track min/max height ranges for which we have valid state lest we accidentally send notifications for transactions in higher blocks on the re-orged out chain (b/c of the modulo based indexing into the circular buffer). With a map - you wouldn't need these min/max height bounds - but you trade that for having to explicitly clear the map for heights that are no longer needed. \r\n\r\nIn no case (map or vector) are you able to relax the constraint that `BlockConnected` must be called reliably without adding either more complex state (e.g. block hashes so you don't accidentally notify for re-orged out blocks - you won't send false notifications but you might miss some) or expensive scans of trailing blocks on every update (you wouldn't miss blocks - but it's quite inefficient and you'd either have to rescan the entire chain on startup or persist your last notified height to disk). Also there are a number of other internal components that need to have validation signals invoked reliably - so its not a new dependency.\r\n\r\nThe only other savings in logical complexity you get by substituting a map for a pre-sized vector is indexing into the structure (i.e. `map[height]` instead of `vec[buffer_pos(height)]`. \r\n\r\nOne other note here - this guarantees \"at least once\" notifications. Duplicate notifications can occur when the same blocks are connected more than once (e.g. on node restarts or chain re-orgs).",
      "created_at" : "2018-04-04T20:33:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-378735754",
      "id" : 378735754,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-04-04T20:33:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378735754",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Apologies for only coming to this after it's already received some review, but I'm a concept NACK on this, and think that the method suggested here: https://github.com/bitcoin/bitcoin/issues/10021#issuecomment-287306406 is a good solution to this problem.\r\n\r\nAdding this to the server seems to be adding a lot of complexity for very little gain. There are edge cases to consider (eg transactions getting removed in re-orgs, or added at a different block height), and maintaining/debugging issues with this quite complex server code seems to be a high price to pay for something that can be achieved on the client side.",
      "created_at" : "2018-04-09T18:14:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-379844467",
      "id" : 379844467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-04-09T18:14:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379844467",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Maybe a moot point now given some concept NACKs, but the implementation as written is faulty for a particular reorg case ([failing test here](https://github.com/jamesob/bitcoin/commit/92b620f26127b93f2b6fd389516f5e7b7d09ac7e)). Feel free to cherry-pick that commit should work on this continue.\r\n\r\nI appreciate the good explanation of your initial implementation @skeees, but I still think this approach is overly complicated and too easily hides faulty behavior. I think if work continues on this feature, we should use something along the lines of a `target_height_to_txns` map in conjunction with `ValidationInterface::BlockDisconnected` to clear keys and thus more explicitly handle reorgs. I think that'd be a bit easier to reason about.",
      "created_at" : "2018-04-09T18:28:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-379848844",
      "id" : 379848844,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-04-09T18:28:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379848844",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks for the test case! The cause is rather embarrassing - due to my lack of familiarity with c++ I was calling std::vector::empty() (a boolean test for emptiness) instead of std::vector::clear() (actually empties the vector). I've fixed that and incorporated your test @jamesob and (slightly tweaked so it tests re-orgs at multiple depths)\r\n\r\nRe the concept NACK in general - if reliance on zeroconf transactions is heavily discouraged then I think its certainly worth maintaining this in the wallet. Furthermore - as @ryanofsky has pointed out in earlier comments - there are a number of other places where this sort of state tracking would benefit the wallet and for which this logic could be further utilized. One example is coinbase maturity testing which currently calls GetDepthInMainChain(). I'd also note that while the logic added might be internally complicated - there is no additional persistent state introduced and the public interface to the class is very limited - i.e. I tried to minimize as much as possible how it interacts with the rest of the wallet (i.e. most notable of these was maintaining additional internal range bounding logic in exchange for not requiring notification on BlockDisconnected() events). ",
      "created_at" : "2018-04-10T00:02:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-379930111",
      "id" : 379930111,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-04-10T00:02:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379930111",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ironically the one provision that tends me towards a concept ACK doesn't jibe with reusing this sort of logic within parts of bitcoind, e.g. `GetDepthInMainChain()`.\r\n\r\nWith the merge of #10244 we're finally making concrete steps towards gui/wallet/node separation. I think it's fine for the wallet to encompass useful (if nonessential) features like this, especially once we have firmer separation between the three major subsystems, but I think if we were to use this class as-is in something like coinbase maturity checks and in doing so introduce a bidirectional dependency between the wallet and the node, that'd be a step backwards.\r\n\r\nUnless there was a really compelling case for this pattern to be used in bitcoind (and subsequently moved there and then exposed over an interface), I think it should stay completely isolated to `wallet` if implemented at all.\r\n\r\nThis seems like a nice feature for some users and I'm generally for it, but I'm also okay waiting on it until we get further down the road with node separation.\r\n\r\nAny chance you can just cherrypick https://github.com/jamesob/bitcoin/commit/92b620f26127b93f2b6fd389516f5e7b7d09ac7e so that the commit attribution remains intact? You can then do `git commit --amend` to make your changes.",
      "created_at" : "2018-04-10T01:03:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-379940642",
      "id" : 379940642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-04-10T01:04:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379940642",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Sorry if I was unclear, but I think we're on the same page. What I was\ntrying to say was with this sort of state in wallet, you wouldn't need to\nrely quite as much on GetDepthInMainChain() which should further the goal\nof separation.\n\nYes, of course I'll amend the commit as you suggest - did not realize I\ncould do that -- along with c++, I learn new things about git every day.\n\nOn Mon, Apr 9, 2018, 9:04 PM jamesob <notifications@github.com> wrote:\n\n> Ironically the one provision that tends me towards a concept ACK doesn't\n> jibe with reusing this sort of logic within parts of bitcoind, e.g.\n> GetDepthInMainChain().\n>\n> With the merge of #10244 <https://github.com/bitcoin/bitcoin/pull/10244>\n> we're finally making concrete steps towards gui/wallet/node separation. I\n> think it's fine for the wallet to encompass useful (if nonessential)\n> features like this, especially once we have firmer separation between the\n> three major subsystems, but I think if we were to use this class as-is in\n> something like coinbase maturity checks and in doing so introduce a\n> bidirectional dependency between the wallet and the node, that'd be a step\n> backwards.\n>\n> Unless there was a really compelling case for this pattern to be used in\n> bitcoind, I think it should stay completely isolated to wallet if\n> implemented at all.\n>\n> This seems like a nice feature for some users and I'm generally for it,\n> but I'm also okay waiting on it until we get further down the road with\n> node separation.\n>\n> Any chance you can just cherrypick jamesob/bitcoin@92b620f\n> <https://github.com/jamesob/bitcoin/commit/92b620f26127b93f2b6fd389516f5e7b7d09ac7e>\n> so that the commit attribution remains intact? You can then do git commit\n> --amend to make your changes.\n>\n> Ã¢ÂÂ\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-379940642>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAL8uRzkqiRopFt184UWXGNEDTaK2ry3ks5tnAUtgaJpZM4S9fis>\n> .\n>\n",
      "created_at" : "2018-04-10T01:14:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-379942447",
      "id" : 379942447,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-04-10T01:14:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379942447",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I wonder if it the concerns about code complexity would be addressed by splitting up the general purpose confirmation tracking code from the application-specific wallet notification logic. If you pulled the `notify_command_template` stuff out of `WalletTransactionNotifier` class, you could be left with a more general purpose class like:\r\n\r\n```c++\r\nclass ConfirmationTracker\r\n{\r\npublic:\r\n   //! Create new confirmation tracker which invokes callbacks after a\r\n   //! specified number of confirmations.\r\n   ConfirmationTracker(int num_confirmations);\r\n\r\n   //! Register callback which will be called later when block at block_height\r\n   //! has the specified number of confirmations, or immediately if it already\r\n   //! has enough confirmations.\r\n   void addCallback(int block_height, function<void()> callback);\r\n\r\n   //! Handle new block being connected at block_height by invoking callbacks\r\n   //! registered at (block_height - num_confirmations), and dropping callbacks\r\n   //! previously registered at block_height (in case of reorgs).\r\n   void blockConnected(int block_height);\r\nprivate:\r\n   ...\r\n}\r\n```\r\n\r\nThis could be a standalone class which could just go in libbitcoin_util and not be tied to the wallet. This way wallet notification code would not be much more complicated than it is now, and it would also be possible to imagine extending this class and using it more places like in the GUI, zmq code, or non-wallet RPCs.",
      "created_at" : "2018-04-10T12:21:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-380078733",
      "id" : 380078733,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-04-10T12:58:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/380078733",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "That sounds like a great idea - and probably the right place for this to live to be more generally useful. If I see no objections to the principle of the entire thing, I'll refactor along those lines and update in the coming days",
      "created_at" : "2018-04-10T13:37:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-380100756",
      "id" : 380100756,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-04-10T13:37:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/380100756",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "On the `GetDepthInMainChain` topic from https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-379930111 and https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-379940642, I think a more direct approach to tracking transaction confirmations inside the wallet might just be to add a new field to CMerkleTx. I described an idea for this here: https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-380101269",
      "created_at" : "2018-04-10T14:03:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-380110302",
      "id" : 380110302,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "updated_at" : "2018-04-10T14:03:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/380110302",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I concur with the concept NACKs.",
      "created_at" : "2018-06-12T17:27:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-396669926",
      "id" : 396669926,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NjY2OTkyNg==",
      "updated_at" : "2018-06-12T17:27:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/396669926",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Enough NACKs that I'm going to close this.\r\nFor those who have nacked (@luke-jr @jnewbery ) - was this a matter of the way it is implemented or more that this feature is completely undesired in the reference wallet implementation (fwiw, it seems like it is not infrequently requested) - if the latter, I'm happy to refactor implementation and open a new pr.",
      "created_at" : "2018-06-19T18:45:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-398504626",
      "id" : 398504626,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5ODUwNDYyNg==",
      "updated_at" : "2018-06-19T18:45:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/398504626",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "node_id" : "MDQ6VXNlcjE5NTc2OQ==",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> was this a matter of the way it is implemented or more that this feature is completely undesired in the reference wallet implementation\r\n\r\nI didn't review the implementation. I was just NACKish on the concept.",
      "created_at" : "2018-06-19T20:30:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-398535078",
      "id" : 398535078,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5ODUzNTA3OA==",
      "updated_at" : "2018-06-19T20:30:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/398535078",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "IMO we should avoid adding features to the current wallet if the plan is to separate from the node + multiprocess.\r\n\r\nRe https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-376690262\r\n\r\n> Or did you have a different workaround in mind?\r\n\r\n@ryanofsky a RPC client can track confirmations without calling `listtransactions`.",
      "created_at" : "2018-06-19T20:40:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-398537881",
      "id" : 398537881,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5ODUzNzg4MQ==",
      "updated_at" : "2018-06-19T20:40:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/398537881",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
