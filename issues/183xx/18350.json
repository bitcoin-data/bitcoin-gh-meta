{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "Test with block 47 in the `feature_block.py` creates a block with a hash higher than the target, which is supposed to fail. Now two issues exist there, and both have low probability of showing up:\r\n\r\n1. The creation is done with `while (hash < target)`, which is wrong, because hash = target is a valid mined value based on the code in the function `CheckProofOfWork()` that validates the mining target:\r\n```\r\n    if (UintToArith256(hash) > bnTarget)\r\n        return false;\r\n```\r\n2. As we know the hash stored in CBlock class in Python is stateful, unlike how it's in C++, where calling `CBlock::GetHash()` will actively calculate the hash and not cache it anywhere. With this, blocks that come out of the method `next_block` can have incorrect hash value when `solve=False`. This is because the `next_block` is mostly used with `solve=True`, and solving does call the function `rehash()` which calculates the hash of the block, but with `solve=False`, nothing calls that method. And since the work to be done in regtests is very low, the probably of this problem showing up is very low, but it practically happens (well, with much higher probability compared to issue No. 1 above).\r\n\r\nThis PR fixes both these issues.",
   "closed_at" : "2020-03-16T20:32:38Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 7,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18350/comments",
   "created_at" : "2020-03-14T13:55:44Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18350/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/18350",
   "id" : 581219418,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18350/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0Mzg4MzEyNjA2",
   "number" : 18350,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/18350.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18350",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/18350.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18350"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "test: Fix mining to an invalid target + ensure that a new block has the correct hash internally",
   "updated_at" : "2020-03-16T20:32:38Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18350",
   "user" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/8694366?v=4",
      "events_url" : "https://api.github.com/users/TheQuantumPhysicist/events{/privacy}",
      "followers_url" : "https://api.github.com/users/TheQuantumPhysicist/followers",
      "following_url" : "https://api.github.com/users/TheQuantumPhysicist/following{/other_user}",
      "gists_url" : "https://api.github.com/users/TheQuantumPhysicist/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/TheQuantumPhysicist",
      "id" : 8694366,
      "login" : "TheQuantumPhysicist",
      "node_id" : "MDQ6VXNlcjg2OTQzNjY=",
      "organizations_url" : "https://api.github.com/users/TheQuantumPhysicist/orgs",
      "received_events_url" : "https://api.github.com/users/TheQuantumPhysicist/received_events",
      "repos_url" : "https://api.github.com/users/TheQuantumPhysicist/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/TheQuantumPhysicist/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/TheQuantumPhysicist/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/TheQuantumPhysicist"
   }
}
