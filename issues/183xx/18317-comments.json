[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #16463 ([BIP 174] Implement serialization support for GLOBAL_XPUB field. by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-03-11T17:43:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#issuecomment-597773325",
      "id" : 597773325,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18317",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5Nzc3MzMyNQ==",
      "updated_at" : "2020-05-06T18:39:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597773325",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r398625457"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398625457"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert everything except wallet/qt to new serialization\" (4a185971f495ab89d869a4744d36aa1a8c9aea3f)\r\n\r\nIs it safe to drop the Init call here? It seems needed to avoid leaving nTime uninitialized if READWRITE(obj.nTime) is skipped below.\r\n\r\nI was experimenting a little bit with how to be able to bring back `if (ser_action.ForRead())` ability in the new framework now that the object type can vary and may be const.\r\n\r\nOne option might be to have `SER_READ` / `SER_WRITE` macros that contain code (similar to `WITH_LOCK`) and only execute when reading or writing:\r\n\r\n```diff\r\n--- a/src/protocol.h\r\n+++ b/src/protocol.h\r\n@@ -316,6 +316,7 @@ public:\r\n \r\n     SERIALIZE_METHODS(CAddress, obj)\r\n     {\r\n+        SER_READ(obj, obj.Init());\r\n         int nVersion = s.GetVersion();\r\n         if (s.GetType() & SER_DISK) {\r\n             READWRITE(nVersion);\r\ndiff --git a/src/serialize.h b/src/serialize.h\r\nindex 43f35f7ebe6..ae6a028ce97 100644\r\n--- a/src/serialize.h\r\n+++ b/src/serialize.h\r\n@@ -179,6 +179,7 @@ template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\r\n \r\n #define READWRITE(...) (::SerReadWriteMany(s, ser_action, __VA_ARGS__))\r\n #define READWRITEAS(type, obj) (::SerReadWriteMany(s, ser_action, ReadWriteAsHelper<type>(obj)))\r\n+#define SER_READ(obj, code) ::SerRead(s, ser_action, obj, [&](Stream& s, typename std::remove_const<Type>::type& obj) { code; })\r\n \r\n /**\r\n  * Implement three methods for serializable objects. These are actually wrappers over\r\n@@ -1089,6 +1090,17 @@ inline void SerReadWriteMany(Stream& s, CSerActionUnserialize ser_action, Args&&\r\n     ::UnserializeMany(s, args...);\r\n }\r\n \r\n+template<typename Stream, typename Type, typename Fn>\r\n+inline void SerRead(Stream& s, CSerActionSerialize ser_action, Type&&, Fn&&)\r\n+{\r\n+}\r\n+\r\n+template<typename Stream, typename Type, typename Fn>\r\n+inline void SerRead(Stream& s, CSerActionUnserialize ser_action, Type&& obj, Fn&& fn)\r\n+{\r\n+    fn(s, std::forward<Type>(obj));\r\n+}\r\n+\r\n template<typename I>\r\n inline void WriteVarInt(CSizeComputer &s, I n)\r\n {\r\n```",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-03-26T14:40:22Z",
      "diff_hunk" : "@@ -323,23 +314,18 @@ class CAddress : public CService\n \n     void Init();\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action)\n+    SERIALIZE_METHODS(CAddress, obj)\n     {\n-        if (ser_action.ForRead())\n-            Init();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r398625457",
      "id" : 398625457,
      "line" : 336,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYyNTQ1Nw==",
      "original_commit_id" : "4a185971f495ab89d869a4744d36aa1a8c9aea3f",
      "original_line" : 336,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 29,
      "pull_request_review_id" : 382075974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398625457",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r398770856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398770856"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add ConvertFormatter\" (7c5a0c7c53c7cec8f4f6d074d90c5e8988f61c15)\r\n\r\nI think it would be better not to have this class, or maybe expose it less widely:\r\n\r\n- It only seems to be used one place currently, and I think CustomUintFormatter could be used there instead.\r\n- It seems easy to confuse with `READWRITEAS`, and not obvious when you'd use `READWRITEAS` vs `READWRITE` with `ConvertFormatter`\r\n- Haven't thought about it too much, but just based on how this is implemented, there could be cases where using it would do unexpected temporary creation or copying or derived-base truncation.",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-03-26T17:47:44Z",
      "diff_hunk" : "@@ -540,6 +540,26 @@ struct CustomUintFormatter\n     }\n };\n \n+/** Formatter that (de)serializes a type as another type it's convertible to/from. */\n+template<typename F> struct ConvertFormatter",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r398770856",
      "id" : 398770856,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc3MDg1Ng==",
      "original_commit_id" : "7c5a0c7c53c7cec8f4f6d074d90c5e8988f61c15",
      "original_line" : 544,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : null,
      "pull_request_review_id" : 382075974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398770856",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r398817741"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398817741"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert everything except wallet/qt to new serialization\" (4a185971f495ab89d869a4744d36aa1a8c9aea3f)\r\n\r\nLast commit is mostly repetitive changes of this form. Maybe a big regex in a scripted diff could be used to do the boilerplate subtitutions in a separate commit, so the more complicated changes here stand out.",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-03-26T18:57:18Z",
      "diff_hunk" : "@@ -66,15 +66,7 @@ class CBloomFilter\n     CBloomFilter(const unsigned int nElements, const double nFPRate, const unsigned int nTweak, unsigned char nFlagsIn);\n     CBloomFilter() : isFull(true), isEmpty(false), nHashFuncs(0), nTweak(0), nFlags(0) {}\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(vData);\n-        READWRITE(nHashFuncs);\n-        READWRITE(nTweak);\n-        READWRITE(nFlags);\n-    }\n+    SERIALIZE_METHODS(CBloomFilter, obj) { READWRITE(obj.vData, obj.nHashFuncs, obj.nTweak, obj.nFlags); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r398817741",
      "id" : 398817741,
      "line" : 69,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgxNzc0MQ==",
      "original_commit_id" : "4a185971f495ab89d869a4744d36aa1a8c9aea3f",
      "original_line" : 69,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/bloom.h",
      "position" : 13,
      "pull_request_review_id" : 382075974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398817741",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r398821936"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398821936"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert everything except wallet/qt to new serialization\" (4a185971f495ab89d869a4744d36aa1a8c9aea3f)\r\n\r\nI suggested dropping ConvertFormatter in another comment for a few reasons. CustomUintFormatter could be used instead here if extended to support enums:\r\n\r\n```diff\r\ndiff --git a/src/protocol.h b/src/protocol.h\r\nindex c1a21264705..901471e110d 100644\r\n--- a/src/protocol.h\r\n+++ b/src/protocol.h\r\n@@ -324,7 +324,7 @@ public:\r\n             (nVersion >= CADDR_TIME_VERSION && !(s.GetType() & SER_GETHASH))) {\r\n             READWRITE(obj.nTime);\r\n         }\r\n-        READWRITE(Using<ConvertFormatter<uint64_t>>(obj.nServices));\r\n+        READWRITE(Using<CustomUintFormatter<8>>(obj.nServices));\r\n         READWRITEAS(CService, obj);\r\n     }\r\n \r\ndiff --git a/src/serialize.h b/src/serialize.h\r\nindex 51d270d7976..718bdea90a6 100644\r\n--- a/src/serialize.h\r\n+++ b/src/serialize.h\r\n@@ -527,14 +527,15 @@ struct CustomUintFormatter\r\n \r\n     template <typename Stream, typename I> void Unser(Stream& s, I& v)\r\n     {\r\n-        static_assert(std::numeric_limits<I>::max() >= MAX && std::numeric_limits<I>::min() <= 0, \"CustomUintFormatter type too small\");\r\n+        using U = typename std::conditional<std::is_enum<I>::value, std::underlying_type<I>, std::common_type<I>>::type::type;\r\n+        static_assert(std::numeric_limits<U>::max() >= MAX && std::numeric_limits<U>::min() <= 0, \"Assigned type too small\");\r\n         uint64_t raw = 0;\r\n         if (BigEndian) {\r\n             s.read(((char*)&raw) + 8 - Bytes, Bytes);\r\n-            v = be64toh(raw);\r\n+            v = static_cast<I>(be64toh(raw));\r\n         } else {\r\n             s.read((char*)&raw, Bytes);\r\n-            v = le64toh(raw);\r\n+            v = static_cast<I>(le64toh(raw));\r\n         }\r\n     }\r\n };\r\n```",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-03-26T19:04:02Z",
      "diff_hunk" : "@@ -323,23 +314,18 @@ class CAddress : public CService\n \n     void Init();\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action)\n+    SERIALIZE_METHODS(CAddress, obj)\n     {\n-        if (ser_action.ForRead())\n-            Init();\n         int nVersion = s.GetVersion();\n-        if (s.GetType() & SER_DISK)\n+        if (s.GetType() & SER_DISK) {\n             READWRITE(nVersion);\n+        }\n         if ((s.GetType() & SER_DISK) ||\n-            (nVersion >= CADDR_TIME_VERSION && !(s.GetType() & SER_GETHASH)))\n-            READWRITE(nTime);\n-        uint64_t nServicesInt = nServices;\n-        READWRITE(nServicesInt);\n-        nServices = static_cast<ServiceFlags>(nServicesInt);\n-        READWRITEAS(CService, *this);\n+            (nVersion >= CADDR_TIME_VERSION && !(s.GetType() & SER_GETHASH))) {\n+            READWRITE(obj.nTime);\n+        }\n+        READWRITE(Using<ConvertFormatter<uint64_t>>(obj.nServices));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r398821936",
      "id" : 398821936,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMTkzNg==",
      "original_commit_id" : "4a185971f495ab89d869a4744d36aa1a8c9aea3f",
      "original_line" : 327,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : null,
      "pull_request_review_id" : 382075974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/398821936",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r399518137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399518137"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert merkleblock to new serialization\" (25bfbbeb63eca1f1c8852a8a08844069d9e06776)\r\n\r\nMaybe better to keep constructor below private and just declare SERIALIZE_METHODS before it, assuming there's a valid reason for the constructor to be private.",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-03-27T20:21:13Z",
      "diff_hunk" : "@@ -157,17 +161,10 @@ class CMerkleBlock\n \n     CMerkleBlock() {}\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(header);\n-        READWRITE(txn);\n-    }\n-\n-private:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r399518137",
      "id" : 399518137,
      "line" : 168,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUxODEzNw==",
      "original_commit_id" : "25bfbbeb63eca1f1c8852a8a08844069d9e06776",
      "original_line" : 168,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/merkleblock.h",
      "position" : 60,
      "pull_request_review_id" : 383174750,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399518137",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400549708"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400549708"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's great! I've turned this snippet into a separate commit (with you as author; please let me know if you prefer a different approach). It also adds the corresponding SER_WRITE, as it turns out to be useful further.",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-03-30T23:13:47Z",
      "diff_hunk" : "@@ -323,23 +314,18 @@ class CAddress : public CService\n \n     void Init();\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action)\n+    SERIALIZE_METHODS(CAddress, obj)\n     {\n-        if (ser_action.ForRead())\n-            Init();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400549708",
      "id" : 400549708,
      "in_reply_to_id" : 398625457,
      "line" : 336,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0OTcwOA==",
      "original_commit_id" : "4a185971f495ab89d869a4744d36aa1a8c9aea3f",
      "original_line" : 336,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 29,
      "pull_request_review_id" : 384297176,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400549708",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400550066"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400550066"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've taken your approach of merging it into `CustomUintFormatter`.",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-03-30T23:14:45Z",
      "diff_hunk" : "@@ -540,6 +540,26 @@ struct CustomUintFormatter\n     }\n };\n \n+/** Formatter that (de)serializes a type as another type it's convertible to/from. */\n+template<typename F> struct ConvertFormatter",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400550066",
      "id" : 400550066,
      "in_reply_to_id" : 398770856,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU1MDA2Ng==",
      "original_commit_id" : "7c5a0c7c53c7cec8f4f6d074d90c5e8988f61c15",
      "original_line" : 544,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : null,
      "pull_request_review_id" : 384297551,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400550066",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400550280"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400550280"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think that would be pretty hard to do, especially the classname argument to `SERIALIZE_METHODS` is hard to figure out with a regexp. Do you have any concrete ideas?",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-03-30T23:15:23Z",
      "diff_hunk" : "@@ -66,15 +66,7 @@ class CBloomFilter\n     CBloomFilter(const unsigned int nElements, const double nFPRate, const unsigned int nTweak, unsigned char nFlagsIn);\n     CBloomFilter() : isFull(true), isEmpty(false), nHashFuncs(0), nTweak(0), nFlags(0) {}\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(vData);\n-        READWRITE(nHashFuncs);\n-        READWRITE(nTweak);\n-        READWRITE(nFlags);\n-    }\n+    SERIALIZE_METHODS(CBloomFilter, obj) { READWRITE(obj.vData, obj.nHashFuncs, obj.nTweak, obj.nFlags); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400550280",
      "id" : 400550280,
      "in_reply_to_id" : 398817741,
      "line" : 69,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU1MDI4MA==",
      "original_commit_id" : "4a185971f495ab89d869a4744d36aa1a8c9aea3f",
      "original_line" : 69,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/bloom.h",
      "position" : 13,
      "pull_request_review_id" : 384297792,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400550280",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400550416"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400550416"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've turned this into a separate commit with you as author.",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-03-30T23:15:50Z",
      "diff_hunk" : "@@ -323,23 +314,18 @@ class CAddress : public CService\n \n     void Init();\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action)\n+    SERIALIZE_METHODS(CAddress, obj)\n     {\n-        if (ser_action.ForRead())\n-            Init();\n         int nVersion = s.GetVersion();\n-        if (s.GetType() & SER_DISK)\n+        if (s.GetType() & SER_DISK) {\n             READWRITE(nVersion);\n+        }\n         if ((s.GetType() & SER_DISK) ||\n-            (nVersion >= CADDR_TIME_VERSION && !(s.GetType() & SER_GETHASH)))\n-            READWRITE(nTime);\n-        uint64_t nServicesInt = nServices;\n-        READWRITE(nServicesInt);\n-        nServices = static_cast<ServiceFlags>(nServicesInt);\n-        READWRITEAS(CService, *this);\n+            (nVersion >= CADDR_TIME_VERSION && !(s.GetType() & SER_GETHASH))) {\n+            READWRITE(obj.nTime);\n+        }\n+        READWRITE(Using<ConvertFormatter<uint64_t>>(obj.nServices));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400550416",
      "id" : 400550416,
      "in_reply_to_id" : 398821936,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU1MDQxNg==",
      "original_commit_id" : "4a185971f495ab89d869a4744d36aa1a8c9aea3f",
      "original_line" : 327,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : null,
      "pull_request_review_id" : 384297948,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400550416",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400550568"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400550568"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this was a mistake; fixed.",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-03-30T23:16:20Z",
      "diff_hunk" : "@@ -157,17 +161,10 @@ class CMerkleBlock\n \n     CMerkleBlock() {}\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(header);\n-        READWRITE(txn);\n-    }\n-\n-private:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r400550568",
      "id" : 400550568,
      "in_reply_to_id" : 399518137,
      "line" : 168,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU1MDU2OA==",
      "original_commit_id" : "25bfbbeb63eca1f1c8852a8a08844069d9e06776",
      "original_line" : 168,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/merkleblock.h",
      "position" : 60,
      "pull_request_review_id" : 384298139,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/400550568",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed a number of comments, and included some of @ryanofsky's code suggestions. I've also revamped the merkleblock serializers using the new FOR_READ/FOR_WRITE.",
      "created_at" : "2020-03-30T23:18:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#issuecomment-606301664",
      "id" : 606301664,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18317",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjMwMTY2NA==",
      "updated_at" : "2020-03-30T23:18:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606301664",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Anyone else feel like reviewing this? We're getting close. ",
      "created_at" : "2020-05-18T21:33:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#issuecomment-630447051",
      "id" : 630447051,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18317",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMDQ0NzA1MQ==",
      "updated_at" : "2020-05-18T21:33:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630447051",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Strong concept ACK\r\n\r\nNew code is much easier to read and reason about.",
      "created_at" : "2020-05-19T04:41:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#issuecomment-630575471",
      "id" : 630575471,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18317",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMDU3NTQ3MQ==",
      "updated_at" : "2020-05-19T04:41:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630575471",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427518341"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427518341"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 769ee5fa0011ae658770586442715452a656559d:\r\n\r\nAny reason why you remove the comment? \"This is only intended\r\nto implement serializers that are compatible with existing formats, and\r\nits use is not recommended for new data structures.\"",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-05-19T18:38:12Z",
      "diff_hunk" : "@@ -527,52 +527,30 @@ struct CustomUintFormatter\n     template <typename Stream, typename I> void Ser(Stream& s, I v)\n     {\n         if (v < 0 || v > MAX) throw std::ios_base::failure(\"CustomUintFormatter value out of range\");\n-        uint64_t raw = htole64(v);\n-        s.write((const char*)&raw, Bytes);\n+        if (BigEndian) {\n+            uint64_t raw = htobe64(v);\n+            s.write(((const char*)&raw) + 8 - Bytes, Bytes);\n+        } else {\n+            uint64_t raw = htole64(v);\n+            s.write((const char*)&raw, Bytes);\n+        }\n     }\n \n     template <typename Stream, typename I> void Unser(Stream& s, I& v)\n     {\n         static_assert(std::numeric_limits<I>::max() >= MAX && std::numeric_limits<I>::min() <= 0, \"CustomUintFormatter type too small\");\n         uint64_t raw = 0;\n-        s.read((char*)&raw, Bytes);\n-        v = le64toh(raw);\n+        if (BigEndian) {\n+            s.read(((char*)&raw) + 8 - Bytes, Bytes);\n+            v = be64toh(raw);\n+        } else {\n+            s.read((char*)&raw, Bytes);\n+            v = le64toh(raw);\n+        }\n     }\n };\n \n-/** Serialization wrapper class for big-endian integers.\n- *\n- * Use this wrapper around integer types that are stored in memory in native\n- * byte order, but serialized in big endian notation. This is only intended\n- * to implement serializers that are compatible with existing formats, and\n- * its use is not recommended for new data structures.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427518341",
      "id" : 427518341,
      "line" : 548,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUxODM0MQ==",
      "original_commit_id" : "769ee5fa0011ae658770586442715452a656559d",
      "original_line" : 548,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 65,
      "pull_request_review_id" : 414722057,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427518341",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427557191"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427557191"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Clang has tooling to do these kind of refactors. Though, I haven't figured out how to run them in a scripted-diff.",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-05-19T19:46:27Z",
      "diff_hunk" : "@@ -66,15 +66,7 @@ class CBloomFilter\n     CBloomFilter(const unsigned int nElements, const double nFPRate, const unsigned int nTweak, unsigned char nFlagsIn);\n     CBloomFilter() : isFull(true), isEmpty(false), nHashFuncs(0), nTweak(0), nFlags(0) {}\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(vData);\n-        READWRITE(nHashFuncs);\n-        READWRITE(nTweak);\n-        READWRITE(nFlags);\n-    }\n+    SERIALIZE_METHODS(CBloomFilter, obj) { READWRITE(obj.vData, obj.nHashFuncs, obj.nTweak, obj.nFlags); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427557191",
      "id" : 427557191,
      "in_reply_to_id" : 398817741,
      "line" : 69,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU1NzE5MQ==",
      "original_commit_id" : "4a185971f495ab89d869a4744d36aa1a8c9aea3f",
      "original_line" : 69,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/bloom.h",
      "position" : 13,
      "pull_request_review_id" : 414769644,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427557191",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427557837"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427557837"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Going forward, the Init should probably be removed and replaced with a slim and clean C++11 initializer",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-05-19T19:47:38Z",
      "diff_hunk" : "@@ -323,23 +314,18 @@ class CAddress : public CService\n \n     void Init();\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action)\n+    SERIALIZE_METHODS(CAddress, obj)\n     {\n-        if (ser_action.ForRead())\n-            Init();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427557837",
      "id" : 427557837,
      "in_reply_to_id" : 398625457,
      "line" : 336,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU1NzgzNw==",
      "original_commit_id" : "4a185971f495ab89d869a4744d36aa1a8c9aea3f",
      "original_line" : 336,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 29,
      "pull_request_review_id" : 414770428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427557837",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427609952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427609952"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What do you mean with \"C++11 initializer\" ?",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-05-19T21:26:35Z",
      "diff_hunk" : "@@ -323,23 +314,18 @@ class CAddress : public CService\n \n     void Init();\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action)\n+    SERIALIZE_METHODS(CAddress, obj)\n     {\n-        if (ser_action.ForRead())\n-            Init();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427609952",
      "id" : 427609952,
      "in_reply_to_id" : 398625457,
      "line" : 336,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYwOTk1Mg==",
      "original_commit_id" : "4a185971f495ab89d869a4744d36aa1a8c9aea3f",
      "original_line" : 336,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 29,
      "pull_request_review_id" : 414835606,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:30:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427609952",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427612141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427612141"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I suspect it was just lost in refactoring. Added a new commit that adds it back.",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-05-19T21:31:00Z",
      "diff_hunk" : "@@ -527,52 +527,30 @@ struct CustomUintFormatter\n     template <typename Stream, typename I> void Ser(Stream& s, I v)\n     {\n         if (v < 0 || v > MAX) throw std::ios_base::failure(\"CustomUintFormatter value out of range\");\n-        uint64_t raw = htole64(v);\n-        s.write((const char*)&raw, Bytes);\n+        if (BigEndian) {\n+            uint64_t raw = htobe64(v);\n+            s.write(((const char*)&raw) + 8 - Bytes, Bytes);\n+        } else {\n+            uint64_t raw = htole64(v);\n+            s.write((const char*)&raw, Bytes);\n+        }\n     }\n \n     template <typename Stream, typename I> void Unser(Stream& s, I& v)\n     {\n         static_assert(std::numeric_limits<I>::max() >= MAX && std::numeric_limits<I>::min() <= 0, \"CustomUintFormatter type too small\");\n         uint64_t raw = 0;\n-        s.read((char*)&raw, Bytes);\n-        v = le64toh(raw);\n+        if (BigEndian) {\n+            s.read(((char*)&raw) + 8 - Bytes, Bytes);\n+            v = be64toh(raw);\n+        } else {\n+            s.read((char*)&raw, Bytes);\n+            v = le64toh(raw);\n+        }\n     }\n };\n \n-/** Serialization wrapper class for big-endian integers.\n- *\n- * Use this wrapper around integer types that are stored in memory in native\n- * byte order, but serialized in big endian notation. This is only intended\n- * to implement serializers that are compatible with existing formats, and\n- * its use is not recommended for new data structures.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427612141",
      "id" : 427612141,
      "in_reply_to_id" : 427518341,
      "line" : 548,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYxMjE0MQ==",
      "original_commit_id" : "769ee5fa0011ae658770586442715452a656559d",
      "original_line" : 548,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 65,
      "pull_request_review_id" : 414838241,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:31:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427612141",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427618650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427618650"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> What do you mean with \"C++11 initializer\" ?\r\n\r\n\r\n#19020 ",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-05-19T21:45:11Z",
      "diff_hunk" : "@@ -323,23 +314,18 @@ class CAddress : public CService\n \n     void Init();\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action)\n+    SERIALIZE_METHODS(CAddress, obj)\n     {\n-        if (ser_action.ForRead())\n-            Init();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427618650",
      "id" : 427618650,
      "in_reply_to_id" : 398625457,
      "line" : 336,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYxODY1MA==",
      "original_commit_id" : "4a185971f495ab89d869a4744d36aa1a8c9aea3f",
      "original_line" : 336,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 29,
      "pull_request_review_id" : 414846241,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:45:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427618650",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427620268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427620268"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit f9ee0f37c28f604bc82dab502ce229c66ef5b3b9\r\n\r\nNot recommend for big endian or anything that can be serialized with this wrapper? For example, I am wondering if there is a recommended way to serialize enums or should new code rather not use enums instead? ",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-05-19T21:48:42Z",
      "diff_hunk" : "@@ -520,6 +520,15 @@ struct VarIntFormatter\n     }\n };\n \n+/** Serialization wrapper class for custom integers and enums.\n+ *\n+ * It permits specifying the serialized size (1 to 8 bytes) and endianness.\n+ *\n+ * Use the big endian mode for values that are stored in memory in native\n+ * byte order, but serialized in big endian notation. This is only intended\n+ * to implement serializers that are compatible with existing formats, and\n+ * its use is not recommended for new data structures.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427620268",
      "id" : 427620268,
      "line" : 530,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYyMDI2OA==",
      "original_commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "original_line" : 530,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 21,
      "pull_request_review_id" : 414848293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:48:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427620268",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427621184"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427621184"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The comment is only intended to apply to big endian serialization. Any suggestions to make that clearer?\r\n\r\nIf it's confusing, I think it's also fine to just drop the comment. When picking a serialization for a new structure I doubt anyone would intentionally complicate their code by using big endian serialization.",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-05-19T21:50:47Z",
      "diff_hunk" : "@@ -520,6 +520,15 @@ struct VarIntFormatter\n     }\n };\n \n+/** Serialization wrapper class for custom integers and enums.\n+ *\n+ * It permits specifying the serialized size (1 to 8 bytes) and endianness.\n+ *\n+ * Use the big endian mode for values that are stored in memory in native\n+ * byte order, but serialized in big endian notation. This is only intended\n+ * to implement serializers that are compatible with existing formats, and\n+ * its use is not recommended for new data structures.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427621184",
      "id" : 427621184,
      "in_reply_to_id" : 427620268,
      "line" : 530,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYyMTE4NA==",
      "original_commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "original_line" : 530,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 21,
      "pull_request_review_id" : 414849386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:50:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427621184",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427621443"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427621443"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Commented there: https://github.com/bitcoin/bitcoin/pull/19020/commits/eac91b03763880417b81037f890dd5a463ce8dde#r427620111",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-05-19T21:51:20Z",
      "diff_hunk" : "@@ -323,23 +314,18 @@ class CAddress : public CService\n \n     void Init();\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action)\n+    SERIALIZE_METHODS(CAddress, obj)\n     {\n-        if (ser_action.ForRead())\n-            Init();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427621443",
      "id" : 427621443,
      "in_reply_to_id" : 398625457,
      "line" : 336,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYyMTQ0Mw==",
      "original_commit_id" : "4a185971f495ab89d869a4744d36aa1a8c9aea3f",
      "original_line" : 336,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 29,
      "pull_request_review_id" : 414849679,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:51:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427621443",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427624619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427624619"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I doubt anyone would intentionally complicate their code by using big endian serialization\r\n\r\nMakes sense",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-05-19T21:58:34Z",
      "diff_hunk" : "@@ -520,6 +520,15 @@ struct VarIntFormatter\n     }\n };\n \n+/** Serialization wrapper class for custom integers and enums.\n+ *\n+ * It permits specifying the serialized size (1 to 8 bytes) and endianness.\n+ *\n+ * Use the big endian mode for values that are stored in memory in native\n+ * byte order, but serialized in big endian notation. This is only intended\n+ * to implement serializers that are compatible with existing formats, and\n+ * its use is not recommended for new data structures.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427624619",
      "id" : 427624619,
      "in_reply_to_id" : 427620268,
      "line" : 530,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYyNDYxOQ==",
      "original_commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "original_line" : 530,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 21,
      "pull_request_review_id" : 414853465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T21:58:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427624619",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK f9ee0f37c2, only change is new documentation commit for CustomUintFormatter ð\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nre-ACK f9ee0f37c2, only change is new documentation commit for CustomUintFormatter ð\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUh+HQv9EdvBDfmaDb6c9KM50spORaYYJlbuXGYi+pomY/sL9zDHQw5DlnO6CsKS\r\nCZ98PFhMSYoTY0jHxLDcQNoJdKnpuS027pJ82pE0lWLzawtSQrCjLk04UkkZwf1h\r\nBvSTfmLOq+071pwCFaSo60n07nIlAlSq7gIGGLq/9UfCM0eAk+ndOWzIxS+lglkR\r\nsO0U6bBK6w8PdpfyrYIJln+db4t7k6FnVeOOJG4TKF3vysvenSN3kknPzch7T7sN\r\nqnVPtist4j8vNAWRxo51BcO42AcGmJM8lK6gqrkXRnn+CqhygxUfQ8oM6Q5UQt6N\r\nmDYRUwvAYTJDwNrPJV378Otgb3Q6ZYF0/+RtIXO44NyhQYZ2mce600UhrrJatXu1\r\nDbvck/LPkFOkrjucmW4pE0a9xCx+4UCQ7uzPhz51yCXw0fY9fPK7L3OF/XcFTvTT\r\nqNDFffulWh3yjw+0TFbvHSB655J9nabJvIhs9pz8G4FE1+kHNwj0bdjkAaMXkR4y\r\n37zK6NZj\r\n=NdvU\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `ab46775e38a58bfb2a237b81708371ffad21f2374a35d117be61bd7b9e0fd5cf  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108ab46775e38a58bfb2a237b81708371ffad21f2374a35d117be61bd7b9e0fd5cff010afaa031c1cf2dc1fde6b269f3f6b4c9608fff0103f5370fe2553d9b8c99be1c530a9b3e008f120021b00362ccae77f8289a1157f9174dcfae132704506a3347c915b3efdb4595f08f1045ec45707f008bd7ca9946334941c0083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff0106a9457797f3c728f8123fa6ae820687008f1045ec45707f00825828a4187a58f610083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff01075f5c65caaf71c83e453ab63ff97181508f1045ec45707f00898da2eb82c34fc800083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010d81922116e5ee4b3532eb0a51296c1f908f1045ec45707f00887ac6873423f00010083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6d)\r\n\r\n</details>\r\n",
      "created_at" : "2020-05-19T22:00:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#issuecomment-631106741",
      "id" : 631106741,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18317",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMTEwNjc0MQ==",
      "updated_at" : "2020-05-19T22:00:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631106741",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427661148"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427661148"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add comments to CustomUintFormatter\" (f9ee0f37c28f604bc82dab502ce229c66ef5b3b9)\r\n\r\nre: \"not recommended for new data structures\", it'd be nice to say what preferred alternatives are. Compact ints, varints, little endian fixed width ints? I keep forgetting all the int types myself..\r\n",
      "commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "created_at" : "2020-05-19T23:42:54Z",
      "diff_hunk" : "@@ -520,6 +520,15 @@ struct VarIntFormatter\n     }\n };\n \n+/** Serialization wrapper class for custom integers and enums.\n+ *\n+ * It permits specifying the serialized size (1 to 8 bytes) and endianness.\n+ *\n+ * Use the big endian mode for values that are stored in memory in native\n+ * byte order, but serialized in big endian notation. This is only intended\n+ * to implement serializers that are compatible with existing formats, and\n+ * its use is not recommended for new data structures.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18317#discussion_r427661148",
      "id" : 427661148,
      "in_reply_to_id" : 427620268,
      "line" : 530,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY2MTE0OA==",
      "original_commit_id" : "f9ee0f37c28f604bc82dab502ce229c66ef5b3b9",
      "original_line" : 530,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 21,
      "pull_request_review_id" : 414897325,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18317",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-05-19T23:43:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427661148",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
