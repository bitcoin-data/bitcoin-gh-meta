[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25549#discussion_r914772152"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25549"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914772152"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Please leave the descriptor wallet section first.",
      "commit_id" : "d43fc7419465ef0fd7989f69a95ddf972fa7e3e8",
      "created_at" : "2022-07-06T12:21:17Z",
      "diff_hunk" : "@@ -1,92 +1,144 @@\n-NetBSD Build Guide\n-======================\n-**Updated for NetBSD [8.0](https://www.netbsd.org/releases/formal-8/NetBSD-8.0.html)**\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+Updated for NetBSD [9.2](https://netbsd.org/releases/formal-9/NetBSD-9.2.html).\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Preparation\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+### 1. Install Required Dependencies\n+\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc).\n+The example commands below use `pkgin`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+\n+Now that `git` and the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+\n+```bash\n git clone https://github.com/bitcoin/bitcoin.git\n ```\n \n-See [dependencies.md](dependencies.md) for a complete overview.\n+### 3. Install Optional Dependencies\n \n-### Building Bitcoin Core\n+#### Wallet Dependencies\n \n-**Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n+It is not necessary to build wallet functionality to run bitcoind or the GUI.\n \n-#### With descriptor wallet:\n+###### Legacy Wallet Support",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25549#discussion_r914772152",
      "id" : 914772152,
      "line" : 35,
      "node_id" : "PRRC_kwDOABII5842hlC4",
      "original_commit_id" : "d43fc7419465ef0fd7989f69a95ddf972fa7e3e8",
      "original_line" : 35,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 56,
      "pull_request_review_id" : 1029996893,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25549",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914772152/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-06T12:40:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914772152",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25549#discussion_r914773137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25549"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914773137"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Skip if you don't intend to use legacy wallets.\r\n\r\nI think sentences like this (repeated for every dependency) are overly verbose (and somewhat obvious) and could be dropped.",
      "commit_id" : "d43fc7419465ef0fd7989f69a95ddf972fa7e3e8",
      "created_at" : "2022-07-06T12:22:19Z",
      "diff_hunk" : "@@ -1,92 +1,144 @@\n-NetBSD Build Guide\n-======================\n-**Updated for NetBSD [8.0](https://www.netbsd.org/releases/formal-8/NetBSD-8.0.html)**\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+Updated for NetBSD [9.2](https://netbsd.org/releases/formal-9/NetBSD-9.2.html).\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Preparation\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+### 1. Install Required Dependencies\n+\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc).\n+The example commands below use `pkgin`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+\n+Now that `git` and the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+\n+```bash\n git clone https://github.com/bitcoin/bitcoin.git\n ```\n \n-See [dependencies.md](dependencies.md) for a complete overview.\n+### 3. Install Optional Dependencies\n \n-### Building Bitcoin Core\n+#### Wallet Dependencies\n \n-**Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n+It is not necessary to build wallet functionality to run bitcoind or the GUI.\n \n-#### With descriptor wallet:\n+###### Legacy Wallet Support\n+\n+`db4` is required to enable support for legacy wallets. Skip if you don't intend to use legacy wallets.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25549#discussion_r914773137",
      "id" : 914773137,
      "line" : 37,
      "node_id" : "PRRC_kwDOABII5842hlSR",
      "original_commit_id" : "d43fc7419465ef0fd7989f69a95ddf972fa7e3e8",
      "original_line" : 37,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 58,
      "pull_request_review_id" : 1029996893,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25549",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914773137/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-06T12:40:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914773137",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25549#discussion_r914777955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25549"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914777955"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> An error will be thrown if `db4` is not installed.\r\n\r\nI really don't this we need to say things like this in this document.\r\n\r\nI would rather drop all these example configuration examples (maybe except for one), and tell users they can look at the output of ./configure --help.",
      "commit_id" : "d43fc7419465ef0fd7989f69a95ddf972fa7e3e8",
      "created_at" : "2022-07-06T12:27:53Z",
      "diff_hunk" : "@@ -1,92 +1,144 @@\n-NetBSD Build Guide\n-======================\n-**Updated for NetBSD [8.0](https://www.netbsd.org/releases/formal-8/NetBSD-8.0.html)**\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+Updated for NetBSD [9.2](https://netbsd.org/releases/formal-9/NetBSD-9.2.html).\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Preparation\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+### 1. Install Required Dependencies\n+\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc).\n+The example commands below use `pkgin`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+\n+Now that `git` and the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+\n+```bash\n git clone https://github.com/bitcoin/bitcoin.git\n ```\n \n-See [dependencies.md](dependencies.md) for a complete overview.\n+### 3. Install Optional Dependencies\n \n-### Building Bitcoin Core\n+#### Wallet Dependencies\n \n-**Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n+It is not necessary to build wallet functionality to run bitcoind or the GUI.\n \n-#### With descriptor wallet:\n+###### Legacy Wallet Support\n+\n+`db4` is required to enable support for legacy wallets. Skip if you don't intend to use legacy wallets.\n+\n+```bash\n+pkgin install db4\n+```\n+\n+###### Descriptor Wallet Support\n+\n+`sqlite3` is required to enable support for [descriptor wallets](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md). Skip if you don't intend to use descriptor wallets.\n \n-The descriptor wallet uses `sqlite3`. You can install it using:\n ```bash\n pkgin install sqlite3\n ```\n \n+#### GUI Dependencies\n+\n+Bitcoin Core includes a GUI built with the cross-platform Qt Framework. To compile the GUI, we need to install `qt5`. Skip if you don't intend to use the GUI.\n+\n ```bash\n-./autogen.sh\n-./configure --with-gui=no --without-bdb \\\n-    CPPFLAGS=\"-I/usr/pkg/include\" \\\n-    LDFLAGS=\"-L/usr/pkg/lib\" \\\n-    BOOST_CPPFLAGS=\"-I/usr/pkg/include\" \\\n-    MAKE=gmake\n+pkgin install qt5\n ```\n \n-#### With legacy wallet:\n+The GUI can encode addresses in a QR Code. To build in QR support for the GUI, install `qrencode`. Skip if not using the GUI or don't need QR code functionality.\n+\n+```bash\n+pkgin install qrencode\n+```\n \n-BerkeleyDB is use for legacy wallet functionality.\n+#### Test Suite Dependencies\n \n-It is recommended to use Berkeley DB 4.8. You cannot use the BerkeleyDB library\n-from ports.\n-You can use [the installation script included in contrib/](/contrib/install_db4.sh) like so:\n+There is an included test suite that is useful for testing code changes when developing.\n+To run the test suite (recommended), you will need to have Python 3 installed:\n \n ```bash\n-./contrib/install_db4.sh `pwd`\n+pkgin install python37\n ```\n \n-from the root of the repository. Then set `BDB_PREFIX` for the next section:\n+### Building Bitcoin Core\n+\n+**Note**: Use `gmake` (the non-GNU `make` will exit with an error).\n+\n+\n+### 1. Configuration\n+\n+There are many ways to configure Bitcoin Core. Here are a few common examples:\n+##### Wallet (BDB + SQlite) Support, No GUI:\n+\n+This explicitly enables legacy wallet support and disables the GUI. An error will be thrown if `db4` is not installed. If `sqlite3` is installed, then descriptor wallet support will also be built.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25549#discussion_r914777955",
      "id" : 914777955,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII5842hmdj",
      "original_commit_id" : "d43fc7419465ef0fd7989f69a95ddf972fa7e3e8",
      "original_line" : 84,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 119,
      "pull_request_review_id" : 1029996893,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25549",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914777955/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-06T12:40:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914777955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25549#discussion_r914778669"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25549"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914778669"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is using BOOST_CPPFLAGS not sufficient? We no-longer link against any Boost libraries.",
      "commit_id" : "d43fc7419465ef0fd7989f69a95ddf972fa7e3e8",
      "created_at" : "2022-07-06T12:28:45Z",
      "diff_hunk" : "@@ -1,92 +1,144 @@\n-NetBSD Build Guide\n-======================\n-**Updated for NetBSD [8.0](https://www.netbsd.org/releases/formal-8/NetBSD-8.0.html)**\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+Updated for NetBSD [9.2](https://netbsd.org/releases/formal-9/NetBSD-9.2.html).\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Preparation\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+### 1. Install Required Dependencies\n+\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc).\n+The example commands below use `pkgin`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+\n+Now that `git` and the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+\n+```bash\n git clone https://github.com/bitcoin/bitcoin.git\n ```\n \n-See [dependencies.md](dependencies.md) for a complete overview.\n+### 3. Install Optional Dependencies\n \n-### Building Bitcoin Core\n+#### Wallet Dependencies\n \n-**Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n+It is not necessary to build wallet functionality to run bitcoind or the GUI.\n \n-#### With descriptor wallet:\n+###### Legacy Wallet Support\n+\n+`db4` is required to enable support for legacy wallets. Skip if you don't intend to use legacy wallets.\n+\n+```bash\n+pkgin install db4\n+```\n+\n+###### Descriptor Wallet Support\n+\n+`sqlite3` is required to enable support for [descriptor wallets](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md). Skip if you don't intend to use descriptor wallets.\n \n-The descriptor wallet uses `sqlite3`. You can install it using:\n ```bash\n pkgin install sqlite3\n ```\n \n+#### GUI Dependencies\n+\n+Bitcoin Core includes a GUI built with the cross-platform Qt Framework. To compile the GUI, we need to install `qt5`. Skip if you don't intend to use the GUI.\n+\n ```bash\n-./autogen.sh\n-./configure --with-gui=no --without-bdb \\\n-    CPPFLAGS=\"-I/usr/pkg/include\" \\\n-    LDFLAGS=\"-L/usr/pkg/lib\" \\\n-    BOOST_CPPFLAGS=\"-I/usr/pkg/include\" \\\n-    MAKE=gmake\n+pkgin install qt5\n ```\n \n-#### With legacy wallet:\n+The GUI can encode addresses in a QR Code. To build in QR support for the GUI, install `qrencode`. Skip if not using the GUI or don't need QR code functionality.\n+\n+```bash\n+pkgin install qrencode\n+```\n \n-BerkeleyDB is use for legacy wallet functionality.\n+#### Test Suite Dependencies\n \n-It is recommended to use Berkeley DB 4.8. You cannot use the BerkeleyDB library\n-from ports.\n-You can use [the installation script included in contrib/](/contrib/install_db4.sh) like so:\n+There is an included test suite that is useful for testing code changes when developing.\n+To run the test suite (recommended), you will need to have Python 3 installed:\n \n ```bash\n-./contrib/install_db4.sh `pwd`\n+pkgin install python37\n ```\n \n-from the root of the repository. Then set `BDB_PREFIX` for the next section:\n+### Building Bitcoin Core\n+\n+**Note**: Use `gmake` (the non-GNU `make` will exit with an error).\n+\n+\n+### 1. Configuration\n+\n+There are many ways to configure Bitcoin Core. Here are a few common examples:\n+##### Wallet (BDB + SQlite) Support, No GUI:\n+\n+This explicitly enables legacy wallet support and disables the GUI. An error will be thrown if `db4` is not installed. If `sqlite3` is installed, then descriptor wallet support will also be built.\n \n ```bash\n-export BDB_PREFIX=\"$PWD/db4\"\n+./autogen.sh\n+./configure --with-gui=no \\\n+    CPPFLAGS=\"-I/usr/pkg/include\" \\\n+    LDFLAGS=\"-L/usr/pkg/lib\" \\\n+    --with-boost-libdir=/usr/pkg/lib \\\n+    MAKE=gmake\n ```\n \n+##### Wallet (only SQlite) and GUI Support:\n+\n+This explicitly enables the GUI and disables legacy wallet support. If `qt5` is not installed, this will throw an error. If `sqlite3` is installed then descriptor wallet functionality will be built. If `sqlite3` is not installed, then wallet functionality will be disabled.\n+\n ```bash\n ./autogen.sh\n-./configure --with-gui=no CPPFLAGS=\"-I/usr/pkg/include\" \\\n+./configure --without-bdb --with-gui=yes \\\n+    CPPFLAGS=\"-I/usr/pkg/include\" \\\n     LDFLAGS=\"-L/usr/pkg/lib\" \\\n-    BOOST_CPPFLAGS=\"-I/usr/pkg/include\" \\\n-    BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" \\\n-    BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" \\\n+    --with-boost-libdir=/usr/pkg/lib \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25549#discussion_r914778669",
      "id" : 914778669,
      "line" : 104,
      "node_id" : "PRRC_kwDOABII5842hmot",
      "original_commit_id" : "d43fc7419465ef0fd7989f69a95ddf972fa7e3e8",
      "original_line" : 104,
      "original_position" : 144,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 144,
      "pull_request_review_id" : 1029996893,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25549",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914778669/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-06T12:40:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914778669",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25549#discussion_r914779461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25549"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914779461"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If this section is going to be added, it should come much earlier.",
      "commit_id" : "d43fc7419465ef0fd7989f69a95ddf972fa7e3e8",
      "created_at" : "2022-07-06T12:29:39Z",
      "diff_hunk" : "@@ -1,92 +1,144 @@\n-NetBSD Build Guide\n-======================\n-**Updated for NetBSD [8.0](https://www.netbsd.org/releases/formal-8/NetBSD-8.0.html)**\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+Updated for NetBSD [9.2](https://netbsd.org/releases/formal-9/NetBSD-9.2.html).\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Preparation\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+### 1. Install Required Dependencies\n+\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc).\n+The example commands below use `pkgin`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+\n+Now that `git` and the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+\n+```bash\n git clone https://github.com/bitcoin/bitcoin.git\n ```\n \n-See [dependencies.md](dependencies.md) for a complete overview.\n+### 3. Install Optional Dependencies\n \n-### Building Bitcoin Core\n+#### Wallet Dependencies\n \n-**Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n+It is not necessary to build wallet functionality to run bitcoind or the GUI.\n \n-#### With descriptor wallet:\n+###### Legacy Wallet Support\n+\n+`db4` is required to enable support for legacy wallets. Skip if you don't intend to use legacy wallets.\n+\n+```bash\n+pkgin install db4\n+```\n+\n+###### Descriptor Wallet Support\n+\n+`sqlite3` is required to enable support for [descriptor wallets](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md). Skip if you don't intend to use descriptor wallets.\n \n-The descriptor wallet uses `sqlite3`. You can install it using:\n ```bash\n pkgin install sqlite3\n ```\n \n+#### GUI Dependencies\n+\n+Bitcoin Core includes a GUI built with the cross-platform Qt Framework. To compile the GUI, we need to install `qt5`. Skip if you don't intend to use the GUI.\n+\n ```bash\n-./autogen.sh\n-./configure --with-gui=no --without-bdb \\\n-    CPPFLAGS=\"-I/usr/pkg/include\" \\\n-    LDFLAGS=\"-L/usr/pkg/lib\" \\\n-    BOOST_CPPFLAGS=\"-I/usr/pkg/include\" \\\n-    MAKE=gmake\n+pkgin install qt5\n ```\n \n-#### With legacy wallet:\n+The GUI can encode addresses in a QR Code. To build in QR support for the GUI, install `qrencode`. Skip if not using the GUI or don't need QR code functionality.\n+\n+```bash\n+pkgin install qrencode\n+```\n \n-BerkeleyDB is use for legacy wallet functionality.\n+#### Test Suite Dependencies\n \n-It is recommended to use Berkeley DB 4.8. You cannot use the BerkeleyDB library\n-from ports.\n-You can use [the installation script included in contrib/](/contrib/install_db4.sh) like so:\n+There is an included test suite that is useful for testing code changes when developing.\n+To run the test suite (recommended), you will need to have Python 3 installed:\n \n ```bash\n-./contrib/install_db4.sh `pwd`\n+pkgin install python37\n ```\n \n-from the root of the repository. Then set `BDB_PREFIX` for the next section:\n+### Building Bitcoin Core\n+\n+**Note**: Use `gmake` (the non-GNU `make` will exit with an error).\n+\n+\n+### 1. Configuration\n+\n+There are many ways to configure Bitcoin Core. Here are a few common examples:\n+##### Wallet (BDB + SQlite) Support, No GUI:\n+\n+This explicitly enables legacy wallet support and disables the GUI. An error will be thrown if `db4` is not installed. If `sqlite3` is installed, then descriptor wallet support will also be built.\n \n ```bash\n-export BDB_PREFIX=\"$PWD/db4\"\n+./autogen.sh\n+./configure --with-gui=no \\\n+    CPPFLAGS=\"-I/usr/pkg/include\" \\\n+    LDFLAGS=\"-L/usr/pkg/lib\" \\\n+    --with-boost-libdir=/usr/pkg/lib \\\n+    MAKE=gmake\n ```\n \n+##### Wallet (only SQlite) and GUI Support:\n+\n+This explicitly enables the GUI and disables legacy wallet support. If `qt5` is not installed, this will throw an error. If `sqlite3` is installed then descriptor wallet functionality will be built. If `sqlite3` is not installed, then wallet functionality will be disabled.\n+\n ```bash\n ./autogen.sh\n-./configure --with-gui=no CPPFLAGS=\"-I/usr/pkg/include\" \\\n+./configure --without-bdb --with-gui=yes \\\n+    CPPFLAGS=\"-I/usr/pkg/include\" \\\n     LDFLAGS=\"-L/usr/pkg/lib\" \\\n-    BOOST_CPPFLAGS=\"-I/usr/pkg/include\" \\\n-    BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" \\\n-    BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" \\\n+    --with-boost-libdir=/usr/pkg/lib \\\n     MAKE=gmake\n ```\n \n-#### Without wallet:\n+##### No Wallet or GUI\n+\n ```bash\n ./autogen.sh\n-./configure --with-gui=no --disable-wallet \\\n+./configure --without-wallet --with-gui=no \\\n     CPPFLAGS=\"-I/usr/pkg/include\" \\\n     LDFLAGS=\"-L/usr/pkg/lib\" \\\n-    BOOST_CPPFLAGS=\"-I/usr/pkg/include\" \\\n+    --with-boost-libdir=/usr/pkg/lib \\\n     MAKE=gmake\n ```\n \n+##### Note on GCC\n+\n+We currently require GCC 8.1 or greater to compile; NetBSD currently ships with an older version. You should upgrade your GCC and then pass this new version to the configure script.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25549#discussion_r914779461",
      "id" : 914779461,
      "line" : 121,
      "node_id" : "PRRC_kwDOABII5842hm1F",
      "original_commit_id" : "d43fc7419465ef0fd7989f69a95ddf972fa7e3e8",
      "original_line" : 121,
      "original_position" : 164,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 164,
      "pull_request_review_id" : 1029996893,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25549",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914779461/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-06T12:40:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914779461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25549#discussion_r914780230"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25549"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914780230"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\nClone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\r\n```",
      "commit_id" : "d43fc7419465ef0fd7989f69a95ddf972fa7e3e8",
      "created_at" : "2022-07-06T12:30:27Z",
      "diff_hunk" : "@@ -1,92 +1,144 @@\n-NetBSD Build Guide\n-======================\n-**Updated for NetBSD [8.0](https://www.netbsd.org/releases/formal-8/NetBSD-8.0.html)**\n+# NetBSD Build Guide\n \n-This guide describes how to build bitcoind and command-line utilities on NetBSD.\n+Updated for NetBSD [9.2](https://netbsd.org/releases/formal-9/NetBSD-9.2.html).\n \n-This guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, command-line utilities, and GUI on NetBSD.\n \n-Preparation\n--------------\n+## Preparation\n \n-You will need the following modules, which can be installed via pkgsrc or pkgin:\n+### 1. Install Required Dependencies\n+\n+Install the required dependencies the usual way you [install software on NetBSD](https://www.netbsd.org/docs/guide/en/chap-boot.html#chap-boot-pkgsrc).\n+The example commands below use `pkgin`.\n+\n+```bash\n+pkgin install autoconf automake libtool pkg-config git gmake boost libevent\n \n ```\n-autoconf\n-automake\n-boost\n-git\n-gmake\n-libevent\n-libtool\n-pkg-config\n-python37\n \n+See [dependencies.md](dependencies.md) for a complete overview.\n+\n+### 2. Clone Bitcoin Repo\n+\n+Now that `git` and the required dependencies are installed, let's clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25549#discussion_r914780230",
      "id" : 914780230,
      "line" : 23,
      "node_id" : "PRRC_kwDOABII5842hnBG",
      "original_commit_id" : "d43fc7419465ef0fd7989f69a95ddf972fa7e3e8",
      "original_line" : 23,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "doc/build-netbsd.md",
      "position" : 40,
      "pull_request_review_id" : 1029996893,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25549",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914780230/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-06T12:40:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/914780230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
