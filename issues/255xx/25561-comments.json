[
   {
      "author_association" : "MEMBER",
      "body" : "Mind adding steps to reproduce?",
      "created_at" : "2022-07-07T05:35:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1177097804",
      "id" : 1177097804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GKRZM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177097804/reactions"
      },
      "updated_at" : "2022-07-07T05:35:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177097804",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Mind adding steps to reproduce?\r\n\r\nIncrease `-dbcache=` in then validate blocks and coins dbs (probably the easiest via python plyvel a small script to compare node dbs)\r\nIn fork that i've work on, it's flush batch at every block in ibd, so every block append in a batch then some batch records missing due to signed int overflow.",
      "created_at" : "2022-07-07T07:24:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1177188653",
      "id" : 1177188653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GKnkt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177188653/reactions"
      },
      "updated_at" : "2022-07-07T07:24:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177188653",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Sorry, I don't follow. Are you saying this is something that an end user of a Bitcoin Core release can run into or does it require local modifications or external scripts?\r\n\r\nOur functional tests run with the integer sanitizer, so are you saying this happens only outside of tests?\r\n\r\nI am happy to try to reproduce this, but it would make it a lot easier for me if there were exact and easy steps to reproduce. Ideally ones that can be copy-pasted into a terminal.",
      "created_at" : "2022-07-07T07:31:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1177194605",
      "id" : 1177194605,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GKpBt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177194605/reactions"
      },
      "updated_at" : "2022-07-07T07:31:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177194605",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If this is security relevant (or you are unsure about it), kindly follow the security policy:\r\n\r\nhttps://github.com/bitcoin/bitcoin/security/policy",
      "created_at" : "2022-07-07T07:39:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1177201980",
      "id" : 1177201980,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GKq08",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177201980/reactions"
      },
      "updated_at" : "2022-07-07T07:39:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177201980",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`DBImpl::Write` is used by `CDBWrapper` to write in leveldb, it groups batches in `DBImpl::BuildBatchGroup` then in `WriteBatchInternal::Append` uses `SetCount(dst, Count(dst) + Count(src));` more precise `Count(dst) + Count(src)` is signed int + signed int = overflow is UB that's made a record id to be unpredictable then not found.\r\n\r\nIt could compromise block / tx index and/or coins db which could lead to possible fork and compromise the network as worst case scenario.",
      "created_at" : "2022-07-07T10:17:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1177360728",
      "id" : 1177360728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GLRlY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177360728/reactions"
      },
      "updated_at" : "2022-07-07T10:19:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177360728",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@bvbfan, `BuildBatchGroup` only groups batches if you're attempting to write batches concurrently (core [appears][1] to split updates into smaller batches and write them sequentially). Even then, the batches would need to total 2^31 updates or more. \r\n\r\nI don't think this is possible under any realistic circumstance. Writing the entire UTXO set in a single batch still wouldn't come close to triggering an overflow.\r\n\r\n[1]: https://github.com/bitcoin/bitcoin/blob/fb38c6e/src/txdb.cpp#L139",
      "created_at" : "2022-07-07T11:39:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1177471767",
      "id" : 1177471767,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GLssX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177471767/reactions"
      },
      "updated_at" : "2022-07-07T11:39:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177471767",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/470564?v=4",
         "events_url" : "https://api.github.com/users/chjj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/chjj/followers",
         "following_url" : "https://api.github.com/users/chjj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/chjj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/chjj",
         "id" : 470564,
         "login" : "chjj",
         "node_id" : "MDQ6VXNlcjQ3MDU2NA==",
         "organizations_url" : "https://api.github.com/users/chjj/orgs",
         "received_events_url" : "https://api.github.com/users/chjj/received_events",
         "repos_url" : "https://api.github.com/users/chjj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/chjj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/chjj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/chjj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@chjj correct, it groups batches when it's called concurrently, but it does it even one batch is present, notice\r\n\r\n```\r\n  if (result == first->batch) {\r\n        // Switch to temporary batch instead of disturbing caller's batch\r\n        result = tmp_batch_;\r\n        assert(WriteBatchInternal::Count(result) == 0);\r\n        WriteBatchInternal::Append(result, first->batch);\r\n  }\r\n ```\r\none batch it uses the allocated one and will overflow as well. Issue is pretty serious.  ",
      "created_at" : "2022-07-07T12:08:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1177506385",
      "id" : 1177506385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GL1JR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177506385/reactions"
      },
      "updated_at" : "2022-07-07T12:08:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177506385",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@bvbfan, the append loop won't ever be entered with just a single writer:\r\n\r\n``` c++\r\n  std::deque<Writer*>::iterator iter = writers_.begin();\r\n  ++iter;  // Advance past \"first\"\r\n  for (; iter != writers_.end(); ++iter) {\r\n    ...\r\n  }\r\n```\r\n\r\n> one batch it uses the allocated one and will overflow as well\r\n\r\nI'm still having trouble understanding how there would be billions of updates in a single write.",
      "created_at" : "2022-07-07T12:18:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1177518879",
      "id" : 1177518879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GL4Mf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177518879/reactions"
      },
      "updated_at" : "2022-07-07T12:18:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177518879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/470564?v=4",
         "events_url" : "https://api.github.com/users/chjj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/chjj/followers",
         "following_url" : "https://api.github.com/users/chjj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/chjj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/chjj",
         "id" : 470564,
         "login" : "chjj",
         "node_id" : "MDQ6VXNlcjQ3MDU2NA==",
         "organizations_url" : "https://api.github.com/users/chjj/orgs",
         "received_events_url" : "https://api.github.com/users/chjj/received_events",
         "repos_url" : "https://api.github.com/users/chjj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/chjj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/chjj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/chjj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm still having trouble understanding how there would be billions of updates in a single write.\r\n\r\nEasy, bitcoin core uses a cache over the backed, so when cache is increased it will produce a big batch, as i wrote before via `-dbcache`",
      "created_at" : "2022-07-07T12:22:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1177524802",
      "id" : 1177524802,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GL5pC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177524802/reactions"
      },
      "updated_at" : "2022-07-07T12:22:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177524802",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> so when cache is increased it will produce a big batch\r\n\r\nI don't think that's true. When the cache is flushed, core splits the updates into smaller batches. These batches are processed sequentially, and aren't grouped together by LevelDB.",
      "created_at" : "2022-07-07T12:57:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1177571951",
      "id" : 1177571951,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GMFJv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177571951/reactions"
      },
      "updated_at" : "2022-07-07T12:57:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177571951",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/470564?v=4",
         "events_url" : "https://api.github.com/users/chjj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/chjj/followers",
         "following_url" : "https://api.github.com/users/chjj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/chjj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/chjj",
         "id" : 470564,
         "login" : "chjj",
         "node_id" : "MDQ6VXNlcjQ3MDU2NA==",
         "organizations_url" : "https://api.github.com/users/chjj/orgs",
         "received_events_url" : "https://api.github.com/users/chjj/received_events",
         "repos_url" : "https://api.github.com/users/chjj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/chjj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/chjj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/chjj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > so when cache is increased it will produce a big batch\r\n> \r\n> I don't think that's true. When the cache is flushed, core splits the updates into smaller batches. These batches are processed sequentially, and aren't grouped together by LevelDB.\r\n\r\nThere is nothing to \"think\", just read the code\r\nIn `CCoinsViewDB::BatchWrite` and `CBlockTreeDB::WriteBatchSync` one batch is created and `put/delete` just append to it.",
      "created_at" : "2022-07-07T13:59:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1177661099",
      "id" : 1177661099,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GMa6r",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177661099/reactions"
      },
      "updated_at" : "2022-07-07T14:02:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1177661099",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "While an overflow may technically be UB, in practice AFAIK it is always the same deterministic result (for the same platform) on all supported platforms. So unless the value going negative is a problem (which is not trivial to see looking at the code), I don't see how this is exploitable or can lead to de facto issues. But if going negative is a problem, I don't see why simply making it uint32 would fix it... it would just move the overflow from 2^31 to 2^32.\r\n\r\nThat being said, since it's UB, we should probably still fix it anyway. But this currently goes through upstream or at least https://github.com/bitcoin-core/leveldb-subtree",
      "created_at" : "2022-07-08T00:26:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1178400219",
      "id" : 1178400219,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GPPXb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1178400219/reactions"
      },
      "updated_at" : "2022-07-08T00:26:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1178400219",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> That being said, since it's UB, we should probably still fix it anyway\r\n\r\nKeep in mind that `unsigned` will \"propagate\" over `signed` and may change code logic in unrelated parts. So I don't think we should be blindly changing `int` into `unsigned` because it can theoretically be UB, unless it is clear how the UB can be triggered in a Bitcoin Core production release. (Either with a full description, a unit test, or otherwise steps to reproduce).\r\n\r\nIf the issue purely exists for unrelated third-party API users of the google leveldb, the issue should be fixed in google/leveldb.",
      "created_at" : "2022-07-08T06:56:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1178625274",
      "id" : 1178625274,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GQGT6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1178625274/reactions"
      },
      "updated_at" : "2022-07-08T06:56:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1178625274",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Keep in mind that `unsigned` will \"propagate\" over `signed` and may change code logic in unrelated parts\r\n\r\nIt will be true if there is unsigned int in the calculation chain, but there isn't. It's stored as unsigned but after calculation. The lucky scenario is 0 + (- signed) will not trigger actual calculation then it's fine.\r\n\r\n> But if going negative is a problem, I don't see why simply making it uint32 would fix it... it would just move the overflow from 2^31 to 2^32.\r\n\r\nUnsigned int overflow is well defined and expected, unless that - true.\r\n\r\n> So I don't think we should be blindly changing int into unsigned because it can theoretically be UB, unless it is clear how the UB can be triggered in a Bitcoin Core production release\r\n\r\nSo wrong logic, even if it's well defined, as i wrote only by luck, it could lead to possible fork in the future, depend of some new implementation. There is no blind here.",
      "created_at" : "2022-07-08T07:39:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1178661418",
      "id" : 1178661418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GQPIq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1178661418/reactions"
      },
      "updated_at" : "2022-07-08T07:39:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1178661418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> `DBImpl::Write` is used by `CDBWrapper` to write in leveldb, it groups batches in `DBImpl::BuildBatchGroup` then in `WriteBatchInternal::Append` uses `SetCount(dst, Count(dst) + Count(src));` more precise `Count(dst) + Count(src)` is signed int + signed int = overflow is UB that's made a record id to be unpredictable then not found.\r\n\r\nI don't think this leads to signed integer overflow.\r\n\r\n`BuildBatchGroup` (https://github.com/google/leveldb/blob/479a1f4e9b1138d7dda4db5078aadc4e7b845a85/db/db_impl.cc#L1282-L1290) fetches the size of the initial batch and determines a maximum size a _combined_ batch can be. It doesn't, however, limit the size of the initial batch but I think the bitcoind code doesn't create lots of Puts/Deletes in a single batch.\r\n\r\nNote that this size is not the number of entries being updated, but the overall serialized size of the batch (which is internally represented as std::string). The number of entries ref'd by SetCount or Count is the actual number of entries being updated via put/delete. The count will always lag behind the byte size of the batch since each entry being modified at least has a key that is stored in the internal std::string. Since the `max_size` is nowhere near the maximum int value, this check should be hit (https://github.com/google/leveldb/blob/479a1f4e9b1138d7dda4db5078aadc4e7b845a85/db/db_impl.cc#L1303-L1307) and signed integer overflow via Append -> SetCount won't occur.",
      "created_at" : "2022-07-08T15:05:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1179090967",
      "id" : 1179090967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GR4AX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1179090967/reactions"
      },
      "updated_at" : "2022-07-08T15:05:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1179090967",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15145615?v=4",
         "events_url" : "https://api.github.com/users/Crypt-iQ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Crypt-iQ/followers",
         "following_url" : "https://api.github.com/users/Crypt-iQ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Crypt-iQ",
         "id" : 15145615,
         "login" : "Crypt-iQ",
         "node_id" : "MDQ6VXNlcjE1MTQ1NjE1",
         "organizations_url" : "https://api.github.com/users/Crypt-iQ/orgs",
         "received_events_url" : "https://api.github.com/users/Crypt-iQ/received_events",
         "repos_url" : "https://api.github.com/users/Crypt-iQ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Crypt-iQ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Crypt-iQ"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Note that this size is not the number of entries being updated, but the overall serialized size of the batch (which is internally represented as std::string). The number of entries ref'd by SetCount or Count is the actual number of entries being updated via put/delete. The count will always lag behind the byte size of the batch since each entry being modified at least has a key that is stored in the internal std::string. Since the `max_size` is nowhere near the maximum int value, this check should be hit (https://github.com/google/leveldb/blob/479a1f4e9b1138d7dda4db5078aadc4e7b845a85/db/db_impl.cc#L1303-L1307) and signed integer overflow via Append -> SetCount won't occur.\r\n\r\nCorrect, it's internal counter of Put/Delete records, it could overflow as well, note here\r\nhttps://github.com/google/leveldb/blob/479a1f4e9b1138d7dda4db5078aadc4e7b845a85/db/write_batch.cc#L99\r\nhttps://github.com/google/leveldb/blob/479a1f4e9b1138d7dda4db5078aadc4e7b845a85/db/write_batch.cc#L106\r\n\r\nSo depending of configuration it's vulnerable. I did not expect to defence a patch which address a clear CVE.\r\n",
      "created_at" : "2022-07-09T14:55:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1179557446",
      "id" : 1179557446,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GTp5G",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1179557446/reactions"
      },
      "updated_at" : "2022-07-09T14:55:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1179557446",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "A few comments:\r\n* It's unclear to me whether this is even vulnerable in general, but Bitcoin Core splits up UTXO database writes into 16 MiB chunks, so it's impossible to even reach this condition. This can only be changed using a debug-only option. So from this I would conclude this doesn't pose a vulnerability for Bitcoin Core itself, and doesn't warrant any special treatment on our end.\r\n* Even if the above is wrong (which I think it isn't), and this actually poses a threat directly to Bitcoin Core, it should be fixed through updating of the https://github.com/bitcoin-core/leveldb-subtree repo, where our LevelDB fork is maintained (this is why this PR is failing CI).\r\n* It may be that this is a bug in the LevelDB code that doesn't affect us, but if it is, it should be fixed upstream. I see you've opened a PR there, though it's waiting on signing a license. If merged upstream we can consider updating the Bitcoin Core subtree, or just waiting for a normal update.\r\n* CVEs are a database for assigning unambiguous numbers to vulnerabilities and disclosures. Unless you've requested a CVE number, this is not a CVE. Doing so is independent from whether it's actually a serious issue or not.\r\n* If you believe this was a serious issue, you should privately contact the maintainers, not open a PR. I hope that if you do find problems in the future, that's the approach you'll use.",
      "created_at" : "2022-07-09T16:22:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1179569370",
      "id" : 1179569370,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GTsza",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1179569370/reactions"
      },
      "updated_at" : "2022-07-09T17:32:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1179569370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> A few comments:\r\n> \r\n> * It's unclear to me whether this is even vulnerable in general, but Bitcoin Core splits up UTXO database writes into 16 MiB chunks, so it's impossible to even reach this condition. This can only be changed using a debug-only option. So from this I would conclude this doesn't pose a vulnerability for Bitcoin Core itself, and doesn't warrant any special treatment on our end.\r\n\r\nUntrue, https://github.com/bitcoin/bitcoin/blob/master/src/txdb.cpp#L118 it's configurable. It's not affected only coinds db, block index as well.\r\n\r\n> * Even if the above is wrong (which I think it isn't), and this actually poses a threat directly to Bitcoin Core, it should be fixed through updating of the https://github.com/bitcoin-core/leveldb-subtree repo, where our LevelDB fork is maintained (this is why this PR is failing CI).\r\n\r\nSure, i could open PR there.\r\n\r\n> * It may be that this is a bug in the LevelDB code that doesn't affect us, but if it is, it should be fixed upstream. I see you've opened a PR there, though it's waiting on signing a license. If merged upstream we can consider updating the Bitcoin Core subtree, or just waiting for a normal update.\r\n\r\nSure, it's open PR upstream, i still think it's higher priority to Bitcoin\r\n\r\n> * CVEs are a database for assigning unambiguous numbers to vulnerabilities and disclosures. Unless you've requested a CVE number, this is not a CVE. Doing so is independent from whether it's actually a serious issue or not.\r\n\r\nSure, i did not request, but it's clear a CVE, i was supposed to do it, but rather i think it's better to be fixed here.",
      "created_at" : "2022-07-11T10:14:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1180214295",
      "id" : 1180214295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585GWKQX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1180214295/reactions"
      },
      "updated_at" : "2022-07-11T10:14:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1180214295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It's accepted upstream.",
      "created_at" : "2022-10-26T13:39:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25561#issuecomment-1292064600",
      "id" : 1292064600,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25561",
      "node_id" : "IC_kwDOABII585NA1dY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1292064600/reactions"
      },
      "updated_at" : "2022-10-26T13:39:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1292064600",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8323581?v=4",
         "events_url" : "https://api.github.com/users/bvbfan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bvbfan/followers",
         "following_url" : "https://api.github.com/users/bvbfan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bvbfan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bvbfan",
         "id" : 8323581,
         "login" : "bvbfan",
         "node_id" : "MDQ6VXNlcjgzMjM1ODE=",
         "organizations_url" : "https://api.github.com/users/bvbfan/orgs",
         "received_events_url" : "https://api.github.com/users/bvbfan/received_events",
         "repos_url" : "https://api.github.com/users/bvbfan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bvbfan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bvbfan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bvbfan"
      }
   }
]
