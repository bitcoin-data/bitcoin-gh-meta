[
   {
      "body" : "Do we actually enforce that on Travis? Its nice to have the auto-checker stuff, but AFAIR its (barely) hooked up anywhere?",
      "created_at" : "2017-07-18T20:57:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316195434",
      "id" : 316195434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-18T20:57:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316195434",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt Travis is currently not compiling with [Clang Thread Safety Analysis](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html) warnings (`-Wthread-safety-analysis`) enabled. (Do we want to change that?)\r\n\r\nPersonally I build daily using `clang` with `-Wthread-safety-analysis` enabled.\r\n\r\nIn the general case we want to fix all warnings emitted when compiling with `-Wthread-safety-analysis`, don't we? :-)\r\n\r\n<details>\r\n<summary>Click to expand: Current thread safety warnings</summary>\r\n<pre>\r\nnet_processing.cpp:587:10: warning: reading variable 'vExtraTxnForCompact' requires holding mutex 'cs_main' [-Wthread-safety-analysis]\r\n    if (!vExtraTxnForCompact.size())\r\n         ^\r\nnet_processing.cpp:60:57: note: Guarded_by declared here.\r\nstatic std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact GUARDED_BY(cs_main);\r\n                                                        ^\r\nnet_processing.cpp:583:1: note: Thread warning in function 'AddToCompactExtraTransactions'\r\n{\r\n^\r\nnet_processing.cpp:588:9: warning: reading variable 'vExtraTxnForCompact' requires holding mutex 'cs_main' [-Wthread-safety-analysis]\r\n        vExtraTxnForCompact.resize(max_extra_txn);\r\n        ^\r\nnet_processing.cpp:60:57: note: Guarded_by declared here.\r\nstatic std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact GUARDED_BY(cs_main);\r\n                                                        ^\r\nnet_processing.cpp:583:1: note: Thread warning in function 'AddToCompactExtraTransactions'\r\n{\r\n^\r\nnet_processing.cpp:589:5: warning: reading variable 'vExtraTxnForCompact' requires holding mutex 'cs_main' [-Wthread-safety-analysis]\r\n    vExtraTxnForCompact[vExtraTxnForCompactIt] = std::make_pair(tx->GetWitnessHash(), tx);\r\n    ^\r\nnet_processing.cpp:60:57: note: Guarded_by declared here.\r\nstatic std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact GUARDED_BY(cs_main);\r\n                                                        ^\r\nnet_processing.cpp:583:1: note: Thread warning in function 'AddToCompactExtraTransactions'\r\n{\r\n^\r\n</pre>\r\n</details>",
      "created_at" : "2017-07-18T21:24:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316202564",
      "id" : 316202564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-18T22:02:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316202564",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "If we're going to revive this safety checking infrastructure (it was introduced in #2003, and I don't think updated much since), there are probably many other places to add annotations.",
      "created_at" : "2017-07-19T00:39:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316238630",
      "id" : 316238630,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-19T00:40:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316238630",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "body" : "Agree with @sipa.\r\n@practicalswift whats the reason of only add the safety checking infrastructure to `AddToCompactExtraTransactions`?",
      "created_at" : "2017-07-19T09:49:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316332960",
      "id" : 316332960,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-19T09:49:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316332960",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "body" : "The reason I'm starting with `AddToCompactExtraTransactions(Ã¢ÂÂ¦)` is simply to fix the only current warning when building with `clang`'s `-Wthread-safety-analysis` enabled:\r\n\r\n```\r\nnet_processing.cpp:587:10: warning: reading variable 'vExtraTxnForCompact' requires holding mutex 'cs_main' [-Wthread-safety-analysis]\r\n```\r\n\r\nThe reason for the warning is that `vExtraTxnForCompact` is marked as guarded by the `cs_main`-mutex:\r\n\r\n```c++\r\nstatic std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact \r\n    GUARDED_BY(cs_main);\r\n```\r\n\r\n`clang` detects that `vExtraTxnForCompact` is accessed in `AddToCompactExtraTransactions(Ã¢ÂÂ¦)` and that this function lacks the `EXCLUSIVE_LOCKS_REQUIRED(cs_main)` annotation that logically should follow from such access (if intentional).\r\n\r\nThis PR fixes that and after applying this PR the code base is free from `-Wthread-safety-analysis` warnings.\r\n\r\nI'd be glad to extend the usage of `GUARDED_BY(Ã¢ÂÂ¦)` annotations (and the corresponding `EXCLUSIVE_LOCKS_REQUIRED(Ã¢ÂÂ¦)` annotations) in the code base, but that is a larger undertaking that probably belongs in a follow-up PR.\r\n\r\nI guess one reason not to fix the current warning is if we for some reason instead would want to remove this thread-safety infrastructure. Let me know if that is the case :-)",
      "created_at" : "2017-07-19T14:50:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316412165",
      "id" : 316412165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-19T14:52:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316412165",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "Additional reading: The [\"C/C++ Thread Safety Analysis\"](https://research.google.com/pubs/archive/42958.pdf) paper (Hutchins, Ballman & Sutherland, 2014) paper describing `clang` thread-safety analysis and how it is used for the Google C++ codebase:\r\n\r\n> They essentially provide a static type system for threads, and can detect potential race conditions and deadlocks. This paper describes Clang Thread Safety Analysis, a tool which uses annotations to declare and enforce thread safety policies in C and C++ programs.\r\n> [Ã¢ÂÂ¦]\r\n> It has been deployed on a large scale at Google; all C++ code at Google is now compiled with thread safety analysis enabled by default.\r\n> [Ã¢ÂÂ¦]\r\n> The GUARDED_BY attribute declares that a thread must lock `mu` before it can read or write to `balance`, thus ensuring that the increment and decrement operations are atomic. Similarly,\r\nREQUIRES declares that the calling thread must lock mu before calling `withdrawImpl`. Because the caller is assumed to have locked `mu,` it is safe to modify `balance` within the body of the method.",
      "created_at" : "2017-07-19T15:06:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316417209",
      "id" : 316417209,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-19T15:21:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316417209",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "Ah! Didn't realize its to fix a warning, yea, lets a) do this and b) can you add a -Werror=thread-safety-analysis here, too? I was informed travis already does a clang build for OSX, so it should be able to catch errors here :).",
      "created_at" : "2017-07-19T22:12:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316533985",
      "id" : 316533985,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-19T22:12:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316533985",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt Sure! I've updated the PR title to make things more clear :-)",
      "created_at" : "2017-07-19T22:26:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-316537015",
      "id" : 316537015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-19T22:26:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316537015",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "I think we really should make travis enforce this. It shouldnt be hard cause we already have --enable-werror by default, just need to hook up -Werror=thread-safety-analysis if the compiler supports it (which our clang-osx build should).",
      "created_at" : "2017-07-24T15:31:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-317460836",
      "id" : 317460836,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-24T15:31:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/317460836",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt Would something along the lines of the following do the trick for Travis?\r\n\r\n```diff\r\ndiff --git a/.travis.yml b/.travis.yml\r\nindex a79428f..423b04e 100644\r\n--- a/.travis.yml\r\n+++ b/.travis.yml\r\n@@ -34,7 +34,7 @@ env:\r\n # No wallet\r\n     - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\r\n # Cross-Mac\r\n-    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\"\r\n+    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\" CPPFLAGS=\"-Werror=thread-safety-analysis\"\r\n\r\n before_install:\r\n     - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\r\n```\r\n\r\nOr did you mean always enabling that warning if the compiler supports it?",
      "created_at" : "2017-07-24T15:56:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-317468538",
      "id" : 317468538,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-24T16:01:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/317468538",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "@practicalswift I was referring to the -Werror support we already have in configure.ac. Best to use that, I'd think.",
      "created_at" : "2017-07-24T20:57:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-317552353",
      "id" : 317552353,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-24T20:57:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/317552353",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt Got it! What about this:\r\n\r\n```diff\r\ndiff --git a/configure.ac b/configure.ac\r\nindex aea5d71..ec3877d 100644\r\n--- a/configure.ac\r\n+++ b/configure.ac\r\n@@ -241,6 +241,7 @@ if test \"x$enable_werror\" = \"xyes\"; then\r\n     AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\r\n   fi\r\n   AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\r\n fi\r\n\r\n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\r\n@@ -249,6 +250,7 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\r\n   AX_CHECK_COMPILE_FLAG([-Wformat],[CXXFLAGS=\"$CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wvla],[CXXFLAGS=\"$CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wformat-security],[CXXFLAGS=\"$CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[CXXFLAGS=\"$CXXFLAGS -Wthread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\r\n\r\n   ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\r\n   ## unknown options if any other warning is produced. Test the -Wfoo case, and\r\n```\r\n\r\nLooks good? :-)",
      "created_at" : "2017-07-24T21:57:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-317567066",
      "id" : 317567066,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-24T22:07:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/317567066",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "Heh, I figured you'd incldue it in this PR. Anyway, utACK this pr by itself.",
      "created_at" : "2017-07-25T20:00:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-317854805",
      "id" : 317854805,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-25T20:00:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/317854805",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "utACK ef2aca6c12efc48ce557a87c90ecf2d96ad4885e",
      "created_at" : "2017-07-31T14:18:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-319080566",
      "id" : 319080566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-07-31T14:18:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/319080566",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "body" : "utACK ef2aca6c12efc48ce557a87c90ecf2d96ad4885e, though its useful to hold off merging this until #10923 is ready as a test for #10923.",
      "created_at" : "2017-08-01T15:01:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-319397367",
      "id" : 319397367,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-08-01T15:01:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/319397367",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "Cherry-picked 9df85380aae4219920ccca80efac2bdf408519d8 into this PR as suggested by @TheBlueMatt in #10923!\r\n\r\n@TheBlueMatt, looks good? :-)",
      "created_at" : "2017-08-18T13:50:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-323359026",
      "id" : 323359026,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-08-18T14:06:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323359026",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "body" : "@ptracticalswift maybe rebase on #10923 and take the patches from https://github.com/TheBlueMatt/bitcoin/commits/2017-08-test-10923 (squashed, of course)?",
      "created_at" : "2017-08-18T21:40:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-323467121",
      "id" : 323467121,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-08-18T21:40:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323467121",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "body" : "@TheBlueMatt Does this PR look good now? Please check my attempt to summarize your changes in the commit message for https://github.com/bitcoin/bitcoin/pull/10866/commits/695fe315e8c4191bd5e9e98a8ce6d2be8c6aff96. Let me know if anything should be changed or if you'd rather squash your commits in your branch and have me cherry pick the resulting commit as-is :-)",
      "created_at" : "2017-08-19T17:07:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-323535396",
      "id" : 323535396,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-08-19T17:08:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323535396",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r134746407"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134746407"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This change is already in master",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-08-23T13:10:55Z",
      "diff_hunk" : "@@ -34,7 +34,7 @@ env:\n # x86_64 Linux, No wallet\n     - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Cross-Mac\n-    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\"\n+    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\" OSX_SDK=10.11 GOAL=\"deploy\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r134746407",
      "id" : 134746407,
      "original_commit_id" : "eeee7c12d4963a3f0bccfd1b8b5b43e574874da1",
      "original_position" : 5,
      "path" : ".travis.yml",
      "position" : null,
      "pull_request_review_id" : 58073275,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/134746407",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "body" : "@MarcoFalke Thanks! Rebased on top of `master`, so the already merged commit is now excluded from this PR :-)",
      "created_at" : "2017-08-23T15:30:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-324373178",
      "id" : 324373178,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-08-23T15:32:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324373178",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift \r\nNACK\r\n1) Transaction time check was changed:\r\n-            checktxtime = boost::get_system_time() + boost::posix_time::minutes(1);\r\n +            checktxtime = std::chrono::steady_clock::now() + std::chrono::seconds(1);\r\n\r\n2) IMO there are too many things going on in the first commit at once, making it hard to review and bug-prone. Switching the primitives in the sync module from boost to std should be done in an atomic commit, without doing any other change.\r\n\r\nI didn't know about this pull request before opening issue #11166 (from which you referred me here), I'm pretty close to having that ready to open a pull request, (just changing boost to std). Will update here when it's ready. I think it'd be better if that were reviewed and merged, and only then follow up with other changes. \r\nEDIT: Opened pull request #11199 ",
      "created_at" : "2017-08-30T19:06:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-326088724",
      "id" : 326088724,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-08-30T19:48:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326088724",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/84245?v=4",
         "events_url" : "https://api.github.com/users/danra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/danra/followers",
         "following_url" : "https://api.github.com/users/danra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/danra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/danra",
         "id" : 84245,
         "login" : "danra",
         "organizations_url" : "https://api.github.com/users/danra/orgs",
         "received_events_url" : "https://api.github.com/users/danra/received_events",
         "repos_url" : "https://api.github.com/users/danra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/danra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/danra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/danra"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@danra Are you referring to @TheBlueMatt:s commit f01ea9326bc69d4f731a5904881740308c5e4271?\r\n\r\nThis PR contains three commits. Please consider reviewing d77d9ccd1ad35f550c8dcdc3b83e65bad8c51c48 and 0c7115c56fdbe25257aee23ae002dc5af3238bb7 too :-)",
      "created_at" : "2017-09-01T07:42:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-326513048",
      "id" : 326513048,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-01T07:42:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326513048",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa @TheBlueMatt @jonasschnelli @theuni I have some follow-up work which depends on this PR. Do you have time reviewing this PR?\r\n\r\nThe follow-up work is a PR adding `GUARDED_BY(Ã¢ÂÂ¦)` and `EXCLUSIVE_LOCKS_REQUIRED(Ã¢ÂÂ¦)` annotations where appropriate.",
      "created_at" : "2017-09-01T07:46:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-326513832",
      "id" : 326513832,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-01T07:47:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326513832",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift Yes, referring to f01ea93",
      "created_at" : "2017-09-01T09:26:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-326534428",
      "id" : 326534428,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-01T09:26:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326534428",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/84245?v=4",
         "events_url" : "https://api.github.com/users/danra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/danra/followers",
         "following_url" : "https://api.github.com/users/danra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/danra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/danra",
         "id" : 84245,
         "login" : "danra",
         "organizations_url" : "https://api.github.com/users/danra/orgs",
         "received_events_url" : "https://api.github.com/users/danra/received_events",
         "repos_url" : "https://api.github.com/users/danra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/danra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/danra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/danra"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@TheBlueMatt Do you have any input on @danra:s review?",
      "created_at" : "2017-09-01T09:29:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-326535153",
      "id" : 326535153,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-01T09:29:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326535153",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Please see #11226 for the follow-up PR which adds `GUARDED_BY(Ã¢ÂÂ¦)` and `EXCLUSIVE_LOCKS_REQUIRED(Ã¢ÂÂ¦)` annotations.",
      "created_at" : "2017-09-03T17:04:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-326817382",
      "id" : 326817382,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-03T17:04:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326817382",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@danra Indeed, the minutes -> seconds change was a mistake, should probably be fixed. Indeed, the first commit was originally several different commits, but they werent logically split up so it was easier to squash them than to manually re-split them. Personally I find the first commit not-too-hard to review cause the changes are pretty clearly along file boundaries, but then I also wrote it, so I cant speak....\r\n\r\nutACK 0c7115c56fdbe25257aee23ae002dc5af3238bb7 (I went back and re-checked that nothing currently needing boost interruption support should be effected by this change).",
      "created_at" : "2017-09-04T22:16:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-327033991",
      "id" : 327033991,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-04T22:16:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327033991",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@TheBlueMatt I've now added a commit fixing the minutes/seconds mix-up. Looks good? :-)",
      "created_at" : "2017-09-05T06:17:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-327081361",
      "id" : 327081361,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-05T06:17:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327081361",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yup, needs a squash though.",
      "created_at" : "2017-09-06T00:50:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-327342903",
      "id" : 327342903,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-06T00:50:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327342903",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@TheBlueMatt Squashed! Looks good? :-)",
      "created_at" : "2017-09-06T07:06:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-327394883",
      "id" : 327394883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-06T07:06:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327394883",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Anyone willing to review? :-)\r\n\r\nHaving this PR merged would simplify the work on follow-up PR:s such as #11226.",
      "created_at" : "2017-09-15T12:51:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-329773866",
      "id" : 329773866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-15T12:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329773866",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift generally, when squashing, please try to avoid rebasing as it makes it much easier for reviewers to track which changes you made between two commits of a PR.\r\n\r\nre-utACK b22210337da62047290fcb2658b2c45117c7efa9",
      "created_at" : "2017-09-15T19:18:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-329875597",
      "id" : 329875597,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-15T19:18:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329875597",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r139252430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139252430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "cvBlockChange needs to be notified in Interrupt() in init, otherwise we'll hang here at shutdown.",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-09-15T21:19:12Z",
      "diff_hunk" : "@@ -472,17 +472,17 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n         // Release the wallet and main lock while waiting\n         LEAVE_CRITICAL_SECTION(cs_main);\n         {\n-            checktxtime = boost::get_system_time() + boost::posix_time::minutes(1);\n+            checktxtime = std::chrono::steady_clock::now() + std::chrono::minutes(1);\n \n-            boost::unique_lock<boost::mutex> lock(csBestBlock);\n+            CWaitableLock lock(csBestBlock);\n             while (chainActive.Tip()->GetBlockHash() == hashWatchedChain && IsRPCRunning())\n             {\n-                if (!cvBlockChange.timed_wait(lock, checktxtime))\n+                if (cvBlockChange.wait_until(lock, checktxtime) == std::cv_status::timeout)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r139252430",
      "id" : 139252430,
      "original_commit_id" : "b22210337da62047290fcb2658b2c45117c7efa9",
      "original_position" : 21,
      "path" : "src/rpc/mining.cpp",
      "position" : null,
      "pull_request_review_id" : 63165589,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139252430",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@TheBlueMatt \r\n> Personally I find the first commit not-too-hard to review cause the changes are pretty clearly along file boundaries, but then I also wrote it, so I cant speak....\r\n\r\nIMHO the fact that there were a few utACKs before fixing the minutes-seconds bug demonstrates that the commit was doing too many things at once to review easily.\r\n\r\nSo it's still a NACK from me until it's split to smaller commits. Of course, you're welcome to use my own PR #11199 which does just the move from `boost` to `std` locks part.",
      "created_at" : "2017-09-15T21:28:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-329908560",
      "id" : 329908560,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-15T21:28:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329908560",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/84245?v=4",
         "events_url" : "https://api.github.com/users/danra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/danra/followers",
         "following_url" : "https://api.github.com/users/danra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/danra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/danra",
         "id" : 84245,
         "login" : "danra",
         "organizations_url" : "https://api.github.com/users/danra/orgs",
         "received_events_url" : "https://api.github.com/users/danra/received_events",
         "repos_url" : "https://api.github.com/users/danra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/danra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/danra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/danra"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK ~~other than my comment above~~. I think the commits here are ok. Either way, with #11199 or this one, we're going to need some follow-ups to tidy up afterwards.",
      "created_at" : "2017-09-15T21:37:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-329910036",
      "id" : 329910036,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-19T19:07:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329910036",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r139783317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139783317"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@theuni Something like this? :-)\r\n\r\n```diff\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex 25b8caf..73f4860 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -167,6 +167,7 @@ void Interrupt(boost::thread_group& threadGroup)\r\n     if (g_connman)\r\n         g_connman->Interrupt();\r\n     threadGroup.interrupt_all();\r\n+    cvBlockChange.notify_all();\r\n }\r\n\r\n void Shutdown()\r\n```",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-09-19T18:51:09Z",
      "diff_hunk" : "@@ -472,17 +472,17 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n         // Release the wallet and main lock while waiting\n         LEAVE_CRITICAL_SECTION(cs_main);\n         {\n-            checktxtime = boost::get_system_time() + boost::posix_time::minutes(1);\n+            checktxtime = std::chrono::steady_clock::now() + std::chrono::minutes(1);\n \n-            boost::unique_lock<boost::mutex> lock(csBestBlock);\n+            CWaitableLock lock(csBestBlock);\n             while (chainActive.Tip()->GetBlockHash() == hashWatchedChain && IsRPCRunning())\n             {\n-                if (!cvBlockChange.timed_wait(lock, checktxtime))\n+                if (cvBlockChange.wait_until(lock, checktxtime) == std::cv_status::timeout)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r139783317",
      "id" : 139783317,
      "in_reply_to_id" : 139252430,
      "original_commit_id" : "b22210337da62047290fcb2658b2c45117c7efa9",
      "original_position" : 21,
      "path" : "src/rpc/mining.cpp",
      "position" : null,
      "pull_request_review_id" : 63764600,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139783317",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r139787328"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139787328"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looking deeper, I think this is actually ok (though circuitous) as-is.\r\n```\r\nStopRPC() -> g_rpcSignals.Stopped() -> OnRPCStopped() -> cvBlockChange.notify_all()\r\n```\r\nSo, nevermind my comment.",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-09-19T19:06:37Z",
      "diff_hunk" : "@@ -472,17 +472,17 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n         // Release the wallet and main lock while waiting\n         LEAVE_CRITICAL_SECTION(cs_main);\n         {\n-            checktxtime = boost::get_system_time() + boost::posix_time::minutes(1);\n+            checktxtime = std::chrono::steady_clock::now() + std::chrono::minutes(1);\n \n-            boost::unique_lock<boost::mutex> lock(csBestBlock);\n+            CWaitableLock lock(csBestBlock);\n             while (chainActive.Tip()->GetBlockHash() == hashWatchedChain && IsRPCRunning())\n             {\n-                if (!cvBlockChange.timed_wait(lock, checktxtime))\n+                if (cvBlockChange.wait_until(lock, checktxtime) == std::cv_status::timeout)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r139787328",
      "id" : 139787328,
      "in_reply_to_id" : 139252430,
      "original_commit_id" : "b22210337da62047290fcb2658b2c45117c7efa9",
      "original_position" : 21,
      "path" : "src/rpc/mining.cpp",
      "position" : null,
      "pull_request_review_id" : 63769093,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139787328",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@TheBlueMatt Thanks for the utACK. I'll avoid rebasing when squashing going forward. Thanks for the suggestion!\r\n\r\n@theuni Thanks for the utACK.\r\n\r\nAnyone else who has time to review? Having this merged would help my annotations work a lot :-)",
      "created_at" : "2017-09-19T21:29:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-330679204",
      "id" : 330679204,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-09-19T21:29:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330679204",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r143293506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143293506"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Comment above still mentions boost.",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-10-06T21:01:50Z",
      "diff_hunk" : "@@ -97,21 +100,23 @@ class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n };\n \n /** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Lock for CConditionVariable */\n+typedef std::unique_lock<std::mutex> CWaitableLock;\n+\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n \n #ifdef DEBUG_LOCKCONTENTION\n void PrintLockContention(const char* pszName, const char* pszFile, int nLine);\n #endif\n \n /** Wrapper around boost::unique_lock<Mutex> */\n-template <typename Mutex>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r143293506",
      "id" : 143293506,
      "original_commit_id" : "f3c4005aa809ccf04692ed793b6df0ee856e3447",
      "original_position" : 39,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 67791968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143293506",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r143293593"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143293593"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Fix -Wthread-safety-analysis warnings.\"\r\n\r\nComment above still mentions boost.",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-10-06T21:02:13Z",
      "diff_hunk" : "@@ -97,21 +100,23 @@ class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n };\n \n /** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Lock for CConditionVariable */\n+typedef std::unique_lock<std::mutex> CWaitableLock;\n+\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n \n #ifdef DEBUG_LOCKCONTENTION\n void PrintLockContention(const char* pszName, const char* pszFile, int nLine);\n #endif\n \n /** Wrapper around boost::unique_lock<Mutex> */\n-template <typename Mutex>\n-class SCOPED_LOCKABLE CMutexLock\n+class SCOPED_LOCKABLE CCriticalBlock\n {\n private:\n-    boost::unique_lock<Mutex> lock;\n+    std::unique_lock<CCriticalSection> lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r143293593",
      "id" : 143293593,
      "original_commit_id" : "f3c4005aa809ccf04692ed793b6df0ee856e3447",
      "original_position" : 45,
      "path" : "src/sync.h",
      "position" : 76,
      "pull_request_review_id" : 67791968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143293593",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r143296309"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143296309"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Fix -Wthread-safety-analysis warnings.\"\r\n\r\nThe naming here doesn't seem very consistent:\r\n\r\nRecursive mutex: **CCriticalSection** (unchanged)\r\nRecursive lock: **CCriticalBlock** (previously _CMutexLock_)\r\nNon-recursive mutex: **CWaitableCriticalSection** (unchanged)\r\nNon-recursive lock: **CWaitableLock** (previously didn't exist)\r\n\r\nI don't see why we wouldn't just follow the standard naming and our current coding convention and use:\r\n\r\nRecursive mutex: **RecursiveMutex**\r\nRecursive lock: **RecursiveLock**\r\nNon-recursive mutex: **Mutex**\r\nNon-recursive lock: **Lock**\r\n\r\nMaybe defining backwards compatible _CCriticalSection_ and _CWaitableCriticalSection_ typedefs to avoid increasing the size of the diff.",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-10-06T21:17:43Z",
      "diff_hunk" : "@@ -97,21 +100,23 @@ class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n };\n \n /** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Lock for CConditionVariable */\n+typedef std::unique_lock<std::mutex> CWaitableLock;\n+\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n \n #ifdef DEBUG_LOCKCONTENTION\n void PrintLockContention(const char* pszName, const char* pszFile, int nLine);\n #endif\n \n /** Wrapper around boost::unique_lock<Mutex> */\n-template <typename Mutex>\n-class SCOPED_LOCKABLE CMutexLock\n+class SCOPED_LOCKABLE CCriticalBlock",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r143296309",
      "id" : 143296309,
      "original_commit_id" : "f3c4005aa809ccf04692ed793b6df0ee856e3447",
      "original_position" : 41,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 67791968,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143296309",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky Thanks for the review. I've now added two commits addressing the two issues raised. Additionally I found a boost include that is no longer needed. Would you mind re-reviewing and confirming that your feedback was properly addressed? :-)",
      "created_at" : "2017-10-09T14:27:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-335174802",
      "id" : 335174802,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-10-09T14:27:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/335174802",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky Good point regarding combining the related commits. Could you please re-review? :-)",
      "created_at" : "2017-10-09T19:23:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-335261421",
      "id" : 335261421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-10-09T19:23:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/335261421",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 7ab7662dc067951fc9fd1364bd6d1446c8770305. I suspect that we may run into symbol collisions at some point by using the generic \"Mutex\" name, but it'll be obvious if that happens.",
      "created_at" : "2017-10-09T19:36:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-335264524",
      "id" : 335264524,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-10-09T19:36:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/335264524",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r143571665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143571665"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could s/CWaitableCriticalSection/Mutex",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-10-09T20:41:00Z",
      "diff_hunk" : "@@ -545,14 +545,14 @@ static void BlockNotifyCallback(bool initialSync, const CBlockIndex *pBlockIndex\n }\n \n static bool fHaveGenesis = false;\n-static boost::mutex cs_GenesisWait;\n+static CWaitableCriticalSection cs_GenesisWait;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r143571665",
      "id" : 143571665,
      "original_commit_id" : "b9011c9f6dc7dccee477e2201bec74ba49e34475",
      "original_position" : 5,
      "path" : "src/init.cpp",
      "position" : 5,
      "pull_request_review_id" : 68101646,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143571665",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r143572014"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143572014"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Comment is a little misleading since it's a wrapper around std::unique_lock\\<RecursiveMutex>",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-10-09T20:42:37Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class RecursiveMutex : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n-    ~CCriticalSection() {\n+    ~RecursiveMutex() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> Mutex;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Lock for CConditionVariable */\n+typedef std::unique_lock<std::mutex> Lock;\n+\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n \n #ifdef DEBUG_LOCKCONTENTION\n void PrintLockContention(const char* pszName, const char* pszFile, int nLine);\n #endif\n \n-/** Wrapper around boost::unique_lock<Mutex> */\n-template <typename Mutex>\n-class SCOPED_LOCKABLE CMutexLock\n+/** Wrapper around std::unique_lock<Mutex> */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r143572014",
      "id" : 143572014,
      "original_commit_id" : "b9011c9f6dc7dccee477e2201bec74ba49e34475",
      "original_position" : 80,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 68101646,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/143572014",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky Thanks for re-reviewing! Feedback address. Would you mind re-reviewing again? :-)",
      "created_at" : "2017-10-09T20:56:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-335285582",
      "id" : 335285582,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-10-09T20:56:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/335285582",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky Sorry, fixed. Would you mind re-reviewing? :-)",
      "created_at" : "2017-10-09T21:09:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-335290284",
      "id" : 335290284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-10-09T21:09:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/335290284",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148322160"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148322160"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, that feels weird? We now have CCriticalSection and Mutex which mean two different things, but its not clear /what/ they mean without looking at what they're typedef'd to? Can we just do this as a scripted diff in a separate commit?",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-01T17:09:38Z",
      "diff_hunk" : "@@ -545,14 +545,14 @@ static void BlockNotifyCallback(bool initialSync, const CBlockIndex *pBlockIndex\n }\n \n static bool fHaveGenesis = false;\n-static boost::mutex cs_GenesisWait;\n+static CWaitableCriticalSection cs_GenesisWait;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148322160",
      "id" : 148322160,
      "in_reply_to_id" : 143571665,
      "original_commit_id" : "b9011c9f6dc7dccee477e2201bec74ba49e34475",
      "original_position" : 5,
      "path" : "src/init.cpp",
      "position" : 5,
      "pull_request_review_id" : 73546172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148322160",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Not sure how I feel about renaming CMutexLock type in the same commit that changes a bunch of stuff from boost -> std, let alone in a commit people were complaining was already too large.",
      "created_at" : "2017-11-01T17:12:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341172890",
      "id" : 341172890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-01T17:12:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341172890",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@TheBlueMatt Should I revert it by doing a `s/RecursiveLock/CMutexLock/` and squash, or should I keep the rename but put it in a separate commit? Please advice :-)",
      "created_at" : "2017-11-02T09:42:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341367475",
      "id" : 341367475,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-02T09:43:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341367475",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "CMutexLock is only mentioned in 5 lines of code, all of them in sync.h. Sometimes it's nice to make changes in separate commits, but I think this particular rename makes more sense in context, and doesn't seem make the PR more complicated to review. But maybe I'm missing something because this entire change is only 47 lines and seems pretty straightforward to me.",
      "created_at" : "2017-11-02T09:58:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341371700",
      "id" : 341371700,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-02T09:58:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341371700",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@TheBlueMatt @ryanofsky I'll let you guys find consensus. I'll happily adjust :-)",
      "created_at" : "2017-11-02T17:10:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341492327",
      "id" : 341492327,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-02T17:10:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341492327",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky in this case the PR adds a compatibility typedef to allow places to keep using CCriticalSection, renaming the underlying type and then mapping the old typename to the new one. I agree it should be renamed, but we should actually rename it instead of halfway-renaming it (using scripted-diff =D).",
      "created_at" : "2017-11-02T19:57:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341539815",
      "id" : 341539815,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-02T19:57:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341539815",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Agree scripted diff would improve upon the typedef.",
      "created_at" : "2017-11-02T20:12:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341544000",
      "id" : 341544000,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-02T20:12:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341544000",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "In the interest of getting this very-important PR merged sooner rather than later, can we skip it for now?",
      "created_at" : "2017-11-02T20:15:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341544718",
      "id" : 341544718,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-02T20:15:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341544718",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "SGTM",
      "created_at" : "2017-11-02T20:17:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341545191",
      "id" : 341545191,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-02T20:17:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341545191",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "+1",
      "created_at" : "2017-11-02T20:25:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341547267",
      "id" : 341547267,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-02T20:25:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341547267",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Please review the latest commit added - does that revert the rename as suggested? Everyone happy? :-)",
      "created_at" : "2017-11-02T22:10:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341573294",
      "id" : 341573294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-02T22:10:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341573294",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@practicalswift, ~~~I think you can drop the \"Revert CMutexLock rename\" commit.~~~ (EDIT: Actually should be kept and squashed)\r\n\r\nWhat Matt is asking you to do is remove the two typedefs:\r\n\r\n```diff\r\n+typedef RecursiveMutex CCriticalSection;\r\n+typedef Mutex CWaitableCriticalSection\r\n```\r\n\r\nWhich will require replacing RecursiveMutex to CCriticalSection and Mutex to CWaitableCriticalSection. You can squash these changes into the \"Fix -Wthread-safety-analysis warnings\" commit, which should make it smaller.",
      "created_at" : "2017-11-02T22:20:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341575399",
      "id" : 341575399,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-02T23:08:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341575399",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky Could you take a look at `Revert [wip]`? :-)",
      "created_at" : "2017-11-02T22:56:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341582192",
      "id" : 341582192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-02T22:56:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341582192",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "That looks close. Here is another commit that builds on top of yours and gets rid of more unnecessary renames & diffs: 17ebad7b47a2567a75e5a701780a261bf1a3275d (I was wrong above when I asked you to drop CMutexLock commit). If you squash both of these into \"Fix -Wthread-safety-analysis warnings\" and edit the commit message to remove mention of renames, this should be good to go.",
      "created_at" : "2017-11-02T23:07:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341584330",
      "id" : 341584330,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-02T23:07:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341584330",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Here is a combined branch: https://github.com/ryanofsky/bitcoin/commits/pr/locks\r\n\r\nYou can fetch & apply it with\r\n\r\n```sh\r\ngit fetch -n https://github.com/ryanofsky/bitcoin pr/locks:ryanofsky-locks\r\ngit reset --hard ryanofsky-locks\r\n```",
      "created_at" : "2017-11-02T23:19:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341586429",
      "id" : 341586429,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-02T23:19:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341586429",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky Looks good now? :-)",
      "created_at" : "2017-11-03T00:12:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-341594641",
      "id" : 341594641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-03T00:12:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341594641",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148768092"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148768092"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Hmm, that feels weird? We now have CCriticalSection and Mutex which mean two different things, but its not clear /what/ they mean without looking at what they're typedef'd to? Can we just do this as a scripted diff in a separate commit?\r\n\r\nScripted-diff renaming followup is at https://github.com/bitcoin/bitcoin/pull/11599",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-03T12:19:44Z",
      "diff_hunk" : "@@ -545,14 +545,14 @@ static void BlockNotifyCallback(bool initialSync, const CBlockIndex *pBlockIndex\n }\n \n static bool fHaveGenesis = false;\n-static boost::mutex cs_GenesisWait;\n+static CWaitableCriticalSection cs_GenesisWait;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148768092",
      "id" : 148768092,
      "in_reply_to_id" : 143571665,
      "original_commit_id" : "b9011c9f6dc7dccee477e2201bec74ba49e34475",
      "original_position" : 5,
      "path" : "src/init.cpp",
      "position" : 5,
      "pull_request_review_id" : 74062449,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148768092",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148895433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148895433"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd really rather we *not* call this a \"Lock\" - its not intended to be the thing used across the codebase as any lock (though we could maybe do so if we add DEBUG_LOCKORDER support here).",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-03T21:17:45Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148895433",
      "id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74215931,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148895433",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148897091"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148897091"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You always say what you don't want instead of saying what you do want ;). What would you like instead? If you've seen https://github.com/bitcoin/bitcoin/pull/11599, the name should make more sense in this context. I think Lock and Mutex are the right names because they match the standard. As you mentioned, you can implement DEBUG_LOCKORDER with them and also do other things useful for debugging, like printing differences in a data structure between time a particular mutex is locked & unlocked.",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-03T21:27:46Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148897091",
      "id" : 148897091,
      "in_reply_to_id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74217943,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148897091",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148898390"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148898390"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The original name (CWaitableCriticalSection) was nice and specific - I'm happy to make it more in-line with the more-accepted \"lock\" terminology, but pointing out that it has only a narrow use-case in our codebase is important.",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-03T21:36:02Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148898390",
      "id" : 148898390,
      "in_reply_to_id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74219559,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148898390",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148900396"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148900396"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok, but I don't think non-recursive locks should have a narrow usecase in our codebase. I thought everybody agreed non-recursivelocks should be preferred to recursive locks.",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-03T21:48:21Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148900396",
      "id" : 148900396,
      "in_reply_to_id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74221752,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148900396",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148900530"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148900530"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Also CWaitableCriticalSection was not the original name for this. There was no original name for this. Previously code just used boost::unique_lock directly.",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-03T21:49:15Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148900530",
      "id" : 148900530,
      "in_reply_to_id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74221904,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148900530",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148900795"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148900795"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Heh, I meant in the original patch in this PR. I mean we use locks in lots of different ways, for new subsystems that have very careful locking models, obviously non-recursive locks are preferred, but I'm skeptical every new thing we add will use them.",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-03T21:51:04Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148900795",
      "id" : 148900795,
      "in_reply_to_id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74222232,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148900795",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148901104"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148901104"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky @TheBlueMatt Could you provide a diff with your suggested change?",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-03T21:53:14Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148901104",
      "id" : 148901104,
      "in_reply_to_id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74222614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148901104",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148902104"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148902104"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think Matt basically wants the typedef to be called ScaryLock instead of Lock. But I'm fine with whatever is proposed here given there is already a PR open for renaming.",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-03T21:59:35Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148902104",
      "id" : 148902104,
      "in_reply_to_id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74223676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148902104",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148927933"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148927933"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "OK, I'll fix. @TheBlueMatt, what is your suggested name instead of `Lock`? :-)",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-04T11:07:05Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148927933",
      "id" : 148927933,
      "in_reply_to_id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74252408,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148927933",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148938734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148938734"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I was fine with the WaitableCriticalSection (or WaitableLock or whatever) version that was there originally.",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-04T18:58:01Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r148938734",
      "id" : 148938734,
      "in_reply_to_id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74262984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148938734",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r149066098"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149066098"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@TheBlueMatt @ryanofsky The following diff would work?\r\n\r\n```diff\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex dd64602..9e3eb6b 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -551,7 +551,7 @@ static void BlockNotifyGenesisWait(bool, const CBlockIndex *pBlockIndex)\r\n {\r\n     if (pBlockIndex != nullptr) {\r\n         {\r\n-            Lock lock_GenesisWait(cs_GenesisWait);\r\n+            WaitableLock lock_GenesisWait(cs_GenesisWait);\r\n             fHaveGenesis = true;\r\n         }\r\n         condvar_GenesisWait.notify_all();\r\n@@ -1634,7 +1634,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\r\n\r\n     // Wait for genesis block to be processed\r\n     {\r\n-        Lock lock(cs_GenesisWait);\r\n+        WaitableLock lock(cs_GenesisWait);\r\n         while (!fHaveGenesis) {\r\n             condvar_GenesisWait.wait(lock);\r\n         }\r\ndiff --git a/src/rpc/mining.cpp b/src/rpc/mining.cpp\r\nindex 8fae01b..0ba0e96 100644\r\n--- a/src/rpc/mining.cpp\r\n+++ b/src/rpc/mining.cpp\r\n@@ -478,7 +478,7 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\r\n         {\r\n             checktxtime = std::chrono::steady_clock::now() + std::chrono::minutes(1);\r\n\r\n-            Lock lock(csBestBlock);\r\n+            WaitableLock lock(csBestBlock);\r\n             while (chainActive.Tip()->GetBlockHash() == hashWatchedChain && IsRPCRunning())\r\n             {\r\n                 if (cvBlockChange.wait_until(lock, checktxtime) == std::cv_status::timeout)\r\ndiff --git a/src/sync.h b/src/sync.h\r\nindex 66b6d96..20556af 100644\r\n--- a/src/sync.h\r\n+++ b/src/sync.h\r\n@@ -105,7 +105,7 @@ typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\r\n typedef std::condition_variable CConditionVariable;\r\n\r\n /** Just a typedef for std::unique_lock, can be wrapped later if desired */\r\n-typedef std::unique_lock<std::mutex> Lock;\r\n+typedef std::unique_lock<std::mutex> WaitableLock;\r\n\r\n #ifdef DEBUG_LOCKCONTENTION\r\n void PrintLockContention(const char* pszName, const char* pszFile, int nLine);\r\n```",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-06T12:26:40Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r149066098",
      "id" : 149066098,
      "in_reply_to_id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74400994,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149066098",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r149071967"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149071967"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> @TheBlueMatt @ryanofsky The following diff would work?\r\n\r\nYes for me. (As I mentioned in my last comment I am happy with any naming in this pr since #11599 can clean up any inconsistencies.)",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-06T12:58:29Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r149071967",
      "id" : 149071967,
      "in_reply_to_id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74407892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149071967",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r149072680"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149072680"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky Excellent! OK with you @TheBlueMatt? :-)",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-06T13:02:37Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r149072680",
      "id" : 149072680,
      "in_reply_to_id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74408771,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149072680",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r149132084"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149132084"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yea, looks good, thanks!",
      "commit_id" : "76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-06T16:38:04Z",
      "diff_hunk" : "@@ -85,33 +87,35 @@ void static inline DeleteLock(void* cs) {}\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n /**\n- * Wrapped boost mutex: supports recursive locking, but no waiting\n+ * Wrapped mutex: supports recursive locking, but no waiting\n  * TODO: We should move away from using the recursive lock by default.\n  */\n-class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n+class CCriticalSection : public AnnotatedMixin<std::recursive_mutex>\n {\n public:\n     ~CCriticalSection() {\n         DeleteLock((void*)this);\n     }\n };\n \n-/** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n+/** Wrapped mutex: supports waiting but not recursive locking */\n+typedef AnnotatedMixin<std::mutex> CWaitableCriticalSection;\n \n-/** Just a typedef for boost::condition_variable, can be wrapped later if desired */\n-typedef boost::condition_variable CConditionVariable;\n+/** Just a typedef for std::condition_variable, can be wrapped later if desired */\n+typedef std::condition_variable CConditionVariable;\n+\n+/** Just a typedef for std::unique_lock, can be wrapped later if desired */\n+typedef std::unique_lock<std::mutex> Lock;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#discussion_r149132084",
      "id" : 149132084,
      "in_reply_to_id" : 148895433,
      "original_commit_id" : "1864bea78ae306e91dde46fcc2b85a01999efd84",
      "original_position" : 62,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 74478580,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/10866",
      "updated_at" : "2017-11-06T16:42:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/149132084",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky @TheBlueMatt Name change patch applied. Squashed and pushed. Could you please re-review? :-)",
      "created_at" : "2017-11-06T16:43:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-342208555",
      "id" : 342208555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-06T16:43:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/342208555",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK 76ea17c7964c15dd90e10c2c257cdeb5847b3d69",
      "created_at" : "2017-11-06T16:52:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-342211472",
      "id" : 342211472,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-06T16:52:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/342211472",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "utACK 76ea17c7964c15dd90e10c2c257cdeb5847b3d69. Nice to see some further unboostification.",
      "created_at" : "2017-11-07T18:20:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/10866#issuecomment-342574505",
      "id" : 342574505,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/10866",
      "updated_at" : "2017-11-07T18:20:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/342574505",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
