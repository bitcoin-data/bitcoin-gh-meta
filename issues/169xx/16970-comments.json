[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16970#discussion_r328773355"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328773355"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Does this break on oldschool 32-bit ARM where int reads are required to be aligned (and I presume this includes 64-bit ints?)",
      "commit_id" : "4e4f8f73bdf1ff8aeba23330f813c5884ac5c087",
      "created_at" : "2019-09-26T18:52:30Z",
      "diff_hunk" : "@@ -129,7 +129,12 @@ class CTxIn\n \n /** An output of a transaction.  It contains the public key that the next input\n  * must be able to sign with to claim it.\n+ *\n+ * We align the struct to 4 bytes: that way, CTxOut will have 36 bytes: 8 for\n+ * CAmount, and 28 for CScript. As a member of Coin, this leaves 4 bytes for\n+ * Coin's nHeight without the need for any padding.\n  */\n+#pragma pack(push, 4)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16970#discussion_r328773355",
      "id" : 328773355,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODc3MzM1NQ==",
      "original_commit_id" : "4e4f8f73bdf1ff8aeba23330f813c5884ac5c087",
      "original_position" : 9,
      "path" : "src/primitives/transaction.h",
      "position" : 9,
      "pull_request_review_id" : 293933685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16970",
      "updated_at" : "2019-09-26T18:52:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328773355",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16970#discussion_r328780043"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328780043"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think it's a problem, we are using uint32_t everywhere and align to 4 byte, so it should be fine",
      "commit_id" : "4e4f8f73bdf1ff8aeba23330f813c5884ac5c087",
      "created_at" : "2019-09-26T19:08:42Z",
      "diff_hunk" : "@@ -129,7 +129,12 @@ class CTxIn\n \n /** An output of a transaction.  It contains the public key that the next input\n  * must be able to sign with to claim it.\n+ *\n+ * We align the struct to 4 bytes: that way, CTxOut will have 36 bytes: 8 for\n+ * CAmount, and 28 for CScript. As a member of Coin, this leaves 4 bytes for\n+ * Coin's nHeight without the need for any padding.\n  */\n+#pragma pack(push, 4)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16970#discussion_r328780043",
      "id" : 328780043,
      "in_reply_to_id" : 328773355,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODc4MDA0Mw==",
      "original_commit_id" : "4e4f8f73bdf1ff8aeba23330f813c5884ac5c087",
      "original_position" : 9,
      "path" : "src/primitives/transaction.h",
      "position" : 9,
      "pull_request_review_id" : 293942574,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16970",
      "updated_at" : "2019-09-26T19:08:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328780043",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "<details><summary>unit tests fail https://travis-ci.org/bitcoin/bitcoin/jobs/590073788#L3601</summary>\r\n\r\n```\r\nRunning tests: blockfilter_index_tests from test/blockfilter_index_tests.cpp\r\n\r\nRunning 5 test cases...\r\n\r\nTest cases order is shuffled using seed: 906380976\r\n\r\nEntering test module \"Bitcoin Core Test Suite\"\r\n\r\ntest/blockfilter_tests.cpp(17): Entering test suite \"blockfilter_tests\"\r\n\r\ntest/blockfilter_tests.cpp(42): Entering test case \"gcsfilter_default_constructor\"\r\n\r\ntest/blockfilter_tests.cpp(42): Leaving test case \"gcsfilter_default_constructor\"; testing time: 299us\r\n\r\ntest/blockfilter_tests.cpp(19): Entering test case \"gcsfilter_test\"\r\n\r\ntest/blockfilter_tests.cpp(19): Leaving test case \"gcsfilter_test\"; testing time: 18878us\r\n\r\ntest/blockfilter_tests.cpp(55): Entering test case \"blockfilter_basic_test\"\r\n\r\nprimitives/transaction.h:155:9: runtime error: reference binding to misaligned address 0x60b0000075f4 for type 'const CAmount' (aka 'const long'), which requires 8 byte alignment\r\n\r\n0x60b0000075f4: note: pointer points here\r\n\r\n  00 00 00 02 c8 00 00 00  00 00 00 00 76 a9 01 14  88 ac 00 00 00 00 00 00  00 00 00 00 00 00 00 00\r\n\r\n              ^ \r\n\r\n    #0 0x560f2fad3375 in void CTxOut::SerializationOp<CHashWriter, CSerActionSerialize>(CHashWriter&, CSerActionSerialize) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./primitives/transaction.h:155:9\r\n\r\n    #1 0x560f2fad3072 in void CTxOut::Serialize<CHashWriter>(CHashWriter&) const /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./primitives/transaction.h:151:5\r\n\r\n    #2 0x560f2fad3072 in void Serialize<CHashWriter, CTxOut>(CHashWriter&, CTxOut const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./serialize.h:603\r\n\r\n    #3 0x560f2fad3072 in void Serialize_impl<CHashWriter, CTxOut, std::allocator<CTxOut>, CTxOut>(CHashWriter&, std::vector<CTxOut, std::allocator<CTxOut> > const&, CTxOut const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./serialize.h:734\r\n\r\n    #4 0x560f2fad0f41 in void Serialize<CHashWriter, CTxOut, std::allocator<CTxOut> >(CHashWriter&, std::vector<CTxOut, std::allocator<CTxOut> > const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./serialize.h:740:5\r\n\r\n    #5 0x560f2fad0f41 in CHashWriter& CHashWriter::operator<< <std::vector<CTxOut, std::allocator<CTxOut> > >(std::vector<CTxOut, std::allocator<CTxOut> > const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./hash.h:154\r\n\r\n    #6 0x560f310f09ee in void SerializeTransaction<CHashWriter, CTransaction>(CTransaction const&, CHashWriter&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./primitives/transaction.h:263:7\r\n\r\n    #7 0x560f310f06b6 in void CTransaction::Serialize<CHashWriter>(CHashWriter&) const /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./primitives/transaction.h:316:9\r\n\r\n    #8 0x560f310f06b6 in void Serialize<CHashWriter, CTransaction>(CHashWriter&, CTransaction const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./serialize.h:603\r\n\r\n    #9 0x560f310f06b6 in CHashWriter& CHashWriter::operator<< <CTransaction>(CTransaction const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./hash.h:154\r\n\r\n    #10 0x560f310edbb6 in uint256 SerializeHash<CTransaction>(CTransaction const&, int, int) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./hash.h:199:8\r\n\r\n    #11 0x560f310edbb6 in CTransaction::ComputeHash() const /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/primitives/transaction.cpp:67\r\n\r\n    #12 0x560f310ee2b6 in CTransaction::CTransaction(CMutableTransaction const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/primitives/transaction.cpp:80:142\r\n\r\n    #13 0x560f2f880d86 in void __gnu_cxx::new_allocator<CTransaction>::construct<CTransaction const, CMutableTransaction&>(CTransaction const*, CMutableTransaction&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/ext/new_allocator.h:136:23\r\n\r\n    #14 0x560f2f880cfa in void std::allocator_traits<std::allocator<CTransaction> >::construct<CTransaction const, CMutableTransaction&>(std::allocator<CTransaction>&, CTransaction const*, CMutableTransaction&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/alloc_traits.h:475:8\r\n\r\n    #15 0x560f2f880afd in std::_Sp_counted_ptr_inplace<CTransaction const, std::allocator<CTransaction>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<CMutableTransaction&>(std::allocator<CTransaction>, CMutableTransaction&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/shared_ptr_base.h:526:4\r\n\r\n    #16 0x560f2f880739 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<CTransaction const, std::allocator<CTransaction>, CMutableTransaction&>(std::_Sp_make_shared_tag, CTransaction const*, std::allocator<CTransaction> const&, CMutableTransaction&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/shared_ptr_base.h:637:18\r\n\r\n    #17 0x560f2f8804eb in std::__shared_ptr<CTransaction const, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<CTransaction>, CMutableTransaction&>(std::_Sp_make_shared_tag, std::allocator<CTransaction> const&, CMutableTransaction&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/shared_ptr_base.h:1294:14\r\n\r\n    #18 0x560f2f8803ec in std::shared_ptr<CTransaction const>::shared_ptr<std::allocator<CTransaction>, CMutableTransaction&>(std::_Sp_make_shared_tag, std::allocator<CTransaction> const&, CMutableTransaction&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/shared_ptr.h:344:4\r\n\r\n    #19 0x560f2f880262 in std::shared_ptr<CTransaction const> std::allocate_shared<CTransaction const, std::allocator<CTransaction>, CMutableTransaction&>(std::allocator<CTransaction> const&, CMutableTransaction&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/shared_ptr.h:690:14\r\n\r\n    #20 0x560f2f880262 in std::shared_ptr<CTransaction const> std::make_shared<CTransaction const, CMutableTransaction&>(CMutableTransaction&) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/shared_ptr.h:706\r\n\r\n    #21 0x560f2f8a1083 in std::shared_ptr<CTransaction const> MakeTransactionRef<CMutableTransaction&>(CMutableTransaction&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/./primitives/transaction.h:416:93\r\n\r\n    #22 0x560f2f8a1083 in blockfilter_tests::blockfilter_basic_test::test_method() /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/test/blockfilter_tests.cpp:91\r\n\r\n    #23 0x560f2f89f862 in blockfilter_tests::blockfilter_basic_test_invoker() /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/test/blockfilter_tests.cpp:55:1\r\n\r\n    #24 0x560f2f79cc25 in boost::detail::function::void_function_invoker0<void (*)(), void>::invoke(boost::detail::function::function_buffer&) /usr/include/boost/function/function_template.hpp:118:11\r\n\r\n    #25 0x7f4c029032cd in boost::detail::function::function_obj_invoker0<boost::detail::forward, int>::invoke(boost::detail::function::function_buffer&) (/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.65.1+0x4b2cd)\r\n\r\n    #26 0x7f4c0290277c in boost::execution_monitor::catch_signals(boost::function<int ()> const&) (/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.65.1+0x4a77c)\r\n\r\n    #27 0x7f4c02902860 in boost::execution_monitor::execute(boost::function<int ()> const&) (/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.65.1+0x4a860)\r\n\r\n    #28 0x7f4c02902fdc in boost::execution_monitor::vexecute(boost::function<void ()> const&) (/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.65.1+0x4afdc)\r\n\r\n    #29 0x7f4c029318d0 in boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::function<void ()> const&, unsigned int) (/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.65.1+0x798d0)\r\n\r\n    #30 0x7f4c0290dc6a in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned int, boost::unit_test::framework::state::random_generator_helper const*) (/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.65.1+0x55c6a)\r\n\r\n    #31 0x7f4c0290e12d in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned int, boost::unit_test::framework::state::random_generator_helper const*) (/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.65.1+0x5612d)\r\n\r\n    #32 0x7f4c0290e12d in boost::unit_test::framework::state::execute_test_tree(unsigned long, unsigned int, boost::unit_test::framework::state::random_generator_helper const*) (/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.65.1+0x5612d)\r\n\r\n    #33 0x7f4c02906cc7 in boost::unit_test::framework::run(unsigned long, bool) (/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.65.1+0x4ecc7)\r\n\r\n    #34 0x7f4c0292f13e in boost::unit_test::unit_test_main(bool (*)(), int, char**) (/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.65.1+0x7713e)\r\n\r\n    #35 0x560f2f67d56b in main /usr/include/boost/test/unit_test.hpp:63:12\r\n\r\n    #36 0x7f4c00691b96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)\r\n\r\n    #37 0x560f2f580979 in _start (/home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu/src/test/test_bitcoin+0x28f2979)\r\n```\r\n\r\n</details>",
      "created_at" : "2019-09-26T19:16:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16970#issuecomment-535647420",
      "id" : 535647420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16970",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzNTY0NzQyMA==",
      "updated_at" : "2019-09-26T19:16:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/535647420",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16970#discussion_r328857974"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328857974"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm? Isn't nValue an 8-bit integer? Or am I misunerstanding what this does?",
      "commit_id" : "4e4f8f73bdf1ff8aeba23330f813c5884ac5c087",
      "created_at" : "2019-09-26T22:55:03Z",
      "diff_hunk" : "@@ -129,7 +129,12 @@ class CTxIn\n \n /** An output of a transaction.  It contains the public key that the next input\n  * must be able to sign with to claim it.\n+ *\n+ * We align the struct to 4 bytes: that way, CTxOut will have 36 bytes: 8 for\n+ * CAmount, and 28 for CScript. As a member of Coin, this leaves 4 bytes for\n+ * Coin's nHeight without the need for any padding.\n  */\n+#pragma pack(push, 4)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16970#discussion_r328857974",
      "id" : 328857974,
      "in_reply_to_id" : 328773355,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODg1Nzk3NA==",
      "original_commit_id" : "4e4f8f73bdf1ff8aeba23330f813c5884ac5c087",
      "original_position" : 9,
      "path" : "src/primitives/transaction.h",
      "position" : 9,
      "pull_request_review_id" : 294044501,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16970",
      "updated_at" : "2019-09-26T22:55:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328857974",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16970#discussion_r328927968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16970"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328927968"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "yes its 8byte, but I thought it would still be ok because of how it's used in `Coin`. I guess I've missed something, I really need to set up travis builds... I'll close this for now until I figure out if/how I can do this correctly",
      "commit_id" : "4e4f8f73bdf1ff8aeba23330f813c5884ac5c087",
      "created_at" : "2019-09-27T06:25:10Z",
      "diff_hunk" : "@@ -129,7 +129,12 @@ class CTxIn\n \n /** An output of a transaction.  It contains the public key that the next input\n  * must be able to sign with to claim it.\n+ *\n+ * We align the struct to 4 bytes: that way, CTxOut will have 36 bytes: 8 for\n+ * CAmount, and 28 for CScript. As a member of Coin, this leaves 4 bytes for\n+ * Coin's nHeight without the need for any padding.\n  */\n+#pragma pack(push, 4)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16970#discussion_r328927968",
      "id" : 328927968,
      "in_reply_to_id" : 328773355,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODkyNzk2OA==",
      "original_commit_id" : "4e4f8f73bdf1ff8aeba23330f813c5884ac5c087",
      "original_position" : 9,
      "path" : "src/primitives/transaction.h",
      "position" : 9,
      "pull_request_review_id" : 294132539,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16970",
      "updated_at" : "2019-09-27T06:25:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328927968",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   }
]
