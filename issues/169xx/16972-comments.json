[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Could add a test for knapsack vs. branch and bound solution, if you can get the coins organized for that. ",
      "created_at" : "2019-09-27T15:51:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-535995975",
      "id" : 535995975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzNTk5NTk3NQ==",
      "updated_at" : "2019-09-27T16:49:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/535995975",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes I was thinking about some test-only hidden RPC where you can hack  block estimates to be some function you provide. Then we can put this test somewhere nicer and do more tests like this",
      "created_at" : "2019-09-27T17:13:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-536024189",
      "id" : 536024189,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzNjAyNDE4OQ==",
      "updated_at" : "2019-09-27T17:13:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/536024189",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r330420106"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/330420106"
         }
      },
      "author_association" : "MEMBER",
      "body" : "indentation error",
      "commit_id" : "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
      "created_at" : "2019-10-02T08:13:28Z",
      "diff_hunk" : "@@ -240,6 +240,28 @@ def run_test(self):\n             self.transact_and_mine(10, self.nodes[1])\n             check_estimates(self.nodes[1], self.fees_per_kb)\n \n+        # Test the conf_target argument for sendtoaddress when whole coins are spent\n+        # and subtractfeefromamount is used\n+        low_count = 288\n+        high_count = 2\n+        low_feerate = self.nodes[1].estimatesmartfee(low_count, \"ECONOMICAL\")\n+        high_feerate = self.nodes[1].estimatesmartfee(high_count, \"ECONOMICAL\")\n+        assert high_feerate[\"feerate\"]/2 > low_feerate[\"feerate\"] # comfortably larger\n+        assert high_feerate[\"blocks\"] < low_feerate[\"blocks\"]\n+\n+        # Spend all coins at once\n+        self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, low_count, \"ECONOMICAL\")\n+       # Then re-spend the change a couple times to test close as possible scenarios",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r330420106",
      "id" : 330420106,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMDQyMDEwNg==",
      "original_commit_id" : "24bc1a21748aca6f790e26b93323cd799485076f",
      "original_line" : 254,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "test/functional/feature_fee_estimation.py",
      "position" : null,
      "pull_request_review_id" : 296074949,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-11T13:53:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/330420106",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r333737492"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333737492"
         }
      },
      "author_association" : "MEMBER",
      "body" : "should use a helper like `assert_approx` to print the values in case of failure",
      "commit_id" : "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
      "created_at" : "2019-10-10T21:11:51Z",
      "diff_hunk" : "@@ -240,6 +240,28 @@ def run_test(self):\n             self.transact_and_mine(10, self.nodes[1])\n             check_estimates(self.nodes[1], self.fees_per_kb)\n \n+        # Test the conf_target argument for sendtoaddress when whole coins are spent\n+        # and subtractfeefromamount is used\n+        low_count = 288\n+        high_count = 2\n+        low_feerate = self.nodes[1].estimatesmartfee(low_count, \"ECONOMICAL\")\n+        high_feerate = self.nodes[1].estimatesmartfee(high_count, \"ECONOMICAL\")\n+        assert high_feerate[\"feerate\"]/2 > low_feerate[\"feerate\"] # comfortably larger\n+        assert high_feerate[\"blocks\"] < low_feerate[\"blocks\"]\n+\n+        # Spend all coins at once\n+        self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, low_count, \"ECONOMICAL\")\n+       # Then re-spend the change a couple times to test close as possible scenarios\n+        low_txid = self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, low_count, \"ECONOMICAL\")\n+        high_txid = self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, high_count, \"ECONOMICAL\")\n+\n+        low_info = self.nodes[1].getmempoolentry(low_txid)\n+        high_info = self.nodes[1].getmempoolentry(high_txid)\n+\n+        # Total fee should be really close\n+        assert abs(low_info[\"vsize\"]*low_feerate[\"feerate\"]/1000 - low_info[\"fee\"]) < 0.00000001\n+        assert abs(high_info[\"vsize\"]*high_feerate[\"feerate\"]/1000 - high_info[\"fee\"]) < 0.00000001",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r333737492",
      "id" : 333737492,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzczNzQ5Mg==",
      "original_commit_id" : "24bc1a21748aca6f790e26b93323cd799485076f",
      "original_line" : 263,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/feature_fee_estimation.py",
      "position" : null,
      "pull_request_review_id" : 300354927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-11T13:53:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333737492",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r333737664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333737664"
         }
      },
      "author_association" : "MEMBER",
      "body" : "should use named args for unnamed integer types and bools",
      "commit_id" : "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
      "created_at" : "2019-10-10T21:12:18Z",
      "diff_hunk" : "@@ -240,6 +240,28 @@ def run_test(self):\n             self.transact_and_mine(10, self.nodes[1])\n             check_estimates(self.nodes[1], self.fees_per_kb)\n \n+        # Test the conf_target argument for sendtoaddress when whole coins are spent\n+        # and subtractfeefromamount is used\n+        low_count = 288\n+        high_count = 2\n+        low_feerate = self.nodes[1].estimatesmartfee(low_count, \"ECONOMICAL\")\n+        high_feerate = self.nodes[1].estimatesmartfee(high_count, \"ECONOMICAL\")\n+        assert high_feerate[\"feerate\"]/2 > low_feerate[\"feerate\"] # comfortably larger\n+        assert high_feerate[\"blocks\"] < low_feerate[\"blocks\"]\n+\n+        # Spend all coins at once\n+        self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, low_count, \"ECONOMICAL\")\n+       # Then re-spend the change a couple times to test close as possible scenarios\n+        low_txid = self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, low_count, \"ECONOMICAL\")\n+        high_txid = self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, high_count, \"ECONOMICAL\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r333737664",
      "id" : 333737664,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzczNzY2NA==",
      "original_commit_id" : "24bc1a21748aca6f790e26b93323cd799485076f",
      "original_line" : 256,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/functional/feature_fee_estimation.py",
      "position" : null,
      "pull_request_review_id" : 300355143,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-11T13:53:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333737664",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "all comments addressed (and rebased on master since it's so ancient)",
      "created_at" : "2020-08-10T19:04:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-671532907",
      "id" : 671532907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTUzMjkwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T19:04:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671532907",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It looks like you are sending the whole balance. Maybe also add a test for the case \"The sum of my specified output amounts was exactly equal to the value of the single unlocked UTxO in my wallet.\" (https://github.com/bitcoin/bitcoin/issues/16072#issuecomment-671668011). No strong opinion though.\r\n\r\nBig Concept ACK on adding the test",
      "created_at" : "2020-08-11T06:11:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-671749049",
      "id" : 671749049,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTc0OTA0OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-11T06:11:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671749049",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke The test first pipes all utxos into one, then does exactly that(although there's literally only one wallet utxo left).\r\n\r\nOne thing I can test is `sendmany` with `subtractfeefromoutput` index working properly since that's the latest report",
      "created_at" : "2020-08-11T13:15:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-671940392",
      "id" : 671940392,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTk0MDM5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-11T13:15:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671940392",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r479744258"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479744258"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fails\r\n\r\nhttps://travis-ci.org/github/bitcoin/bitcoin/jobs/716915333#L8855",
      "commit_id" : "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
      "created_at" : "2020-08-30T09:12:48Z",
      "diff_hunk" : "@@ -255,9 +257,44 @@ def run_test(self):\n             self.transact_and_mine(10, self.nodes[1])\n             check_estimates(self.nodes[1], self.fees_per_kb)\n \n+        # Test the conf_target argument for sendtoaddress when whole coins are spent\n+        # and subtractfeefromamount is used\n+        low_count = 288\n+        high_count = 2\n+        low_feerate = self.nodes[1].estimatesmartfee(low_count, \"ECONOMICAL\")\n+        high_feerate = self.nodes[1].estimatesmartfee(high_count, \"ECONOMICAL\")\n+        assert high_feerate[\"feerate\"]/2 > low_feerate[\"feerate\"] # comfortably larger\n+        assert high_feerate[\"blocks\"] < low_feerate[\"blocks\"]\n+\n+        # Spend all coins at once\n+        self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        self.nodes[1].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+        # Then re-spend the change a couple times to test close as possible scenarios\n+        low_txid = self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        high_txid = self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=high_count, estimate_mode=\"ECONOMICAL\")\n+        # Send exactly the UTXO amount to multiple destinations, with one output paying the fee\n+        sum_total = self.nodes[1].getbalances()[\"mine\"][\"trusted\"]\n+        subtract_address = self.nodes[1].getnewaddress()\n+        low_many_txid = self.nodes[1].sendmany(amounts={self.nodes[1].getnewaddress(): sum_total-10, subtract_address: 10}, subtractfeefrom=[subtract_address], conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        sum_total = self.nodes[1].getbalances()[\"mine\"][\"trusted\"]\n+        high_many_txid = self.nodes[1].sendmany(amounts={self.nodes[1].getnewaddress(): sum_total-10, subtract_address: 10}, subtractfeefrom=[subtract_address], conf_target=high_count, estimate_mode=\"ECONOMICAL\")\n+\n+\n+        # Total fee should be really close to one-off estimates\n+        low_info = self.nodes[1].getmempoolentry(low_txid)\n+        high_info = self.nodes[1].getmempoolentry(high_txid)\n+        low_many_info = self.nodes[1].getmempoolentry(low_many_txid)\n+        high_many_info = self.nodes[1].getmempoolentry(high_many_txid)\n+\n+        assert_approx(low_info[\"vsize\"]*low_feerate[\"feerate\"]/1000, float(low_info[\"fee\"]))\n+        assert_approx(high_info[\"vsize\"]*high_feerate[\"feerate\"]/1000, float(high_info[\"fee\"]))\n+        assert_approx(low_many_info[\"vsize\"]*low_feerate[\"feerate\"]/1000, float(low_many_info[\"fee\"]))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r479744258",
      "id" : 479744258,
      "line" : 291,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc0NDI1OA==",
      "original_commit_id" : "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
      "original_line" : 291,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "test/functional/feature_fee_estimation.py",
      "position" : 50,
      "pull_request_review_id" : 478185613,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-30T09:12:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479744258",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r479806721"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479806721"
         }
      },
      "author_association" : "MEMBER",
      "body" : "hmm swore I ran it locally, looks like it's *just* outside the approx range. I'll do some log-hunting to make sure nothing is especially weird and relax the range a bit if not.",
      "commit_id" : "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
      "created_at" : "2020-08-30T19:29:13Z",
      "diff_hunk" : "@@ -255,9 +257,44 @@ def run_test(self):\n             self.transact_and_mine(10, self.nodes[1])\n             check_estimates(self.nodes[1], self.fees_per_kb)\n \n+        # Test the conf_target argument for sendtoaddress when whole coins are spent\n+        # and subtractfeefromamount is used\n+        low_count = 288\n+        high_count = 2\n+        low_feerate = self.nodes[1].estimatesmartfee(low_count, \"ECONOMICAL\")\n+        high_feerate = self.nodes[1].estimatesmartfee(high_count, \"ECONOMICAL\")\n+        assert high_feerate[\"feerate\"]/2 > low_feerate[\"feerate\"] # comfortably larger\n+        assert high_feerate[\"blocks\"] < low_feerate[\"blocks\"]\n+\n+        # Spend all coins at once\n+        self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        self.nodes[1].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+        # Then re-spend the change a couple times to test close as possible scenarios\n+        low_txid = self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        high_txid = self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=high_count, estimate_mode=\"ECONOMICAL\")\n+        # Send exactly the UTXO amount to multiple destinations, with one output paying the fee\n+        sum_total = self.nodes[1].getbalances()[\"mine\"][\"trusted\"]\n+        subtract_address = self.nodes[1].getnewaddress()\n+        low_many_txid = self.nodes[1].sendmany(amounts={self.nodes[1].getnewaddress(): sum_total-10, subtract_address: 10}, subtractfeefrom=[subtract_address], conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        sum_total = self.nodes[1].getbalances()[\"mine\"][\"trusted\"]\n+        high_many_txid = self.nodes[1].sendmany(amounts={self.nodes[1].getnewaddress(): sum_total-10, subtract_address: 10}, subtractfeefrom=[subtract_address], conf_target=high_count, estimate_mode=\"ECONOMICAL\")\n+\n+\n+        # Total fee should be really close to one-off estimates\n+        low_info = self.nodes[1].getmempoolentry(low_txid)\n+        high_info = self.nodes[1].getmempoolentry(high_txid)\n+        low_many_info = self.nodes[1].getmempoolentry(low_many_txid)\n+        high_many_info = self.nodes[1].getmempoolentry(high_many_txid)\n+\n+        assert_approx(low_info[\"vsize\"]*low_feerate[\"feerate\"]/1000, float(low_info[\"fee\"]))\n+        assert_approx(high_info[\"vsize\"]*high_feerate[\"feerate\"]/1000, float(high_info[\"fee\"]))\n+        assert_approx(low_many_info[\"vsize\"]*low_feerate[\"feerate\"]/1000, float(low_many_info[\"fee\"]))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r479806721",
      "id" : 479806721,
      "in_reply_to_id" : 479744258,
      "line" : 291,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgwNjcyMQ==",
      "original_commit_id" : "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
      "original_line" : 291,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "test/functional/feature_fee_estimation.py",
      "position" : 50,
      "pull_request_review_id" : 478228346,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-30T19:29:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479806721",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I tried testing the change, but I never got to execute the new validations because the test fails after starting. It seems like in line 210 it is trying to split an empty list of unspent inputs.\r\n\r\n> 2021-03-21T12:59:24.685000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_bsz8pvt2\r\n> 2021-03-21T12:59:26.988000Z TestFramework (INFO): This test is time consuming, please be patient\r\n> 2021-03-21T12:59:26.988000Z TestFramework (INFO): Splitting inputs so we can generate tx's\r\n> 2021-03-21T12:59:27.497000Z TestFramework (ERROR): Unexpected exception caught during testing\r\n> Traceback (most recent call last):\r\n>   File \"/bitcoin_core/bitcoin/test/functional/test_framework/test_framework.py\", line 118, in main\r\n>     self.run_test()\r\n>   File \"/bitcoin_core/bitcoin/test/functional/feature_fee_estimation.py\", line 210, in run_test\r\n>     split_inputs(self.nodes[0], self.nodes[0].listunspent(0), self.txouts, True)\r\n>   File \"/bitcoin_core/bitcoin/test/functional/feature_fee_estimation.py\", line 84, in split_inputs\r\n>     prevtxout = txins.pop()\r\n> IndexError: pop from empty list\r\n> 2021-03-21T12:59:27.548000Z TestFramework (INFO): Stopping nodes\r\n> 2021-03-21T12:59:27.850000Z TestFramework (WARNING): Not cleaning up dir /tmp/bitcoin_func_test_bsz8pvt2\r\n> 2021-03-21T12:59:27.850000Z TestFramework (ERROR): Test failed. Test logging available at /tmp/bitcoin_func_test_bsz8pvt2/test_framework.log\r\n> 2021-03-21T12:59:27.850000Z TestFramework (ERROR): \r\n> 2021-03-21T12:59:27.851000Z TestFramework (ERROR): Hint: Call /home/abel/projects/bitcoin_core/bitcoin/test/functional/combine_logs.py '/tmp/bitcoin_func_test_bsz8pvt2' to consolidate all logs\r\n> 2021-03-21T12:59:27.851000Z TestFramework (ERROR): \r\n> 2021-03-21T12:59:27.851000Z TestFramework (ERROR): If this failure happened unexpectedly or intermittently, please file a bug and provide a link or upload of the combined log.\r\n> 2021-03-21T12:59:27.851000Z TestFramework (ERROR): https://github.com/bitcoin/bitcoin/issues\r\n> 2021-03-21T12:59:27.851000Z TestFramework (ERROR): \r\n> \r\n> Process finished with exit code 1\r\n\r\nTested in Linux Mint 20 Cinnamon",
      "created_at" : "2021-03-21T13:03:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-803575577",
      "id" : 803575577,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMzU3NTU3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-21T13:03:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803575577",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/30988000?v=4",
         "events_url" : "https://api.github.com/users/aarmoa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aarmoa/followers",
         "following_url" : "https://api.github.com/users/aarmoa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aarmoa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aarmoa",
         "id" : 30988000,
         "login" : "aarmoa",
         "node_id" : "MDQ6VXNlcjMwOTg4MDAw",
         "organizations_url" : "https://api.github.com/users/aarmoa/orgs",
         "received_events_url" : "https://api.github.com/users/aarmoa/received_events",
         "repos_url" : "https://api.github.com/users/aarmoa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aarmoa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aarmoa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aarmoa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "closing due to inattention on my part, please put it up for grabs",
      "created_at" : "2021-03-22T04:39:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-803754719",
      "id" : 803754719,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDgwMzc1NDcxOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-03-22T04:39:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803754719",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   }
]
