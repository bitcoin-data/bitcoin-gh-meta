[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "**_Note_**: this comment is outdated; the scope of this PR has been reduced.\r\n\r\nRunning `bitcoind --reindex` causes the client to reread the `.bitcoin/blocks/blknnnnn.dat` files and re-derive all the index and chainstate information. It's similar to IBD but the client uses these local files rather than download blocks from the network. As `LoadExternalBlockFile()` reads each block from disk, it checks to see if its parent has already been seen (and processed). If so, then this block can be immediately processed (by giving it to `AcceptBlock()`). If this block's parent hasn't yet been seen, it cannot be processed until after its parent is seen. Its prev-hash (parent's hash) is put into a map of \"pending\" blocks (called `mapBlocksUnknownParent`). Later, when its parent is encountered and processed, this map is consulted to see it has a child that's already been seen that can now be processed. If so, `LoadExternalBlockFile()` now has to go back and re-read the child block from disk (`ReadBlockFromDisk()`), deserialize it again, and then process (pass it to `AcceptBlock()`).\r\n\r\nPerformance isn't very good because about 90% of blocks are read before their parents are read. (I think this is a result of the headers-first IBD performance enhancement of a few years ago.) This can be seen by running `bitcoind --reindex --debug=reindex`, causing many messages like:\r\n```\r\n2019-09-29T00:29:00Z LoadExternalBlockFile: Out of order block 00000000a2268fb2d4ddc0408fae961a96668db58de415d3c9e0a7694eeb1657, parent 000000005fb53da5c3cda78aef28cbc44fde3e435f1dc2ac04df53387049171f not known\r\n```\r\nthen, a short time later:\r\n```\r\n2019-09-29T00:29:00Z LoadExternalBlockFile: Processing out of order child 00000000a2268fb2d4ddc0408fae961a96668db58de415d3c9e0a7694eeb1657 of 000000005fb53da5c3cda78aef28cbc44fde3e435f1dc2ac04df53387049171f\r\n```\r\nSo 90% of blocks end up being read from disk twice (actually, not twice, since the operating system's buffer cache likely still has the data, but there is still a memory-to-memory copy), and deserialized twice.\r\n\r\nThis PR mitigates this problem by taking advantage of the fact that recent blocks are still in the buffer (`blkdat`) that is used to read from the `blk` files. Since rewinding to an earlier offset in the buffer has been fixed by the recently merged #16577, we can see if the child block is still in memory (the probability is increased by making the buffer somewhat larger), and if so, avoid having to read the child block data from disk. It turns out that the child block is still in the buffer 60% of the time. This depends on some randomness that's introduced during IBD, so it may be different for you. (My IBD was done using all the default settings, nothing special.)\r\n\r\nThe second part of this change initially deserializes only the block header, rather than the entire block. since about 90% of the time we're going to have to process this block later; only the `hashPrevBlock` field of the header is needed to determine if we can process this block immediately (if this block's parent has been seen). This does mean that 10% of the time, we deserialize the header, and then immediately also the full block (where it would have been more efficient to simply deserialize the full block), but overall this is a big performance win.\r\n\r\nOn my system, this PR reduces the time to `--reindex` on mainnet by 48 minutes. I encourage reviewers to attempt to replicate my findings. Reindexing has two parts, reading the `blocks/blknnnnn.dat` files (which this PR improves), and then connecting the blocks to the blockchain (the `UpdateTip` messages), which this PR doesn't affect. For me, this PR reduces the first part from 123 to 75 minutes. After you start seeing `UpdateTip` messages, you can stop the client, and you will have the time measurement you need from `debug.log`.",
      "created_at" : "2019-09-29T01:32:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-536238638",
      "id" : 536238638,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzNjIzODYzOA==",
      "updated_at" : "2020-04-18T02:33:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/536238638",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r329333473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329333473"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This `LogPrint` probably should be combined with the (existing) one a few lines below before merging, but I wanted reviewers to be aware of when the new code is being run.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2019-09-29T01:35:24Z",
      "diff_hunk" : "@@ -4633,14 +4642,31 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                     std::pair<std::multimap<uint256, FlatFilePos>::iterator, std::multimap<uint256, FlatFilePos>::iterator> range = mapBlocksUnknownParent.equal_range(head);\n                     while (range.first != range.second) {\n                         std::multimap<uint256, FlatFilePos>::iterator it = range.first;\n+                        // see if the needed child block is still in the buffer\n+                        const FlatFilePos pos = it->second;\n+                        bool haveChildBlock = false;\n                         std::shared_ptr<CBlock> pblockrecursive = std::make_shared<CBlock>();\n-                        if (ReadBlockFromDisk(*pblockrecursive, it->second, chainparams.GetConsensus()))\n-                        {\n+                        // performance optimization -- else path would always work\n+                        if (dbp && pos.nFile == dbp->nFile && blkdat.SetPos(pos.nPos - sizeof(uint32_t))) {\n+                            // block is still in memory, positioned to the start of the size field\n+                            haveChildBlock = true;\n+                            blkdat.SetLimit(pos.nPos);\n+                            blkdat >> nSize;\n+                            CBlock& blockrecursive = *pblockrecursive;\n+                            blkdat.SetLimit(pos.nPos + nSize);\n+                            blkdat >> blockrecursive;\n+                            LogPrint(BCLog::REINDEX, \"%s: Processing in-memory out of order child %s of %s\\n\", __func__, pblockrecursive->GetHash().ToString(),\n+                                    head.ToString());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r329333473",
      "id" : 329333473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTMzMzQ3Mw==",
      "original_commit_id" : "48c0cc724510add8753ff27e6f4a534cb7a37dbb",
      "original_line" : 4730,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 294660183,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329333473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r329333593"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329333593"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't know how to write a unit test for this PR (there are no existing unit tests for any of this area of the code), but `test/functional/wallet_basic.py` does run through the new code -- you can add an `assert(false)` here and that test fails, so that's at least something.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2019-09-29T01:40:43Z",
      "diff_hunk" : "@@ -4633,14 +4642,31 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                     std::pair<std::multimap<uint256, FlatFilePos>::iterator, std::multimap<uint256, FlatFilePos>::iterator> range = mapBlocksUnknownParent.equal_range(head);\n                     while (range.first != range.second) {\n                         std::multimap<uint256, FlatFilePos>::iterator it = range.first;\n+                        // see if the needed child block is still in the buffer\n+                        const FlatFilePos pos = it->second;\n+                        bool haveChildBlock = false;\n                         std::shared_ptr<CBlock> pblockrecursive = std::make_shared<CBlock>();\n-                        if (ReadBlockFromDisk(*pblockrecursive, it->second, chainparams.GetConsensus()))\n-                        {\n+                        // performance optimization -- else path would always work\n+                        if (dbp && pos.nFile == dbp->nFile && blkdat.SetPos(pos.nPos - sizeof(uint32_t))) {\n+                            // block is still in memory, positioned to the start of the size field\n+                            haveChildBlock = true;\n+                            blkdat.SetLimit(pos.nPos);\n+                            blkdat >> nSize;\n+                            CBlock& blockrecursive = *pblockrecursive;\n+                            blkdat.SetLimit(pos.nPos + nSize);\n+                            blkdat >> blockrecursive;\n+                            LogPrint(BCLog::REINDEX, \"%s: Processing in-memory out of order child %s of %s\\n\", __func__, pblockrecursive->GetHash().ToString(),\n+                                    head.ToString());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r329333593",
      "id" : 329333593,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTMzMzU5Mw==",
      "original_commit_id" : "48c0cc724510add8753ff27e6f4a534cb7a37dbb",
      "original_line" : 4730,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 294660183,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329333593",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the suggestion, @promag, done (force-pushed).",
      "created_at" : "2019-09-30T04:42:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-536398435",
      "id" : 536398435,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzNjM5ODQzNQ==",
      "updated_at" : "2019-09-30T04:42:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/536398435",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I forgot to update the `CBufferedFile` unit tests, just did that and another force-push.",
      "created_at" : "2019-09-30T05:40:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-536409070",
      "id" : 536409070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzNjQwOTA3MA==",
      "updated_at" : "2019-09-30T05:40:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/536409070",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I changed this PR to WIP because I thought of a further improvement, which I'll try to push by the end of the week. It will build on the existing two commits, so reviewing those wouldn't be a waste of time. Thanks in advance for any reviews and suggestions.",
      "created_at" : "2019-10-01T14:40:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-537068616",
      "id" : 537068616,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzNzA2ODYxNg==",
      "updated_at" : "2019-10-01T14:40:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/537068616",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2019-10-03T20:46:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-538121393",
      "id" : 538121393,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzODEyMTM5Mw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/538121393/reactions"
      },
      "updated_at" : "2022-11-08T00:00:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/538121393",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r333082059"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333082059"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is a much larger buffer (640 mb), but it only exists during the first phase of reindexing (when you see `Reindexing block...` in the debug log); after that, the `bitcoind` memory usage increases for other reasons anyway. During the first phase, memory (`VSZ` in the ps output) is about 2.4 gb on my system; afterwards (when it's logging `UpdateTip: new best...`), it's about 3.5 gb. The benefit of a large buffer is that a larger fraction of the out-of-order blocks (that have to be processed later, when their parents are seen) can be found in memory, rather than having to read them again from disk. The \"hit ratio\" with this buffer size is just under 99%. The difference between 160 (but overall buffer size in max-blocks)) and 140 (the rewind limit) determines the size of disk reads (the larger, the better, more efficient).",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2019-10-09T15:29:02Z",
      "diff_hunk" : "@@ -668,6 +668,7 @@ static void ThreadImport(std::vector<fs::path> vImportFiles)\n \n     // -reindex\n     if (fReindex) {\n+        CBufferedFile blkdat(160*MAX_BLOCK_SERIALIZED_SIZE, 140*MAX_BLOCK_SERIALIZED_SIZE, SER_DISK, CLIENT_VERSION);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r333082059",
      "id" : 333082059,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzA4MjA1OQ==",
      "original_commit_id" : "7af058771e3dfc40ee2855a5e5e102b9b2b57361",
      "original_line" : 671,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 299501549,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333082059",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r333083169"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333083169"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This method is unused, and really doesn't make sense. The buffer contents should match file (or, now, files) content, and this messes that up. If it's needed in the future, it can be re-thought.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2019-10-09T15:30:57Z",
      "diff_hunk" : "@@ -816,18 +839,6 @@ class CBufferedFile\n         return true;\n     }\n \n-    bool Seek(uint64_t nPos) {\n-        long nLongPos = nPos;\n-        if (nPos != (uint64_t)nLongPos)\n-            return false;\n-        if (fseek(src, nLongPos, SEEK_SET))\n-            return false;\n-        nLongPos = ftell(src);\n-        nSrcPos = nLongPos;\n-        nReadPos = nLongPos;\n-        return true;\n-    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r333083169",
      "id" : 333083169,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzA4MzE2OQ==",
      "original_commit_id" : "7af058771e3dfc40ee2855a5e5e102b9b2b57361",
      "original_line" : 827,
      "original_position" : 108,
      "original_start_line" : 819,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 299501549,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333083169",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r333088941"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333088941"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "These `pim` (out-of-order block found in-memory) and `pom` (out-of-order block not in memory) let reviewers see the effectiveness of the read caching during testing; they can be removed before merging. Here's a typical instance:\r\n```\r\n2019-10-09T15:28:17Z Loaded 839 blocks from external file in 11729ms pim 726 pom 95\r\n```\r\nThis means 821 (726+95) blocks were processed out-of-order, so 18 (839-821) blocks were processed in-order (their parents had already been seen). This is typical, and shows that almost all blocks are processed out-of-order. With this PR, 726 of these out-of-order blocks were recent enough that they were still in the buffer, and 95 had already been pushed out and had to be read again from disk. Overall, 99% of the out-of-order blocks are still in the buffer.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2019-10-09T15:41:52Z",
      "diff_hunk" : "@@ -4659,7 +4693,8 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n         AbortNode(std::string(\"System error: \") + e.what());\n     }\n     if (nLoaded > 0)\n-        LogPrintf(\"Loaded %i blocks from external file in %dms\\n\", nLoaded, GetTimeMillis() - nStart);\n+        LogPrintf(\"Loaded %i blocks from external file in %dms pim %i pom %i\\n\",\n+            nLoaded, GetTimeMillis() - nStart, nProcessedInMem, nProcessedOutMem);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r333088941",
      "id" : 333088941,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzA4ODk0MQ==",
      "original_commit_id" : "7af058771e3dfc40ee2855a5e5e102b9b2b57361",
      "original_line" : 4762,
      "original_position" : 129,
      "original_start_line" : 4662,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 299501549,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333088941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Testnet performance isn't important, but as a sanity check, I verified that the new code runs faster there too on my laptop. The time between `Reindexing block file blk00001.dat...` and `Reindexing finished` reduced from 10m21s to 7m13s.",
      "created_at" : "2019-10-11T16:32:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-541134716",
      "id" : 541134716,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MTEzNDcxNg==",
      "updated_at" : "2019-10-11T16:32:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541134716",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2019-10-11T19:30:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-541194728",
      "id" : 541194728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MTE5NDcyOA==",
      "updated_at" : "2019-10-11T19:30:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541194728",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/45598?v=4",
         "events_url" : "https://api.github.com/users/jb55/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jb55/followers",
         "following_url" : "https://api.github.com/users/jb55/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jb55/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jb55",
         "id" : 45598,
         "login" : "jb55",
         "node_id" : "MDQ6VXNlcjQ1NTk4",
         "organizations_url" : "https://api.github.com/users/jb55/orgs",
         "received_events_url" : "https://api.github.com/users/jb55/received_events",
         "repos_url" : "https://api.github.com/users/jb55/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jb55/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jb55/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jb55"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@mzumsande, those are very good thoughts, thank you. I will study this further (and invite others to also). One nice thing about this design is that any amount of memory will work, in that it will be an improvement -- it is one of those classic space-time tradeoffs. The idea of making the buffer not have a hard-coded size is intriguing and promising. I think we would not go back to the pre-second iteration (multiple-files), because even reducing the buffer memory to the original amount would be improved by the multi-file version. (That is to say, there is no downside to the latest version here.) That's because all the multi-file commit means is that we do not discard cached data when switching files.\r\n\r\nOne thing I hope I made clear enough in an earlier comment is that I tried to keep the memory usage during reindexing be strictly _less_ than what is needed during normal operation, so that there would be no overall increase in memory demand. We certainly would not want this design to create a *spike* (high water mark) of memory usage. But I was very likely mistaken, since I was not aware that memory could be \"dialed down\" for small environments.",
      "created_at" : "2019-10-13T06:32:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-541391295",
      "id" : 541391295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MTM5MTI5NQ==",
      "updated_at" : "2019-10-13T06:32:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541391295",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I force-pushed a reorganization of the commits to make reviewing easier. I split the largest commit, **speed up reindex by reading out-of-order blocks from memory**, into two separate commits:\r\n1. Commit message: **initially deserialize only CBlockHeader, not CBlock**. Deserialize only a block header (only 32 bytes) initially, instead of a full block. The block header is all that's needed to tell us if this block's parent has been seen yet; if not, the block will have to be deserialized later, after its parent is found. Nearly all blocks (89% on my system) are seen before their parents, so this is a big improvement.\r\n1. Commit message: **speed up reindex by reading out-of-order blocks from memory**. If we've just processed a block that's the parent of an earlier-seen block, we must now process that earlier block. Instead of always reading that block from disk, see if it happens to still be in the circular disk read memory buffer ('CBufferedFile blkdat`). This saves a disk read.\r\n\r\nWe could merge the first commit without the second. The first commit is pretty simple; the second commit is a little more involved.\r\n\r\nThese two commits have a buffer size unchanged from master, 8mb (`2*MAX_BLOCK_SERIALIZED_SIZE`), so there is no change in memory usage. But with this buffer size, only 29% of the out-of-order blocks are found in the buffer. If we increase the buffer by not too much (as I did in an earlier commit that's now been erased by force-push, 640mb), to 32mb, the \"hit rate\" increases to 50%. This is probably a good space-time balance.\r\n\r\nHere are the block-load times on my system (with all default settings), which is just the first part of reindexing (each row builds on the previous row):\r\n\r\n| version | real time (minutes) |\r\n| ----------- | ----------- |\r\n| master | 130 |\r\n| deserialize only header | 90 |\r\n| look for blocks in buffer, 8mb |84 |\r\n| look for blocks in buffer, 32mb |78 |\r\n| look for blocks in buffer, 640mb |72 |\r\n\r\n(Take with a grain of salt, because the times varied even on identical runs, and a lot probably depends on the specifics of my system.) Keep in mind that this buffer exists only during the block-load part of reindex.",
      "created_at" : "2019-10-15T03:29:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-542020115",
      "id" : 542020115,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjAyMDExNQ==",
      "updated_at" : "2019-10-15T03:32:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542020115",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r336254578"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336254578"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is it necessary to remove the `FILE` from the constructor? Couldn't you just initialize it with `nullptr` in the multi-file case and call `SetFile()` later, so that there need to be no syntax changes for the single-file case? It is also easy to create a `CBufferedFile` object and forget about `SetFile()`, leading to a memory access violation.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2019-10-17T22:30:10Z",
      "diff_hunk" : "@@ -762,12 +763,12 @@ class CBufferedFile\n     }\n \n public:\n-    CBufferedFile(FILE *fileIn, uint64_t nBufSize, uint64_t nRewindIn, int nTypeIn, int nVersionIn) :\n-        nType(nTypeIn), nVersion(nVersionIn), nSrcPos(0), nReadPos(0), nReadLimit(std::numeric_limits<uint64_t>::max()), nRewind(nRewindIn), vchBuf(nBufSize, 0)\n+    CBufferedFile(uint64_t nBufSize, uint64_t nRewindIn, int nTypeIn, int nVersionIn) :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r336254578",
      "id" : 336254578,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjI1NDU3OA==",
      "original_commit_id" : "b2919cad00665ee536c4cbb8af21c8ecded01634",
      "original_line" : 766,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 303582448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336254578",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r336257157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336257157"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: This could be moved into the `if` block (same for -loadblock below)",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2019-10-17T22:39:31Z",
      "diff_hunk" : "@@ -689,11 +691,13 @@ static void ThreadImport(std::vector<fs::path> vImportFiles)\n     // hardcoded $DATADIR/bootstrap.dat\n     fs::path pathBootstrap = GetDataDir() / \"bootstrap.dat\";\n     if (fs::exists(pathBootstrap)) {\n+        CBufferedFile blkdat(2*MAX_BLOCK_SERIALIZED_SIZE, MAX_BLOCK_SERIALIZED_SIZE+8, SER_DISK, CLIENT_VERSION);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r336257157",
      "id" : 336257157,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjI1NzE1Nw==",
      "original_commit_id" : "c91b547afb60a5a275b779b79b02c10708ccc95d",
      "original_line" : 694,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 303582448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336257157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r336259458"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336259458"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the pim/pom statistics is useful, but maybe too special for the main log. You could use a separate `BCLog::REINDEX` message for that information.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2019-10-17T22:49:00Z",
      "diff_hunk" : "@@ -4659,7 +4693,8 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n         AbortNode(std::string(\"System error: \") + e.what());\n     }\n     if (nLoaded > 0)\n-        LogPrintf(\"Loaded %i blocks from external file in %dms\\n\", nLoaded, GetTimeMillis() - nStart);\n+        LogPrintf(\"Loaded %i blocks from external file in %dms pim %i pom %i\\n\",\n+            nLoaded, GetTimeMillis() - nStart, nProcessedInMem, nProcessedOutMem);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r336259458",
      "id" : 336259458,
      "in_reply_to_id" : 333088941,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjI1OTQ1OA==",
      "original_commit_id" : "7af058771e3dfc40ee2855a5e5e102b9b2b57361",
      "original_line" : 4762,
      "original_position" : 129,
      "original_start_line" : 4662,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 303582448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336259458",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Under what circumstances is a `-reindex` needed these days? Only when disabling `-prune`? Though, then you'll download from the network anyway.",
      "created_at" : "2019-10-18T12:58:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-543730430",
      "id" : 543730430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MzczMDQzMA==",
      "updated_at" : "2019-10-18T12:58:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543730430",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r336794478"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336794478"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@mzumsande, good idea, I restored that argument to the constructor.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2019-10-20T20:00:54Z",
      "diff_hunk" : "@@ -762,12 +763,12 @@ class CBufferedFile\n     }\n \n public:\n-    CBufferedFile(FILE *fileIn, uint64_t nBufSize, uint64_t nRewindIn, int nTypeIn, int nVersionIn) :\n-        nType(nTypeIn), nVersion(nVersionIn), nSrcPos(0), nReadPos(0), nReadLimit(std::numeric_limits<uint64_t>::max()), nRewind(nRewindIn), vchBuf(nBufSize, 0)\n+    CBufferedFile(uint64_t nBufSize, uint64_t nRewindIn, int nTypeIn, int nVersionIn) :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r336794478",
      "id" : 336794478,
      "in_reply_to_id" : 336254578,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjc5NDQ3OA==",
      "original_commit_id" : "b2919cad00665ee536c4cbb8af21c8ecded01634",
      "original_line" : 766,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 304275665,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336794478",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke Building new indices is required if upgrading from pre-0.17 to post-0.17 (https://bitcoin.org/en/release/v0.17.0) with a txindex.\r\n\r\n>If your node has a txindex, the txindex db will be migrated the first time you run 0.17.0 or newer, which may take up to a few hours. Your node will not be functional until this migration completes.\r\n\r\nI haven't looked into whether this PR speeds up that process, but it is something to consider.",
      "created_at" : "2019-10-21T01:11:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-544313666",
      "id" : 544313666,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NDMxMzY2Ng==",
      "updated_at" : "2019-10-21T01:11:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/544313666",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3648618?v=4",
         "events_url" : "https://api.github.com/users/leishman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/leishman/followers",
         "following_url" : "https://api.github.com/users/leishman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/leishman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/leishman",
         "id" : 3648618,
         "login" : "leishman",
         "node_id" : "MDQ6VXNlcjM2NDg2MTg=",
         "organizations_url" : "https://api.github.com/users/leishman/orgs",
         "received_events_url" : "https://api.github.com/users/leishman/received_events",
         "repos_url" : "https://api.github.com/users/leishman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/leishman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/leishman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/leishman"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r337597803"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337597803"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Does it bother anyone else that this is `static`? This is global state, which, in general, equals evil. It must be static, given that it's declared here, since its state must persist across calls to this function (very often, a block and its parent are in different `blk` files). We could eliminate this global state by allocating this map in the caller of this function, `src/init.cpp: ThreadImport()`, and passing it by reference to `LoadExternalBlockFile()`. \r\n\r\nAnother thing that seems missing from the current design is, what happens if there are leftover entries in this map after reindexing has completed? That means we've read blocks from disk but never found their parent blocks. In my testing, this map is empty at the end of reindexing, as expected. But what if it wasn't? That would mean we're missing one or more `blocks/blk00nnn.dat` files, or some blocks from those files. Isn't that worth at least a `LogPrintf()`? Making this change would also require moving the map out to the caller, because this function doesn't know if it will be called again.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2019-10-22T15:43:38Z",
      "diff_hunk" : "@@ -4592,16 +4592,20 @@ bool LoadGenesisBlock(const CChainParams& chainparams)\n     return ::ChainstateActive().LoadGenesisBlock(chainparams);\n }\n \n-bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFilePos *dbp)\n+bool LoadExternalBlockFile(const CChainParams& chainparams, CBufferedFile& blkdat, FlatFilePos *dbp)\n {\n     // Map of disk positions for blocks with unknown parent (only used for reindex)\n-    static std::multimap<uint256, FlatFilePos> mapBlocksUnknownParent;\n+    struct unknownParentPos {\n+        FlatFilePos filePos;\n+        uint64_t pos;\n+    };\n+    static std::multimap<uint256, unknownParentPos> mapBlocksUnknownParent;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r337597803",
      "id" : 337597803,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNzU5NzgwMw==",
      "original_commit_id" : "869aed06b9085f03c24d1b14a546ca333b2eb438",
      "original_line" : 4615,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 305312876,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/337597803",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> @MarcoFalke Building new indices is required if upgrading from pre-0.17 to post-0.17 (https://bitcoin.org/en/release/v0.17.0) with a txindex.\r\n\r\nIsn't `-reindex-chainstate` enough in that case? I don't think that requres a rescan of the block files.\r\n",
      "created_at" : "2019-10-30T11:40:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-547861097",
      "id" : 547861097,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzg2MTA5Nw==",
      "updated_at" : "2019-10-30T11:41:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547861097",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-10-30T16:19:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-547989447",
      "id" : 547989447,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Nzk4OTQ0Nw==",
      "updated_at" : "2019-10-30T16:19:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547989447",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased. I think running `--reindex` is also good when for whatever reason you don't trust your index files; for example, think files may be missing or may have been corrupted. It's true that in that case you could just re-IBD, but this is faster and less disruptive to peers.\r\n\r\nI wasn't sure how much variation there might be in the runtimes I posted here earlier, so to get a few more data points, I added `assert(0)` immediately after printing `Reindexing finished`, and ran `bitcoind --reindex` several times in a shell loop, timing each run (using the standard `time` bash builtin). Here are the real times without this PR (which I reported as 130 minutes in the earlier comment):\r\n```\r\nreal\t131m52.120s\r\nreal\t130m55.904s\r\nreal\t133m20.911s\r\nreal\t134m37.052s\r\nreal\t146m17.564s\r\nreal\t135m17.301s\r\n```\r\nand here are the times for runs with this PR (I ran this a few more times), this is what I reported as 84 minutes above:\r\n```\r\nreal\t79m55.050s\r\nreal\t92m30.341s\r\nreal\t82m44.119s\r\nreal\t80m50.067s\r\nreal\t89m31.793s\r\nreal\t87m36.802s\r\nreal\t97m42.247s\r\nreal\t86m31.999s\r\nreal\t87m13.304s\r\nreal\t82m21.497s\r\n```",
      "created_at" : "2019-10-30T21:34:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-548122336",
      "id" : 548122336,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODEyMjMzNg==",
      "updated_at" : "2019-10-30T21:34:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548122336",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-11-05T19:02:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-549970174",
      "id" : 549970174,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTk3MDE3NA==",
      "updated_at" : "2019-11-05T19:02:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549970174",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased to fix merge conflicts, force-pushed.",
      "created_at" : "2019-11-07T19:34:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-551230310",
      "id" : 551230310,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MTIzMDMxMA==",
      "updated_at" : "2019-11-07T19:34:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551230310",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased, force-pushed",
      "created_at" : "2019-11-21T17:41:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-557195051",
      "id" : 557195051,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1NzE5NTA1MQ==",
      "updated_at" : "2019-11-21T17:41:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557195051",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Reviewers, please take a fresh look at the latest force-push; this PR is much better than before. I'll explain from scratch, so it's not necessary to read any of the previous comments in this PR.\r\n\r\nThe previous version of this PR included two separate changes (both affecting `-reindex`):\r\n* initially deserializing only the header instead of the entire block\r\n* when we find a block whose child has already been read, attempt to \"rewind\" in the stream memory buffer to access and process the child (instead of always reading it again from disk)\r\n\r\nThese should always have been separate PRs. This PR now contains only the first change, which is the more effective and localized. I'll make a separate PR for the second change if it turns out to be a significant improvement. _This PR no longer has any effect on memory usage_, which reviewers had concerns about. \r\n\r\nTo go over some basics again, for background: During `-reindex`, blocks are read from disk (the `blocks/blk00???.dat` files), deserialized, and processed. But a block can't be processed if its parent hasn't yet been seen (we know this only after deserializing the block). In that case, its disk location is saved in a map and we go on to the next block. \r\n\r\nWhenever we do successfully process a block (we've got its parent), we check to see if its child has already been seen (is present in the map, looked up by block hash), and, if so, we read the child block from disk (again), deserialize it, and process it (and remove it from the map).\r\n\r\nIt turns out that, due to the \"headers first\" initial block download (IBD) algorithm, over 92% of blocks (on my system) are out of order, in the sense that 92% of the time when we first read a block, we haven't yet seen its parent. You can see these by specifying the `-debug=reindex` option (see the second comment in this PR).\r\n\r\nWhat this PR does -- and now all it does -- is to initially deserialize only the _header_ (80 bytes), not the entire block. From the header, we can tell if this block's parent has already been seen (by its prev-hash). If not (92% of the time), we skip over the rest of the block. So the savings are to not deserialize the entire block in the most common case where that's unnecessary. \r\n\r\nIt's true that if all blocks _were_ in order, this would be slightly slower because we'd deserialize the header, discover that the block's parent is already known, then deserialize the full block. (There's no easy way to deserialize the _rest_ of the block.)\r\n\r\nTo test this change,you may want to apply this patch:\r\n```\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -692,6 +692,7 @@ static void ThreadImport(std::vector<fs::path> vImportFiles)\r\n         pblocktree->WriteReindexing(false);\r\n         fReindex = false;\r\n         LogPrintf(\"Reindexing finished\\n\");\r\n+        StartShutdown();\r\n         // To avoid ending up in a situation without genesis block, re-try initializing (no-op if reindexing worked):\r\n         LoadGenesisBlock(chainparams);\r\n     }\r\n```\r\nThen you can time the reindexing in isolation (without having to look at timestamps in the log file):\r\n```\r\n$ time src/bitcoind --reindex --maxconnections=0\r\n```\r\nSetting `maxconnections` to zero makes the timing less variable, since you can get very different peers each time.\r\n\r\nWhen I run this, I consistently get 83 minutes with this PR's branch, and 125 minutes without, an improvement of 42 minutes.",
      "created_at" : "2020-02-21T19:07:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-589791783",
      "id" : 589791783,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4OTc5MTc4Mw==",
      "updated_at" : "2020-02-24T03:46:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589791783",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Just to clarify, the last bullet point in the [review club writeup](https://bitcoincore.reviews/16981.html): \r\n\r\n> Before this PR, we would always read entire blocks from disk into our buffer. If the predecessor of a block was not available, the blocks would have to be read again at a later point. This PR changes behavior such that initially only the 80 byte block header is read into the buffer, and if we canât accept the block yet, the rest of the block is skipped for now\r\n\r\nis slightly incorrect. Even with this PR, we always read entire blocks from disk (most of them twice); the disk read behavior before and after this PR is exactly the same. The difference is that with this PR, only the _header_ is (initially) deserialized, rather than the entire block, which saves CPU.\r\n\r\nThe `CBufferedFile` object does somewhat large reads, around 4 MB (`MAX_BLOCK_SERIALIZED_SIZE`), each of which often includes multiple entire blocks and a partial block (because we don't know where the boundaries are; we don't know how much to read to get exactly a block or blocks). Recent blocks are close to full, so each disk read probably reads in only one or two blocks (plus a partial block). \r\n\r\nBut now I'm wondering if this PR _should_ work as described in the review club comment. We could read only the 80-byte header from disk, and then, if we've seen its parent, read the rest of the block. Two disk reads are less efficient than one large read (a disk read has a fixed overhead and a length-proportional overhead), but that happens only about 8% of the time. If we haven't seen this block's parent (probability 92%), we could _seek_ ahead in the file, instead of reading it into memory. But as explained earlier, there could be _more_ than one block per large read, so we may end up exchanging one large read for 2 or 3 80-byte reads -- hard to say which is better. I'd recommend leaving this PR as is, because it's an (almost) unambiguous improvement on the status quo, and changing it to do 80-byte reads and seeks is more complex than this PR is currently. (The reason I say almost is because, if the blocks are already sorted, this ends up deserializing the header one extra time.)\r\n\r\nI'm just now thinking, we could make `reindex` (part 1) screaming fast by storing the headers in separate \"parallel\" files in the `blocks/` directory: `blk01234.dat` would be the same as now, but there would be a `hdr01234.dat` (similar to the way there's a `rev001234.dat` today) that would be that file's blocks' headers in the same order. Actually, that file would be a sequence of (header, file-offset, size) tuples. The file-offset is the file offset of that block's block in the same-named `blk` file. That's only 100 MB of additional disk space (about 100 bytes times about 1M blocks, this is far less than 1% of the size of the `blocks/` directory). \r\n\r\nThen `-reindex` could do 4 MB reads, same as today except reading the `hdr001234.dat` files, bringing in 50k headers in a single read -- super-efficient. Then loop through each of those, and if the block can be accepted now (its parent has been seen, 8% case), then seek and read from the `blk01234.dat` file (we would know the exact seek offset and the size); that would be slower than today. But the 92% case would be much faster because we wouldn't be reading entire blocks into memory unnecessarily. This would be a significant reduction in the number of disk reads. (Definitely this would be a separate PR.) Opinions?",
      "created_at" : "2020-03-03T19:27:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-594125403",
      "id" : 594125403,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NDEyNTQwMw==",
      "updated_at" : "2020-03-03T19:27:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594125403",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387491322"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387491322"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I only understood this comment after I got to L#359.\r\n```suggestion\r\n    // The value at each offset is the byte offset (e.g. byte 1 in the file has the value 0x01, etc).\r\n```",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-04T07:36:54Z",
      "diff_hunk" : "@@ -335,6 +339,57 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n     fs::remove(\"streams_test_tmp\");\n }\n \n+BOOST_AUTO_TEST_CASE(streams_buffered_file_skip)\n+{\n+    FILE* file = fsbridge::fopen(\"streams_test_tmp\", \"w+b\");\n+    // The value at each offset is the offset.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387491322",
      "id" : 387491322,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ5MTMyMg==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 350,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/test/streams_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 368556009,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387491322",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387493207"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387493207"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You could do\r\n```C++\r\nBOOST_CHECK_THROW(bf.Skip(2), std::exception);\r\n```\r\n",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-04T07:42:28Z",
      "diff_hunk" : "@@ -335,6 +339,57 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n     fs::remove(\"streams_test_tmp\");\n }\n \n+BOOST_AUTO_TEST_CASE(streams_buffered_file_skip)\n+{\n+    FILE* file = fsbridge::fopen(\"streams_test_tmp\", \"w+b\");\n+    // The value at each offset is the offset.\n+    for (uint8_t j = 0; j < 40; ++j) {\n+        fwrite(&j, 1, 1, file);\n+    }\n+    rewind(file);\n+\n+    // The buffer is 25 bytes, allow rewinding 10 bytes.\n+    CBufferedFile bf(file, 25, 10, 222, 333);\n+\n+    uint8_t i;\n+    // This is like bf >> (7-byte-variable), in that it will cause data\n+    // to be read from the file into memory, but it's not copied to us.\n+    bf.Skip(7);\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 7);\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 7);\n+\n+    // The bytes in the buffer up to offset 7 are valid and can be read.\n+    BOOST_CHECK(bf.SetPos(0));\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 0);\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 1);\n+\n+    // Skip()'s argument is the number of bytes to move forward in the\n+    // file, not the absolute file position. Since bf is currently\n+    // positioned to 2, this will advance it to 11.\n+    bf.Skip(9);\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 11);\n+\n+    // Skip() honors the transfer limit; this allows only one byte\n+    // to be skipped (or read) since we're at position 12.\n+    bf.SetLimit(13);\n+    try {\n+        bf.Skip(2);\n+        BOOST_CHECK(false);\n+    } catch (const std::exception& e) {\n+        BOOST_CHECK(strstr(e.what(),\n+                        \"Read attempted past buffer limit\") != nullptr);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387493207",
      "id" : 387493207,
      "line" : 380,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ5MzIwNw==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 380,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/test/streams_tests.cpp",
      "position" : 134,
      "pull_request_review_id" : 368556009,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387493207",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "~Btw https://bitcoincore.reviews/16981.html notes that this fixes a bug as well. I would really like if this bug-fix was its own separate commit (followed by the commit doing the actual runtime performance improvement).~",
      "created_at" : "2020-03-04T09:26:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-594413086",
      "id" : 594413086,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NDQxMzA4Ng==",
      "updated_at" : "2020-03-04T10:26:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594413086",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This seems to be a misunderstanding. I don't think that this PR fixes a bug, the sentence in question referred to the older PR #16577 which is already merged.",
      "created_at" : "2020-03-04T10:16:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-594436158",
      "id" : 594436158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NDQzNjE1OA==",
      "updated_at" : "2020-03-04T10:16:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594436158",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "OH. Yeah, that's what it says. I wasn't reading carefully enough.",
      "created_at" : "2020-03-04T10:26:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-594440844",
      "id" : 594440844,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NDQ0MDg0NA==",
      "updated_at" : "2020-03-04T10:26:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594440844",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387828430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387828430"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Could this 80 become a const? The block header might get bigger or smaller in future and this 80 could get missed.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-04T17:44:04Z",
      "diff_hunk" : "@@ -4674,29 +4674,39 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                blkdat.SetLimit(nBlockPos + 80);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387828430",
      "id" : 387828430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyODQzMA==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 4681,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 368987724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387828430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/12272949?v=4",
         "events_url" : "https://api.github.com/users/emilengler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/emilengler/followers",
         "following_url" : "https://api.github.com/users/emilengler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/emilengler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/emilengler",
         "id" : 12272949,
         "login" : "emilengler",
         "node_id" : "MDQ6VXNlcjEyMjcyOTQ5",
         "organizations_url" : "https://api.github.com/users/emilengler/orgs",
         "received_events_url" : "https://api.github.com/users/emilengler/received_events",
         "repos_url" : "https://api.github.com/users/emilengler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/emilengler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/emilengler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387833215"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387833215"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this call is unnecessary. It's there in the old code to make sure there is consistency between the block length in the file, and the actually serialized data. Headers are always just 80 bytes, though, so this check isn't necessary here.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-04T17:52:53Z",
      "diff_hunk" : "@@ -4674,29 +4674,39 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                blkdat.SetLimit(nBlockPos + 80);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387833215",
      "id" : 387833215,
      "in_reply_to_id" : 387828430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgzMzIxNQ==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 4681,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 368993766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387833215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387834622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387834622"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is incorrect. If the size field of the block was corrupted this would cause us to potentially jump into nowhere. Do things still work (and still give a performance benefit...) if you change this to nBlockPos + 1?",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-04T17:55:22Z",
      "diff_hunk" : "@@ -4674,29 +4674,39 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                blkdat.SetLimit(nBlockPos + 80);\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                const uint256 hash = header.GetHash();\n                 {\n                     LOCK(cs_main);\n                     // detect out of order blocks, and store them for later\n-                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(block.hashPrevBlock)) {\n+                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(header.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n-                                block.hashPrevBlock.ToString());\n+                                header.hashPrevBlock.ToString());\n                         if (dbp)\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\n+                            mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\n+\n+                        // Position to the start of the next block.\n+                        nRewind = nBlockPos + nSize;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387834622",
      "id" : 387834622,
      "line" : 4674,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgzNDYyMg==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 4674,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 45,
      "pull_request_review_id" : 368993766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387834622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387853603"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387853603"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Skip() calls read(), which means (IIUC) that this change makes it so we are now doing a disk read while holding cs_main. Given this is reindexing this might not matter but worth noting. Is this a problem?",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-04T18:30:53Z",
      "diff_hunk" : "@@ -4674,29 +4674,39 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                blkdat.SetLimit(nBlockPos + 80);\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                const uint256 hash = header.GetHash();\n                 {\n                     LOCK(cs_main);\n                     // detect out of order blocks, and store them for later\n-                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(block.hashPrevBlock)) {\n+                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(header.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n-                                block.hashPrevBlock.ToString());\n+                                header.hashPrevBlock.ToString());\n                         if (dbp)\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\n+                            mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\n+\n+                        // Position to the start of the next block.\n+                        nRewind = nBlockPos + nSize;\n+                        blkdat.SetLimit(nRewind);\n+                        blkdat.Skip(nRewind - blkdat.GetPos());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387853603",
      "id" : 387853603,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg1MzYwMw==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 4698,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 369019654,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387853603",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/177646?v=4",
         "events_url" : "https://api.github.com/users/narula/events{/privacy}",
         "followers_url" : "https://api.github.com/users/narula/followers",
         "following_url" : "https://api.github.com/users/narula/following{/other_user}",
         "gists_url" : "https://api.github.com/users/narula/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/narula",
         "id" : 177646,
         "login" : "narula",
         "node_id" : "MDQ6VXNlcjE3NzY0Ng==",
         "organizations_url" : "https://api.github.com/users/narula/orgs",
         "received_events_url" : "https://api.github.com/users/narula/received_events",
         "repos_url" : "https://api.github.com/users/narula/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/narula/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/narula/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/narula"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387929685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387929685"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Also, I think this part could be more concise. I mean adding position + size just do subtract position below, seems a bit redundant.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-04T20:57:05Z",
      "diff_hunk" : "@@ -4674,29 +4674,39 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                blkdat.SetLimit(nBlockPos + 80);\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                const uint256 hash = header.GetHash();\n                 {\n                     LOCK(cs_main);\n                     // detect out of order blocks, and store them for later\n-                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(block.hashPrevBlock)) {\n+                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(header.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n-                                block.hashPrevBlock.ToString());\n+                                header.hashPrevBlock.ToString());\n                         if (dbp)\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\n+                            mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\n+\n+                        // Position to the start of the next block.\n+                        nRewind = nBlockPos + nSize;\n+                        blkdat.SetLimit(nRewind);\n+                        blkdat.Skip(nRewind - blkdat.GetPos());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r387929685",
      "id" : 387929685,
      "in_reply_to_id" : 387853603,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyOTY4NQ==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 4698,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 369116403,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387929685",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK, also reviewed the code and mostly satisfied. I think there is good potential for performance improvement here. I will wait with testing until the current comments are addressed.",
      "created_at" : "2020-03-04T21:02:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-594839172",
      "id" : 594839172,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NDgzOTE3Mg==",
      "updated_at" : "2020-03-04T21:02:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594839172",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r388080048"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388080048"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think if `nSize` as read from disk is wrong, then\r\n\r\n(a) if it's smaller than the actual size of the block, `blkdat >> block` will currently throw which will spit out a `Deserialize or I/O error` and start trying again at the end of the `nSize` bytes -- so this behaviour should be near enough to the same, and this is fine\r\n\r\nand (b) if it's larger than the actual size of the block, the `nSize` will be effectively ignored, and we'll pick up at a different, possibly incorrect point, and try to find the next `chainparams.MessageStart()` marker, so we could miss up to, I guess, 8MB worth of block data (4MB due to a bad nSize which is just skipped over, then just under 4MB if the next block was as large as possible and we just missed its start which is read byte-by-byte) due to 4 bytes of corrupted size data, rather than just coping with it. This is worse, but doesn't seem terrible -- if the four bytes that were corrupted were the last bytes of one block and the first bytes of another you'd have lost up to 8MB of data that way too, without any more precise targeting.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-05T05:05:39Z",
      "diff_hunk" : "@@ -4674,29 +4674,39 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                blkdat.SetLimit(nBlockPos + 80);\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                const uint256 hash = header.GetHash();\n                 {\n                     LOCK(cs_main);\n                     // detect out of order blocks, and store them for later\n-                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(block.hashPrevBlock)) {\n+                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(header.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n-                                block.hashPrevBlock.ToString());\n+                                header.hashPrevBlock.ToString());\n                         if (dbp)\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\n+                            mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\n+\n+                        // Position to the start of the next block.\n+                        nRewind = nBlockPos + nSize;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r388080048",
      "id" : 388080048,
      "in_reply_to_id" : 387834622,
      "line" : 4674,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA4MDA0OA==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 4674,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 45,
      "pull_request_review_id" : 369297512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388080048",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r388401714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388401714"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This kind of check occurs four places in this file (and was being done before this PR, for example line 256). I like the conciseness of your suggestion, but it loses the check of the exception string. (The test wouldn't detect if a completely different exception occurred.) Another advantage of checking the exception string is that it documents why the exception is thrown (could be in a comment, but code is better).\r\n\r\nIt would be nice if there was a variant of `BOOST_CHECK_THROW` that took a string argument. What do you think about implementing this in this file, or in a more general place:\r\n```\r\n#define BOOST_CHECK_THROW_WHAT(statement, exception, str) \\\r\n    do { \\\r\n        try { \\\r\n            statement; \\\r\n            BOOST_CHECK(false); \\\r\n        } catch (const exception& e) { \\\r\n            BOOST_CHECK(strstr(e.what(), str) != nullptr); \\\r\n        } \\\r\n    } while (false)\r\n```\r\nand then replacing the `try/catch` (here and in 3 other places) with:\r\n```\r\n    BOOST_CHECK_THROW_WHAT(bf.Skip(2),\r\n        std::exception, \"Read attempted past buffer limit\");\r\n```\r\n(I tested this.) It's weird to name this macro `BOOST_*` because it's not part of the Boost library, but what it does is so close to `BOOST_CHECK_THROW()` that it may make sense. If the casual reader thinks this is part of Boost, is that so bad?",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-05T16:16:46Z",
      "diff_hunk" : "@@ -335,6 +339,57 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n     fs::remove(\"streams_test_tmp\");\n }\n \n+BOOST_AUTO_TEST_CASE(streams_buffered_file_skip)\n+{\n+    FILE* file = fsbridge::fopen(\"streams_test_tmp\", \"w+b\");\n+    // The value at each offset is the offset.\n+    for (uint8_t j = 0; j < 40; ++j) {\n+        fwrite(&j, 1, 1, file);\n+    }\n+    rewind(file);\n+\n+    // The buffer is 25 bytes, allow rewinding 10 bytes.\n+    CBufferedFile bf(file, 25, 10, 222, 333);\n+\n+    uint8_t i;\n+    // This is like bf >> (7-byte-variable), in that it will cause data\n+    // to be read from the file into memory, but it's not copied to us.\n+    bf.Skip(7);\n+    BOOST_CHECK_EQUAL(bf.GetPos(), 7);\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 7);\n+\n+    // The bytes in the buffer up to offset 7 are valid and can be read.\n+    BOOST_CHECK(bf.SetPos(0));\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 0);\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 1);\n+\n+    // Skip()'s argument is the number of bytes to move forward in the\n+    // file, not the absolute file position. Since bf is currently\n+    // positioned to 2, this will advance it to 11.\n+    bf.Skip(9);\n+    bf >> i;\n+    BOOST_CHECK_EQUAL(i, 11);\n+\n+    // Skip() honors the transfer limit; this allows only one byte\n+    // to be skipped (or read) since we're at position 12.\n+    bf.SetLimit(13);\n+    try {\n+        bf.Skip(2);\n+        BOOST_CHECK(false);\n+    } catch (const std::exception& e) {\n+        BOOST_CHECK(strstr(e.what(),\n+                        \"Read attempted past buffer limit\") != nullptr);\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r388401714",
      "id" : 388401714,
      "in_reply_to_id" : 387493207,
      "line" : 380,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQwMTcxNA==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 380,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/test/streams_tests.cpp",
      "position" : 134,
      "pull_request_review_id" : 369710712,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388401714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r388419751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388419751"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think this call is unnecessary. \r\n\r\nThanks, I'll remove it. (@emilengler's comment is no longer relevant.) It's similar to the way we don't call `SetLimit()` before deserializing into the 4-byte `nSize` just above.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-05T16:44:06Z",
      "diff_hunk" : "@@ -4674,29 +4674,39 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                blkdat.SetLimit(nBlockPos + 80);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r388419751",
      "id" : 388419751,
      "in_reply_to_id" : 387828430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxOTc1MQ==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 4681,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 369710712,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388419751",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r388542805"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388542805"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "These comments create a good opportunity for me to ask some questions about the existing design while doing this PR, hope that's okay. Please don't feel an obligation to answer these.\r\n\r\n- What's the purpose of the `MessageStart()` marker? It seems to allow the skipping over some arbitrary junk that follows a block before the start of the next [marker-nSize-block] sequence of bytes. What could cause that? In other projects, I've seen these markers used when a file gets _overwritten_ (such as a journal file that implements a circular log), because after restart, the previous write offset is unknown. Are these `blk` files overwritten?\r\n- Are we trying to be robust against arbitrary file-overwrite corruption? If the file contains 100 blocks, and data corruption overwrote part of the second block, then this design (searching for the marker) will find the start of the third block and pick up from there and correctly parse the remaining 97 blocks. This sounds good, but the second block's child (or children) will never be \"accepted\" (`AcceptBlock()` called on it), recursively (and not just for this file but for all remaining files), so we'll end up with a very truncated blockchain. What happens then? I think we may download blocks from peers (IBD) starting from where the corruption occurred. That great if true (why don't I actually try this?), although a minor problem is that the many entries in `mapBlocksUnknownParent` are never released since that map is static -- which is kind of weird. But since these (following) blocks are never accepted, the rest of this part 1 of reindex is wasted effort. It may be better to just abort the rest of this part 1 of reindexing if we encounter any file corruption.\r\n\r\n> If the size field of the block was corrupted\r\n\r\nIt's true that this PR increases dependence on this field, but If we're assuming the size can be corrupted, I'm not sure what benefit it can be providing, either with or without this PR. Yes, setting `nRewind` to `nBlockPos+1` would work (I haven't tried it but I could), but it would be significantly slower because we'd have to scan for the next marker (a megabyte or 2 away) one byte at a time.\r\n\r\nIt seems to me that if the size field is corrupted, all bets are off, the train's going off the tracks in a hurry.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-05T20:22:56Z",
      "diff_hunk" : "@@ -4674,29 +4674,39 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                blkdat.SetLimit(nBlockPos + 80);\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                const uint256 hash = header.GetHash();\n                 {\n                     LOCK(cs_main);\n                     // detect out of order blocks, and store them for later\n-                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(block.hashPrevBlock)) {\n+                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(header.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n-                                block.hashPrevBlock.ToString());\n+                                header.hashPrevBlock.ToString());\n                         if (dbp)\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\n+                            mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\n+\n+                        // Position to the start of the next block.\n+                        nRewind = nBlockPos + nSize;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r388542805",
      "id" : 388542805,
      "in_reply_to_id" : 387834622,
      "line" : 4674,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU0MjgwNQ==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 4674,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 45,
      "pull_request_review_id" : 369710712,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388542805",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r388573910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388573910"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Skip() calls read()\r\n\r\nGood catch, and it's actually even worse, because if we process the block immediately (don't take the `Skip()` path), then we deserialize the entire block (`blkdat >> block`, just below), and that calls `read()` which can read the disk. But that's the less common path (only about 8%).\r\n\r\nAs someone said at review club, the node isn't fully up and running during reindexing, so there probably isn't much contention for this lock. But I think we can avoid this problem; I'll push a fix if it doesn't complicate the code too much.\r\n\r\n> this part could be more concise. I mean adding position + size just do subtract position below, seems a bit redundant.\r\n\r\nI don't think it's redundant; note that `nBlockPos` is the start of the current block (whose header we just read), while `blkdat.GetPos()` returns the current position, which is _after_ the header. We don't want to skip `nSize` bytes (which is the length of the block), we want to skip the _remainder_ of the current block, so the distance to move forward is the start of the next block minus the current position. This could have been written `blkdat.Skip(nSize - 80)` but I think that's not as clear.\r\n\r\nI just noticed that the `SetLimit()` here can be removed; it's not needed when doing a `Skip()` (it's only needed when deserializing something of variable length, such as a block). I'll remove it.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-05T21:23:53Z",
      "diff_hunk" : "@@ -4674,29 +4674,39 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                blkdat.SetLimit(nBlockPos + 80);\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                const uint256 hash = header.GetHash();\n                 {\n                     LOCK(cs_main);\n                     // detect out of order blocks, and store them for later\n-                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(block.hashPrevBlock)) {\n+                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(header.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n-                                block.hashPrevBlock.ToString());\n+                                header.hashPrevBlock.ToString());\n                         if (dbp)\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\n+                            mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\n+\n+                        // Position to the start of the next block.\n+                        nRewind = nBlockPos + nSize;\n+                        blkdat.SetLimit(nRewind);\n+                        blkdat.Skip(nRewind - blkdat.GetPos());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r388573910",
      "id" : 388573910,
      "in_reply_to_id" : 387853603,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU3MzkxMA==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 4698,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 369710712,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388573910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r388691811"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388691811"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The main point of `-reindex` now is recovery after on-disk corruption, so I think it makes sense to be as robust to that as we can reasonably be?\r\n\r\nAs well as just random disk corruption, I think you can get problems if (a) you're downloading blocks and your power goes out before the data gets synced; I'd expect you might end up with something like \"...[marker][nSize=1MB][250kB of block data][64kB of zeroes]\" in that case; at which point when you restart you might start writing the next block straight after the zeroes. When running reindex currently, I think your parsing would fail during the 64kB of zeroes, and you'd then scan to the next marker and continue. If so, I guess that means that with this patch, if you ran `-reindex` you'd not see that new block and have to redownload it. That's all speculation though, so don't take my word for it.\r\n\r\nHmm, as an alternative approach, what if you just still read/parse the entire block off the disk, but if it's not one you can immediately accept, you store it into a map for later acceptance? Limit the map to 32MB worth of data, or maybe somehow tie it in to the mempool limit? Keeps the same logic, but reduces the amount of double-reading and double-parsing needed.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-06T03:05:48Z",
      "diff_hunk" : "@@ -4674,29 +4674,39 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                blkdat.SetLimit(nBlockPos + 80);\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                const uint256 hash = header.GetHash();\n                 {\n                     LOCK(cs_main);\n                     // detect out of order blocks, and store them for later\n-                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(block.hashPrevBlock)) {\n+                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(header.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n-                                block.hashPrevBlock.ToString());\n+                                header.hashPrevBlock.ToString());\n                         if (dbp)\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\n+                            mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\n+\n+                        // Position to the start of the next block.\n+                        nRewind = nBlockPos + nSize;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r388691811",
      "id" : 388691811,
      "in_reply_to_id" : 387834622,
      "line" : 4674,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY5MTgxMQ==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 4674,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 45,
      "pull_request_review_id" : 370057230,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388691811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r389199360"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389199360"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No functional change here, just refactoring a check that's repeated 4 times. (It's a macro rather than a function so that the line numbers report correctly.) This macro is misnamed (since it's not part of Boost), but it's so close to `BOOST_CHECK_THROW()` that this is probably the least confusing name. (But I can change it.)",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-07T00:01:46Z",
      "diff_hunk" : "@@ -202,6 +202,16 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n             std::string(ds.begin(), ds.end()));\n }\n \n+#define BOOST_CHECK_THROW_WHAT(statement, exception, str) \\\n+    do { \\\n+        try { \\\n+            statement; \\\n+            BOOST_CHECK(false); \\\n+        } catch (const exception& e) { \\\n+            BOOST_CHECK(strstr(e.what(), str) != nullptr); \\\n+        } \\\n+    } while (false)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r389199360",
      "id" : 389199360,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5OTM2MA==",
      "original_commit_id" : "f714ad1fe71d5822785cfc3df17ba56869a42ece",
      "original_line" : 214,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/test/streams_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 370694169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389199360",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r389203643"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389203643"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I did an experiment yesterday in which I simulated corruption in one of the `blk??.dat` files, and as I suspected, all the blocks beyond the coorrupted block were never accepted (because their parents were missing). But the node then seemed to get all the missed blocks from peers, and at the end all seemed good.\r\n\r\nAnthony, your suggestion is similar to what this PR originally did before I reduced its scope. You can see the discussion above, but to summarize here, the idea was to increase the size of the circular memory buffer (`CBufferedFile` object) so it could act as a cache, so that we could sometimes access blocks read earlier without having to re-read from disk; the concern was about increasing memory requirements. I think something along the lines I proposed or what you're proposing is likely to help further (especially tying it to mempool limit; that's a good idea), but I suggest keeping this PR limited (no change in memory, a definite improvement) if you don't mind.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-07T00:24:01Z",
      "diff_hunk" : "@@ -4674,29 +4674,39 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                blkdat.SetLimit(nBlockPos + 80);\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                const uint256 hash = header.GetHash();\n                 {\n                     LOCK(cs_main);\n                     // detect out of order blocks, and store them for later\n-                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(block.hashPrevBlock)) {\n+                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(header.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n-                                block.hashPrevBlock.ToString());\n+                                header.hashPrevBlock.ToString());\n                         if (dbp)\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\n+                            mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\n+\n+                        // Position to the start of the next block.\n+                        nRewind = nBlockPos + nSize;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r389203643",
      "id" : 389203643,
      "in_reply_to_id" : 387834622,
      "line" : 4674,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIwMzY0Mw==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 4674,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 45,
      "pull_request_review_id" : 370694169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389203643",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r389204282"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389204282"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "On the topic of the size being corrupted, if the size field is set to a uniformly distributed random value (or zero, probably the most likely), that is caught (see the check `nSize < 80 || nSize > MAX_BLOCK_SERIALIZED_SIZE` above); the probability that the corrupted value will be in that range is less than 0.1%. So most data corruption there will be detected.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-07T00:27:25Z",
      "diff_hunk" : "@@ -4674,29 +4674,39 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                blkdat.SetLimit(nBlockPos + 80);\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                const uint256 hash = header.GetHash();\n                 {\n                     LOCK(cs_main);\n                     // detect out of order blocks, and store them for later\n-                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(block.hashPrevBlock)) {\n+                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(header.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n-                                block.hashPrevBlock.ToString());\n+                                header.hashPrevBlock.ToString());\n                         if (dbp)\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\n+                            mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\n+\n+                        // Position to the start of the next block.\n+                        nRewind = nBlockPos + nSize;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r389204282",
      "id" : 389204282,
      "in_reply_to_id" : 387834622,
      "line" : 4674,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIwNDI4Mg==",
      "original_commit_id" : "a50f956e304adc7c75428ec391f1a76a99c1ddde",
      "original_line" : 4674,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 45,
      "pull_request_review_id" : 370694169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389204282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r389204803"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389204803"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@narula, this addresses your concern about holding `cs_main` while reading disk.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-07T00:30:17Z",
      "diff_hunk" : "@@ -4671,32 +4671,44 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                     continue;\n             } catch (const std::exception&) {\n                 // no valid block header found; don't complain\n+                // (this happens at the end of every blk.dat file)\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                // Read the rest of the block (from the end of its header to the end\n+                // of the block) to ensure it's in memory while holding cs_main (below).\n+                blkdat.Skip(nBlockPos + nSize - blkdat.GetPos());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r389204803",
      "id" : 389204803,
      "line" : 4657,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIwNDgwMw==",
      "original_commit_id" : "0e2746148225cbef8954b0c1081e135f6f23a661",
      "original_line" : 4657,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 24,
      "pull_request_review_id" : 370694169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389204803",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r389206063"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389206063"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I did verify that if I break this PR's code, this test doesn't pass. I know hardcoded constants are generally bad, but I think they're okay here, because the size of an empty `regtest` block is very unlikely to change, and if it does, this test will fail, and it should be pretty easy for someone to figure out why and fix the test. (That is, the test will not falsely succeed.)",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-03-07T00:37:15Z",
      "diff_hunk" : "@@ -20,18 +25,53 @@ def set_test_params(self):\n \n     def reindex(self, justchainstate=False):\n         self.nodes[0].generatetoaddress(3, self.nodes[0].get_deterministic_priv_key().address)\n+        self.sync_blocks()\n         blockcount = self.nodes[0].getblockcount()\n         self.stop_nodes()\n         extra_args = [[\"-reindex-chainstate\" if justchainstate else \"-reindex\"]]\n         self.start_nodes(extra_args)\n         wait_until(lambda: self.nodes[0].getblockcount() == blockcount)\n-        self.log.info(\"Success\")\n+\n+    # Check that blocks can be processed out of order\n+    def out_of_order(self):\n+        # The previous test created 12 blocks\n+        assert_equal(self.nodes[0].getblockcount(), 12)\n+        self.stop_nodes()\n+\n+        # In this test environment, blocks will always be in order (since\n+        # we're generating them rather than getting them from peers, so to\n+        # test out-of-order handling, swap blocks 1 and 2 on disk.\n+        blk0 = os.path.join(self.nodes[0].datadir, self.nodes[0].chain, 'blocks', 'blk00000.dat')\n+        with open(blk0, 'r+b') as bf:\n+            b = bf.read(814)\n+\n+            # This is really just checking the test; these are is the first\n+            # \"marker\" bytes of the four blocks, genesis and 3 more\n+            # (these offsets are extremely unlikely ever to change)\n+            assert_equal(b[0], 0xfa)\n+            assert_equal(b[293], 0xfa)\n+            assert_equal(b[553], 0xfa)\n+            assert_equal(b[813], 0xfa)\n+\n+            # Swap the same-size second and third blocks (don't change genesis).\n+            bf.seek(293)\n+            bf.write(b[553:813])\n+            bf.write(b[293:553])\n+\n+        extra_args = [[\"-reindex\", \"-debug=reindex\"]]\n+        self.start_nodes(extra_args)\n+        wait_until(lambda: self.nodes[0].getblockcount() > 0)\n+\n+        # All blocks should be accepted and processed.\n+        assert_equal(self.nodes[0].getblockcount(), 12)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r389206063",
      "id" : 389206063,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIwNjA2Mw==",
      "original_commit_id" : "0e2746148225cbef8954b0c1081e135f6f23a661",
      "original_line" : 67,
      "original_position" : 60,
      "original_start_line" : 35,
      "path" : "test/functional/feature_reindex.py",
      "position" : null,
      "pull_request_review_id" : 370694169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389206063",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Edit: I forgot to mention; this node has txindex *enabled*.\r\n\r\n* [x] Benchmarks running on a50f956e304adc7c75428ec391f1a76a99c1ddde:\r\n```\r\n25.11s user 163.37s system 7% cpu 39:53.51 total\r\n25.59s user 162.06s system 7% cpu 39:43.73 total\r\n25.35s user 161.31s system 7% cpu 39:16.82 total\r\n24.98s user 162.59s system 7% cpu 39:06.45 total\r\n25.36s user 162.80s system 8% cpu 39:01.81 total\r\n```\r\n\r\n* [x] With SCHED_BATCH off:\r\n```\r\n24.64s user 155.84s system 8% cpu 35:31.20 total\r\n25.22s user 156.17s system 8% cpu 36:08.64 total\r\n25.31s user 156.53s system 8% cpu 36:44.35 total\r\n25.08s user 156.75s system 8% cpu 37:30.11 total\r\n24.97s user 156.26s system 8% cpu 37:15.24 total\r\n```\r\n\r\n* [x] Master (too slow; only ran one time, on 3d28c886f077ce22fb7755fe9ec1f4e08d3d4a62):\r\n```\r\n4261.85s user 151.57s system 66% cpu 1:49:57.76 total\r\n```\r\n",
      "created_at" : "2020-03-07T02:13:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-596034040",
      "id" : 596034040,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NjAzNDA0MA==",
      "updated_at" : "2020-03-07T09:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596034040",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r403694969"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403694969"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This call to `SetLimit()` has been postponed down to [line 4706](https://github.com/bitcoin/bitcoin/pull/16981/files#diff-24efdb00bfbe56b140fb006b562cc70bR4706) where we read the block if it is in-order. There is no need to postpone it - reading the header should also not attempt a read beyond `nBlockPos + nSize` which is expected to be the end of the block.\r\n\r\nSo, I would suggest restore it here and remove it from below (line 4706).",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-04-05T12:27:13Z",
      "diff_hunk" : "@@ -4671,32 +4671,44 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                     continue;\n             } catch (const std::exception&) {\n                 // no valid block header found; don't complain\n+                // (this happens at the end of every blk.dat file)\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r403694969",
      "id" : 403694969,
      "line" : 4650,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5NDk2OQ==",
      "original_commit_id" : "0e2746148225cbef8954b0c1081e135f6f23a661",
      "original_line" : 4650,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 13,
      "pull_request_review_id" : 387813536,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403694969",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r403695617"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403695617"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We don't store the blocks for later. Suggestion:\r\n```suggestion\r\n                    // Store positions of out of order blocks for later.\r\n```",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-04-05T12:32:55Z",
      "diff_hunk" : "@@ -4671,32 +4671,44 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                     continue;\n             } catch (const std::exception&) {\n                 // no valid block header found; don't complain\n+                // (this happens at the end of every blk.dat file)\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                // Read the rest of the block (from the end of its header to the end\n+                // of the block) to ensure it's in memory while holding cs_main (below).\n+                blkdat.Skip(nBlockPos + nSize - blkdat.GetPos());\n+\n+                const uint256 hash = header.GetHash();\n                 {\n                     LOCK(cs_main);\n                     // detect out of order blocks, and store them for later",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r403695617",
      "id" : 403695617,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5NTYxNw==",
      "original_commit_id" : "0e2746148225cbef8954b0c1081e135f6f23a661",
      "original_line" : 4719,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 387813536,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403695617",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r403710433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403710433"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This `Skip()` can be skipped. What the PR does now is:\r\n\r\n1. Read from disk and deserialize the block header.\r\n2. Read from disk the remaining of the block with this `Skip()` call (just buffer it into `blkdat`).\r\n3. If it is out-of-order block, continue with the next block. Notice that even if the data we read from disk in 2. remains buffered in `blkdat`, we will never make use of it because we read out-of-order blocks using `ReadBlockFromDisk()` which will not use our `blkdat` cache and will read the block from disk _again_ (2x read).\r\n4. If it is in-order block, deserialize the cached data from 2.\r\n\r\nWe can do better (find a patch at the bottom of this comment):\r\n\r\n1. Read from disk and deserialize the block header.\r\n2. If it is out-of-order block, continue with the next block.\r\n3. If it is in-order block, read from disk and deserialize it.\r\n\r\nIt follows that we don't need the newly introduced method `Skip()` since we only call it here.\r\n\r\n<details>\r\n<summary>proposed change that skips the `Skip()` call (without IO while holding `cs_main`)</summary>\r\n\r\n```diff\r\ndiff --git i/src/validation.cpp w/src/validation.cpp\r\nindex 34a6e028b..705595625 100644\r\n--- i/src/validation.cpp\r\n+++ w/src/validation.cpp\r\n@@ -4657,39 +4657,42 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\r\n                 uint64_t nBlockPos = blkdat.GetPos();\r\n                 if (dbp)\r\n                     dbp->nPos = nBlockPos;\r\n                 CBlockHeader header;\r\n                 blkdat >> header;\r\n \r\n-                // Read the rest of the block (from the end of its header to the end\r\n-                // of the block) to ensure it's in memory while holding cs_main (below).\r\n-                blkdat.Skip(nBlockPos + nSize - blkdat.GetPos());\r\n-\r\n                 const uint256 hash = header.GetHash();\r\n+                bool outOfOrder;\r\n+\r\n                 {\r\n                     LOCK(cs_main);\r\n-                    // detect out of order blocks, and store them for later\r\n-                    if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(header.hashPrevBlock)) {\r\n-                        LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\r\n-                                header.hashPrevBlock.ToString());\r\n-                        if (dbp)\r\n-                            mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\r\n-\r\n-                        // Skip the rest of this block; position to the marker before the next block.\r\n-                        nRewind = nBlockPos + nSize;\r\n-                        continue;\r\n-                    }\r\n+                    outOfOrder =\r\n+                        hash != chainparams.GetConsensus().hashGenesisBlock\r\n+                        && !LookupBlockIndex(header.hashPrevBlock);\r\n+                }\r\n \r\n-                    // This block can be processed immediately; rewind to its start then read it.\r\n-                    blkdat.SetPos(nBlockPos);\r\n-                    blkdat.SetLimit(nBlockPos + nSize);\r\n-                    std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\r\n-                    CBlock& block = *pblock;\r\n-                    blkdat >> block;\r\n-                    nRewind = blkdat.GetPos();\r\n+                // Store positions of out of order blocks for later.\r\n+                if (outOfOrder) {\r\n+                    LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\r\n+                            header.hashPrevBlock.ToString());\r\n+                    if (dbp)\r\n+                        mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\r\n+                    // Skip the rest of this block; position to the marker before the next block.\r\n+                    nRewind = nBlockPos + nSize;\r\n+                    continue;\r\n+                }\r\n+\r\n+                // This block can be processed immediately; rewind to its start then read it.\r\n+                blkdat.SetPos(nBlockPos);\r\n+                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\r\n+                CBlock& block = *pblock;\r\n+                blkdat >> block;\r\n+                nRewind = blkdat.GetPos();\r\n \r\n+                {\r\n+                    LOCK(cs_main);\r\n                     // process in case the block isn't known yet\r\n                     CBlockIndex* pindex = LookupBlockIndex(hash);\r\n                     if (!pindex || (pindex->nStatus & BLOCK_HAVE_DATA) == 0) {\r\n                       BlockValidationState state;\r\n                       if (::ChainstateActive().AcceptBlock(pblock, state, chainparams, nullptr, true, dbp, nullptr)) {\r\n                           nLoaded++;\r\n```\r\n</details>",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-04-05T14:36:07Z",
      "diff_hunk" : "@@ -4671,32 +4671,44 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                     continue;\n             } catch (const std::exception&) {\n                 // no valid block header found; don't complain\n+                // (this happens at the end of every blk.dat file)\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                // Read the rest of the block (from the end of its header to the end\n+                // of the block) to ensure it's in memory while holding cs_main (below).\n+                blkdat.Skip(nBlockPos + nSize - blkdat.GetPos());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r403710433",
      "id" : 403710433,
      "line" : 4657,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxMDQzMw==",
      "original_commit_id" : "0e2746148225cbef8954b0c1081e135f6f23a661",
      "original_line" : 4657,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 24,
      "pull_request_review_id" : 387813536,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403710433",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r404479673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/404479673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, Vasil. Steps 1 and 2 (in your first list) are not separate disk reads; each disk read generally includes multiple blocks. The `CBufferedFile` object doesn't know (and has no way to know) where the block boundaries are, so it does as large a read as the buffer allows, which is about 4 MB (`MAX_BLOCK_SERIALIZED_SIZE = 4000000`). The buffer boundaries and block boundaries aren't synchronized in any way, so each read usually includes a partial block at the end. (Blocks never span `blk00nnn.dat` files.)\r\n\r\nI did consider changing this function to do exactly what you suggest -- read only the block header of each block, and read the rest of the block only if we can accept it immediately. We'd read fewer bytes from disk -- but the tradeoff is that we'd do many more read operations. It's unclear which is better. I suspect it would depend on the underlying kind of disk. I have an SSD, so small reads at different file offsets would probably be efficient, but if it's a spinning disk, doing fewer large reads is probably more efficient since there's less rotational delay.\r\n\r\nAlso, making that change would be more complex.\r\n\r\nDid you time your patch? When your patch sets `nRewind` to the beginning of the next block and takes the `continue` path, that rewind value is used as the argument to `blkdat.SetPos()` at [line 4656](https://github.com/LarryRuane/bitcoin/blob/0e2746148225cbef8954b0c1081e135f6f23a661/src/validation.cpp#L4656) in this PR. I added some debug prints, and as I suspected, that `SetPos()` call isn't always doing what we expect. The caller doesn't check its return value (there's much to be desired about this code); if it can't move ahead to the requested position, it [moves ahead as far as it can](https://github.com/LarryRuane/bitcoin/blob/0e2746148225cbef8954b0c1081e135f6f23a661/src/streams.h#L816) and returns `false`. \r\n\r\nWhen running your patch, `SetPos()` usually can move to the requested position, but about 30 times per file, it can't because it reaches the end of the buffer (`SetPos` isn't designed to read from disk). We end up usually positioned to the middle of a block, and then [`FindByte()`](https://github.com/LarryRuane/bitcoin/blob/0e2746148225cbef8954b0c1081e135f6f23a661/src/validation.cpp#L4663) searches for (and finds) the start of the next block. It works, but obviously it's not very efficient since each byte is inspected individually.\r\n\r\nI think the best way to avoid reading most blocks from disk twice is an idea I described in the last two paragraphs of [this comment](https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-594125403). But that's a much larger change and I don't know if it's worth it. But even if we implement that idea later, I still think this PR, as it is, has a high enough performance improvement to complexity ratio to be merged.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-04-07T01:13:12Z",
      "diff_hunk" : "@@ -4671,32 +4671,44 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                     continue;\n             } catch (const std::exception&) {\n                 // no valid block header found; don't complain\n+                // (this happens at the end of every blk.dat file)\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                // Read the rest of the block (from the end of its header to the end\n+                // of the block) to ensure it's in memory while holding cs_main (below).\n+                blkdat.Skip(nBlockPos + nSize - blkdat.GetPos());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r404479673",
      "id" : 404479673,
      "in_reply_to_id" : 403710433,
      "line" : 4657,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ3OTY3Mw==",
      "original_commit_id" : "0e2746148225cbef8954b0c1081e135f6f23a661",
      "original_line" : 4657,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 24,
      "pull_request_review_id" : 388721864,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/404479673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r404776506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/404776506"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Uh, oh. You are right that `SetPos()` must be within what has already been read into the buffer (`CBufferedFile::vchBuf`). I tried timing the suggested patch and it was either the same or ~1 min slower than the PR. This is within noise, but maybe is because of what you describe above (`FindByte()` checking every byte).\r\n\r\n`CBufferedFile` is indeed not designed to skip through data (without reading it from disk) and changing it to be able to do so would require some substantial changes and increase in its complexity.\r\n\r\nScrap this suggestion.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-04-07T12:41:16Z",
      "diff_hunk" : "@@ -4671,32 +4671,44 @@ bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n                     continue;\n             } catch (const std::exception&) {\n                 // no valid block header found; don't complain\n+                // (this happens at the end of every blk.dat file)\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n-                blkdat.SetLimit(nBlockPos + nSize);\n-                blkdat.SetPos(nBlockPos);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                CBlockHeader header;\n+                blkdat >> header;\n+\n+                // Read the rest of the block (from the end of its header to the end\n+                // of the block) to ensure it's in memory while holding cs_main (below).\n+                blkdat.Skip(nBlockPos + nSize - blkdat.GetPos());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r404776506",
      "id" : 404776506,
      "in_reply_to_id" : 403710433,
      "line" : 4657,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc3NjUwNg==",
      "original_commit_id" : "0e2746148225cbef8954b0c1081e135f6f23a661",
      "original_line" : 4657,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 24,
      "pull_request_review_id" : 389074556,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/404776506",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@vasild, thanks for the timings, I like both of your suggestions ([here](https://github.com/bitcoin/bitcoin/pull/16981#discussion_r403694969) and [here](https://github.com/bitcoin/bitcoin/pull/16981#discussion_r403695617)) so I just force-pushed both of them. I also fixed the reindex functional test, which I hadn't noticed has been broken for a month.\r\n\r\nOops, I accidentally force-pushed a rebase onto latest master (because I was trying out your [suggestion](https://github.com/bitcoin/bitcoin/pull/16981#discussion_r403710433), which didn't merge cleanly without rebasing), sorry about that, reviewers.",
      "created_at" : "2020-04-09T20:54:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-611747451",
      "id" : 611747451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMTc0NzQ1MQ==",
      "updated_at" : "2020-04-09T20:54:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/611747451",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK fbf708b8c\r\n\r\nCompiled and tested [locally](https://github.com/bitcoin/bitcoin/pull/16981#pullrequestreview-387813536).\r\n\r\nI viewed the changes introduced in the latest force-push (0e27461 -> fbf708b8c) using:\r\n```\r\ndiff -u <(git diff 0e27461~..0e27461) <(git diff fbf708b8c~..fbf708b8c)\r\n```\r\n\r\nDo you think it would be possible to demonstrate that it produces identical result as `master`? That is - reindex with `master`, dump the leveldb database from `blocks/index` in some textual form, reindex with this PR, dump again and compare the two dumps?",
      "created_at" : "2020-04-10T06:08:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-611894205",
      "id" : 611894205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMTg5NDIwNQ==",
      "updated_at" : "2020-04-10T06:08:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/611894205",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@vasild\r\n> Do you think it would be possible to demonstrate that it produces identical result as `master`? That is - reindex with `master`, dump the leveldb database from `blocks/index` in some textual form, reindex with this PR, dump again and compare the two dumps?\r\n\r\nThat's a good idea, but I can't find a tool to create such a dump. (Maybe that would be a nice addition to `contrib/`?)\r\n\r\nI did think of a test to convince me that it's working:\r\n\r\nI ran `bitcoind --reindex --maxconnections=0` and let it finish reindexing. Not just the first part that this PR modifies, but the entire reindex procedure, to the point it had logged an `UpdateTip` of a very recent block. Then, of course, it couldn't add new blocks because it had no peers.\r\n\r\nThen I restarted the client without any arguments, and it started syncing at that _very recent block height_ (since now it had peers) and within about a minute was fully synced.\r\n\r\nThis convinces me because once before I'd purposely damaged the first part of reindexing by simulating a disk read error early in the process, which resulted in one block not being processed. The client could not load blocks from that point onward, because this missing block's child couldn't be processed (parent is required), so that child block's child couldn't be processed, and so on, recursively. The system very nicely recovered by going into IBD mode and getting all blocks following that missing block from peers and then running normally.\r\n\r\nIf this PR broke the reindexing process, the same would have happened (it would have started IBD-ing from when the bug introduced damage, probably very early). But it didn't. It picked up downloading from a very recent height, and accepted these blocks (\"`UpdateTip: new best=...`\"), proving that all previous blocks were recorded correctly in the block index.\r\n\r\nWhat do you think, does that seem like a good test to you?",
      "created_at" : "2020-04-12T19:55:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-612667786",
      "id" : 612667786,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMjY2Nzc4Ng==",
      "updated_at" : "2020-04-12T19:55:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612667786",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I had an idea for a further speedup, but it didn't work out as well as I had hoped. It's about 10% faster, but probably should not be merged because the added complexity isn't worth it. The branch is here (based on this PR's branch plus a single commit): https://github.com/LarryRuane/bitcoin/tree/reindex-speedup-thread\r\n\r\nThe idea is to move the delayed processing of child blocks (delayed because the parent wasn't yet available) into a separate thread. This overlaps the child processing with the reading of the block files using the `CBufferedFile` object and deserializing the header, which is a natural separation. If the times to do those two things were equal, this would have given a 2x improvement. But some debug printing shows that processing the child blocks takes the majority of the time (the parent thread ends up waiting for the child thread near the bottom of the function). And, unfortunately, the processing of child blocks can't be multithreaded, because each child depends on its parent. (If there was a long chain split, it may be possible to process the two chains in parallel, but those are very rare.)",
      "created_at" : "2020-04-12T20:26:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-612671455",
      "id" : 612671455,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMjY3MTQ1NQ==",
      "updated_at" : "2020-04-12T20:26:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612671455",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code looks good to me so far but I would like it more if the refactoring was in a separate commit and the commit message could go into more detail on how the performance improvement is achieved.\r\n\r\nBut I am currently also having trouble to reproduce the performance improvement itself. I am comparing the current master (d8dfcea5d956126fe0e2b1f36db74c8ef805e7ab) with this PR and I am using testnet locally with no other special configurations. I am looking at the time span between `Reindexing block file blk00001.dat` and `Leaving InitialBlockDownload`, so this includes the entire reindex procedure.\r\n\r\nMy two runs with this PR were 1:10 h and 1:14 h while on master they were 1:05 h and 1:06 h. Any idea why that could be the case?",
      "created_at" : "2020-04-16T23:07:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-614941536",
      "id" : 614941536,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNDk0MTUzNg==",
      "updated_at" : "2020-04-16T23:07:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614941536",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, @fjahr, good idea, I just force-pushed three commits to replace the previous single commit so the changes are separated out more clearly. \r\n\r\nI also just updated the description, which was outdated.\r\n\r\nI timed testnet and this PR was 4 minutes faster than latest master (with this PR based on latest master). On mainnet, it's more like 24 minutes. I think the difference is that testnet blocks are smaller and less complex on average, so the savings of deserializing only the header instead of the entire block is less. If you still have your `debug.log` files, how much time was there between reindexing the first block file and `Reindexing finished`? That's the only phase of reindexing that this PR changes. I suspect there is enough randomness in the entire reindex that the 4 minutes advantage on testnet can be lost in the noise. \r\n\r\nOne suggestion, if you could try it again, is to start `bitcoind` with the `-maxconnections=0`. I think each time you start `bitcoind` you can get a different set of peers, and different peers can put a different load on your node, so not having any peers reduces the variance, at least that's been my experience.",
      "created_at" : "2020-04-18T02:51:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-615544013",
      "id" : 615544013,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNTU0NDAxMw==",
      "updated_at" : "2020-04-18T14:34:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/615544013",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> One suggestion, if you could try it again, is to start `bitcoind` with the `-maxconnections=0`. I think each time you start `bitcoind` you can get a different set of peers, and different peers can put a different load on your node, so not having any peers reduces the variance, at least that's been my experience.\r\n\r\nSorry, I should have said that I already set `-maxconnections=0`, I tried to replicate your setup described earlier. It wouldn't be the first time my laptop gets odd benchmark results (see https://github.com/bitcoin/bitcoin/pull/18352) but I don't see a direct connection.  ",
      "created_at" : "2020-04-19T22:13:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-616233679",
      "id" : 616233679,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNjIzMzY3OQ==",
      "updated_at" : "2020-04-19T22:13:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/616233679",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-05-06T13:49:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-624661090",
      "id" : 624661090,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyNDY2MTA5MA==",
      "updated_at" : "2020-05-06T13:49:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624661090",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed and rebased to fix merge conflicts. This PR had momentum for a while but that's faded. Reviewers may be put off by the number of comments, but the result of all the discussion is a much simpler PR. I believe all reviewers' comments have been addressed. I did make sure that the description (first comment) is up-to-date and accurate.\r\n\r\nI believe the tests may be the best aspect of this PR; see especially the `feature_reindex.py` functional test. It tests out-of-order block processing in `LoadExternalBlockFile()` which has never been (auto-) tested before. Even if all we merged from this PR is that test, it probably would be worth it. Thanks in advance for helping to get this PR over the hump.",
      "created_at" : "2020-07-13T05:38:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-657369436",
      "id" : 657369436,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzM2OTQzNg==",
      "updated_at" : "2020-07-13T20:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657369436",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The fixup commit `fix CI failures, same changes as #18216` would better be squashed into whichever commit introduced the failures.",
      "created_at" : "2020-07-13T18:28:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-657719430",
      "id" : 657719430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1NzcxOTQzMA==",
      "updated_at" : "2020-07-13T18:28:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657719430",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@vasild, good suggestion, done (squashed and force-pushed).\r\n\r\nI re-ran the timing experiments again since a lot has changed. I started the client with `maxconnections=0` (so it wouldn't be bothered by peers). I ran the experiments multiple times in a controlled environment, so the variation was very small. These are the times of the first phase of `-reindex` (reading the `blk?????.dat` files) on mainnet:\r\n\r\n|   | Real time (minutes, seconds) | User CPU time | System CPU time |\r\n| --- | --- | --- | --- |\r\n| master | 133m35s | 116m11s | 4m28s |\r\n| master + PR | 87m3s | 70m36s | 3m35s |\r\n\r\nThe real-time with the PR (probably what people care about most) is 65% of the real-time without this PR, or 46m32s faster.",
      "created_at" : "2020-07-13T23:36:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-657876663",
      "id" : 657876663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1Nzg3NjY2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-21T16:08:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/657876663",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-07-21T10:49:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-661783626",
      "id" : 661783626,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MTc4MzYyNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-21T10:49:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/661783626",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed rebase to eliminate merge conflict.",
      "created_at" : "2020-07-21T17:00:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-661983690",
      "id" : 661983690,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MTk4MzY5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-21T17:00:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/661983690",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r459735914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459735914"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "~How come you still use `read()` for this? You made the `memcpy` optional but if you are fast-forwarding past the buffer size, couldn't you still end up calling `Fill()` several times? Why not just add `nSize` to `nSrcPos` and `Seek()`?~\r\n\r\nNever mind, I see below you can keep the block in memory this way in case it *is* ready for processing. And the buffer size is big enough so my worry is moot.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-07-23T21:23:03Z",
      "diff_hunk" : "@@ -785,13 +785,20 @@ class CBufferedFile\n                 nNow = vchBuf.size() - pos;\n             if (nNow + nReadPos > nSrcPos)\n                 nNow = nSrcPos - nReadPos;\n-            memcpy(pch, &vchBuf[pos], nNow);\n+            if (pch) {\n+                memcpy(pch, &vchBuf[pos], nNow);\n+                pch += nNow;\n+            }\n             nReadPos += nNow;\n-            pch += nNow;\n             nSize -= nNow;\n         }\n     }\n \n+    //! move ahead in the stream\n+    void Skip(size_t nSize) {\n+        read(nullptr, nSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r459735914",
      "id" : 459735914,
      "line" : 762,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczNTkxNA==",
      "original_commit_id" : "da17e6efeeebf0c3fd1ce103812eda1ec7c26772",
      "original_line" : 762,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : 17,
      "pull_request_review_id" : 454505092,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459735914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r459751621"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459751621"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "no assert / `BOOST_CHECK` for this test?",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-07-23T21:58:47Z",
      "diff_hunk" : "@@ -403,6 +448,17 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n                 break;\n             }\n             case 3: {\n+                // Skip is similar to the \"read\" cases above, except\n+                // we don't receive the data.\n+                size_t nSize = InsecureRandRange(5);\n+                if (currentPos + nSize > fileSize)\n+                    continue;\n+                bf.SetLimit(currentPos + nSize);\n+                bf.Skip(nSize);\n+                currentPos += nSize;\n+                break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r459751621",
      "id" : 459751621,
      "line" : 465,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc1MTYyMQ==",
      "original_commit_id" : "da17e6efeeebf0c3fd1ce103812eda1ec7c26772",
      "original_line" : 465,
      "original_position" : 228,
      "original_start_line" : null,
      "path" : "src/test/streams_tests.cpp",
      "position" : 167,
      "pull_request_review_id" : 454505092,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459751621",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r459756399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459756399"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: \"these are the first...\"",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-07-23T22:10:30Z",
      "diff_hunk" : "@@ -27,11 +29,45 @@ def reindex(self, justchainstate=False):\n         assert_equal(self.nodes[0].getblockcount(), blockcount)  # start_node is blocking on reindex\n         self.log.info(\"Success\")\n \n+    # Check that blocks can be processed out of order\n+    def out_of_order(self):\n+        # The previous test created 12 blocks\n+        assert_equal(self.nodes[0].getblockcount(), 12)\n+        self.stop_nodes()\n+\n+        # In this test environment, blocks will always be in order (since\n+        # we're generating them rather than getting them from peers), so to\n+        # test out-of-order handling, swap blocks 1 and 2 on disk.\n+        blk0 = os.path.join(self.nodes[0].datadir, self.nodes[0].chain, 'blocks', 'blk00000.dat')\n+        with open(blk0, 'r+b') as bf:\n+            b = bf.read(814)\n+\n+            # This is really just checking the test; these are is the first",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r459756399",
      "id" : 459756399,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc1NjM5OQ==",
      "original_commit_id" : "da17e6efeeebf0c3fd1ce103812eda1ec7c26772",
      "original_line" : 45,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : null,
      "pull_request_review_id" : 454505092,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459756399",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r459834947"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459834947"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree that looks strange, but this `case` of the enclosing `switch` statement isn't an isolated test, we're within a 100-iteration loop. As the test continues to loop, any `Skip()` bug would cause the `BOOST_CHECK_EQUAL` at line 407 to fail (and also the other cases to fail since `currentPos` keeps track of where we should be in the stream).",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2020-07-24T03:23:32Z",
      "diff_hunk" : "@@ -403,6 +448,17 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n                 break;\n             }\n             case 3: {\n+                // Skip is similar to the \"read\" cases above, except\n+                // we don't receive the data.\n+                size_t nSize = InsecureRandRange(5);\n+                if (currentPos + nSize > fileSize)\n+                    continue;\n+                bf.SetLimit(currentPos + nSize);\n+                bf.Skip(nSize);\n+                currentPos += nSize;\n+                break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r459834947",
      "id" : 459834947,
      "in_reply_to_id" : 459751621,
      "line" : 465,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgzNDk0Nw==",
      "original_commit_id" : "da17e6efeeebf0c3fd1ce103812eda1ec7c26772",
      "original_line" : 465,
      "original_position" : 228,
      "original_start_line" : null,
      "path" : "src/test/streams_tests.cpp",
      "position" : 167,
      "pull_request_review_id" : 454616197,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/459834947",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-push to fix comment ([review suggestion](https://github.com/bitcoin/bitcoin/pull/16981#discussion_r459756399)), also took the opportunity to improve the test by checking for expected text in `debug.log`.",
      "created_at" : "2020-07-24T15:24:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-663593713",
      "id" : 663593713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzU5MzcxMw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663593713/reactions"
      },
      "updated_at" : "2022-04-09T23:13:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663593713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Running a -reindex benchmark on this; will report back with results.",
      "created_at" : "2020-07-24T15:47:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-663604250",
      "id" : 663604250,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzYwNDI1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-24T15:47:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663604250",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ran a pair of benchmark tests:\r\n\r\nWith PR: 1 hour, 8 minutes\r\n5b1e92f539c24b6518f577b92874ccac0bbf617f\r\n\r\n```\r\n2020-07-24T22:41:21Z Reindexing block file blk00000.dat...\r\n...\r\n2020-07-24T23:49:24Z Reindexing block file blk02165.dat...\r\n2020-07-24T23:49:27Z Loaded 126 blocks from external file in 2570ms\r\n2020-07-24T23:49:27Z Reindexing finished\r\n```\r\n\r\n\r\nWithout PR: 1 hour, 40 minutes\r\nHEAD~3 2c0c3f8e8ca6c64234b1861583f55da2bb385446\r\n```\r\n2020-07-25T00:29:27Z Reindexing block file blk00000.dat...\r\n...\r\n2020-07-25T02:10:48Z Reindexing block file blk02165.dat...\r\n2020-07-25T02:10:52Z Loaded 126 blocks from external file in 3120ms\r\n2020-07-25T02:10:52Z Reindexing finished\r\n```\r\n\r\nNice job @LarryRuane !",
      "created_at" : "2020-07-25T02:30:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-663796342",
      "id" : 663796342,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2Mzc5NjM0Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-25T02:30:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663796342",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2020-07-25T14:42:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-663863053",
      "id" : 663863053,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2Mzg2MzA1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-25T14:42:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663863053",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 5b1e92f539c24b6518f577b92874ccac0bbf617f\r\n\r\nI did a fresh re-review of the code. I currently don't have access to the machine [where I saw no speed-up before](https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-614941536) but I ran another test on a different machine and that confirms the benchmarks that others have seen here: 2:05h on current master vs. 1:22h with this PR.",
      "created_at" : "2020-07-25T20:29:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-663902935",
      "id" : 663902935,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzkwMjkzNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-25T20:30:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663902935",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Benchmarked and tested 5b1e92f539c24b6518f577b92874ccac0bbf617f on Linux Mint 20 (x86_64).\r\n\r\nSetup:\r\n- block height=640740\r\n- recent block file `blk02168.dat`\r\n- commad-line arguments: `-nonetworkactive -reindex`\r\n\r\n**master** (40a04814d130dfc9131af3f568eb44533e2bcbfc)\r\n```\r\n2020-07-25T14:56:14Z [main] Bitcoin Core version v0.20.99.0-40a04814d (release build)\r\n...\r\n2020-07-25T14:56:14Z [loadblk] loadblk thread start\r\n2020-07-25T14:56:14Z [loadblk] Reindexing block file blk00000.dat...\r\n...\r\n2020-07-25T16:29:02Z [loadblk] Reindexing block file blk02167.dat...\r\n2020-07-25T16:29:03Z [loadblk] Loaded 2 blocks from external file in 1515ms\r\n2020-07-25T16:29:03Z [loadblk] Reindexing block file blk02168.dat...\r\n2020-07-25T16:29:14Z [loadblk] Loaded 837 blocks from external file in 10413ms\r\n2020-07-25T16:29:14Z [loadblk] Reindexing finished\r\n2020-07-25T16:29:14Z [loadblk] Pre-allocating up to position 0x100000 in rev00000.dat\r\n2020-07-25T16:29:14Z [loadblk] UpdateTip: new best=00000000839a8e6886ab5951d76f411475428afc90947ee320161bbf18eb6048 height=1 version=0x00000001 log2_work=33.000022 tx=2 date='2009-01-09T02:54:25Z' progress=0.000000 cache=0.0MiB(1txo)\r\n...\r\n2020-07-25T21:00:01Z [loadblk] UpdateTip: new best=0000000000000000000f9ddd409d655a2e420c442a877813a7697289a84d4525 height=640740 version=0x37ffe000 log2_work=92.145733 tx=551982677 date='2020-07-25T14:51:51Z' progress=0.999868 cache=586.0MiB(4419378txo)\r\n2020-07-25T21:00:01Z [loadblk] Leaving InitialBlockDownload (latching to false)\r\n2020-07-25T21:00:01Z [loadblk] Imported mempool transactions from disk: 137 succeeded, 0 failed, 0 expired, 0 already there, 0 waiting for initial broadcast\r\n2020-07-25T21:00:01Z [loadblk] loadblk thread exit\r\n...\r\n```\r\n\r\n**master + this PR**\r\n```\r\n2020-07-25T21:14:58Z [main] Bitcoin Core version v0.20.99.0-b0a2130fb (release build)\r\n...\r\n2020-07-25T21:14:58Z [loadblk] loadblk thread start\r\n2020-07-25T21:14:58Z [loadblk] Reindexing block file blk00000.dat...\r\n...\r\n2020-07-25T22:13:00Z [loadblk] Reindexing block file blk02167.dat...\r\n2020-07-25T22:13:01Z [loadblk] Loaded 0 blocks from external file in 1233ms\r\n2020-07-25T22:13:01Z [loadblk] Reindexing block file blk02168.dat...\r\n2020-07-25T22:13:02Z [loadblk] Loaded 0 blocks from external file in 1210ms\r\n2020-07-25T22:13:02Z [loadblk] Reindexing finished\r\n2020-07-25T22:13:02Z [loadblk] Pre-allocating up to position 0x100000 in rev00000.dat\r\n2020-07-25T22:13:02Z [loadblk] UpdateTip: new best=00000000839a8e6886ab5951d76f411475428afc90947ee320161bbf18eb6048 height=1 version=0x00000001 log2_work=33.000022 tx=2 date='2009-01-09T02:54:25Z' progress=0.000000 cache=0.0MiB(1txo)\r\n...\r\n2020-07-26T01:09:08Z [loadblk] UpdateTip: new best=000000000000000001ee925f0e1570c6b61990ac9777fd4a73983b623494e894 height=467466 version=0x20000002 log2_work=86.465712 tx=224507800 date='2017-05-21T16:50:34Z' progress=0.408111 cache=256.7MiB(1729948txo)\r\n2020-07-26T01:09:09Z [loadblk] Imported mempool transactions from disk: 1 succeeded, 136 failed, 0 expired, 0 already there, 0 waiting for initial broadcast\r\n2020-07-26T01:09:09Z [loadblk] loadblk thread exit\r\n...\r\n```\r\n\r\n---\r\n\r\nPlease note some differences:\r\n- log messages about the `blk02168.dat` reindexing: **837** vs **0** blocks\r\n- block height at which the `loadblk` thread exits: 640740 vs 467466\r\n- this PR log lacks `Leaving InitialBlockDownload (latching to false)` log message\r\n- `Imported mempool transactions from disk` transaction statistics",
      "created_at" : "2020-07-26T07:32:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-663951709",
      "id" : 663951709,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2Mzk1MTcwOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-26T07:35:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663951709",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Also the resulted index sizes differ substantially:\r\n- master (40a04814d130dfc9131af3f568eb44533e2bcbfc):\r\n```\r\n$ ls -l\r\ntotal 168532\r\n-rw------- 1 hebasto hebasto 83614454 Jul 26 15:59 000003.log\r\n-rw------- 1 hebasto hebasto       27 Jul 26 15:59 000004.log\r\n-rw------- 1 hebasto hebasto 88941405 Jul 26 15:59 000005.ldb\r\n-rw------- 1 hebasto hebasto       16 Jul 26 14:15 CURRENT\r\n-rw------- 1 hebasto hebasto        0 Jul 26 14:15 LOCK\r\n-rw------- 1 hebasto hebasto       50 Jul 26 14:15 MANIFEST-000002\r\n```\r\n\r\n- master + this PR:\r\n```\r\n$ ls -l\r\ntotal 122436\r\n-rw------- 1 hebasto hebasto 60722874 Jul 26 14:07 000003.log\r\n-rw------- 1 hebasto hebasto       27 Jul 26 14:07 000004.log\r\n-rw------- 1 hebasto hebasto 64632267 Jul 26 14:07 000005.ldb\r\n-rw------- 1 hebasto hebasto       16 Jul 26 13:09 CURRENT\r\n-rw------- 1 hebasto hebasto        0 Jul 26 13:09 LOCK\r\n-rw------- 1 hebasto hebasto       50 Jul 26 13:09 MANIFEST-000002\r\n```",
      "created_at" : "2020-07-26T13:06:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-663985777",
      "id" : 663985777,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2Mzk4NTc3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-26T13:06:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663985777",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I found the root of all differences in logs:\r\n- master (40a04814d130dfc9131af3f568eb44533e2bcbfc):\r\n```\r\n[loadblk] Reindexing block file blk00877.dat...\r\n...\r\n[loadblk] LoadExternalBlockFile: Processing out of order child 000000000000000001ee925f0e1570c6b61990ac9777fd4a73983b623494e894 of 000000000000000001d22f4d6a05420ba43ee2eb457efea06be8280f8a5f14d2\r\n[loadblk] LoadExternalBlockFile: Deserialize or I/O error - ReadCompactSize(): size too large: iostream error\r\n...\r\n[loadblk] Loaded 98 blocks from external file\r\n[loadblk] Reindexing block file blk00878.dat...\r\n...\r\n```\r\n\r\n- master + this PR\r\n```\r\n[loadblk] Reindexing block file blk00877.dat...\r\n...\r\n[loadblk] LoadExternalBlockFile: Processing out of order child 000000000000000001ee925f0e1570c6b61990ac9777fd4a73983b623494e894 of 000000000000000001d22f4d6a05420ba43ee2eb457efea06be8280f8a5f14d2\r\n...\r\n[loadblk] Loaded 68 blocks from external file\r\n[loadblk] Reindexing block file blk00878.dat...\r\n...\r\n```\r\n\r\nIs this change in error handling behavior expected?",
      "created_at" : "2020-07-26T13:53:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-663990865",
      "id" : 663990865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2Mzk5MDg2NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-26T13:53:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663990865",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I haven't looked closely at the changes here or the debug.log from these runs, but reindexing to 450,000 isn't showing much difference on my end between the HEAD of this branch and [the mergebase](https://github.com/bitcoin/bitcoin/commit/2c0c3f8e8ca6c64234b1861583f55da2bb385446).\r\n\r\n![image](https://user-images.githubusercontent.com/73197/88484131-8b479b00-cf3a-11ea-8aec-473fa8693081.png)\r\n",
      "created_at" : "2020-07-26T16:23:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-664008897",
      "id" : 664008897,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDAwODg5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-26T16:23:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664008897",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jamesob \r\nWill try to describe a problem better. The `blocks/blk00877.dat` file is somehow broken on _my_ disk.\r\n\r\nThe master branch:\r\n- encounter an error in `blkdat >> block`\r\n- reports about an error with the \"Deserialize or I/O error...\"\r\n- tries to read from the next position\r\n\r\nThis PR:\r\n- no error during `blkdat >> header`\r\n- a broken block (or just random bytes) just treated as a block with unknown parent\r\n\r\nAn example with this PR:\r\n```\r\n$ ./src/bitcoind -loadblock=/home/hebasto/blk00877.dat.error\r\n...\r\n2020-07-26T17:19:28Z [loadblk] loadblk thread start\r\n2020-07-26T17:19:28Z [loadblk] Importing blocks file /home/hebasto/blk00877.dat.error...\r\n...\r\n2020-07-26T17:19:28Z [loadblk] LoadExternalBlockFile: Out of order block eda32a9dea60fff9b0c4df31a425cd6d0e19b74f4c88d8f08a5b8f9e04265872, parent 01ee925f0e1570c6b61990ac9777fd4a73983b623494e89420000000000f3aee not known\r\n...\r\n```\r\n\r\nPlease note that blocks\r\n- `eda32a9dea60fff9b0c4df31a425cd6d0e19b74f4c88d8f08a5b8f9e04265872`, and\r\n- `01ee925f0e1570c6b61990ac9777fd4a73983b623494e89420000000000f3aee`\r\njust do not exist in the Universe yet :)",
      "created_at" : "2020-07-26T17:25:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-664016897",
      "id" : 664016897,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDAxNjg5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-26T17:26:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664016897",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "May I suggest a patch:\r\n```diff\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -4719,6 +4719,7 @@ void LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\r\n                 blkdat.Skip(nBlockPos + nSize - blkdat.GetPos());\r\n \r\n                 const uint256 hash = header.GetHash();\r\n+                if (!CheckProofOfWork(hash, header.nBits, chainparams.GetConsensus())) continue;\r\n                 {\r\n                     LOCK(cs_main);\r\n                     // Store positions of out of order blocks for later.\r\n```\r\n\r\nthat makes loading blocks from files bullet-proof?\r\n\r\nThe excerpt from the log (master + this PR + patch):\r\n```\r\n...\r\n2020-07-27T14:10:13Z [loadblk] loadblk thread start\r\n2020-07-27T14:10:13Z [loadblk] Reindexing block file blk00000.dat...\r\n...\r\n2020-07-27T15:33:46Z [loadblk] Reindexing block file blk02167.dat...\r\n2020-07-27T15:33:47Z [loadblk] Loaded 2 blocks from external file in 1282ms\r\n2020-07-27T15:33:47Z [loadblk] Reindexing block file blk02168.dat...\r\n2020-07-27T15:33:58Z [loadblk] Loaded 837 blocks from external file in 10813ms\r\n2020-07-27T15:33:58Z [loadblk] Reindexing finished\r\n...\r\n```\r\n\r\nIt takes 84 min to build a new block index vs 93 min on master (see https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-663951709), that is ~10% improvement.\r\n\r\n\r\n",
      "created_at" : "2020-07-27T15:43:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-664474119",
      "id" : 664474119,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NDQ3NDExOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-27T16:20:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/664474119",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jamesob:\r\n> ... reindexing to 450,000 isn't showing much difference on my end between the HEAD of this branch and the mergebase\r\n\r\nThat's strange. What does reindexing to 450,000 mean? I didn't know you can do that. Is it reindexing _up to_ that height, or only beyond that height?\r\n\r\nAre the `debug.log` files still available for those runs? I'd be curious to know when the message `Reindexing finished` appears relative to the start, because this PR should only affect that part of a `-reindex` run.",
      "created_at" : "2020-07-28T20:06:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-665252207",
      "id" : 665252207,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTI1MjIwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-28T20:06:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665252207",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think the benchmarks for this PR should additionally provide \"Out of order block...\" log message count. The lower this count is the lower `-reindex` speedup should be expected.",
      "created_at" : "2020-07-29T07:54:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-665499996",
      "id" : 665499996,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTQ5OTk5Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-29T07:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665499996",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@hebasto, thank you for doing all those tests. I did more testing (that's why I changed this PR to a Draft), and I'm now convinced there's no functionally important difference between master and this PR when there's data corruption in the `blk.dat` files. There can be a behavior and timing difference, but I don't think it matters. The behavior difference (as you have explained) is that if there's corruption in the middle of a block's serialization on disk, it's most likely not in the header, and because this PR only initially deserializes the header, the corruption isn't detected immediately. master deserializes the entire block, so it detects it immediately.\r\n\r\nAssume there's corruption in the middle of a block (not in the header). This happens within `LoadExternalBlockFile()`:\r\n\r\nWith master, the ``blkdat >> block`` throws an exception, this is caught and the `catch` handler prints \"`Deserialize or I/O error`\", and we move on to the next block. So it was as if that block didn't exist in the `blk.dat` files.\r\n\r\nWith this PR, the same thing happens if the block can be processed immediately (that is, if we've already seen its parent). Otherwise, an entry gets added to \r\n`mapBlocksUnknownParent` and we move on to the next block, and the corruption is undetected for now. A short time later, we reach this corrupt block's parent and then call `ReadBlockFromDisk()` on the corrupt block, which detects the corruption, logs the error, and returns `false`. `LoadExternalBlockFile()` just continues, so, again, it's as if this block didn't exist in the `blk.dat` files.\r\n\r\n_In both cases_ (with and without this PR), subsequent blocks no longer have `AcceptBlock()` called on them, because the chain is broken (the corrupt block is a missing link in the blockchain unless the block happens to not be part of the best chain, which is unlikely). All these blocks just get added to `mapBlocksUnknownParent` (and never removed and processed).\r\n\r\n<details>\r\n<summary>Here's a patch to simulate corruption</summary>\r\n\r\n```diff\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -4720,8 +4720,20 @@ void LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\r\n                     if (hash != chainparams.GetConsensus().hashGenesisBlock && !LookupBlockIndex(block.hashPrevBlock)) {\r\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\r\n                                 block.hashPrevBlock.ToString());\r\n-                        if (dbp)\r\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\r\n+                        static bool docorrupt = true;\r\n+                        // simulate corruption in the first block that doesn't have a parent yet\r\n+                        if (dbp) {\r\n+                            if (docorrupt) {\r\n+                                // Simulate corruption in the first block that can't be processed\r\n+                                // immediately (that's when there's a difference between master\r\n+                                // and the PR) -- don't add an entry to mapBlocksUnknownParent.\r\n+                                docorrupt = false;\r\n+                                LogPrintf(\"%s: simulate corruption block %s, parent %s\\n\", __func__, hash.ToString(),\r\n+                                        block.hashPrevBlock.ToString());\r\n+                            } else {\r\n+                                mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\r\n+                            }\r\n+                        }\r\n                         continue;\r\n                     }\r\n \r\n@@ -4778,13 +4790,13 @@ void LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\r\n                     }\r\n                 }\r\n             } catch (const std::exception& e) {\r\n-                LogPrintf(\"%s: Deserialize or I/O error - %s\\n\", __func__, e.what());\r\n+                LogPrintf(\"%s: Deserialize or I/O error - %s pos %s offset %d\\n\", __func__, e.what(), dbp->ToString(), blkdat.GetPos());\r\n             }\r\n         }\r\n     } catch (const std::runtime_error& e) {\r\n         AbortNode(std::string(\"System error: \") + e.what());\r\n     }\r\n-    LogPrintf(\"Loaded %i blocks from external file in %dms\\n\", nLoaded, GetTimeMillis() - nStart);\r\n+    LogPrintf(\"Loaded %i blocks from external file in %dms mapBlocksUnknownParent size %i\\n\", nLoaded, GetTimeMillis() - nStart, mapBlocksUnknownParent.size());\r\n }\r\n \r\n void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\r\n```\r\n(The final `LogPrintf` in the function also prints the number of entries in `mapBlocksUnknownParent`.) \r\n</details>\r\n\r\nHere's the output when I run this on master on testnet:\r\n```\r\n2020-07-30T19:55:07Z Reindexing block file blk00000.dat...\r\n2020-07-30T19:55:11Z Loaded 753 blocks from external file in 3837ms mapBlocksUnknownParent size 85998\r\n2020-07-30T19:55:11Z Reindexing block file blk00001.dat...\r\n2020-07-30T19:55:14Z Loaded 0 blocks from external file in 2985ms mapBlocksUnknownParent size 139893\r\n2020-07-30T19:55:14Z Reindexing block file blk00002.dat...\r\n2020-07-30T19:55:17Z Loaded 0 blocks from external file in 3162ms mapBlocksUnknownParent size 202285\r\n(...)\r\n2020-07-30T20:05:43Z Reindexing block file blk00185.dat...\r\n2020-07-30T20:05:47Z Loaded 0 blocks from external file in 3997ms mapBlocksUnknownParent size 1781217\r\n```\r\nIt's always zero blocks loaded from then on. Then (either with this PR or master), it enters the `ActivateBestChain` phase, and it gets blocks from peers. So it automatically goes into IBD mode. When it gets near the tip.  It finishes syncing, it logs `InitialBlockDownload (latching to false)`, and then runs normally. I verified that if I restart the node, it's still synced, and runs normally. This is both with and without the PR.",
      "created_at" : "2020-07-31T03:58:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-666901951",
      "id" : 666901951,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjkwMTk1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-09T17:48:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666901951",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@LarryRuane\r\n\r\nYou described the scenario when a _block is corrupted_ within a block file.\r\nIn my situation (don't know how it was happened though) a block file has random/broken bytes but _all block are correct_ within it.\r\n\r\nTherefore, with the [suggested](https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-664474119) patch `--reindex` completes without getting blocks from peers.",
      "created_at" : "2020-07-31T09:45:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-667035766",
      "id" : 667035766,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzAzNTc2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T09:47:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667035766",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> a block file has random/broken bytes but _all block are correct_ within it. \r\n\r\nCan you explain more? Where exactly is the corruption?",
      "created_at" : "2020-08-01T15:35:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-667549400",
      "id" : 667549400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzU0OTQwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-01T15:35:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667549400",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > a block file has random/broken bytes but _all block are correct_ within it.\r\n> \r\n> Can you explain more? Where exactly is the corruption?\r\n\r\n[blk00877.dat.error](https://drive.google.com/file/d/1WSfWcHcmdA5NhgBI8HkvrLG11dH0bcgy/view?usp=sharing)",
      "created_at" : "2020-08-01T15:46:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-667550754",
      "id" : 667550754,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzU1MDc1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-01T15:46:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667550754",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "#### TL;DR\r\nI think the PR is good as it is can and should be merged.\r\n\r\n@hebasto, I understand exactly what's going on, and having that corrupted file really helped, thanks. Before explaining what I found, can you try a different fix, this will confirm my understanding. At [this point](https://github.com/LarryRuane/bitcoin/blob/5b1e92f539c24b6518f577b92874ccac0bbf617f/src/validation.cpp#L4730) in `LoadExternalBlockFile()`:\r\n```\r\n// Skip the rest of this block; position to the marker before the next block.\r\nnRewind = nBlockPos + nSize;\r\n```\r\nJust comment out that setting of `nRewind`. I expect that all the blocks will load (you won't see `Loaded 0 blocks...` messages).\r\n\r\n#### Explanation\r\nThere's a bad block whose [marker bytes](https://github.com/bitcoin/bitcoin/blob/3c93623be20d534bb653410db03d38152135e2e6/src/chainparams.cpp#L97), 0xf9, 0xbe, 0xb4, 0xd9, start at offset 0x3147657. The size field that follows is 0xf3afd = 998141, which is reasonable. This is the number of bytes of the serialized block. If you move ahead that many bytes in the stream, you should be at the marker bytes of the next block (or be at the end of the file). That should be 0x3147657 + 4 + 4 + 998141 = 0x323b15c. Looking at that part of the hex dump of the file, we see:\r\n```\r\n0323b150  ac ad 21 07 00 f9 be b4  d9 03 3b 0f 00 02 00 00  |..!.......;.....|\r\n```\r\nThat's 16 bytes, and offset 0xc should be the next marker bytes, but instead we see the marker bytes starting at offset 0x5. These are the marker bytes for a legitimate block, and if we don't load it, all subsequent blocks will have no parent.\r\n\r\nSo, with the PR, what happens is, we deserialize just the header, and it's probably impossible for that to fail because it's just 80 bytes and everything is fixed-sized. Its parent isn't found (of course, since its prevhash is garbage, doesn't even start with zeros), so we add an entry to `mapBlocksUnknownParent[]`, and then _skip ahead_ to where we think the next block's marker bytes start. But that's just beyond where the marker bytes are, so miss that entire block. We get resynchronized (`FindByte()`) with the _following_ block.\r\n\r\nIn contrast, with master, the attempt to deserialize the entire block fails, so we resynchronize starting at the byte after that bad block's first marker byte, and thus we do find and load this block.\r\n\r\nThe additional call to `CheckProofOfWork()` that @hebasto [suggested](https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-664474119) acts here as a sanity-check on the block header, which this nonsense header fails, so then again we attempt to resynchronize starting at the byte after that bad block's first marker byte, and we find the next block.\r\n\r\nSo, a way to summarize the problem is that this PR makes the block size (that follows the marker bytes, `nSize`) more important than it is with master. On master, when we fail to deserialize the block, we go back to resynchronizing with the stream (looking for the marker bytes) and the block size isn't used.\r\n\r\nOne thing we can do to fix this in this PR is that, after deserializing just the header, if its parent hasn't been seen, then after adding it to `mapBlocksUnknownParent`, we could resynchronize with the stream, instead of just skipping ahead by the size of the block. We can do that by removing [this line](https://github.com/LarryRuane/bitcoin/blob/5b1e92f539c24b6518f577b92874ccac0bbf617f/src/validation.cpp#L4730). But that would be much slower. \r\n\r\n<details>\r\n<summary>I coded a patch to speed up `FindByte()`</summary>\r\n\r\n```diff\r\n--- a/src/streams.h\r\n+++ b/src/streams.h\r\n@@ -851,12 +851,21 @@ public:\r\n \r\n     //! search for a given byte in the stream, and remain positioned on it\r\n     void FindByte(char ch) {\r\n+        // start is the index into vchBuf[] at which to start searching\r\n+        size_t start = nReadPos % vchBuf.size();\r\n         while (true) {\r\n             if (nReadPos == nSrcPos)\r\n                 Fill();\r\n-            if (vchBuf[nReadPos % vchBuf.size()] == ch)\r\n-                break;\r\n-            nReadPos++;\r\n+            size_t n = vchBuf.size() - start;\r\n+            if (n > nSrcPos - nReadPos)\r\n+                n = nSrcPos - nReadPos;\r\n+            auto it_start = vchBuf.begin()+start;\r\n+            auto it_find = std::find(it_start, it_start+n, ch);\r\n+            size_t inc = it_find - it_start;\r\n+            nReadPos += inc;\r\n+            if (inc < n) break;\r\n+            start += inc;\r\n+            if (start >= vchBuf.size()) start = 0;\r\n         }\r\n```\r\n</details>\r\n\r\nAnd this works, and is much faster (`std::find()` seems to be very efficient in this case).\r\n\r\nBut on further reflection, I don't think we should do this, because this fixes only this specific kind of file corruption -- _this problem can happen anyway_. There can be all kinds of corruption that makes a block unserializable, and once that happens, all subsequent blocks cannot be loaded. But I have seen that when this occurs, the node is able to download blocks from peers and synchronize with the network anyway. It's true that it doesn't seem to _correct_  damaged `blk.dat` files, but if that's worth doing, it should be for a separate PR.\r\n\r\nBut I'll do some benchmarking to see if this resynchronizing (with the faster `FindByte()`) is close to the PR as it is now, and if it's only a few percent slower, maybe it's worth doing. I'll give an update later.",
      "created_at" : "2020-08-04T15:06:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-668652146",
      "id" : 668652146,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2ODY1MjE0Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-09T17:44:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668652146",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I benchmarked this latest version, and it's only 3% slower than the PR version. This latest version has the faster `FindByte()` and also resynchronizes with the byte stream in the (very common) case where, after deserializing only the header, the parent hasn't yet been seen. This is instead of depending on the `nSize` value (moving ahead by this much). This makes reindexing more tolerant of various kinds of file corruption (as good as master). So I'll push that as a separate commit; I think the added robustness is worth it (and this is still much faster than master).",
      "created_at" : "2020-08-05T16:20:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-669291519",
      "id" : 669291519,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTI5MTUxOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T16:20:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669291519",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@LarryRuane \r\n\r\n1. `FindByte()` speed up is great, but combining two different speed optimizing solutions in a single PR is not a good idea. I'd suggest to separate the `FindByte()` patch into a dedicated PR that will allow to measure each optimization approach individually.\r\n\r\n2. Resynchronizing on each out-of-order block (commenting out `nRewind = nBlockPos + nSize;`) indeed improves robustness. Let's compare two solutions:\r\n- resynchronizing on each header that fails `CheckProofOfWork()` (https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-664474119) has a small constant time (optimized hashing) overhead per each block\r\n- resynchronizing on each out-of-order block has a much greater time overhead (reading operations) per each out-of-order block, and the number of such blocks can vary from user to user. Moreover, this approach inserts into `mapBlocksUnknownParent` a piece of junk that will cause additional time overhead while searching through this map\r\n\r\nTherefore, I'd strictly prefer the former approach.\r\n\r\n3. While touching log message you could combine ideas from #19600.",
      "created_at" : "2020-08-06T03:17:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-669658597",
      "id" : 669658597,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTY1ODU5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T03:17:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669658597",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@hebasto, that makes sense, I took your suggestion. Force-pushed ([diff](https://github.com/bitcoin/bitcoin/compare/ab68fdfae59dea806493f8542486bbb4ae07a3cb..ad386f705cd2879dccfb3e1ce0dbcf5b6f8e1ad6)). The only slight change I made from your suggestion is this:\r\n```\r\nif (!CheckProofOfWork(hash, header.nBits, chainparams.GetConsensus())) continue;\r\n{\r\n    LOCK(cs_main);\r\n    (...)\r\n```\r\nlooks somewhat like this large block of code is within the `if` statement (if you don't notice the `continue`). So I wrote the `continue` on a separate line.",
      "created_at" : "2020-08-07T15:12:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-670565889",
      "id" : 670565889,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDU2NTg4OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-07T15:12:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670565889",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@LarryRuane \r\n\r\nThanks!\r\n\r\nTwo last commits with the same messages are confusing. Did you mean that they should be a single commit (that seems reasonable)?\r\n\r\n",
      "created_at" : "2020-08-07T15:38:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-670578322",
      "id" : 670578322,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDU3ODMyMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-07T15:38:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670578322",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Two last commits with the same messages are confusing\r\n\r\nYes, that was a mistake, thanks for catching that. Force-pushed ([diff](https://github.com/bitcoin/bitcoin/compare/ab68fdfae59dea806493f8542486bbb4ae07a3cb..e5724b5fde855b67ff500e21f11274f12b5c893a)).",
      "created_at" : "2020-08-07T17:38:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-670630054",
      "id" : 670630054,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDYzMDA1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-07T17:38:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670630054",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Was writing a review on e5724b5fde855b67ff500e21f11274f12b5c893a and noticed a fresh push. What is its goal?",
      "created_at" : "2020-08-07T21:05:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-670713050",
      "id" : 670713050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDcxMzA1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-07T21:05:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670713050",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@hebasto, you're too quick! Sorry, I confused myself with my lack of git skills... I just make a force-push to do a small cleanup ([diff](https://github.com/bitcoin/bitcoin/compare/e5724b5fde855b67ff500e21f11274f12b5c893a..84b995a9ef468e0badf7bc0378851ea8c698dfc7)) and ended up doing some extra commits by mistake. I had noticed that the `\"-debug=reindex\"` in the python test was unneeded, because the test nodes are started with `\"-debug\"` (which turns on all debug logging).",
      "created_at" : "2020-08-07T21:11:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-670715066",
      "id" : 670715066,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDcxNTA2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-07T21:11:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670715066",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I ran another round of benchmarks of a reindex up to block 600_000 on 84b995a9ef468e0badf7bc0378851ea8c698dfc7 ~(it says ibd on the graph, but it's a reindex).~\r\n\r\n~There is a definite speedup but with a much wider range of peak memory usage:~\r\n[edit: I got this wrong. Will repost with the proper results.]",
      "created_at" : "2020-08-16T00:31:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-674462103",
      "id" : 674462103,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NDQ2MjEwMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-17T15:01:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674462103",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@pinheadmz, @hebasto, I just added another commit, please review. I discovered an additional minor performance improvement in the case where the block is already present in the block index (the message `Block Import: already had block ...` appears). This happens when you start with `-reindex` but the client stops before completing, and you start again without `-reindex`. I didn't attempt to measure the performance difference. I recommend [ignoring whitespace](https://github.com/bitcoin/bitcoin/pull/16981/commits/969366d07c8cfdf8ea56cdb2ae11f5c648152345?w=1) because I took the chance to fix some broken indentation since I'm changing some of those exact lines.",
      "created_at" : "2020-08-24T05:03:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-678904875",
      "id" : 678904875,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODkwNDg3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T19:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678904875",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@LarryRuane top commit makes sense to me, no point in reading the block data if we already have it. I'm running another reindex now to test it out, and will also try to get an \"already had...\" message. Also digesting the suggestion by @hebasto to skip corrupted block headers. Am able to modify the test by adding \"corrupt\" bytes and make sure the process just skips the block instead of completely borking.",
      "created_at" : "2020-08-25T17:13:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-680156588",
      "id" : 680156588,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDE1NjU4OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T20:45:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680156588",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The latest commit 969366d07c8cfdf8ea56cdb2ae11f5c648152345 looks good, but it adds _another_ behavior change into this PR. I think it deserves its own PR to get the measurable effects from each improvement.",
      "created_at" : "2020-09-12T17:23:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-691519856",
      "id" : 691519856,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MTUxOTg1Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-12T17:23:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691519856",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The latest commit [969366d](https://github.com/bitcoin/bitcoin/commit/969366d07c8cfdf8ea56cdb2ae11f5c648152345) looks good, but it adds _another_ behavior change into this PR. I think it deserves its own PR to get the measurable effects from each improvement.\r\n\r\nI see it differently. In my view, there's only one behavior change, which is \"don't deserialize the full block unless necessary.\" If initially, I had made a single commit that's the same as what are now two commits, no one would have been said this is two behavior changes. What happened instead is that I simply missed one of the code paths in which it's not necessary to deserialize the entire block (only the header is needed). I made a second, separate commit to fix that only because some reviewers may have already seen the first commit. These two commits should probably be squashed. I see no reason to measure the performance of the two commits separately. It's clear that if one of these commits is worth merging, the other one is too.",
      "created_at" : "2020-09-13T16:59:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-691696570",
      "id" : 691696570,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MTY5NjU3MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-13T16:59:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691696570",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK ",
      "created_at" : "2020-12-10T06:34:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-742274907",
      "id" : 742274907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MjI3NDkwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-10T06:34:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742274907",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/60179867?v=4",
         "events_url" : "https://api.github.com/users/decryp2kanon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/decryp2kanon/followers",
         "following_url" : "https://api.github.com/users/decryp2kanon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/decryp2kanon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/decryp2kanon",
         "id" : 60179867,
         "login" : "decryp2kanon",
         "node_id" : "MDQ6VXNlcjYwMTc5ODY3",
         "organizations_url" : "https://api.github.com/users/decryp2kanon/orgs",
         "received_events_url" : "https://api.github.com/users/decryp2kanon/received_events",
         "repos_url" : "https://api.github.com/users/decryp2kanon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/decryp2kanon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/decryp2kanon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/decryp2kanon"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-02-01T13:11:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-770846348",
      "id" : 770846348,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MDg0NjM0OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-01T13:11:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/770846348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased, no changes except to improve a few of the commit messages.",
      "created_at" : "2021-02-08T23:05:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-775522982",
      "id" : 775522982,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NTUyMjk4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-08T23:05:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/775522982",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r584336514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584336514"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Rather not call our own macros `BOOST_*`...",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2021-02-28T18:19:48Z",
      "diff_hunk" : "@@ -9,6 +9,18 @@\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+// This is a macro rather than a function so that failure\n+// line numbers are reported correctly.\n+#define BOOST_CHECK_THROW_STR(statement, exception, str)   \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r584336514",
      "id" : 584336514,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDMzNjUxNA==",
      "original_commit_id" : "632499c6308fae226e0ba42f339f94b8b91dbff1",
      "original_line" : 14,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/test/streams_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 600287891,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:53:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584336514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r594312678"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594312678"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Rather not call our own macros `BOOST_*` ...\r\n\r\nGood point; I just removed this (new) macro because it's out of the scope for this PR, force-pushed (but didn't rebase).",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2021-03-15T12:59:16Z",
      "diff_hunk" : "@@ -9,6 +9,18 @@\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+// This is a macro rather than a function so that failure\n+// line numbers are reported correctly.\n+#define BOOST_CHECK_THROW_STR(statement, exception, str)   \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r594312678",
      "id" : 594312678,
      "in_reply_to_id" : 584336514,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDMxMjY3OA==",
      "original_commit_id" : "632499c6308fae226e0ba42f339f94b8b91dbff1",
      "original_line" : 14,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/test/streams_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 612160110,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T12:59:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594312678",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r594316847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594316847"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Update: I removed this new test macro, `BOOST_CHECK_THROW_STR()`, because it's out of scope for this PR.",
      "commit_id" : "2cfb34cbb51efa13e7d4fc0f10ce5d2acd8080cf",
      "created_at" : "2021-03-15T13:05:34Z",
      "diff_hunk" : "@@ -202,6 +202,16 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n             std::string(ds.begin(), ds.end()));\n }\n \n+#define BOOST_CHECK_THROW_WHAT(statement, exception, str) \\\n+    do { \\\n+        try { \\\n+            statement; \\\n+            BOOST_CHECK(false); \\\n+        } catch (const exception& e) { \\\n+            BOOST_CHECK(strstr(e.what(), str) != nullptr); \\\n+        } \\\n+    } while (false)\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r594316847",
      "id" : 594316847,
      "in_reply_to_id" : 389199360,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDMxNjg0Nw==",
      "original_commit_id" : "f714ad1fe71d5822785cfc3df17ba56869a42ece",
      "original_line" : 214,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/test/streams_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 612165954,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-03-15T13:05:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594316847",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-06-12T04:43:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-859997496",
      "id" : 859997496,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg1OTk5NzQ5Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-12T04:43:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859997496",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased to resolve merge conflicts.",
      "created_at" : "2021-06-14T03:58:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-860345351",
      "id" : 860345351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg2MDM0NTM1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-14T03:58:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860345351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-06-29T04:23:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-870220468",
      "id" : 870220468,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDg3MDIyMDQ2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-06-29T04:23:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870220468",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed rebase for merge conflicts, and also, @hebasto, I had added a call to `CheckProofOfWork()` as you suggested in [this comment](https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-664474119) above, but I looked more carefully and found that this function is already called as part of importing each block (reindexing), so I removed that call as part of this rebase. It would help performance only if many blocks failed this check, but very few, if any, do.",
      "created_at" : "2021-07-28T00:50:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-887927953",
      "id" : 887927953,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII58407LSR",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-28T00:50:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/887927953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased (no changes to this PR's code), there were no conflicts but just because some people would like to review, nice to have a fresh base.",
      "created_at" : "2021-11-20T17:28:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-974683066",
      "id" : 974683066,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII5846GHu6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974683066/reactions"
      },
      "updated_at" : "2021-11-20T17:28:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974683066",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r754659833"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754659833"
         }
      },
      "author_association" : "NONE",
      "body" : "It looks like we're deserializing the header twice now. CBlock already has a constructor that takes a CBlockHeader, so potentially we could use that for another minor performance improvement? However, I think that would prevent us from using the overloaded >> operator - but I'm not familiar with this at all. So, probably you'll want to keep it like this, but I'm just flagging in case anyone sees any opportunities here?",
      "commit_id" : "f8f9ba31f3bc927c0295dac342b77e655129a616",
      "created_at" : "2021-11-22T21:48:35Z",
      "diff_hunk" : "@@ -4174,31 +4174,44 @@ void CChainState::LoadExternalBlockFile(FILE* fileIn, FlatFilePos* dbp)\n                     continue;\n             } catch (const std::exception&) {\n                 // no valid block header found; don't complain\n+                // (this happens at the end of every blk.dat file)\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n                 blkdat.SetLimit(nBlockPos + nSize);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n+                CBlockHeader header;\n+                blkdat >> header;\n \n-                uint256 hash = block.GetHash();\n+                // Read the rest of the block (from the end of its header to the end\n+                // of the block) to ensure it's in memory while holding cs_main (below).\n+                blkdat.Skip(nBlockPos + nSize - blkdat.GetPos());\n+\n+                const uint256 hash = header.GetHash();\n                 {\n                     LOCK(cs_main);\n-                    // detect out of order blocks, and store them for later\n-                    if (hash != m_params.GetConsensus().hashGenesisBlock && !m_blockman.LookupBlockIndex(block.hashPrevBlock)) {\n+                    // Store positions of out of order blocks for later.\n+                    if (hash != m_params.GetConsensus().hashGenesisBlock && !m_blockman.LookupBlockIndex(header.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n-                                block.hashPrevBlock.ToString());\n+                            header.hashPrevBlock.ToString());\n                         if (dbp)\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\n+                            mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\n+\n+                        // Skip the rest of this block; position to the marker before the next block.\n+                        nRewind = nBlockPos + nSize;\n                         continue;\n                     }\n \n+                    // This block can be processed immediately; rewind to its start then read it.\n+                    blkdat.SetPos(nBlockPos);\n+                    std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n+                    CBlock& block = *pblock;\n+                    blkdat >> block;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r754659833",
      "id" : 754659833,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584s-zH5",
      "original_commit_id" : "0908d01954e737bb7309941f5a6eaff930ba4f30",
      "original_line" : 4212,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 813051361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754659833/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-22T23:04:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754659833",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r754671610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754671610"
         }
      },
      "author_association" : "NONE",
      "body" : "Also, I think technically you could release/reacquire the lock before/after the block serialization, but I'm not sure if that would be a net positive improvement? I can imagine there will be a performance penalty for doing that.",
      "commit_id" : "f8f9ba31f3bc927c0295dac342b77e655129a616",
      "created_at" : "2021-11-22T22:08:55Z",
      "diff_hunk" : "@@ -4174,31 +4174,44 @@ void CChainState::LoadExternalBlockFile(FILE* fileIn, FlatFilePos* dbp)\n                     continue;\n             } catch (const std::exception&) {\n                 // no valid block header found; don't complain\n+                // (this happens at the end of every blk.dat file)\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n                 blkdat.SetLimit(nBlockPos + nSize);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n+                CBlockHeader header;\n+                blkdat >> header;\n \n-                uint256 hash = block.GetHash();\n+                // Read the rest of the block (from the end of its header to the end\n+                // of the block) to ensure it's in memory while holding cs_main (below).\n+                blkdat.Skip(nBlockPos + nSize - blkdat.GetPos());\n+\n+                const uint256 hash = header.GetHash();\n                 {\n                     LOCK(cs_main);\n-                    // detect out of order blocks, and store them for later\n-                    if (hash != m_params.GetConsensus().hashGenesisBlock && !m_blockman.LookupBlockIndex(block.hashPrevBlock)) {\n+                    // Store positions of out of order blocks for later.\n+                    if (hash != m_params.GetConsensus().hashGenesisBlock && !m_blockman.LookupBlockIndex(header.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n-                                block.hashPrevBlock.ToString());\n+                            header.hashPrevBlock.ToString());\n                         if (dbp)\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\n+                            mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\n+\n+                        // Skip the rest of this block; position to the marker before the next block.\n+                        nRewind = nBlockPos + nSize;\n                         continue;\n                     }\n \n+                    // This block can be processed immediately; rewind to its start then read it.\n+                    blkdat.SetPos(nBlockPos);\n+                    std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n+                    CBlock& block = *pblock;\n+                    blkdat >> block;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r754671610",
      "id" : 754671610,
      "in_reply_to_id" : 754659833,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584s-1_6",
      "original_commit_id" : "0908d01954e737bb7309941f5a6eaff930ba4f30",
      "original_line" : 4212,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 813051361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754671610/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-11-22T23:04:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/754671610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r764578472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764578472"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the excellent and helpful review!\r\n\r\n> It looks like we're deserializing the header twice now\r\n\r\nYes, but since the header is only 80 bytes (less than 0.01% of a 1 MB block), this likely isn't much of a problem. Besides, I don't think it's possible to deserialize a header, and then deserialize only the _rest_ of the block, and end up with a `CBlock`.\r\n\r\n> the amount of code executed under cs_main lock increases, since it is now used during the entire block deserialization ...\r\n> you could release/reacquire the lock before/after the block serialization\r\n\r\nYes, good point, I implemented a patch to not hold `cs_main` while deserializing the block (then it's acquired and released 3 times per block read from disk, rather than once). The result was that the reindex time was slower by 15 minutes -- only about 1% but still measurable (although I don't know how much of that difference is due to random variation). I think not much else is going on during reindex; there are other threads in the system but they're just sleeping, so I don't think it's okay to leave it as it is.",
      "commit_id" : "f8f9ba31f3bc927c0295dac342b77e655129a616",
      "created_at" : "2021-12-08T06:22:09Z",
      "diff_hunk" : "@@ -4174,31 +4174,44 @@ void CChainState::LoadExternalBlockFile(FILE* fileIn, FlatFilePos* dbp)\n                     continue;\n             } catch (const std::exception&) {\n                 // no valid block header found; don't complain\n+                // (this happens at the end of every blk.dat file)\n                 break;\n             }\n             try {\n-                // read block\n+                // read block header\n                 uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n                 blkdat.SetLimit(nBlockPos + nSize);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n+                CBlockHeader header;\n+                blkdat >> header;\n \n-                uint256 hash = block.GetHash();\n+                // Read the rest of the block (from the end of its header to the end\n+                // of the block) to ensure it's in memory while holding cs_main (below).\n+                blkdat.Skip(nBlockPos + nSize - blkdat.GetPos());\n+\n+                const uint256 hash = header.GetHash();\n                 {\n                     LOCK(cs_main);\n-                    // detect out of order blocks, and store them for later\n-                    if (hash != m_params.GetConsensus().hashGenesisBlock && !m_blockman.LookupBlockIndex(block.hashPrevBlock)) {\n+                    // Store positions of out of order blocks for later.\n+                    if (hash != m_params.GetConsensus().hashGenesisBlock && !m_blockman.LookupBlockIndex(header.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n-                                block.hashPrevBlock.ToString());\n+                            header.hashPrevBlock.ToString());\n                         if (dbp)\n-                            mapBlocksUnknownParent.insert(std::make_pair(block.hashPrevBlock, *dbp));\n+                            mapBlocksUnknownParent.insert(std::make_pair(header.hashPrevBlock, *dbp));\n+\n+                        // Skip the rest of this block; position to the marker before the next block.\n+                        nRewind = nBlockPos + nSize;\n                         continue;\n                     }\n \n+                    // This block can be processed immediately; rewind to its start then read it.\n+                    blkdat.SetPos(nBlockPos);\n+                    std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n+                    CBlock& block = *pblock;\n+                    blkdat >> block;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r764578472",
      "id" : 764578472,
      "in_reply_to_id" : 754659833,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584tkoqo",
      "original_commit_id" : "0908d01954e737bb7309941f5a6eaff930ba4f30",
      "original_line" : 4212,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 826047082,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764578472/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-12-08T06:22:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/764578472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I tested the performance of this PR on a Raspberry Pi 4 (RPi4, a myNode), and this PR reduces the reindex real-time by 7 hours (from 28h15m down to 21h15m for the first phase of reindex (reading the blocks from disk into the block index). This is, admittedly, a best-case comparison, because the RPi has a slow CPU, so not deserializing most blocks twice is a significant win.",
      "created_at" : "2021-12-08T06:43:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-988543445",
      "id" : 988543445,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII58466_nV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/988543445/reactions"
      },
      "updated_at" : "2021-12-08T06:43:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/988543445",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "One further update on performance measurement: most of the `-reindex` time is spent in the second phase during which the node is building the best chain (the `UpdateTip: new best=` log messages), and this PR doesn't change this part of the reindex process. This myNode required 4 days and 15 hours to complete the _entire_ reindex (both phases). The 7 hours improvement is, of course, a much smaller fraction of this time, about 6%. That's not as dramatic but still significant. \r\n\r\nThe reindex time was probably affected by the following configuration settings (which are the default for myNode, but I don't know what all these do):\r\n```\r\ntxindex=1\r\ndbcache=1000\r\nmaxorphantx=10\r\nmaxmempool=250\r\nmaxconnections=40\r\nmaxuploadtarget=1000\r\n```\r\nEnabling `txindex` definitely slows down reindex, so without that option, the percentage improvement from this PR would increase slightly (but I don't know by how much). Tor was also enabled, but I don't think that affects reindex time.\r\n\r\nI recall that IBD on this myNode took 2 or 3 weeks (I wish I had measured it, I can do that if anyone's interested), so, at least on this hardware, doing a reindex is a much better option than a full IBD, to minimize both elapsed time and network usage.",
      "created_at" : "2021-12-10T19:19:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-991232082",
      "id" : 991232082,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII5847FQBS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/991232082/reactions"
      },
      "updated_at" : "2021-12-10T19:19:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/991232082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "tACK f8f9ba31f\r\n\r\nI finished my performance review, and the results seem to align with Larry's findings:\r\n\r\nThe test setup is as follows: on each machine, I ran the [first part of the reindex](https://github.com/bitcoin/bitcoin/blob/4ad59042b359f473d5888ecee0c9288dcf98f1c9/src/node/blockstorage.cpp#L503-L519) multiple times consecutively to also measure the stability of the timings. This set of reindexes was ran both on `bitcoin:master` branch as well as on `LarryRuane:reindex-speedup` f8f9ba31f.\r\n\r\nOn my laptop, reindexing took 1h43 mins on average (n=3) on `master` branch. On f8f9ba31f, the average (n=3) took only 1h13m, a decrease of 29%.\r\nOn my Raspberry Pi 4, reindexing took 18h46 mins on average (n=2) on `master` branch. On f8f9ba31f, the average (n=2) took only 13h27m, a decrease of 28%.\r\n\r\nAcross all these runs, the maximum runtime difference on each setup was < 4%, so even though sample size is pretty small, the results look quite reliable.",
      "created_at" : "2021-12-17T17:28:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-996895214",
      "id" : 996895214,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII5847a2nu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/996895214/reactions"
      },
      "updated_at" : "2021-12-17T17:28:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/996895214",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed to implement review suggestion to not hold `cs_main` while deserializing the block, also clean up the commits, ready for review.",
      "created_at" : "2021-12-27T07:18:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1001389089",
      "id" : 1001389089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII5847r_wh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1001389089/reactions"
      },
      "updated_at" : "2021-12-27T07:18:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1001389089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased to latest master to fix CI failure.",
      "created_at" : "2021-12-27T20:19:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1001732726",
      "id" : 1001732726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII5847tTp2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1001732726/reactions"
      },
      "updated_at" : "2021-12-27T23:23:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1001732726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Checking the reindex performance of the latest commit 7da6497bd7f0eaf6d20a1d0f83a2c849f3ba344f, on my Dell XPS-15 laptop, mainnet, default configuration except `txindex` is enabled. I also specified `-networkactive=0` to eliminate any possible measurement noise caused by background networking activity (reindexing does not require any networking).\r\n\r\nThe result is that the reduction in reindex time with this PR is 82 minutes (from 362 minutes on master, down to 280 minutes with the PR for the first part of reindexing, adding all blocks to the index).\r\n\r\nI also measured CPU time, and it's 81 minutes lower with this PR, which makes sense since this PR is a CPU-time improvement.\r\n\r\n@hebasto, @fjahr, @vasild, @kallewoof, @pinheadmz, @stickies-v , would you mind taking another look and re-ACK if appropriate? Thanks.\r\n",
      "created_at" : "2021-12-28T19:03:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1002242444",
      "id" : 1002242444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII5847vQGM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1002242444/reactions"
      },
      "updated_at" : "2021-12-28T19:03:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1002242444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-01-27T20:10:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1023597728",
      "id" : 1023597728,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII5849Atyg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1023597728/reactions"
      },
      "updated_at" : "2022-01-27T20:10:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1023597728",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed dd83d9e to fix CI failure with 5a9387d, which had a hidden merge conflict with #22932. This actually reduced the size and complexity of this patch.",
      "created_at" : "2022-02-08T00:20:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1032078518",
      "id" : 1032078518,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII5849hES2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1032078518/reactions"
      },
      "updated_at" : "2022-02-08T00:20:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1032078518",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-04-17T16:58:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1100915447",
      "id" : 1100915447,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585BnqL3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100915447/reactions"
      },
      "updated_at" : "2022-04-17T16:58:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100915447",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed to resolve hidden conflict, and make the functional test less brittle (not rely on hardcoded constants).",
      "created_at" : "2022-06-09T05:20:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1150681579",
      "id" : 1150681579,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585ElgHr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1150681579/reactions"
      },
      "updated_at" : "2022-06-09T05:20:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1150681579",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-07-29T15:47:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1199584618",
      "id" : 1199584618,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585HgDVq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1199584618/reactions"
      },
      "updated_at" : "2022-07-29T15:47:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1199584618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed rebase due to conflict with #25571",
      "created_at" : "2022-08-01T18:08:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1201539779",
      "id" : 1201539779,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585HngrD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1201539779/reactions"
      },
      "updated_at" : "2022-08-01T18:08:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1201539779",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r935753732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935753732"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I think we usually put comments before the relevant section?\r\n```suggestion\r\n        // Use SetPos() to back up in the stream, not SkipTo().\r\n        assert(file_pos >= m_read_pos);\r\n```",
      "commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "created_at" : "2022-08-02T15:43:37Z",
      "diff_hunk" : "@@ -684,6 +684,26 @@ class CBufferedFile\n         }\n     }\n \n+    //! move the read position ahead in the stream to the given position\n+    void SkipTo(const uint64_t file_pos) {\n+        assert(file_pos >= m_read_pos);\n+        // Use SetPos() to back up in the stream, not SkipTo().",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r935753732",
      "id" : 935753732,
      "line" : 690,
      "node_id" : "PRRC_kwDOABII5843xngE",
      "original_commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "original_line" : 690,
      "original_position" : 7,
      "original_start_line" : 689,
      "path" : "src/streams.h",
      "position" : 7,
      "pull_request_review_id" : 1059001444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935753732/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 689,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-02T20:41:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935753732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r935776926"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935776926"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think it's worth the optimization so just thinking out loud, but for large skips (many times the buffer size) it would seem `Fill()` can be optimized to temporarily ignore `nRewind` so larger chunks (of size `vchBuf.size()` instead of `vchBuf.size() - nRewind`) are read at once? I don't think we need to guarantee a rewind _during_ the `SkipTo()`, until we've reached the destination position?",
      "commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "created_at" : "2022-08-02T16:06:30Z",
      "diff_hunk" : "@@ -684,6 +684,26 @@ class CBufferedFile\n         }\n     }\n \n+    //! move the read position ahead in the stream to the given position\n+    void SkipTo(const uint64_t file_pos) {\n+        assert(file_pos >= m_read_pos);\n+        // Use SetPos() to back up in the stream, not SkipTo().\n+        if (file_pos > nReadLimit) {\n+            throw std::ios_base::failure(\"Attempt to position past buffer limit\");\n+        }\n+        while (m_read_pos < file_pos) {\n+            if (m_read_pos == nSrcPos)\n+                Fill();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r935776926",
      "id" : 935776926,
      "line" : 696,
      "node_id" : "PRRC_kwDOABII5843xtKe",
      "original_commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "original_line" : 696,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : 13,
      "pull_request_review_id" : 1059001444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935776926/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-02T20:43:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935776926",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r935786002"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935786002"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could use list initialization?\r\n```suggestion\r\n            unsigned int pos{m_read_pos % vchBuf.size()};\r\n            size_t nNow{file_pos - m_read_pos};\r\n```",
      "commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "created_at" : "2022-08-02T16:15:49Z",
      "diff_hunk" : "@@ -684,6 +684,26 @@ class CBufferedFile\n         }\n     }\n \n+    //! move the read position ahead in the stream to the given position\n+    void SkipTo(const uint64_t file_pos) {\n+        assert(file_pos >= m_read_pos);\n+        // Use SetPos() to back up in the stream, not SkipTo().\n+        if (file_pos > nReadLimit) {\n+            throw std::ios_base::failure(\"Attempt to position past buffer limit\");\n+        }\n+        while (m_read_pos < file_pos) {\n+            if (m_read_pos == nSrcPos)\n+                Fill();\n+            unsigned int pos = m_read_pos % vchBuf.size();\n+            size_t nNow = file_pos - m_read_pos;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r935786002",
      "id" : 935786002,
      "line" : 698,
      "node_id" : "PRRC_kwDOABII5843xvYS",
      "original_commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "original_line" : 698,
      "original_position" : 15,
      "original_start_line" : 697,
      "path" : "src/streams.h",
      "position" : 15,
      "pull_request_review_id" : 1059001444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935786002/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 697,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-02T20:41:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/935786002",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r936003857"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936003857"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You could also use the built-in `find()` function I think:\r\n```suggestion\r\n                return b.find(b'\\xfa\\xbf\\xb5\\xda', start)+4\r\n```",
      "commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "created_at" : "2022-08-02T20:34:55Z",
      "diff_hunk" : "@@ -27,11 +29,60 @@ def reindex(self, justchainstate=False):\n         assert_equal(self.nodes[0].getblockcount(), blockcount)  # start_node is blocking on reindex\n         self.log.info(\"Success\")\n \n+    # Check that blocks can be processed out of order\n+    def out_of_order(self):\n+        # The previous test created 12 blocks\n+        assert_equal(self.nodes[0].getblockcount(), 12)\n+        self.stop_nodes()\n+\n+        # In this test environment, blocks will always be in order (since\n+        # we're generating them rather than getting them from peers), so to\n+        # test out-of-order handling, swap blocks 1 and 2 on disk.\n+        blk0 = os.path.join(self.nodes[0].datadir, self.nodes[0].chain, 'blocks', 'blk00000.dat')\n+        with open(blk0, 'r+b') as bf:\n+            # Read at least the first few blocks (including genesis)\n+            b = bf.read(2000)\n+\n+            # Find the offsets of blocks 2, 3, and 4 (the first 3 blocks beyond genesis)\n+            # by searching for the regtest marker bytes (see pchMessageStart).\n+            def find_block(b, start):\n+                while [b[start+i] for i in range(4)] != [0xfa, 0xbf, 0xb5, 0xda]:\n+                    start += 1\n+                return start+4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r936003857",
      "id" : 936003857,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII5843ykkR",
      "original_commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "original_line" : 51,
      "original_position" : 34,
      "original_start_line" : 49,
      "path" : "test/functional/feature_reindex.py",
      "position" : 34,
      "pull_request_review_id" : 1059001444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936003857/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 49,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-02T20:41:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936003857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r936006556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936006556"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could use list initialization?\r\n\r\n```suggestion\r\n                size_t nSize{InsecureRandRange(5)};\r\n```",
      "commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "created_at" : "2022-08-02T20:38:33Z",
      "diff_hunk" : "@@ -399,6 +448,17 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n                 break;\n             }\n             case 3: {\n+                // SkipTo is similar to the \"read\" cases above, except\n+                // we don't receive the data.\n+                size_t nSize = InsecureRandRange(5);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r936006556",
      "id" : 936006556,
      "line" : 453,
      "node_id" : "PRRC_kwDOABII5843ylOc",
      "original_commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "original_line" : 453,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/test/streams_tests.cpp",
      "position" : 80,
      "pull_request_review_id" : 1059001444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936006556/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-02T20:41:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936006556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r936006795"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936006795"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could use list initialization?\r\n\r\n```suggestion\r\n                const uint64_t nBlockPos{blkdat.GetPos()};\r\n```",
      "commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "created_at" : "2022-08-02T20:38:53Z",
      "diff_hunk" : "@@ -4296,42 +4298,49 @@ void CChainState::LoadExternalBlockFile(\n                     continue;\n             } catch (const std::exception&) {\n                 // no valid block header found; don't complain\n+                // (this happens at the end of every blk.dat file)\n                 break;\n             }\n             try {\n-                // read block\n-                uint64_t nBlockPos = blkdat.GetPos();\n+                // read block header\n+                const uint64_t nBlockPos = blkdat.GetPos();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r936006795",
      "id" : 936006795,
      "line" : 4306,
      "node_id" : "PRRC_kwDOABII5843ylSL",
      "original_commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "original_line" : 4306,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 20,
      "pull_request_review_id" : 1059001444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936006795/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-02T20:41:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936006795",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r936007173"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936007173"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could use list initialization?\r\n\r\n```suggestion\r\n                const uint256 hash{header.GetHash()};\r\n```",
      "commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "created_at" : "2022-08-02T20:39:22Z",
      "diff_hunk" : "@@ -4296,42 +4298,49 @@ void CChainState::LoadExternalBlockFile(\n                     continue;\n             } catch (const std::exception&) {\n                 // no valid block header found; don't complain\n+                // (this happens at the end of every blk.dat file)\n                 break;\n             }\n             try {\n-                // read block\n-                uint64_t nBlockPos = blkdat.GetPos();\n+                // read block header\n+                const uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n                 blkdat.SetLimit(nBlockPos + nSize);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                CBlockHeader header;\n+                blkdat >> header;\n+                const uint256 hash = header.GetHash();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r936007173",
      "id" : 936007173,
      "line" : 4312,
      "node_id" : "PRRC_kwDOABII5843ylYF",
      "original_commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "original_line" : 4312,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 32,
      "pull_request_review_id" : 1059001444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936007173/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-02T20:41:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936007173",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r936007551"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936007551"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could use list initialization?\r\n\r\n```suggestion\r\n                        std::shared_ptr<CBlock> pblock{std::make_shared<CBlock>()};\r\n```",
      "commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "created_at" : "2022-08-02T20:39:51Z",
      "diff_hunk" : "@@ -4296,42 +4298,49 @@ void CChainState::LoadExternalBlockFile(\n                     continue;\n             } catch (const std::exception&) {\n                 // no valid block header found; don't complain\n+                // (this happens at the end of every blk.dat file)\n                 break;\n             }\n             try {\n-                // read block\n-                uint64_t nBlockPos = blkdat.GetPos();\n+                // read block header\n+                const uint64_t nBlockPos = blkdat.GetPos();\n                 if (dbp)\n                     dbp->nPos = nBlockPos;\n                 blkdat.SetLimit(nBlockPos + nSize);\n-                std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n-                CBlock& block = *pblock;\n-                blkdat >> block;\n-                nRewind = blkdat.GetPos();\n-\n-                uint256 hash = block.GetHash();\n+                CBlockHeader header;\n+                blkdat >> header;\n+                const uint256 hash = header.GetHash();\n+                // Skip the rest of this block (this may read from disk into memory); position to the marker before the\n+                // next block, but it's still possible to rewind to the start of the current block (without a disk read).\n+                nRewind = nBlockPos + nSize;\n+                blkdat.SkipTo(nRewind);\n                 {\n                     LOCK(cs_main);\n                     // detect out of order blocks, and store them for later\n-                    if (hash != m_params.GetConsensus().hashGenesisBlock && !m_blockman.LookupBlockIndex(block.hashPrevBlock)) {\n+                    if (hash != m_params.GetConsensus().hashGenesisBlock && !m_blockman.LookupBlockIndex(header.hashPrevBlock)) {\n                         LogPrint(BCLog::REINDEX, \"%s: Out of order block %s, parent %s not known\\n\", __func__, hash.ToString(),\n-                                block.hashPrevBlock.ToString());\n+                                 header.hashPrevBlock.ToString());\n                         if (dbp && blocks_with_unknown_parent) {\n-                            blocks_with_unknown_parent->emplace(block.hashPrevBlock, *dbp);\n+                            blocks_with_unknown_parent->emplace(header.hashPrevBlock, *dbp);\n                         }\n                         continue;\n                     }\n-\n                     // process in case the block isn't known yet\n                     const CBlockIndex* pindex = m_blockman.LookupBlockIndex(hash);\n                     if (!pindex || (pindex->nStatus & BLOCK_HAVE_DATA) == 0) {\n-                      BlockValidationState state;\n-                      if (AcceptBlock(pblock, state, nullptr, true, dbp, nullptr)) {\n-                          nLoaded++;\n-                      }\n-                      if (state.IsError()) {\n-                          break;\n-                      }\n+                        // This block can be processed immediately; rewind to its start, read and deserialize it.\n+                        blkdat.SetPos(nBlockPos);\n+                        std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r936007551",
      "id" : 936007551,
      "line" : 4333,
      "node_id" : "PRRC_kwDOABII5843yld_",
      "original_commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "original_line" : 4333,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 64,
      "pull_request_review_id" : 1059001444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936007551/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-02T20:41:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/936007551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@stickies-v, thanks for the review, I decided to force-push all your suggestions. This force-push also includes a small refactor (adds the `FillBufferUpToLength()` to eliminate some duplicated code). Just to make sure the performance improvement still exists, I reindexed testnet3 (it's much faster than mainnet), and with this PR in its current form, the time to read the block files (set up the block index) is 8 minutes, and without this PR, the time is 13 minutes.",
      "created_at" : "2022-08-04T18:28:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1205620259",
      "id" : 1205620259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585H3E4j",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1205620259/reactions"
      },
      "updated_at" : "2022-08-04T18:28:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1205620259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r938127043"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938127043"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good observation, and actually the same applies to the `read()` method. I looked into making this optimization, but I think it would make this PR too complex; maybe it can be done in a follow-up, but I don't think it's important in practice.",
      "commit_id" : "50e922f9ec05acc67916f4c8ff70a5d61278f608",
      "created_at" : "2022-08-04T18:33:29Z",
      "diff_hunk" : "@@ -684,6 +684,26 @@ class CBufferedFile\n         }\n     }\n \n+    //! move the read position ahead in the stream to the given position\n+    void SkipTo(const uint64_t file_pos) {\n+        assert(file_pos >= m_read_pos);\n+        // Use SetPos() to back up in the stream, not SkipTo().\n+        if (file_pos > nReadLimit) {\n+            throw std::ios_base::failure(\"Attempt to position past buffer limit\");\n+        }\n+        while (m_read_pos < file_pos) {\n+            if (m_read_pos == nSrcPos)\n+                Fill();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r938127043",
      "id" : 938127043,
      "in_reply_to_id" : 935776926,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58436q7D",
      "original_commit_id" : "fa2dd4e9d57f3f0240273b97d885079f6a57ebc8",
      "original_line" : 696,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 1062420465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938127043/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-04T18:33:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938127043",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r938167231"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938167231"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ahh, the code duplication was bothering me a bit. Nice cleanup! I think, while we're on it, this would make it even better:\r\n```suggestion\r\n    size_t FillBufferUpToLength(const size_t buffer_offset, const size_t length)\r\n    {\r\n        assert(m_read_pos <= nSrcPos);\r\n        if (m_read_pos == nSrcPos) Fill();\r\n        return std::min({length, vchBuf.size() - buffer_offset, static_cast<size_t>(nSrcPos - m_read_pos)});\r\n    }\r\n```",
      "commit_id" : "50e922f9ec05acc67916f4c8ff70a5d61278f608",
      "created_at" : "2022-08-04T19:15:14Z",
      "diff_hunk" : "@@ -629,6 +629,20 @@ class CBufferedFile\n         return true;\n     }\n \n+    //! Try to get up to the requested length bytes available in the buffer,\n+    //! starting at stream offset m_read_pos, filling the buffer if necessary.\n+    //! Return the (possibly lower) number of bytes actually available,\n+    size_t FillBufferUpToLength(size_t buffer_offset, size_t length)\n+    {\n+        assert(m_read_pos <= nSrcPos);\n+        if (m_read_pos == nSrcPos) Fill();\n+        if (length > vchBuf.size() - buffer_offset)\n+            length = vchBuf.size() - buffer_offset;\n+        if (length > nSrcPos - m_read_pos)\n+            length = nSrcPos - m_read_pos;\n+        return length;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r938167231",
      "id" : 938167231,
      "line" : 644,
      "node_id" : "PRRC_kwDOABII584360u_",
      "original_commit_id" : "50e922f9ec05acc67916f4c8ff70a5d61278f608",
      "original_line" : 644,
      "original_position" : 25,
      "original_start_line" : 635,
      "path" : "src/streams.h",
      "position" : 25,
      "pull_request_review_id" : 1062475845,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938167231/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 635,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-04T19:27:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938167231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed again to fix (I hope) CI failure (ARM (32-bit), where `size_t` is 32 bits instead of 64).",
      "created_at" : "2022-08-04T19:17:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1205673426",
      "id" : 1205673426,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585H3R3S",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1205673426/reactions"
      },
      "updated_at" : "2022-08-04T19:17:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1205673426",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r938172601"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938172601"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    //! Return the (possibly lower) number of bytes actually available.\r\n```",
      "commit_id" : "50e922f9ec05acc67916f4c8ff70a5d61278f608",
      "created_at" : "2022-08-04T19:22:46Z",
      "diff_hunk" : "@@ -629,6 +629,20 @@ class CBufferedFile\n         return true;\n     }\n \n+    //! Try to get up to the requested length bytes available in the buffer,\n+    //! starting at stream offset m_read_pos, filling the buffer if necessary.\n+    //! Return the (possibly lower) number of bytes actually available,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r938172601",
      "id" : 938172601,
      "line" : 634,
      "node_id" : "PRRC_kwDOABII584362C5",
      "original_commit_id" : "50e922f9ec05acc67916f4c8ff70a5d61278f608",
      "original_line" : 634,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : 15,
      "pull_request_review_id" : 1062475845,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938172601/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-04T19:27:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938172601",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r938173543"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938173543"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think \"filling the buffer if necessary.\" is confusing - we _only_ fill the buffer if `m_read_pos == nSrcPos`, whereas I'd interpret \"if necessary\" as more broad than that.",
      "commit_id" : "50e922f9ec05acc67916f4c8ff70a5d61278f608",
      "created_at" : "2022-08-04T19:24:09Z",
      "diff_hunk" : "@@ -629,6 +629,20 @@ class CBufferedFile\n         return true;\n     }\n \n+    //! Try to get up to the requested length bytes available in the buffer,\n+    //! starting at stream offset m_read_pos, filling the buffer if necessary.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r938173543",
      "id" : 938173543,
      "line" : 633,
      "node_id" : "PRRC_kwDOABII584362Rn",
      "original_commit_id" : "50e922f9ec05acc67916f4c8ff70a5d61278f608",
      "original_line" : 633,
      "original_position" : 14,
      "original_start_line" : 632,
      "path" : "src/streams.h",
      "position" : 14,
      "pull_request_review_id" : 1062475845,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938173543/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 632,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-04T19:27:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938173543",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r938180897"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938180897"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Or for improved readability (not sure if necessary, and variable names just a suggestion):\r\n```cpp\r\n    size_t FillBufferUpToLength(const size_t buffer_offset, const size_t length)\r\n    {\r\n        assert(m_read_pos <= nSrcPos);\r\n        if (m_read_pos == nSrcPos) Fill();\r\n        size_t buffer_available{vchBuf.size() - buffer_offset};\r\n        size_t bytes_until_source{nSrcPos - m_read_pos};\r\n        return std::min({length, buffer_available, bytes_until_source});\r\n    }\r\n```",
      "commit_id" : "50e922f9ec05acc67916f4c8ff70a5d61278f608",
      "created_at" : "2022-08-04T19:34:04Z",
      "diff_hunk" : "@@ -629,6 +629,20 @@ class CBufferedFile\n         return true;\n     }\n \n+    //! Try to get up to the requested length bytes available in the buffer,\n+    //! starting at stream offset m_read_pos, filling the buffer if necessary.\n+    //! Return the (possibly lower) number of bytes actually available,\n+    size_t FillBufferUpToLength(size_t buffer_offset, size_t length)\n+    {\n+        assert(m_read_pos <= nSrcPos);\n+        if (m_read_pos == nSrcPos) Fill();\n+        if (length > vchBuf.size() - buffer_offset)\n+            length = vchBuf.size() - buffer_offset;\n+        if (length > nSrcPos - m_read_pos)\n+            length = nSrcPos - m_read_pos;\n+        return length;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r938180897",
      "id" : 938180897,
      "in_reply_to_id" : 938167231,
      "line" : 644,
      "node_id" : "PRRC_kwDOABII584364Eh",
      "original_commit_id" : "50e922f9ec05acc67916f4c8ff70a5d61278f608",
      "original_line" : 644,
      "original_position" : 25,
      "original_start_line" : 635,
      "path" : "src/streams.h",
      "position" : 25,
      "pull_request_review_id" : 1062495164,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938180897/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 635,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-04T19:34:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938180897",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed for review suggestions, thanks!",
      "created_at" : "2022-08-04T21:33:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1205791112",
      "id" : 1205791112,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585H3umI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1205791112/reactions"
      },
      "updated_at" : "2022-08-04T21:33:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1205791112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r938749683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938749683"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What do you think about this diff (based on [d60fa16](https://github.com/bitcoin/bitcoin/pull/16981/commits/d60fa1663534961094bc1c80d371ad96f7f0c264))? I didn't like the fact that `FillBufferUpToLength()` would call `Fill()` but would _not_ progress `m_read_pos`. With this change, (what's now called) `ReadBufferOnceUpToLength()` both progress `m_read_pos` and calls `Fill()` if necessary, without doing any looping.\r\n\r\nBesides feeling more intuitive (to me), it also allows for some more code cleanup. My main concern is that in `read()` we now progress `m_read_pos` _before_ copying it to `dst`, so if something fails there we'd need to rewind the buffer. I don't actually see that be a problem, but wanted to mention it in case I'm missing something?\r\n\r\nOh and I reverted everything back to `uint64_t`, since those are the types used for `CBufferedFile`'s relevant members? Hopefully that'll fix the CI issues, but I'm a bit out of my depth here.\r\n\r\n<details>\r\n\r\n```diff\r\n\r\ndiff --git a/src/streams.h b/src/streams.h\r\nindex 23e617e56..dbc6e4c03 100644\r\n--- a/src/streams.h\r\n+++ b/src/streams.h\r\n@@ -629,15 +629,18 @@ private:\r\n         return true;\r\n     }\r\n \r\n-    //! Make up to the requested 'length' (but at least 1) bytes available\r\n-    //! in the buffer, starting at stream offset 'm_read_pos', filling the\r\n-    //! buffer if no bytes are available.\r\n-    //! Return the (possibly lower) number of bytes actually available.\r\n-    size_t FillBufferUpToLength(size_t buffer_offset, size_t length)\r\n+    //! Read up to the requested 'length' bytes in the buffer, starting at stream offset\r\n+    //! 'm_read_pos', filling the buffer if no bytes are available.\r\n+    //! Return how many bytes were read in this iteration, which may be less than 'length'.\r\n+    uint64_t ReadBufferOnceUpToLength(const uint64_t length)\r\n     {\r\n         assert(m_read_pos <= nSrcPos);\r\n-        if (m_read_pos == nSrcPos) Fill();\r\n-        return std::min({length, vchBuf.size() - buffer_offset, static_cast<size_t>(nSrcPos - m_read_pos)});\r\n+        if (m_read_pos == nSrcPos && length > 0) Fill();\r\n+        uint64_t advance{std::min({length,                                       // bytes requested\r\n+                                   vchBuf.size() - (m_read_pos % vchBuf.size()), // bytes until buffer end\r\n+                                   nSrcPos - m_read_pos})};                      // bytes not yet read\r\n+        m_read_pos += advance;\r\n+        return advance;\r\n     }\r\n \r\n public:\r\n@@ -680,12 +683,10 @@ public:\r\n         if (dst.size() + m_read_pos > nReadLimit) {\r\n             throw std::ios_base::failure(\"Read attempted past buffer limit\");\r\n         }\r\n-        while (dst.size() > 0) {\r\n-            uint64_t pos{m_read_pos % vchBuf.size()};\r\n-            size_t length{FillBufferUpToLength(pos, dst.size())};\r\n-            memcpy(dst.data(), &vchBuf[pos], length);\r\n-            dst = dst.subspan(length);\r\n-            m_read_pos += length;\r\n+        while (uint64_t bytes_read{ReadBufferOnceUpToLength(dst.size())}) {\r\n+            uint64_t pos{(m_read_pos - bytes_read) % vchBuf.size()};\r\n+            memcpy(dst.data(), &vchBuf[pos], bytes_read);\r\n+            dst = dst.subspan(bytes_read);\r\n         }\r\n     }\r\n \r\n@@ -697,11 +698,7 @@ public:\r\n         if (file_pos > nReadLimit) {\r\n             throw std::ios_base::failure(\"Attempt to position past buffer limit\");\r\n         }\r\n-        while (m_read_pos < file_pos) {\r\n-            uint64_t pos{m_read_pos % vchBuf.size()};\r\n-            size_t length{FillBufferUpToLength(pos, file_pos - m_read_pos)};\r\n-            m_read_pos += length;\r\n-        }\r\n+        while (ReadBufferOnceUpToLength(file_pos - m_read_pos));\r\n     }\r\n \r\n     //! return the current reading position\r\n\r\n```\r\n\r\n</details>",
      "commit_id" : "6c8bc9a19cc9f35a93d264b69f63d4c93e2c7da2",
      "created_at" : "2022-08-05T12:09:54Z",
      "diff_hunk" : "@@ -629,6 +629,20 @@ class CBufferedFile\n         return true;\n     }\n \n+    //! Try to get up to the requested length bytes available in the buffer,\n+    //! starting at stream offset m_read_pos, filling the buffer if necessary.\n+    //! Return the (possibly lower) number of bytes actually available,\n+    size_t FillBufferUpToLength(size_t buffer_offset, size_t length)\n+    {\n+        assert(m_read_pos <= nSrcPos);\n+        if (m_read_pos == nSrcPos) Fill();\n+        if (length > vchBuf.size() - buffer_offset)\n+            length = vchBuf.size() - buffer_offset;\n+        if (length > nSrcPos - m_read_pos)\n+            length = nSrcPos - m_read_pos;\n+        return length;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r938749683",
      "id" : 938749683,
      "in_reply_to_id" : 938167231,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58439C7z",
      "original_commit_id" : "50e922f9ec05acc67916f4c8ff70a5d61278f608",
      "original_line" : 653,
      "original_position" : 25,
      "original_start_line" : 635,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 1063267817,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938749683/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-08-05T12:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/938749683",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed to fix CI failures",
      "created_at" : "2022-08-06T02:18:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1207128131",
      "id" : 1207128131,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585H81BD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207128131/reactions"
      },
      "updated_at" : "2022-08-06T02:18:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1207128131",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed to address review comments (thank you, @stickies-v), ready for review.",
      "created_at" : "2022-08-09T22:45:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1209966091",
      "id" : 1209966091,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585IHp4L",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1209966091/reactions"
      },
      "updated_at" : "2022-08-09T22:45:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1209966091",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-08-30T16:37:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1231906071",
      "id" : 1231906071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585JbWUX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1231906071/reactions"
      },
      "updated_at" : "2022-08-30T16:37:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1231906071",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased, I'll look into adding a benchmark test.",
      "created_at" : "2022-10-20T19:01:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1286006863",
      "id" : 1286006863,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585MpuhP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1286006863/reactions"
      },
      "updated_at" : "2022-10-20T19:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1286006863",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r1001014815"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001014815"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "UPDATE: this was fixed in #25571",
      "commit_id" : "6c8bc9a19cc9f35a93d264b69f63d4c93e2c7da2",
      "created_at" : "2022-10-20T19:05:17Z",
      "diff_hunk" : "@@ -4592,16 +4592,20 @@ bool LoadGenesisBlock(const CChainParams& chainparams)\n     return ::ChainstateActive().LoadGenesisBlock(chainparams);\n }\n \n-bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFilePos *dbp)\n+bool LoadExternalBlockFile(const CChainParams& chainparams, CBufferedFile& blkdat, FlatFilePos *dbp)\n {\n     // Map of disk positions for blocks with unknown parent (only used for reindex)\n-    static std::multimap<uint256, FlatFilePos> mapBlocksUnknownParent;\n+    struct unknownParentPos {\n+        FlatFilePos filePos;\n+        uint64_t pos;\n+    };\n+    static std::multimap<uint256, unknownParentPos> mapBlocksUnknownParent;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r1001014815",
      "id" : 1001014815,
      "in_reply_to_id" : 337597803,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5847qkYf",
      "original_commit_id" : "869aed06b9085f03c24d1b14a546ca333b2eb438",
      "original_line" : 4615,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1149821621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001014815/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-20T19:05:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001014815",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r1001758199"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001758199"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit e1df0eb806d919cecceebcb2c72c3f54b1a529f5\r\n```suggestion\r\n```\r\nthere is already a `private` identifier above",
      "commit_id" : "6c8bc9a19cc9f35a93d264b69f63d4c93e2c7da2",
      "created_at" : "2022-10-21T12:59:49Z",
      "diff_hunk" : "@@ -612,7 +612,7 @@ class CBufferedFile\n     uint64_t nRewind;     //!< how many bytes we guarantee to rewind\n     std::vector<std::byte> vchBuf; //!< the buffer\n \n-protected:\n+private:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r1001758199",
      "id" : 1001758199,
      "line" : 615,
      "node_id" : "PRRC_kwDOABII5847tZ33",
      "original_commit_id" : "6c8bc9a19cc9f35a93d264b69f63d4c93e2c7da2",
      "original_line" : 615,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : 5,
      "pull_request_review_id" : 1150916019,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001758199/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-21T15:37:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001758199",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r1003361836"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003361836"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could replace these magic bytes\r\n```suggestion\r\n                return b.find(MAGIC_BYTES[\"regtest\"], start)+4\r\n```\r\n(the MAGIC_BYTES dictionary is defined in `test_framework.p2p`)",
      "commit_id" : "6c8bc9a19cc9f35a93d264b69f63d4c93e2c7da2",
      "created_at" : "2022-10-24T14:09:07Z",
      "diff_hunk" : "@@ -27,11 +29,58 @@ def reindex(self, justchainstate=False):\n         assert_equal(self.nodes[0].getblockcount(), blockcount)  # start_node is blocking on reindex\n         self.log.info(\"Success\")\n \n+    # Check that blocks can be processed out of order\n+    def out_of_order(self):\n+        # The previous test created 12 blocks\n+        assert_equal(self.nodes[0].getblockcount(), 12)\n+        self.stop_nodes()\n+\n+        # In this test environment, blocks will always be in order (since\n+        # we're generating them rather than getting them from peers), so to\n+        # test out-of-order handling, swap blocks 1 and 2 on disk.\n+        blk0 = os.path.join(self.nodes[0].datadir, self.nodes[0].chain, 'blocks', 'blk00000.dat')\n+        with open(blk0, 'r+b') as bf:\n+            # Read at least the first few blocks (including genesis)\n+            b = bf.read(2000)\n+\n+            # Find the offsets of blocks 2, 3, and 4 (the first 3 blocks beyond genesis)\n+            # by searching for the regtest marker bytes (see pchMessageStart).\n+            def find_block(b, start):\n+                return b.find(b'\\xfa\\xbf\\xb5\\xda', start)+4",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r1003361836",
      "id" : 1003361836,
      "line" : 49,
      "node_id" : "PRRC_kwDOABII5847zhYs",
      "original_commit_id" : "6c8bc9a19cc9f35a93d264b69f63d4c93e2c7da2",
      "original_line" : 49,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : 32,
      "pull_request_review_id" : 1153211103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003361836/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-24T14:50:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1003361836",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed to add benchmark (@achow101 please remove Needs Benchmark label), the PR shows about 16 to 1 improvement on my system.\r\n\r\nAlso addressed review comments (thanks).\r\n@theStack, @aureleoules, @stickies-v, @vasild, @hebasto, please re-review, thank you!",
      "created_at" : "2022-10-24T18:48:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1289451376",
      "id" : 1289451376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585M23dw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1289451376/reactions"
      },
      "updated_at" : "2022-10-24T18:48:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1289451376",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Another force-push (actually 2 of them) to fix linter errors.",
      "created_at" : "2022-10-24T19:03:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1289469095",
      "id" : 1289469095,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585M27yn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1289469095/reactions"
      },
      "updated_at" : "2022-10-24T19:03:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1289469095",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r1004912489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004912489"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: for grepping purposes, perhaps useful to name this fn slightly different?\r\n```suggestion\r\nstatic void BenchLoadExternalBlockFile(benchmark::Bench& bench)\r\n```",
      "commit_id" : "db929893ef0bc86ea2708cdbcf41152240cd7c73",
      "created_at" : "2022-10-25T20:00:26Z",
      "diff_hunk" : "@@ -0,0 +1,63 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <bench/data.h>\n+#include <chainparams.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+/**\n+ * The LoadExternalBlockFile() function is used during -reindex and -loadblock.\n+ *\n+ * Create a test file that's similar to a datadir/blocks/blk?????.dat file,\n+ * It contains around 134 copies of the same block (typical size of real block files).\n+ * For each block in the file, LoadExternalBlockFile() won't find its parent,\n+ * and so will skip the block. (In the real system, it will re-read the block\n+ * from disk later when it encounters its parent.)\n+ *\n+ * This benchmark measures the performance of deserializing the block (or just\n+ * its header, beginning with PR 16981).\n+ */\n+static void LoadExternalBlockFile(benchmark::Bench& bench)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r1004912489",
      "id" : 1004912489,
      "line" : 23,
      "node_id" : "PRRC_kwDOABII58475b9p",
      "original_commit_id" : "db929893ef0bc86ea2708cdbcf41152240cd7c73",
      "original_line" : 23,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/bench/load_external.cpp",
      "position" : 23,
      "pull_request_review_id" : 1155422513,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004912489/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-25T20:12:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004912489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r1004914750"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004914750"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: a bit more clear without `i` imo.\r\n```suggestion\r\n        for (size_t written = 0; written < node::MAX_BLOCKFILE_SIZE; written += ss.size()) {\r\n```",
      "commit_id" : "db929893ef0bc86ea2708cdbcf41152240cd7c73",
      "created_at" : "2022-10-25T20:03:05Z",
      "diff_hunk" : "@@ -0,0 +1,63 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <bench/data.h>\n+#include <chainparams.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+/**\n+ * The LoadExternalBlockFile() function is used during -reindex and -loadblock.\n+ *\n+ * Create a test file that's similar to a datadir/blocks/blk?????.dat file,\n+ * It contains around 134 copies of the same block (typical size of real block files).\n+ * For each block in the file, LoadExternalBlockFile() won't find its parent,\n+ * and so will skip the block. (In the real system, it will re-read the block\n+ * from disk later when it encounters its parent.)\n+ *\n+ * This benchmark measures the performance of deserializing the block (or just\n+ * its header, beginning with PR 16981).\n+ */\n+static void LoadExternalBlockFile(benchmark::Bench& bench)\n+{\n+    const auto testing_setup{MakeNoLogFileContext<const TestingSetup>(CBaseChainParams::MAIN)};\n+\n+    // Create a single block as in the blocks files (magic bytes, block size,\n+    // block data) as a stream object.\n+    const fs::path blkfile{testing_setup.get()->m_path_root / \"blk.dat\"};\n+    CDataStream ss(SER_DISK, 0);\n+    auto params{testing_setup->m_node.chainman->GetParams()};\n+    ss << params.MessageStart();\n+    ss << static_cast<uint32_t>(benchmark::data::block413567.size());\n+    // We can't use the streaming serialization (ss << benchmark::data::block413567)\n+    // because that first writes a compact size.\n+    ss.write(MakeByteSpan(benchmark::data::block413567));\n+\n+    // Create the test file.\n+    {\n+        // \"wb+\" is \"binary, O_RDWR | O_CREAT | O_TRUNC\".\n+        FILE* file{fsbridge::fopen(blkfile, \"wb+\")};\n+        // Make the test block file about 128 MB in length.\n+        for (size_t i = 0; i < node::MAX_BLOCKFILE_SIZE / ss.size(); ++i) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#discussion_r1004914750",
      "id" : 1004914750,
      "line" : 43,
      "node_id" : "PRRC_kwDOABII58475cg-",
      "original_commit_id" : "db929893ef0bc86ea2708cdbcf41152240cd7c73",
      "original_line" : 43,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/bench/load_external.cpp",
      "position" : 43,
      "pull_request_review_id" : 1155422513,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004914750/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-10-25T20:12:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004914750",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK db929893ef0bc86ea2708cdbcf41152240cd7c73\r\n\r\nBenchmark runs roughly 42x speedup over master. Very nice!\r\n\r\n~Would it make sense to have a fuzz target for `CBufferedFile`?~  I see that exists already.\r\n\r\n<details>\r\n  <summary>Benchmark results</summary>\r\n\r\n\r\n**This Branch (db929893ef0bc86ea2708cdbcf41152240cd7c73)**\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|       15,150,607.00 |               66.00 |    2.0% |    1,366,806.00 |      948,612.00 |  1.441 |      87,657.00 |    0.6% |      0.20 | `LoadExternalBlockFile`\r\n\r\n**Master (1bad29fe02096b269858b192a4a91c785a44e505) with the benchmark commit (48a68908ba3d5e077cda7bd1e908b923fbead824) cherry-picked**\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|      629,905,824.00 |                1.59 |    1.8% |7,542,006,593.00 |1,353,516,328.00 |  5.572 | 392,803,992.00 |    0.4% |      7.07 | `LoadExternalBlockFile`\r\n</details>",
      "created_at" : "2022-10-28T19:29:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1295375599",
      "id" : 1295375599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585NNdzv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1295375599/reactions"
      },
      "updated_at" : "2022-10-29T14:20:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1295375599",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK db929893ef0bc86ea2708cdbcf41152240cd7c73",
      "created_at" : "2022-11-16T00:07:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16981#issuecomment-1316060358",
      "id" : 1316060358,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
      "node_id" : "IC_kwDOABII585OcXzG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1316060358/reactions"
      },
      "updated_at" : "2022-11-16T00:07:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1316060358",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]
