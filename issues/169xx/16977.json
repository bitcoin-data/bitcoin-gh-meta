{
   "active_lock_reason" : "resolved",
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "When a transaction is received, multiple places usually try to figure out if that TX is already known locally (mempool or part of the active chain) and thus should be skipped.\r\n\r\nIt first happens directly after receiving and deserialization of the TX, right [before](https://github.com/bitcoin/bitcoin/blob/6288f15f50ab98b336ab86804c4cbea3807dc1d3/src/net_processing.cpp#L2519) `AcceptToMemoryPool()` is called for the TX.\r\n\r\nThe second check happens inside `MemPoolAccept::PreChecks()` which is called from `AcceptToMemoryPool()`. [Here](https://github.com/bitcoin/bitcoin/blob/6288f15f50ab98b336ab86804c4cbea3807dc1d3/src/validation.cpp#L643) it first checks if the inputs are existent and unspent. If `HaveCoin()` returns false for any input, it then checks if maybe the currently processed TX itself is already existent in the coins view/cache, which indicates that the TX is already locally processed (part of the active chain, aka mined). If this is the case, `TX_CONFLICT` is returned, otherwise `pfMissingInputs` is set to true, causing the orphan logic to trigger later.\r\n\r\nThe problem now is, that `HaveCoinInCache` (which is used to check if the TX is locally already processed) will only return true for unspent outputs of the currently processed TX. This means, if all outputs of the TX are already spent, it will not realize anymore that the TX was already mined. It will then continue by setting `pfMissingInputs` to true, which then falsely causes the orphan logic to trigger.\r\n\r\nThis results in the TX being added to the orphan map and then not being removed again until expiration kicks in.\r\n\r\nMy question now is: Is this expected behavior? I would assume that changing `HaveCoinInCache()` to optionally return true even for spent coins would partially solve the issue, at least for everyday cases that happen from time to time. This is because coins completely vanish from the coins DB when the cache is flushed, so the \"fix\" would only work between mining of the TX and the next cache flush. It would not protect against peers deliberately trying to fill the orphan map with such TXs...but this doesn't really matter because they can already fill it with any TX that has an unknown input.\r\n\r\nBefore https://github.com/bitcoin/bitcoin/pull/10559, `HaveCoinInCache()` would have returned true in this case actually, so the issue with false-positive orphans was not present (or at least not that bad...) at that time. Was this overlooked maybe?",
   "closed_at" : "2020-04-26T22:42:38Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 3,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16977/comments",
   "created_at" : "2019-09-27T16:01:59Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16977/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/16977",
   "id" : 499526816,
   "labels" : [
      {
         "color" : "ebd775",
         "default" : false,
         "description" : null,
         "id" : 64584,
         "name" : "Brainstorming",
         "node_id" : "MDU6TGFiZWw2NDU4NA==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming"
      },
      {
         "color" : "006b75",
         "default" : false,
         "description" : null,
         "id" : 98298007,
         "name" : "P2P",
         "node_id" : "MDU6TGFiZWw5ODI5ODAwNw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16977/labels{/name}",
   "locked" : true,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU0OTk1MjY4MTY=",
   "number" : 16977,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16977/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : "completed",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16977/timeline",
   "title" : "Recently mined TXs with spent outputs are considered orphans when re-received",
   "updated_at" : "2022-02-15T11:02:59Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16977",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/1884269?v=4",
      "events_url" : "https://api.github.com/users/codablock/events{/privacy}",
      "followers_url" : "https://api.github.com/users/codablock/followers",
      "following_url" : "https://api.github.com/users/codablock/following{/other_user}",
      "gists_url" : "https://api.github.com/users/codablock/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/codablock",
      "id" : 1884269,
      "login" : "codablock",
      "node_id" : "MDQ6VXNlcjE4ODQyNjk=",
      "organizations_url" : "https://api.github.com/users/codablock/orgs",
      "received_events_url" : "https://api.github.com/users/codablock/received_events",
      "repos_url" : "https://api.github.com/users/codablock/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/codablock/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/codablock/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/codablock"
   }
}
