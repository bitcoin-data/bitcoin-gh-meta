[
   {
      "author_association" : "MEMBER",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18011 (Replace current benchmarking framework with nanobench by martinus)\n* #13062 (Make script interpreter independent from storage type CScript by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-09-18T05:06:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-532520135",
      "id" : 532520135,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMjUyMDEzNQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/532520135/reactions"
      },
      "updated_at" : "2020-03-14T04:20:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/532520135",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It might be easier to review if the operations on `vfExec` are pulled out into a separate class first, so that the optimisation just means updating the class from:\r\n\r\n```c++\r\nclass FalseCounter {\r\nprivate:\r\n    std::vector<bool> flags;\r\npublic:\r\n    bool all_true() { return !count(flags.begin(), flags.end(), false); }\r\n    void push_back(bool f) { flags.push_back(f); }\r\n    void pop_back() { flags.pop_back(); }\r\n    bool empty() { return flags.empty(); }\r\n    void toggle_top() { flags.back() = !flags.back(); }\r\n};\r\n```\r\n\r\nto\r\n\r\n```c++\r\nclass FalseCounter {\r\nprivate:\r\n    int depth = 0;\r\n    int first_false = 0;\r\npublic:\r\n    bool all_true() { return first_false == 0; }\r\n    void push_back(bool f) {\r\n        ++depth;\r\n        if (first_false == 0 && !f) first_false = depth;\r\n    }\r\n    void pop_back() {\r\n        if (first_false == depth) first_false = 0;\r\n        --depth;\r\n    }\r\n    bool empty() { return depth == 0; }\r\n    void toggle_top() {\r\n        if (first_false == 0) {\r\n            first_false = depth;\r\n        } else if (first_false == depth) {\r\n            first_false = 0;\r\n        } else {\r\n            // no action needed as change is unobservable\r\n        }\r\n    }\r\n};\r\n```\r\n\r\nwithout changing the usage of the class. I think it'd be plausible to do a coq proof that those implementations are logically equivalent / implement the same API (at least given `!empty()` preconditions for `pop_back()` and `toggle_top()`).\r\n\r\ncf https://github.com/ajtowns/bitcoin/commits/201909-vfexec-optimise",
      "created_at" : "2019-09-18T06:22:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-532538012",
      "id" : 532538012,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMjUzODAxMg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/532538012/reactions"
      },
      "updated_at" : "2019-09-18T06:22:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/532538012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns If there's interest in including this patch at some point we should pick up that approach.",
      "created_at" : "2019-09-18T06:28:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-532539892",
      "id" : 532539892,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMjUzOTg5Mg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/532539892/reactions"
      },
      "updated_at" : "2019-09-18T06:28:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/532539892",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Somewhat related issue: https://github.com/sipa/miniscript/issues/7 (\"Policies with too high nesting depth are not rejected: It is possible to create small inputs that cause extreme memory usage (in practice: OOM kill or std::bad_alloc)\")\r\n\r\nContext: Nested `tresh` tend to be very `OP_IF`/`OP_ELSE`/`OP_ENDIF` intensive (`or_i`) when compiled to script :)",
      "created_at" : "2019-09-18T09:22:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-532600356",
      "id" : 532600356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMjYwMDM1Ng==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/532600356/reactions"
      },
      "updated_at" : "2019-09-18T09:24:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/532600356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've modified the code to follow @ajtowns's approach more closely, though with fewer commits, and extra comments.",
      "created_at" : "2019-11-04T18:54:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-549495965",
      "id" : 549495965,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTQ5NTk2NQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549495965/reactions"
      },
      "updated_at" : "2019-11-04T18:54:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549495965",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r342439473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342439473"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`uint32_t` with a `t` :)",
      "commit_id" : "e6e622e5a0e22c2ac1b50b96af818e412d67ac54",
      "created_at" : "2019-11-05T08:50:42Z",
      "diff_hunk" : "@@ -289,16 +289,51 @@ namespace {\n  * expose whether the stack is empty and whether or not any false values are\n  * present at all. To implement OP_ELSE, a toggle_top modifier is added, which\n  * flips the last value without returning it.\n+ *\n+ * This uses an optimized implementation that does not materialize the\n+ * actual stack. Instead, it just stores the size of the would-be stack,\n+ * and the position of the first false value in it.\n  */\n class ConditionStack {\n private:\n-    std::vector<bool> m_flags;\n+    //! The size of the implied stack.\n+    uin32_t m_stack_size = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r342439473",
      "id" : 342439473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjQzOTQ3Mw==",
      "original_commit_id" : "d4721cd00b0af1d6a96fc0a43ca72dc55ea490d3",
      "original_line" : 300,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 311574860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342439473/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2019-11-07T17:12:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342439473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r342441000"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342441000"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Using `int32_t` gives \"comparison of integers of different signs\" warnings. Having `uint32_t m_first_false_pos_plus_one = 0` instead avoids that, and seems to make the code simpler (avoids a bunch of decrements/increments). I think you could call it `m_size_of_stack_including_first_false` with 0 as a special value, and have it make sense, maybe?",
      "commit_id" : "e6e622e5a0e22c2ac1b50b96af818e412d67ac54",
      "created_at" : "2019-11-05T08:54:24Z",
      "diff_hunk" : "@@ -289,16 +289,51 @@ namespace {\n  * expose whether the stack is empty and whether or not any false values are\n  * present at all. To implement OP_ELSE, a toggle_top modifier is added, which\n  * flips the last value without returning it.\n+ *\n+ * This uses an optimized implementation that does not materialize the\n+ * actual stack. Instead, it just stores the size of the would-be stack,\n+ * and the position of the first false value in it.\n  */\n class ConditionStack {\n private:\n-    std::vector<bool> m_flags;\n+    //! The size of the implied stack.\n+    uin32_t m_stack_size = 0;\n+    //! The position of the first false value on the implied stack, or -1 if all true.\n+    int32_t m_first_false_pos = -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r342441000",
      "id" : 342441000,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjQ0MTAwMA==",
      "original_commit_id" : "d4721cd00b0af1d6a96fc0a43ca72dc55ea490d3",
      "original_line" : 302,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 311574860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342441000/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2019-11-07T17:12:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342441000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r343318934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343318934"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "e6e622e5a0e22c2ac1b50b96af818e412d67ac54",
      "created_at" : "2019-11-06T20:47:10Z",
      "diff_hunk" : "@@ -289,16 +289,51 @@ namespace {\n  * expose whether the stack is empty and whether or not any false values are\n  * present at all. To implement OP_ELSE, a toggle_top modifier is added, which\n  * flips the last value without returning it.\n+ *\n+ * This uses an optimized implementation that does not materialize the\n+ * actual stack. Instead, it just stores the size of the would-be stack,\n+ * and the position of the first false value in it.\n  */\n class ConditionStack {\n private:\n-    std::vector<bool> m_flags;\n+    //! The size of the implied stack.\n+    uin32_t m_stack_size = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r343318934",
      "id" : 343318934,
      "in_reply_to_id" : 342439473,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzMxODkzNA==",
      "original_commit_id" : "d4721cd00b0af1d6a96fc0a43ca72dc55ea490d3",
      "original_line" : 300,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 312732017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343318934/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2019-11-07T17:12:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343318934",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r343319188"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343319188"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm instead adding a NO_FALSE constant (equal to 0xFFFFFFFF), and reordering operations a bit to avoid some `- 1`s.",
      "commit_id" : "e6e622e5a0e22c2ac1b50b96af818e412d67ac54",
      "created_at" : "2019-11-06T20:47:46Z",
      "diff_hunk" : "@@ -289,16 +289,51 @@ namespace {\n  * expose whether the stack is empty and whether or not any false values are\n  * present at all. To implement OP_ELSE, a toggle_top modifier is added, which\n  * flips the last value without returning it.\n+ *\n+ * This uses an optimized implementation that does not materialize the\n+ * actual stack. Instead, it just stores the size of the would-be stack,\n+ * and the position of the first false value in it.\n  */\n class ConditionStack {\n private:\n-    std::vector<bool> m_flags;\n+    //! The size of the implied stack.\n+    uin32_t m_stack_size = 0;\n+    //! The position of the first false value on the implied stack, or -1 if all true.\n+    int32_t m_first_false_pos = -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r343319188",
      "id" : 343319188,
      "in_reply_to_id" : 342441000,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzMxOTE4OA==",
      "original_commit_id" : "d4721cd00b0af1d6a96fc0a43ca72dc55ea490d3",
      "original_line" : 302,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : null,
      "pull_request_review_id" : 312732349,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343319188/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2019-11-07T17:12:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/343319188",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r370991967"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370991967"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think an `assert(m_stack_size != NO_FALSE - 1)` is needed.\r\nAlso, does not seems caller are checking this. Unsure if this can realistically taken advantage of, but I think it does not hurt the scriptevaluator to check for it.",
      "commit_id" : "e6e622e5a0e22c2ac1b50b96af818e412d67ac54",
      "created_at" : "2020-01-26T11:36:29Z",
      "diff_hunk" : "@@ -278,6 +278,70 @@ int FindAndDelete(CScript& script, const CScript& b)\n     return nFound;\n }\n \n+namespace {\n+/** A data type to abstract out the condition stack during script execution.\n+ *\n+ * Conceptually it acts like a vector of booleans, one for each level of nested\n+ * IF/THEN/ELSE, indicating whether we're in the active or inactive branch of\n+ * each.\n+ *\n+ * The elements on the stack cannot be observed individually; we only need to\n+ * expose whether the stack is empty and whether or not any false values are\n+ * present at all. To implement OP_ELSE, a toggle_top modifier is added, which\n+ * flips the last value without returning it.\n+ *\n+ * This uses an optimized implementation that does not materialize the\n+ * actual stack. Instead, it just stores the size of the would-be stack,\n+ * and the position of the first false value in it.\n+ */\n+class ConditionStack {\n+private:\n+    //! A constant for m_first_false_pos to indicate there are no falses.\n+    static constexpr uint32_t NO_FALSE = std::numeric_limits<uint32_t>::max();\n+\n+    //! The size of the implied stack.\n+    uint32_t m_stack_size = 0;\n+    //! The position of the first false value on the implied stack, or NO_FALSE if all true.\n+    uint32_t m_first_false_pos = NO_FALSE;\n+\n+public:\n+    bool empty() { return m_stack_size == 0; }\n+    bool all_true() { return m_first_false_pos == NO_FALSE; }\n+    void push_back(bool f)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r370991967",
      "id" : 370991967,
      "line" : 310,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5MTk2Nw==",
      "original_commit_id" : "e6e622e5a0e22c2ac1b50b96af818e412d67ac54",
      "original_line" : 310,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : 33,
      "pull_request_review_id" : 348373612,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370991967/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2020-01-26T11:36:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370991967",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r371582020"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/371582020"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You'd need a script with 4 billion OP_IF's to hit that (so a tx with 4GB of data or over 1G weight), so taking advantage of it shouldn't be possible... Adding the assert seems plausible though.",
      "commit_id" : "e6e622e5a0e22c2ac1b50b96af818e412d67ac54",
      "created_at" : "2020-01-28T02:18:33Z",
      "diff_hunk" : "@@ -278,6 +278,70 @@ int FindAndDelete(CScript& script, const CScript& b)\n     return nFound;\n }\n \n+namespace {\n+/** A data type to abstract out the condition stack during script execution.\n+ *\n+ * Conceptually it acts like a vector of booleans, one for each level of nested\n+ * IF/THEN/ELSE, indicating whether we're in the active or inactive branch of\n+ * each.\n+ *\n+ * The elements on the stack cannot be observed individually; we only need to\n+ * expose whether the stack is empty and whether or not any false values are\n+ * present at all. To implement OP_ELSE, a toggle_top modifier is added, which\n+ * flips the last value without returning it.\n+ *\n+ * This uses an optimized implementation that does not materialize the\n+ * actual stack. Instead, it just stores the size of the would-be stack,\n+ * and the position of the first false value in it.\n+ */\n+class ConditionStack {\n+private:\n+    //! A constant for m_first_false_pos to indicate there are no falses.\n+    static constexpr uint32_t NO_FALSE = std::numeric_limits<uint32_t>::max();\n+\n+    //! The size of the implied stack.\n+    uint32_t m_stack_size = 0;\n+    //! The position of the first false value on the implied stack, or NO_FALSE if all true.\n+    uint32_t m_first_false_pos = NO_FALSE;\n+\n+public:\n+    bool empty() { return m_stack_size == 0; }\n+    bool all_true() { return m_first_false_pos == NO_FALSE; }\n+    void push_back(bool f)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r371582020",
      "id" : 371582020,
      "in_reply_to_id" : 370991967,
      "line" : 310,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU4MjAyMA==",
      "original_commit_id" : "e6e622e5a0e22c2ac1b50b96af818e412d67ac54",
      "original_line" : 310,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : 33,
      "pull_request_review_id" : 349097402,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/371582020/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2020-01-28T02:18:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/371582020",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK e6e622e5a0e22c2ac1b50b96af818e412d67ac54\r\n\r\nI've run the bench and this change cuts time by ~75%\r\n\r\nbefore:\r\n\r\n```\r\nâ ./bench_bitcoin -filter=VerifyNestedIfScript -evals=50\r\nWARNING: This is a debug build - may result in slower benchmarks.\r\n# Benchmark, evals, iterations, total, min, max, median\r\nVerifyNestedIfScript, 50, 100, 14.0987, 0.00267213, 0.00323801, 0.00277969\r\n```\r\n\r\nafter:\r\n\r\n```\r\nâ ./bench_bitcoin -filter=VerifyNestedIfScript -evals=50\r\nWARNING: This is a debug build - may result in slower benchmarks.\r\n# Benchmark, evals, iterations, total, min, max, median\r\nVerifyNestedIfScript, 50, 100, 3.15142, 0.000624684, 0.0006379, 0.000630272\r\n```\r\n\r\nI think the asserts in the final implementations of `pop_back()` and `toggle_top()` can actually be added in the intermediate commit to better illustrate that this doesn't change behaviour. I've done that, as well as adding the assert suggested in https://github.com/bitcoin/bitcoin/pull/16902#discussion_r370991967 and some more commenting here: https://github.com/jnewbery/bitcoin/tree/pr16902.1. Feel free to take any of that if you think it's an improvement.",
      "created_at" : "2020-02-11T15:31:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-584692879",
      "id" : 584692879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NDY5Mjg3OQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584692879/reactions"
      },
      "updated_at" : "2020-02-11T15:31:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584692879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK e6e622e5a0e22c2ac1b50b96af818e412d67ac54 ð´\r\n\r\n* Checked that d0e8f4d5d8ddaccb37f98b7989fb944081e41ab8 is moving the code around and that the symbol 'count' is equal to 'std::count' in that call stack\r\n* Checked that e6e622e5a0e22c2ac1b50b96af818e412d67ac54 is not a behavior change by looking at the code and running the fuzzer from #18127 for a couple of minutes\r\n\r\n\r\n\r\n\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK e6e622e5a0e22c2ac1b50b96af818e412d67ac54 ð´\r\n\r\n* Checked that d0e8f4d5d8ddaccb37f98b7989fb944081e41ab8 is moving the code around and that the symbol 'count' is equal to 'std::count' in that call stack\r\n* Checked that e6e622e5a0e22c2ac1b50b96af818e412d67ac54 is not a behavior change by looking at the code and running the fuzzer from #18127 for a couple of minutes\r\n\r\n\r\n\r\n\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUidcQwAkkads4/9CEnAK1tMJcqU+hjCau8yTqstSzi9plrVJ3gUijrrQ5IaKljg\r\n9i88GlQS42vo83ySz+MRvXBV0oeQGOlwS6mcGjaiNyYKlDPRlbZ5XPlKHa6DbqVp\r\npJr0rDuzUTB5o7F2w/01CNEtptYFUes+CWm0TiSWAiKJJ5j5W54F8RXQDSs/SZij\r\nATXAg3dj7OKvV2D7mbh9zK0ZODZnTFjBn5ej5onLXKsf21aypZRfrA30bdFnyemX\r\n1lsYXwvaZYgieVIqGEm2pbBRdEiIKNwivYblMvBEVnf8cPehG0hM2PJNcREGN/ZT\r\njObzNT+N/529p/no4RImfiW7+QZ8mmD6pFgV18T0t+Aw7z5KnZYnrS5iXgYPmPeS\r\nca1/zKhFc73gCOlfitookclqT2f2F1m7EUVW0lEoTSkhSZpuQfiLa/C/8QFYdr/s\r\nsUodGjEcj1SwjwTrTnxadDjsVHIPfqV5kGSWzY4m5EtvQ1JERviJkoG+ME0awkPR\r\nNhdKgKb5\r\n=ZGkg\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `5bbbbde183fde736dde66bf963f6b1f690bb0927454cf1500b52aeadf50396c3  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e8929401085bbbbde183fde736dde66bf963f6b1f690bb0927454cf1500b52aeadf50396c3f0102075b986b677dc38bc5888908323775d08fff01056ec092768e7bf574177f46f07e1818e08f1045e44157cf008b5aa46240f92d3580083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff01071b69697cb870c6854fab8a98b080b0b08f1045e44157cf00813f5adac5ba9eccd0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff010bf785d6cbe4a2fef324f0c745759ecfa08f1045e44157cf0081dadeccca5da2d670083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010da8910f6b110cd65603aaf49ad2a123808f1045e44157df008bf8af24d0525ddd80083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6d)\r\n\r\n</details>\r\n",
      "created_at" : "2020-02-12T15:11:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-585252042",
      "id" : 585252042,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NTI1MjA0Mg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585252042/reactions"
      },
      "updated_at" : "2020-02-12T15:11:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585252042",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r378380677"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378380677"
         }
      },
      "author_association" : "MEMBER",
      "body" : "pico-nit: perhaps execute `m_stack_size - 1` between the assert line 330 and the start of the conditional line 331 and use the result in lines 333 and 334 in the conditional",
      "commit_id" : "e6e622e5a0e22c2ac1b50b96af818e412d67ac54",
      "created_at" : "2020-02-12T16:52:42Z",
      "diff_hunk" : "@@ -278,6 +278,70 @@ int FindAndDelete(CScript& script, const CScript& b)\n     return nFound;\n }\n \n+namespace {\n+/** A data type to abstract out the condition stack during script execution.\n+ *\n+ * Conceptually it acts like a vector of booleans, one for each level of nested\n+ * IF/THEN/ELSE, indicating whether we're in the active or inactive branch of\n+ * each.\n+ *\n+ * The elements on the stack cannot be observed individually; we only need to\n+ * expose whether the stack is empty and whether or not any false values are\n+ * present at all. To implement OP_ELSE, a toggle_top modifier is added, which\n+ * flips the last value without returning it.\n+ *\n+ * This uses an optimized implementation that does not materialize the\n+ * actual stack. Instead, it just stores the size of the would-be stack,\n+ * and the position of the first false value in it.\n+ */\n+class ConditionStack {\n+private:\n+    //! A constant for m_first_false_pos to indicate there are no falses.\n+    static constexpr uint32_t NO_FALSE = std::numeric_limits<uint32_t>::max();\n+\n+    //! The size of the implied stack.\n+    uint32_t m_stack_size = 0;\n+    //! The position of the first false value on the implied stack, or NO_FALSE if all true.\n+    uint32_t m_first_false_pos = NO_FALSE;\n+\n+public:\n+    bool empty() { return m_stack_size == 0; }\n+    bool all_true() { return m_first_false_pos == NO_FALSE; }\n+    void push_back(bool f)\n+    {\n+        if (m_first_false_pos == NO_FALSE && !f) {\n+            // The stack consists of all true values, and a false is added.\n+            // The first false value will appear at the current size.\n+            m_first_false_pos = m_stack_size;\n+        }\n+        ++m_stack_size;\n+    }\n+    void pop_back()\n+    {\n+        assert(m_stack_size > 0);\n+        --m_stack_size;\n+        if (m_first_false_pos == m_stack_size) {\n+            // When popping off the first false value, everything becomes true.\n+            m_first_false_pos = NO_FALSE;\n+        }\n+    }\n+    void toggle_top()\n+    {\n+        assert(m_stack_size > 0);\n+        if (m_first_false_pos == NO_FALSE) {\n+            // The current stack is all true values; the first false will be the top.\n+            m_first_false_pos = m_stack_size - 1;\n+        } else if (m_first_false_pos == m_stack_size - 1) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r378380677",
      "id" : 378380677,
      "line" : 334,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM4MDY3Nw==",
      "original_commit_id" : "e6e622e5a0e22c2ac1b50b96af818e412d67ac54",
      "original_line" : 334,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : 57,
      "pull_request_review_id" : 357619168,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378380677/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2020-02-12T17:01:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378380677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I like the changes in @jnewbery's branch mentioned in https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-584692879) esp. [this code comment](https://github.com/jnewbery/bitcoin/commit/3629aa57fe5cec8f4b639ef12137bace14ee7de4#diff-be2905e2f5218ecdbe4e55637dac75f3R293).",
      "created_at" : "2020-02-12T17:31:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-585322026",
      "id" : 585322026,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NTMyMjAyNg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585322026/reactions"
      },
      "updated_at" : "2020-02-12T17:31:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585322026",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK e6e622e5a0e22c2ac1b50b96af818e412d67ac54\r\n\r\nReviewed code, compiled, ran tests and benchmarks\r\n\r\nI received better results from the benchmarks after the change, although improvements are not nearly as significant as the others reported. Not sure why that is, I ran them multiple times with different configs, without `enable_debug` for example, and results were consistent.\r\n\r\nBefore (HEAD detached at 89fb241c5):\r\n```\r\n$ src/bench/bench_bitcoin -filter=VerifyNestedIfScript -evals=50\r\nWARNING: This is a debug build - may result in slower benchmarks.\r\n# Benchmark, evals, iterations, total, min, max, median\r\nVerifyNestedIfScript, 50, 100, 8.34206, 0.0016061, 0.00195646, 0.00163048\r\n```\r\n\r\nAfter:\r\n```\r\n$ src/bench/bench_bitcoin -filter=VerifyNestedIfScript -evals=50\r\nWARNING: This is a debug build - may result in slower benchmarks.\r\n# Benchmark, evals, iterations, total, min, max, median\r\nVerifyNestedIfScript, 50, 100, 7.66019, 0.00146802, 0.00266328, 0.00149105\r\n```",
      "created_at" : "2020-02-13T00:19:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-585485034",
      "id" : 585485034,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NTQ4NTAzNA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585485034/reactions"
      },
      "updated_at" : "2020-02-13T00:19:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585485034",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Can anyone explain me why everyone is benchmarking with optimizations disabled? I hope all nodes on mainnet are running -O2, at least for applications where performance matters.",
      "created_at" : "2020-02-13T13:19:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-585750270",
      "id" : 585750270,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NTc1MDI3MA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585750270/reactions"
      },
      "updated_at" : "2020-02-13T13:19:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585750270",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Can anyone explain me why everyone is benchmarking with optimizations disabled? I hope all nodes on mainnet are running -O2, at least for applications where performance matters.\r\n\r\nI did both (with optimizations first). Then I tested it without because my results were different than the others here and ended up posting those because of the differences to make them more comparable. Here are some results with optimizations:\r\n\r\nBefore:\r\n```\r\n$ src/bench/bench_bitcoin -filter=VerifyNestedIfScript -evals=50\r\n# Benchmark, evals, iterations, total, min, max, median\r\nVerifyNestedIfScript, 50, 100, 0.789322, 0.000153463, 0.000178044, 0.000157402\r\n```\r\n\r\nAfter:\r\n```\r\n$ src/bench/bench_bitcoin -filter=VerifyNestedIfScript -evals=50\r\n# Benchmark, evals, iterations, total, min, max, median\r\nVerifyNestedIfScript, 50, 100, 0.77861, 0.000145174, 0.000211004, 0.000154109\r\n```",
      "created_at" : "2020-02-13T13:22:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-585751558",
      "id" : 585751558,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NTc1MTU1OA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585751558/reactions"
      },
      "updated_at" : "2020-02-13T13:23:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585751558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fair enough. Compiled with ` --enable-bench CXXFLAGS=\"-O2\"`\r\n\r\nbefore\r\n```\r\n((HEAD detached at 89fb241c54))$ src/bench/bench_bitcoin -filter=VerifyNestedIfScript -evals=50\r\n# Benchmark, evals, iterations, total, min, max, median\r\nVerifyNestedIfScript, 50, 100, 1.154,   0.000201797, 0.000381135, 0.000218384\r\nVerifyNestedIfScript, 50, 100, 1.11177, 0.000202117, 0.000342534, 0.000218816\r\nVerifyNestedIfScript, 50, 100, 1.1449,  0.000201718, 0.000425754, 0.00021702\r\nVerifyNestedIfScript, 50, 100, 1.21042, 0.000206192, 0.000390067, 0.000229842\r\n```\r\nafter\r\n```\r\n((HEAD detached at origin/pr/16902))$ src/bench/bench_bitcoin -filter=VerifyNestedIfScript -evals=50\r\n# Benchmark, evals, iterations, total, min, max, median\r\nVerifyNestedIfScript, 50, 100, 0.554961, 8.99878e-05, 0.000188464, 9.65497e-05\r\nVerifyNestedIfScript, 50, 100, 0.475112, 8.24424e-05, 0.000149663, 9.15264e-05\r\nVerifyNestedIfScript, 50, 100, 0.491641, 8.80607e-05, 0.000171669, 9.19584e-05\r\nVerifyNestedIfScript, 50, 100, 0.496316, 8.20691e-05, 0.00017851,  9.32482e-05\r\n```",
      "created_at" : "2020-02-13T17:57:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-585889744",
      "id" : 585889744,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NTg4OTc0NA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585889744/reactions"
      },
      "updated_at" : "2020-02-13T17:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585889744",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK, \r\n\r\nI was wondering about the assert I suggested on https://github.com/bitcoin/bitcoin/pull/16902#discussion_r370991967 \r\n\r\nI don't really know if it is good idea or not. While theorically possible, even if it was practically possible, I guess it would be more desirable to get a `IF` bypassed rather than a crash of the node.\r\nSomebody make 4 billions of `OP_IF` probably can't steal anybody, but might want to crash nodes.",
      "created_at" : "2020-02-14T07:52:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-586140340",
      "id" : 586140340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NjE0MDM0MA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586140340/reactions"
      },
      "updated_at" : "2020-02-14T07:52:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586140340",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3020646?v=4",
         "events_url" : "https://api.github.com/users/NicolasDorier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NicolasDorier/followers",
         "following_url" : "https://api.github.com/users/NicolasDorier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NicolasDorier",
         "id" : 3020646,
         "login" : "NicolasDorier",
         "node_id" : "MDQ6VXNlcjMwMjA2NDY=",
         "organizations_url" : "https://api.github.com/users/NicolasDorier/orgs",
         "received_events_url" : "https://api.github.com/users/NicolasDorier/received_events",
         "repos_url" : "https://api.github.com/users/NicolasDorier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NicolasDorier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NicolasDorier"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK e6e622e5a0e22c2ac1b50b96af818e412d67ac54\r\n\r\nI don't understand fjahr's results and investigating further didn't reveal anything; seems like any quadratic behaviour is getting completely lost in the noise there somehow. Might be worth adding additional benchmarks once tapscript removes the opcode limit to report the performance of very large scripts; say 10k nested IFs and 20k OP_NOPs vs 40k OP_NOPs etc?",
      "created_at" : "2020-03-02T04:04:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-593208532",
      "id" : 593208532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MzIwODUzMg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/593208532/reactions"
      },
      "updated_at" : "2020-03-02T04:04:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/593208532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "concept and code review ACK e6e622e5a0e22c2ac1b50b96af818e412d67ac54",
      "created_at" : "2020-03-14T20:00:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-599128618",
      "id" : 599128618,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16902",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5OTEyODYxOA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599128618/reactions"
      },
      "updated_at" : "2020-03-14T20:00:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599128618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r394374915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394374915"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In particular Script length is limited to MAX_SIZE (2^25) bytes.",
      "commit_id" : "e6e622e5a0e22c2ac1b50b96af818e412d67ac54",
      "created_at" : "2020-03-18T14:11:20Z",
      "diff_hunk" : "@@ -278,6 +278,70 @@ int FindAndDelete(CScript& script, const CScript& b)\n     return nFound;\n }\n \n+namespace {\n+/** A data type to abstract out the condition stack during script execution.\n+ *\n+ * Conceptually it acts like a vector of booleans, one for each level of nested\n+ * IF/THEN/ELSE, indicating whether we're in the active or inactive branch of\n+ * each.\n+ *\n+ * The elements on the stack cannot be observed individually; we only need to\n+ * expose whether the stack is empty and whether or not any false values are\n+ * present at all. To implement OP_ELSE, a toggle_top modifier is added, which\n+ * flips the last value without returning it.\n+ *\n+ * This uses an optimized implementation that does not materialize the\n+ * actual stack. Instead, it just stores the size of the would-be stack,\n+ * and the position of the first false value in it.\n+ */\n+class ConditionStack {\n+private:\n+    //! A constant for m_first_false_pos to indicate there are no falses.\n+    static constexpr uint32_t NO_FALSE = std::numeric_limits<uint32_t>::max();\n+\n+    //! The size of the implied stack.\n+    uint32_t m_stack_size = 0;\n+    //! The position of the first false value on the implied stack, or NO_FALSE if all true.\n+    uint32_t m_first_false_pos = NO_FALSE;\n+\n+public:\n+    bool empty() { return m_stack_size == 0; }\n+    bool all_true() { return m_first_false_pos == NO_FALSE; }\n+    void push_back(bool f)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16902#discussion_r394374915",
      "id" : 394374915,
      "in_reply_to_id" : 370991967,
      "line" : 310,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM3NDkxNQ==",
      "original_commit_id" : "e6e622e5a0e22c2ac1b50b96af818e412d67ac54",
      "original_line" : 310,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/script/interpreter.cpp",
      "position" : 33,
      "pull_request_review_id" : 376900162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16902",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394374915/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2020-03-18T14:11:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/394374915",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/21371712?v=4",
         "events_url" : "https://api.github.com/users/roconnor-blockstream/events{/privacy}",
         "followers_url" : "https://api.github.com/users/roconnor-blockstream/followers",
         "following_url" : "https://api.github.com/users/roconnor-blockstream/following{/other_user}",
         "gists_url" : "https://api.github.com/users/roconnor-blockstream/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/roconnor-blockstream",
         "id" : 21371712,
         "login" : "roconnor-blockstream",
         "node_id" : "MDQ6VXNlcjIxMzcxNzEy",
         "organizations_url" : "https://api.github.com/users/roconnor-blockstream/orgs",
         "received_events_url" : "https://api.github.com/users/roconnor-blockstream/received_events",
         "repos_url" : "https://api.github.com/users/roconnor-blockstream/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/roconnor-blockstream/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/roconnor-blockstream/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/roconnor-blockstream"
      }
   }
]
