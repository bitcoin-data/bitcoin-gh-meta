[
   {
      "author_association" : "MEMBER",
      "body" : "This kind of refactor was requested in https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685440307.  While I think it's helpful for `net_processing` code to be using a more meaningful function name rather than check for nullptr in all these places, it's not entirely clear to me whether it would be best to have the helper function be checking the connection type, or just checking whether `m_tx_relay` is nullptr or not.\r\n\r\nI opted for the latter approach, because right now (nearly) all those nullptr checks are done before dereferencing `m_tx_relay`, so I didn't like the idea of getting rid of the explicit check that the object isn't null.  But if others think that this is not the best way to clean this up, I'm open to suggestions.",
      "created_at" : "2020-12-16T19:12:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-746854240",
      "id" : 746854240,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20676",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0Njg1NDI0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T19:12:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746854240",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK c80de7834ad59fba93548024fc96f541f02b60f7, this does not change behavior",
      "created_at" : "2020-12-16T19:47:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-746908028",
      "id" : 746908028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20676",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NjkwODAyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T19:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746908028",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. This seems much clearer to me.",
      "created_at" : "2020-12-16T21:31:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747053900",
      "id" : 747053900,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20676",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NzA1MzkwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T21:31:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747053900",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK c80de7834ad59fba93548024fc96f541f02b60f7",
      "created_at" : "2020-12-16T21:35:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747055543",
      "id" : 747055543,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20676",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NzA1NTU0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T21:35:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747055543",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This idea was discussed in the original blocks only PR, https://github.com/bitcoin/bitcoin/pull/15759/files#r310366329 -- the reasoning was the explicit `== nullptr` checks makes it clear that the following dereferencing is safe. That still seems like it makes sense to me, so I'm -0.5 (or however we're writing weak-nack) on this.\r\n\r\nI tend to think `if (m_tx_relay != nullptr && pfrom.ShouldThisPeerGetThisTx(tx))` would be a better way to separate the concepts -- makes it clear dereferencing is safe, and the function only needs to deal with the policy decision being made, node code safety. If we know relay is never warranted for this peer, setting `m_tx_relay = nullptr` at `VERACK` not just initial connection might be an option (in which case writing `if (m_tx_relay != nullptr) { Assume(pfrom.ThisPeerShouldGetTheseTxs()); ... }` might make sense)",
      "created_at" : "2020-12-16T22:11:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747071735",
      "id" : 747071735,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20676",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NzA3MTczNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T22:11:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747071735",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This idea was discussed in the original blocks only PR, https://github.com/bitcoin/bitcoin/pull/15759/files#r310366329 -- \r\nthe reasoning was the explicit `== nullptr` checks makes it clear that the following dereferencing is safe.\r\n\r\n@ajtowns Thanks for the reminder of that discussion, I had forgotten about it!  I guess my uneasiness about removing `nullptr` checks altogether has remained consistent, though I guess I've moved a bit on thinking that it's also hard to reason about what exactly the `nullptr` check means.\r\n\r\nIt occurs to me that the problem may be a bigger issue around the separation between `net` and `net_processing`.  I think in many ways we want the net_processing layer concerned only about connection types and high level behaviors and not implementation details about the data structures that implement the behaviors.  But in fact we dive into the internals of `CNode` all the time in net_processing (eg grabbing locks and accessing data members directly), which makes attempts to use higher-level abstraction seem incompatible with the rest of the code -- if there's no way around knowing the implementation details, then what is the point of introducing some abstraction?\r\n\r\n> I tend to think `if (m_tx_relay != nullptr && pfrom.ShouldThisPeerGetThisTx(tx))` would be a better way to separate the concepts -- makes it clear dereferencing is safe, and the function only needs to deal with the policy decision being made, node code safety. If we know relay is never warranted for this peer, setting `m_tx_relay = nullptr` at `VERACK` not just initial connection might be an option (in which case writing `if (m_tx_relay != nullptr) { Assume(pfrom.ThisPeerShouldGetTheseTxs()); ... }` might make sense)\r\n\r\nI would also be okay with that an approach that checks for nullptr explicitly and also does the `Assume()` thing on some other function that is checking the connection type (or vice versa) -- do other reviewers have concerns with @ajtowns' suggestion?",
      "created_at" : "2020-12-16T22:25:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747077499",
      "id" : 747077499,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20676",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NzA3NzQ5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T22:25:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747077499",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> But in fact we dive into the internals of `CNode` all the time in net_processing (eg grabbing locks and accessing data members directly),\r\n\r\nMaybe that will change as @jnewbery's net/net_processing separation stuff (#19398) progresses? It proposes moving all of `m_tx_relay` out of net/CNode into net_processing.",
      "created_at" : "2020-12-16T22:40:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747083947",
      "id" : 747083947,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20676",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NzA4Mzk0Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-16T22:40:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747083947",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20083 (p2p: Disconnect, not discourage, misbehaving NODE_BLOOM peers by MarcoFalke)\n* #18819 (net: Replace cs_feeFilter with simple std::atomic by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-12-17T01:44:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747149653",
      "id" : 747149653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20676",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NzE0OTY1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-17T01:44:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747149653",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK c80de7834ad59fba93548024fc96f541f02b60f7\r\n\r\n> Maybe that will change as @jnewbery's net/net_processing separation stuff (#19398) progresses? It proposes moving all of m_tx_relay out of net/CNode into net_processing.\r\n\r\nThat's the hope. Eventually there should be much less reaching across the net/net_processing divide. net_processing eventually will need to access almost nothing from CNode.\r\n\r\nIt might make sense to also have a `const ConnectionType m_conn_type` as a member of `Peer` (similar to how we have `address` and `m_is_inbound` in `CNodeState`). All of these `RelayAddrsWithConn`, `RelayTxsWithConn`, etc functions are net_processing concerns, so it doesn't make sense that they exist in net.",
      "created_at" : "2020-12-17T08:35:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747293975",
      "id" : 747293975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20676",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NzI5Mzk3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-17T17:48:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747293975",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It occurs to me that moving `m_tx_relay` to net_processing might change the way we think about the abstraction.  I'm okay with closing this PR and deferring how we think about the relationship between the two until @jnewbery's work to move it lands...  It does seem like this PR may be near-sighted in thinking about how `net_processing` should understand the peer connection behavior, if there are bigger changes in the works?\r\n\r\nI could also just add an assert that `m_tx_relay != nullptr` after invoking RelayTxsWithConn(), wherever we need it?  That would be redundant (as what we're doing is first checking whether it's nullptr in that function, then asserting right afterward), but it would document the understanding of how this works inside `net_processing`, which may be what we're aiming for.  @ajtowns What do you think?",
      "created_at" : "2020-12-17T16:02:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747532844",
      "id" : 747532844,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20676",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NzUzMjg0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-17T16:02:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747532844",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think that this is an improvement, but also agree that the same lines will need to be changed again when the tx inventory data is moved into net_processing, so it might make sense to just leave this for now.\r\n\r\nThe next PR in the net/net_processing split series is #19829 if you'd like to help with that work.",
      "created_at" : "2020-12-17T17:55:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747599415",
      "id" : 747599415,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20676",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NzU5OTQxNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-17T17:55:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747599415",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery Sounds good to me, will close.",
      "created_at" : "2020-12-17T17:59:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20676#issuecomment-747602007",
      "id" : 747602007,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20676",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0NzYwMjAwNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-17T17:59:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747602007",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
