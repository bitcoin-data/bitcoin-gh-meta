[
   {
      "author_association" : "MEMBER",
      "body" : "I need to test this still myself, but I wanted to open this as a potential alternative to feeling the need to backport #18044 (as @jnewbery has proposed in #19606) in order to protect older software from wasting bandwidth in the event of taproot activation in the future.\r\n\r\nI have a branch where I backported this patch to 0.20 here: https://github.com/sdaftuar/bitcoin/tree/2020-07-reject-unknown-wit-0.20.  \r\n\r\nNote that this PR should be independently useful to mitigate an issue @ariard brought up here: https://github.com/bitcoin/bitcoin/pull/18044#discussion_r457768442",
      "created_at" : "2020-07-29T15:46:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-665743887",
      "id" : 665743887,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTc0Mzg4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-29T15:46:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665743887",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r462433102"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462433102"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Strictly speaking, do we want to move this check above any other check that could return TX_NOT_STANDARD, so transactions with non-standard inputs are guaranteed to be put in the recentrejects filter? I don't think it matters, since upgraded peers won't relay transactions that fail other standardness checks, unless we loosen those checks for some other reason.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-07-29T16:33:28Z",
      "diff_hunk" : "@@ -690,7 +690,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n \n     // Check for non-standard pay-to-script-hash in inputs\n     if (fRequireStandard && !AreInputsStandard(tx, m_view))\n-        return state.Invalid(TxValidationResult::TX_NOT_STANDARD, \"bad-txns-nonstandard-inputs\");\n+        return state.Invalid(TxValidationResult::TX_INPUTS_NOT_STANDARD, \"bad-txns-nonstandard-inputs\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r462433102",
      "id" : 462433102,
      "line" : 693,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQzMzEwMg==",
      "original_commit_id" : "be23c2af9fb3b7d571e62ae1045941a1724a3e35",
      "original_line" : 693,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 7,
      "pull_request_review_id" : 457695196,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462433102",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r462442871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462442871"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah I agree.  It doesn't seem worth the effort to figure out how to make it so that a tx that would fail in `AreInputsStandard()` will always have its txid go into the rejects filter -- there are a lot of checks that happen before that (including checks that don't depend on looking up the inputs first), which we'd have to move around somehow and complicate the logic.  But, if this proves to be insufficient for some reason we can always try to revisit.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-07-29T16:50:06Z",
      "diff_hunk" : "@@ -690,7 +690,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n \n     // Check for non-standard pay-to-script-hash in inputs\n     if (fRequireStandard && !AreInputsStandard(tx, m_view))\n-        return state.Invalid(TxValidationResult::TX_NOT_STANDARD, \"bad-txns-nonstandard-inputs\");\n+        return state.Invalid(TxValidationResult::TX_INPUTS_NOT_STANDARD, \"bad-txns-nonstandard-inputs\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r462442871",
      "id" : 462442871,
      "in_reply_to_id" : 462433102,
      "line" : 693,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ0Mjg3MQ==",
      "original_commit_id" : "be23c2af9fb3b7d571e62ae1045941a1724a3e35",
      "original_line" : 693,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 7,
      "pull_request_review_id" : 457707738,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/462442871",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK and lite code review ACK.\r\n\r\nIt seems to me that this change won't help that much in the future upgrade case because even though this fixes witness versions things like leaf versions in taproot (which may be upgraded more often) will require a witness dependent check, and can't be txid reject filtered, unless we made it a policy that transactions spending taproots that mix and match leaf versions are non-standard (but only detectable in the case where an previous attempted witness is nonstandard).",
      "created_at" : "2020-07-29T17:44:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-665805640",
      "id" : 665805640,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTgwNTY0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-29T17:44:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665805640",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It seems to me that this change won't help that much in the future upgrade case [...]\r\n\r\n@JeremyRubin I agree, this is a bandaid to help this particular scenario.  Going forward, wtxid-relay + a change to the p2p protocol for announcing/requesting unconfirmed ancestors of a transaction by wtxid seems like the right way to solve this type of problem more generally.",
      "created_at" : "2020-07-29T19:48:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-665867016",
      "id" : 665867016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTg2NzAxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-29T19:48:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665867016",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar @naumenkogs Random idea about this: post-Erlay it may make sense to have a message \"i do not have have dependencies of txid `txid`\", at which point both sides add all known direct and indirect unconfirmed parents of txid they know of to their to-be-broadcast set; if erlay is in effect, the overlap will get cancelled out automatically.",
      "created_at" : "2020-07-29T19:55:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-665874178",
      "id" : 665874178,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NTg3NDE3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T17:24:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/665874178",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated some comments and also used this same logic when processing orphans. ",
      "created_at" : "2020-07-30T21:33:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-666717871",
      "id" : 666717871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjcxNzg3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T21:33:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666717871",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463286444"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463286444"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would it make sense to call this TX_NOWIT_NON_STANDARD instead or so, so that perhaps later it could be extended to cover other forms of nonstandardness that we know are not due to witness data?",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-07-30T21:38:56Z",
      "diff_hunk" : "@@ -26,7 +26,8 @@ enum class TxValidationResult {\n      * is uninteresting.\n      */\n     TX_RECENT_CONSENSUS_CHANGE,\n-    TX_NOT_STANDARD,          //!< didn't meet our local policy rules\n+    TX_INPUTS_NOT_STANDARD,   //!< inputs (covered by txid) failed policy rules",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463286444",
      "id" : 463286444,
      "line" : 29,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4NjQ0NA==",
      "original_commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "original_line" : 29,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/consensus/validation.h",
      "position" : 5,
      "pull_request_review_id" : 458775028,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463286444",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463288772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463288772"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well I didn't expect that we'd ever go to the trouble of even doing this step (wtxid-relay was always the right solution, rather than trying to scatter detection of txid-is-definitely-bad failures through transaction validation), but if you think it's plausible that we would repeat this type of thing in the future, then I agree this would make sense.\r\n\r\nWe could also just as easily change this enum at that point though...",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-07-30T21:43:55Z",
      "diff_hunk" : "@@ -26,7 +26,8 @@ enum class TxValidationResult {\n      * is uninteresting.\n      */\n     TX_RECENT_CONSENSUS_CHANGE,\n-    TX_NOT_STANDARD,          //!< didn't meet our local policy rules\n+    TX_INPUTS_NOT_STANDARD,   //!< inputs (covered by txid) failed policy rules",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463288772",
      "id" : 463288772,
      "in_reply_to_id" : 463286444,
      "line" : 29,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4ODc3Mg==",
      "original_commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "original_line" : 29,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/consensus/validation.h",
      "position" : 5,
      "pull_request_review_id" : 458777756,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463288772",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19498 (Tidy up ProcessOrphanTx by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-07-31T04:06:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-666904390",
      "id" : 666904390,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjkwNDM5MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T04:06:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666904390",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463510698"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463510698"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be 'via txid'",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-07-31T09:39:16Z",
      "diff_hunk" : "@@ -196,6 +196,12 @@ namespace {\n      * the reject filter store wtxids is exactly what we want to avoid\n      * redownload of a rejected transaction.\n      *\n+     * In cases where we can tell that a segwit transaction will fail\n+     * validation no matter the witness, we may add the txid of such\n+     * transaction to the filter as well. This can be helpful when\n+     * communicating with txid-relay peers or if we were to fetch a transaction\n+     * via wtxid (eg in our orphan handling).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463510698",
      "id" : 463510698,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUxMDY5OA==",
      "original_commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "original_line" : 203,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 459045305,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463510698",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463744988"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463744988"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right, of course. The name can be changed later if it becomes more expansive.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-07-31T17:44:11Z",
      "diff_hunk" : "@@ -26,7 +26,8 @@ enum class TxValidationResult {\n      * is uninteresting.\n      */\n     TX_RECENT_CONSENSUS_CHANGE,\n-    TX_NOT_STANDARD,          //!< didn't meet our local policy rules\n+    TX_INPUTS_NOT_STANDARD,   //!< inputs (covered by txid) failed policy rules",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463744988",
      "id" : 463744988,
      "in_reply_to_id" : 463286444,
      "line" : 29,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc0NDk4OA==",
      "original_commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "original_line" : 29,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/consensus/validation.h",
      "position" : 5,
      "pull_request_review_id" : 459350376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463744988",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463767379"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463767379"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, fixed.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-07-31T18:31:58Z",
      "diff_hunk" : "@@ -196,6 +196,12 @@ namespace {\n      * the reject filter store wtxids is exactly what we want to avoid\n      * redownload of a rejected transaction.\n      *\n+     * In cases where we can tell that a segwit transaction will fail\n+     * validation no matter the witness, we may add the txid of such\n+     * transaction to the filter as well. This can be helpful when\n+     * communicating with txid-relay peers or if we were to fetch a transaction\n+     * via wtxid (eg in our orphan handling).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463767379",
      "id" : 463767379,
      "in_reply_to_id" : 463510698,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc2NzM3OQ==",
      "original_commit_id" : "ba645670e6b011108c054eb4397ba3090d3a3cd9",
      "original_line" : 203,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 459378921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463767379",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Happy to include a functional test if anyone is able to put one together for this.",
      "created_at" : "2020-07-31T18:37:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-667292616",
      "id" : 667292616,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzI5MjYxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T18:37:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667292616",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@instagibbs might?",
      "created_at" : "2020-07-31T18:47:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-667296340",
      "id" : 667296340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzI5NjM0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T18:47:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667296340",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think this deserves a test and shouldn't be too bad. I'll take a crack at it this weekend.",
      "created_at" : "2020-07-31T18:51:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-667298234",
      "id" : 667298234,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzI5ODIzNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T18:51:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667298234",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK acdd7f3dda6d6c89e6f91c781bf941bfc66d8ba3. A test would be nice.",
      "created_at" : "2020-07-31T20:30:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-667343723",
      "id" : 667343723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzM0MzcyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T20:30:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667343723",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463821372"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463821372"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: since we're touching the line could stand to put brackets on the if statement block",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-07-31T20:31:28Z",
      "diff_hunk" : "@@ -690,7 +690,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n \n     // Check for non-standard pay-to-script-hash in inputs\n     if (fRequireStandard && !AreInputsStandard(tx, m_view))\n-        return state.Invalid(TxValidationResult::TX_NOT_STANDARD, \"bad-txns-nonstandard-inputs\");\n+        return state.Invalid(TxValidationResult::TX_INPUTS_NOT_STANDARD, \"bad-txns-nonstandard-inputs\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463821372",
      "id" : 463821372,
      "line" : 693,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyMTM3Mg==",
      "original_commit_id" : "acdd7f3dda6d6c89e6f91c781bf941bfc66d8ba3",
      "original_line" : 693,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 7,
      "pull_request_review_id" : 459452322,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463821372",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463823234"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463823234"
         }
      },
      "author_association" : "MEMBER",
      "body" : "why does `orphanTx.GetWitnessHash() != orphanTx.GetHash()` matter? \r\n\r\n",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-07-31T20:35:38Z",
      "diff_hunk" : "@@ -2053,6 +2060,17 @@ void static ProcessOrphanTx(CConnman& connman, CTxMemPool& mempool, std::set<uin\n                 // if we start doing this too early.\n                 assert(recentRejects);\n                 recentRejects->insert(orphanTx.GetWitnessHash());\n+                // If the transaction failed for TX_INPUTS_NOT_STANDARD,\n+                // then we know that the witness was irrelevant to the policy\n+                // failure, since this check depends only on the txid\n+                // (the scriptPubKey being spent is covered by the txid).\n+                // Add the txid to the reject filter to prevent repeated\n+                // processing of this transaction in the event that child\n+                // transactions are later received (resulting in\n+                // parent-fetching by txid via the orphan-handling logic).\n+                if (orphan_state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && orphanTx.GetWitnessHash() != orphanTx.GetHash()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463823234",
      "id" : 463823234,
      "line" : 2071,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyMzIzNA==",
      "original_commit_id" : "acdd7f3dda6d6c89e6f91c781bf941bfc66d8ba3",
      "original_line" : 2071,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 42,
      "pull_request_review_id" : 459452322,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463823234",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463825818"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463825818"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok, because the wtxid is inserted above already, it would be a redundant entry for a non-witness-having tx?",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-07-31T20:42:11Z",
      "diff_hunk" : "@@ -2053,6 +2060,17 @@ void static ProcessOrphanTx(CConnman& connman, CTxMemPool& mempool, std::set<uin\n                 // if we start doing this too early.\n                 assert(recentRejects);\n                 recentRejects->insert(orphanTx.GetWitnessHash());\n+                // If the transaction failed for TX_INPUTS_NOT_STANDARD,\n+                // then we know that the witness was irrelevant to the policy\n+                // failure, since this check depends only on the txid\n+                // (the scriptPubKey being spent is covered by the txid).\n+                // Add the txid to the reject filter to prevent repeated\n+                // processing of this transaction in the event that child\n+                // transactions are later received (resulting in\n+                // parent-fetching by txid via the orphan-handling logic).\n+                if (orphan_state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && orphanTx.GetWitnessHash() != orphanTx.GetHash()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463825818",
      "id" : 463825818,
      "in_reply_to_id" : 463823234,
      "line" : 2071,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyNTgxOA==",
      "original_commit_id" : "acdd7f3dda6d6c89e6f91c781bf941bfc66d8ba3",
      "original_line" : 2071,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 42,
      "pull_request_review_id" : 459458789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463825818",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463848628"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463848628"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, inserting the same hash twice degrades the filter IIRC",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-07-31T21:16:06Z",
      "diff_hunk" : "@@ -2053,6 +2060,17 @@ void static ProcessOrphanTx(CConnman& connman, CTxMemPool& mempool, std::set<uin\n                 // if we start doing this too early.\n                 assert(recentRejects);\n                 recentRejects->insert(orphanTx.GetWitnessHash());\n+                // If the transaction failed for TX_INPUTS_NOT_STANDARD,\n+                // then we know that the witness was irrelevant to the policy\n+                // failure, since this check depends only on the txid\n+                // (the scriptPubKey being spent is covered by the txid).\n+                // Add the txid to the reject filter to prevent repeated\n+                // processing of this transaction in the event that child\n+                // transactions are later received (resulting in\n+                // parent-fetching by txid via the orphan-handling logic).\n+                if (orphan_state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && orphanTx.GetWitnessHash() != orphanTx.GetHash()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463848628",
      "id" : 463848628,
      "in_reply_to_id" : 463823234,
      "line" : 2071,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg0ODYyOA==",
      "original_commit_id" : "acdd7f3dda6d6c89e6f91c781bf941bfc66d8ba3",
      "original_line" : 2071,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 42,
      "pull_request_review_id" : 459482161,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463848628",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yeah might be worth noting that's what it's for. Took me a bit of work.\n\nOn Fri, Jul 31, 2020, 5:16 PM Luke Dashjr <notifications@github.com> wrote:\n\n> *@luke-jr* commented on this pull request.\n> ------------------------------\n>\n> In src/net_processing.cpp\n> <https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463848628>:\n>\n> > @@ -2053,6 +2060,17 @@ void static ProcessOrphanTx(CConnman& connman, CTxMemPool& mempool, std::set<uin\n>                  // if we start doing this too early.\n>                  assert(recentRejects);\n>                  recentRejects->insert(orphanTx.GetWitnessHash());\n> +                // If the transaction failed for TX_INPUTS_NOT_STANDARD,\n> +                // then we know that the witness was irrelevant to the policy\n> +                // failure, since this check depends only on the txid\n> +                // (the scriptPubKey being spent is covered by the txid).\n> +                // Add the txid to the reject filter to prevent repeated\n> +                // processing of this transaction in the event that child\n> +                // transactions are later received (resulting in\n> +                // parent-fetching by txid via the orphan-handling logic).\n> +                if (orphan_state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && orphanTx.GetWitnessHash() != orphanTx.GetHash()) {\n>\n> Yes, inserting the same hash twice degrades the filter IIRC\n>\n> â\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463848628>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABMAFUZZCX3AQ6GZCIXYOX3R6MYCNANCNFSM4PLXHWJQ>\n> .\n>\n",
      "created_at" : "2020-07-31T21:17:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-667360468",
      "id" : 667360468,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzM2MDQ2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-31T21:17:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667360468",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463861464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463861464"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not quite. Adding the same entry is a no-op on the underlying bloom filter (since the same entry hashes to the same values). It does however increment the internal `nEntriesThisGeneration` counter, which means we'll be able to add fewer entries before wiping a previous generation. It effectively lowers the actual capacity of the rolling bloom filter.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-07-31T21:48:56Z",
      "diff_hunk" : "@@ -2053,6 +2060,17 @@ void static ProcessOrphanTx(CConnman& connman, CTxMemPool& mempool, std::set<uin\n                 // if we start doing this too early.\n                 assert(recentRejects);\n                 recentRejects->insert(orphanTx.GetWitnessHash());\n+                // If the transaction failed for TX_INPUTS_NOT_STANDARD,\n+                // then we know that the witness was irrelevant to the policy\n+                // failure, since this check depends only on the txid\n+                // (the scriptPubKey being spent is covered by the txid).\n+                // Add the txid to the reject filter to prevent repeated\n+                // processing of this transaction in the event that child\n+                // transactions are later received (resulting in\n+                // parent-fetching by txid via the orphan-handling logic).\n+                if (orphan_state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && orphanTx.GetWitnessHash() != orphanTx.GetHash()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463861464",
      "id" : 463861464,
      "in_reply_to_id" : 463823234,
      "line" : 2071,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg2MTQ2NA==",
      "original_commit_id" : "acdd7f3dda6d6c89e6f91c781bf941bfc66d8ba3",
      "original_line" : 2071,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 42,
      "pull_request_review_id" : 459495202,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463861464",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463894641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463894641"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think new comment add a bit of ambiguity with regards to name WITNESS_UNKNOWN. Solver() only check the witnessversion to qualify a spent output type as such. Maybe WITNESSVERSION_UNKNOWN ?",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-01T00:19:22Z",
      "diff_hunk" : "@@ -152,6 +152,8 @@ bool IsStandardTx(const CTransaction& tx, bool permit_bare_multisig, const CFeeR\n  * script can be anything; an attacker could use a very\n  * expensive-to-check-upon-redemption script like:\n  *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+ *\n+ * Note that only the non-witness portion of the transaction is checked here.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463894641",
      "id" : 463894641,
      "line" : 156,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5NDY0MQ==",
      "original_commit_id" : "acdd7f3dda6d6c89e6f91c781bf941bfc66d8ba3",
      "original_line" : 156,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/policy/policy.cpp",
      "position" : 5,
      "pull_request_review_id" : 459531481,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463894641",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463896207"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463896207"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This new check seems to overrule the SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM one in VerifyWitnessProgram() ? AFAICT, we don't have test coverage for this standard script flag.\r\n\r\n```\r\n                                   AssertionError: [node 1] Expected messages \"['non-mandatory-script-verify-flag (Witness version reserved for soft-fork upgrades)']\" does not partially match log:\r\n                                    - 2020-08-01T00:14:31.620579Z [msghand] received: tx (87 bytes) peer=1\r\n                                    - 2020-08-01T00:14:31.620845Z [msghand] 52ba45c4ff1da3119475d9ac8201c4ea7018be75444de05aeda9dba22cde28d6 from peer=1 was not accepted: bad-txns-nonstandard-inputs\r\n                                    - 2020-08-01T00:14:31.661127Z [msghand] received: ping (8 bytes) peer=1\r\n```\r\n\r\nSee new test on both master/diff: https://github.com/ariard/bitcoin/commit/a97e4635ae592e582d186079911d943c58df0e54",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-01T00:29:30Z",
      "diff_hunk" : "@@ -164,7 +166,7 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n \n         std::vector<std::vector<unsigned char> > vSolutions;\n         TxoutType whichType = Solver(prev.scriptPubKey, vSolutions);\n-        if (whichType == TxoutType::NONSTANDARD) {\n+        if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::WITNESS_UNKNOWN) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r463896207",
      "id" : 463896207,
      "line" : 169,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5NjIwNw==",
      "original_commit_id" : "acdd7f3dda6d6c89e6f91c781bf941bfc66d8ba3",
      "original_line" : 169,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/policy/policy.cpp",
      "position" : 14,
      "pull_request_review_id" : 459531481,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463896207",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464566239"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464566239"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a comment to explain this.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-03T17:43:29Z",
      "diff_hunk" : "@@ -2053,6 +2060,17 @@ void static ProcessOrphanTx(CConnman& connman, CTxMemPool& mempool, std::set<uin\n                 // if we start doing this too early.\n                 assert(recentRejects);\n                 recentRejects->insert(orphanTx.GetWitnessHash());\n+                // If the transaction failed for TX_INPUTS_NOT_STANDARD,\n+                // then we know that the witness was irrelevant to the policy\n+                // failure, since this check depends only on the txid\n+                // (the scriptPubKey being spent is covered by the txid).\n+                // Add the txid to the reject filter to prevent repeated\n+                // processing of this transaction in the event that child\n+                // transactions are later received (resulting in\n+                // parent-fetching by txid via the orphan-handling logic).\n+                if (orphan_state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && orphanTx.GetWitnessHash() != orphanTx.GetHash()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464566239",
      "id" : 464566239,
      "in_reply_to_id" : 463823234,
      "line" : 2071,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2NjIzOQ==",
      "original_commit_id" : "acdd7f3dda6d6c89e6f91c781bf941bfc66d8ba3",
      "original_line" : 2071,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 42,
      "pull_request_review_id" : 460221534,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464566239",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464568033"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464568033"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not taking this change -- I think this is clear enough, and not worth changing the 15 places in the codebase that enum appears because of its usage in this context.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-03T17:46:52Z",
      "diff_hunk" : "@@ -152,6 +152,8 @@ bool IsStandardTx(const CTransaction& tx, bool permit_bare_multisig, const CFeeR\n  * script can be anything; an attacker could use a very\n  * expensive-to-check-upon-redemption script like:\n  *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+ *\n+ * Note that only the non-witness portion of the transaction is checked here.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464568033",
      "id" : 464568033,
      "in_reply_to_id" : 463894641,
      "line" : 156,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2ODAzMw==",
      "original_commit_id" : "acdd7f3dda6d6c89e6f91c781bf941bfc66d8ba3",
      "original_line" : 156,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/policy/policy.cpp",
      "position" : 5,
      "pull_request_review_id" : 460223708,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464568033",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464568440"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464568440"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure I understand whether you're asking for a change, or pointing out a bug, or something else?  Could you explain if anything needs to be done here?",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-03T17:47:43Z",
      "diff_hunk" : "@@ -164,7 +166,7 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n \n         std::vector<std::vector<unsigned char> > vSolutions;\n         TxoutType whichType = Solver(prev.scriptPubKey, vSolutions);\n-        if (whichType == TxoutType::NONSTANDARD) {\n+        if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::WITNESS_UNKNOWN) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464568440",
      "id" : 464568440,
      "in_reply_to_id" : 463896207,
      "line" : 169,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU2ODQ0MA==",
      "original_commit_id" : "acdd7f3dda6d6c89e6f91c781bf941bfc66d8ba3",
      "original_line" : 169,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/policy/policy.cpp",
      "position" : 14,
      "pull_request_review_id" : 460224212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464568440",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Turns out there's already a nice natural spot for the test, feel free to snipe: https://github.com/instagibbs/bitcoin/commit/57f782d29e1a2d2f315bf99762e0aa6ce4e0f1c0",
      "created_at" : "2020-08-03T18:40:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-668180158",
      "id" : 668180158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2ODE4MDE1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-03T18:40:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668180158",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK https://github.com/bitcoin/bitcoin/pull/19620/commits/ada658f7d668b9bb721383af991e0e8bec476d36",
      "created_at" : "2020-08-03T18:41:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-668180600",
      "id" : 668180600,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2ODE4MDYwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-03T18:41:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668180600",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @instagibbs!  I added your test change here.",
      "created_at" : "2020-08-03T19:07:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-668192153",
      "id" : 668192153,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2ODE5MjE1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-03T19:07:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668192153",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464676039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464676039"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah sorry, previously a segwit v1+ spend would have been rejected by this check : https://github.com/bitcoin/bitcoin/blob/34eb2362581d4d8f0bfd3baa12ba750afaf85c62/src/script/interpreter.cpp#L1552 in `VerifyWitnessProgram`\r\n\r\nNow, a segwit v+1 spend is going to be rejected by this new check in `AreInputsStandards`. As linked test confirms if you run it on both master/diff, it's duplicating a policy rule enforcement.\r\n\r\nIs this the first case where we duplicate policy rule checks ? I don't know, but we should avoid issues in case of future changes making them inconsistent (like verifying first with `bitcoinconsensus_verify_script` then broadcasting through ATMP and obtaining divergent results). \r\n\r\nIf you think it's worthy to fix, we can a) remove L1552 in script/interpreter.cpp or b) add a check against a common `MAX_STANDARD_SEGWIT_VERSION const in L1552 and L133 of script/standard.cpp or c) just add a comment around both about duplication ? ",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-03T21:38:30Z",
      "diff_hunk" : "@@ -164,7 +166,7 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n \n         std::vector<std::vector<unsigned char> > vSolutions;\n         TxoutType whichType = Solver(prev.scriptPubKey, vSolutions);\n-        if (whichType == TxoutType::NONSTANDARD) {\n+        if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::WITNESS_UNKNOWN) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464676039",
      "id" : 464676039,
      "in_reply_to_id" : 463896207,
      "line" : 169,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY3NjAzOQ==",
      "original_commit_id" : "acdd7f3dda6d6c89e6f91c781bf941bfc66d8ba3",
      "original_line" : 169,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/policy/policy.cpp",
      "position" : 14,
      "pull_request_review_id" : 460358274,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464676039",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464919808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464919808"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If I remove this `reason` parameter, then this test passes on master (i.e. I don't think the line below actually tests any functional change).",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-04T09:24:37Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464919808",
      "id" : 464919808,
      "line" : 1435,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkxOTgwOA==",
      "original_commit_id" : "4644948aa391d2850113aac0bcf1da498c411bfb",
      "original_line" : 1435,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 20,
      "pull_request_review_id" : 460645625,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464919808",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464994105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464994105"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good catch. Increasing the wait to 5 seconds seems to fix it, probably because of INV delay logic? 2 seconds isn't enough time for the INV to get sent out by the node. ",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-04T11:52:24Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464994105",
      "id" : 464994105,
      "in_reply_to_id" : 464919808,
      "line" : 1435,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5NDEwNQ==",
      "original_commit_id" : "4644948aa391d2850113aac0bcf1da498c411bfb",
      "original_line" : 1435,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 20,
      "pull_request_review_id" : 460740710,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464994105",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464995671"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464995671"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wonder if having a negative log line is better for each negative test case so we don't have to guess what the time required is.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-04T11:55:00Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r464995671",
      "id" : 464995671,
      "in_reply_to_id" : 464919808,
      "line" : 1435,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5NTY3MQ==",
      "original_commit_id" : "4644948aa391d2850113aac0bcf1da498c411bfb",
      "original_line" : 1435,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 20,
      "pull_request_review_id" : 460742571,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464995671",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465002279"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465002279"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You could use `setmocktime` to move time forward and force the node to send out getdata requests.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-04T12:08:17Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465002279",
      "id" : 465002279,
      "in_reply_to_id" : 464919808,
      "line" : 1435,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAwMjI3OQ==",
      "original_commit_id" : "4644948aa391d2850113aac0bcf1da498c411bfb",
      "original_line" : 1435,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 20,
      "pull_request_review_id" : 460751176,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465002279",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465090834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465090834"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok, I'd suggest just doing 5 seconds for now for both instances of `announce_tx_and_wait_for_getdata` `success=False` in this test. ",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-04T14:25:17Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465090834",
      "id" : 465090834,
      "in_reply_to_id" : 464919808,
      "line" : 1435,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA5MDgzNA==",
      "original_commit_id" : "4644948aa391d2850113aac0bcf1da498c411bfb",
      "original_line" : 1435,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 20,
      "pull_request_review_id" : 460865194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465090834",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465216162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465216162"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed this to 5 seconds.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-04T17:34:16Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465216162",
      "id" : 465216162,
      "in_reply_to_id" : 464919808,
      "line" : 1435,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIxNjE2Mg==",
      "original_commit_id" : "4644948aa391d2850113aac0bcf1da498c411bfb",
      "original_line" : 1435,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 20,
      "pull_request_review_id" : 461026334,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:34:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465216162",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465218480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465218480"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Is this the first case where we duplicate policy rule checks ?\r\n\r\nFirst, it's not an identical check, because the `AreInputsStandard()` check is only enabled on mainnet and not testnet, via the `fRequireStandard` flag also needing to be set. Whereas the script flag is enabled on all networks. \r\n\r\nSecond, I think I'd be pretty surprised if anyone has a mental model of validation where they were certain that policy rule enforcement is not potentially duplicated: the validation rules are so complex and the checks so verbose that we generally tend to take a belt-and-suspenders approach, rather than trying to strictly ensure that any given check only happens once.  If anyone has an understanding that any given transaction policy failure can only happen once in our code, I'd be curious to learn more about how we can be certain of this!\r\n\r\nSo this doesn't strike me as problematic; moreover I think trying to change validation code in order to ensure there is no duplication is risky and has no benefit.  So I've instead added a comment pointing out that the check might be duplicative.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-04T17:38:24Z",
      "diff_hunk" : "@@ -164,7 +166,7 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n \n         std::vector<std::vector<unsigned char> > vSolutions;\n         TxoutType whichType = Solver(prev.scriptPubKey, vSolutions);\n-        if (whichType == TxoutType::NONSTANDARD) {\n+        if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::WITNESS_UNKNOWN) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465218480",
      "id" : 465218480,
      "in_reply_to_id" : 463896207,
      "line" : 169,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIxODQ4MA==",
      "original_commit_id" : "acdd7f3dda6d6c89e6f91c781bf941bfc66d8ba3",
      "original_line" : 169,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/policy/policy.cpp",
      "position" : 14,
      "pull_request_review_id" : 461029153,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-04T17:38:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465218480",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated with a comment to address @ariard's feedback and tried to fix the test by bumping the timeout to 5 seconds.",
      "created_at" : "2020-08-04T17:39:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-668731977",
      "id" : 668731977,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2ODczMTk3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-04T17:39:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668731977",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-05T07:00:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-669018816",
      "id" : 669018816,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTAxODgxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T07:00:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669018816",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465552143"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465552143"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9f88ded8 nit: s/an segwit/a segwit/",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-05T08:12:51Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465552143",
      "id" : 465552143,
      "line" : 1421,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU1MjE0Mw==",
      "original_commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "original_line" : 1421,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 5,
      "pull_request_review_id" : 461438051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T09:52:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465552143",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465587019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465587019"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For my understanding, is there any reason to not use the existing `const orphanHash` local variable, e.g. (without the assert)\r\n```diff\r\n+                assert(orphanHash == orphanTx.GetHash());\r\n-                if (orphan_state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && orphanTx.GetWitnessHash() != orphanTx.GetHash()) {\r\n+                if (orphan_state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && orphanTx.GetWitnessHash() != orphanHash) {\r\n                     // We only add the txid if it differs from the wtxid, to\r\n                     // avoid wasting entries in the rolling bloom filter.\r\n-                    recentRejects->insert(orphanTx.GetHash());\r\n+                    recentRejects->insert(orphanHash);\r\n\r\n```",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-05T09:13:28Z",
      "diff_hunk" : "@@ -2053,6 +2060,19 @@ void static ProcessOrphanTx(CConnman& connman, CTxMemPool& mempool, std::set<uin\n                 // if we start doing this too early.\n                 assert(recentRejects);\n                 recentRejects->insert(orphanTx.GetWitnessHash());\n+                // If the transaction failed for TX_INPUTS_NOT_STANDARD,\n+                // then we know that the witness was irrelevant to the policy\n+                // failure, since this check depends only on the txid\n+                // (the scriptPubKey being spent is covered by the txid).\n+                // Add the txid to the reject filter to prevent repeated\n+                // processing of this transaction in the event that child\n+                // transactions are later received (resulting in\n+                // parent-fetching by txid via the orphan-handling logic).\n+                if (orphan_state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && orphanTx.GetWitnessHash() != orphanTx.GetHash()) {\n+                    // We only add the txid if it differs from the wtxid, to\n+                    // avoid wasting entries in the rolling bloom filter.\n+                    recentRejects->insert(orphanTx.GetHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465587019",
      "id" : 465587019,
      "line" : 2074,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4NzAxOQ==",
      "original_commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "original_line" : 2074,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 45,
      "pull_request_review_id" : 461438051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T09:52:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465587019",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465589298"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465589298"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Similarly, any reason to not use the existing local variables `txid` and `wtxid` that are set next to `tx`; all three are `const`. Tested running this with asserts:\r\n```diff\r\n-                if (state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && tx.GetWitnessHash() != tx.GetHash()) {\r\n-                    recentRejects->insert(tx.GetHash());\r\n+                if (state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && wtxid != txid) {\r\n+                    recentRejects->insert(txid);\r\n```",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-05T09:17:24Z",
      "diff_hunk" : "@@ -3034,6 +3054,17 @@ void ProcessMessage(\n                 // if we start doing this too early.\n                 assert(recentRejects);\n                 recentRejects->insert(tx.GetWitnessHash());\n+                // If the transaction failed for TX_INPUTS_NOT_STANDARD,\n+                // then we know that the witness was irrelevant to the policy\n+                // failure, since this check depends only on the txid\n+                // (the scriptPubKey being spent is covered by the txid).\n+                // Add the txid to the reject filter to prevent repeated\n+                // processing of this transaction in the event that child\n+                // transactions are later received (resulting in\n+                // parent-fetching by txid via the orphan-handling logic).\n+                if (state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && tx.GetWitnessHash() != tx.GetHash()) {\n+                    recentRejects->insert(tx.GetHash());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465589298",
      "id" : 465589298,
      "line" : 3066,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4OTI5OA==",
      "original_commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "original_line" : 3066,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 72,
      "pull_request_review_id" : 461438051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T09:52:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465589298",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465598556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465598556"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't like that this is testing transaction acceptance by relying on our transaction download logic. It means that changes to transaction download (eg #19184) may cause unrelated tests to fail, or (perhaps worse) make it such that tests are no longer actually testing what we want them to test.\r\n\r\nUnfortunately, we have no way to directly query a node's recent rejects filter, so we do need to test this indirectly somehow. Here's an alternative that uses the debug log to determine why the transaction has been rejected. It's not ideal, but I think it's better than testing via a separate subcomponent (tx download):\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_segwit.py b/test/functional/p2p_segwit.py\r\nindex 519fb0438f..e0c671f55d 100755\r\n--- a/test/functional/p2p_segwit.py\r\n+++ b/test/functional/p2p_segwit.py\r\n@@ -123,13 +123,14 @@ def get_virtual_size(witness_block):\r\n     vsize = int((3 * base_size + total_size + 3) / 4)\r\n     return vsize\r\n \r\n-def test_transaction_acceptance(node, p2p, tx, with_witness, accepted, reason=None):\r\n+def test_transaction_acceptance(node, p2p, tx, with_witness, accepted, reason=None, non_reason=None):\r\n     \"\"\"Send a transaction to the node and check that it's accepted to the mempool\r\n \r\n     - Submit the transaction over the p2p interface\r\n     - use the getrawmempool rpc to check for acceptance.\"\"\"\r\n     reason = [reason] if reason else []\r\n-    with node.assert_debug_log(expected_msgs=reason):\r\n+    non_reason = [non_reason] if non_reason else []\r\n+    with node.assert_debug_log(expected_msgs=reason, unexpected_msgs=non_reason):\r\n         p2p.send_and_ping(msg_tx(tx) if with_witness else msg_no_witness_tx(tx))\r\n         assert_equal(tx.hash in node.getrawmempool(), accepted)\r\n \r\n@@ -1418,7 +1419,7 @@ class SegWitTest(BitcoinTestFramework):\r\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\r\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\r\n \r\n-        # Spend everything in temp_utxo into an segwit v1 output.\r\n+        # Spend everything in temp_utxo into a segwit v1 output.\r\n         tx3 = CTransaction()\r\n         total_value = 0\r\n         for i in temp_utxo:\r\n@@ -1433,8 +1434,9 @@ class SegWitTest(BitcoinTestFramework):\r\n         # making sure the txid is added to the reject filter\r\n         self.std_node.announce_tx_and_wait_for_getdata(tx3)\r\n         test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")\r\n-        # Now the node will no longer ask for getdata of this transaction when advertised by same txid\r\n-        self.std_node.announce_tx_and_wait_for_getdata(tx3, timeout=5, success=False)\r\n+        # If we send the transaction again, it'll be rejected by the recent\r\n+        # rejects filter before we try to accept it to mempool\r\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, non_reason=\"bad-txns-nonstandard-inputs\")\r\n \r\n         # Spending a higher version witness output is not allowed by policy,\r\n         # even with fRequireStandard=false.\r\n```",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-05T09:33:25Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")\n+        # Now the node will no longer ask for getdata of this transaction when advertised by same txid\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3, timeout=5, success=False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465598556",
      "id" : 465598556,
      "line" : 1437,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5ODU1Ng==",
      "original_commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "original_line" : 1437,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 22,
      "pull_request_review_id" : 461497537,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T09:33:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465598556",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465733419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465733419"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Unfortunately, we have no way to directly query a node's recent rejects filter\r\n\r\nWould it be better to have a ~unit~ test that calls ATMP and then checks that the txid made it into the reject filter?",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-05T13:39:31Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")\n+        # Now the node will no longer ask for getdata of this transaction when advertised by same txid\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3, timeout=5, success=False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465733419",
      "id" : 465733419,
      "in_reply_to_id" : 465598556,
      "line" : 1437,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTczMzQxOQ==",
      "original_commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "original_line" : 1437,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 22,
      "pull_request_review_id" : 461672953,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:57:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465733419",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465741241"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465741241"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure if that counts as a unit test? ATMP and the reject filter are in different components.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-05T13:50:56Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")\n+        # Now the node will no longer ask for getdata of this transaction when advertised by same txid\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3, timeout=5, success=False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465741241",
      "id" : 465741241,
      "in_reply_to_id" : 465598556,
      "line" : 1437,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0MTI0MQ==",
      "original_commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "original_line" : 1437,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 22,
      "pull_request_review_id" : 461683547,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T13:50:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465741241",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465787127"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465787127"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure it's \"better\", I still think the best thing would be to add log lines in case of rejection due to `recentRejects` and scan for that line in logs.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-05T14:53:51Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")\n+        # Now the node will no longer ask for getdata of this transaction when advertised by same txid\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3, timeout=5, success=False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465787127",
      "id" : 465787127,
      "in_reply_to_id" : 465598556,
      "line" : 1437,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc4NzEyNw==",
      "original_commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "original_line" : 1437,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 22,
      "pull_request_review_id" : 461744488,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T14:53:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465787127",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465809690"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465809690"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I still think the best thing would be to add log lines in case of rejection due to recentRejects and scan for that line in logs.\r\n\r\nThis seems reasonable, and very easy to implement.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-05T15:24:53Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")\n+        # Now the node will no longer ask for getdata of this transaction when advertised by same txid\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3, timeout=5, success=False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465809690",
      "id" : 465809690,
      "in_reply_to_id" : 465598556,
      "line" : 1437,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgwOTY5MA==",
      "original_commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "original_line" : 1437,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 22,
      "pull_request_review_id" : 461774112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T15:24:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465809690",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465870645"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465870645"
         }
      },
      "author_association" : "MEMBER",
      "body" : "After some noodling/test writing I actually think a simple timeout `average_wait_for_typical_getdata<<n<<GETDATA_TX_INTERVAL` is best, or a \"unit\" test.\r\n\r\nI think 5 seconds is ok for now, someone can replace later with something better.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-05T16:58:11Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")\n+        # Now the node will no longer ask for getdata of this transaction when advertised by same txid\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3, timeout=5, success=False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r465870645",
      "id" : 465870645,
      "in_reply_to_id" : 465598556,
      "line" : 1437,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg3MDY0NQ==",
      "original_commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "original_line" : 1437,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 22,
      "pull_request_review_id" : 461853178,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-05T16:58:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465870645",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jonatack Thanks for taking a look -- if I end up re-pushing I'll address the nits.",
      "created_at" : "2020-08-05T20:01:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-669467144",
      "id" : 669467144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTQ2NzE0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T20:01:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669467144",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code Review/Tested ACK 9f88ded\r\n\r\nThanks for the comment on duplicative checks under some flags combination, I agree that alternatives aren't worthy the burden review.",
      "created_at" : "2020-08-06T09:04:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-669807357",
      "id" : 669807357,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTgwNzM1Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T09:04:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669807357",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r466332426"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466332426"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I actually think a simple timeout\r\n\r\nCan you explain why you think that? (I'm not disagreeing, just trying to understand why you think relying on tx download is a better test for this tx acceptance change).\r\n\r\nThere seems to be some confusion around the concept of unit tests here. This is higher-level functionality spread across two different components (validation and net_processing). The only testing framework that we have that encompasses those two components is the functional test framework. As far as I'm aware, we have cpp tests for net_processing (eg denialofservice_tests.cpp) and validation (eg validation_block_tests.cpp), but not tests that span both.\r\n\r\nGenerally, the concept of unit tests is to test units of code in isolation (eg here we could test that validation returns `TX_INPUTS_NOT_STANDARD` when the inputs are non-standard). Functional test test higher-level system functionality (eg we don't redownload or revalidate transactions which have non-standard inputs).",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-06T10:58:20Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")\n+        # Now the node will no longer ask for getdata of this transaction when advertised by same txid\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3, timeout=5, success=False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r466332426",
      "id" : 466332426,
      "in_reply_to_id" : 465598556,
      "line" : 1437,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMzMjQyNg==",
      "original_commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "original_line" : 1437,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 22,
      "pull_request_review_id" : 462414651,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T10:58:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466332426",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK 9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-06T11:04:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-669862121",
      "id" : 669862121,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTg2MjEyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T11:04:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669862121",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r466407329"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466407329"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was mostly annoyed that the various failure cases have to be handled on a case by case basis. One case is `AlreadyHave`, the other is not but the `getdata` is not sent because another peer has already had it requested. I'd rather write something that covers both properly.",
      "commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "created_at" : "2020-08-06T13:22:07Z",
      "diff_hunk" : "@@ -1418,16 +1418,24 @@ def test_segwit_versions(self):\n         temp_utxo.pop()  # last entry in temp_utxo was the output we just spent\n         temp_utxo.append(UTXO(tx2.sha256, 0, tx2.vout[0].nValue))\n \n-        # Spend everything in temp_utxo back to an OP_TRUE output.\n+        # Spend everything in temp_utxo into an segwit v1 output.\n         tx3 = CTransaction()\n         total_value = 0\n         for i in temp_utxo:\n             tx3.vin.append(CTxIn(COutPoint(i.sha256, i.n), b\"\"))\n             tx3.wit.vtxinwit.append(CTxInWitness())\n             total_value += i.nValue\n         tx3.wit.vtxinwit[-1].scriptWitness.stack = [witness_program]\n-        tx3.vout.append(CTxOut(total_value - 1000, CScript([OP_TRUE])))\n+        tx3.vout.append(CTxOut(total_value - 1000, script_pubkey))\n         tx3.rehash()\n+\n+        # First we test this transaction against fRequireStandard=true node\n+        # making sure the txid is added to the reject filter\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3)\n+        test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")\n+        # Now the node will no longer ask for getdata of this transaction when advertised by same txid\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3, timeout=5, success=False)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#discussion_r466407329",
      "id" : 466407329,
      "in_reply_to_id" : 465598556,
      "line" : 1437,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwNzMyOQ==",
      "original_commit_id" : "9f88ded82b2898ca63d44c08072f1ba52f0e18d7",
      "original_line" : 1437,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "test/functional/p2p_segwit.py",
      "position" : 22,
      "pull_request_review_id" : 462511747,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19620",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-06T13:22:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466407329",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 9f88ded82b2898ca63d44c08072f1ba52f0e18d7 - code review",
      "created_at" : "2020-08-06T18:31:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19620#issuecomment-670102686",
      "id" : 670102686,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19620",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDEwMjY4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T18:31:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670102686",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]
