{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "### Problem\r\n\r\n#### New Developers unable to quickly get up and going in their IDE\r\n\r\nThe current  build system is very brittle and the custom tailored nature of  it leaves the development team having to address constant breaking changes and new architectures etc. It also leaves new comers to the project in a state of despair when they realize that the current IDE cannot pick up the project. \r\n\r\nFor example in this issue #13694 , the user asked \"where I could find the guide on how to install an IDE and debug the code?\" because his top of the line IDE, CLion works by using CMake. The other well known C/C++ IDEs that are currently used are able to and appear to prefer the CMake build system. Sadly, the sarcastic response (i hope) from @sipa was \"Most developers don't use IDEs as far as I know\".\r\n\r\nFor the Windows users out there, in issue #14118 , the issue got alot of support to the idea of adding CMake, as one is able to quickly work on C/C++ projects given Visual Studio's and VSCode support for CMake projects.\r\n\r\n#### Improve ecosystem by having option to build shared libraries\r\n\r\nThis last point will be a simple theory, but if CMake is added, one could imagine that the ecosystem to grow and flourish and bring in new support and tooling with it. For instance, if i wanted to instead wrap around the C++ code using CFFI and call directly from Python/JS/Whatever I am unable to as where would I even begin to get started on compiling a library as opposed to the executable in a neat manner? Right now the best way to interact with bitcoin is via the rpc it seems, but why not directly ?\r\n\r\nThe other direct benefits of having a \"simple\" CMake build system is we can undo the tight coupling of what should be the \"build\" with the source code. When developing, the sanitizers can be added and help ensure there is strong checks with proper memory usage and addressing etc.\r\n\r\n#### Proper sanitizing and bug catching \r\n\r\nFor instance, I found a buffer overflow in the tests within the ctaes library (inside crypto) which was found trivially after setting up a proper standalone CMake file for it. This was found within hours of me poking around and was there for a number of years. Makes one wonder how many other bugs are simple low hanging fruit, just waiting to be picked.\r\n\r\n### Solution\r\nAccording to [The Developer Ecosystem in 2020: How C++ is Doing](https://blog.jetbrains.com/clion/2020/06/dev-eco-cpp-2020/) , the C++ community is moving with conviction to CMake as their build system of choice. Over the last couple years its gone from 34% to 53% of developers choosing it over Makefiles or Visual Studio. If the trend continues, it is imperative the project invests in improving the current status quo.\r\n\r\nBegin adding CMake files to cover the major OSs Windows, OSX, Linux on the major processors x86_64. Then expand out to ARM and the smaller targets like Raspberry Pis and the like. Eschew the many optimizations and custom-tailored functions/modules for specific architectures and just add the generic standard library versions until the entire project builds and tests properly.\r\n\r\nWhile this is a \"monumental task\" as noted by @sipa , the hardest part will be decoupling of the many build steps with source code, but thats more tedious and repetitive than anything. \r\n\r\nI can and already have a couple CMake files for some modules like crypto and ctaes to start off. What I am not sure of exactly is the flow of direction between the libraries in the \"bitcoin-core\" project and this one. Which one follows which?\r\n\r\n",
   "closed_at" : "2020-08-25T12:36:58Z",
   "closed_by" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 31,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19693/comments",
   "created_at" : "2020-08-10T13:19:41Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19693/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/19693",
   "id" : 676130801,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      },
      {
         "color" : "7cf575",
         "default" : false,
         "description" : null,
         "id" : 64583,
         "name" : "Feature",
         "node_id" : "MDU6TGFiZWw2NDU4Mw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19693/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU2NzYxMzA4MDE=",
   "number" : 19693,
   "performed_via_github_app" : null,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Decouple build system from source. Use CMake to help newcomers and ecosystem!",
   "updated_at" : "2020-08-25T12:36:58Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19693",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/15861355?v=4",
      "events_url" : "https://api.github.com/users/whb07/events{/privacy}",
      "followers_url" : "https://api.github.com/users/whb07/followers",
      "following_url" : "https://api.github.com/users/whb07/following{/other_user}",
      "gists_url" : "https://api.github.com/users/whb07/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/whb07",
      "id" : 15861355,
      "login" : "whb07",
      "node_id" : "MDQ6VXNlcjE1ODYxMzU1",
      "organizations_url" : "https://api.github.com/users/whb07/orgs",
      "received_events_url" : "https://api.github.com/users/whb07/received_events",
      "repos_url" : "https://api.github.com/users/whb07/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/whb07/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/whb07/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/whb07"
   }
}
