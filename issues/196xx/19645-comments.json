[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19339 (validation: re-delegate absurd fee checking from mempool to clients by glozow)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-08-02T20:11:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-667719132",
      "id" : 667719132,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzcxOTEzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-01T16:34:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667719132",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "i'm leaning toward a concept nack.\r\n\r\nI don't think this is urgent to fix and incentivizes using the mempool as working space for negotiating smaller witnesses, rather than attempting to produce a smaller signature on first broadcast. Further, this opens up potential attacks where you can make malleable smaller and smaller witnesses and keep resubmitting to boost feerate or something. I also think it's sufficiently rare that we'd even have smaller valid witnesses to submit, but then if someone starts relying on this behavior we're stuck supporting it forever.\r\n\r\nwhere you might convince me that it's a problem is if Alice and Bob are doing a payjoin or something, and then Bob changes his witness to be an even bigger one and then broadcasts, locking Alice onto a lower fee rate for the transaction.\r\n\r\nBut again, on urgency, these replacement policies are really only relevant once more complex taproot scripts are widely deployed and a change like this can be added to a future release policy easily.",
      "created_at" : "2020-08-02T20:35:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-667721613",
      "id" : 667721613,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzcyMTYxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-02T20:35:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667721613",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't think this is urgent to fix and incentivizes using the mempool as working space for negotiating smaller witnesses, rather than attempting to produce a smaller signature on first broadcast.\r\n\r\nI think the notion of first broadcast doesn't hold when you have multiple-party involved with alternatives spending paths and so potential concurrent broadcasts. Parties can't produce smaller signatures because key distribution across script branches encodes a policy, it can be either Alice or Bob+Caroll+Dave, where Alice has a higher level of privileges. As a practical example you might have pre-signed vault transactions, like https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-April/017793.html\r\n\r\n> Further, this opens up potential attacks where you can make malleable smaller and smaller witnesses and keep resubmitting to boost feerate or something.\r\n\r\nYou're still liable to RBF rules compliance, especially rule 4 on incremental relay fee ?\r\n\r\n> where you might convince me that it's a problem is if Alice and Bob are doing a payjoin or something, and then Bob changes his witness to be an even bigger one and then broadcasts, locking Alice onto a lower fee rate for the transaction.\r\n\r\nAs a first step you should avoid to introduce witness malleability if parties are distrusted, and currently as I mentioned it won't likely propagate due to default mempool settings. But yes if we change it in the future, it would be a limited guardrail for this kind of scenario.\r\n\r\nThere is no urgency to fix, it's more making consistent our relay wtxid-policy with our mempool one.\r\n",
      "created_at" : "2020-08-02T21:37:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-667727767",
      "id" : 667727767,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NzcyNzc2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-02T21:42:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667727767",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. As long as this is re-using the BIP125 RBF logic, then I can't see how it can be any more of an attack vector than any other kind of RBF.\r\n\r\n> these replacement policies are really only relevant once more complex taproot scripts are widely deployed and a change like this can be added to a future release policy easily.\r\n\r\nI think we'd want this widely deployed _before_  such scripts were possible.",
      "created_at" : "2020-08-03T12:21:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-667992586",
      "id" : 667992586,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2Nzk5MjU4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T13:19:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667992586",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Conceptually I agree this would be a reasonable (incentive-compatible) behavior, but I'm not sure this is worth the complexity/effort to implement this change.  To do this correctly, you'd also want to not evict all the descendants of the replaced transaction in situations like this, which I think means more special cased mempool acceptance logic.\r\n\r\nIs there any application out there that would expect to use this behavior?  I know this is fun to theorize about but it's hard for me to imagine there will be anyone using this -- so I am skeptical this is worth the effort and added code complexity.",
      "created_at" : "2020-08-05T13:12:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-669185028",
      "id" : 669185028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTE4NTAyOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T13:12:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669185028",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sdaftuar I think the issue is more that an adversary can use it.\r\n\r\nE.g., say I do a coinjoin with you, and we create a txn with a feerate A and a witness weight of X. Then, as one of the parties to the txn, I create a much heavier witness weight 2X, and decrease the feerate to like 0.7A. Now it takes forever to confirm.\r\n\r\nSo it's less so someone using it, than abusing it.",
      "created_at" : "2020-08-05T16:53:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-669308250",
      "id" : 669308250,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTMwODI1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T16:53:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669308250",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> E.g., say I do a coinjoin with you, and we create a txn with a feerate A and a witness weight of X. Then, as one of the parties to the txn, I create a much heavier witness weight 2X, and decrease the feerate to like 0.7A. Now it takes forever to confirm.\r\n\r\nI get that this is a theoretical concern, but has this ever actually happened to anyone?  I can imagine there could be lots of reasons why behavior like this would not actually take place in practice.\r\n\r\nIf stuff like this has happened, then I can get on board with wanting to deal with it in the right way.",
      "created_at" : "2020-08-05T17:03:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-669313663",
      "id" : 669313663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTMxMzY2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T17:03:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669313663",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  To do this correctly, you'd also want to not evict all the descendants of the replaced transaction in situations like this, which I think means more special cased mempool acceptance logic.\r\n\r\nI agree in-place substitution while conserving chain of transactions would be better bandwidth-wise. But that would require special RBF rules to handle it and I think it's better to strictly bound to our current RBF rules to make it easier to reason on. We already have the same issue with someone replacing a parent tx with a new txid and advertising again a chain of transaction paying the same outputs. Cheap RBF replacement should be addressed on its own, this PR doesn't pretend to make it better or worse ?\r\n\r\n> Is there any application out there that would expect to use this behavior? \r\n\r\nBeyond preventing abuse for potential coinjoin/payjoin/vaults and easing future usage for taproot branches, as of today there is the practical usage of selecting your best-feerate witness among a set of valid ones. I don't think a lot of users have yet this mental model but I expect this to change with wider adoption of Miniscript.\r\n\r\nUpdated with better comment/logs. Let me know if you think it's worthy further review time otherwise I would close it.",
      "created_at" : "2020-08-06T09:42:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-669827588",
      "id" : 669827588,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTgyNzU4OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T09:42:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669827588",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> E.g., say I do a coinjoin with you, and we create a txn with a feerate A and a witness weight of X. Then, as one of the parties to the txn, I create a much heavier witness weight 2X, and decrease the feerate to like 0.7A. Now it takes forever to confirm.\r\n\r\nI think this concern is indeed valid and the problem should be addressed. However, it's hard for me to justify at which cost (code complexity) we want to address it.\r\n\r\nWe also want to make sure that this solution is indeed sufficient and the best alternative among others.",
      "created_at" : "2020-08-06T10:12:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-669840943",
      "id" : 669840943,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTg0MDk0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T10:12:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669840943",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> We also want to make sure that this solution is indeed sufficient and the best alternative among others.\r\n\r\nJust to clarify, this current proposal doesn't effectively mitigate this without further change to our RBF handling due to the default `incrementalrelayfee` value. However, as my previous comment aims to underscore, it does provide value today for users with alternative script branches, as a tool to select the best-feerate witness, assuming a local policy of `incrementalrelayfee=0`.\r\n\r\nI think mitigating low-feerate pinning is an orthogonal discussion, see https://github.com/bitcoin/bitcoin/issues/14895#issuecomment-665969902\r\n\r\nIMO, the code complexity of the current proposed PR is straightforward as it doesn't interfere with RBF.\r\n",
      "created_at" : "2020-08-06T12:34:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-669899731",
      "id" : 669899731,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTg5OTczMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T12:36:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669899731",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Suggest calling this \"updating tx with cheaper witness\" or similar -- \"wtxid-acceptance\" is pretty generic, it's more analogous to \"replace by fee\", except that you're not even replacing anything as far as the txid goes, which is 99% of what matters? I believe the rule is \"txid remains the same but overall weight decreases; so only witness data can change, tx fee rate increases, and no descendants are evicted from the mempool\". (Note the taproot bip raises the possibility of weight being artificially increased in some cases, so the witness data might strictly be larger despite the tx weight decreasing)",
      "created_at" : "2020-08-11T16:21:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-672066297",
      "id" : 672066297,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MjA2NjI5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-11T16:21:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672066297",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-08-11T20:13:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-672255437",
      "id" : 672255437,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MjI1NTQzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-11T20:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672255437",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns Good call, took your suggestion. Initially called it \"wtxid-acceptance\" as this is literally what this PR does, evaluating an already-present utxo-spend candidate on wtxid rather than txid. In practice, I agree that txid is what matters, like evaluating descendants limits. Note, for implementation simplicity, it does evict descendants from mempool, we can implement in-place substitution as a follow-up if it feels needed.\r\n\r\nFor the taproot hint, I think that rational holds, as from the miner viewpoint you want to increase feerate per weight unit. I don't think that effective memory-space of these weight units is a burden for miner mempools.",
      "created_at" : "2020-08-13T14:24:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-673509569",
      "id" : 673509569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzUwOTU2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T14:24:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673509569",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ariard does it make sense to attempt to merge the witnesses into a lowest fee form? E.g. if witA[0] > witB[0], but witA[1] + withA[0] < witB[0] + withB[1] it may make sense to make a new witC comprised of the best of both.",
      "created_at" : "2020-08-13T15:27:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-673544971",
      "id" : 673544971,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzU0NDk3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T15:27:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673544971",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@JeremyRubin Do you mean cross-inputs, i.e if we learn wtxid_1:(witA, witB) and wtxid_2:(witA', witB') and  witA > witA' and witB < witB' we select witA and witB' to compose new wtxid_3 ? Or single-input, if by decomposing multiple known witnesses and analyzing witnessScript we're able to compress to a better feerate witness ? \r\n\r\nEither way, I think what your question is raising is a _separation of concerns_ across the bitcoin stack. I don't think that's the job of network mempools to optimize your spends based on a set of witness element you may have broadcasted. This sounds like a new DoS vector and you would need to pay for the CPU time, thus reducing worthiness of operation.\r\n\r\nI think that composing best-feerate witness in function of your solvable scripts paths is better done by a higher tool. Of course, this software may not implement correctly all weight accounting rules, especially post-Taproot, so this PR allows you to verify composed witnesses against your local mempool, assuming you set `incrementalrelayfee=0`.",
      "created_at" : "2020-08-20T21:06:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-677905038",
      "id" : 677905038,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NzkwNTAzOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-20T21:06:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677905038",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar \r\n\r\n> I get that this is a theoretical concern, but has this ever actually happened to anyone?  I can imagine there could be lots of reasons why behavior like this would not actually take place in practice.\r\n\r\nWhile opening this PR, I thought too it was a theoretical concern, but [reviewing the DLC specs](https://github.com/discreetlogcontracts/dlcspecs/pull/51#discussion_r467589135) last week, such protocol would be vulnerable to witness weight inflation discussed here. And a honest participant can't rely on RBF as it's easy for a malicious party to attach a high-absolute-fee, low-feerate chain of transactions to its change output \r\n\r\nOf course you can adopt carve-out mechanism and ensure you don't have more than one immediately spendable output by party but this come with far less protocol flexibility and you might loss few blocks between initial broadcast and trigger of your fee-bump.\r\n\r\nI agree that change advocated in this PR won't fix it without further modifications to our RBF policy but it's at least a minimal prerequisite. \r\n\r\nOr do you think we should first have a broader discussion on the mental model that higher protocol designers should adopt with regards to our mempool/relay policy ?",
      "created_at" : "2020-08-20T21:39:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-677919723",
      "id" : 677919723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NzkxOTcyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-20T23:17:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677919723",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @JeremyRubin Do you mean cross-inputs, i.e if we learn wtxid_1:(witA, witB) and wtxid_2:(witA', witB') and witA > witA' and witB < witB' we select witA and witB' to compose new wtxid_3 ? Or single-input, if by decomposing multiple known witnesses and analyzing witnessScript we're able to compress to a better feerate witness ?\r\n> \r\n> Either way, I think what your question is raising is a _separation of concerns_ across the bitcoin stack. I don't think that's the job of network mempools to optimize your spends based on a set of witness element you may have broadcasted. This sounds like a new DoS vector and you would need to pay for the CPU time, thus reducing worthiness of operation.\r\n\r\nIt's not optimizing your spends, it's optimizing miner revenue, which is ~the whole point.\r\n\r\nIn terms of DoS the issue that also occurs is that someone can malicious anti-merge your better witness, e.g.,\r\n\r\nI see B which is better for every input then A, and then I cut B's witness with half A's witnesses, then broadcast. Now B is not minrelay increment better  than half B half A, so i get pinned.\r\n",
      "created_at" : "2020-08-20T23:27:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-677955391",
      "id" : 677955391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Nzk1NTM5MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-20T23:27:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677955391",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> \"txn-already-in-mempool\" isn't accurate anymore in a wtxid-relay context.\r\n\r\nI think at the very least there should be a clearer error for this. AFAIK right now a user would have to _guess_ that the one in mempool has a different witness and then use `getrawmempool` or `getrawtransaction` to confirm?\r\n\r\nIn terms of DoSing, it seems to me that this is essentially \"RBF taking into account witness data\" (is that incorrect?) and can thus be evaluated in a similar manner.",
      "created_at" : "2020-10-05T23:41:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-703946216",
      "id" : 703946216,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwMzk0NjIxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-05T23:41:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/703946216",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-10-07T04:25:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-704683092",
      "id" : 704683092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwNDY4MzA5Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-07T04:25:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/704683092",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@glozow \r\n\r\n> I think at the very least there should be a clearer error for this. AFAIK right now a user would have to guess that the one in mempool has a different witness and then use getrawmempool or getrawtransaction to confirm?\r\n\r\nGood idea, that's maybe better for now to return a new error for an unsuccessful `sendrawtransaction` due to an already-present txid-with-different-wtixd. I'll open separately with the test.\r\n\r\n> In terms of DoSing, it seems to me that this is essentially \"RBF taking into account witness data\" (is that incorrect?) and can thus be evaluated in a similar manner.\r\n\r\nIn the context of multi-party protocol (e.g a CoinSwap, LN), what is concerning is a pinning (https://bitcoinops.org/en/topics/transaction-pinning/) where a malicious participant inflate a provided witness to delay a time-locked transaction either for timevalue-DoS or plainly stealing funds due to concurrent claiming. \r\n\r\nBecause for the fix to be effective you need to change the RBF logic from requiring an absolute fee increase between 2 transactions from a feerate relative increase (see https://github.com/bitcoin/bitcoin/blob/283a73d7eaea2907a6f7f800f529a0d6db53d7a6/src/validation.cpp#L910) . Currently, with a default incrementalrelayfee > 0, this PR isn't not going to mitigate the pinning issue network-wise as the absolute fee is committed as part of the txid and thus is strictly the _same_ between a divergent-wtxids/equivalent-txid transaction pair.\r\n\r\nIt needs more thoughts that the current PR which is more providing locally fee estimation between different witnesses to a user.",
      "created_at" : "2020-10-07T18:15:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-705109193",
      "id" : 705109193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwNTEwOTE5Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-07T18:16:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/705109193",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--13523179cfe9479db18ec6c5d236f789-->There hasn't been much activity lately and the patch still needs rebase. What is the status here?\n\n* Is it still relevant? â¡ï¸ Please solve the conflicts to make it ready for review and to ensure the CI passes.\n* Is it no longer relevant? â¡ï¸ Please close.\n* Did the author lose interest or time to work on this? â¡ï¸ Please close it and mark it 'Up for grabs' with the label, so that it can be picked up in the future.\n",
      "created_at" : "2021-12-15T11:21:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-994694736",
      "id" : 994694736,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "IC_kwDOABII5847SdZQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/994694736/reactions"
      },
      "updated_at" : "2021-12-15T11:21:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/994694736",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing, superseded by #24007 ",
      "created_at" : "2022-01-10T00:24:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-1008456146",
      "id" : 1008456146,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19645",
      "node_id" : "IC_kwDOABII5848G9HS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1008456146/reactions"
      },
      "updated_at" : "2022-01-10T00:24:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1008456146",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]
