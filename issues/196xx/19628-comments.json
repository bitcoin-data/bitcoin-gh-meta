[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-07-30T15:43:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-666471177",
      "id" : 666471177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjQ3MTE3Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T15:43:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666471177",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "[Filtered code coverage report](https://people.freebsd.org/~vd/pr19628_daa1d8b11_coverage/) (files not modified by this PR are omitted and not modified lines in files that are otherwise modified are dimmed).\r\n\r\n[List of modified and not covered lines](https://people.freebsd.org/~vd/pr19628_daa1d8b11_coverage/modified_and_not_covered.html).",
      "created_at" : "2020-07-30T16:01:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-666487671",
      "id" : 666487671,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjQ4NzY3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T16:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666487671",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19797 (net: Remove old check for 3-byte shifted IP addresses from pre-0.2.9 node â¦ by i-rme)\n* #19687 (refactor: make EncodeBase{32,64} consume Spans by theStack)\n* #19415 (net: Make DNS lookup mockable, add fuzzing harness by practicalswift)\n* #18722 (addrman: improve performance by using more suitable containers by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-07-30T20:25:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-666670421",
      "id" : 666670421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2NjY3MDQyMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T09:04:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666670421",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r463949087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463949087"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Are you sure the use of `prevector` is warranted here? Measurements would be nice.\r\n\r\nGenerally I think we should try stick with to the standard containers unless we have clear quantitative evidence showing that they are unsuitable for the scenario being considered. Reviewers, static analysers and compilers tend to be better at analysing use of the standard containers :)\r\n\r\nFWIW: \r\n\r\n```\r\n$ git grep -l prevector -- \"*.cpp\" \"*.h\" \":(exclude)src/bench/\" \":(exclude)src/test/\"\r\nsrc/hash.h\r\nsrc/memusage.h\r\nsrc/prevector.h\r\nsrc/script/script.h\r\nsrc/serialize.h\r\n```",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-01T10:36:13Z",
      "diff_hunk" : "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as TORv2 address.\n+static constexpr uint8_t TORv2_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x87, 0xD8, 0x7E, 0xEB, 0x43\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as an internal address.\n+static constexpr uint8_t INTERNAL_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 // 0xFD + sha256(\"bitcoin\")[0:5].\n+};\n+\n+/// Size of IPv4 address (in bytes).\n+static constexpr size_t ADDR_IPv4_SIZE = 4;\n+\n+/// Size of IPv6 address (in bytes).\n+static constexpr size_t ADDR_IPv6_SIZE = 16;\n+\n+/// Size of TORv2 address (in bytes).\n+static constexpr size_t ADDR_TORv2_SIZE = 10;\n+\n+/// Size of \"internal\" (NET_INTERNAL) address (in bytes).\n+static constexpr size_t ADDR_INTERNAL_SIZE = 10;\n+\n /**\n  * Network address.\n  */\n class CNetAddr\n {\n     protected:\n+        /**\n+         * Raw representation of the network address.\n+         * In network byte order (big endian) for IPv4 and IPv6.\n+         */\n+        prevector<ADDR_IPv6_SIZE, uint8_t> m_addr{ADDR_IPv6_SIZE, 0x0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r463949087",
      "id" : 463949087,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk0OTA4Nw==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 91,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 459569784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463949087",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r463984610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463984610"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I suggested this, so let me back it up.\r\n\r\nCurrently an address in CAddrMan consumes 256 bytes (cost in mapInfo and mapAddr together, plus allocation overhead).\r\n\r\nThis PR as-is raises that to 288 bytes, for addresses that take up to 16 bytes (which is all of them, for now).\r\n\r\nUsing an `std::vector<uint8_t>` instead would change that to 352 bytes per address, or an extra 64 on top. It would also increase memory fragmentation and (slightly) increase CPU usage because of two malloc's per address.\r\n\r\nFTR, my node has 69691 addresses in CAddrMan.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-01T17:52:19Z",
      "diff_hunk" : "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as TORv2 address.\n+static constexpr uint8_t TORv2_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x87, 0xD8, 0x7E, 0xEB, 0x43\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as an internal address.\n+static constexpr uint8_t INTERNAL_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 // 0xFD + sha256(\"bitcoin\")[0:5].\n+};\n+\n+/// Size of IPv4 address (in bytes).\n+static constexpr size_t ADDR_IPv4_SIZE = 4;\n+\n+/// Size of IPv6 address (in bytes).\n+static constexpr size_t ADDR_IPv6_SIZE = 16;\n+\n+/// Size of TORv2 address (in bytes).\n+static constexpr size_t ADDR_TORv2_SIZE = 10;\n+\n+/// Size of \"internal\" (NET_INTERNAL) address (in bytes).\n+static constexpr size_t ADDR_INTERNAL_SIZE = 10;\n+\n /**\n  * Network address.\n  */\n class CNetAddr\n {\n     protected:\n+        /**\n+         * Raw representation of the network address.\n+         * In network byte order (big endian) for IPv4 and IPv6.\n+         */\n+        prevector<ADDR_IPv6_SIZE, uint8_t> m_addr{ADDR_IPv6_SIZE, 0x0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r463984610",
      "id" : 463984610,
      "in_reply_to_id" : 463949087,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk4NDYxMA==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 91,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 459593442,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463984610",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464117640"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464117640"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@sipa Thanks for quantifying! That answers my question :)",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-02T20:01:00Z",
      "diff_hunk" : "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as TORv2 address.\n+static constexpr uint8_t TORv2_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x87, 0xD8, 0x7E, 0xEB, 0x43\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as an internal address.\n+static constexpr uint8_t INTERNAL_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 // 0xFD + sha256(\"bitcoin\")[0:5].\n+};\n+\n+/// Size of IPv4 address (in bytes).\n+static constexpr size_t ADDR_IPv4_SIZE = 4;\n+\n+/// Size of IPv6 address (in bytes).\n+static constexpr size_t ADDR_IPv6_SIZE = 16;\n+\n+/// Size of TORv2 address (in bytes).\n+static constexpr size_t ADDR_TORv2_SIZE = 10;\n+\n+/// Size of \"internal\" (NET_INTERNAL) address (in bytes).\n+static constexpr size_t ADDR_INTERNAL_SIZE = 10;\n+\n /**\n  * Network address.\n  */\n class CNetAddr\n {\n     protected:\n+        /**\n+         * Raw representation of the network address.\n+         * In network byte order (big endian) for IPv4 and IPv6.\n+         */\n+        prevector<ADDR_IPv6_SIZE, uint8_t> m_addr{ADDR_IPv6_SIZE, 0x0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464117640",
      "id" : 464117640,
      "in_reply_to_id" : 463949087,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDExNzY0MA==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 91,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 459674809,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464117640",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464154824"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464154824"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Slightly more modern:\r\n\r\n```c++\r\nreturn std::all_of(m_addr.begin(), m_addr.end(), [](uint8_t b) { return b == 0; });\r\n```\r\n",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-03T01:42:35Z",
      "diff_hunk" : "@@ -85,151 +70,161 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORv2_SIZE)\n             return false;\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPv4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    assert(sizeof(ipv6Addr) == ADDR_IPv6_SIZE);\n+    SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPv6_SIZE]>(&ipv6Addr));\n     scopeId = scope;\n }\n \n-unsigned int CNetAddr::GetByte(int n) const\n-{\n-    return ip[15-n];\n-}\n-\n bool CNetAddr::IsBindAny() const\n {\n-    const int cmplen = IsIPv4() ? 4 : 16;\n-    for (int i = 0; i < cmplen; ++i) {\n-        if (GetByte(i)) return false;\n+    if (!IsIPv4() && !IsIPv6()) {\n+        return false;\n+    }\n+    for (uint8_t b : m_addr) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464154824",
      "id" : 464154824,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1NDgyNA==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 116,
      "original_position" : 142,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 459705383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464154824",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464156291"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464156291"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not something you introduced, but this only works because those addresses have the same byte representation in every byte order.\r\n",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-03T01:50:28Z",
      "diff_hunk" : "@@ -287,17 +283,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {(uint32_t)INADDR_ANY, (uint32_t)INADDR_NONE}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464156291",
      "id" : 464156291,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1NjI5MQ==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 284,
      "original_position" : 329,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 459705383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464156291",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464156525"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464156525"
         }
      },
      "author_association" : "MEMBER",
      "body" : "More modern:\r\n\r\n```c++\r\nreturn std::tie(a.m_net, a.m_addr) < std::tie(b.m_net, b.m_addr);\r\n```\r\n",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-03T01:51:43Z",
      "diff_hunk" : "@@ -369,12 +360,12 @@ std::string CNetAddr::ToString() const\n \n bool operator==(const CNetAddr& a, const CNetAddr& b)\n {\n-    return a.m_net == b.m_net && memcmp(a.ip, b.ip, 16) == 0;\n+    return a.m_net == b.m_net && a.m_addr == b.m_addr;\n }\n \n bool operator<(const CNetAddr& a, const CNetAddr& b)\n {\n-    return a.m_net < b.m_net || (a.m_net == b.m_net && memcmp(a.ip, b.ip, 16) < 0);\n+    return a.m_net < b.m_net || (a.m_net == b.m_net && a.m_addr < b.m_addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464156525",
      "id" : 464156525,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1NjUyNQ==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 368,
      "original_position" : 390,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 459705383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464156525",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464157430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464157430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: uppercase v in global constants (here and further).",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-03T01:56:08Z",
      "diff_hunk" : "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464157430",
      "id" : 464157430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1NzQzMA==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 55,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 459705383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464157430",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-08-03T16:25:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-668116023",
      "id" : 668116023,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2ODExNjAyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-03T16:25:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668116023",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465544086"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465544086"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the question and the elaborate explanation! Indeed smaller size and avoiding an extra heap allocation is better. FWIW I moved `m_addr` definition before `m_net` to save 8 bytes from the size of `CNetAddr` (32 vs 40 bytes on x64).",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-05T07:58:28Z",
      "diff_hunk" : "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as TORv2 address.\n+static constexpr uint8_t TORv2_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x87, 0xD8, 0x7E, 0xEB, 0x43\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as an internal address.\n+static constexpr uint8_t INTERNAL_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 // 0xFD + sha256(\"bitcoin\")[0:5].\n+};\n+\n+/// Size of IPv4 address (in bytes).\n+static constexpr size_t ADDR_IPv4_SIZE = 4;\n+\n+/// Size of IPv6 address (in bytes).\n+static constexpr size_t ADDR_IPv6_SIZE = 16;\n+\n+/// Size of TORv2 address (in bytes).\n+static constexpr size_t ADDR_TORv2_SIZE = 10;\n+\n+/// Size of \"internal\" (NET_INTERNAL) address (in bytes).\n+static constexpr size_t ADDR_INTERNAL_SIZE = 10;\n+\n /**\n  * Network address.\n  */\n class CNetAddr\n {\n     protected:\n+        /**\n+         * Raw representation of the network address.\n+         * In network byte order (big endian) for IPv4 and IPv6.\n+         */\n+        prevector<ADDR_IPv6_SIZE, uint8_t> m_addr{ADDR_IPv6_SIZE, 0x0};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465544086",
      "id" : 465544086,
      "in_reply_to_id" : 463949087,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0NDA4Ng==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 91,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 461427646,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465544086",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465567494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465567494"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right! Even though the values of those constants are never going to change (I hope!), does the following look better?\r\n\r\n```cpp\r\nfor (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\r\n```",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-05T08:39:19Z",
      "diff_hunk" : "@@ -287,17 +283,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {(uint32_t)INADDR_ANY, (uint32_t)INADDR_NONE}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465567494",
      "id" : 465567494,
      "in_reply_to_id" : 464156291,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2NzQ5NA==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 284,
      "original_position" : 329,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 461457580,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465567494",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased to resolve a conflict.",
      "created_at" : "2020-08-05T11:04:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-669129564",
      "id" : 669129564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTEyOTU2NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T11:04:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669129564",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465660727"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465660727"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-05T11:30:48Z",
      "diff_hunk" : "@@ -85,151 +70,161 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORv2_SIZE)\n             return false;\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPv4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    assert(sizeof(ipv6Addr) == ADDR_IPv6_SIZE);\n+    SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPv6_SIZE]>(&ipv6Addr));\n     scopeId = scope;\n }\n \n-unsigned int CNetAddr::GetByte(int n) const\n-{\n-    return ip[15-n];\n-}\n-\n bool CNetAddr::IsBindAny() const\n {\n-    const int cmplen = IsIPv4() ? 4 : 16;\n-    for (int i = 0; i < cmplen; ++i) {\n-        if (GetByte(i)) return false;\n+    if (!IsIPv4() && !IsIPv6()) {\n+        return false;\n+    }\n+    for (uint8_t b : m_addr) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465660727",
      "id" : 465660727,
      "in_reply_to_id" : 464154824,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MDcyNw==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 116,
      "original_position" : 142,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 461577596,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465660727",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465661461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465661461"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Modernized :bulb:",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-05T11:32:12Z",
      "diff_hunk" : "@@ -369,12 +360,12 @@ std::string CNetAddr::ToString() const\n \n bool operator==(const CNetAddr& a, const CNetAddr& b)\n {\n-    return a.m_net == b.m_net && memcmp(a.ip, b.ip, 16) == 0;\n+    return a.m_net == b.m_net && a.m_addr == b.m_addr;\n }\n \n bool operator<(const CNetAddr& a, const CNetAddr& b)\n {\n-    return a.m_net < b.m_net || (a.m_net == b.m_net && memcmp(a.ip, b.ip, 16) < 0);\n+    return a.m_net < b.m_net || (a.m_net == b.m_net && a.m_addr < b.m_addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465661461",
      "id" : 465661461,
      "in_reply_to_id" : 464156525,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MTQ2MQ==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 368,
      "original_position" : 390,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 461578525,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465661461",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465661649"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465661649"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to uppercase.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-05T11:32:37Z",
      "diff_hunk" : "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465661649",
      "id" : 465661649,
      "in_reply_to_id" : 464157430,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MTY0OQ==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 55,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 461578756,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465661649",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Applied review suggestions.",
      "created_at" : "2020-08-05T11:33:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-669141744",
      "id" : 669141744,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTE0MTc0NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T11:33:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669141744",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466938023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466938023"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That seems the best option, I think. It's too bad that there's no way to get these constants as byte spans that can be directly compared against m_addr so it wouldn't need the cast and `memcmp` at all.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-07T09:46:40Z",
      "diff_hunk" : "@@ -287,17 +283,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {(uint32_t)INADDR_ANY, (uint32_t)INADDR_NONE}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466938023",
      "id" : 466938023,
      "in_reply_to_id" : 464156291,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzODAyMw==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 284,
      "original_position" : 329,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 463181566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466938023",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466941269"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466941269"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is pretty scary cast expression. Wouldn't a cast to just `const uint8_t*` work just as well?",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-07T09:53:38Z",
      "diff_hunk" : "@@ -43,7 +43,17 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         }\n     }\n     if (!SanityCheckASMap(asmap)) return;\n+\n+    const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\n     CNetAddr net_addr;\n-    net_addr.SetRaw(ipv6 ? NET_IPV6 : NET_IPV4, buffer.data() + 1 + asmap_size);\n+    if (ipv6) {\n+        assert(addr_size == ADDR_IPV6_SIZE);\n+        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466941269",
      "id" : 466941269,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk0MTI2OQ==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 51,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 463185771,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466941269",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466946168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466946168"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Heh we need to make `EncodeBase32` take a span too (not in this PR ofcourse).",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-07T10:03:44Z",
      "diff_hunk" : "@@ -341,9 +329,9 @@ enum Network CNetAddr::GetNetwork() const\n std::string CNetAddr::ToStringIP() const\n {\n     if (IsTor())\n-        return EncodeBase32(&ip[6], 10) + \".onion\";\n+        return EncodeBase32(m_addr.data(), m_addr.size()) + \".onion\";\n     if (IsInternal())\n-        return EncodeBase32(ip + sizeof(g_internal_prefix), sizeof(ip) - sizeof(g_internal_prefix)) + \".internal\";\n+        return EncodeBase32(m_addr.data(), m_addr.size()) + \".internal\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466946168",
      "id" : 466946168,
      "line" : 346,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk0NjE2OA==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 346,
      "original_position" : 359,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 398,
      "pull_request_review_id" : 463191991,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466946168",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466950108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466950108"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You do not need the \"hh\" here, or any type specifiers ever, `strprintf` is type safe.\r\nAlso maybe include the `/` to avoid an extra string concatenation\r\n```\r\nnetwork.ToString() + strprintf(\"/%u\", cidr);\r\n```",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-07T10:12:30Z",
      "diff_hunk" : "@@ -822,68 +851,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])\n             return false;\n     return true;\n }\n \n-/**\n- * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n- *          the specified subnet mask is not a valid one, -1.\n- */\n-static inline int NetmaskBits(uint8_t x)\n-{\n-    switch(x) {\n-    case 0x00: return 0;\n-    case 0x80: return 1;\n-    case 0xc0: return 2;\n-    case 0xe0: return 3;\n-    case 0xf0: return 4;\n-    case 0xf8: return 5;\n-    case 0xfc: return 6;\n-    case 0xfe: return 7;\n-    case 0xff: return 8;\n-    default: return -1;\n-    }\n-}\n-\n std::string CSubNet::ToString() const\n {\n-    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\n-    int cidr = 0;\n-    bool valid_cidr = true;\n-    int n = network.IsIPv4() ? 12 : 0;\n-    for (; n < 16 && netmask[n] == 0xff; ++n)\n-        cidr += 8;\n-    if (n < 16) {\n-        int bits = NetmaskBits(netmask[n]);\n-        if (bits < 0)\n-            valid_cidr = false;\n-        else\n-            cidr += bits;\n-        ++n;\n-    }\n-    for (; n < 16 && valid_cidr; ++n)\n-        if (netmask[n] != 0x00)\n-            valid_cidr = false;\n-\n-    /* Format output */\n-    std::string strNetmask;\n-    if (valid_cidr) {\n-        strNetmask = strprintf(\"%u\", cidr);\n-    } else {\n-        if (network.IsIPv4())\n-            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n-        else\n-            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n-                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n-                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n-                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    assert(network.m_addr.size() <= sizeof(netmask));\n+\n+    uint8_t cidr = 0;\n+\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        if (netmask[i] == 0x00) {\n+            break;\n+        }\n+        cidr += NetmaskBits(netmask[i]);\n     }\n \n-    return network.ToString() + \"/\" + strNetmask;\n+    return network.ToString() + \"/\" + strprintf(\"%hhu\", cidr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466950108",
      "id" : 466950108,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk1MDEwOA==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 874,
      "original_position" : 725,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 463197100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466950108",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467258675"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467258675"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed to use `htonl()`.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-07T20:40:06Z",
      "diff_hunk" : "@@ -287,17 +283,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {(uint32_t)INADDR_ANY, (uint32_t)INADDR_NONE}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467258675",
      "id" : 467258675,
      "in_reply_to_id" : 464156291,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1ODY3NQ==",
      "original_commit_id" : "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "original_line" : 284,
      "original_position" : 329,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 463598127,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467258675",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467259428"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467259428"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-07T20:42:02Z",
      "diff_hunk" : "@@ -822,68 +851,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])\n             return false;\n     return true;\n }\n \n-/**\n- * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n- *          the specified subnet mask is not a valid one, -1.\n- */\n-static inline int NetmaskBits(uint8_t x)\n-{\n-    switch(x) {\n-    case 0x00: return 0;\n-    case 0x80: return 1;\n-    case 0xc0: return 2;\n-    case 0xe0: return 3;\n-    case 0xf0: return 4;\n-    case 0xf8: return 5;\n-    case 0xfc: return 6;\n-    case 0xfe: return 7;\n-    case 0xff: return 8;\n-    default: return -1;\n-    }\n-}\n-\n std::string CSubNet::ToString() const\n {\n-    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\n-    int cidr = 0;\n-    bool valid_cidr = true;\n-    int n = network.IsIPv4() ? 12 : 0;\n-    for (; n < 16 && netmask[n] == 0xff; ++n)\n-        cidr += 8;\n-    if (n < 16) {\n-        int bits = NetmaskBits(netmask[n]);\n-        if (bits < 0)\n-            valid_cidr = false;\n-        else\n-            cidr += bits;\n-        ++n;\n-    }\n-    for (; n < 16 && valid_cidr; ++n)\n-        if (netmask[n] != 0x00)\n-            valid_cidr = false;\n-\n-    /* Format output */\n-    std::string strNetmask;\n-    if (valid_cidr) {\n-        strNetmask = strprintf(\"%u\", cidr);\n-    } else {\n-        if (network.IsIPv4())\n-            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n-        else\n-            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n-                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n-                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n-                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    assert(network.m_addr.size() <= sizeof(netmask));\n+\n+    uint8_t cidr = 0;\n+\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        if (netmask[i] == 0x00) {\n+            break;\n+        }\n+        cidr += NetmaskBits(netmask[i]);\n     }\n \n-    return network.ToString() + \"/\" + strNetmask;\n+    return network.ToString() + \"/\" + strprintf(\"%hhu\", cidr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467259428",
      "id" : 467259428,
      "in_reply_to_id" : 466950108,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1OTQyOA==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 874,
      "original_position" : 725,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 463599117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467259428",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467264650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467264650"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Passing `const uint8_t*` will not work as long as the argument of the method is a reference to an array: `CNetAddr::SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE])` which is best of type safety but unfortunately two of the callers don't have an array to pass.\r\n\r\nI think either one of the following two is better:\r\n\r\n<details>\r\n<summary>change argument to void*</summary>\r\n\r\n```diff\r\ndiff --git i/src/netaddress.cpp w/src/netaddress.cpp\r\nindex b421e1b11..bb4d2b50b 100644\r\n--- i/src/netaddress.cpp\r\n+++ w/src/netaddress.cpp\r\n@@ -26,32 +26,33 @@ CNetAddr::CNetAddr() {}\r\n void CNetAddr::SetIP(const CNetAddr& ipIn)\r\n {\r\n     m_net = ipIn.m_net;\r\n     m_addr = ipIn.m_addr;\r\n }\r\n \r\n-void CNetAddr::SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE])\r\n+void CNetAddr::SetLegacyIPv6(const void* ipv6)\r\n {\r\n-    const uint8_t* ipv6_end = ipv6 + ADDR_IPV6_SIZE;\r\n+    const uint8_t* ipv6_begin = static_cast<const uint8_t*>(ipv6);\r\n+    const uint8_t* ipv6_end = ipv6_begin + ADDR_IPV6_SIZE;\r\n \r\n-    if (memcmp(ipv6, IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {\r\n+    if (memcmp(ipv6_begin, IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {\r\n         // IPv4-in-IPv6\r\n         m_net = NET_IPV4;\r\n-        m_addr.assign(ipv6 + sizeof(IPV4_IN_IPV6_PREFIX), ipv6_end);\r\n-    } else if (memcmp(ipv6, TORV2_IN_IPV6_PREFIX, sizeof(TORV2_IN_IPV6_PREFIX)) == 0) {\r\n+        m_addr.assign(ipv6_begin + sizeof(IPV4_IN_IPV6_PREFIX), ipv6_end);\r\n+    } else if (memcmp(ipv6_begin, TORV2_IN_IPV6_PREFIX, sizeof(TORV2_IN_IPV6_PREFIX)) == 0) {\r\n         // TORv2-in-IPv6\r\n         m_net = NET_ONION;\r\n-        m_addr.assign(ipv6 + sizeof(TORV2_IN_IPV6_PREFIX), ipv6_end);\r\n-    } else if (memcmp(ipv6, INTERNAL_IN_IPV6_PREFIX, sizeof(INTERNAL_IN_IPV6_PREFIX)) == 0) {\r\n+        m_addr.assign(ipv6_begin + sizeof(TORV2_IN_IPV6_PREFIX), ipv6_end);\r\n+    } else if (memcmp(ipv6_begin, INTERNAL_IN_IPV6_PREFIX, sizeof(INTERNAL_IN_IPV6_PREFIX)) == 0) {\r\n         // Internal-in-IPv6\r\n         m_net = NET_INTERNAL;\r\n-        m_addr.assign(ipv6 + sizeof(INTERNAL_IN_IPV6_PREFIX), ipv6_end);\r\n+        m_addr.assign(ipv6_begin + sizeof(INTERNAL_IN_IPV6_PREFIX), ipv6_end);\r\n     } else {\r\n         // IPv6\r\n         m_net = NET_IPV6;\r\n-        m_addr.assign(ipv6, ipv6_end);\r\n+        m_addr.assign(ipv6_begin, ipv6_end);\r\n     }\r\n }\r\n \r\n /**\r\n  * Try to make this a dummy address that maps the specified name into IPv6 like\r\n  * so: (0xFD + %sha256(\"bitcoin\")[0:5]) + %sha256(name)[0:10]. Such dummy\r\n@@ -105,13 +106,13 @@ CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\r\n     m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\r\n }\r\n \r\n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\r\n {\r\n     assert(sizeof(ipv6Addr) == ADDR_IPV6_SIZE);\r\n-    SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(&ipv6Addr));\r\n+    SetLegacyIPv6(&ipv6Addr);\r\n     scopeId = scope;\r\n }\r\n \r\n bool CNetAddr::IsBindAny() const\r\n {\r\n     if (!IsIPv4() && !IsIPv6()) {\r\ndiff --git i/src/netaddress.h w/src/netaddress.h\r\nindex 8924ed0b4..ca048fbf5 100644\r\n--- i/src/netaddress.h\r\n+++ w/src/netaddress.h\r\n@@ -105,13 +105,13 @@ class CNetAddr\r\n         /**\r\n          * Set from a legacy IPv6 address.\r\n          * Legacy IPv6 address may be a normal IPv6 address, or another address\r\n          * (e.g. IPv4) disguised as IPv6. This encoding is used in the legacy\r\n          * `addr` encoding.\r\n          */\r\n-        void SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE]);\r\n+        void SetLegacyIPv6(const void* ipv6);\r\n \r\n         bool SetInternal(const std::string& name);\r\n \r\n         bool SetSpecial(const std::string &strName); // for Tor addresses\r\n         bool IsBindAny() const; // INADDR_ANY equivalent\r\n         bool IsIPv4() const;    // IPv4 mapped address (::FFFF:0:0/96, 0.0.0.0/0)\r\ndiff --git i/src/test/fuzz/asmap.cpp w/src/test/fuzz/asmap.cpp\r\nindex 84902ee2d..98ac82453 100644\r\n--- i/src/test/fuzz/asmap.cpp\r\n+++ w/src/test/fuzz/asmap.cpp\r\n@@ -45,13 +45,13 @@ void test_one_input(const std::vector<uint8_t>& buffer)\r\n     if (!SanityCheckASMap(asmap)) return;\r\n \r\n     const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\r\n     CNetAddr net_addr;\r\n     if (ipv6) {\r\n         assert(addr_size == ADDR_IPV6_SIZE);\r\n-        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));\r\n+        net_addr.SetLegacyIPv6(addr_data);\r\n     } else {\r\n         assert(addr_size == ADDR_IPV4_SIZE);\r\n         in_addr ipv4;\r\n         memcpy(&ipv4, addr_data, addr_size);\r\n         net_addr.SetIP(CNetAddr{ipv4});\r\n     }\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>change argument to Span</summary>\r\n\r\n```diff\r\ndiff --git i/src/netaddress.cpp w/src/netaddress.cpp\r\nindex b421e1b11..121b92650 100644\r\n--- i/src/netaddress.cpp\r\n+++ w/src/netaddress.cpp\r\n@@ -26,32 +26,32 @@ CNetAddr::CNetAddr() {}\r\n void CNetAddr::SetIP(const CNetAddr& ipIn)\r\n {\r\n     m_net = ipIn.m_net;\r\n     m_addr = ipIn.m_addr;\r\n }\r\n \r\n-void CNetAddr::SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE])\r\n+void CNetAddr::SetLegacyIPv6(Span<const uint8_t> ipv6)\r\n {\r\n-    const uint8_t* ipv6_end = ipv6 + ADDR_IPV6_SIZE;\r\n+    assert(ipv6.size() == ADDR_IPV6_SIZE);\r\n \r\n-    if (memcmp(ipv6, IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {\r\n+    if (memcmp(ipv6.begin(), IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {\r\n         // IPv4-in-IPv6\r\n         m_net = NET_IPV4;\r\n-        m_addr.assign(ipv6 + sizeof(IPV4_IN_IPV6_PREFIX), ipv6_end);\r\n-    } else if (memcmp(ipv6, TORV2_IN_IPV6_PREFIX, sizeof(TORV2_IN_IPV6_PREFIX)) == 0) {\r\n+        m_addr.assign(ipv6.begin() + sizeof(IPV4_IN_IPV6_PREFIX), ipv6.end());\r\n+    } else if (memcmp(ipv6.begin(), TORV2_IN_IPV6_PREFIX, sizeof(TORV2_IN_IPV6_PREFIX)) == 0) {\r\n         // TORv2-in-IPv6\r\n         m_net = NET_ONION;\r\n-        m_addr.assign(ipv6 + sizeof(TORV2_IN_IPV6_PREFIX), ipv6_end);\r\n-    } else if (memcmp(ipv6, INTERNAL_IN_IPV6_PREFIX, sizeof(INTERNAL_IN_IPV6_PREFIX)) == 0) {\r\n+        m_addr.assign(ipv6.begin() + sizeof(TORV2_IN_IPV6_PREFIX), ipv6.end());\r\n+    } else if (memcmp(ipv6.begin(), INTERNAL_IN_IPV6_PREFIX, sizeof(INTERNAL_IN_IPV6_PREFIX)) == 0) {\r\n         // Internal-in-IPv6\r\n         m_net = NET_INTERNAL;\r\n-        m_addr.assign(ipv6 + sizeof(INTERNAL_IN_IPV6_PREFIX), ipv6_end);\r\n+        m_addr.assign(ipv6.begin() + sizeof(INTERNAL_IN_IPV6_PREFIX), ipv6.end());\r\n     } else {\r\n         // IPv6\r\n         m_net = NET_IPV6;\r\n-        m_addr.assign(ipv6, ipv6_end);\r\n+        m_addr.assign(ipv6.begin(), ipv6.end());\r\n     }\r\n }\r\n \r\n /**\r\n  * Try to make this a dummy address that maps the specified name into IPv6 like\r\n  * so: (0xFD + %sha256(\"bitcoin\")[0:5]) + %sha256(name)[0:10]. Such dummy\r\n@@ -104,14 +104,13 @@ CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\r\n     const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\r\n     m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\r\n }\r\n \r\n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\r\n {\r\n-    assert(sizeof(ipv6Addr) == ADDR_IPV6_SIZE);\r\n-    SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(&ipv6Addr));\r\n+    SetLegacyIPv6(Span<const uint8_t>(reinterpret_cast<const uint8_t*>(&ipv6Addr), sizeof(ipv6Addr)));\r\n     scopeId = scope;\r\n }\r\n \r\n bool CNetAddr::IsBindAny() const\r\n {\r\n     if (!IsIPv4() && !IsIPv6()) {\r\ndiff --git i/src/netaddress.h w/src/netaddress.h\r\nindex 8924ed0b4..a76b5e9ce 100644\r\n--- i/src/netaddress.h\r\n+++ w/src/netaddress.h\r\n@@ -105,13 +105,13 @@ class CNetAddr\r\n         /**\r\n          * Set from a legacy IPv6 address.\r\n          * Legacy IPv6 address may be a normal IPv6 address, or another address\r\n          * (e.g. IPv4) disguised as IPv6. This encoding is used in the legacy\r\n          * `addr` encoding.\r\n          */\r\n-        void SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE]);\r\n+        void SetLegacyIPv6(Span<const uint8_t> ipv6);\r\n \r\n         bool SetInternal(const std::string& name);\r\n \r\n         bool SetSpecial(const std::string &strName); // for Tor addresses\r\n         bool IsBindAny() const; // INADDR_ANY equivalent\r\n         bool IsIPv4() const;    // IPv4 mapped address (::FFFF:0:0/96, 0.0.0.0/0)\r\ndiff --git i/src/test/fuzz/asmap.cpp w/src/test/fuzz/asmap.cpp\r\nindex 84902ee2d..e3aefa18a 100644\r\n--- i/src/test/fuzz/asmap.cpp\r\n+++ w/src/test/fuzz/asmap.cpp\r\n@@ -45,13 +45,13 @@ void test_one_input(const std::vector<uint8_t>& buffer)\r\n     if (!SanityCheckASMap(asmap)) return;\r\n \r\n     const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\r\n     CNetAddr net_addr;\r\n     if (ipv6) {\r\n         assert(addr_size == ADDR_IPV6_SIZE);\r\n-        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));\r\n+        net_addr.SetLegacyIPv6(Span<const uint8_t>(addr_data, addr_size));\r\n     } else {\r\n         assert(addr_size == ADDR_IPV4_SIZE);\r\n         in_addr ipv4;\r\n         memcpy(&ipv4, addr_data, addr_size);\r\n         net_addr.SetIP(CNetAddr{ipv4});\r\n     }\r\n```\r\n</details>\r\n\r\nWhat do you think?",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-07T20:55:26Z",
      "diff_hunk" : "@@ -43,7 +43,17 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         }\n     }\n     if (!SanityCheckASMap(asmap)) return;\n+\n+    const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\n     CNetAddr net_addr;\n-    net_addr.SetRaw(ipv6 ? NET_IPV6 : NET_IPV4, buffer.data() + 1 + asmap_size);\n+    if (ipv6) {\n+        assert(addr_size == ADDR_IPV6_SIZE);\n+        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467264650",
      "id" : 467264650,
      "in_reply_to_id" : 466941269,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI2NDY1MA==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 51,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 463605797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467264650",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467267311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467267311"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Span span span...\r\n\r\n![span](https://user-images.githubusercontent.com/548488/89688260-a0b3b200-d8b6-11ea-9f9c-6b8c7f87b385.png)\r\n",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-07T21:02:32Z",
      "diff_hunk" : "@@ -43,7 +43,17 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         }\n     }\n     if (!SanityCheckASMap(asmap)) return;\n+\n+    const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\n     CNetAddr net_addr;\n-    net_addr.SetRaw(ipv6 ? NET_IPV6 : NET_IPV4, buffer.data() + 1 + asmap_size);\n+    if (ipv6) {\n+        assert(addr_size == ADDR_IPV6_SIZE);\n+        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467267311",
      "id" : 467267311,
      "in_reply_to_id" : 466941269,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI2NzMxMQ==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 51,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 463609590,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467267311",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467879433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467879433"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done in https://github.com/bitcoin/bitcoin/pull/19687",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-10T12:49:03Z",
      "diff_hunk" : "@@ -341,9 +329,9 @@ enum Network CNetAddr::GetNetwork() const\n std::string CNetAddr::ToStringIP() const\n {\n     if (IsTor())\n-        return EncodeBase32(&ip[6], 10) + \".onion\";\n+        return EncodeBase32(m_addr.data(), m_addr.size()) + \".onion\";\n     if (IsInternal())\n-        return EncodeBase32(ip + sizeof(g_internal_prefix), sizeof(ip) - sizeof(g_internal_prefix)) + \".internal\";\n+        return EncodeBase32(m_addr.data(), m_addr.size()) + \".internal\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467879433",
      "id" : 467879433,
      "in_reply_to_id" : 466946168,
      "line" : 346,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg3OTQzMw==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 346,
      "original_position" : 359,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 398,
      "pull_request_review_id" : 464197041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467879433",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed Windows build and changed `SetLegacyIPv6()` to take a ~~Spam~~Span argument.",
      "created_at" : "2020-08-10T13:10:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-671344431",
      "id" : 671344431,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTM0NDQzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T13:10:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671344431",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467891793"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467891793"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-10T13:11:23Z",
      "diff_hunk" : "@@ -43,7 +43,17 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         }\n     }\n     if (!SanityCheckASMap(asmap)) return;\n+\n+    const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\n     CNetAddr net_addr;\n-    net_addr.SetRaw(ipv6 ? NET_IPV6 : NET_IPV4, buffer.data() + 1 + asmap_size);\n+    if (ipv6) {\n+        assert(addr_size == ADDR_IPV6_SIZE);\n+        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467891793",
      "id" : 467891793,
      "in_reply_to_id" : 466941269,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg5MTc5Mw==",
      "original_commit_id" : "11632c7380f43f316cc60019ce8a61da65e7144e",
      "original_line" : 51,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 464213144,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467891793",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`s/IPv4_IN_IPv6_PREFIX/IPV4_IN_IPV6_PREFIX/` also in comment, was missed during the rename.",
      "created_at" : "2020-08-10T20:19:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-671569506",
      "id" : 671569506,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTU2OTUwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T20:19:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671569506",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased just to restart Travis.",
      "created_at" : "2020-08-11T12:05:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-671905298",
      "id" : 671905298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTkwNTI5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-11T12:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671905298",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469100605"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469100605"
         }
      },
      "author_association" : "MEMBER",
      "body" : "perhaps place the `NET_IPV6` case first to group the similar cases together\r\n\r\nsuggestion here and line 221 to be the same as the first case line 205:\r\n```suggestion\r\n                assert(prefix_size + m_addr.size() == sizeof(arr));\r\n```",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T08:40:54Z",
      "diff_hunk" : "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469100605",
      "id" : 469100605,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEwMDYwNQ==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 215,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 465701594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469100605",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469102204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469102204"
         }
      },
      "author_association" : "MEMBER",
      "body" : "per `developer-notes.md`:\r\n```suggestion\r\n    } // no default case, so the compiler can warn about missing cases\r\n    assert(false);\r\n```",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T08:43:44Z",
      "diff_hunk" : "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469102204",
      "id" : 469102204,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEwMjIwNA==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 229,
      "original_position" : 159,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 465701594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469102204",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469124958"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469124958"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`nBits` is currently given a value a few lines down but seems a good habit to always provide a default.\r\n```suggestion\r\n    int nBits{0};\r\n```",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T09:22:08Z",
      "diff_hunk" : "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469124958",
      "id" : 469124958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEyNDk1OA==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 506,
      "original_position" : 475,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 465701594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469124958",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469128086"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469128086"
         }
      },
      "author_association" : "MEMBER",
      "body" : "consider using the pre-increment (`++i`) operator",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T09:27:25Z",
      "diff_hunk" : "@@ -538,22 +531,33 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     // push our ip onto vchRet byte by byte...\n+    size_t i = 0;\n     while (nBits >= 8)\n     {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i]);\n+        i++;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469128086",
      "id" : 469128086,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEyODA4Ng==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 539,
      "original_position" : 507,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 465701594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469128086",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469180866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469180866"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Default assigning in the case where we are supposed to always assign the variable later will suppress valgrind and compiler warnings if there is a bug in the code and it does not actually initialize the variable in some cases.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T11:08:21Z",
      "diff_hunk" : "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469180866",
      "id" : 469180866,
      "in_reply_to_id" : 469124958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4MDg2Ng==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 506,
      "original_position" : 475,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 465811148,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469180866",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469180974"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469180974"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T11:08:36Z",
      "diff_hunk" : "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469180974",
      "id" : 469180974,
      "in_reply_to_id" : 469100605,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4MDk3NA==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 215,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 465811298,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469180974",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469181087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469181087"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T11:08:48Z",
      "diff_hunk" : "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469181087",
      "id" : 469181087,
      "in_reply_to_id" : 469102204,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4MTA4Nw==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 229,
      "original_position" : 159,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 465811448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469181087",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469181196"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469181196"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T11:09:02Z",
      "diff_hunk" : "@@ -538,22 +531,33 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     // push our ip onto vchRet byte by byte...\n+    size_t i = 0;\n     while (nBits >= 8)\n     {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i]);\n+        i++;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469181196",
      "id" : 469181196,
      "in_reply_to_id" : 469128086,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4MTE5Ng==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 539,
      "original_position" : 507,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 465811581,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469181196",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed review suggestions.",
      "created_at" : "2020-08-12T11:09:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-672807867",
      "id" : 672807867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MjgwNzg2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T11:09:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672807867",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469195737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469195737"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(there's nuance to be sure; if helpful:)\n\nhttps://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#es20-always-initialize-an-object\n\nSome history and reading on uninitialized reads in Bitcoin Core: https://bitcoincore.reviews/17639\n\nSee also this comment and thread https://github.com/bitcoin/bitcoin/pull/17627#issuecomment-559421439",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T11:40:27Z",
      "diff_hunk" : "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469195737",
      "id" : 469195737,
      "in_reply_to_id" : 469124958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5NTczNw==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 506,
      "original_position" : 475,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 465829861,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469195737",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469269332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469269332"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Initialized to `0`. Note that the Cpp Core Guidelines contain an [example](https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#example-186) that resembles our case and admits that \"This cannot trivially be rewritten to initialize i and j with initializers\".\r\n\r\nWe have:\r\n\r\n```cpp\r\nint nBits;\r\n... code that is supposed to set nBits ... // [1]\r\nread nBits // [2]\r\n```\r\n\r\nSo if there is a bug in [1] and `nBits` is not set (or if new code is added that reads `nBits` before [1]), then we would get undefined behavior in [2], but we would also get compiler, msan and valgrind warnings about it, so not likely to remain unnoticed.\r\n\r\nOTOH if we initialize `nBits` with some `dummy_value` and the same bugs happen, then we would not get undefined behavior, but we would get unexpected results due to [2] reading `dummy_value`. And the downside is that none of the compiler, msan or valgrind will warn about the bug.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T13:43:34Z",
      "diff_hunk" : "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469269332",
      "id" : 469269332,
      "in_reply_to_id" : 469124958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI2OTMzMg==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 506,
      "original_position" : 475,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 465929006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469269332",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed review suggestion.",
      "created_at" : "2020-08-12T13:43:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-672879171",
      "id" : 672879171,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Mjg3OTE3MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-12T13:43:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672879171",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469290450"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469290450"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes. Attempted at the time to summarize the trade-offs in the review club notes I linked to (LMK if you see any errors, I wanted it to be a resource).\r\n\r\nEdit: Thanks @vasild for the offline suggestions on the review club notes.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T14:13:13Z",
      "diff_hunk" : "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469290450",
      "id" : 469290450,
      "in_reply_to_id" : 469124958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI5MDQ1MA==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 506,
      "original_position" : 475,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 465956975,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469290450",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469311652"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469311652"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Add the assert as well as the comment?",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T14:42:04Z",
      "diff_hunk" : "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469311652",
      "id" : 469311652,
      "in_reply_to_id" : 469102204,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxMTY1Mg==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 229,
      "original_position" : 159,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 465985565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469311652",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469337602"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469337602"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, I almost added the `assert(false);` but then realized that the code flow just continues after the `switch` (it contains `break;`, not `return;` as the example in the developer-notes).\r\n\r\nApply this?\r\n\r\n<details>\r\n<summary>diff</summary>\r\n\r\n```diff\r\ndiff --git i/src/netaddress.h w/src/netaddress.h\r\nindex b75eff1b9..8cd2401e2 100644\r\n--- i/src/netaddress.h\r\n+++ w/src/netaddress.h\r\n@@ -200,36 +200,38 @@ class CNetAddr\r\n             size_t prefix_size;\r\n \r\n             switch (m_net) {\r\n             case NET_IPV6:\r\n                 assert(m_addr.size() == sizeof(arr));\r\n                 memcpy(arr, m_addr.data(), m_addr.size());\r\n-                break;\r\n+                return;\r\n             case NET_IPV4:\r\n                 prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\r\n                 assert(prefix_size + m_addr.size() == sizeof(arr));\r\n                 memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\r\n                 memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\r\n-                break;\r\n+                return;\r\n             case NET_ONION:\r\n                 prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\r\n                 assert(prefix_size + m_addr.size() == sizeof(arr));\r\n                 memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\r\n                 memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\r\n-                break;\r\n+                return;\r\n             case NET_INTERNAL:\r\n                 prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\r\n                 assert(prefix_size + m_addr.size() == sizeof(arr));\r\n                 memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\r\n                 memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\r\n-                break;\r\n+                return;\r\n             case NET_UNROUTABLE:\r\n             case NET_MAX:\r\n                 memset(arr, 0x0, sizeof(arr));\r\n-                break;\r\n+                return;\r\n             } // no default case, so the compiler can warn about missing cases\r\n+\r\n+            assert(false);\r\n         }\r\n \r\n         /**\r\n          * Serialize in pre-ADDRv2/BIP155 format to a stream.\r\n          * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\r\n          */\r\n```\r\n</details>",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T15:17:19Z",
      "diff_hunk" : "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469337602",
      "id" : 469337602,
      "in_reply_to_id" : 469102204,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzNzYwMg==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 229,
      "original_position" : 159,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 466018755,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469337602",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469352267"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469352267"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe it is time to add an init macro that default initializes a variable, but disables the initialization when `--enable-debug` or so?",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T15:38:08Z",
      "diff_hunk" : "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469352267",
      "id" : 469352267,
      "in_reply_to_id" : 469124958,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM1MjI2Nw==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 506,
      "original_position" : 475,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 466037250,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469352267",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469361342"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469361342"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I should have mentioned that. Returning LGTM, nothing else is being done in the function.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-12T15:47:42Z",
      "diff_hunk" : "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469361342",
      "id" : 469361342,
      "in_reply_to_id" : 469102204,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM2MTM0Mg==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 229,
      "original_position" : 159,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 466047712,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469361342",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469765242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469765242"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Changed `break;` to `return;` and added `assert(false);` after the `switch`.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-13T07:55:11Z",
      "diff_hunk" : "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469765242",
      "id" : 469765242,
      "in_reply_to_id" : 469102204,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc2NTI0Mg==",
      "original_commit_id" : "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "original_line" : 229,
      "original_position" : 159,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 466526016,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469765242",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed review suggestion.",
      "created_at" : "2020-08-13T07:55:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-673324076",
      "id" : 673324076,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzMyNDA3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T07:55:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673324076",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 8b7f2c1 per `git diff bfe7d1b 8b7f2c1`\r\n\r\nRan bitcoind at bfe7d1b with both onion and clearnet ipv4/ipv6 conns open for a couple of days, debug log and `-netinfo` connections dashboard have been showing nominal operation. Restarting bitcoind now at 8b7f2c1.",
      "created_at" : "2020-08-13T08:15:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-673333774",
      "id" : 673333774,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzMzMzc3NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T08:15:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673333774",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I assume TORv3 addresses will be addressed in the future PRs, right?",
      "created_at" : "2020-08-19T15:34:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-676500110",
      "id" : 676500110,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NjUwMDExMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-19T15:34:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/676500110",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/42201?v=4",
         "events_url" : "https://api.github.com/users/prusnak/events{/privacy}",
         "followers_url" : "https://api.github.com/users/prusnak/followers",
         "following_url" : "https://api.github.com/users/prusnak/following{/other_user}",
         "gists_url" : "https://api.github.com/users/prusnak/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/prusnak",
         "id" : 42201,
         "login" : "prusnak",
         "node_id" : "MDQ6VXNlcjQyMjAx",
         "organizations_url" : "https://api.github.com/users/prusnak/orgs",
         "received_events_url" : "https://api.github.com/users/prusnak/received_events",
         "repos_url" : "https://api.github.com/users/prusnak/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/prusnak/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/prusnak"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I assume TORv3 addresses will be addressed in the future PRs, right?\r\n\r\nYes. See BIP155 and  #19031. This is just preparatory work required for that,",
      "created_at" : "2020-08-19T15:36:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-676500709",
      "id" : 676500709,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NjUwMDcwOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-19T15:36:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/676500709",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473279613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473279613"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit, you could reformat this to more \"modern\" C++ (though I'm not sure if it is less or more readable)\r\n```c++\r\nif(std::equal(std::cbegin(IPV4_IN_IPV6_PREFIX), std::cend(IPV4_IN_IPV6_PREFIX), ipv6.cbegin()))\r\n```\r\n\r\n(you could replace `std::cbegin(IPV4_IN_IPV6_PREFIX)` with `IPV4_IN_IPV6_PREFIX.cbegin()` if you make it a `std::array` and not a C style array)",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-19T19:49:57Z",
      "diff_hunk" : "@@ -3,63 +3,57 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+void CNetAddr::SetLegacyIPv6(Span<const uint8_t> ipv6)\n {\n-    if (memcmp(ipv6, pchIPv4, sizeof(pchIPv4)) == 0) {\n+    assert(ipv6.size() == ADDR_IPV6_SIZE);\n+\n+    if (memcmp(ipv6.begin(), IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473279613",
      "id" : 473279613,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI3OTYxMw==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 41,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 470802830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473279613",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473471945"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473471945"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: { } around indented blocks, if you're touching this code anyway.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T00:27:56Z",
      "diff_hunk" : "@@ -353,13 +346,13 @@ std::string CNetAddr::ToStringIP() const\n             return std::string(name);\n     }\n     if (IsIPv4())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473471945",
      "id" : 473471945,
      "line" : 355,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ3MTk0NQ==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 355,
      "original_position" : 371,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 405,
      "pull_request_review_id" : 471049774,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473471945",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473478974"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473478974"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shouldn't this be `!std::all_of(...)`? Or even better, `std::none_of` with `return b != 0`.",
      "commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "created_at" : "2020-08-20T00:38:58Z",
      "diff_hunk" : "@@ -85,151 +79,154 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORV2_SIZE)\n             return false;\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    SetLegacyIPv6(Span<const uint8_t>(reinterpret_cast<const uint8_t*>(&ipv6Addr), sizeof(ipv6Addr)));\n     scopeId = scope;\n }\n \n-unsigned int CNetAddr::GetByte(int n) const\n+bool CNetAddr::IsBindAny() const\n {\n-    return ip[15-n];\n+    if (!IsIPv4() && !IsIPv6()) {\n+        return false;\n+    }\n+    return std::all_of(m_addr.begin(), m_addr.end(), [](uint8_t b) { return b == 0; });",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473478974",
      "id" : 473478974,
      "line" : 124,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ3ODk3NA==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 124,
      "original_position" : 151,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 151,
      "pull_request_review_id" : 471053325,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-20T01:48:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473478974",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473479704"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473479704"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Placing this assertion here seems weird to me. Shouldn't this check be done when(ever) `m_net` is modified? Same with `IsIPv6()` below.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T00:40:13Z",
      "diff_hunk" : "@@ -85,151 +79,154 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORV2_SIZE)\n             return false;\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    SetLegacyIPv6(Span<const uint8_t>(reinterpret_cast<const uint8_t*>(&ipv6Addr), sizeof(ipv6Addr)));\n     scopeId = scope;\n }\n \n-unsigned int CNetAddr::GetByte(int n) const\n+bool CNetAddr::IsBindAny() const\n {\n-    return ip[15-n];\n+    if (!IsIPv4() && !IsIPv6()) {\n+        return false;\n+    }\n+    return std::all_of(m_addr.begin(), m_addr.end(), [](uint8_t b) { return b == 0; });\n }\n \n-bool CNetAddr::IsBindAny() const\n+bool CNetAddr::IsIPv4() const\n {\n-    const int cmplen = IsIPv4() ? 4 : 16;\n-    for (int i = 0; i < cmplen; ++i) {\n-        if (GetByte(i)) return false;\n+    if (m_net == NET_IPV4) {\n+        assert(m_addr.size() == ADDR_IPV4_SIZE);\n+        return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473479704",
      "id" : 473479704,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ3OTcwNA==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 131,
      "original_position" : 162,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471053325,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473479704",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473486793"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473486793"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The opposite seems more straightforward:\r\n```C++\r\nif (IsIPv4()) {\r\n    uint32_t a;\r\n    memcpy(&a, m_addr.data(), sizeof(a));\r\n    if (a == htonl(INADDR_ANY) || a == htonl(INADDR_NONE)) return false;\r\n}\r\n```\r\n@sipa might yell at me but it is also possible to do `uint32_t a = *(uint32_t*)m_addr.data();` to skip the `memcpy` line.\r\n",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T00:51:19Z",
      "diff_hunk" : "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473486793",
      "id" : 473486793,
      "line" : 300,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ4Njc5Mw==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 300,
      "original_position" : 343,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 377,
      "pull_request_review_id" : 471053325,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473486793",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473492495"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473492495"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It looks like you can do this as a copy operation now that the ordering is the same.\r\n```C++\r\nsize_t i = nBits >> 3;\r\nvchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\r\nnBits &= 0x7;\r\n```",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T01:00:09Z",
      "diff_hunk" : "@@ -538,22 +529,33 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     // push our ip onto vchRet byte by byte...\n+    size_t i = 0;\n     while (nBits >= 8)\n     {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i]);\n+        ++i;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473492495",
      "id" : 473492495,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ5MjQ5NQ==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 537,
      "original_position" : 510,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471059194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473492495",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473522167"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473522167"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It seems I've caused a lot of confusion here. Everything works here of course due to INADDR_ANY and INADDR_NONE being the same in LE and BE, but if they weren't, the code here would actually be wrong.\r\n\r\nThese constants (and the `s_addr` field of `struct in_addr`) are uint32_t in name only; they're really 4 bytes in big endian notation storing an IP address. So the IP address 1.2.3.4 would be stored as the bytes {0x01,0x02,0x03,0x04}, which on LE systems would be the integer 0x04030201 while on BE systems it would be 0x01020304.\r\n\r\n`htonl` is converting them from network order (BE) to native order, so it would result in the integer 0x01020304 on both systems. That's surprisingly not what we want, we want it in network order, because that's the order we store in `m_addr` (but as bytes, rather than a fake-uint32_t).\r\n\r\nThis would work:\r\n\r\n```c++\r\nstatic constexpr uint32_t ANY = INADDR_ANY;\r\nstatic constexpr uint32_t ALL = INADDR_ALL;\r\nif (memcmp((const uint8_t*)&ANY, m_addr.data(), sizeof(ANY) ||\r\n    memcmp((const uint8_t*)&ALL, m_addr.data(), sizeof(ALL)) ...\r\n```\r\n\r\nthis would also work:\r\n```c++\r\nuint32_t a;\r\nmemcpy((uint8_t*)&a, m_addr.data(), sizeof(a));\r\nif (a == INADDR_ANY || a == INADDR_ALL) ...\r\n```\r\n\r\n@kallewoof Your suggestion is UB, I'm afraid. `m_addr` is an array of bytes, you can't access it through a pointer cast to another type (except `char*` or `unsigned char*`, which can be used to access the in-memory representation of any object).\r\n",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T01:46:20Z",
      "diff_hunk" : "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473522167",
      "id" : 473522167,
      "in_reply_to_id" : 473486793,
      "line" : 300,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUyMjE2Nw==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 300,
      "original_position" : 343,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 377,
      "pull_request_review_id" : 471049774,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473522167",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473534623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473534623"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree with @elichai's suggestion, `std::equal` is nicer.\r\n\r\nGiven how many of these tests are being done (including the IsRFC... stuff below), perhaps you want to go even further (this is absolutely not a blocker for this PR, however):\r\n\r\n```c++\r\ntemplate<typename T, int LEN>\r\nbool HasPrefix(const T1& obj, const uint8_t (&prefix)[LEN])\r\n{\r\n    return obj.size() >= LEN && std::equal(std::cbegin(prefix), std::cend(prefix), std::cbegin(obj));\r\n}\r\n\r\n...\r\n\r\nif (HasPrefix(ipv6, IPV4_IN_IPV6_PREFIX)) ...\r\n```\r\n\r\nIf you turn the prefixes into `std::array` it could be\r\n```c++\r\ntemplate<typename T1, typename T2>\r\nbool HasPrefix(const T1& obj, const T2& prefix)\r\n{\r\n    return obj.size() >= prefix.size() && std::equal(std::cbegin(prefix), std::cend(prefix), std::cbegin(obj));\r\n}\r\n```\r\n\r\ninstead.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T02:05:17Z",
      "diff_hunk" : "@@ -3,63 +3,57 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+void CNetAddr::SetLegacyIPv6(Span<const uint8_t> ipv6)\n {\n-    if (memcmp(ipv6, pchIPv4, sizeof(pchIPv4)) == 0) {\n+    assert(ipv6.size() == ADDR_IPV6_SIZE);\n+\n+    if (memcmp(ipv6.begin(), IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473534623",
      "id" : 473534623,
      "in_reply_to_id" : 473279613,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUzNDYyMw==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 41,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471049774,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473534623",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473540199"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473540199"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I believe that's correct.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T02:14:20Z",
      "diff_hunk" : "@@ -538,22 +529,33 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     // push our ip onto vchRet byte by byte...\n+    size_t i = 0;\n     while (nBits >= 8)\n     {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i]);\n+        ++i;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473540199",
      "id" : 473540199,
      "in_reply_to_id" : 473492495,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU0MDE5OQ==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 537,
      "original_position" : 510,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471049774,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473540199",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473543192"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473543192"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this is correct, for two reasons:\r\n\r\n* We technically support non-CIDR subnets (which are allowed to contain an arbitrary mix of 0 and 1 bits).\r\n* This test isn't even implementing whether the mask is CIDR, as it's only checking whether no 1-bits-after-0-bits occur within one byte of the mask, rather than the entire mask.\r\n\r\nI wouldn't be opposed to dropping non-CIDR netmasks, but if we do, it should be a separate PR, I think.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T02:19:13Z",
      "diff_hunk" : "@@ -764,53 +766,83 @@ CSubNet::CSubNet():\n     memset(netmask, 0, sizeof(netmask));\n }\n \n-CSubNet::CSubNet(const CNetAddr &addr, int32_t mask)\n+CSubNet::CSubNet(const CNetAddr& addr, uint8_t mask) : CSubNet()\n {\n-    valid = true;\n-    network = addr;\n-    // Default to /32 (IPv4) or /128 (IPv6), i.e. match single address\n-    memset(netmask, 255, sizeof(netmask));\n+    valid = (addr.IsIPv4() && mask <= ADDR_IPV4_SIZE * 8) ||\n+            (addr.IsIPv6() && mask <= ADDR_IPV6_SIZE * 8);\n+    if (!valid) {\n+        return;\n+    }\n \n-    // IPv4 addresses start at offset 12, and first 12 bytes must match, so just offset n\n-    const int astartofs = network.IsIPv4() ? 12 : 0;\n+    assert(mask <= sizeof(netmask) * 8);\n \n-    int32_t n = mask;\n-    if(n >= 0 && n <= (128 - astartofs*8)) // Only valid if in range of bits of address\n-    {\n-        n += astartofs*8;\n-        // Clear bits [n..127]\n-        for (; n < 128; ++n)\n-            netmask[n>>3] &= ~(1<<(7-(n&7)));\n-    } else\n-        valid = false;\n+    network = addr;\n \n-    // Normalize network according to netmask\n-    for(int x=0; x<16; ++x)\n-        network.ip[x] &= netmask[x];\n+    uint8_t n = mask;\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        const uint8_t bits = n < 8 ? n : 8;\n+        netmask[i] = (uint8_t)((uint8_t)0xFF << (8 - bits)); // Set first bits.\n+        network.m_addr[i] &= netmask[i]; // Normalize network according to netmask.\n+        n -= bits;\n+    }\n }\n \n-CSubNet::CSubNet(const CNetAddr &addr, const CNetAddr &mask)\n+/**\n+ * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n+ *          the specified subnet mask is not a valid one, -1.\n+ */\n+static inline int NetmaskBits(uint8_t x)\n {\n-    valid = true;\n-    network = addr;\n-    // Default to /32 (IPv4) or /128 (IPv6), i.e. match single address\n-    memset(netmask, 255, sizeof(netmask));\n+    switch(x) {\n+    case 0x00: return 0;\n+    case 0x80: return 1;\n+    case 0xc0: return 2;\n+    case 0xe0: return 3;\n+    case 0xf0: return 4;\n+    case 0xf8: return 5;\n+    case 0xfc: return 6;\n+    case 0xfe: return 7;\n+    case 0xff: return 8;\n+    default: return -1;\n+    }\n+}\n \n-    // IPv4 addresses start at offset 12, and first 12 bytes must match, so just offset n\n-    const int astartofs = network.IsIPv4() ? 12 : 0;\n+CSubNet::CSubNet(const CNetAddr& addr, const CNetAddr& mask) : CSubNet()\n+{\n+    valid = (addr.IsIPv4() || addr.IsIPv6()) && addr.m_net == mask.m_net;\n+    if (!valid) {\n+        return;\n+    }\n+    // Check if `mask` contains 1-bits after 0-bits (which is an invalid netmask).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473543192",
      "id" : 473543192,
      "line" : 820,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU0MzE5Mg==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 820,
      "original_position" : 615,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 651,
      "pull_request_review_id" : 471049774,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473543192",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473546480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473546480"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Braces, please.\r\n\r\n(for most rules I don't care that strongly whether you stick to the existing/surrounding style vs. follow the new style, but a braceless `if` has actually been part of the cause of a nontrivial security bug, see https://www.imperialviolet.org/2014/02/22/applebug.html)",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T02:24:15Z",
      "diff_hunk" : "@@ -822,68 +854,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473546480",
      "id" : 473546480,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU0NjQ4MA==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 859,
      "original_position" : 663,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471049774,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473546480",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473547937"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473547937"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Here too it seems you're dropping support for non-CIDR masks. Is that intentional?",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T02:26:41Z",
      "diff_hunk" : "@@ -822,68 +854,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])\n             return false;\n     return true;\n }\n \n-/**\n- * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n- *          the specified subnet mask is not a valid one, -1.\n- */\n-static inline int NetmaskBits(uint8_t x)\n-{\n-    switch(x) {\n-    case 0x00: return 0;\n-    case 0x80: return 1;\n-    case 0xc0: return 2;\n-    case 0xe0: return 3;\n-    case 0xf0: return 4;\n-    case 0xf8: return 5;\n-    case 0xfc: return 6;\n-    case 0xfe: return 7;\n-    case 0xff: return 8;\n-    default: return -1;\n-    }\n-}\n-\n std::string CSubNet::ToString() const\n {\n-    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\n-    int cidr = 0;\n-    bool valid_cidr = true;\n-    int n = network.IsIPv4() ? 12 : 0;\n-    for (; n < 16 && netmask[n] == 0xff; ++n)\n-        cidr += 8;\n-    if (n < 16) {\n-        int bits = NetmaskBits(netmask[n]);\n-        if (bits < 0)\n-            valid_cidr = false;\n-        else\n-            cidr += bits;\n-        ++n;\n-    }\n-    for (; n < 16 && valid_cidr; ++n)\n-        if (netmask[n] != 0x00)\n-            valid_cidr = false;\n-\n-    /* Format output */\n-    std::string strNetmask;\n-    if (valid_cidr) {\n-        strNetmask = strprintf(\"%u\", cidr);\n-    } else {\n-        if (network.IsIPv4())\n-            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n-        else\n-            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n-                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n-                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n-                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    assert(network.m_addr.size() <= sizeof(netmask));\n+\n+    uint8_t cidr = 0;\n+\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        if (netmask[i] == 0x00) {\n+            break;\n+        }\n+        cidr += NetmaskBits(netmask[i]);\n     }\n \n-    return network.ToString() + \"/\" + strNetmask;\n+    return network.ToString() + strprintf(\"/%u\", cidr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473547937",
      "id" : 473547937,
      "line" : 889,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU0NzkzNw==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 889,
      "original_position" : 733,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 779,
      "pull_request_review_id" : 471049774,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473547937",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473780674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473780674"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In C++17 `HasPrefix` will be possible even with C arrays :D (by replacing `.size()` with `std::size(..)`)",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T08:52:14Z",
      "diff_hunk" : "@@ -3,63 +3,57 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+void CNetAddr::SetLegacyIPv6(Span<const uint8_t> ipv6)\n {\n-    if (memcmp(ipv6, pchIPv4, sizeof(pchIPv4)) == 0) {\n+    assert(ipv6.size() == ADDR_IPV6_SIZE);\n+\n+    if (memcmp(ipv6.begin(), IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473780674",
      "id" : 473780674,
      "in_reply_to_id" : 473279613,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc4MDY3NA==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 41,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471392783,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473780674",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Addressed suggestions:\r\n\r\n[1.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473543192) Fixed a bug in netmask validation and extended a test to cover that case.\r\n[2.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473279613) Introduced `HasPrefix()` and used it where appropriate.\r\n[3.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473479704) Moved an assert to where `m_net` is set.\r\n[4.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473492495) Copy part of our address using `std::vector::insert()`.\r\n[5.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473546480) Added braces around single statement `for` and `if`.",
      "created_at" : "2020-08-20T16:52:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-677781004",
      "id" : 677781004,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Nzc4MTAwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-20T16:52:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677781004",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474135614"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474135614"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done - [diff together with other suggestions](https://github.com/bitcoin/bitcoin/compare/8b7f2c13b67ae84a59f29a7cffe243055a2b93d9..86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3).",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T16:53:49Z",
      "diff_hunk" : "@@ -3,63 +3,57 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+void CNetAddr::SetLegacyIPv6(Span<const uint8_t> ipv6)\n {\n-    if (memcmp(ipv6, pchIPv4, sizeof(pchIPv4)) == 0) {\n+    assert(ipv6.size() == ADDR_IPV6_SIZE);\n+\n+    if (memcmp(ipv6.begin(), IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474135614",
      "id" : 474135614,
      "in_reply_to_id" : 473279613,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNTYxNA==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 41,
      "original_position" : 51,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471809679,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474135614",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474135795"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474135795"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done - [diff together with other suggestions](https://github.com/bitcoin/bitcoin/compare/8b7f2c13b67ae84a59f29a7cffe243055a2b93d9..86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3).",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T16:54:10Z",
      "diff_hunk" : "@@ -85,151 +79,154 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORV2_SIZE)\n             return false;\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    SetLegacyIPv6(Span<const uint8_t>(reinterpret_cast<const uint8_t*>(&ipv6Addr), sizeof(ipv6Addr)));\n     scopeId = scope;\n }\n \n-unsigned int CNetAddr::GetByte(int n) const\n+bool CNetAddr::IsBindAny() const\n {\n-    return ip[15-n];\n+    if (!IsIPv4() && !IsIPv6()) {\n+        return false;\n+    }\n+    return std::all_of(m_addr.begin(), m_addr.end(), [](uint8_t b) { return b == 0; });\n }\n \n-bool CNetAddr::IsBindAny() const\n+bool CNetAddr::IsIPv4() const\n {\n-    const int cmplen = IsIPv4() ? 4 : 16;\n-    for (int i = 0; i < cmplen; ++i) {\n-        if (GetByte(i)) return false;\n+    if (m_net == NET_IPV4) {\n+        assert(m_addr.size() == ADDR_IPV4_SIZE);\n+        return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474135795",
      "id" : 474135795,
      "in_reply_to_id" : 473479704,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNTc5NQ==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 131,
      "original_position" : 162,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471809947,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474135795",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474136825"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474136825"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Those constants are defined like this in the system headers:\r\n\r\n```cpp\r\ntypedef uint32_t in_addr_t;\r\n...\r\n#define\tINADDR_ANY\t\t((in_addr_t) 0x00000000)\r\n#define\tINADDR_NONE\t\t((in_addr_t) 0xffffffff)\r\n...\r\n#define INADDR_ALLHOSTS_GROUP\t((in_addr_t) 0xe0000001) /* 224.0.0.1 */\r\n```\r\n\r\nOf course any discussion about the byte order of `INADDR_ANY` is meaningless, but nevertheless - we can assume that all `INADDR_*` are in the same byte order. From the above we see that 224.0.0.1 is represented as the integer `3758096385` or `0xe0000001` which on LE systems is stored in memory as `01 00 00 e0` and on BE systems as `e0 00 00 01`.\r\n\r\nThis means that whenever we want to compare those constants to something we know is in BE byte order (like `m_addr`) we have to apply `htonl()` to them. This is how it is done in the [L](http://tomoyo.osdn.jp/cgi-bin/lxr/source/net/bridge/br_multicast.c?a=sparc64#L263)inu[x](http://tomoyo.osdn.jp/cgi-bin/lxr/source/net/ipv4/igmp.c?a=sparc64#L1542) and [FreeBSD](https://github.com/freebsd/freebsd/blob/300d08e9968a2e38e163d3c3479524a587fe8577/sys/netinet/in.h#L658) system headers.\r\n\r\nSo, leaving this as is at this iteration.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T16:55:49Z",
      "diff_hunk" : "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474136825",
      "id" : 474136825,
      "in_reply_to_id" : 473486793,
      "line" : 300,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNjgyNQ==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 300,
      "original_position" : 343,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 377,
      "pull_request_review_id" : 471811185,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474136825",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474137228"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474137228"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done - [diff together with other suggestions](https://github.com/bitcoin/bitcoin/compare/8b7f2c13b67ae84a59f29a7cffe243055a2b93d9..86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3).",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T16:56:29Z",
      "diff_hunk" : "@@ -538,22 +529,33 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     // push our ip onto vchRet byte by byte...\n+    size_t i = 0;\n     while (nBits >= 8)\n     {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i]);\n+        ++i;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474137228",
      "id" : 474137228,
      "in_reply_to_id" : 473492495,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNzIyOA==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 537,
      "original_position" : 510,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471811661,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474137228",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474139125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474139125"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I added { } to all places where the line containing if/for/while is modified for another reason (this one is not).",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T16:59:36Z",
      "diff_hunk" : "@@ -353,13 +346,13 @@ std::string CNetAddr::ToStringIP() const\n             return std::string(name);\n     }\n     if (IsIPv4())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474139125",
      "id" : 474139125,
      "in_reply_to_id" : 473471945,
      "line" : 355,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzOTEyNQ==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 355,
      "original_position" : 371,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 405,
      "pull_request_review_id" : 471813960,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474139125",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474140065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474140065"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done - [diff together with other suggestions](https://github.com/bitcoin/bitcoin/compare/8b7f2c13b67ae84a59f29a7cffe243055a2b93d9..86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3).",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T17:01:14Z",
      "diff_hunk" : "@@ -822,68 +854,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474140065",
      "id" : 474140065,
      "in_reply_to_id" : 473546480,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0MDA2NQ==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 859,
      "original_position" : 663,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471815170,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474140065",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "A note on invalid netmasks and sub-netting non IP networks:\r\n\r\nA netmask that contains 1-bits after 0-bits (the 1-bits are not contiguous on the left side) is invalid. IMO as invalid as \"255.255.390.0\" [[1]](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#Subnet_masks) [[2]](https://tools.ietf.org/html/rfc4632#section-5.1).\r\n\r\nThe code before this PR used to parse and accept such non-left-contiguous netmasks. That has been changed to not accept them because the new code is more robust that way and it is nonsensical anyway. [An IRC discussion around non-left-contiguous netmasks](http://www.erisian.com.au/bitcoin-core-dev/log-2020-04-29.html#l-241).\r\n\r\nThis PR also restricts subnetting to just IPv4 and IPv6 (subnetting of TOR or `NET_INTERNAL` is meaningless).\r\n\r\nThose changes are mentioned in the commit message and in the PR description:\r\n\r\n> Do not accept invalid netmasks that have 0-bits followed by 1-bits and only allow subnetting for IPv4 and IPv6\r\n\r\nSince some comments above [[3]](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473543192) [[4]](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473547937) I looked at this carefully and managed to restore the original behavior (iuck!):\r\n\r\n<details>\r\n<summary>Restore invalid netmasks and non-IP subnetting on top of this PR</summary>\r\n\r\n```diff\r\ndiff --git i/src/netaddress.cpp w/src/netaddress.cpp\r\nindex 8d73d4a58..1d4f43fcd 100644\r\n--- i/src/netaddress.cpp\r\n+++ w/src/netaddress.cpp\r\n@@ -810,28 +810,16 @@ static inline int NetmaskBits(uint8_t x)\r\n     default: return -1;\r\n     }\r\n }\r\n \r\n CSubNet::CSubNet(const CNetAddr& addr, const CNetAddr& mask) : CSubNet()\r\n {\r\n-    valid = (addr.IsIPv4() || addr.IsIPv6()) && addr.m_net == mask.m_net;\r\n+    valid = addr.m_net == mask.m_net;\r\n     if (!valid) {\r\n         return;\r\n     }\r\n-    // Check if `mask` contains 1-bits after 0-bits (which is an invalid netmask).\r\n-    bool zeros_found = false;\r\n-    for (auto b : mask.m_addr) {\r\n-        const int num_bits = NetmaskBits(b);\r\n-        if (num_bits == -1 || (zeros_found && num_bits != 0)) {\r\n-            valid = false;\r\n-            return;\r\n-        }\r\n-        if (num_bits < 8) {\r\n-            zeros_found = true;\r\n-        }\r\n-    }\r\n \r\n     assert(mask.m_addr.size() <= sizeof(netmask));\r\n \r\n     memcpy(netmask, mask.m_addr.data(), mask.m_addr.size());\r\n \r\n     network = addr;\r\n@@ -841,16 +829,13 @@ CSubNet::CSubNet(const CNetAddr& addr, const CNetAddr& mask) : CSubNet()\r\n         network.m_addr[x] &= netmask[x];\r\n     }\r\n }\r\n \r\n CSubNet::CSubNet(const CNetAddr& addr) : CSubNet()\r\n {\r\n-    valid = addr.IsIPv4() || addr.IsIPv6();\r\n-    if (!valid) {\r\n-        return;\r\n-    }\r\n+    valid = true;\r\n \r\n     assert(addr.m_addr.size() <= sizeof(netmask));\r\n \r\n     memset(netmask, 0xFF, addr.m_addr.size());\r\n \r\n     network = addr;\r\n@@ -872,24 +857,54 @@ bool CSubNet::Match(const CNetAddr &addr) const\r\n     }\r\n     return true;\r\n }\r\n \r\n std::string CSubNet::ToString() const\r\n {\r\n-    assert(network.m_addr.size() <= sizeof(netmask));\r\n-\r\n-    uint8_t cidr = 0;\r\n+    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\r\n+    int cidr = 0;\r\n+    bool valid_cidr = true;\r\n+    int size = network.m_addr.size();\r\n+    int i;\r\n+    for (i = 0; i < size && netmask[i] == 0xff; ++i) {\r\n+        cidr += 8;\r\n+    }\r\n+    if (i < size) {\r\n+        int bits = NetmaskBits(netmask[i]);\r\n+        if (bits < 0) {\r\n+            valid_cidr = false;\r\n+        } else {\r\n+            cidr += bits;\r\n+        }\r\n+        ++i;\r\n+    }\r\n+    for (; i < size && valid_cidr; ++i) {\r\n+        if (netmask[i] != 0x00) {\r\n+            valid_cidr = false;\r\n+        }\r\n+    }\r\n \r\n-    for (size_t i = 0; i < network.m_addr.size(); ++i) {\r\n-        if (netmask[i] == 0x00) {\r\n-            break;\r\n+    /* Format output */\r\n+    std::string strNetmask;\r\n+    if (valid_cidr) {\r\n+        strNetmask = strprintf(\"%u\", cidr);\r\n+    } else {\r\n+        if (network.IsIPv4()) {\r\n+            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[0], netmask[1], netmask[2], netmask[3]);\r\n+        } else {\r\n+            // Notice - this is not a valid representation of an IPv6 netmask.\r\n+            // They are only defined to use CIDR notation.\r\n+            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\r\n+                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\r\n+                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\r\n+                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\r\n+                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\r\n         }\r\n-        cidr += NetmaskBits(netmask[i]);\r\n     }\r\n \r\n-    return network.ToString() + strprintf(\"/%u\", cidr);\r\n+    return network.ToString() + \"/\" + strNetmask;\r\n }\r\n \r\n bool CSubNet::IsValid() const\r\n {\r\n     return valid;\r\n }\r\ndiff --git i/src/test/netbase_tests.cpp w/src/test/netbase_tests.cpp\r\nindex 6681c92bb..47e9f854e 100644\r\n--- i/src/test/netbase_tests.cpp\r\n+++ w/src/test/netbase_tests.cpp\r\n@@ -295,17 +295,15 @@ BOOST_AUTO_TEST_CASE(subnet_test)\r\n     subnet = ResolveSubNet(\"1:2:3:4:5:6:7:8/ffff:0000:0000:0000:0000:0000:0000:0000\");\r\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"1::/16\");\r\n     subnet = ResolveSubNet(\"1:2:3:4:5:6:7:8/0000:0000:0000:0000:0000:0000:0000:0000\");\r\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"::/0\");\r\n     // Invalid netmasks (with 1-bits after 0-bits)\r\n     subnet = ResolveSubNet(\"1.2.3.4/255.255.232.0\");\r\n-    BOOST_CHECK(!subnet.IsValid());\r\n-    subnet = ResolveSubNet(\"1.2.3.4/255.0.255.255\");\r\n-    BOOST_CHECK(!subnet.IsValid());\r\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/255.255.232.0\");\r\n     subnet = ResolveSubNet(\"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\r\n-    BOOST_CHECK(!subnet.IsValid());\r\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\r\n }\r\n \r\n BOOST_AUTO_TEST_CASE(netbase_getgroup)\r\n {\r\n     std::vector<bool> asmap; // use /16\r\n     BOOST_CHECK(ResolveIP(\"127.0.0.1\").GetGroup(asmap) == std::vector<unsigned char>({0})); // Local -> !Routable()\r\n@@ -433,14 +431,13 @@ BOOST_AUTO_TEST_CASE(netbase_dont_resolve_strings_with_embedded_nul_characters)\r\n     BOOST_CHECK(!LookupHost(std::string(\"127.0.0.1\\0example.com\\0\", 22), addr, false));\r\n     CSubNet ret;\r\n     BOOST_CHECK(LookupSubNet(std::string(\"1.2.3.0/24\", 10), ret));\r\n     BOOST_CHECK(!LookupSubNet(std::string(\"1.2.3.0/24\\0\", 11), ret));\r\n     BOOST_CHECK(!LookupSubNet(std::string(\"1.2.3.0/24\\0example.com\", 22), ret));\r\n     BOOST_CHECK(!LookupSubNet(std::string(\"1.2.3.0/24\\0example.com\\0\", 23), ret));\r\n-    // We only do subnetting for IPv4 and IPv6\r\n-    BOOST_CHECK(!LookupSubNet(std::string(\"5wyqrzbvrdsumnok.onion\", 22), ret));\r\n+    BOOST_CHECK(LookupSubNet(std::string(\"5wyqrzbvrdsumnok.onion\", 22), ret));\r\n     BOOST_CHECK(!LookupSubNet(std::string(\"5wyqrzbvrdsumnok.onion\\0\", 23), ret));\r\n     BOOST_CHECK(!LookupSubNet(std::string(\"5wyqrzbvrdsumnok.onion\\0example.com\", 34), ret));\r\n     BOOST_CHECK(!LookupSubNet(std::string(\"5wyqrzbvrdsumnok.onion\\0example.com\\0\", 35), ret));\r\n }\r\n \r\n BOOST_AUTO_TEST_SUITE_END()\r\n```\r\n</details>\r\n\r\nThere are a few options:\r\n\r\n* Leave this PR as is, or\r\n* Amend the above patch into the sole commit of this PR and\r\n  * Reverse-apply the patch as a separate (second) commit in this PR, or\r\n  * Reverse-apply the patch as a separate PR after this one gets merged\r\n\r\nWhat do you think?",
      "created_at" : "2020-08-20T17:04:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-677787025",
      "id" : 677787025,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Nzc4NzAyNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-20T17:04:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677787025",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474142149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474142149"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, see https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-677787025 - it is mentioned in the commit message and also some tests are adjusted.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T17:05:14Z",
      "diff_hunk" : "@@ -822,68 +854,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])\n             return false;\n     return true;\n }\n \n-/**\n- * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n- *          the specified subnet mask is not a valid one, -1.\n- */\n-static inline int NetmaskBits(uint8_t x)\n-{\n-    switch(x) {\n-    case 0x00: return 0;\n-    case 0x80: return 1;\n-    case 0xc0: return 2;\n-    case 0xe0: return 3;\n-    case 0xf0: return 4;\n-    case 0xf8: return 5;\n-    case 0xfc: return 6;\n-    case 0xfe: return 7;\n-    case 0xff: return 8;\n-    default: return -1;\n-    }\n-}\n-\n std::string CSubNet::ToString() const\n {\n-    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\n-    int cidr = 0;\n-    bool valid_cidr = true;\n-    int n = network.IsIPv4() ? 12 : 0;\n-    for (; n < 16 && netmask[n] == 0xff; ++n)\n-        cidr += 8;\n-    if (n < 16) {\n-        int bits = NetmaskBits(netmask[n]);\n-        if (bits < 0)\n-            valid_cidr = false;\n-        else\n-            cidr += bits;\n-        ++n;\n-    }\n-    for (; n < 16 && valid_cidr; ++n)\n-        if (netmask[n] != 0x00)\n-            valid_cidr = false;\n-\n-    /* Format output */\n-    std::string strNetmask;\n-    if (valid_cidr) {\n-        strNetmask = strprintf(\"%u\", cidr);\n-    } else {\n-        if (network.IsIPv4())\n-            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n-        else\n-            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n-                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n-                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n-                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    assert(network.m_addr.size() <= sizeof(netmask));\n+\n+    uint8_t cidr = 0;\n+\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        if (netmask[i] == 0x00) {\n+            break;\n+        }\n+        cidr += NetmaskBits(netmask[i]);\n     }\n \n-    return network.ToString() + \"/\" + strNetmask;\n+    return network.ToString() + strprintf(\"/%u\", cidr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474142149",
      "id" : 474142149,
      "in_reply_to_id" : 473547937,
      "line" : 889,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0MjE0OQ==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 889,
      "original_position" : 733,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 779,
      "pull_request_review_id" : 471817916,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474142149",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474143463"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474143463"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Uh, oh, you found a bug (the second item above)! Fixed - [diff together with other suggestions](https://github.com/bitcoin/bitcoin/compare/8b7f2c13b67ae84a59f29a7cffe243055a2b93d9..86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3).\r\n\r\nA summary about the netmasks: https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-677787025",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T17:07:45Z",
      "diff_hunk" : "@@ -764,53 +766,83 @@ CSubNet::CSubNet():\n     memset(netmask, 0, sizeof(netmask));\n }\n \n-CSubNet::CSubNet(const CNetAddr &addr, int32_t mask)\n+CSubNet::CSubNet(const CNetAddr& addr, uint8_t mask) : CSubNet()\n {\n-    valid = true;\n-    network = addr;\n-    // Default to /32 (IPv4) or /128 (IPv6), i.e. match single address\n-    memset(netmask, 255, sizeof(netmask));\n+    valid = (addr.IsIPv4() && mask <= ADDR_IPV4_SIZE * 8) ||\n+            (addr.IsIPv6() && mask <= ADDR_IPV6_SIZE * 8);\n+    if (!valid) {\n+        return;\n+    }\n \n-    // IPv4 addresses start at offset 12, and first 12 bytes must match, so just offset n\n-    const int astartofs = network.IsIPv4() ? 12 : 0;\n+    assert(mask <= sizeof(netmask) * 8);\n \n-    int32_t n = mask;\n-    if(n >= 0 && n <= (128 - astartofs*8)) // Only valid if in range of bits of address\n-    {\n-        n += astartofs*8;\n-        // Clear bits [n..127]\n-        for (; n < 128; ++n)\n-            netmask[n>>3] &= ~(1<<(7-(n&7)));\n-    } else\n-        valid = false;\n+    network = addr;\n \n-    // Normalize network according to netmask\n-    for(int x=0; x<16; ++x)\n-        network.ip[x] &= netmask[x];\n+    uint8_t n = mask;\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        const uint8_t bits = n < 8 ? n : 8;\n+        netmask[i] = (uint8_t)((uint8_t)0xFF << (8 - bits)); // Set first bits.\n+        network.m_addr[i] &= netmask[i]; // Normalize network according to netmask.\n+        n -= bits;\n+    }\n }\n \n-CSubNet::CSubNet(const CNetAddr &addr, const CNetAddr &mask)\n+/**\n+ * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n+ *          the specified subnet mask is not a valid one, -1.\n+ */\n+static inline int NetmaskBits(uint8_t x)\n {\n-    valid = true;\n-    network = addr;\n-    // Default to /32 (IPv4) or /128 (IPv6), i.e. match single address\n-    memset(netmask, 255, sizeof(netmask));\n+    switch(x) {\n+    case 0x00: return 0;\n+    case 0x80: return 1;\n+    case 0xc0: return 2;\n+    case 0xe0: return 3;\n+    case 0xf0: return 4;\n+    case 0xf8: return 5;\n+    case 0xfc: return 6;\n+    case 0xfe: return 7;\n+    case 0xff: return 8;\n+    default: return -1;\n+    }\n+}\n \n-    // IPv4 addresses start at offset 12, and first 12 bytes must match, so just offset n\n-    const int astartofs = network.IsIPv4() ? 12 : 0;\n+CSubNet::CSubNet(const CNetAddr& addr, const CNetAddr& mask) : CSubNet()\n+{\n+    valid = (addr.IsIPv4() || addr.IsIPv6()) && addr.m_net == mask.m_net;\n+    if (!valid) {\n+        return;\n+    }\n+    // Check if `mask` contains 1-bits after 0-bits (which is an invalid netmask).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474143463",
      "id" : 474143463,
      "in_reply_to_id" : 473543192,
      "line" : 820,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0MzQ2Mw==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 820,
      "original_position" : 615,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 651,
      "pull_request_review_id" : 471819618,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474143463",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474181694"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474181694"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You're right.\r\n\r\nI was confused by the fact that `struct in_addr`'s `s_addr` field stores IP addresses in BE order, but the INADDR_* constants are in native order (and you are supposed to use `htonl` & friends to convert between them; see the section on `sin_addr` in https://man7.org/linux/man-pages/man7/ip.7.html).\r\n\r\nArguably you should be using `ntohl` instead of `htonl` (as these constants are in native order, and we want them in BE order) - but on every realistic platform these two are equivalent.\r\n\r\nIf you want to avoid the winsock/inet header dependency you can also use WriteBE32 to convert them to bytes, or:\r\n\r\n```c++\r\nuint32_t a = ReadBE32(m_data.data());\r\nif (a == INADDR_ANY || a == INADDR_ALL) ...\r\n```\r\n",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T18:17:36Z",
      "diff_hunk" : "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474181694",
      "id" : 474181694,
      "in_reply_to_id" : 473486793,
      "line" : 300,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4MTY5NA==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 300,
      "original_position" : 343,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 377,
      "pull_request_review_id" : 471868976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474181694",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474187399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474187399"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nMaybe s/16/ADDR_IPV6_SIZE/ since code would be broken using any other size.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T18:28:01Z",
      "diff_hunk" : "@@ -152,14 +179,93 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474187399",
      "id" : 474187399,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4NzM5OQ==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 191,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474187399",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474189751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474189751"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nCan you add a comment to explain why this is serializing 0's rather than asserting false in both of these cases? Maybe say when this code could be called to serialize unroutable addresses and when it could be called to serialize invalid NET_MAX addresses.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T18:32:08Z",
      "diff_hunk" : "@@ -152,14 +179,93 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474189751",
      "id" : 474189751,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4OTc1MQ==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 226,
      "original_position" : 153,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474189751",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474194069"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474194069"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I had to google this syntax :/  (for a second I thought it was a C trick to make arrays work, but it's actually C++)\r\ncould we please use `const std::array<uint8_t, N>&` instead? :)",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T18:40:02Z",
      "diff_hunk" : "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474194069",
      "id" : 474194069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NDA2OQ==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 58,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471884700,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474194069",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474194126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474194126"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nHaving a `ParseUInt8()` function would seem more appealing than layering uint8 range checking on top of uint32 range checking done by `ParseUInt32`",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T18:40:08Z",
      "diff_hunk" : "@@ -838,10 +839,13 @@ bool LookupSubNet(const std::string& strSubnet, CSubNet& ret)\n         if (slash != strSubnet.npos)\n         {\n             std::string strNetmask = strSubnet.substr(slash + 1);\n-            int32_t n;\n-            if (ParseInt32(strNetmask, &n)) {\n+            uint32_t n;\n+            if (ParseUInt32(strNetmask, &n)) {\n+                if (n > std::numeric_limits<uint8_t>::max()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474194126",
      "id" : 474194126,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NDEyNg==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 844,
      "original_position" : 16,
      "original_start_line" : 843,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474194126",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474195211"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474195211"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "or just make this generic over all containers",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T18:41:52Z",
      "diff_hunk" : "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474195211",
      "id" : 474195211,
      "in_reply_to_id" : 474194069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NTIxMQ==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 58,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471886051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474195211",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474196241"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474196241"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "as @sipa said \r\n```C++\r\nuint32_t a = ReadBE32(m_data.data());\r\nif (a == INADDR_ANY || a == INADDR_ALL) ...\r\n```\r\nis so much more readable :)",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T18:43:47Z",
      "diff_hunk" : "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474196241",
      "id" : 474196241,
      "in_reply_to_id" : 473486793,
      "line" : 300,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NjI0MQ==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 300,
      "original_position" : 343,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 377,
      "pull_request_review_id" : 471887416,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474196241",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474208419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474208419"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nPrecedes this PR, so maybe not worth changing here, but this method seems more awkward to use for assignment than plain `operator=`, and the `SetIP` method name is misleading since it works for all addresses, not just IP addresses. I think it would better to just use plain `=` for address assignment, and have a separate `AssertValid()` method if it's helpful to have runtime asserts in places like this.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T19:07:07Z",
      "diff_hunk" : "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474208419",
      "id" : 474208419,
      "line" : 27,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwODQxOQ==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 27,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 34,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474208419",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474214757"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474214757"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nIt would be nice not to drop this explanation. I think it could move to the SerializeV1Array function or be incorporated in the TORV2_IN_IPV6_PREFIX comment.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T19:19:20Z",
      "diff_hunk" : "@@ -85,60 +109,50 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474214757",
      "id" : 474214757,
      "line" : 97,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxNDc1Nw==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 97,
      "original_position" : 134,
      "original_start_line" : 94,
      "path" : "src/netaddress.cpp",
      "position" : 147,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "LEFT",
      "start_line" : 94,
      "start_side" : "LEFT",
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474214757",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474219887"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474219887"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nNot sure if it's portable, but it seems like you can avoid the casting and span declaration on this line with just `SetLegacyIPv6(ipv6Addr.s6_addr);`",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T19:29:18Z",
      "diff_hunk" : "@@ -85,60 +109,50 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n             return false;\n+        }\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    SetLegacyIPv6(Span<const uint8_t>(reinterpret_cast<const uint8_t*>(&ipv6Addr), sizeof(ipv6Addr)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474219887",
      "id" : 474219887,
      "line" : 133,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxOTg4Nw==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 133,
      "original_position" : 171,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 184,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474219887",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474230648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474230648"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nMaybe would be good to static assert that `in_addr` size is the same as `ADDR_IPV4_SIZE`",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T19:41:55Z",
      "diff_hunk" : "@@ -85,60 +109,50 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n             return false;\n+        }\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474230648",
      "id" : 474230648,
      "line" : 127,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzMDY0OA==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 127,
      "original_position" : 164,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 177,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474230648",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474248623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474248623"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473522167\r\n\r\n> @kallewoof Your suggestion is UB, I'm afraid\r\n\r\nJust in case anybody else reading this gets confused like me, this is /not/ saying @kallewoof memcpy suggestion is UB. Only the second suggestion without memcpy is UB",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T20:18:08Z",
      "diff_hunk" : "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474248623",
      "id" : 474248623,
      "in_reply_to_id" : 473486793,
      "line" : 300,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI0ODYyMw==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 300,
      "original_position" : 343,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 377,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474248623",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474266508"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474266508"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nNow that this is calling memcpy with dynamic size rather than fixed size, I think it'd be good to add an assert to check that it doesn't overflow the in_addr struct. Same suggestion for in6_addr struct below.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T20:54:02Z",
      "diff_hunk" : "@@ -391,7 +398,7 @@ bool CNetAddr::GetInAddr(struct in_addr* pipv4Addr) const\n {\n     if (!IsIPv4())\n         return false;\n-    memcpy(pipv4Addr, ip+12, 4);\n+    memcpy(pipv4Addr, m_addr.data(), m_addr.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474266508",
      "id" : 474266508,
      "line" : 395,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI2NjUwOA==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 395,
      "original_position" : 425,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 444,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474266508",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474270653"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474270653"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nI think this could be a little safer with bounds checking, and more readable as `ReadBE32(MakeSpan(m_addr).last(ADDR_IPV4_SIZE).data())`. Similarly for RFC4380 case below.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T21:02:08Z",
      "diff_hunk" : "@@ -421,15 +428,17 @@ bool CNetAddr::HasLinkedIPv4() const\n \n uint32_t CNetAddr::GetLinkedIPv4() const\n {\n-    if (IsIPv4() || IsRFC6145() || IsRFC6052()) {\n-        // IPv4, mapped IPv4, SIIT translated IPv4: the IPv4 address is the last 4 bytes of the address\n-        return ReadBE32(ip + 12);\n+    if (IsIPv4()) {\n+        return ReadBE32(m_addr.data());\n+    } else if (IsRFC6052() || IsRFC6145()) {\n+        // mapped IPv4, SIIT translated IPv4: the IPv4 address is the last 4 bytes of the address\n+        return ReadBE32(m_addr.data() + m_addr.size() - ADDR_IPV4_SIZE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474270653",
      "id" : 474270653,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI3MDY1Mw==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 435,
      "original_position" : 449,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474270653",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474278171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474278171"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nProbably my fault, but I did spend a minute looking at this diff being baffled by `nBits >> 3` and `nBits &= 0x7`. Would suggest changing to `size_t bytes = nBits / 8` and `nBits = nBits % 8` to give a few more hints for comprehension.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T21:18:03Z",
      "diff_hunk" : "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474278171",
      "id" : 474278171,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI3ODE3MQ==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 546,
      "original_position" : 527,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474278171",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474280814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474280814"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nIt seems like this assert would make more sense moved before the `vchRet.insert` statement above, and not conditioned on nBits divisibility.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T21:24:03Z",
      "diff_hunk" : "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;\n+    vchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\n+    nBits &= 0x7;\n     // ...for the last byte, push nBits and for the rest of the byte push 1's\n-    if (nBits > 0)\n-        vchRet.push_back(GetByte(15 - nStartByte) | ((1 << (8 - nBits)) - 1));\n+    if (nBits > 0) {\n+        assert(i < m_addr.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474280814",
      "id" : 474280814,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4MDgxNA==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 551,
      "original_position" : 534,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474280814",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474284346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474284346"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nMight be worth mentioning in commit message CNetAddr now has returns different hash values. It seems like GetHash is only called one place in net_processing. Maybe this is the only change in the PR that's not just refactoring and actually affects externally observable behavior.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T21:31:51Z",
      "diff_hunk" : "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;\n+    vchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\n+    nBits &= 0x7;\n     // ...for the last byte, push nBits and for the rest of the byte push 1's\n-    if (nBits > 0)\n-        vchRet.push_back(GetByte(15 - nStartByte) | ((1 << (8 - nBits)) - 1));\n+    if (nBits > 0) {\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i] | ((1 << (8 - nBits)) - 1));\n+    }\n \n     return vchRet;\n }\n \n+std::vector<unsigned char> CNetAddr::GetAddrBytes() const\n+{\n+    uint8_t serialized[V1_SERIALIZATION_SIZE];\n+    SerializeV1Array(serialized);\n+    return {std::begin(serialized), std::end(serialized)};\n+}\n+\n uint64_t CNetAddr::GetHash() const\n {\n-    uint256 hash = Hash(ip);\n+    uint256 hash = Hash(m_addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474284346",
      "id" : 474284346,
      "line" : 562,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4NDM0Ng==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 562,
      "original_position" : 551,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 571,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474284346",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474289828"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474289828"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nValue of size variable used here seems fragile. Seems like it would be better to not assume any particular network type and use network.m_addr_size() like code above seems to do.\r\n\r\nSame suggestion for operator < below. ",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T21:44:32Z",
      "diff_hunk" : "@@ -893,12 +901,18 @@ bool CSubNet::IsValid() const\n \n bool operator==(const CSubNet& a, const CSubNet& b)\n {\n-    return a.valid == b.valid && a.network == b.network && !memcmp(a.netmask, b.netmask, 16);\n+    const size_t size = a.network.IsIPv4() ? ADDR_IPV4_SIZE : ADDR_IPV6_SIZE;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474289828",
      "id" : 474289828,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4OTgyOA==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 893,
      "original_position" : 768,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 471876321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474289828",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474300152"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474300152"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, yes, I guess this confused @kallewoof too (on IRC). Specifially, this is UB:\r\n\r\n```c++\r\nuint32_t a = *(uint32_t*)m_addr.data();\r\n```\r\n\r\nas it's accessing a byte array through an incompatible type.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-20T22:10:09Z",
      "diff_hunk" : "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474300152",
      "id" : 474300152,
      "in_reply_to_id" : 473486793,
      "line" : 300,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwMDE1Mg==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 300,
      "original_position" : 343,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 377,
      "pull_request_review_id" : 472019871,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474300152",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474421548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474421548"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> generic over all containers\r\n\r\nSpan !?",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T05:47:46Z",
      "diff_hunk" : "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474421548",
      "id" : 474421548,
      "in_reply_to_id" : 474194069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQyMTU0OA==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 58,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 472159289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474421548",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474490128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474490128"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I can't figure out how to use `std::array` or `Span` and keep the usage to just `HasPrefix(m_addr, {192, 168})` (which is sweet!), so I am keeping the reference to array.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T07:54:10Z",
      "diff_hunk" : "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474490128",
      "id" : 474490128,
      "in_reply_to_id" : 474194069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ5MDEyOA==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 58,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 472280511,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474490128",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474538202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474538202"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree. I considered swapping this for `operator=`, but cut it off, trying to keep the patch small. There are so many things that can be improved around this code!",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T08:49:13Z",
      "diff_hunk" : "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474538202",
      "id" : 474538202,
      "in_reply_to_id" : 474208419,
      "line" : 27,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUzODIwMg==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 27,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 34,
      "pull_request_review_id" : 472315701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474538202",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474600947"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474600947"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Looks like it is not: https://docs.microsoft.com/en-us/windows/win32/api/in6addr/ns-in6addr-in6_addr :-(",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T10:01:12Z",
      "diff_hunk" : "@@ -85,60 +109,50 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n             return false;\n+        }\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    SetLegacyIPv6(Span<const uint8_t>(reinterpret_cast<const uint8_t*>(&ipv6Addr), sizeof(ipv6Addr)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474600947",
      "id" : 474600947,
      "in_reply_to_id" : 474219887,
      "line" : 133,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYwMDk0Nw==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 133,
      "original_position" : 171,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 184,
      "pull_request_review_id" : 472364737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474600947",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474603824"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474603824"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that's not necessary. It was also the case before this PR that `struct in_addr` would be assumed to be 4 bytes. I don't see this ever changing.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T10:07:32Z",
      "diff_hunk" : "@@ -85,60 +109,50 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n             return false;\n+        }\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474603824",
      "id" : 474603824,
      "in_reply_to_id" : 474230648,
      "line" : 127,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYwMzgyNA==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 127,
      "original_position" : 164,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 177,
      "pull_request_review_id" : 472368679,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474603824",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474617351"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474617351"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It is here because here we access `m_addr[i]`. I would normally use `m_addr.at(i)` if there is a chance it may get out of bounds and not write an explicit separate assert, but `prevector` does not have an `at()` method :/",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T10:36:24Z",
      "diff_hunk" : "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;\n+    vchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\n+    nBits &= 0x7;\n     // ...for the last byte, push nBits and for the rest of the byte push 1's\n-    if (nBits > 0)\n-        vchRet.push_back(GetByte(15 - nStartByte) | ((1 << (8 - nBits)) - 1));\n+    if (nBits > 0) {\n+        assert(i < m_addr.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474617351",
      "id" : 474617351,
      "in_reply_to_id" : 474280814,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYxNzM1MQ==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 551,
      "original_position" : 534,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 472385881,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474617351",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474628679"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474628679"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, that hash is only used when relaying addresses and is not saved on disk or sent over the network. The current time is also thrown to the hasher, together with the result of the changed `CNetAddr::GetHash()` and also with the relay destination. So the final result from the hasher is likely to change even after just a bitcoind restart (because it will connect to other nodes) or after 24h or less. I think it is not necessary to mention this in the commit message.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T11:03:32Z",
      "diff_hunk" : "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;\n+    vchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\n+    nBits &= 0x7;\n     // ...for the last byte, push nBits and for the rest of the byte push 1's\n-    if (nBits > 0)\n-        vchRet.push_back(GetByte(15 - nStartByte) | ((1 << (8 - nBits)) - 1));\n+    if (nBits > 0) {\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i] | ((1 << (8 - nBits)) - 1));\n+    }\n \n     return vchRet;\n }\n \n+std::vector<unsigned char> CNetAddr::GetAddrBytes() const\n+{\n+    uint8_t serialized[V1_SERIALIZATION_SIZE];\n+    SerializeV1Array(serialized);\n+    return {std::begin(serialized), std::end(serialized)};\n+}\n+\n uint64_t CNetAddr::GetHash() const\n {\n-    uint256 hash = Hash(ip);\n+    uint256 hash = Hash(m_addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474628679",
      "id" : 474628679,
      "in_reply_to_id" : 474284346,
      "line" : 562,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYyODY3OQ==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 562,
      "original_position" : 551,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 571,
      "pull_request_review_id" : 472400564,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474628679",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky, thanks for the valuable input! Most of the suggestions addressed.\r\n\r\nChanges since the last push:\r\n\r\n[1.](https://travis-ci.org/github/bitcoin/bitcoin/jobs/719679500#L3262) Fixed compilation with GCC 8 (`HasPrefix()`)\r\n[2.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473486793) Simplified the check for `INADDR_ANY` and `INADDR_NONE`\r\n[3.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474187399) Set `V1_SERIALIZATION_SIZE` to `ADDR_IPV6_SIZE`\r\n[4.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474189751) `assert(false)` if we try to serialize `NET_UNROUTABLE` or `NET_MAX`\r\n[5.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474214757) Moved the comments about the dummy IPv6 addresses being unroutable\r\n[6.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474266508) Added two more asserts\r\n[7.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474270653) Used `Span::last()` instead of pointer arithmetics\r\n[8.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474278171) Used `/` and `%` instead of bitwise `>>` and `&` to improve readability\r\n",
      "created_at" : "2020-08-21T11:26:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-678242917",
      "id" : 678242917,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODI0MjkxNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-21T11:26:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678242917",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474639720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474639720"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Alright, we have a clear winner with\r\n```cpp\r\nuint32_t a = ReadBE32(m_data.data());\r\nif (a == INADDR_ANY || a == INADDR_ALL) ...\r\n```\r\n\r\n[Changed](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2).",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T11:30:45Z",
      "diff_hunk" : "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474639720",
      "id" : 474639720,
      "in_reply_to_id" : 473486793,
      "line" : 300,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYzOTcyMA==",
      "original_commit_id" : "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "original_line" : 300,
      "original_position" : 343,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 377,
      "pull_request_review_id" : 472414964,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474639720",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474640152"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474640152"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "[Done](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2).",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T11:31:49Z",
      "diff_hunk" : "@@ -152,14 +179,93 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474640152",
      "id" : 474640152,
      "in_reply_to_id" : 474187399,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MDE1Mg==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 191,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 472415473,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474640152",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474640768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474640768"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "There is no reason to serialize as `0`s. `NET_UNROUTABLE` and `NET_MAX` are never set to `m_net` and must never be set. [Changed](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2) this to `assert(false)`.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T11:33:19Z",
      "diff_hunk" : "@@ -152,14 +179,93 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474640768",
      "id" : 474640768,
      "in_reply_to_id" : 474189751,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MDc2OA==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 226,
      "original_position" : 153,
      "original_start_line" : null,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 472416252,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474640768",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474641563"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474641563"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right, [added ParseUint8()](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2).",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T11:35:12Z",
      "diff_hunk" : "@@ -838,10 +839,13 @@ bool LookupSubNet(const std::string& strSubnet, CSubNet& ret)\n         if (slash != strSubnet.npos)\n         {\n             std::string strNetmask = strSubnet.substr(slash + 1);\n-            int32_t n;\n-            if (ParseInt32(strNetmask, &n)) {\n+            uint32_t n;\n+            if (ParseUInt32(strNetmask, &n)) {\n+                if (n > std::numeric_limits<uint8_t>::max()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474641563",
      "id" : 474641563,
      "in_reply_to_id" : 474194126,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MTU2Mw==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 844,
      "original_position" : 16,
      "original_start_line" : 843,
      "path" : "src/netbase.cpp",
      "position" : null,
      "pull_request_review_id" : 472417211,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474641563",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474642315"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474642315"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "[Moved](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2) the comment to `TORV2_IN_IPV6_PREFIX` and similar with `SetInternal()` and `INTERNAL_IN_IPV6_PREFIX`.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T11:36:55Z",
      "diff_hunk" : "@@ -85,60 +109,50 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474642315",
      "id" : 474642315,
      "in_reply_to_id" : 474214757,
      "line" : 97,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MjMxNQ==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 97,
      "original_position" : 134,
      "original_start_line" : 94,
      "path" : "src/netaddress.cpp",
      "position" : 147,
      "pull_request_review_id" : 472418096,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "LEFT",
      "start_line" : 94,
      "start_side" : "LEFT",
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474642315",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474643161"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474643161"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "[Done](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2)",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T11:38:46Z",
      "diff_hunk" : "@@ -391,7 +398,7 @@ bool CNetAddr::GetInAddr(struct in_addr* pipv4Addr) const\n {\n     if (!IsIPv4())\n         return false;\n-    memcpy(pipv4Addr, ip+12, 4);\n+    memcpy(pipv4Addr, m_addr.data(), m_addr.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474643161",
      "id" : 474643161,
      "in_reply_to_id" : 474266508,
      "line" : 395,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MzE2MQ==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 395,
      "original_position" : 425,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 444,
      "pull_request_review_id" : 472419058,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474643161",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474643314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474643314"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "[Done](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2)",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T11:39:09Z",
      "diff_hunk" : "@@ -421,15 +428,17 @@ bool CNetAddr::HasLinkedIPv4() const\n \n uint32_t CNetAddr::GetLinkedIPv4() const\n {\n-    if (IsIPv4() || IsRFC6145() || IsRFC6052()) {\n-        // IPv4, mapped IPv4, SIIT translated IPv4: the IPv4 address is the last 4 bytes of the address\n-        return ReadBE32(ip + 12);\n+    if (IsIPv4()) {\n+        return ReadBE32(m_addr.data());\n+    } else if (IsRFC6052() || IsRFC6145()) {\n+        // mapped IPv4, SIIT translated IPv4: the IPv4 address is the last 4 bytes of the address\n+        return ReadBE32(m_addr.data() + m_addr.size() - ADDR_IPV4_SIZE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474643314",
      "id" : 474643314,
      "in_reply_to_id" : 474270653,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MzMxNA==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 435,
      "original_position" : 449,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 472419261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474643314",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474643738"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474643738"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "[Done](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2)",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T11:40:00Z",
      "diff_hunk" : "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474643738",
      "id" : 474643738,
      "in_reply_to_id" : 474278171,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MzczOA==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 546,
      "original_position" : 527,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 472419701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474643738",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474644667"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474644667"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`a.network.m_addr` is protected here and can't be accessed. Anyway, since we only do subnetting of IPv4 and IPv6 I [added an assert](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2) to ensure that this is the case.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T11:42:04Z",
      "diff_hunk" : "@@ -893,12 +901,18 @@ bool CSubNet::IsValid() const\n \n bool operator==(const CSubNet& a, const CSubNet& b)\n {\n-    return a.valid == b.valid && a.network == b.network && !memcmp(a.netmask, b.netmask, 16);\n+    const size_t size = a.network.IsIPv4() ? ADDR_IPV4_SIZE : ADDR_IPV6_SIZE;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474644667",
      "id" : 474644667,
      "in_reply_to_id" : 474289828,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0NDY2Nw==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 893,
      "original_position" : 768,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 472420800,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474644667",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.\r\n\r\nI've dones some tests with `bitcoind -testnet` between Windows and Linux and IPv4 and IPv6 nodes are successfully communicating.",
      "created_at" : "2020-08-21T13:40:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-678296187",
      "id" : 678296187,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODI5NjE4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-21T13:40:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678296187",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/197660?v=4",
         "events_url" : "https://api.github.com/users/sipsorcery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipsorcery/followers",
         "following_url" : "https://api.github.com/users/sipsorcery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipsorcery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipsorcery",
         "id" : 197660,
         "login" : "sipsorcery",
         "node_id" : "MDQ6VXNlcjE5NzY2MA==",
         "organizations_url" : "https://api.github.com/users/sipsorcery/orgs",
         "received_events_url" : "https://api.github.com/users/sipsorcery/received_events",
         "repos_url" : "https://api.github.com/users/sipsorcery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipsorcery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipsorcery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Revert any changes to `bool operator==(const CSubNet& a, const CSubNet& b)` and `operator<` - they are not necessary and a recent tweak [upset the fuzzer](https://travis-ci.org/github/bitcoin/bitcoin/jobs/719900948#L4309).\r\n\r\nIt is ok to compare the entire `netmask[16]` even for IPv4 because we memset it to `0`s in the constructors, so we will compare the trailing 12 zero bytes unnecessary. That is closer to the original behavior.",
      "created_at" : "2020-08-21T14:06:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-678308599",
      "id" : 678308599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODMwODU5OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-21T14:06:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678308599",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474804072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474804072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The hashing (in RelayAddress) is actually salted by a value that's randomly generated at startup (through `CConnman::GetDeterministicRandomizer`), so it will in fact always be different after restart.\r\n\r\nYou could add a comment in the commit description, but I don't think it needs more exposure than that.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T16:31:49Z",
      "diff_hunk" : "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;\n+    vchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\n+    nBits &= 0x7;\n     // ...for the last byte, push nBits and for the rest of the byte push 1's\n-    if (nBits > 0)\n-        vchRet.push_back(GetByte(15 - nStartByte) | ((1 << (8 - nBits)) - 1));\n+    if (nBits > 0) {\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i] | ((1 << (8 - nBits)) - 1));\n+    }\n \n     return vchRet;\n }\n \n+std::vector<unsigned char> CNetAddr::GetAddrBytes() const\n+{\n+    uint8_t serialized[V1_SERIALIZATION_SIZE];\n+    SerializeV1Array(serialized);\n+    return {std::begin(serialized), std::end(serialized)};\n+}\n+\n uint64_t CNetAddr::GetHash() const\n {\n-    uint256 hash = Hash(ip);\n+    uint256 hash = Hash(m_addr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474804072",
      "id" : 474804072,
      "in_reply_to_id" : 474284346,
      "line" : 562,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwNDA3Mg==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 562,
      "original_position" : 551,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 571,
      "pull_request_review_id" : 472630988,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474804072",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474806190"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474806190"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The current one doesn't compile either on gcc 4.8:\r\n\r\n```\r\nnetaddress.cpp: In member function âbool CNetAddr::IsRFC3927() constâ:\r\n\r\nnetaddress.cpp:163:52: error: no matching function for call to âHasPrefix(const prevector<16u, unsigned char>&, <brace-enclosed initializer list>)â\r\n\r\n     return IsIPv4() && HasPrefix(m_addr, {169, 254});\r\n\r\n                                                    ^\r\n\r\nnetaddress.cpp:163:52: note: candidate is:\r\n\r\nnetaddress.cpp:52:13: note: template<class T1, class T2, unsigned int PREFIX_LEN> bool HasPrefix(const T1&, const T2 (&)[PREFIX_LEN])\r\n\r\n inline bool HasPrefix(const T1& obj, const T2 (&prefix)[PREFIX_LEN])\r\n\r\n             ^\r\n\r\nnetaddress.cpp:52:13: note:   template argument deduction/substitution failed:\r\n\r\nnetaddress.cpp:163:52: note:   couldn't deduce template parameter âT2â\r\n\r\n     return IsIPv4() && HasPrefix(m_addr, {169, 254});\r\n\r\n                                                    ^",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T16:36:16Z",
      "diff_hunk" : "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474806190",
      "id" : 474806190,
      "in_reply_to_id" : 474194069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwNjE5MA==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 58,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 472633766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474806190",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474807667"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474807667"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@vasild Nice, that indeed works, and I don't see how that could work with `std::array` (the on-the-fly constructed array's length template parameter can't be figured out from the list of elements). It certainly can't work for `Span` as there needs to be some object that actually holds the elements.\r\n\r\n@elichai I guess you have an answer to the question you asked on IRC yesterday \"why would someone use a C-style array over std::array?\".",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T16:39:25Z",
      "diff_hunk" : "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474807667",
      "id" : 474807667,
      "in_reply_to_id" : 474194069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwNzY2Nw==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 58,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 472635685,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474807667",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474873018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474873018"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@vasild @MarcoFalke I think that can be fixed by removing the `T2` template parameter, and just hardcoding it to an array of `uint8_t` (but templated size).",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-21T18:59:32Z",
      "diff_hunk" : "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474873018",
      "id" : 474873018,
      "in_reply_to_id" : 474194069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg3MzAxOA==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 58,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 472735584,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474873018",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Regarding the change to remove support arbitrary bitmasks as mask, if it's easier to make this change while dropping them, that's what we should do. They're undocumented, unexpected, useless as far as I can see, and I would be very surprised if anyone was using it.\r\n\r\nMy preference would be to do it as a separate commit, as it's semantically a very different change than goal of the PR. I would expect that restricting netmasks to CIDR first, and then changing the `ip` field to have flexible size would be easiest, but I haven't tried.\r\n\r\nI do think it's worth adding release notes for, so that it's at least documented that that change was made, on the off chance anyone is using it.",
      "created_at" : "2020-08-21T20:48:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-678486631",
      "id" : 678486631,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3ODQ4NjYzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-21T20:48:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678486631",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475208522"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475208522"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa Yep, I guess C arrays are still treated quite differently than anything else (more like initilaizer_list etc) :(\r\n(interesting: https://stackoverflow.com/a/61390991/1621927)",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-23T11:35:34Z",
      "diff_hunk" : "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475208522",
      "id" : 475208522,
      "in_reply_to_id" : 474194069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIwODUyMg==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 58,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 473003821,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475208522",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475547227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475547227"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think that can be fixed by removing the T2 template parameter, and just hardcoding it to an array of uint8_t\r\n\r\n> I think that can be fixed by removing the `T2` template parameter, and just hardcoding it to an array of `uint8_t` (but templated size).\r\n\r\nIt does not compile either because then gcc 4.8 complained it cannot deduce the length from the initialiser list, so I [switched](https://github.com/bitcoin/bitcoin/compare/f37cde9ad6764930c0fcfefb2139e6f07d6e4353..7c34237fba619667ed1d3981d3b564ad7c25077e) to `std::array` :-/",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-24T11:57:56Z",
      "diff_hunk" : "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475547227",
      "id" : 475547227,
      "in_reply_to_id" : 474194069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU0NzIyNw==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 58,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 473395706,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T19:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475547227",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Changes in the last push - fix compilation with GCC 4.8.",
      "created_at" : "2020-08-24T18:42:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-679299042",
      "id" : 679299042,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTI5OTA0Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T18:42:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679299042",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Regarding the change to remove support arbitrary bitmasks as mask ... My preference would be to do it as a separate commit\r\n\r\nDone in the last push: this PR is now split in 2 commits with the cumulative diff [equal](https://github.com/bitcoin/bitcoin/compare/7c34237fba619667ed1d3981d3b564ad7c25077e..102867c587f5f7954232fb8ed8e85cda78bb4d32) to the single commit from before (modulo the added release notes).\r\n\r\nA further improvement would be to change `uint8_t CSubNet::netmask[16]` to `uint8_t CSubNet::m_cidr` (as a separate PR).\r\n\r\n@jonatack It was hard for me to stop myself from `s/16/ADDR_IPV6_SIZE` in `operator==` but I resisted because that would also drag a similar change in the definition of `CSubNet::netmask[16]` and invite other improvements to `CSubNet` which are not necessary for this PR. A followup PR is warranted.",
      "created_at" : "2020-08-24T20:00:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-679335786",
      "id" : 679335786,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTMzNTc4Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T20:05:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679335786",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475896917"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475896917"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps point out where these are used. I think the `-rpcallowip` parameter, and the `setban` RPC are the only ones?",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-24T21:11:58Z",
      "diff_hunk" : "@@ -135,6 +135,10 @@ Updated settings\n   in future releases. Refer to the help of the affected settings `-whitebind`\n   and `-whitelist` for more details. (#19191)\n \n+- Netmasks that contain 1-bits after 0-bits (the 1-bits are not contiguous on",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475896917",
      "id" : 475896917,
      "line" : 138,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg5NjkxNw==",
      "original_commit_id" : "1ea57ad67406b3aaaef5254bc2fa7e4134f3a6df",
      "original_line" : 138,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : 4,
      "pull_request_review_id" : 473860033,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T21:11:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475896917",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475907453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475907453"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not a comment on this PR (it makes sense to not change any further behavior), but 0.2.8 is over 10 years old now, and can't even communicate with current software due to the mandatory checksum change in 2012. It's probably fine to drop this code at some point.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-24T21:34:27Z",
      "diff_hunk" : "@@ -272,13 +275,16 @@ bool CNetAddr::IsValid() const\n     // header20 vectorlen3 addr26 addr26 addr26 header20 vectorlen3 addr26 addr26 addr26...\n     // so if the first length field is garbled, it reads the second batch\n     // of addr misaligned by 3 bytes.\n-    if (IsIPv6() && memcmp(ip, pchIPv4+3, sizeof(pchIPv4)-3) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), IPV4_IN_IPV6_PREFIX.data() + 3,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475907453",
      "id" : 475907453,
      "line" : 278,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwNzQ1Mw==",
      "original_commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_line" : 278,
      "original_position" : 345,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 345,
      "pull_request_review_id" : 473872852,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T21:34:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475907453",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-24T23:00:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-679408162",
      "id" : 679408162,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTQwODE2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T23:00:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679408162",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475958227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475958227"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474617351\r\n\r\n> It is here because here we access `m_addr[i]`. I would normally use `m_addr.at(i)` if there is a chance it may get out of bounds and not write an explicit separate assert, but `prevector` does not have an `at()` method :/\r\n\r\nRight, but if you assume the assert is false and `num_bytes >= m_addr.size()`, then the expression a few lines earlier `m_addr.begin() + num_bytes` will read from uninitialized memory. So I'm saying it might make sense to move the assert earlier there. Not very important, though.\r\n",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-24T23:28:35Z",
      "diff_hunk" : "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;\n+    vchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\n+    nBits &= 0x7;\n     // ...for the last byte, push nBits and for the rest of the byte push 1's\n-    if (nBits > 0)\n-        vchRet.push_back(GetByte(15 - nStartByte) | ((1 << (8 - nBits)) - 1));\n+    if (nBits > 0) {\n+        assert(i < m_addr.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475958227",
      "id" : 475958227,
      "in_reply_to_id" : 474280814,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk1ODIyNw==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 551,
      "original_position" : 534,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 473994391,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-24T23:28:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475958227",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "FWIW, if we just want to syntactic advantage of being able to write `HasPrefix(m_addr, {1,2,3,4})`, that could be done by making the argument `std::vector<uint8_t>`. I don't think it's worth changing that, especially as we'll probably be dropping support for GCC 4.8 soon anyway.",
      "created_at" : "2020-08-24T23:36:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-679418634",
      "id" : 679418634,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTQxODYzNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T23:36:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679418634",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476099559"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476099559"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Append \" (#19628)\"",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-25T03:05:34Z",
      "diff_hunk" : "@@ -135,6 +135,10 @@ Updated settings\n   in future releases. Refer to the help of the affected settings `-whitebind`\n   and `-whitelist` for more details. (#19191)\n \n+- Netmasks that contain 1-bits after 0-bits (the 1-bits are not contiguous on\n+  the left side, e.g. 255.0.255.255) are no longer accepted. They are invalid\n+  according to RFC 4632.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476099559",
      "id" : 476099559,
      "line" : 140,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjA5OTU1OQ==",
      "original_commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_line" : 140,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : 6,
      "pull_request_review_id" : 474102513,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T03:24:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476099559",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476120289"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476120289"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Î¼-nit: not sure why this is `T1` and not simply `T`",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-25T03:35:59Z",
      "diff_hunk" : "@@ -3,79 +3,90 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <array>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T1, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T1& obj, const std::array<uint8_t, PREFIX_LEN>& prefix)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476120289",
      "id" : 476120289,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjEyMDI4OQ==",
      "original_commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_line" : 53,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 62,
      "pull_request_review_id" : 474111640,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T04:37:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476120289",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476142475"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476142475"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If we for a brief moment pretended that `prevector.h:258` had this line added to it:\r\n```C++\r\n    static prevector from(std::initializer_list<T> il) { return prevector(il.begin(), il.end()); }\r\n```\r\n\r\nthen it would have been worth it to do:\r\n```C++\r\nstatic auto ipv6_loopback = prevector<16, uint8_t>::from({0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1});\r\nif (IsIPv6() && m_addr == ipv6_loopback) {\r\n```\r\n\r\nAlas, that prevector line would need to be added. Not sure it's worth it, or if it should be its own PR perhaps.\r\n\r\nEdit: I initially suggested doing an initializer list constructor, but that interferes e.g. with the 2 element constructor messing stuff up and being generally unpredictable. The above may be too messy to be warranted, but I'll leave it up anyway.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-25T04:08:47Z",
      "diff_hunk" : "@@ -243,13 +244,15 @@ bool CNetAddr::IsTor() const { return m_net == NET_ONION; }\n bool CNetAddr::IsLocal() const\n {\n     // IPv4 loopback (127.0.0.0/8 or 0.0.0.0/8)\n-    if (IsIPv4() && (GetByte(3) == 127 || GetByte(3) == 0))\n+    if (IsIPv4() && (m_addr[0] == 127 || m_addr[0] == 0)) {\n         return true;\n+    }\n \n     // IPv6 loopback (::1/128)\n     static const unsigned char pchLocal[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};\n-    if (IsIPv6() && memcmp(ip, pchLocal, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), pchLocal, sizeof(pchLocal)) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476142475",
      "id" : 476142475,
      "line" : 253,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE0MjQ3NQ==",
      "original_commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_line" : 253,
      "original_position" : 334,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 334,
      "pull_request_review_id" : 474111640,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T04:55:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476142475",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476159214"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476159214"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This could be\r\n```C++\r\n    static prevector<ADDR_IPV6_SIZE, uint8_t> ipNone6{ADDR_IPV6_SIZE, 0x0};\r\n    if (IsIPv6() && m_addr == ipNone6) {\r\n```",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-25T04:32:14Z",
      "diff_hunk" : "@@ -272,13 +275,16 @@ bool CNetAddr::IsValid() const\n     // header20 vectorlen3 addr26 addr26 addr26 header20 vectorlen3 addr26 addr26 addr26...\n     // so if the first length field is garbled, it reads the second batch\n     // of addr misaligned by 3 bytes.\n-    if (IsIPv6() && memcmp(ip, pchIPv4+3, sizeof(pchIPv4)-3) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), IPV4_IN_IPV6_PREFIX.data() + 3,\n+                           sizeof(IPV4_IN_IPV6_PREFIX) - 3) == 0) {\n         return false;\n+    }\n \n     // unspecified IPv6 address (::/128)\n     unsigned char ipNone6[16] = {};\n-    if (IsIPv6() && memcmp(ip, ipNone6, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), ipNone6, sizeof(ipNone6)) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476159214",
      "id" : 476159214,
      "line" : 285,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE1OTIxNA==",
      "original_commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_line" : 285,
      "original_position" : 353,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 353,
      "pull_request_review_id" : 474111640,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-26T01:29:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476159214",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476349844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476349844"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This ended up with `const std::array<uint8_t, N>&` anyway, due to GCC 4.8. Will change it back to reference to an array once the support for GCC 4.8 is removed.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-25T10:37:11Z",
      "diff_hunk" : "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476349844",
      "id" : 476349844,
      "in_reply_to_id" : 474194069,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM0OTg0NA==",
      "original_commit_id" : "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "original_line" : 58,
      "original_position" : 67,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : null,
      "pull_request_review_id" : 474351876,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T10:37:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476349844",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476351352"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476351352"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Will do so in a followup.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-25T10:40:15Z",
      "diff_hunk" : "@@ -135,6 +135,10 @@ Updated settings\n   in future releases. Refer to the help of the affected settings `-whitebind`\n   and `-whitelist` for more details. (#19191)\n \n+- Netmasks that contain 1-bits after 0-bits (the 1-bits are not contiguous on",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476351352",
      "id" : 476351352,
      "in_reply_to_id" : 475896917,
      "line" : 138,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1MTM1Mg==",
      "original_commit_id" : "1ea57ad67406b3aaaef5254bc2fa7e4134f3a6df",
      "original_line" : 138,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : 4,
      "pull_request_review_id" : 474353830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T10:40:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476351352",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476352324"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476352324"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Will do so in a followup, to keep the current ACKs.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-25T10:42:11Z",
      "diff_hunk" : "@@ -135,6 +135,10 @@ Updated settings\n   in future releases. Refer to the help of the affected settings `-whitebind`\n   and `-whitelist` for more details. (#19191)\n \n+- Netmasks that contain 1-bits after 0-bits (the 1-bits are not contiguous on\n+  the left side, e.g. 255.0.255.255) are no longer accepted. They are invalid\n+  according to RFC 4632.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476352324",
      "id" : 476352324,
      "in_reply_to_id" : 476099559,
      "line" : 140,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1MjMyNA==",
      "original_commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_line" : 140,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : 6,
      "pull_request_review_id" : 474355030,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T10:42:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476352324",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476355204"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476355204"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This was `T` initially, then was changed to `T1` and `T2`, then I dropped the second one but forgot to rename `T1` to `T`. Will take are about it when touching this after GCC 4.8 is no longer supported.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-25T10:48:03Z",
      "diff_hunk" : "@@ -3,79 +3,90 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <array>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T1, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T1& obj, const std::array<uint8_t, PREFIX_LEN>& prefix)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476355204",
      "id" : 476355204,
      "in_reply_to_id" : 476120289,
      "line" : 53,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1NTIwNA==",
      "original_commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_line" : 53,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 62,
      "pull_request_review_id" : 474358846,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T10:48:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476355204",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476357492"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476357492"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it is also important to not deviate from `std::vector` interface so that it is not too much hassle should one decide to swap `prevector` for `std::vector` or the other way around.\r\n\r\nBtw, `std::vector` has an initializer list constructor.\r\n\r\nAnyway - leaving this as is.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-25T10:52:43Z",
      "diff_hunk" : "@@ -243,13 +244,15 @@ bool CNetAddr::IsTor() const { return m_net == NET_ONION; }\n bool CNetAddr::IsLocal() const\n {\n     // IPv4 loopback (127.0.0.0/8 or 0.0.0.0/8)\n-    if (IsIPv4() && (GetByte(3) == 127 || GetByte(3) == 0))\n+    if (IsIPv4() && (m_addr[0] == 127 || m_addr[0] == 0)) {\n         return true;\n+    }\n \n     // IPv6 loopback (::1/128)\n     static const unsigned char pchLocal[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};\n-    if (IsIPv6() && memcmp(ip, pchLocal, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), pchLocal, sizeof(pchLocal)) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476357492",
      "id" : 476357492,
      "in_reply_to_id" : 476142475,
      "line" : 253,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1NzQ5Mg==",
      "original_commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_line" : 253,
      "original_position" : 334,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 334,
      "pull_request_review_id" : 474361971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T10:52:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476357492",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476360663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476360663"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right! I will apply it if I modify this PR.\r\n\r\n`ADDR_IPV6_SIZE` is of type `size_t`, the typecast should not be needed?",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-25T10:58:57Z",
      "diff_hunk" : "@@ -272,13 +275,16 @@ bool CNetAddr::IsValid() const\n     // header20 vectorlen3 addr26 addr26 addr26 header20 vectorlen3 addr26 addr26 addr26...\n     // so if the first length field is garbled, it reads the second batch\n     // of addr misaligned by 3 bytes.\n-    if (IsIPv6() && memcmp(ip, pchIPv4+3, sizeof(pchIPv4)-3) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), IPV4_IN_IPV6_PREFIX.data() + 3,\n+                           sizeof(IPV4_IN_IPV6_PREFIX) - 3) == 0) {\n         return false;\n+    }\n \n     // unspecified IPv6 address (::/128)\n     unsigned char ipNone6[16] = {};\n-    if (IsIPv6() && memcmp(ip, ipNone6, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), ipNone6, sizeof(ipNone6)) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476360663",
      "id" : 476360663,
      "in_reply_to_id" : 476159214,
      "line" : 285,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2MDY2Mw==",
      "original_commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_line" : 285,
      "original_position" : 353,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 353,
      "pull_request_review_id" : 474366134,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-25T10:58:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476360663",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This, I think, is settled and gathered some ACKs.\r\n\r\nFurther changes to be done as a followup:\r\n\r\n* Change `uint8_t CSubNet::netmask[16]` to `uint8_t CSubNet::m_cidr` and other improvements around `CSubNet` that are highly desirable, but not required for this PR, thus not included in it.\r\n* Elaborate on the release notes (open this [diff](https://github.com/vasild/bitcoin/commit/b45af8c0942b873fa2ac11719b05ca6ead5378f3) as new PR).\r\n* Use the cleaner `HasPrefix(m_addr, {1, 2, 3})` once support for GCC 4.8 is dropped. Also `s/T1/T/` in the template.\r\n",
      "created_at" : "2020-08-25T11:07:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-679958713",
      "id" : 679958713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTk1ODcxMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T11:07:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679958713",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK 102867c587f5f7954232fb8ed8e85cda78bb4d32\r\n",
      "created_at" : "2020-08-25T16:09:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-680121376",
      "id" : 680121376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDEyMTM3Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T16:09:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680121376",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(edited OP to remove html comments)",
      "created_at" : "2020-08-25T16:10:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-680122011",
      "id" : 680122011,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDEyMjAxMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T16:10:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680122011",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476951941"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476951941"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, I had originally put 16 there but realized `ADDR_IPV6_SIZE` was better.",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-26T01:28:59Z",
      "diff_hunk" : "@@ -272,13 +275,16 @@ bool CNetAddr::IsValid() const\n     // header20 vectorlen3 addr26 addr26 addr26 header20 vectorlen3 addr26 addr26 addr26...\n     // so if the first length field is garbled, it reads the second batch\n     // of addr misaligned by 3 bytes.\n-    if (IsIPv6() && memcmp(ip, pchIPv4+3, sizeof(pchIPv4)-3) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), IPV4_IN_IPV6_PREFIX.data() + 3,\n+                           sizeof(IPV4_IN_IPV6_PREFIX) - 3) == 0) {\n         return false;\n+    }\n \n     // unspecified IPv6 address (::/128)\n     unsigned char ipNone6[16] = {};\n-    if (IsIPv6() && memcmp(ip, ipNone6, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), ipNone6, sizeof(ipNone6)) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476951941",
      "id" : 476951941,
      "in_reply_to_id" : 476159214,
      "line" : 285,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njk1MTk0MQ==",
      "original_commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_line" : 285,
      "original_position" : 353,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 353,
      "pull_request_review_id" : 475089674,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-26T01:28:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476951941",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476954228"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476954228"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, it may be that my lines below (the `ipNode6`) were in fact invalid, and were the cause for the errors I saw when I did this as a prevector constructor, where I didn't initially cast 16 to `size_t` in `ipNone6{16, 0x0}`. I much prefer the constructor variant, which is also closer to `std::vector`. FTR, that was\r\n\r\n```C++\r\nprevector(std::initializer_list<T> il) : prevector(il.begin(), il.end()) {}\r\n```\r\nand the line here beomes\r\n```C++\r\nstatic prevector<ADDR_IPV6_SIZE, uint8_t> ipv6_loopback{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};\r\n```\r\n",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-26T01:32:20Z",
      "diff_hunk" : "@@ -243,13 +244,15 @@ bool CNetAddr::IsTor() const { return m_net == NET_ONION; }\n bool CNetAddr::IsLocal() const\n {\n     // IPv4 loopback (127.0.0.0/8 or 0.0.0.0/8)\n-    if (IsIPv4() && (GetByte(3) == 127 || GetByte(3) == 0))\n+    if (IsIPv4() && (m_addr[0] == 127 || m_addr[0] == 0)) {\n         return true;\n+    }\n \n     // IPv6 loopback (::1/128)\n     static const unsigned char pchLocal[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};\n-    if (IsIPv6() && memcmp(ip, pchLocal, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), pchLocal, sizeof(pchLocal)) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476954228",
      "id" : 476954228,
      "in_reply_to_id" : 476142475,
      "line" : 253,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njk1NDIyOA==",
      "original_commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_line" : 253,
      "original_position" : 334,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 334,
      "pull_request_review_id" : 475090634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-26T01:32:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476954228",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/250224?v=4",
         "events_url" : "https://api.github.com/users/kallewoof/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kallewoof/followers",
         "following_url" : "https://api.github.com/users/kallewoof/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kallewoof/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kallewoof",
         "id" : 250224,
         "login" : "kallewoof",
         "node_id" : "MDQ6VXNlcjI1MDIyNA==",
         "organizations_url" : "https://api.github.com/users/kallewoof/orgs",
         "received_events_url" : "https://api.github.com/users/kallewoof/received_events",
         "repos_url" : "https://api.github.com/users/kallewoof/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kallewoof/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kallewoof"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r477113271"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477113271"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I wonder if we can avoid defining a local variable for IPv6 loopback address and use `IN6ADDR_LOOPBACK_INIT` or `in6addr_loopback`...",
      "commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "created_at" : "2020-08-26T08:07:18Z",
      "diff_hunk" : "@@ -243,13 +244,15 @@ bool CNetAddr::IsTor() const { return m_net == NET_ONION; }\n bool CNetAddr::IsLocal() const\n {\n     // IPv4 loopback (127.0.0.0/8 or 0.0.0.0/8)\n-    if (IsIPv4() && (GetByte(3) == 127 || GetByte(3) == 0))\n+    if (IsIPv4() && (m_addr[0] == 127 || m_addr[0] == 0)) {\n         return true;\n+    }\n \n     // IPv6 loopback (::1/128)\n     static const unsigned char pchLocal[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};\n-    if (IsIPv6() && memcmp(ip, pchLocal, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), pchLocal, sizeof(pchLocal)) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r477113271",
      "id" : 477113271,
      "in_reply_to_id" : 476142475,
      "line" : 253,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzExMzI3MQ==",
      "original_commit_id" : "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_line" : 253,
      "original_position" : 334,
      "original_start_line" : null,
      "path" : "src/netaddress.cpp",
      "position" : 334,
      "pull_request_review_id" : 475249488,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-26T08:07:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477113271",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Next PR on the road to TORv3: https://github.com/bitcoin/bitcoin/pull/19845",
      "created_at" : "2020-09-01T13:31:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-684855561",
      "id" : 684855561,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4NDg1NTU2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-01T13:31:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684855561",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]
