{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "> Hello clang/lib/frontend,\r\n> I search your headers once again.\r\n> Because it's time for some housekeeping,\r\n> Within the code I was tweaking,\r\n> And the targets I was making with my build,\r\n> Are unfulfilled,\r\n> It's just language compliance.\r\n> \r\n> In reference works I scroll alone\r\n> Pages cribbed from holy tomes\r\n> In the details of a template\r\n> My code's behaviour has now found its fate\r\n> When my hopes were dashed as a note left it as described:\r\n> As undefined\r\n> It's not in compliance\r\n> \r\n> And from the standard text I saw\r\n> Ten thousand errors, maybe more\r\n> Threading used without locking\r\n> Pointers referenced after freeing\r\n> Linters writing warnings that coders will never fix\r\n> But still they tick\r\n> The box that claims compliance\r\n> \r\n> \"Fools,\" said I, \"you do not know\"\r\n> Errors, like a cancer, grow\r\n> Hear my words that I might reach you\r\n> Use -Wall and it might teach you\r\n> But my words and compiler errors fade.\r\n> Schedules forbade compliance.\r\n> \r\n> And the people bowed and prayed\r\n> With static checking torn and frayed\r\n> The markets flashed out their warning\r\n> In the words that they were forming\r\n> As recruiters said \"The search for more profits leads to writing stuff in CSS,\r\n> And node.js.\r\n> Without a need for compliance\"\r\n\r\nMany thanks to ajtowns for the above contribution!\r\n\r\n-----\r\n\r\nThis PR is ready for review!\r\n\r\nWhen cross-compiling for macOS, the SDK gives us the entire context/sysroot on which we should base the build. This means that we can be extremely specific w/re our search path ordering in order to avoid build problems that arise out of a user's specific environment/system setup and improve the robustness of our macOS toolchain. This PR does 2 things to this end:\r\n\r\n1. Unset environment variables which are known to alter search paths.\r\n1. Makes us (in the case of macOS builds) explicitly specify the list of system include search paths and its ordering, rather than rely on `clang`'s unreliable autodetection routine. Here is the [rabbit-hole gist](https://gist.github.com/dongcarl/5cdc6990b7599e8a5bf6d2a9c70e82f9).\r\n\r\n    See the added comments in `depends/hosts/darwin.mk` for more details:\r\n\r\n    https://github.com/bitcoin/bitcoin/blob/8b8296dc70a0aa5ca86d11ba5d3151fc56208e25/depends/hosts/darwin.mk#L37-L60\r\n\r\nWe can be this specific _only_ because macOS builds are neatly contained in an SDK, **and** we are cross-compiling. Native toolchains should rely on the environment/distro/user to know how best to build for the running system.\r\n\r\nNote: Although the `-u` flag of `env` is not a POSIX standard flag, it seems like it is useful enough to be implemented in [coreutils](https://www.gnu.org/software/coreutils/manual/html_node/env-invocation.html), [busybox](https://busybox.net/downloads/BusyBox.html#env), [FreeBSD](https://www.freebsd.org/cgi/man.cgi?env).",
   "closed_at" : "2021-01-08T05:12:26Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 13,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19683/comments",
   "created_at" : "2020-08-07T17:41:36Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19683/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/19683",
   "id" : 675170037,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19683/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NDY0NzM0MDMw",
   "number" : 19683,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/19683.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19683",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/19683.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19683"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "depends: Pin clang search paths for darwin host",
   "updated_at" : "2021-01-08T05:12:26Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19683",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
      "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
      "followers_url" : "https://api.github.com/users/dongcarl/followers",
      "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/dongcarl",
      "id" : 3445290,
      "login" : "dongcarl",
      "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
      "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
      "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
      "repos_url" : "https://api.github.com/users/dongcarl/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/dongcarl"
   }
}
