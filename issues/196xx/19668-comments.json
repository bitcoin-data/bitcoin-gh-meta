[
   {
      "author_association" : "MEMBER",
      "body" : "Friendly ping @ajtowns @vasild ",
      "created_at" : "2020-08-05T12:44:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-669171329",
      "id" : 669171329,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTE3MTMyOQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T12:44:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669171329",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r465738894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465738894"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It seems a layer-violation to import the validation lock cs_main into the net.h header to annotate this function. Also, this approach doesn't seem like it scales, since it has to be done for each mutex that is held during a call to `ForEachNode`.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-05T13:47:31Z",
      "diff_hunk" : "@@ -208,8 +210,18 @@ class CConnman\n \n     void PushMessage(CNode* pnode, CSerializedNetMsg&& msg);\n \n-    template<typename Callable>\n-    void ForEachNode(Callable&& func)\n+    template <typename Callable>\n+    void ForEachNodeUnlocked(Callable&& func) EXCLUSIVE_LOCKS_REQUIRED(!::cs_main)\n+    {\n+        LOCK(cs_vNodes);\n+        for (auto&& node : vNodes) {\n+            if (NodeFullyConnected(node))\n+                func(node);\n+        }\n+    };\n+\n+    template <typename Callable>\n+    void ForEachNode(Callable&& func) EXCLUSIVE_LOCKS_REQUIRED(::cs_main)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r465738894",
      "id" : 465738894,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTczODg5NA==",
      "original_commit_id" : "5d64c6b18f158986e757e1d1f8e06b9a5ff22b48",
      "original_line" : 224,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 461680445,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465738894",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated fa9157916514903cd7b526375597b1de0d8df8f0 -> 3f00515e92e7b6aed97c126592ad94b8a52a0e18 ([pr19668.01](https://github.com/hebasto/bitcoin/commits/pr19668.01) -> [pr19668.02](https://github.com/hebasto/bitcoin/commits/pr19668.02), [diff](https://github.com/hebasto/bitcoin/compare/pr19668.01..pr19668.02)).\r\n\r\nThis is an alternative approach without issues [mentioned](https://github.com/bitcoin/bitcoin/pull/19668#discussion_r465738894) by @MarcoFalke:\r\n> It seems a layer-violation to import the validation lock cs_main into the net.h header to annotate this function. Also, this approach doesn't seem like it scales, since it has to be done for each mutex that is held during a call to `ForEachNode`.\r\n\r\n",
      "created_at" : "2020-08-05T14:38:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-669231930",
      "id" : 669231930,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTIzMTkzMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T14:43:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669231930",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke \r\n> weak Concept ACK. Will review some more later\r\n\r\nUpdated motivation in the OP.",
      "created_at" : "2020-08-05T14:42:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-669233841",
      "id" : 669233841,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTIzMzg0MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T14:42:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669233841",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r465779202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465779202"
         }
      },
      "author_association" : "MEMBER",
      "body" : "[Updated](https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-669231930).",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-05T14:43:17Z",
      "diff_hunk" : "@@ -208,8 +210,18 @@ class CConnman\n \n     void PushMessage(CNode* pnode, CSerializedNetMsg&& msg);\n \n-    template<typename Callable>\n-    void ForEachNode(Callable&& func)\n+    template <typename Callable>\n+    void ForEachNodeUnlocked(Callable&& func) EXCLUSIVE_LOCKS_REQUIRED(!::cs_main)\n+    {\n+        LOCK(cs_vNodes);\n+        for (auto&& node : vNodes) {\n+            if (NodeFullyConnected(node))\n+                func(node);\n+        }\n+    };\n+\n+    template <typename Callable>\n+    void ForEachNode(Callable&& func) EXCLUSIVE_LOCKS_REQUIRED(::cs_main)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r465779202",
      "id" : 465779202,
      "in_reply_to_id" : 465738894,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3OTIwMg==",
      "original_commit_id" : "5d64c6b18f158986e757e1d1f8e06b9a5ff22b48",
      "original_line" : 224,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 461734281,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465779202",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.\r\n\r\nI'd suggest going further and annotating the `AssertLock(Not)Held` calls with `EXCLUSIVE_LOCKS_REQUIRED(cs)` (or `!cs`) too. This catches existing missing annotations in `validation.cpp:CheckSequenceLocks` and `wallet/scriptpubkeyman.cpp:DescriptorScriptPubKeyMan::AddDescriptKeyWithDb` so seems worthwhile. Patch at https://github.com/ajtowns/bitcoin/commits/202008-assertlockheld",
      "created_at" : "2020-08-05T17:01:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-669312538",
      "id" : 669312538,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTMxMjUzOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T17:01:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669312538",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns \r\n> I'd suggest going further and annotating the `AssertLock(Not)Held` calls with `EXCLUSIVE_LOCKS_REQUIRED(cs)` (or `!cs`) too. This catches existing missing annotations in `validation.cpp:CheckSequenceLocks` and `wallet/scriptpubkeyman.cpp:DescriptorScriptPubKeyMan::AddDescriptKeyWithDb` so seems worthwhile. Patch at https://github.com/ajtowns/bitcoin/commits/202008-assertlockheld\r\n\r\nThanks! Done.\r\n",
      "created_at" : "2020-08-05T17:30:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-669326867",
      "id" : 669326867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTMyNjg2Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-05T17:30:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669326867",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Might be good to fix up the lock annotations before removing the ASSERT annotation on AssertLockHeldInternal so you can compile successfully at each commit? Otherwise looks good to me.",
      "created_at" : "2020-08-06T06:01:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-669720297",
      "id" : 669720297,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTcyMDI5Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T06:01:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669720297",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns \r\n> Might be good to fix up the lock annotations before removing the ASSERT annotation on AssertLockHeldInternal so you can compile successfully at each commit? Otherwise looks good to me.\r\n\r\nDone, commits are reordered now.",
      "created_at" : "2020-08-06T06:07:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-669722304",
      "id" : 669722304,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2OTcyMjMwNA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-06T06:07:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669722304",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Perhaps the **Locking/mutex usage notes** section of developer-notes.md should be updated with the current best practice for annotating/asserting locks.",
      "created_at" : "2020-08-07T10:56:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-670459278",
      "id" : 670459278,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDQ1OTI3OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-07T10:56:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670459278",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery \r\n> Concept ACK. Perhaps the **Locking/mutex usage notes** section of developer-notes.md should be updated with the current best practice for annotating/asserting locks.\r\n\r\nYou read my mind :)\r\n\r\nDo you want me adding a doc commit to this PR?",
      "created_at" : "2020-08-07T11:18:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-670467580",
      "id" : 670467580,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDQ2NzU4MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-07T11:18:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670467580",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Do you want me adding a doc commit to this PR?\r\n\r\nI think it's fine to add it to this PR.",
      "created_at" : "2020-08-07T12:09:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-670485238",
      "id" : 670485238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDQ4NTIzOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-07T12:09:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670485238",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467045878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467045878"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "These can also be tagged with `ASSERT_EXCLUSIVE_LOCK`.\r\n\r\n```suggestion\r\nvoid AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\r\ntemplate <typename MutexType>\r\nvoid AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs) EXCLUSIVE_LOCKS_REQUIRED(!cs);\r\n```",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-07T13:38:33Z",
      "diff_hunk" : "@@ -53,8 +53,9 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n-void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+template <typename MutexType>\n+void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(!cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467045878",
      "id" : 467045878,
      "line" : 58,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA0NTg3OA==",
      "original_commit_id" : "fcf6569d2e6d55411773d06380770b0c355408b9",
      "original_line" : 58,
      "original_position" : 8,
      "original_start_line" : 56,
      "path" : "src/sync.h",
      "position" : 8,
      "pull_request_review_id" : 463319254,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : 56,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467045878",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467244459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467244459"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I tried the following with `AssertLockHeldInternal() EXCLUSIVE_LOCKS_REQUIRED(cs) ASSERT_EXCLUSIVE_LOCK(cs);`:\r\n\r\n```cpp\r\nvoid f()\r\n{\r\n    // The following line produces a warning due to the EXCLUSIVE_LOCKS_REQUIRED attribute:\r\n    // Calling function 'AssertLockHeldInternal<AnnotatedMixin<std:: __1::recursive_mutex>>' requires holding mutex 'cs_main' exclusively [-Wthread-safety-analysis]\r\n    AssertLockHeld(cs_main);\r\n\r\n    // The following line produces a warning due to the ASSERT_EXCLUSIVE_LOCK attribute:\r\n    // Acquiring mutex 'cs_main' that is already held\r\n    LOCK(cs_main);\r\n}\r\n```\r\n\r\nHowever if the assert attribute is defined first: `ASSERT_EXCLUSIVE_LOCK(cs) EXCLUSIVE_LOCKS_REQUIRED(cs)` then only the second warning is generated (`EXCLUSIVE_LOCKS_REQUIRED` is ignored in this case).",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-07T20:04:10Z",
      "diff_hunk" : "@@ -53,8 +53,9 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n-void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+template <typename MutexType>\n+void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(!cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467244459",
      "id" : 467244459,
      "in_reply_to_id" : 467045878,
      "line" : 58,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0NDQ1OQ==",
      "original_commit_id" : "fcf6569d2e6d55411773d06380770b0c355408b9",
      "original_line" : 58,
      "original_position" : 8,
      "original_start_line" : 56,
      "path" : "src/sync.h",
      "position" : 8,
      "pull_request_review_id" : 463579951,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : 56,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467244459",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467261327"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467261327"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> These can also be tagged with `ASSERT_EXCLUSIVE_LOCK`.\r\n\r\nWhat are expected benefits?",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-07T20:47:08Z",
      "diff_hunk" : "@@ -53,8 +53,9 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n-void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+template <typename MutexType>\n+void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(!cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467261327",
      "id" : 467261327,
      "in_reply_to_id" : 467045878,
      "line" : 58,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI2MTMyNw==",
      "original_commit_id" : "fcf6569d2e6d55411773d06380770b0c355408b9",
      "original_line" : 58,
      "original_position" : 8,
      "original_start_line" : 56,
      "path" : "src/sync.h",
      "position" : 8,
      "pull_request_review_id" : 463601724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : 56,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467261327",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467396070"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467396070"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@vasild \r\nHere are branches to test your suggestion:\r\n- https://github.com/hebasto/bitcoin/tree/pr16981-base\r\n- https://github.com/hebasto/bitcoin/tree/pr16981-suggestion\r\n\r\nCompiling the branch with suggestion miss the following warnings:\r\n```\r\nwallet/scriptpubkeyman.cpp:1861:9: warning: reading variable 'm_map_crypted_keys' requires holding mutex 'cs_desc_man' [-Wthread-safety-analysis]\r\n        m_map_crypted_keys[pubkey.GetID()] = make_pair(pubkey, crypted_secret);\r\n        ^\r\nwallet/scriptpubkeyman.cpp:1864:9: warning: reading variable 'm_map_keys' requires holding mutex 'cs_desc_man' [-Wthread-safety-analysis]\r\n        m_map_keys[pubkey.GetID()] = key;\r\n\r\n```\r\n\r\nand\r\n\r\n```\r\nwallet/wallet.cpp:4429:54: warning: passing variable 'vMasterKey' by reference requires holding mutex 'cs_wallet' [-Wthread-safety-reference]\r\n                if (!spk_manager->CheckDecryptionKey(vMasterKey) && !spk_manager->Encrypt(vMasterKey, nullptr)) {\r\n                                                     ^\r\nwallet/wallet.cpp:4429:91: warning: passing variable 'vMasterKey' by reference requires holding mutex 'cs_wallet' [-Wthread-safety-reference]\r\n                if (!spk_manager->CheckDecryptionKey(vMasterKey) && !spk_manager->Encrypt(vMasterKey, nullptr)) {\r\n\r\n```\r\n```",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-08T08:38:19Z",
      "diff_hunk" : "@@ -53,8 +53,9 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n-void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+template <typename MutexType>\n+void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(!cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467396070",
      "id" : 467396070,
      "in_reply_to_id" : 467045878,
      "line" : 58,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM5NjA3MA==",
      "original_commit_id" : "fcf6569d2e6d55411773d06380770b0c355408b9",
      "original_line" : 58,
      "original_position" : 8,
      "original_start_line" : 56,
      "path" : "src/sync.h",
      "position" : 8,
      "pull_request_review_id" : 463789136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : 56,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467396070",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > Do you want me adding a doc commit to this PR?\r\n> \r\n> I think it's fine to add it to this PR.\r\n\r\nDone.\r\n\r\n@jnewbery @jonatack Mind checking wording in the doc commit?",
      "created_at" : "2020-08-08T10:05:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-670853751",
      "id" : 670853751,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDg1Mzc1MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-08T10:05:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670853751",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467850828"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467850828"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok, I confirm the above. The presence of `ASSERT_EXCLUSIVE_LOCK()` causes some warnings to be silenced.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-10T11:50:13Z",
      "diff_hunk" : "@@ -53,8 +53,9 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n-void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+template <typename MutexType>\n+void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(!cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467850828",
      "id" : 467850828,
      "in_reply_to_id" : 467045878,
      "line" : 58,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg1MDgyOA==",
      "original_commit_id" : "fcf6569d2e6d55411773d06380770b0c355408b9",
      "original_line" : 58,
      "original_position" : 8,
      "original_start_line" : 56,
      "path" : "src/sync.h",
      "position" : 8,
      "pull_request_review_id" : 464160874,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : 56,
      "start_side" : "RIGHT",
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467850828",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467853723"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467853723"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Maybe use an example that does not involve `RecursiveMutex` since we recommend against using it and if we manage to obliterate it from the code, then this example will require adjusting.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-10T11:56:53Z",
      "diff_hunk" : "@@ -746,6 +746,72 @@ the upper cycle, etc.\n Threads and synchronization\n ----------------------------\n \n+- Prefer `Mutex` type to `RecursiveMutex` one\n+\n+- Consistently use [Clang Thread Safety Analysis](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html) annotations to\n+  get compile-time warnings about potential race conditions in code. Combine annotations in function declarations with\n+  run-time asserts in function definitions:\n+\n+```C++\n+// txmempool.h\n+class CTxMemPool\n+{\n+public:\n+    ...\n+    mutable RecursiveMutex cs;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r467853723",
      "id" : 467853723,
      "line" : 761,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg1MzcyMw==",
      "original_commit_id" : "76668236610198f61bf60c42a40c2826585515b7",
      "original_line" : 761,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "doc/developer-notes.md",
      "position" : 16,
      "pull_request_review_id" : 464164393,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467853723",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This PR basically replaces the attribute `ASSERT_EXCLUSIVE_LOCK()` of `AssertLockHeldInternal()` with `EXCLUSIVE_LOCKS_REQUIRED()` and fixes some of the exposed warnings.\r\n\r\nIt is unfortunate that we can't have both attributes.",
      "created_at" : "2020-08-10T12:01:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-671313972",
      "id" : 671313972,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MTMxMzk3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-10T12:01:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671313972",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This all seems reasonable and the updated developer docs are clear and make sense.\r\n\r\n@ajtowns : what does your :-1: mean here https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-671313972? Are you saying that we can have both attributes, or that it's not unfortunate, or that we can't have both and that this PR is going in the wrong direction? As someone who doesn't know very much about the safety annotations, it's difficult for me to interpret what your objection is.",
      "created_at" : "2020-08-13T11:35:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-673425395",
      "id" : 673425395,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MzQyNTM5NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-13T11:35:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673425395",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17785 (p2p: Unify Send and Receive protocol versions by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-08-20T20:58:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-677901218",
      "id" : 677901218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NzkwMTIxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-25T08:47:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677901218",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-08-24T15:10:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-679185968",
      "id" : 679185968,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTE4NTk2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T15:10:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679185968",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased 76668236610198f61bf60c42a40c2826585515b7 -> 9ee46539e2c65e4ac53149fcdf1badeb35279013 ([pr19668.05](https://github.com/hebasto/bitcoin/commits/pr19668.05) -> [pr19668.06](https://github.com/hebasto/bitcoin/commits/pr19668.06)) due to the conflict with #19704.",
      "created_at" : "2020-08-24T17:32:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-679265308",
      "id" : 679265308,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3OTI2NTMwOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-24T17:32:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679265308",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479631289"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479631289"
         }
      },
      "author_association" : "MEMBER",
      "body" : "LockAssertion's `__attribute__` is `EXCLUSIVE_LOCK_FUNCTION` aka `ACQUIRE`. This goes against the clang documentation, which states that the capability is *not* held. https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#acquire-acquire-shared-release-release-shared\r\n\r\n> ACQUIRE is an attribute on functions or methods, which declares that the function acquires a capability, but does not release it. The caller must not hold the given capability on entry, and it will hold the capability on exit. ACQUIRE_SHARED is similar.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T09:38:37Z",
      "diff_hunk" : "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479631289",
      "id" : 479631289,
      "line" : 631,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYzMTI4OQ==",
      "original_commit_id" : "00e537d140741e2187ec8f5d8b212c1e5ce639f0",
      "original_line" : 631,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 478114531,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479631289",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479663318"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479663318"
         }
      },
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/blob/4631dc5c578475fd3ca7a91676f7daf788a11192/src/sync.h#L353-L355\r\n\r\n> _when it_ [the fact that mutex is locked] _couldn't be determined otherwise_ [by Thread Safety Analysis]\r\n\r\nSuch lambda expression is that case.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T16:00:59Z",
      "diff_hunk" : "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479663318",
      "id" : 479663318,
      "in_reply_to_id" : 479631289,
      "line" : 631,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2MzMxOA==",
      "original_commit_id" : "00e537d140741e2187ec8f5d8b212c1e5ce639f0",
      "original_line" : 631,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 478137514,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479663318",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479665449"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479665449"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, I've failed to find an example in our code base that embraces a `Mutex` instance, an annotation in function member declaration, and an assertion in function member definition.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T16:23:05Z",
      "diff_hunk" : "@@ -746,6 +746,72 @@ the upper cycle, etc.\n Threads and synchronization\n ----------------------------\n \n+- Prefer `Mutex` type to `RecursiveMutex` one\n+\n+- Consistently use [Clang Thread Safety Analysis](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html) annotations to\n+  get compile-time warnings about potential race conditions in code. Combine annotations in function declarations with\n+  run-time asserts in function definitions:\n+\n+```C++\n+// txmempool.h\n+class CTxMemPool\n+{\n+public:\n+    ...\n+    mutable RecursiveMutex cs;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479665449",
      "id" : 479665449,
      "in_reply_to_id" : 467853723,
      "line" : 761,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2NTQ0OQ==",
      "original_commit_id" : "76668236610198f61bf60c42a40c2826585515b7",
      "original_line" : 761,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "doc/developer-notes.md",
      "position" : 16,
      "pull_request_review_id" : 478138934,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479665449",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479667413"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479667413"
         }
      },
      "author_association" : "MEMBER",
      "body" : "But in that case the `AssertLockHeld` (version as in current master) should be used. That would also comply with the clang docs:  https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#assert-capability-and-assert-shared-capability\r\n\r\n> These are attributes on a function or method that does a run-time test to see whether the calling thread holds the given capability. The function is assumed to fail (no return) if the capability is not held.\r\n\r\nI think that the `AssertLockHeld` is currently overused, as we use it as an run-time backup of the compile-time check. It might be good to add an `AssertLockHeld` version that only does the runtime check without influencing compile-time warnings.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T16:44:12Z",
      "diff_hunk" : "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479667413",
      "id" : 479667413,
      "in_reply_to_id" : 479631289,
      "line" : 631,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2NzQxMw==",
      "original_commit_id" : "00e537d140741e2187ec8f5d8b212c1e5ce639f0",
      "original_line" : 631,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 478140240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479667413",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479667589"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479667589"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The alternative version could even be tagged with `EXCLUSIVE_LOCKS_REQUIRED`, so that correct usage of the run-time-only check would be enforced at compile time.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T16:45:52Z",
      "diff_hunk" : "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479667589",
      "id" : 479667589,
      "in_reply_to_id" : 479631289,
      "line" : 631,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2NzU4OQ==",
      "original_commit_id" : "00e537d140741e2187ec8f5d8b212c1e5ce639f0",
      "original_line" : 631,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 478140362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479667589",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479667659"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479667659"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This PR goal is decouple compile-time check from run-time one.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T16:46:40Z",
      "diff_hunk" : "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479667659",
      "id" : 479667659,
      "in_reply_to_id" : 479631289,
      "line" : 631,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2NzY1OQ==",
      "original_commit_id" : "00e537d140741e2187ec8f5d8b212c1e5ce639f0",
      "original_line" : 631,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 478140405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479667659",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479668534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479668534"
         }
      },
      "author_association" : "MEMBER",
      "body" : "From _the point of Thread Safety Analysis_ the `AssertLockHeld()` is a run-time check now. That hides compile-time checks.\r\n\r\nThis PR makes `AssertLockHeld()` a compile-time check (again from _the point of Thread Safety Analysis_).\r\n\r\n> It might be good to add an `AssertLockHeld` version that only does the runtime check without influencing compile-time warnings.\r\n\r\nThis PR makes (not adds) \"an `AssertLockHeld` version that only does the runtime check without influencing compile-time warnings.\"",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T16:55:41Z",
      "diff_hunk" : "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479668534",
      "id" : 479668534,
      "in_reply_to_id" : 479631289,
      "line" : 631,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2ODUzNA==",
      "original_commit_id" : "00e537d140741e2187ec8f5d8b212c1e5ce639f0",
      "original_line" : 631,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 478140992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479668534",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479668587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479668587"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit 5971934eac13809143c763aa515b1960a7368d74:\r\n\r\nwhy are you removing this? This should come with the appropriate annotation to enforce correct usage and warn about missing compile-time annotations\r\n\r\n```suggestion\r\nvoid AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\r\n```",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T16:56:29Z",
      "diff_hunk" : "@@ -53,7 +53,7 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479668587",
      "id" : 479668587,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2ODU4Nw==",
      "original_commit_id" : "5971934eac13809143c763aa515b1960a7368d74",
      "original_line" : 56,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 478141043,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479668587",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479668635"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479668635"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In fact, adding this annotation and compiling the commit shows one instance of a missing annotation.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T16:56:59Z",
      "diff_hunk" : "@@ -53,7 +53,7 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479668635",
      "id" : 479668635,
      "in_reply_to_id" : 479668587,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2ODYzNQ==",
      "original_commit_id" : "5971934eac13809143c763aa515b1960a7368d74",
      "original_line" : 56,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 478141070,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479668635",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479669053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479669053"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, it looks like you already did that in the next commit :man_facepalming:  653c8d065d90642ffb2d8d4d49474b4abc67a811",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T17:01:43Z",
      "diff_hunk" : "@@ -53,7 +53,7 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479669053",
      "id" : 479669053,
      "in_reply_to_id" : 479668587,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2OTA1Mw==",
      "original_commit_id" : "5971934eac13809143c763aa515b1960a7368d74",
      "original_line" : 56,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 478141361,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479669053",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479669193"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479669193"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should I reorder/squash commits?",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T17:03:53Z",
      "diff_hunk" : "@@ -53,7 +53,7 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479669193",
      "id" : 479669193,
      "in_reply_to_id" : 479668587,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2OTE5Mw==",
      "original_commit_id" : "5971934eac13809143c763aa515b1960a7368d74",
      "original_line" : 56,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 478141464,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479669193",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479669946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479669946"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok, but why are you not adding the annotation that the documentation suggests for this use case?\r\n\r\n```diff\r\ndiff --git a/src/sync.h b/src/sync.h\r\nindex 7b397a8003..4a222442a9 100644\r\n--- a/src/sync.h\r\n+++ b/src/sync.h\r\n@@ -357,7 +357,7 @@ public:\r\n struct SCOPED_LOCKABLE LockAssertion\r\n {\r\n     template <typename Mutex>\r\n-    explicit LockAssertion(Mutex& mutex) EXCLUSIVE_LOCK_FUNCTION(mutex)\r\n+    explicit LockAssertion(Mutex& mutex) ASSERT_EXCLUSIVE_LOCK(mutex)\r\n     {\r\n #ifdef DEBUG_LOCKORDER\r\n         AssertLockHeld(mutex);\r\n```\r\n https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#assert-capability-and-assert-shared-capability\r\n\r\n>    These are attributes on a function or method that does a run-time test to see whether the calling thread holds the given capability. The function is assumed to fail (no return) if the capability is not held.\r\n",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T17:12:23Z",
      "diff_hunk" : "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479669946",
      "id" : 479669946,
      "in_reply_to_id" : 479631289,
      "line" : 631,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2OTk0Ng==",
      "original_commit_id" : "00e537d140741e2187ec8f5d8b212c1e5ce639f0",
      "original_line" : 631,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 478141955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479669946",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479671611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479671611"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need to reorder, but if you want you can describe the two preparatory commits. Suggested git range-diff for the first two commits:\r\n\r\n\r\n```\r\n1:  00e537d140 ! 1:  efeaeaec78 Use LockAssertion utility class instead of AssertLockHeld()\r\n    @@ Metadata\r\n      ## Commit message ##\r\n         Use LockAssertion utility class instead of AssertLockHeld()\r\n     \r\n    +    First, add the proper attribute to LockAssertion, according to\r\n    +    https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#assert-capability-and-assert-shared-capability\r\n    +\r\n    +    Then, to prepare for commit \"Do not hide compile-time thread safety\r\n    +    warnings\", replace AssertLockHeld with LockAssertion where needed.\r\n    +\r\n      ## src/net_processing.cpp ##\r\n     @@ src/net_processing.cpp: static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\r\n                  }\r\n    @@ src/net_processing.cpp: void PeerLogicValidation::EvictExtraOutboundPeers(int64_\r\n      \r\n                      // Only disconnect a peer that has been connected to us for\r\n                      // some reasonable fraction of our check-frequency, to give\r\n    +\r\n    + ## src/sync.h ##\r\n    +@@ src/sync.h: public:\r\n    + struct SCOPED_LOCKABLE LockAssertion\r\n    + {\r\n    +     template <typename Mutex>\r\n    +-    explicit LockAssertion(Mutex& mutex) EXCLUSIVE_LOCK_FUNCTION(mutex)\r\n    ++    explicit LockAssertion(Mutex& mutex) ASSERT_EXCLUSIVE_LOCK(mutex)\r\n    +     {\r\n    + #ifdef DEBUG_LOCKORDER\r\n    +         AssertLockHeld(mutex);\r\n2:  0ed94d8f86 ! 2:  f0e821b7ef Add missed thread safety annotations\r\n    @@ Metadata\r\n      ## Commit message ##\r\n         Add missed thread safety annotations\r\n     \r\n    +    This is needed for commit \"sync.h: make runtime lock checks require\r\n    +    compile-time lock checks\" to pass\r\n    +\r\n      ## src/wallet/scriptpubkeyman.h ##\r\n     @@ src/wallet/scriptpubkeyman.h: private:\r\n          //! keeps track of whether Unlock has run a thorough check before\r\n",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T17:31:04Z",
      "diff_hunk" : "@@ -53,7 +53,7 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479671611",
      "id" : 479671611,
      "in_reply_to_id" : 479668587,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3MTYxMQ==",
      "original_commit_id" : "5971934eac13809143c763aa515b1960a7368d74",
      "original_line" : 56,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 478143117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479671611",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Just one question: https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479669946\r\n\r\nOtherwise, almost ACK 984ea63cb6 ð\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nalmost ACK 984ea63cb6 ð\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUgRiQv+OzT2oaGMTBdl/bL/KCX2vXdlLOYUopemBZbi3N+ZZxDTGcYwPBWDsjoF\r\n1BAKpoRQfy18UvI+TwftS4hccqt2676r332uahJ3TD0SwT5LGe4IyR6w2QAnB86o\r\nWv7eLRJIMoAb1b3UfL2wTNCEWXouxqoAVeEsucq4PyfI5lDQKpilJSSvJjRmvScK\r\n+wuNfvhmXeMX+RzYBTBilG0SELfjhnsNSn9l+rkmMgbD7kAzHatUFJ+FeSRHDJPb\r\nLwr0XBI6hsYYCn/d7vH9o2PVXcULJ4PFpjg5HU4/f40dF+7vmva38CA9cKlJyVEU\r\n2McPNT8h99/JAonUFMTFAzroAjAKyD1SVDRl2vyKAArT84HGMnKH0cr4e5WKaHuw\r\noa4DXt0fyz9PxZayq9hd3SPOJB4ukxrY8rWI2QFZHgOU5AUAKR0L8B1fJA+KKFgU\r\nzVGxPz38xUO2UahyHqzN6Nm/ELyXgBq9lZG0xM5kFzL1Xha/dsooqvu0M8faSzSM\r\n+0SGxDw8\r\n=jU5f\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `7b19e59265341027936672d6d3e2e75fba6bee9ec10e1cd33960b42ec4416ed8  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e8929401087b19e59265341027936672d6d3e2e75fba6bee9ec10e1cd33960b42ec4416ed8f0106ea759232aa89ded4ec0763b06c49eec08fff01040de79ca7d0e6b2acb9b3ff4feff3ce408f1045f4a90eaf008ec84146f72e044db0083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff01041ea7556861d4239bccad0e609fe172608f1045f4a90e9f008c3362913b872631a0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff010d8f54fa7b4dde9459b331c80d5763e6708f1045f4a90e9f00806e4dba08b3ceb1c0083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010da21bd7025188b1963af63ae1e87b8b208f1045f4a90e9f0083f088945febd9b940083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6d)\r\n\r\n</details>\r\n",
      "created_at" : "2020-08-29T17:32:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-683319875",
      "id" : 683319875,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MzMxOTg3NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-29T17:32:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683319875",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479671761"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479671761"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Ok, but why are you not adding the annotation that the documentation suggests for this use case?\r\n\r\nIt seems a bit out of this PR scope.\r\nNevertheless, `ASSERT_EXCLUSIVE_LOCK` \"does a run-time test\". But `LockAssertion` provides compile-time TSA check. See: https://github.com/bitcoin/bitcoin/pull/14437/files#diff-df95fc819b237793cb462142a31b1871\r\n",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T17:32:19Z",
      "diff_hunk" : "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479671761",
      "id" : 479671761,
      "in_reply_to_id" : 479631289,
      "line" : 631,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3MTc2MQ==",
      "original_commit_id" : "00e537d140741e2187ec8f5d8b212c1e5ce639f0",
      "original_line" : 631,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 478143204,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:47:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479671761",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479673202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479673202"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks! Commit messages have been [updated](https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-683322259).",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T17:47:55Z",
      "diff_hunk" : "@@ -53,7 +53,7 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479673202",
      "id" : 479673202,
      "in_reply_to_id" : 479668587,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3MzIwMg==",
      "original_commit_id" : "5971934eac13809143c763aa515b1960a7368d74",
      "original_line" : 56,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/sync.h",
      "position" : null,
      "pull_request_review_id" : 478144283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:52:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479673202",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated 9ee46539e2c65e4ac53149fcdf1badeb35279013 -> ea74e10acf17903e44c85e3678853414653dd4e1 ([pr19668.06](https://github.com/hebasto/bitcoin/commits/pr19668.06) -> [pr19668.07](https://github.com/hebasto/bitcoin/commits/pr19668.07), [diff](https://github.com/hebasto/bitcoin/compare/pr19668.06..pr19668.07)):\r\n\r\n- addressed @MarcoFalke's [comment](https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479671611):\r\n> No need to reorder, but if you want you can describe the two preparatory commits.",
      "created_at" : "2020-08-29T17:51:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-683322259",
      "id" : 683322259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MzMyMjI1OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-29T17:51:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683322259",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479673855"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479673855"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The run time check was added when it was renamed from \"annotation\" to \"assertion\": https://github.com/bitcoin/bitcoin/pull/16034#issuecomment-493042117",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T17:55:31Z",
      "diff_hunk" : "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479673855",
      "id" : 479673855,
      "in_reply_to_id" : 479631289,
      "line" : 631,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3Mzg1NQ==",
      "original_commit_id" : "00e537d140741e2187ec8f5d8b212c1e5ce639f0",
      "original_line" : 631,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 478144737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T17:55:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479673855",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK ea74e10acf ð\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK ea74e10acf ð\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUjduAwAvJQy8WxET79bR7T5ZL/UoKzl6VDAiNEM5pbrfO0xCRrsD1bM+s+RABtR\r\nnxkeaGOrOrUNAvbGun0GKtT7voqp3x3RwXtcUdeNRCSJXp5zOIzMP8V87FCzMZ9v\r\nWI9jJh2E6JngRXTzJayY7R4enioFcCoLK415AwlEZaa06jycBP3TpAPOsjUczaIC\r\n8EjDku/22miUzPcwnHAw1XR9bhXZ3oyl6b7Lwx4mktiGFCNtvr54MLopFls//+bs\r\nZxFQ3Wqma5wLm8aBPCfHkP1ZkTtLzEZnH9ho2fphW986fDjvd+G0+H00/zV1P8ey\r\nQeY+fTU0zzxoUMXUQsoGvXAxcfRnV1/EtzWtqraTYs+ebQx1kN8PPilkBcIioyI/\r\nllP9i7SP/QJEH74bxQPD6IaC8NlyY9is2RI99DzBiGYawB0zZj65ri9hWIocD+XD\r\nLYefVtHoAjaEflzHGnYWNiEGBzSOEm/RUUONBT1JBFmkvFQC6LNWoYGbZe+MfuYT\r\n/at0I08D\r\n=0zQn\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `45b97e7100d59a8015d51f47d4403a42ca4a6457ae8da97a2cbcf721bf8f5f59  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e89294010845b97e7100d59a8015d51f47d4403a42ca4a6457ae8da97a2cbcf721bf8f5f59f0100e191ac28fbc019bc49f7dfe3789bc7608fff0102c889f92f9368ceedc7a23abacce448108f1045f4a9739f00873dce31db7546a340083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff01058ff1688ef2bea2330846ca69059dd2308f1045f4a9738f008588df02151893f080083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff010ae1785b9b7183a1d0ecf5d6661309b0c08f1045f4a9739f008f15dacab759f2e110083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010d7f01a051af86d017c519d14a91a7f1308f1045f4a9739f008f4f7d567a4448c590083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "created_at" : "2020-08-29T17:58:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-683323040",
      "id" : 683323040,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MzMyMzA0MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-29T17:58:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683323040",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479674772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479674772"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Our crafted run time check `AssertLockHeld()` is preferred over TSA run time check `ASSERT_EXCLUSIVE_LOCK()`, no?",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-29T18:06:01Z",
      "diff_hunk" : "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r479674772",
      "id" : 479674772,
      "in_reply_to_id" : 479631289,
      "line" : 631,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3NDc3Mg==",
      "original_commit_id" : "00e537d140741e2187ec8f5d8b212c1e5ce639f0",
      "original_line" : 631,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 478145352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-29T18:06:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479674772",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns @jnewbery @vasild\r\n\r\nBegging for another review round :)",
      "created_at" : "2020-08-30T16:52:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-683443587",
      "id" : 683443587,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MzQ0MzU4Nw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-30T16:52:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683443587",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-31T10:18:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-683693418",
      "id" : 683693418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MzY5MzQxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-31T10:18:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683693418",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r480234824"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480234824"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the only actual differences between `EXCLUSIVE_LOCK_FUNCTION` and `ASSERT_EXCLUSIVE_LOCK` are that the latter doesn't warn you when it sees you attempt to lock the same thing twice (so whether a redundant assertion like `LOCK(x); LockAssertion a(x);` gives an error or not) and whether it warns you if you don't release the lock when you leave the scope -- but since we've got an unlocking destructor here I don't think that matters much. [Ref](https://github.com/llvm/llvm-project/blob/a5bb24758d02e1e42b72561d0ddbd682776d1a4d/clang/lib/Analysis/ThreadSafety.cpp#L1833-L1835)\r\n\r\nSo I think it's fine to mark this function with either `EXCLUSIVE_LOCK_FUNCTION` or `ASSERT_EXCLUSIVE_LOCK`. `E_L_F` has the advantage that it discourages using `LockAssertion` where it's not necessary; otoh `A_E_L` has the advantage that it won't cause problems if someday clang becomes smarter about when locks are held, and we need the assertion for old clang versions but not new ones. Given there's not many docs about how the `ASSERT` variant works and the example code doesn't actually exercise it, probably safer to stick with `EXCLUSIVE_LOCK_FUNCTION`?",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-31T16:10:58Z",
      "diff_hunk" : "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r480234824",
      "id" : 480234824,
      "in_reply_to_id" : 479631289,
      "line" : 631,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIzNDgyNA==",
      "original_commit_id" : "00e537d140741e2187ec8f5d8b212c1e5ce639f0",
      "original_line" : 631,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 478749852,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-31T16:10:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480234824",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r480236074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480236074"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure. Lets leave it as is. Resolving discussion.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-31T16:13:16Z",
      "diff_hunk" : "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r480236074",
      "id" : 480236074,
      "in_reply_to_id" : 479631289,
      "line" : 631,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIzNjA3NA==",
      "original_commit_id" : "00e537d140741e2187ec8f5d8b212c1e5ce639f0",
      "original_line" : 631,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 478751498,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-08-31T16:13:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480236074",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-08-31T16:21:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#issuecomment-683882752",
      "id" : 683882752,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19668",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4Mzg4Mjc1Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-31T16:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683882752",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483140292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483140292"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What's the reason to prefer LockAssertion to AssertLockHeld if AssertLockHeld works at compile time and runtime and LockAssertion only works at compile time? Maybe this could be clarified https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#threads-and-synchronization",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-03T17:25:08Z",
      "diff_hunk" : "@@ -1327,7 +1326,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n     }\n \n     m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        AssertLockHeld(cs_main);\n+        LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483140292",
      "id" : 483140292,
      "line" : 1329,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0MDI5Mg==",
      "original_commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "original_line" : 1329,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 482052918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T17:25:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483140292",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483159531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483159531"
         }
      },
      "author_association" : "MEMBER",
      "body" : "When TSA fails to detect that a mutex is locked we do want to use `LockAssertion` as using `AssertLockHeld` no longer helps:\r\n```\r\n$ git diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 0e049bd66..90bd626fc 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -1370,7 +1370,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\r\n     }\r\n \r\n     m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\r\n-        LockAssertion lock(::cs_main);\r\n+        AssertLockHeld(::cs_main);\r\n \r\n         // TODO: Avoid the repeated-serialization here\r\n         if (pnode->nVersion < INVALID_CB_NO_BAN_VERSION || pnode->fDisconnect)\r\n$ make\r\nnet_processing.cpp:1373:9: warning: calling function 'AssertLockHeldInternal<AnnotatedMixin<std::recursive_mutex> >' requires holding mutex 'cs_main' exclusively [-Wthread-safety-analysis]\r\n        AssertLockHeld(::cs_main);\r\n        ^\r\n./sync.h:79:28: note: expanded from macro 'AssertLockHeld'\r\n#define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n                           ^\r\nnet_processing.cpp:1378:9: warning: calling function 'ProcessBlockAvailability' requires holding mutex 'cs_main' exclusively [-Wthread-safety-analysis]\r\n        ProcessBlockAvailability(pnode->GetId());\r\n        ^\r\nnet_processing.cpp:1379:30: warning: calling function 'State' requires holding mutex 'cs_main' exclusively [-Wthread-safety-analysis]\r\n        CNodeState &state = *State(pnode->GetId());\r\n                             ^\r\nnet_processing.cpp:1383:18: warning: calling function 'PeerHasHeader' requires holding mutex 'cs_main' exclusively [-Wthread-safety-analysis]\r\n                !PeerHasHeader(&state, pindex) && PeerHasHeader(&state, pindex->pprev)) {\r\n                 ^\r\nnet_processing.cpp:1383:51: warning: calling function 'PeerHasHeader' requires holding mutex 'cs_main' exclusively [-Wthread-safety-analysis]\r\n                !PeerHasHeader(&state, pindex) && PeerHasHeader(&state, pindex->pprev)) {\r\n                                                  ^\r\n5 warnings generated.\r\n```",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-03T18:00:30Z",
      "diff_hunk" : "@@ -1327,7 +1326,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n     }\n \n     m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        AssertLockHeld(cs_main);\n+        LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483159531",
      "id" : 483159531,
      "in_reply_to_id" : 483140292,
      "line" : 1329,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1OTUzMQ==",
      "original_commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "original_line" : 1329,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 482077992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T18:00:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483159531",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483160829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483160829"
         }
      },
      "author_association" : "MEMBER",
      "body" : "And this `LockAssertion` application is documented: https://github.com/bitcoin/bitcoin/blob/a0a422c34cfd6514d0cc445bd784d3ee1a2d1749/src/sync.h#L355-L357",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-03T18:03:08Z",
      "diff_hunk" : "@@ -1327,7 +1326,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n     }\n \n     m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        AssertLockHeld(cs_main);\n+        LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483160829",
      "id" : 483160829,
      "in_reply_to_id" : 483140292,
      "line" : 1329,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2MDgyOQ==",
      "original_commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "original_line" : 1329,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 482079852,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T18:03:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483160829",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483161612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483161612"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Maybe this could be clarified https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#threads-and-synchronization\r\n\r\nMind suggesting the clarification as my English is so poor?",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-03T18:04:40Z",
      "diff_hunk" : "@@ -1327,7 +1326,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n     }\n \n     m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        AssertLockHeld(cs_main);\n+        LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483161612",
      "id" : 483161612,
      "in_reply_to_id" : 483140292,
      "line" : 1329,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2MTYxMg==",
      "original_commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "original_line" : 1329,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 482080905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T18:04:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483161612",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483270987"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483270987"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh, I wasn't aware `AssertLockHeld` annotations changed from `ASSERT_EXCLUSIVE_LOCK` \r\nto `EXCLUSIVE_LOCKS_REQUIRED` in #19668. This seems like a questionable decision to me, because now instead of being able to use `AssertLockHeld` everywhere, we have separate confusing `AssertLockHeld` and `LockAssertion` calls.\r\n\r\nI think I would want to clarify this by changing `AssertLockHeld` annotations back to `ASSERT_EXCLUSIVE_LOCK`, making it a weaker assertion that only causes errors at runtime, never compile time. Then we could drop LockAssertion and s/LockAssertion/AssertLockHeld/ and only have one type of assertion to think about.\r\n\r\nIf this doesn't work because it interferes with work you are doing, another option \r\nmight be to s/LockAssertion/WeaklyAssertLockHeld/ everywhere. (Also maybe simplify the implementation to be an `ASSERT_EXCLUSIVE_LOCK` function instead of a class instance that requires a variable declaration.) The new naming should make it clearer which call is preferred:\r\n\r\n* `AssertLockHeld` - stricter assertion which causes errors at compile time if the compiler supports annotations, or causes errors at runtime if the compiler doesn't support annotations\r\n* `WeaklyAssertLockHeld` - less strict alternative which only triggers errors at runtime, never compile-time, and can be used when it's not possible for compiler to determine that the mutex is locked.\r\n\r\n\r\n",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-03T21:45:30Z",
      "diff_hunk" : "@@ -1327,7 +1326,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n     }\n \n     m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        AssertLockHeld(cs_main);\n+        LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483270987",
      "id" : 483270987,
      "in_reply_to_id" : 483140292,
      "line" : 1329,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI3MDk4Nw==",
      "original_commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "original_line" : 1329,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 482224521,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T21:45:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483270987",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483287210"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483287210"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We have three types of assertions related for locking:\r\n\r\n* marking a function as `EXCLUSIVE_LOCKS_REQUIRED` has a compile time check with clang that the caller has already obtained the lock\r\n* declaring a `LockAssertion` instance overrides the clang compile time checks by saying that we've already somehow acquired the lock in a way that we can't prove via clang thread safety annotations. This is useful for lambda functions (which could be annotated) that are called from some generic dispatcher like `ForEach` (that can't be annotated).\r\n* adding a call to `AssertLockHeld` does a runtime check if DEBUG_LOCKORDER is enabled. it's annotated with EXCLUSIVE_LOCKS_REQUIRED so is redundant with the compile time checks, but the compile time checks aren't available outside of clang. it's automatically called from LockAssertion to ensure that the compile time checks aren't overridden incorrectly.\r\n\r\nAs a result:\r\n\r\n* using AssertLockHeld everywhere remains fine, and no longer needlessly disables the compile time checks\r\n* LockAssertion should only be used very rarely -- and in fact it's only used in net_processing in some ForEach/ForEachNode functions.\r\n\r\nMaybe we should move the locking outside of the ForEach functions into the caller, and convert them into `for ( x : nodes ) { ... }` instead, in which case we could probably do away with LockAssertion entirely.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-03T22:29:09Z",
      "diff_hunk" : "@@ -1327,7 +1326,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n     }\n \n     m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        AssertLockHeld(cs_main);\n+        LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483287210",
      "id" : 483287210,
      "in_reply_to_id" : 483140292,
      "line" : 1329,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI4NzIxMA==",
      "original_commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "original_line" : 1329,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 482244736,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T22:29:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483287210",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483305959"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483305959"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> no longer needlessly disables the compile time checks\r\n\r\nIt's funny the only reason I ever called it was to disable compile time checks, and now it doesn't do that anymore! :smile: If really the only thing AssertLockHeld is doing is adding runtime checks on top of compile time checks that are already present, I think that is nearly useless. Anyway, can take it up in another PR.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-03T23:31:39Z",
      "diff_hunk" : "@@ -1327,7 +1326,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n     }\n \n     m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        AssertLockHeld(cs_main);\n+        LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483305959",
      "id" : 483305959,
      "in_reply_to_id" : 483140292,
      "line" : 1329,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMwNTk1OQ==",
      "original_commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "original_line" : 1329,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 482266929,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T23:31:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483305959",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483311798"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483311798"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Anyway, can take it up in another PR.\r\n\r\nCreated #19865 to experiment\r\n\r\n",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-03T23:51:53Z",
      "diff_hunk" : "@@ -1327,7 +1326,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n     }\n \n     m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        AssertLockHeld(cs_main);\n+        LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483311798",
      "id" : 483311798,
      "in_reply_to_id" : 483140292,
      "line" : 1329,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMxMTc5OA==",
      "original_commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "original_line" : 1329,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 482273279,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T23:51:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483311798",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483312523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483312523"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You use `LockAssertion g(cs_foo);` to tell the compiler that a lock is guaranteed to already be held within a code block even though the function annotations don't guarantee it. AssertLockHeld is useful if you're not compiling with clang.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-03T23:54:42Z",
      "diff_hunk" : "@@ -1327,7 +1326,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n     }\n \n     m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        AssertLockHeld(cs_main);\n+        LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483312523",
      "id" : 483312523,
      "in_reply_to_id" : 483140292,
      "line" : 1329,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMxMjUyMw==",
      "original_commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "original_line" : 1329,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 482274162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-03T23:54:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483312523",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483317313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483317313"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> AssertLockHeld is useful if you're not compiling with clang.\r\n\r\nYes, that's what I mean by \"nearly useless.\" It can help developers who aren't using clang, and who are compiling with DEBUG_LOCKORDER, and who want to wait for an assert to trigger at runtime. But it won't make the codebase more thread safe because we already don't merge changes that don't compile with clang.\r\n\r\nAny case, if you see problems with #19865, it would be good to comment there. I'm not an expert on lock annotations, so maybe the AssertLockHeld calls removed in #19865 are actually doing something useful besides haphazardly repeating compile time assertions at runtime.\r\n\r\n",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-04T00:12:34Z",
      "diff_hunk" : "@@ -1327,7 +1326,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n     }\n \n     m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        AssertLockHeld(cs_main);\n+        LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483317313",
      "id" : 483317313,
      "in_reply_to_id" : 483140292,
      "line" : 1329,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMxNzMxMw==",
      "original_commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "original_line" : 1329,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 482279518,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T00:12:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483317313",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483457405"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483457405"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> > AssertLockHeld is useful if you're not compiling with clang.\r\n> \r\n> Yes, that's what I mean by \"nearly useless.\" It can help developers who aren't using clang, and who are compiling with DEBUG_LOCKORDER, and who want to wait for an assert to trigger at runtime. But it won't make the codebase more thread safe because we already don't merge changes that don't compile with clang.\r\n\r\nI [disagree](https://github.com/bitcoin/bitcoin/pull/19865#issuecomment-686986462) with statements about \"useless\" `AssertLockHeld`.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-04T08:06:28Z",
      "diff_hunk" : "@@ -1327,7 +1326,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n     }\n \n     m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        AssertLockHeld(cs_main);\n+        LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r483457405",
      "id" : 483457405,
      "in_reply_to_id" : 483140292,
      "line" : 1329,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ1NzQwNQ==",
      "original_commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "original_line" : 1329,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 20,
      "pull_request_review_id" : 482445512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-04T08:06:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483457405",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r489815763"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489815763"
         }
      },
      "author_association" : "NONE",
      "body" : "> However if the assert attribute is defined first: `ASSERT_EXCLUSIVE_LOCK(cs) EXCLUSIVE_LOCKS_REQUIRED(cs)` then only the second warning is generated (`EXCLUSIVE_LOCKS_REQUIRED` is ignored in this case).\r\n\r\nThis is somewhat expected. If you assert `cs`, it's assumed to be held afterwards. If you require it to be held and then assert it, we warn if it isn't initially held, and then assume it to be held afterwards.\r\n\r\nGenerally though you shouldn't expect attributes to be treated in the order they are given, and this particular combination of attributes just doesn't make sense. (Either you're assuming a capability that you've just asserted, which is redundant, or you assert a capability that you've previously assumed, which is pointless.)",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-16T23:53:16Z",
      "diff_hunk" : "@@ -53,8 +53,9 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n-void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+template <typename MutexType>\n+void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(!cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r489815763",
      "id" : 489815763,
      "in_reply_to_id" : 467045878,
      "line" : 58,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTgxNTc2Mw==",
      "original_commit_id" : "fcf6569d2e6d55411773d06380770b0c355408b9",
      "original_line" : 58,
      "original_position" : 8,
      "original_start_line" : 56,
      "path" : "src/sync.h",
      "position" : 8,
      "pull_request_review_id" : 490092725,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : 56,
      "start_side" : "RIGHT",
      "updated_at" : "2020-09-16T23:53:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489815763",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/1453952?v=4",
         "events_url" : "https://api.github.com/users/aaronpuchert/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aaronpuchert/followers",
         "following_url" : "https://api.github.com/users/aaronpuchert/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aaronpuchert/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aaronpuchert",
         "id" : 1453952,
         "login" : "aaronpuchert",
         "node_id" : "MDQ6VXNlcjE0NTM5NTI=",
         "organizations_url" : "https://api.github.com/users/aaronpuchert/orgs",
         "received_events_url" : "https://api.github.com/users/aaronpuchert/received_events",
         "repos_url" : "https://api.github.com/users/aaronpuchert/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aaronpuchert/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aaronpuchert/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aaronpuchert"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r489823422"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489823422"
         }
      },
      "author_association" : "NONE",
      "body" : "`ASSERT_EXCLUSIVE_LOCK` was created for exactly this purpose, and it's conceptually the right attribute to use here. `EXCLUSIVE_LOCK_FUNCTION` isn't right for the very simple reason that you don't actually lock. Also this shouldn't be a `SCOPED_LOCKABLE` because assertions don't go out of scope.\r\n\r\n> `E_L_F` has the advantage that it discourages using `LockAssertion` where it's not necessary\r\n\r\nIt's redundant but obviously safe, so it's deliberate that we don't warn about that.\r\n\r\n> Given there's not many docs about how the `ASSERT` variant works\r\n\r\nFeel free to suggest changes. We obviously want to keep the docs short so that you don't have to read a novel, but they could be a bit more verbose.\r\n\r\n> and the example code doesn't actually exercise it,\r\n\r\nYou can have a look at [the test](https://github.com/llvm/llvm-project/blob/a5bb24758d02e1e42b72561d0ddbd682776d1a4d/clang/test/SemaCXX/warn-thread-safety-analysis.cpp#L4433-L4531).",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-17T00:21:03Z",
      "diff_hunk" : "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r489823422",
      "id" : 489823422,
      "in_reply_to_id" : 479631289,
      "line" : 631,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTgyMzQyMg==",
      "original_commit_id" : "00e537d140741e2187ec8f5d8b212c1e5ce639f0",
      "original_line" : 631,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 5,
      "pull_request_review_id" : 490125714,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-09-17T00:21:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489823422",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/1453952?v=4",
         "events_url" : "https://api.github.com/users/aaronpuchert/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aaronpuchert/followers",
         "following_url" : "https://api.github.com/users/aaronpuchert/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aaronpuchert/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aaronpuchert",
         "id" : 1453952,
         "login" : "aaronpuchert",
         "node_id" : "MDQ6VXNlcjE0NTM5NTI=",
         "organizations_url" : "https://api.github.com/users/aaronpuchert/orgs",
         "received_events_url" : "https://api.github.com/users/aaronpuchert/received_events",
         "repos_url" : "https://api.github.com/users/aaronpuchert/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aaronpuchert/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aaronpuchert/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aaronpuchert"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r490828755"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490828755"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@aaronpuchert,\r\n> This is somewhat expected. If you assert cs, it's assumed to be held afterwards. If you require it to be held and then assert it, we warn if it isn't initially held, and then assume it to be held afterwards.\r\n\r\nI agree with that if they were two distinct functions:\r\n```cpp\r\nfunc_tagged_with_assert_exclusive_lock();\r\n...\r\nfunc_tagged_with_exclusive_lock_required();\r\n...\r\n```\r\n\r\nBut for a single function: `void f() ATTR1 ATTR2` I wouldn't expect the behavior to differ if defined like `void f() ATTR2 ATTR1` instead.\r\n\r\nIf the combination of `ATTR1` and `ATTR2` is meaningless then maybe it would be good to produce some warning or error instead of silently assuming some behavior. Like for `signed unsigned int x;`.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-18T09:41:15Z",
      "diff_hunk" : "@@ -53,8 +53,9 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n-void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+template <typename MutexType>\n+void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(!cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r490828755",
      "id" : 490828755,
      "in_reply_to_id" : 467045878,
      "line" : 58,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgyODc1NQ==",
      "original_commit_id" : "fcf6569d2e6d55411773d06380770b0c355408b9",
      "original_line" : 58,
      "original_position" : 8,
      "original_start_line" : 56,
      "path" : "src/sync.h",
      "position" : 8,
      "pull_request_review_id" : 491310355,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : 56,
      "start_side" : "RIGHT",
      "updated_at" : "2020-09-18T09:41:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490828755",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r490885616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490885616"
         }
      },
      "author_association" : "NONE",
      "body" : "> If the combination of `ATTR1` and `ATTR2` is meaningless then maybe it would be good to produce some warning or error instead of silently assuming some behavior.\r\n\r\nMakes sense, but there are many attributes and I'm not sure whether we can exhaustively figure out which combinations make sense and which don't.",
      "commit_id" : "ea74e10acf17903e44c85e3678853414653dd4e1",
      "created_at" : "2020-09-18T11:31:55Z",
      "diff_hunk" : "@@ -53,8 +53,9 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n-void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+template <typename MutexType>\n+void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(!cs);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19668#discussion_r490885616",
      "id" : 490885616,
      "in_reply_to_id" : 467045878,
      "line" : 58,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg4NTYxNg==",
      "original_commit_id" : "fcf6569d2e6d55411773d06380770b0c355408b9",
      "original_line" : 58,
      "original_position" : 8,
      "original_start_line" : 56,
      "path" : "src/sync.h",
      "position" : 8,
      "pull_request_review_id" : 491383604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19668",
      "side" : "RIGHT",
      "start_line" : 56,
      "start_side" : "RIGHT",
      "updated_at" : "2020-09-18T11:31:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490885616",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/1453952?v=4",
         "events_url" : "https://api.github.com/users/aaronpuchert/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aaronpuchert/followers",
         "following_url" : "https://api.github.com/users/aaronpuchert/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aaronpuchert/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aaronpuchert",
         "id" : 1453952,
         "login" : "aaronpuchert",
         "node_id" : "MDQ6VXNlcjE0NTM5NTI=",
         "organizations_url" : "https://api.github.com/users/aaronpuchert/orgs",
         "received_events_url" : "https://api.github.com/users/aaronpuchert/received_events",
         "repos_url" : "https://api.github.com/users/aaronpuchert/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aaronpuchert/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aaronpuchert/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aaronpuchert"
      }
   }
]
