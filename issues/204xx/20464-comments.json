[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK: nice cleanup (+49 â109)!",
      "created_at" : "2020-11-23T19:44:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20464#issuecomment-732385818",
      "id" : 732385818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20464",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMjM4NTgxOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-23T19:45:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/732385818",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #14485 (Try to use posix_fadvise with CBufferedFile by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-11-23T21:38:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20464#issuecomment-732441436",
      "id" : 732441436,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20464",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMjQ0MTQzNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-23T21:38:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/732441436",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK!",
      "created_at" : "2020-11-25T08:54:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20464#issuecomment-733562823",
      "id" : 733562823,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20464",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMzU2MjgyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-25T08:54:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/733562823",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "There are some more unnecessary `MakeUCharSpan` that can be removed here, especially related to Base64 handling:\r\n```\r\nsrc/rpc/rawtransaction.cpp:    return EncodeBase64(MakeUCharSpan(ssTx));\r\nsrc/rpc/rawtransaction.cpp:    return EncodeBase64(MakeUCharSpan(ssTx));\r\nsrc/rpc/rawtransaction.cpp:    return EncodeBase64(MakeUCharSpan(ssTx));\r\nsrc/rpc/rawtransaction.cpp:    return EncodeBase64(MakeUCharSpan(ssTx));\r\nsrc/rpc/rawtransaction.cpp:    return EncodeBase64(MakeUCharSpan(ssTx));\r\n```\r\n(possibly more but I could find these quickly)",
      "created_at" : "2020-11-25T08:58:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20464#issuecomment-733564863",
      "id" : 733564863,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20464",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMzU2NDg2Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-25T08:58:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/733564863",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-11-25T09:25:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20464#issuecomment-733580337",
      "id" : 733580337,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20464",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMzU4MDMzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-25T09:25:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/733580337",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20464#discussion_r546231371"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20464"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546231371"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There is already a `bool Rewind(size_type n)`, overloading it here is confusing. We should think of a new name. I had hoped to think of a way to use the existing method in the only place it is used, but it appears there is  no way to access `nReadPos` (or even derive it) from the outside.",
      "commit_id" : "fa292724598c273867bc6dbf311f1440fe2541ba",
      "created_at" : "2020-12-19T12:10:45Z",
      "diff_hunk" : "@@ -221,60 +222,25 @@ class CDataStream\n     typedef vector_type::reverse_iterator reverse_iterator;\n \n     explicit CDataStream(int nTypeIn, int nVersionIn)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const_iterator pbegin, const_iterator pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const char* pbegin, const char* pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const vector_type& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const std::vector<char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n+        : nType{nTypeIn},\n+          nVersion{nVersionIn} {}\n \n-    CDataStream(const std::vector<unsigned char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n+    explicit CDataStream(Span<const uint8_t> sp, int nTypeIn, int nVersionIn)\n+        : vch(sp.data(), sp.data() + sp.size()),\n+          nType{nTypeIn},\n+          nVersion{nVersionIn} {}\n \n     template <typename... Args>\n     CDataStream(int nTypeIn, int nVersionIn, Args&&... args)\n+        : nType{nTypeIn},\n+          nVersion{nVersionIn}\n     {\n-        Init(nTypeIn, nVersionIn);\n         ::SerializeMany(*this, std::forward<Args>(args)...);\n     }\n \n-    void Init(int nTypeIn, int nVersionIn)\n+    void Rewind()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20464#discussion_r546231371",
      "id" : 546231371,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIzMTM3MQ==",
      "original_commit_id" : "fa8dec9e89fd9a064f3ea7d424f1eac83f0630ea",
      "original_line" : 241,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 555937676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20464",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-31T08:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546231371",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20464#discussion_r546232009"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20464"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546232009"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the name make sense. `Rewind(size_t)` rewinds only how much is passed. `Rewind()` rewinds all the way. Though, I am happy to rename this to anything else, if there are suggestions.",
      "commit_id" : "fa292724598c273867bc6dbf311f1440fe2541ba",
      "created_at" : "2020-12-19T12:17:51Z",
      "diff_hunk" : "@@ -221,60 +222,25 @@ class CDataStream\n     typedef vector_type::reverse_iterator reverse_iterator;\n \n     explicit CDataStream(int nTypeIn, int nVersionIn)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const_iterator pbegin, const_iterator pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const char* pbegin, const char* pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const vector_type& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const std::vector<char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n+        : nType{nTypeIn},\n+          nVersion{nVersionIn} {}\n \n-    CDataStream(const std::vector<unsigned char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n+    explicit CDataStream(Span<const uint8_t> sp, int nTypeIn, int nVersionIn)\n+        : vch(sp.data(), sp.data() + sp.size()),\n+          nType{nTypeIn},\n+          nVersion{nVersionIn} {}\n \n     template <typename... Args>\n     CDataStream(int nTypeIn, int nVersionIn, Args&&... args)\n+        : nType{nTypeIn},\n+          nVersion{nVersionIn}\n     {\n-        Init(nTypeIn, nVersionIn);\n         ::SerializeMany(*this, std::forward<Args>(args)...);\n     }\n \n-    void Init(int nTypeIn, int nVersionIn)\n+    void Rewind()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20464#discussion_r546232009",
      "id" : 546232009,
      "in_reply_to_id" : 546231371,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIzMjAwOQ==",
      "original_commit_id" : "fa8dec9e89fd9a064f3ea7d424f1eac83f0630ea",
      "original_line" : 241,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 555938005,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20464",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-31T08:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546232009",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Code review ACK apart from the above comment. This PR is straightforward to review. The first commit can be seen separately.",
      "created_at" : "2020-12-19T12:18:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20464#issuecomment-748466937",
      "id" : 748466937,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20464",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0ODQ2NjkzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-19T12:18:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748466937",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20464#discussion_r550313783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20464"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550313783"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It's a pity that there is no defined invalid value for size_t, which could be passed as default value. Would `Rewind(std::optional<size_t> n = std::nullopt)` be a possibility here to unite the two methods? Like e.g.:\r\n\r\n```diff\r\ndiff --git a/src/streams.h b/src/streams.h\r\nindex 2a921c2c5..a6e781b95 100644\r\n--- a/src/streams.h\r\n+++ b/src/streams.h\r\n@@ -14,6 +14,7 @@\r\n #include <assert.h>\r\n #include <ios>\r\n #include <limits>\r\n+#include <optional>\r\n #include <stdint.h>\r\n #include <stdio.h>\r\n #include <string.h>\r\n@@ -238,11 +239,6 @@ public:\r\n         ::SerializeMany(*this, std::forward<Args>(args)...);\r\n     }\r\n\r\n-    void Rewind()\r\n-    {\r\n-        nReadPos = 0;\r\n-    }\r\n-\r\n     std::string str() const\r\n     {\r\n         return (std::string(begin(), end()));\r\n@@ -339,12 +335,17 @@ public:\r\n         nReadPos = 0;\r\n     }\r\n\r\n-    bool Rewind(size_type n)\r\n+    bool Rewind(std::optional<size_type> n = std::nullopt)\r\n     {\r\n+        // Total rewind if no size is passed\r\n+        if (!n) {\r\n+            nReadPos = 0;\r\n+            return true;\r\n+        }\r\n         // Rewind by n characters if the buffer hasn't been compacted yet\r\n-        if (n > nReadPos)\r\n+        if (*n > nReadPos)\r\n             return false;\r\n-        nReadPos -= n;\r\n+        nReadPos -= *n;\r\n         return true;\r\n     }\r\n```\r\n\r\nProbably overkill for  methods that are only ever called in the benchmarks though...",
      "commit_id" : "fa292724598c273867bc6dbf311f1440fe2541ba",
      "created_at" : "2020-12-30T20:09:26Z",
      "diff_hunk" : "@@ -221,60 +222,25 @@ class CDataStream\n     typedef vector_type::reverse_iterator reverse_iterator;\n \n     explicit CDataStream(int nTypeIn, int nVersionIn)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const_iterator pbegin, const_iterator pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const char* pbegin, const char* pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const vector_type& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const std::vector<char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n+        : nType{nTypeIn},\n+          nVersion{nVersionIn} {}\n \n-    CDataStream(const std::vector<unsigned char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n+    explicit CDataStream(Span<const uint8_t> sp, int nTypeIn, int nVersionIn)\n+        : vch(sp.data(), sp.data() + sp.size()),\n+          nType{nTypeIn},\n+          nVersion{nVersionIn} {}\n \n     template <typename... Args>\n     CDataStream(int nTypeIn, int nVersionIn, Args&&... args)\n+        : nType{nTypeIn},\n+          nVersion{nVersionIn}\n     {\n-        Init(nTypeIn, nVersionIn);\n         ::SerializeMany(*this, std::forward<Args>(args)...);\n     }\n \n-    void Init(int nTypeIn, int nVersionIn)\n+    void Rewind()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20464#discussion_r550313783",
      "id" : 550313783,
      "in_reply_to_id" : 546231371,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMxMzc4Mw==",
      "original_commit_id" : "fa8dec9e89fd9a064f3ea7d424f1eac83f0630ea",
      "original_line" : 241,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 560186186,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20464",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-31T08:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550313783",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK -- will review as soon as https://github.com/bitcoin/bitcoin/pull/20464#discussion_r546231371 is resolved",
      "created_at" : "2020-12-30T20:19:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20464#issuecomment-752745862",
      "id" : 752745862,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20464",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1Mjc0NTg2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-30T20:19:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752745862",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20464#discussion_r550424466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20464"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550424466"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, fixed",
      "commit_id" : "fa292724598c273867bc6dbf311f1440fe2541ba",
      "created_at" : "2020-12-31T08:10:21Z",
      "diff_hunk" : "@@ -221,60 +222,25 @@ class CDataStream\n     typedef vector_type::reverse_iterator reverse_iterator;\n \n     explicit CDataStream(int nTypeIn, int nVersionIn)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const_iterator pbegin, const_iterator pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const char* pbegin, const char* pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const vector_type& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const std::vector<char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n+        : nType{nTypeIn},\n+          nVersion{nVersionIn} {}\n \n-    CDataStream(const std::vector<unsigned char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n+    explicit CDataStream(Span<const uint8_t> sp, int nTypeIn, int nVersionIn)\n+        : vch(sp.data(), sp.data() + sp.size()),\n+          nType{nTypeIn},\n+          nVersion{nVersionIn} {}\n \n     template <typename... Args>\n     CDataStream(int nTypeIn, int nVersionIn, Args&&... args)\n+        : nType{nTypeIn},\n+          nVersion{nVersionIn}\n     {\n-        Init(nTypeIn, nVersionIn);\n         ::SerializeMany(*this, std::forward<Args>(args)...);\n     }\n \n-    void Init(int nTypeIn, int nVersionIn)\n+    void Rewind()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20464#discussion_r550424466",
      "id" : 550424466,
      "in_reply_to_id" : 546231371,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyNDQ2Ng==",
      "original_commit_id" : "fa8dec9e89fd9a064f3ea7d424f1eac83f0630ea",
      "original_line" : 241,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 560288840,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20464",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-12-31T08:10:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550424466",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/20464#discussion_r567848918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20464"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/567848918"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I think the name make sense. Rewind(size_t) rewinds only how much is passed.\r\n\r\nRight. My remark was triggered mostly by that the two implementations of `rewind()` were in different places in the method list and not together, the name makes some sense.\r\n\r\nBut I like the new combined implementation.\r\n",
      "commit_id" : "fa292724598c273867bc6dbf311f1440fe2541ba",
      "created_at" : "2021-02-01T14:05:14Z",
      "diff_hunk" : "@@ -221,60 +222,25 @@ class CDataStream\n     typedef vector_type::reverse_iterator reverse_iterator;\n \n     explicit CDataStream(int nTypeIn, int nVersionIn)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const_iterator pbegin, const_iterator pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const char* pbegin, const char* pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const vector_type& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n-\n-    CDataStream(const std::vector<char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n+        : nType{nTypeIn},\n+          nVersion{nVersionIn} {}\n \n-    CDataStream(const std::vector<unsigned char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())\n-    {\n-        Init(nTypeIn, nVersionIn);\n-    }\n+    explicit CDataStream(Span<const uint8_t> sp, int nTypeIn, int nVersionIn)\n+        : vch(sp.data(), sp.data() + sp.size()),\n+          nType{nTypeIn},\n+          nVersion{nVersionIn} {}\n \n     template <typename... Args>\n     CDataStream(int nTypeIn, int nVersionIn, Args&&... args)\n+        : nType{nTypeIn},\n+          nVersion{nVersionIn}\n     {\n-        Init(nTypeIn, nVersionIn);\n         ::SerializeMany(*this, std::forward<Args>(args)...);\n     }\n \n-    void Init(int nTypeIn, int nVersionIn)\n+    void Rewind()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20464#discussion_r567848918",
      "id" : 567848918,
      "in_reply_to_id" : 546231371,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Nzg0ODkxOA==",
      "original_commit_id" : "fa8dec9e89fd9a064f3ea7d424f1eac83f0630ea",
      "original_line" : 241,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/streams.h",
      "position" : null,
      "pull_request_review_id" : 580383508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20464",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-01T14:05:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/567848918",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "code review ACK fa292724598c273867bc6dbf311f1440fe2541ba",
      "created_at" : "2021-02-01T14:06:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20464#issuecomment-770881961",
      "id" : 770881961,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20464",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3MDg4MTk2MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-01T14:06:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/770881961",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
