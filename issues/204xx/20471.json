{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "In packages where we are passing `-std=c++11` switch to `-std=c++17`, or, `-std=c++1z` in the case of Qt.\r\n\r\nThis PR also contains a [commit](https://github.com/bitcoin/bitcoin/commit/104e859c9755aee5708ea1934454d88b10c266ff) that improves debug output when building Qt for debugging (`DEBUG=1`).\r\n\r\nNow we'll get output like this:\r\n```bash\r\ng++ -c -pipe -ffunction-sections -O2 -fPIC -std=c++11 -fno-exceptions <lots more> ../../corelib/kernel/qcoreapplication.cpp\r\n```\r\nrather than just:\r\n```bash\r\ncompiling ../../corelib/kernel/qcoreapplication.cpp\r\n```\r\n\r\nNote that when you look at the DEBUG output for these changes when building Qt, you'll see objects being compiled with a mix of C++11 and C++17. The breakdown is roughly:\r\n\r\n1. `qmake` built with `-std=c++11`:\r\n```bash\r\nCreating qmake...\r\nmake[1]: Entering directory '<trim>/qt/5.9.8-4110fa99945/qtbase/qmake'\r\ng++ -c -o project.o   -std=c++11 -ffunction-sections -O2 -g <trim> <trim>/qt/5.9.8-4110fa99945/qtbase/qmake/project.cpp\r\n\r\n# when qmake, Qt also builds some of it's corelib, such as corelib/global/qmalloc.cpp\r\ng++ -c -o qmalloc.o   -std=c++11 -ffunction-sections -O2 -g <trim> <trim>/qt/5.9.8-4110fa99945/qtbase/src/corelib/global/qmalloc.cpp\r\n```\r\n\r\n2. `qmake` is run, and passed our build options, including `-c++std`:\r\n```bash\r\nmake[1]: Entering directory '<trim>/qt/5.9.8-4110fa99945/qtbase'\r\n<trim>qt/5.9.8-4110fa99945/qtbase/bin/qmake -o Makefile qtbase.pro -- -bindir <trim>/native/bin -c++std c++1z -confirm-license <trim>\r\n```\r\n\r\n3. After some cleaning and configuring, we actually start to build Qt, as well as it's tools and internal libs:\r\n```bash\r\nBuilding qt...\r\nmake[1]: Entering directory '<trim>/qt/5.9.8-4110fa99945/qtbase/src'\r\n\r\n# build libpng, zlib etc\r\ngcc -c -m64 -pipe -pipe -O1 <trim> -o .obj/png.o png.c\r\n\r\n# build libQt5Bootstrap, using C++11, which again compiles qmalloc.cpp\r\nmake[2]: Entering directory '<trim>/qt/5.9.8-4110fa99945/qtbase/src/tools/bootstrap'\r\ng++ -c -pipe -ffunction-sections -O2 -fPIC -std=c++11 <trim> -o .obj/qmalloc.o ../../corelib/global/qmalloc.cpp\r\n\r\n# build a bunch of tools like moc, rcc, uic, qfloat16-tables, qdbuscpp2xml, using C++11\r\ng++ -c -pipe -O2 -std=c++11 -fno-exceptions -Wall -W <trim> -o .obj/rcc.o rcc.cpp\r\n\r\n# from here, Qt is compiled with -std=c++1z, including qmalloc.cpp, for the third and final time:\r\ng++ -c -include .pch/Qt5Core <trim> -g -Og -fPIC -std=c++1z -fvisibility=hidden <trim> -o .obj/qmalloc.o global/qmalloc.cpp\r\n```\r\n\r\n4.  Finally, build tools like `lrelease`, `lupdate`, etc, but back to using -std=c++11\r\n```bash\r\nmake[1]: Entering directory '<trim>/qt/5.9.8-4110fa99945/qttools/src/linguist/lrelease'\r\ng++ -c -pipe -O2 -std=c++11 -fno-exceptions -Wall -W <trim> -o .obj/translator.o ../shared/translator.cpp\r\n```\r\n\r\nIf you dump the debug info from the built Qt libs, they should also tell you that they were compiled with `C++17`:\r\n```bash\r\nobjdump -g bitcoin/depends/x86_64-pc-linux-gnu/lib/libQt5Core.a\r\nGNU C++17 9.3.0 -m64 -mtune=generic -march=x86-64 -g -O1 -Og -std=c++17 -fPIC -fvisibility=hidden -fvisibility-inlines-hidden -fasynchronous-unwind-tables -fstack-protector-strong -fstack-clash-protection -fcf-protection\r\n```",
   "closed_at" : "2020-11-30T04:23:57Z",
   "closed_by" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 12,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20471/comments",
   "created_at" : "2020-11-24T03:45:44Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20471/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/20471",
   "id" : 749316351,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20471/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NTI2MTUyNjYy",
   "number" : 20471,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/20471.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/20471",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/20471.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/20471"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "build: use C++17 in depends",
   "updated_at" : "2020-11-30T04:23:57Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20471",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
