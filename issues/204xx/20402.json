{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "`FormatMoney(CAmount n)` is not being properly defined for `n = std::numeric_limits<CAmount>::min()`. This is due to an invalid integer negation: the negation of `-9223372036854775808` cannot be represented in type `CAmount` (which has a max value of `9223372036854775807`):\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/54f812d9d29893c690ae06b84aaeab128186aa36/src/util/moneystr.cpp#L12-L31\r\n\r\nFWIW `FormatMoney(-9223372036854775808)` returns `--92233720368.-54775808` when compiled with UBSan (LLVM/Clang, `-fsanitize=undefined`).\r\n\r\nContext: https://github.com/bitcoin/bitcoin/pull/20383#discussion_r523250890\r\n\r\nIt would be nice if `FormatMoney(CAmount n)` was properly defined for all `CAmount n` :)\r\n\r\nThese are the \"expectations of least surprise\":\r\n\r\n```\r\nBOOST_CHECK_EQUAL(FormatMoney(std::numeric_limits<CAmount>::max()), \"92233720368.54775807\");       //  9223372036854775807\r\nBOOST_CHECK_EQUAL(FormatMoney(std::numeric_limits<CAmount>::max() - 1), \"92233720368.54775806\");   //  9223372036854775806\r\nBOOST_CHECK_EQUAL(FormatMoney(std::numeric_limits<CAmount>::max() - 2), \"92233720368.54775805\");   //  9223372036854775805\r\nBOOST_CHECK_EQUAL(FormatMoney(std::numeric_limits<CAmount>::max() - 3), \"92233720368.54775804\");   //  9223372036854775804\r\nBOOST_CHECK_EQUAL(FormatMoney(std::numeric_limits<CAmount>::min() + 3), \"-92233720368.54775805\");  // -9223372036854775805\r\nBOOST_CHECK_EQUAL(FormatMoney(std::numeric_limits<CAmount>::min() + 2), \"-92233720368.54775806\");  // -9223372036854775806\r\nBOOST_CHECK_EQUAL(FormatMoney(std::numeric_limits<CAmount>::min() + 1), \"-92233720368.54775807\");  // -9223372036854775807\r\nBOOST_CHECK_EQUAL(FormatMoney(std::numeric_limits<CAmount>::min()), \"-92233720368.54775808\");      // -9223372036854775808\r\n```\r\n\r\nThese assertions are _guaranteed_ to hold for all cases above _except_ for the last one.",
   "closed_at" : "2021-03-03T18:04:59Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 3,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20402/comments",
   "created_at" : "2020-11-16T15:32:17Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20402/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/20402",
   "id" : 743932365,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20402/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU3NDM5MzIzNjU=",
   "number" : 20402,
   "performed_via_github_app" : null,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Invalid integer negation in FormatMoney(CAmount n) and ValueFromAmount (CAmount n) when n = std::numeric_limits<CAmount>::min()",
   "updated_at" : "2021-03-03T18:04:59Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/20402",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
