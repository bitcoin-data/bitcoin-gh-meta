{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "## Problem\r\n\r\n`BOOST_CHECK_THROW` merely checks that some `std::runtime_error` is\r\nthrown, but not which one.\r\n\r\nHere's an example of how this can cause a test to pass when a developer\r\nintroduces a consensus bug. The test for the sigops limit assumes\r\nthat `CreateNewBlock` fails with `bad-blk-sigops`. However it can\r\nalso fail with bad-txns-vout-negative, if a naive developer lowers\r\n`BLOCKSUBSIDY` to `1*COIN`.\r\n\r\n## Solution\r\n\r\n`BOOST_CHECK_EXCEPTION` allows an additional predicate function. This\r\ncommit uses this for all exceptions that are checked for in\r\n`miner_tets.cpp`:\r\n* `bad-blk-sigops`\r\n* `bad-cb-multiple`\r\n* `bad-txns-inputs-missingorspent`\r\n* `block-validation-failed`\r\n\r\nIf the function throws a different error, the test will fail. Although the message produced by Boost is a bit [confusing](http://boost.2283326.n4.nabble.com/Test-BOOST-CHECK-EXCEPTION-error-message-still-vague-tt4683257.html#a4683554), it does show which error was actually thrown. Here's what the above `1*COIN` bug would result in:\r\n\r\n<img width=\"1134\" alt=\"schermafbeelding 2017-09-02 om 23 42 29\" src=\"https://user-images.githubusercontent.com/10217/29998976-815cabce-9038-11e7-9c46-f5f6cfb0ca7d.png\">\r\n \r\n## Other considerations\r\n\r\nA more elegant solution in my opinion would be to subclass `std::runtime_error` for each `INVALID_TRANSACTION` type, but this would involve touching consensus code.\r\n\r\nI put the predicates in `test_bitcoin.h` because I assume they can be reused in other test files. However [serialize_tests.cpp](https://github.com/bitcoin/bitcoin/blob/v0.15.0rc3/src/test/serialize_tests.cpp#L245) also uses `BOOST_CHECK_EXCEPTION` and it defines the predicate in the test file itself.\r\n\r\nInstead of four `IsRejectInvalidReasonX(std::runtime_error const& e)` functions, I'd prefer something reusable like `bool IsRejectInvalidReason(String reason)(std::runtime_error const& e)`, which would be used like `BOOST_CHECK_EXCEPTION(functionThatThrows(), std::runtime_error, IsRejectInvalidReason(\"bad-blk-sigops\")`. I couldn't figure out how to do that in C++.",
   "closed_at" : "2017-12-19T12:06:29Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 18,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11220/comments",
   "created_at" : "2017-09-02T21:47:33Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11220/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/11220",
   "id" : 254837927,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11220/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MTM5MDI3NTM2",
   "number" : 11220,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/11220.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11220",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/11220.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11220"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Check specific validation error in miner tests",
   "updated_at" : "2017-12-19T12:53:07Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11220",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
      "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
      "followers_url" : "https://api.github.com/users/Sjors/followers",
      "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/Sjors",
      "id" : 10217,
      "login" : "Sjors",
      "node_id" : "MDQ6VXNlcjEwMjE3",
      "organizations_url" : "https://api.github.com/users/Sjors/orgs",
      "received_events_url" : "https://api.github.com/users/Sjors/received_events",
      "repos_url" : "https://api.github.com/users/Sjors/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/Sjors"
   }
}
