[
   {
      "author_association" : "MEMBER",
      "body" : "Best reviewed with `?w=1` (https://github.com/bitcoin/bitcoin/pull/11281/files?w=1)",
      "created_at" : "2017-09-07T23:40:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-327957949",
      "id" : 327957949,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-09-07T23:40:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327957949",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonasschnelli Which variables are guarded by `cs_main` and `cs_wallet` in these specific cases?\r\n\r\nI'll double-check against my lock annotations to make sure they are in sync.",
      "created_at" : "2017-09-08T07:26:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-328023287",
      "id" : 328023287,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-09-08T07:26:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/328023287",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Awesome, will review.",
      "created_at" : "2017-09-11T13:35:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-328530818",
      "id" : 328530818,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-09-11T13:35:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/328530818",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138222877"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138222877"
         }
      },
      "author_association" : "OWNER",
      "body" : "What needs cs_wallet here?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-09-12T00:01:47Z",
      "diff_hunk" : "@@ -1529,14 +1529,15 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n  */\n int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n {\n-    AssertLockHeld(cs_main);\n-    AssertLockHeld(cs_wallet);\n-\n     // Find starting block. May be null if nCreateTime is greater than the\n     // highest blockchain timestamp, in which case there is nothing that needs\n     // to be scanned.\n-    CBlockIndex* const startBlock = chainActive.FindEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n-    LogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, startBlock ? chainActive.Height() - startBlock->nHeight + 1 : 0);\n+    CBlockIndex* startBlock = nullptr;\n+    {\n+        LOCK2(cs_main, cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138222877",
      "id" : 138222877,
      "original_commit_id" : "4c1f082b991d872ee7b5507e15ee19eb328ab1d9",
      "original_position" : 14,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 61989731,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138222877",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138223641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138223641"
         }
      },
      "author_association" : "OWNER",
      "body" : "What needs cs_wallet here?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-09-12T00:07:36Z",
      "diff_hunk" : "@@ -1564,13 +1565,18 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        double dProgressStart = 0;\n+        double dProgressTip = 0;\n+        {\n+            LOCK2(cs_main, cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138223641",
      "id" : 138223641,
      "original_commit_id" : "4c1f082b991d872ee7b5507e15ee19eb328ab1d9",
      "original_position" : 35,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 61989731,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138223641",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138224114"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138224114"
         }
      },
      "author_association" : "OWNER",
      "body" : "What needs cs_main here?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-09-12T00:11:31Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK2(cs_main, cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138224114",
      "id" : 138224114,
      "original_commit_id" : "4c1f082b991d872ee7b5507e15ee19eb328ab1d9",
      "original_position" : 47,
      "path" : "src/wallet/wallet.cpp",
      "position" : 87,
      "pull_request_review_id" : 61989731,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138224114",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138224151"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138224151"
         }
      },
      "author_association" : "OWNER",
      "body" : "What needs cs_wallet here?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-09-12T00:11:43Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK2(cs_main, cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK2(cs_main, cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r138224151",
      "id" : 138224151,
      "original_commit_id" : "4c1f082b991d872ee7b5507e15ee19eb328ab1d9",
      "original_position" : 56,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 61989731,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138224151",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated and reduced locks after @sipa's mentioning.",
      "created_at" : "2017-09-16T03:53:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-329943121",
      "id" : 329943121,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-09-16T03:53:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/329943121",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "created_at" : "2017-09-18T15:49:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-330266408",
      "id" : 330266408,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-09-18T15:49:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330266408",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139549239"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139549239"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Only `chainActive.Tip()` needs the lock? So keep old code and:\r\n```cpp\r\nCBlockIndex* tip = nullptr;\r\n{\r\n    LOCK(cs_main);\r\n    tip = chainActive.Tip();\r\n}\r\n\r\ndouble dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\r\ndouble dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\r\n```",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-09-18T21:46:42Z",
      "diff_hunk" : "@@ -1564,13 +1565,18 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        double dProgressStart = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139549239",
      "id" : 139549239,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 32,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 63497928,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139549239",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139549593"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139549593"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "BTW, this patch allows the tip to be update so `dProgressTip` should be inside the loop?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-09-18T21:48:30Z",
      "diff_hunk" : "@@ -1564,13 +1565,18 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        double dProgressStart = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139549593",
      "id" : 139549593,
      "in_reply_to_id" : 139549239,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 32,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 63497928,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139549593",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139829712"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139829712"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What if there's a reorg between iterations?\r\n\r\nDoes anything weird happen if we (for ex): begin scanning, receive a new best block with our tx from p2p, then re-scan here?\r\n\r\nSeems to me that we should take a copy of ChainActive, traverse, compare to progress to chainActive.Tip(), and repeat until they match. Something like (just a quick sketch, probably broken):\r\n```c++\r\nCBlockIndex* pindex = pindexStart;\r\nCChain chain;\r\nwhile (!fAbortRescan) {\r\n    {\r\n        LOCK(cs_main);\r\n        if (pindex == chainActive.Tip()) {\r\n            break;\r\n        }\r\n        chain.SetTip(chainActive.Tip());\r\n    }\r\n    if (pindex) {\r\n        // start where we left off.\r\n        const CBlockIndex* fork = chain.FindFork(pindex);\r\n        if (fork != pindex) {\r\n            // Need to undo the orphans.\r\n        }\r\n        pindex = chain.Next(fork);\r\n    }\r\n    while(!fAbortRescan && pindex) {\r\n        /*\r\n        do stuff\r\n        ...\r\n        pindex = chain.Next(pindex);\r\n        */\r\n    }\r\n    pindex = chain.Tip();\r\n}\r\n```\r\nThat almost entirely avoids locking cs_main, while ensuring that we're never jumping chains.\r\n\r\nIt could also be done with just the pindex and GetAncestor(), to skip the memory overhead of the second chain copy.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-09-19T22:00:18Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139829712",
      "id" : 139829712,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 63816742,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139829712",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sorry for the bad reference Ã¢ÂÂÃ¯Â¸Â ...",
      "created_at" : "2017-09-19T23:54:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-330705883",
      "id" : 330705883,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-09-19T23:54:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330705883",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r140407028"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140407028"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure if this is really a problem. During rescans, IMO it won't hurt to scan an orphaned block nor does it hurt if you do not scan up to the tip in case you have connected new blocks during the time of re-scanning. This, because those new blocks must also have been scanned by the wallet logic (outside of `ScanForWalletTransactions`).",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-09-22T03:44:53Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r140407028",
      "id" : 140407028,
      "in_reply_to_id" : 139829712,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 64476586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140407028",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed @promag's code folding/style issue",
      "created_at" : "2017-09-22T03:49:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-331343028",
      "id" : 331343028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-09-22T03:49:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331343028",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reviewers welcome (to make progress with GUI rescan abort #11200), best reviewed with ?w=1",
      "created_at" : "2017-11-15T20:53:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-344724982",
      "id" : 344724982,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-11-15T20:53:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344724982",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "~~utACK 726fe69~~. There might be a slight overhead to locking for every block, likely only relevant for the first blocks of the chain which have few transactions. In any case this is preferable to the current situation.\r\n\r\n(removed my utACK for now, this does not get reorgs right in case the order in which blocks are scanned matters, which I'm not sure about)",
      "created_at" : "2017-11-16T11:35:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-344897211",
      "id" : 344897211,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-11-16T11:52:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344897211",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r151390218"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151390218"
         }
      },
      "author_association" : "OWNER",
      "body" : "If a reorg happens during rescan, we want to continue rescanning using the current chain, not the outdated one.\r\n\r\n> This, because those new blocks must also have been scanned by the wallet logic (outside of ScanForWalletTransactions).\r\n\r\nIndeed.\r\n... I think it works out like this. Though @theuni does put a good point.\r\n",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-11-16T11:39:30Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r151390218",
      "id" : 151390218,
      "in_reply_to_id" : 139829712,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 77087996,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151390218",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153220818"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153220818"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe break the rescan as soon as possible if the above tip is not in the current chain? Then add here:\r\n```cpp\r\nif (!chainActive.Contains(tip)) break;\r\n```",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-11-27T15:03:26Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153220818",
      "id" : 153220818,
      "in_reply_to_id" : 139829712,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 79194980,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153220818",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "BTW, see question https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139549593.",
      "created_at" : "2017-11-27T15:12:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-347211606",
      "id" : 347211606,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-11-27T15:12:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347211606",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This also allows concurrent rescans correct? It will mess up the progress dialog no?",
      "created_at" : "2017-11-27T15:33:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-347218612",
      "id" : 347218612,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-11-27T15:33:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347218612",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> This also allows concurrent rescans correct? It will mess up the progress dialog no?\r\n\r\nConcurrent rescans on multiple wallets would be nice, multiple concurrent rescans on one wallet would be dangerous or at least counter-productive (so we might want to track that?).\r\nProgress dialog issues can be fixed later.",
      "created_at" : "2017-11-28T08:51:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-347454431",
      "id" : 347454431,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-11-28T09:06:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347454431",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153601338"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153601338"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In case of a reorg, wouldn't `chainActive.Next(pindex);` return a `nullptr` leading to stop the scan, which should be totally fine. During the reorg, the blocks of the new chain must have been scanned by the wallet via ConnectBlock.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-11-28T19:40:48Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153601338",
      "id" : 153601338,
      "in_reply_to_id" : 139829712,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 79631510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153601338",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153603479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153603479"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes that's true when pindex is not in the chain. But if any later block is not in the chain, why keep rescanning?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-11-28T19:48:40Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153603479",
      "id" : 153603479,
      "in_reply_to_id" : 139829712,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 79634026,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153603479",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153608512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153608512"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It should be detected during the next `chainActive.Next(pindex);` which, in case we had a fork between the last `chainActive.Next(pindex);` we would only scan max 1 block... also very unlikely IMO.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-11-28T20:07:02Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153608512",
      "id" : 153608512,
      "in_reply_to_id" : 139829712,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 79639661,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153608512",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153662484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153662484"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Suppose the following:\r\n - `A B C D E F G H I J` - chain to rescan, tip = J\r\n - `(A) B C D E F G H I J` - scanning block A\r\n - `A (B) C D E F G H I J` - scanning block B\r\n - `A (B) C D E F G H K L M` - scanning block B, reorg after H\r\n\r\nShould only rescan to H inclusive? Agree it's an edge case.\r\n\r\nBTW, if the tip changes `dProgressTip` could be updated?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-11-29T00:17:23Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r153662484",
      "id" : 153662484,
      "in_reply_to_id" : 139829712,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 79701730,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/153662484",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased the PR.\r\n\r\n* Added checks to make sure only one rescan per time and per wallet can be executed (with appropriate error responses)\r\n\r\n* Extended the lock reduction to the new `rescanblockchain` call",
      "created_at" : "2017-11-29T20:08:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-347980858",
      "id" : 347980858,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-11-29T20:08:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347980858",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Best reviewed with [w=1](https://github.com/bitcoin/bitcoin/pull/11281/files?w=1).\r\nEasy way to test multiple parallel rescans by adding a sleep within the inner rescan loop.",
      "created_at" : "2017-11-29T20:12:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-347981907",
      "id" : 347981907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-11-29T20:12:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347981907",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154672170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154672170"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "GuessVerificationProcess needs cs_main (probably best to lock cs_main in GuessVerificationProcess).",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-04T15:01:54Z",
      "diff_hunk" : "@@ -1651,13 +1652,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n+        CBlockIndex* tip = nullptr;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+        }\n         double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154672170",
      "id" : 154672170,
      "original_commit_id" : "fbca42a021342580fa8f4de12c55f941ba521ad6",
      "original_position" : 37,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 80868458,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154672170",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154675029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154675029"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "(one line up) ReadBlockFromDisk in CBlockIndex* form requires cs_main.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-04T15:11:32Z",
      "diff_hunk" : "@@ -1669,6 +1674,7 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154675029",
      "id" : 154675029,
      "original_commit_id" : "fbca42a021342580fa8f4de12c55f941ba521ad6",
      "original_position" : 45,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 80868458,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154675029",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154681446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154681446"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yea, I think there is a real issue here. I (believe) it could be fixed by doing the AddToWalletIfInvolvingMe inside a cs_main (which is going to be at least mostly required since ReadBlockFromDisk requires cs_main) with a chainActive.Contains() check before doing the AddToWalletIfInvolvingMe. That should put us back to the original state of anything we add to the wallet is on the main chain and, thus, will either be Disconnected then Connected in the callbacks, only Connected, or not included in a callback at all.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-04T15:32:23Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154681446",
      "id" : 154681446,
      "in_reply_to_id" : 139829712,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 80868458,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154681446",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154683955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154683955"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is very race-y. You could check check this, have another thread call rescan, and then end up with two parallell rescans.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-04T15:40:38Z",
      "diff_hunk" : "@@ -428,6 +432,10 @@ UniValue importpubkey(const JSONRPCRequest& request)\n     if (fRescan && fPruneMode)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n+    if (fRescan && pwallet->IsScanning()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154683955",
      "id" : 154683955,
      "original_commit_id" : "d859779cd012571709ea364ba2480129bea8f399",
      "original_position" : 15,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 80868458,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/154683955",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > This also allows concurrent rescans correct? It will mess up the progress dialog no?\r\n>\r\n> Concurrent rescans on multiple wallets would be nice, multiple concurrent rescans on one wallet would be dangerous or at least counter-productive (so we might want to track that?).\r\n> Progress dialog issues can be fixed later.\r\n\r\nPlease see #11826.",
      "created_at" : "2017-12-05T02:16:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-349173234",
      "id" : 349173234,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-05T02:16:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349173234",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r155161367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155161367"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I still don't fully understand the concerns (please help me).\r\n\r\n* If there is a reorg, all blocks of the new chain will be scanned by the wallet via ConnectBlock (no need to rescan again, we only need to rescan the stuff that doesn't come in via Connect/Disconnect block).\r\n* If we scan blocks that are no longer in the main-chain, and we could find a transaction in those blocks that is relevant to our wallet, so be it. The wallet does display such transactions as unconfirmed... same as we would have a reorg outside of the rescan process.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-06T07:22:05Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r155161367",
      "id" : 155161367,
      "in_reply_to_id" : 139829712,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 81433007,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155161367",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems like this PR still has some races described above that need to be fixed.\r\n\r\nAlso, it is unclear to me what the \"important show-stopper for #11200\" mentioned in the PR description is. The comments in #11200 seems to indicate that there is some existing deadlock that this fixes and #11200 would worsen without this PR. But there's no explanation of how or when the deadlock happens. It's be good to have some clarification about this. (I also asked about it in https://github.com/bitcoin/bitcoin/pull/11200#issuecomment-340865856).",
      "created_at" : "2017-12-06T18:21:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-349729510",
      "id" : 349729510,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-06T18:21:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349729510",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r155326447"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155326447"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Heh, sorry, I didnt fully specify my concern because I thought the above discussion did, but I dont think the above comments are correct. As you point out, I do not believe there is a race where you simply miss transactions. However, there is a race where you may end up marking a transaction as in the wrong block:\r\n\r\nA -> B -> ....\r\n    -> C -> ...\r\n\r\nBoth B and C have the transaction you're interested in.\r\n\r\nYou go to load block B from a rescan, but it has already been reorg'd and the notificatitons for disconnect(B) and connect(C) have already fired. Thus, you have the transaction marked as in block C, which is correct, but then you finish rescanning and mark the transaction as in block B, which now makes you think the transaction has been conflicted and has negative GetDepthInMainChain.\r\n\r\nAs I mentioned, this is most simply fixed by adding a \"LOCK(cs_main); if (!chainActive.Contains(pindex)) break;\" outside the AddToWalletIfInvolvingMe loop.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-06T18:50:33Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r155326447",
      "id" : 155326447,
      "in_reply_to_id" : 139829712,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 81628083,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155326447",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky: #11200 won't currently work because the rescan locks `cs_main` over a longer period. The GUI also tries to lock `cs_main` via graphical updates on the transaction table as well as the balances.... == unresponsiveness (not actually a deadlock) == you won't be able to abort the rescan because the whole GUI is locked.",
      "created_at" : "2017-12-06T20:12:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-349760376",
      "id" : 349760376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-06T20:12:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349760376",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added two commits.\r\n* Addressed the race issue found by @promag and @TheBlueMatt (d7f3836b74b790887793997562216885840df7a2)\r\n* Update the progress max if the tip has changed (as found by @promag, 9b59847ddca46d30404ca574cba32b6de214844f)",
      "created_at" : "2017-12-07T06:50:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-349879125",
      "id" : 349879125,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-07T06:50:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349879125",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this still WIP? I don't see changes or responses for 3 other races: [IsScanning](https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154683955), [GuessVerificationProcess](https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154672170), [ReadBlockFromDisk](https://github.com/bitcoin/bitcoin/pull/11281#discussion_r154675029)",
      "created_at" : "2017-12-07T07:35:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-349886775",
      "id" : 349886775,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-07T07:35:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349886775",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a commit that fixes the remaining missing locks mentioned by @TheBlueMatt, expect the racy `IsScanning()`. Would it make sense to read and set (protected by a internal lock) the scanning flag right after checking (something like `checkAndEventuallySetScanning()`)? Other ideas?",
      "created_at" : "2017-12-07T07:55:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-349890421",
      "id" : 349890421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-07T07:55:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/349890421",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: race: I certainly appreciate the RPC exception before importing in case of an existing scan. It might be nice to get some RAII-like lock on the ability to scan, ie like your suggestion but you create a class instance which gives you the right to rescan instead of having to make sure you set some boolean to false if you decide you don't want to rescan.",
      "created_at" : "2017-12-08T15:43:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-350294897",
      "id" : 350294897,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-08T15:43:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350294897",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added an RAII object to preserve wallet rescan races.",
      "created_at" : "2017-12-08T21:09:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-350372374",
      "id" : 350372374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-08T21:09:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350372374",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It appears test_bitcoin.exe hung. Not sure if PR-related or some other issue, but I'm not aware of any issues with such hangs on master atm?",
      "created_at" : "2017-12-09T18:28:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-350496195",
      "id" : 350496195,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-09T18:28:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350496195",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@TheBlueMatt: where did it hung? Travis seems to be happy?",
      "created_at" : "2017-12-10T06:11:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-350527625",
      "id" : 350527625,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-10T06:11:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/350527625",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and cleaned up commit history.",
      "created_at" : "2017-12-12T19:26:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-351165171",
      "id" : 351165171,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-12T19:26:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351165171",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It may be nice to make a WalletRescanReserver a required argument to ScanForWalletTransactions/RescanFromTime to enforce correctness.",
      "created_at" : "2017-12-12T20:17:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-351181137",
      "id" : 351181137,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-12T20:17:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351181137",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156484165"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156484165"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This check needs to be inside a LOCK2(cs_main, cs_wallet) in the same block as AddToWalletIfInvolvingMe.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-12T20:18:59Z",
      "diff_hunk" : "@@ -1703,6 +1703,7 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             {\n                 LOCK(cs_main);\n                 pindex = chainActive.Next(pindex);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156484165",
      "id" : 156484165,
      "original_commit_id" : "8f0e976df202a81f2ba37b6276f75e279c3e65ed",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82968766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156484165",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156518016"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156518016"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-12T22:45:12Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK(cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156518016",
      "id" : 156518016,
      "in_reply_to_id" : 139829712,
      "original_commit_id" : "1d367effa8e7a19303ae46a6b871084cbaaf5a0a",
      "original_position" : 57,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 83009402,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156518016",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Followed @TheBlueMatt advice and made the `WalletRescanReserver` an argument of `ScanForWalletTransactions` and `RescanFromTime` to ensure on code level that the wallet rescan is reserved before scanning.",
      "created_at" : "2017-12-12T23:15:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-351226949",
      "id" : 351226949,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-12T23:15:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351226949",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "See comment github is hiding at https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156484165. Also, could you squash \"Make sure we rescan only blocks in the main chain\" into the first commit? Otherwise the first commit is \"wrong\", which is annoying in review.",
      "created_at" : "2017-12-13T17:05:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-351456105",
      "id" : 351456105,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-13T17:05:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351456105",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156776358"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156776358"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-13T20:41:29Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK2(cs_main, cs_wallet);\n                 for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n                     AddToWalletIfInvolvingMe(block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n                 }\n             } else {\n                 ret = pindex;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK2(cs_main, cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156776358",
      "id" : 156776358,
      "in_reply_to_id" : 138224151,
      "original_commit_id" : "4c1f082b991d872ee7b5507e15ee19eb328ab1d9",
      "original_position" : 56,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83310456,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156776358",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156776403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156776403"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-13T20:41:39Z",
      "diff_hunk" : "@@ -1703,6 +1703,7 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             {\n                 LOCK(cs_main);\n                 pindex = chainActive.Next(pindex);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156776403",
      "id" : 156776403,
      "in_reply_to_id" : 156484165,
      "original_commit_id" : "8f0e976df202a81f2ba37b6276f75e279c3e65ed",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83310507,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156776403",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a commit ff54709 to allow to call `ReadBlockFromDisk()` without holding `cs_main` (push the lock down for `CDiskBlockPos::GetBlockPos()`).",
      "created_at" : "2017-12-13T21:08:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-351525517",
      "id" : 351525517,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-13T21:08:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351525517",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156808534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156808534"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This line is a noop - chainActive.Next() is never going to return something non-nullptr that isn't on the best chain.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-13T22:47:32Z",
      "diff_hunk" : "@@ -1684,7 +1697,15 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156808534",
      "id" : 156808534,
      "original_commit_id" : "ff547097b369fbd3aceb7216d6325df194af4a97",
      "original_position" : 90,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83346623,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156808534",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156810727"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156810727"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "There is a weird case here that I think should be documented - something in the description of ScanForWalletTransactions should mention that, in order to ensure scan is \"successful\", pindex *must* have been/be on the main chain at some point after the addition of any keys which we want to rescan for.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-13T22:58:12Z",
      "diff_hunk" : "@@ -1645,36 +1646,48 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                LOCK(cs_main);\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            }\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n+                LOCK(cs_main);\n                 LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, GuessVerificationProgress(chainParams.TxData(), pindex));\n             }\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK2(cs_main, cs_wallet);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156810727",
      "id" : 156810727,
      "original_commit_id" : "ff547097b369fbd3aceb7216d6325df194af4a97",
      "original_position" : 78,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83346623,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156810727",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156811137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156811137"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think you meant to put a LOCK(cs_main) at the top of this scope?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-13T23:00:07Z",
      "diff_hunk" : "@@ -3376,30 +3376,39 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n             );\n     }\n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    WalletRescanReserver reserver(pwallet);\n+    if (!reserver.reserve()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n+    }\n \n-    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStart = nullptr;\n     CBlockIndex *pindexStop = nullptr;\n-    if (!request.params[0].isNull()) {\n-        pindexStart = chainActive[request.params[0].get_int()];\n-        if (!pindexStart) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n-        }\n-    }\n+    CBlockIndex *pChainTip = nullptr;\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156811137",
      "id" : 156811137,
      "original_commit_id" : "ff547097b369fbd3aceb7216d6325df194af4a97",
      "original_position" : 20,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 20,
      "pull_request_review_id" : 83346623,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156811137",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156811507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156811507"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "err, didnt you mean to set tip to chainActive.Tip() first?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-13T23:02:00Z",
      "diff_hunk" : "@@ -1684,7 +1697,15 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);\n+                if (pindex && !chainActive.Contains(pindex)) break;\n+                if (tip != chainActive.Tip()) {\n+                    // in case the tip has changed, update progress max\n+                    dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156811507",
      "id" : 156811507,
      "original_commit_id" : "ff547097b369fbd3aceb7216d6325df194af4a97",
      "original_position" : 93,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83346623,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156811507",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156814899"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156814899"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops. This is a rebase issue, ... removing this line now.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-13T23:20:51Z",
      "diff_hunk" : "@@ -1684,7 +1697,15 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156814899",
      "id" : 156814899,
      "in_reply_to_id" : 156808534,
      "original_commit_id" : "ff547097b369fbd3aceb7216d6325df194af4a97",
      "original_position" : 90,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83354105,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156814899",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156818774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156818774"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Argh. Thanks. Fixed.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-13T23:44:00Z",
      "diff_hunk" : "@@ -1684,7 +1697,15 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);\n+                if (pindex && !chainActive.Contains(pindex)) break;\n+                if (tip != chainActive.Tip()) {\n+                    // in case the tip has changed, update progress max\n+                    dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156818774",
      "id" : 156818774,
      "in_reply_to_id" : 156811507,
      "original_commit_id" : "ff547097b369fbd3aceb7216d6325df194af4a97",
      "original_position" : 93,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83358521,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156818774",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156818904"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156818904"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh. Indeed! Added. Fixed.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-13T23:44:42Z",
      "diff_hunk" : "@@ -3376,30 +3376,39 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n             );\n     }\n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    WalletRescanReserver reserver(pwallet);\n+    if (!reserver.reserve()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n+    }\n \n-    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStart = nullptr;\n     CBlockIndex *pindexStop = nullptr;\n-    if (!request.params[0].isNull()) {\n-        pindexStart = chainActive[request.params[0].get_int()];\n-        if (!pindexStart) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n-        }\n-    }\n+    CBlockIndex *pChainTip = nullptr;\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156818904",
      "id" : 156818904,
      "in_reply_to_id" : 156811137,
      "original_commit_id" : "ff547097b369fbd3aceb7216d6325df194af4a97",
      "original_position" : 20,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 20,
      "pull_request_review_id" : 83358635,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156818904",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156819018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156819018"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes. That case is a bit wired. We should probably return a custom state object instead a single CBlockIndex in the long run.\r\nMentioned that behaviour now in the `ScanForWalletTransactions` comment.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-13T23:45:33Z",
      "diff_hunk" : "@@ -1645,36 +1646,48 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                LOCK(cs_main);\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            }\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n+                LOCK(cs_main);\n                 LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, GuessVerificationProgress(chainParams.TxData(), pindex));\n             }\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK2(cs_main, cs_wallet);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156819018",
      "id" : 156819018,
      "in_reply_to_id" : 156810727,
      "original_commit_id" : "ff547097b369fbd3aceb7216d6325df194af4a97",
      "original_position" : 78,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83358777,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156819018",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156984022"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156984022"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I dont think that fully captures the requirement here. Its actually rather loose, y ou just need to make sure pindexStop (and pindexStart) are on the main chain *after* to the addition of any new keys you want to detect transactions for. What is returned actually doesnt matter because if pindexStart and pindexStop were on the main chain at some point when all the neccessary keys were in the wallet, any missed blocks during rescan were also caught in the validationinterface callbacks.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-14T15:59:08Z",
      "diff_hunk" : "@@ -1644,37 +1645,52 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * An additional check if the returned CBlockIndex* is/was on the main chain",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156984022",
      "id" : 156984022,
      "original_commit_id" : "61315d1455063641cf998abcd30145a35367e3b1",
      "original_position" : 33,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83551405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156984022",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157135059"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157135059"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated the comment.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-15T07:06:40Z",
      "diff_hunk" : "@@ -1644,37 +1645,52 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * An additional check if the returned CBlockIndex* is/was on the main chain",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157135059",
      "id" : 157135059,
      "in_reply_to_id" : 156984022,
      "original_commit_id" : "61315d1455063641cf998abcd30145a35367e3b1",
      "original_position" : 33,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83729413,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157135059",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157283067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157283067"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The nStatus check two lines down still needs cs_main.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-15T19:37:10Z",
      "diff_hunk" : "@@ -3376,30 +3376,40 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n             );\n     }\n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    WalletRescanReserver reserver(pwallet);\n+    if (!reserver.reserve()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n+    }\n \n-    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStart = nullptr;\n     CBlockIndex *pindexStop = nullptr;\n-    if (!request.params[0].isNull()) {\n-        pindexStart = chainActive[request.params[0].get_int()];\n-        if (!pindexStart) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n-        }\n-    }\n+    CBlockIndex *pChainTip = nullptr;\n+    {\n+        LOCK(cs_main);\n+        pindexStart = chainActive.Genesis();\n+        pChainTip = chainActive.Tip();\n \n-    if (!request.params[1].isNull()) {\n-        pindexStop = chainActive[request.params[1].get_int()];\n-        if (!pindexStop) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        if (!request.params[0].isNull()) {\n+            pindexStart = chainActive[request.params[0].get_int()];\n+            if (!pindexStart) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+            }\n         }\n-        else if (pindexStop->nHeight < pindexStart->nHeight) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater then start_height\");\n+\n+        if (!request.params[1].isNull()) {\n+            pindexStop = chainActive[request.params[1].get_int()];\n+            if (!pindexStop) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+            }\n+            else if (pindexStop->nHeight < pindexStart->nHeight) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater then start_height\");\n+            }\n         }\n     }\n \n     // We can't rescan beyond non-pruned blocks, stop and throw an error\n     if (fPruneMode) {\n-        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        CBlockIndex *block = pindexStop ? pindexStop : pChainTip;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157283067",
      "id" : 157283067,
      "original_commit_id" : "eba53080666402bba2efe4a430bde2b824edef9d",
      "original_position" : 52,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83905785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157283067",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157300953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157300953"
         }
      },
      "author_association" : "OWNER",
      "body" : "Releasing cs_wallet here means another RPC could occur in between which observes the key being present, but not the relevant transactions. Is that a concern?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-15T21:18:32Z",
      "diff_hunk" : "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157300953",
      "id" : 157300953,
      "original_commit_id" : "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
      "original_position" : 89,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 83928058,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157300953",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157302011"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157302011"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I wouldnt think so directly. What may be of larger concern may be that you could get a bogus balance due to having found old transactions but not newer ones. Its probably still fine, but we should note it in the help doc for the rescanning functions. Alternatively we could block other wallet RPC calls until rescan finishes.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-15T21:23:07Z",
      "diff_hunk" : "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157302011",
      "id" : 157302011,
      "in_reply_to_id" : 157300953,
      "original_commit_id" : "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
      "original_position" : 89,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 83929304,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157302011",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157308303"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157308303"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Possible solutions:\r\n1.) User must take care: report the rescan status in `getwalletinfo()`\r\n2.) Block relevant RPC calls during an active rescan...\r\n\r\nI think 1) is more flexible but my introduce some pitfalls...",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-15T22:00:23Z",
      "diff_hunk" : "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157308303",
      "id" : 157308303,
      "in_reply_to_id" : 157300953,
      "original_commit_id" : "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
      "original_position" : 89,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 83936860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157308303",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157308663"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157308663"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right!\r\nFixed by adding a `cs_main` lock for this block (only occurs for pruned peers).",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-15T22:02:27Z",
      "diff_hunk" : "@@ -3376,30 +3376,40 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n             );\n     }\n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    WalletRescanReserver reserver(pwallet);\n+    if (!reserver.reserve()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n+    }\n \n-    CBlockIndex *pindexStart = chainActive.Genesis();\n+    CBlockIndex *pindexStart = nullptr;\n     CBlockIndex *pindexStop = nullptr;\n-    if (!request.params[0].isNull()) {\n-        pindexStart = chainActive[request.params[0].get_int()];\n-        if (!pindexStart) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n-        }\n-    }\n+    CBlockIndex *pChainTip = nullptr;\n+    {\n+        LOCK(cs_main);\n+        pindexStart = chainActive.Genesis();\n+        pChainTip = chainActive.Tip();\n \n-    if (!request.params[1].isNull()) {\n-        pindexStop = chainActive[request.params[1].get_int()];\n-        if (!pindexStop) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+        if (!request.params[0].isNull()) {\n+            pindexStart = chainActive[request.params[0].get_int()];\n+            if (!pindexStart) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n+            }\n         }\n-        else if (pindexStop->nHeight < pindexStart->nHeight) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater then start_height\");\n+\n+        if (!request.params[1].isNull()) {\n+            pindexStop = chainActive[request.params[1].get_int()];\n+            if (!pindexStop) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n+            }\n+            else if (pindexStop->nHeight < pindexStart->nHeight) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater then start_height\");\n+            }\n         }\n     }\n \n     // We can't rescan beyond non-pruned blocks, stop and throw an error\n     if (fPruneMode) {\n-        CBlockIndex *block = pindexStop ? pindexStop : chainActive.Tip();\n+        CBlockIndex *block = pindexStop ? pindexStop : pChainTip;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157308663",
      "id" : 157308663,
      "in_reply_to_id" : 157283067,
      "original_commit_id" : "eba53080666402bba2efe4a430bde2b824edef9d",
      "original_position" : 52,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83937262,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157308663",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Sory for that\n\nOn 16 Dec 2017 5:24 am, \"Matt Corallo\" <notifications@github.com> wrote:\n\n> *@TheBlueMatt* commented on this pull request.\n> ------------------------------\n>\n> In src/wallet/rpcdump.cpp\n> <https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157302011>:\n>\n> >          }\n>      }\n> +    if (fRescan) {\n>\n> I wouldnt think so directly. What may be of larger concern may be that you\n> could get a bogus balance due to having found old transactions but not\n> newer ones. Its probably still fine, but we should note it in the help doc\n> for the rescanning functions. Alternatively we could block other wallet RPC\n> calls until rescan finishes.\n>\n> Ã¢ÂÂ\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157302011>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AT0amrJB8ZTspbPKK86FyFNuKI74wYBeks5tAuN3gaJpZM4PQhYL>\n> .\n>\n",
      "created_at" : "2017-12-15T22:05:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-352123819",
      "id" : 352123819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-15T22:05:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352123819",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/20781722?v=4",
         "events_url" : "https://api.github.com/users/heri99/events{/privacy}",
         "followers_url" : "https://api.github.com/users/heri99/followers",
         "following_url" : "https://api.github.com/users/heri99/following{/other_user}",
         "gists_url" : "https://api.github.com/users/heri99/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/heri99",
         "id" : 20781722,
         "login" : "heri99",
         "organizations_url" : "https://api.github.com/users/heri99/orgs",
         "received_events_url" : "https://api.github.com/users/heri99/received_events",
         "repos_url" : "https://api.github.com/users/heri99/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/heri99/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/heri99/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/heri99"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356351"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356351"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, `{` in new line.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-17T02:36:50Z",
      "diff_hunk" : "@@ -1218,4 +1221,31 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+public:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+    explicit WalletRescanReserver(CWalletRef w): m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve() {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356351",
      "id" : 157356351,
      "original_commit_id" : "e56aa6ce6b25becf1005d219b056d34c86347372",
      "original_position" : 22,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 83988701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356351",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356354"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, missing space before `:`.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-17T02:37:06Z",
      "diff_hunk" : "@@ -1218,4 +1221,31 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+public:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+    explicit WalletRescanReserver(CWalletRef w): m_wallet(w), m_could_reserve(false) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356354",
      "id" : 157356354,
      "original_commit_id" : "e56aa6ce6b25becf1005d219b056d34c86347372",
      "original_position" : 20,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 83988701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356354",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356359"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356359"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Make these private?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-17T02:37:27Z",
      "diff_hunk" : "@@ -1218,4 +1221,31 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+public:\n+    CWalletRef m_wallet;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356359",
      "id" : 157356359,
      "original_commit_id" : "e56aa6ce6b25becf1005d219b056d34c86347372",
      "original_position" : 18,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 83988701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356359",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356413"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356413"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why the mutex when `fScanningWallet` is `std::atomic`? Could use `std::atomic<bool>::compare_exchange_strong`?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-17T02:42:46Z",
      "diff_hunk" : "@@ -656,6 +656,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     static std::atomic<bool> fFlushScheduled;\n     std::atomic<bool> fAbortRescan;\n     std::atomic<bool> fScanningWallet;\n+    std::mutex mutexScanning;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157356413",
      "id" : 157356413,
      "original_commit_id" : "e56aa6ce6b25becf1005d219b056d34c86347372",
      "original_position" : 4,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 83988701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157356413",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157903189"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157903189"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes. Maybe. But lets keep this for now.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-19T23:26:54Z",
      "diff_hunk" : "@@ -656,6 +656,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     static std::atomic<bool> fFlushScheduled;\n     std::atomic<bool> fAbortRescan;\n     std::atomic<bool> fScanningWallet;\n+    std::mutex mutexScanning;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157903189",
      "id" : 157903189,
      "in_reply_to_id" : 157356413,
      "original_commit_id" : "e56aa6ce6b25becf1005d219b056d34c86347372",
      "original_position" : 4,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 84624142,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157903189",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fixed @promag's nits",
      "created_at" : "2017-12-19T23:30:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-352918517",
      "id" : 352918517,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-19T23:30:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352918517",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157906537"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157906537"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa that is already possible: `importprivkey rescan=false` followed by `rescanblockchain`.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-19T23:51:23Z",
      "diff_hunk" : "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157906537",
      "id" : 157906537,
      "in_reply_to_id" : 157300953,
      "original_commit_id" : "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
      "original_position" : 89,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 84628059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157906537",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157906752"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157906752"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "chainActive.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-19T23:53:04Z",
      "diff_hunk" : "@@ -1582,13 +1588,17 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n \n             CBlock block;\n             if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                LOCK2(cs_main, cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157906752",
      "id" : 157906752,
      "in_reply_to_id" : 138224114,
      "original_commit_id" : "4c1f082b991d872ee7b5507e15ee19eb328ab1d9",
      "original_position" : 47,
      "path" : "src/wallet/wallet.cpp",
      "position" : 87,
      "pull_request_review_id" : 84628321,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157906752",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Squash *Make sure WalletRescanReserver has successfully reserved the rescan*  into *Add RAII wallet rescan reserver*?",
      "created_at" : "2017-12-20T00:01:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-352923698",
      "id" : 352923698,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-20T00:01:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352923698",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157908101"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157908101"
         }
      },
      "author_association" : "OWNER",
      "body" : "@promag If you sent rescan to false you're taking that risk yourself obviously. My point is that if you do request a rescan, there is a reasonable expectation to not see inconsistent results.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-20T00:03:42Z",
      "diff_hunk" : "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157908101",
      "id" : 157908101,
      "in_reply_to_id" : 157300953,
      "original_commit_id" : "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
      "original_position" : 89,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 84629976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157908101",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157908983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157908983"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah I know, there is also reasonable expectation to have the RPC responsive Ã°ÂÂÂ ",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-20T00:10:06Z",
      "diff_hunk" : "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157908983",
      "id" : 157908983,
      "in_reply_to_id" : 157300953,
      "original_commit_id" : "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
      "original_position" : 89,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 84631077,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157908983",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157909476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157909476"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The same happens in `importmulti`, where the locks are held only when importing the keys.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-20T00:14:03Z",
      "diff_hunk" : "@@ -101,56 +101,59 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n+    bool fRescan = true;\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    EnsureWalletIsUnlocked(pwallet);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    // Whether to perform rescan after import\n-    bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n-        pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n+        CPubKey pubkey = key.GetPubKey();\n+        assert(key.VerifyPubKey(pubkey));\n+        CKeyID vchAddress = pubkey.GetID();\n+        {\n+            pwallet->MarkDirty();\n+            pwallet->SetAddressBook(vchAddress, strLabel, \"receive\");\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+            // Don't throw error in case a key is already there\n+            if (pwallet->HaveKey(vchAddress)) {\n+                return NullUniValue;\n+            }\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwallet->UpdateTimeFirstKey(1);\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);\n \n-        if (fRescan) {\n-            pwallet->RescanFromTime(TIMESTAMP_MIN, true /* update */);\n         }\n     }\n+    if (fRescan) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157909476",
      "id" : 157909476,
      "in_reply_to_id" : 157300953,
      "original_commit_id" : "22510c9a82b4b16f449cca7bf2b2197ad91dae52",
      "original_position" : 89,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 84631656,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157909476",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r158206569"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158206569"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2017-12-21T06:47:10Z",
      "diff_hunk" : "@@ -1218,4 +1221,31 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+public:\n+    CWalletRef m_wallet;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r158206569",
      "id" : 158206569,
      "in_reply_to_id" : 157356359,
      "original_commit_id" : "e56aa6ce6b25becf1005d219b056d34c86347372",
      "original_position" : 18,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 84978600,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158206569",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Needs rebase. Also I believe still needs (at least) doc fixes to address @sipa's comments at https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157300953",
      "created_at" : "2017-12-23T05:11:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-353707688",
      "id" : 353707688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2017-12-23T05:11:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353707688",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and added a commit that adds mentioning of the concern reported by @sipa (https://github.com/bitcoin/bitcoin/pull/11281#discussion_r157300953, other RPC calls may report keys as imported but related transactions are still not there because of the ongoing rescan)",
      "created_at" : "2018-01-05T20:46:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-355660996",
      "id" : 355660996,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2018-01-05T20:46:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355660996",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160389155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160389155"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`return m_could_reserve` is enough? `WalletRescanReserver` is the \"owner.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-09T12:06:31Z",
      "diff_hunk" : "@@ -1218,4 +1222,37 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);\n+        if (m_wallet->fScanningWallet) {\n+            return false;\n+        }\n+        m_wallet->fScanningWallet = true;\n+        m_could_reserve = true;\n+        return true;\n+    }\n+\n+    bool isReserved() const {\n+        return (m_could_reserve && m_wallet->fScanningWallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160389155",
      "id" : 160389155,
      "original_commit_id" : "b2cc7020956cfd36925e4957493cd28d1d6f672e",
      "original_position" : 54,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 87495542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160389155",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160389240"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160389240"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Add `assert(!m_could_reserve);`.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-09T12:06:59Z",
      "diff_hunk" : "@@ -1218,4 +1222,37 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160389240",
      "id" : 160389240,
      "original_commit_id" : "b2cc7020956cfd36925e4957493cd28d1d6f672e",
      "original_position" : 44,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 87495542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160389240",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160391530"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160391530"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Remove, since reserver already set `fScanningWallet` to true.\r\n  ",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-09T12:19:32Z",
      "diff_hunk" : "@@ -1639,37 +1640,53 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160391530",
      "id" : 160391530,
      "original_commit_id" : "b2cc7020956cfd36925e4957493cd28d1d6f672e",
      "original_position" : 53,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 87495542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160391530",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160391901"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160391901"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should also remove `fScanningWallet = false` at the end?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-09T12:21:26Z",
      "diff_hunk" : "@@ -1639,37 +1640,53 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160391901",
      "id" : 160391901,
      "in_reply_to_id" : 160391530,
      "original_commit_id" : "b2cc7020956cfd36925e4957493cd28d1d6f672e",
      "original_position" : 53,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 87495542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160391901",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160392235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160392235"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Add a comment saying this is controlled by `WalletRescanReserver`.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-09T12:23:10Z",
      "diff_hunk" : "@@ -656,6 +657,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     static std::atomic<bool> fFlushScheduled;\n     std::atomic<bool> fAbortRescan;\n     std::atomic<bool> fScanningWallet;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r160392235",
      "id" : 160392235,
      "original_commit_id" : "b2cc7020956cfd36925e4957493cd28d1d6f672e",
      "original_position" : 11,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 87495542,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160392235",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Needs rebase and to address @sipa's note. Personally I think just documenting the case is sufficient.",
      "created_at" : "2018-01-11T17:37:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-357003325",
      "id" : 357003325,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2018-01-11T17:37:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357003325",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased (non trivial).\r\nAnother review would help. Thanks",
      "created_at" : "2018-01-11T19:29:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-357035491",
      "id" : 357035491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2018-01-11T19:29:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357035491",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161081512"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161081512"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This line didn't make it into the new rebase, I believe.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-11T21:33:17Z",
      "diff_hunk" : "@@ -101,61 +102,63 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n-\n-    EnsureWalletIsUnlocked(pwallet);\n-\n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n-\n-    // Whether to perform rescan after import\n+    WalletRescanReserver reserver(pwallet);\n     bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n-\n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-        // We don't know which corresponding address will be used; label them all\n-        for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-            pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+        if (fRescan && !reserver.reserve()) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n         }\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n-        pwallet->LearnAllRelatedScripts(pubkey);\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161081512",
      "id" : 161081512,
      "original_commit_id" : "b5aaefb2d52ff0f81619147e949f5472501c8db9",
      "original_position" : 83,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 83,
      "pull_request_review_id" : 88313390,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161081512",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161105331"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161105331"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh. Yes. Thanks Will fix",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-11T23:30:38Z",
      "diff_hunk" : "@@ -101,61 +102,63 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n-\n-    EnsureWalletIsUnlocked(pwallet);\n-\n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n-\n-    // Whether to perform rescan after import\n+    WalletRescanReserver reserver(pwallet);\n     bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n-\n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-        // We don't know which corresponding address will be used; label them all\n-        for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-            pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+        if (fRescan && !reserver.reserve()) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n         }\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n-        pwallet->LearnAllRelatedScripts(pubkey);\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161105331",
      "id" : 161105331,
      "in_reply_to_id" : 161081512,
      "original_commit_id" : "b5aaefb2d52ff0f81619147e949f5472501c8db9",
      "original_position" : 83,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 83,
      "pull_request_review_id" : 88341191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161105331",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161147840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161147840"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-12T06:21:55Z",
      "diff_hunk" : "@@ -101,61 +102,63 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n-\n-    EnsureWalletIsUnlocked(pwallet);\n-\n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n-\n-    // Whether to perform rescan after import\n+    WalletRescanReserver reserver(pwallet);\n     bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n-\n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-        // We don't know which corresponding address will be used; label them all\n-        for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-            pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+        if (fRescan && !reserver.reserve()) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n         }\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n-        pwallet->LearnAllRelatedScripts(pubkey);\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161147840",
      "id" : 161147840,
      "in_reply_to_id" : 161081512,
      "original_commit_id" : "b5aaefb2d52ff0f81619147e949f5472501c8db9",
      "original_position" : 83,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 83,
      "pull_request_review_id" : 88388297,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161147840",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161406332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406332"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Why'd you move it up in the function instead of keeping its position?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-14T18:45:29Z",
      "diff_hunk" : "@@ -101,61 +102,63 @@ UniValue importprivkey(const JSONRPCRequest& request)\n         );\n \n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n-\n-    EnsureWalletIsUnlocked(pwallet);\n-\n-    std::string strSecret = request.params[0].get_str();\n-    std::string strLabel = \"\";\n-    if (!request.params[1].isNull())\n-        strLabel = request.params[1].get_str();\n-\n-    // Whether to perform rescan after import\n+    WalletRescanReserver reserver(pwallet);\n     bool fRescan = true;\n-    if (!request.params[2].isNull())\n-        fRescan = request.params[2].get_bool();\n-\n-    if (fRescan && fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+    {\n+        LOCK2(cs_main, pwallet->cs_wallet);\n \n-    CBitcoinSecret vchSecret;\n-    bool fGood = vchSecret.SetString(strSecret);\n+        EnsureWalletIsUnlocked(pwallet);\n \n-    if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n+        std::string strSecret = request.params[0].get_str();\n+        std::string strLabel = \"\";\n+        if (!request.params[1].isNull())\n+            strLabel = request.params[1].get_str();\n \n-    CKey key = vchSecret.GetKey();\n-    if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n+        // Whether to perform rescan after import\n+        if (!request.params[2].isNull())\n+            fRescan = request.params[2].get_bool();\n \n-    CPubKey pubkey = key.GetPubKey();\n-    assert(key.VerifyPubKey(pubkey));\n-    CKeyID vchAddress = pubkey.GetID();\n-    {\n-        pwallet->MarkDirty();\n+        if (fRescan && fPruneMode)\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n \n-        // We don't know which corresponding address will be used; label them all\n-        for (const auto& dest : GetAllDestinationsForKey(pubkey)) {\n-            pwallet->SetAddressBook(dest, strLabel, \"receive\");\n+        if (fRescan && !reserver.reserve()) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n         }\n \n-        // Don't throw error in case a key is already there\n-        if (pwallet->HaveKey(vchAddress)) {\n-            return NullUniValue;\n-        }\n+        CBitcoinSecret vchSecret;\n+        bool fGood = vchSecret.SetString(strSecret);\n \n-        pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+        if (!fGood) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key encoding\");\n \n-        if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-        }\n-        pwallet->LearnAllRelatedScripts(pubkey);\n+        CKey key = vchSecret.GetKey();\n+        if (!key.IsValid()) throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Private key outside allowed range\");\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwallet->UpdateTimeFirstKey(1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161406332",
      "id" : 161406332,
      "in_reply_to_id" : 161081512,
      "original_commit_id" : "b5aaefb2d52ff0f81619147e949f5472501c8db9",
      "original_position" : 83,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 83,
      "pull_request_review_id" : 88690948,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406332",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161406849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406849"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: why scope this? There's no lock to scope, could you not just leave this as-is and only change the chainActive.Tip() call?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-14T19:05:29Z",
      "diff_hunk" : "@@ -3430,21 +3440,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n     }\n \n-    CBlockIndex *stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n-    if (!stopBlock) {\n-        if (pwallet->IsAbortingRescan()) {\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+    CBlockIndex *stopBlock = nullptr;\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161406849",
      "id" : 161406849,
      "original_commit_id" : "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
      "original_position" : 65,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 88691465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406849",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161406956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406956"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not changed in this PR, but it may be nice (here or in a follow-up before we start showing rescan as a progress bar in more places) to not use the tip here and instead use pindexStop. It makes sense to always give progress towards tip if there are (potentially) API clients which are calling with a stop a ways back from our tip.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-14T19:10:44Z",
      "diff_hunk" : "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161406956",
      "id" : 161406956,
      "original_commit_id" : "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : 65,
      "pull_request_review_id" : 88691465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161406956",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161407018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161407018"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Same goes for here - while this check makes the behavior not change, I'm not sure the current behavior is exactly optimal...we scan until pindexStop, *not* chainActive.Tip().",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-14T19:13:52Z",
      "diff_hunk" : "@@ -1683,7 +1704,15 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);\n+                if (tip != chainActive.Tip()) {\n+                    tip = chainActive.Tip();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161407018",
      "id" : 161407018,
      "original_commit_id" : "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
      "original_position" : 87,
      "path" : "src/wallet/wallet.cpp",
      "position" : 106,
      "pull_request_review_id" : 88691465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161407018",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161407220"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161407220"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You should probably add a \", leading to temporarily incorrect/bogus balances and unspent outputs until rescan completes\" to the warning message.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-14T19:22:34Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ UniValue importprivkey(const JSONRPCRequest& request)\n             \"1. \\\"privkey\\\"          (string, required) The private key (see dumpprivkey)\\n\"\n             \"2. \\\"label\\\"            (string, optional, default=\\\"\\\") An optional label\\n\"\n             \"3. rescan               (boolean, optional, default=true) Rescan the wallet for transactions\\n\"\n-            \"\\nNote: This call can take minutes to complete if rescan is true.\\n\"\n+            \"\\nNote: This call can take minutes to complete if rescan is true, during that time, other rpc calls\\n\"\n+            \"may report that the imported key exists but related transactions are still missing.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161407220",
      "id" : 161407220,
      "original_commit_id" : "0dad810adeb3bbb6a60b722240ee2b90136e8384",
      "original_position" : 6,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 88691465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161407220",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161602498"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161602498"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right... fixing.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-15T19:46:02Z",
      "diff_hunk" : "@@ -3430,21 +3440,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n     }\n \n-    CBlockIndex *stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n-    if (!stopBlock) {\n-        if (pwallet->IsAbortingRescan()) {\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+    CBlockIndex *stopBlock = nullptr;\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161602498",
      "id" : 161602498,
      "in_reply_to_id" : 161406849,
      "original_commit_id" : "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
      "original_position" : 65,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 88918188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161602498",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161602585"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161602585"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Lets leave this open for a possible followup PR (out of scope here)",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-15T19:46:27Z",
      "diff_hunk" : "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161602585",
      "id" : 161602585,
      "in_reply_to_id" : 161406956,
      "original_commit_id" : "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : 65,
      "pull_request_review_id" : 88918284,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161602585",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161604900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161604900"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed by adding @TheBlueMatt's proposed sentence-part.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-15T19:58:35Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ UniValue importprivkey(const JSONRPCRequest& request)\n             \"1. \\\"privkey\\\"          (string, required) The private key (see dumpprivkey)\\n\"\n             \"2. \\\"label\\\"            (string, optional, default=\\\"\\\") An optional label\\n\"\n             \"3. rescan               (boolean, optional, default=true) Rescan the wallet for transactions\\n\"\n-            \"\\nNote: This call can take minutes to complete if rescan is true.\\n\"\n+            \"\\nNote: This call can take minutes to complete if rescan is true, during that time, other rpc calls\\n\"\n+            \"may report that the imported key exists but related transactions are still missing.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161604900",
      "id" : 161604900,
      "in_reply_to_id" : 161407220,
      "original_commit_id" : "0dad810adeb3bbb6a60b722240ee2b90136e8384",
      "original_position" : 6,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 88920866,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161604900",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161605450"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605450"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's better for future changes to keep the check here... don't hurt but may protect from a future mistake.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-15T20:02:06Z",
      "diff_hunk" : "@@ -1218,4 +1222,37 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);\n+        if (m_wallet->fScanningWallet) {\n+            return false;\n+        }\n+        m_wallet->fScanningWallet = true;\n+        m_could_reserve = true;\n+        return true;\n+    }\n+\n+    bool isReserved() const {\n+        return (m_could_reserve && m_wallet->fScanningWallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161605450",
      "id" : 161605450,
      "in_reply_to_id" : 160389155,
      "original_commit_id" : "b2cc7020956cfd36925e4957493cd28d1d6f672e",
      "original_position" : 54,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 88921536,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605450",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161605453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605453"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-15T20:02:09Z",
      "diff_hunk" : "@@ -1218,4 +1222,37 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161605453",
      "id" : 161605453,
      "in_reply_to_id" : 160389240,
      "original_commit_id" : "b2cc7020956cfd36925e4957493cd28d1d6f672e",
      "original_position" : 44,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 88921541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605453",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161605590"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605590"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's not really controlled by `WalletRescanReserver`. This was added before and `ScanForWalletTransactions` sets it to `true`.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-15T20:02:56Z",
      "diff_hunk" : "@@ -656,6 +657,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     static std::atomic<bool> fFlushScheduled;\n     std::atomic<bool> fAbortRescan;\n     std::atomic<bool> fScanningWallet;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161605590",
      "id" : 161605590,
      "in_reply_to_id" : 160392235,
      "original_commit_id" : "b2cc7020956cfd36925e4957493cd28d1d6f672e",
      "original_position" : 11,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 88921691,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161605590",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161606282"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161606282"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Your right,.. removed the unnecessary scope.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-15T20:07:13Z",
      "diff_hunk" : "@@ -3430,21 +3440,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n     }\n \n-    CBlockIndex *stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, true);\n-    if (!stopBlock) {\n-        if (pwallet->IsAbortingRescan()) {\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n+    CBlockIndex *stopBlock = nullptr;\n+    {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161606282",
      "id" : 161606282,
      "in_reply_to_id" : 161406849,
      "original_commit_id" : "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
      "original_position" : 65,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 88922469,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161606282",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161606416"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161606416"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah. I see your point. Removed those sets and mentioned that `fScanningWallet` is controlled by `WalletRescanReserver`.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-15T20:07:58Z",
      "diff_hunk" : "@@ -1639,37 +1640,53 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r161606416",
      "id" : 161606416,
      "in_reply_to_id" : 160391530,
      "original_commit_id" : "b2cc7020956cfd36925e4957493cd28d1d6f672e",
      "original_position" : 53,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 88922628,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/161606416",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Not sure what exactly to test here, but at least I can confirm `bitcoin-cli abortrescan` still works and there's no noticeable difference in QT (I assume that's good).",
      "created_at" : "2018-01-19T16:08:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-359010967",
      "id" : 359010967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2018-01-19T16:08:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/359010967",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163061186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163061186"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Avoid permanent cs_main\"\r\n\r\nStrange that this line is changing while the line above isn't. Seems impossible for pindexStart or stopBlock to be null, and odd to be adding a check now only for stopBlock.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-22T20:37:47Z",
      "diff_hunk" : "@@ -3436,15 +3446,14 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n             throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n         }\n         // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n-        stopBlock = pindexStop ? pindexStop : chainActive.Tip();\n+        stopBlock = pindexStop ? pindexStop : pChainTip;\n     }\n     else {\n         throw JSONRPCError(RPC_MISC_ERROR, \"Rescan failed. Potentially corrupted data files.\");\n     }\n-\n     UniValue response(UniValue::VOBJ);\n     response.pushKV(\"start_height\", pindexStart->nHeight);\n-    response.pushKV(\"stop_height\", stopBlock->nHeight);\n+    response.pushKV(\"stop_height\", stopBlock ? stopBlock->nHeight : 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163061186",
      "id" : 163061186,
      "original_commit_id" : "48a57eba3447f79672b2c12f1605b3a10becff33",
      "original_position" : 70,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 90617498,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163061186",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163061343"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163061343"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Avoid permanent cs_main\"\r\n\r\nCould this now assert lock not held, instead of not asserting at all?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-22T20:38:31Z",
      "diff_hunk" : "@@ -1614,14 +1614,15 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n  */\n int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n {\n-    AssertLockHeld(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163061343",
      "id" : 163061343,
      "original_commit_id" : "48a57eba3447f79672b2c12f1605b3a10becff33",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 90617498,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163061343",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163063324"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163063324"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Avoid permanent cs_main\"\r\n\r\nI guess this sentence is added in response to: https://github.com/bitcoin/bitcoin/pull/11281#discussion_r156810727, but I don't understand what it is saying. Since the lock is released, how is the caller supposed to \"make sure\" pindexStop is on the main chain when it may not be? Also, I think part of the comment \"after to the addition of any new keys you want to detect transactions for\" should be be removed, it doesn't seem to be adding any information, and not every caller is even adding keys (e.g. bestblock startup code).\r\n\r\nProbably this should just say that the rescan will abort if there is a reorg and scanning proceeded past the fork point on the wrong chain. Alternately, I don't think it would be hard to clean up this behavior by doing something like Cory suggested: https://github.com/bitcoin/bitcoin/pull/11281#discussion_r139829712, but this could be saved for another PR.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-22T20:47:55Z",
      "diff_hunk" : "@@ -1643,6 +1644,10 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163063324",
      "id" : 163063324,
      "original_commit_id" : "48a57eba3447f79672b2c12f1605b3a10becff33",
      "original_position" : 28,
      "path" : "src/wallet/wallet.cpp",
      "position" : 35,
      "pull_request_review_id" : 90617498,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163063324",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163065916"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163065916"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Avoid permanent cs_main\"\r\n\r\nSeems like cs_main only needs to be held for GuessVerificationProgress but not ShowProgress? Might be good to reduce lock scope more, or have comment if it can't be reduced.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-22T20:57:33Z",
      "diff_hunk" : "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163065916",
      "id" : 163065916,
      "original_commit_id" : "48a57eba3447f79672b2c12f1605b3a10becff33",
      "original_position" : 56,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 90617498,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163065916",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163070403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163070403"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Avoid permanent cs_main\"\r\n\r\nBecause of the break here, the \"Returns null if scan was successful\" documentation is no longer correct. Would suggest changing so it's still easily possible to distinguish success from failure:\r\n\r\n```c++\r\nif (pindex && !chainActive.Contains(pindex)) {\r\n    ret = pIndex;\r\n    break;\r\n}\r\n \r\n```\r\n\r\nAlso, the reason for this check is obscure enough (https://github.com/bitcoin/bitcoin/pull/11281#discussion_r155326447) that it I think it deserves some kind of comment. I would suggest something like \"Abort scan if current block is no longer active, to prevent marking transactions as coming from the wrong block.\"\r\n",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-22T21:15:56Z",
      "diff_hunk" : "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                LOCK(cs_main);\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            }\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n+                LOCK(cs_main);\n                 LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, GuessVerificationProgress(chainParams.TxData(), pindex));\n             }\n \n+            bool readRet = false;\n             CBlock block;\n-            if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+            {\n+                LOCK(cs_main);\n+                readRet = ReadBlockFromDisk(block, pindex, Params().GetConsensus());\n+            }\n+            if (readRet) {\n+                LOCK2(cs_main, cs_wallet);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163070403",
      "id" : 163070403,
      "original_commit_id" : "48a57eba3447f79672b2c12f1605b3a10becff33",
      "original_position" : 74,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 90617498,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163070403",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163078419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163078419"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Make sure WalletRescanReserver has successfully reserved\".\r\n\r\nAlternative could be to just `return m_could_reserve` and assert `!m_could_reserve || fScanningWallet`, so if there is a future mistake, it can be detected instead of papered over.\r\n\r\nAlso formatting here is inconsistent, opening brace for function goes on new line.\r\n\r\n",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-22T21:48:11Z",
      "diff_hunk" : "@@ -1218,4 +1222,37 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const ContainerType &coins\n     return true;\n }\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);\n+        if (m_wallet->fScanningWallet) {\n+            return false;\n+        }\n+        m_wallet->fScanningWallet = true;\n+        m_could_reserve = true;\n+        return true;\n+    }\n+\n+    bool isReserved() const {\n+        return (m_could_reserve && m_wallet->fScanningWallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163078419",
      "id" : 163078419,
      "in_reply_to_id" : 160389155,
      "original_commit_id" : "b2cc7020956cfd36925e4957493cd28d1d6f672e",
      "original_position" : 54,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 90617498,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163078419",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163461397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163461397"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think we should enforce *not* locking cs_main at this point.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-24T06:17:48Z",
      "diff_hunk" : "@@ -1614,14 +1614,15 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n  */\n int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n {\n-    AssertLockHeld(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163461397",
      "id" : 163461397,
      "in_reply_to_id" : 163061343,
      "original_commit_id" : "48a57eba3447f79672b2c12f1605b3a10becff33",
      "original_position" : 4,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 91073738,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163461397",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462196"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462196"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes. Your right. Fixed (removed the extra nullptr check).",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-24T06:25:23Z",
      "diff_hunk" : "@@ -3436,15 +3446,14 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n             throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n         }\n         // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n-        stopBlock = pindexStop ? pindexStop : chainActive.Tip();\n+        stopBlock = pindexStop ? pindexStop : pChainTip;\n     }\n     else {\n         throw JSONRPCError(RPC_MISC_ERROR, \"Rescan failed. Potentially corrupted data files.\");\n     }\n-\n     UniValue response(UniValue::VOBJ);\n     response.pushKV(\"start_height\", pindexStart->nHeight);\n-    response.pushKV(\"stop_height\", stopBlock->nHeight);\n+    response.pushKV(\"stop_height\", stopBlock ? stopBlock->nHeight : 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462196",
      "id" : 163462196,
      "in_reply_to_id" : 163061186,
      "original_commit_id" : "48a57eba3447f79672b2c12f1605b3a10becff33",
      "original_position" : 70,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 91074627,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:25:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462196",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462299"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I keep that comment for now and leave it open for another PR. The comment was directly proposed (word by word) by @TheBlueMatt.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-24T06:26:08Z",
      "diff_hunk" : "@@ -1643,6 +1644,10 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462299",
      "id" : 163462299,
      "in_reply_to_id" : 163063324,
      "original_commit_id" : "48a57eba3447f79672b2c12f1605b3a10becff33",
      "original_position" : 28,
      "path" : "src/wallet/wallet.cpp",
      "position" : 35,
      "pull_request_review_id" : 91074731,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:26:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462299",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462322"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462322"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good pont. Fixed.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-24T06:26:18Z",
      "diff_hunk" : "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462322",
      "id" : 163462322,
      "in_reply_to_id" : 163065916,
      "original_commit_id" : "48a57eba3447f79672b2c12f1605b3a10becff33",
      "original_position" : 56,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 91074753,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:26:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462322",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462541"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462541"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice catch! Thanks. Fixed.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-24T06:28:26Z",
      "diff_hunk" : "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                LOCK(cs_main);\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            }\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n+                LOCK(cs_main);\n                 LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, GuessVerificationProgress(chainParams.TxData(), pindex));\n             }\n \n+            bool readRet = false;\n             CBlock block;\n-            if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+            {\n+                LOCK(cs_main);\n+                readRet = ReadBlockFromDisk(block, pindex, Params().GetConsensus());\n+            }\n+            if (readRet) {\n+                LOCK2(cs_main, cs_wallet);\n+                if (pindex && !chainActive.Contains(pindex)) break;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163462541",
      "id" : 163462541,
      "in_reply_to_id" : 163070403,
      "original_commit_id" : "48a57eba3447f79672b2c12f1605b3a10becff33",
      "original_position" : 74,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 91075014,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T06:28:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163462541",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163494846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163494846"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Lock inside `if`.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-24T09:38:26Z",
      "diff_hunk" : "@@ -1263,4 +1267,39 @@ CTxDestination GetDestinationForKey(const CPubKey& key, OutputType);\n /** Get all destinations (potentially) supported by the wallet for the given key. */\n std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key);\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        assert(!m_could_reserve);\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);\n+        if (m_wallet->fScanningWallet) {\n+            return false;\n+        }\n+        m_wallet->fScanningWallet = true;\n+        m_could_reserve = true;\n+        return true;\n+    }\n+\n+    bool isReserved() const\n+    {\n+        return (m_could_reserve && m_wallet->fScanningWallet);\n+    }\n+\n+    ~WalletRescanReserver()\n+    {\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163494846",
      "id" : 163494846,
      "original_commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "original_position" : 63,
      "path" : "src/wallet/wallet.h",
      "position" : 63,
      "pull_request_review_id" : 91113017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T11:06:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163494846",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163496905"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163496905"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just `return m_could_reserve;`?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-24T09:46:50Z",
      "diff_hunk" : "@@ -1263,4 +1267,39 @@ CTxDestination GetDestinationForKey(const CPubKey& key, OutputType);\n /** Get all destinations (potentially) supported by the wallet for the given key. */\n std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key);\n \n+/** RAII object to check and reserve a wallet rescan */\n+class WalletRescanReserver\n+{\n+private:\n+    CWalletRef m_wallet;\n+    bool m_could_reserve;\n+public:\n+    explicit WalletRescanReserver(CWalletRef w) : m_wallet(w), m_could_reserve(false) {}\n+\n+    bool reserve()\n+    {\n+        assert(!m_could_reserve);\n+        std::lock_guard<std::mutex> lock(m_wallet->mutexScanning);\n+        if (m_wallet->fScanningWallet) {\n+            return false;\n+        }\n+        m_wallet->fScanningWallet = true;\n+        m_could_reserve = true;\n+        return true;\n+    }\n+\n+    bool isReserved() const\n+    {\n+        return (m_could_reserve && m_wallet->fScanningWallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163496905",
      "id" : 163496905,
      "original_commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "original_position" : 58,
      "path" : "src/wallet/wallet.h",
      "position" : 58,
      "pull_request_review_id" : 91113017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T11:06:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163496905",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163497435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163497435"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Since it's guarded by `mutexScanning`, drop `std::atomic`?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-24T09:48:59Z",
      "diff_hunk" : "@@ -668,7 +669,10 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n private:\n     static std::atomic<bool> fFlushScheduled;\n     std::atomic<bool> fAbortRescan;\n-    std::atomic<bool> fScanningWallet;\n+    std::atomic<bool> fScanningWallet; //controlled by WalletRescanReserver",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163497435",
      "id" : 163497435,
      "original_commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "original_position" : 13,
      "path" : "src/wallet/wallet.h",
      "position" : 13,
      "pull_request_review_id" : 91113017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T11:06:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163497435",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163501235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163501235"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, space `WalletRescanReserver& reserver`.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-24T10:02:51Z",
      "diff_hunk" : "@@ -1643,37 +1644,60 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163501235",
      "id" : 163501235,
      "original_commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "original_position" : 38,
      "path" : "src/wallet/wallet.cpp",
      "position" : 38,
      "pull_request_review_id" : 91113017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T11:06:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163501235",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163503788"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163503788"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Agree with @TheBlueMatt, the *follow the tip thing* could be elsewhere (another PR).\r\n\r\n@TheBlueMatt do you suggest to rescan up to pIndexStop even if at some point a block is no longer in the active chain?",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-24T10:13:28Z",
      "diff_hunk" : "@@ -1656,24 +1661,40 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n         fScanningWallet = true;\n \n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163503788",
      "id" : 163503788,
      "in_reply_to_id" : 161406956,
      "original_commit_id" : "e43105c17a7bc1ee31027722a093fcfbcb8833a9",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : 65,
      "pull_request_review_id" : 91113017,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-24T11:06:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163503788",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Forgot to mention, it is still not possible to abort the rescan at initialisation time, I guess the goal is to not change that.",
      "created_at" : "2018-01-24T11:07:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-360097489",
      "id" : 360097489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2018-01-24T11:07:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360097489",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> Forgot to mention, it is still not possible to abort the rescan at initialisation time, I guess the goal is to not change that.\r\n\r\nI don't think that's a goal here? Let's not extend the scope beyond what is in the OP.\r\n\r\nutACK 7f81250",
      "created_at" : "2018-01-24T11:47:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#issuecomment-360106438",
      "id" : 360106438,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11281",
      "updated_at" : "2018-01-24T11:54:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360106438",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163937257"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163937257"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@jonasschnelli, is this lock necessary? It seems like either this should be removed, or else a lock needs to be added below at line 1721 (https://github.com/bitcoin/bitcoin/pull/11281/files#diff-b2bb174788c7409b671c46ccc86034bdR1721) if cs_main is required to call GuessVerificationProgress.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-25T19:01:52Z",
      "diff_hunk" : "@@ -1643,37 +1644,60 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n-        fScanningWallet = true;\n-\n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n-                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                double gvp = 0;\n+                {\n+                    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163937257",
      "id" : 163937257,
      "original_commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "original_position" : 74,
      "path" : "src/wallet/wallet.cpp",
      "position" : 74,
      "pull_request_review_id" : 91634643,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-25T19:01:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163937257",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163947997"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163947997"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think GVP needs cs_main (@TheBlueMatt?), so, yes, your right, L1721 should also have one... working on a fixup.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-25T19:43:39Z",
      "diff_hunk" : "@@ -1643,37 +1644,60 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n-        fScanningWallet = true;\n-\n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n-                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                double gvp = 0;\n+                {\n+                    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163947997",
      "id" : 163947997,
      "in_reply_to_id" : 163937257,
      "original_commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "original_position" : 74,
      "path" : "src/wallet/wallet.cpp",
      "position" : 74,
      "pull_request_review_id" : 91647472,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-25T19:43:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163947997",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163948323"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163948323"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think there is still a bug here where scan will return success (`nullptr`) if it gets aborted due to a reorg.\r\n\r\nMaybe this line:\r\n\r\n```c++\r\npindex = chainActive.Next(pindex);\r\n```\r\n\r\nshould be changed to something like:\r\n\r\n```c++\r\nif (CBlockIndex* new_index = chainActive.Next(pindex)) {\r\n    pindex = new_index;\r\n} else {\r\n    /* aborting, reorg */\r\n    ret = pindex;\r\n    break;\r\n}\r\n```\r\n\r\nAnother alternative could be to resume instead of aborting on reorgs.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-25T19:44:54Z",
      "diff_hunk" : "@@ -1683,14 +1707,20 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163948323",
      "id" : 163948323,
      "original_commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "original_position" : 104,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 91647861,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-25T19:44:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163948323",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163949348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163949348"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Great, thanks for addressing this.\r\n\r\n> I think GVP needs cs_main\r\n\r\nI was curious about this. It would be good for GuessVerificationProgress comment to mention that it needs cs_main, since it isn't really obvious one way or the other.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-25T19:48:51Z",
      "diff_hunk" : "@@ -1643,37 +1644,60 @@ int64_t CWallet::RescanFromTime(int64_t startTime, bool update)\n  *\n  * If pindexStop is not a nullptr, the scan will stop at the block-index\n  * defined by pindexStop\n+ *\n+ * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * the main chain after to the addition of any new keys you want to detect\n+ * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n+    assert(reserver.isReserved());\n     if (pindexStop) {\n         assert(pindexStop->nHeight >= pindexStart->nHeight);\n     }\n \n     CBlockIndex* pindex = pindexStart;\n     CBlockIndex* ret = nullptr;\n     {\n-        LOCK2(cs_main, cs_wallet);\n         fAbortRescan = false;\n-        fScanningWallet = true;\n-\n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        double dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-        double dProgressTip = GuessVerificationProgress(chainParams.TxData(), chainActive.Tip());\n+        CBlockIndex* tip = nullptr;\n+        double dProgressStart;\n+        double dProgressTip;\n+        {\n+            LOCK(cs_main);\n+            tip = chainActive.Tip();\n+            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n+            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+        }\n         while (pindex && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n-                ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+                double gvp = 0;\n+                {\n+                    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163949348",
      "id" : 163949348,
      "in_reply_to_id" : 163937257,
      "original_commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "original_position" : 74,
      "path" : "src/wallet/wallet.cpp",
      "position" : 74,
      "pull_request_review_id" : 91649090,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-25T19:48:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163949348",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163954610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163954610"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> should be changed to something like:\r\n\r\nI think my suggestion above won't work because it will return an error when pindex points to the the tip. Maybe simplest fix would be to restructure the code a little to just acquire cs_main once after ReadBlockFromDisk instead of acquiring, releasing, then immediately re-acquiring. That way there is would be no chance of reorg between the `chainActive.Contains` check above and this `chainActive.Next` call.\r\n",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-25T20:09:22Z",
      "diff_hunk" : "@@ -1683,14 +1707,20 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r163954610",
      "id" : 163954610,
      "in_reply_to_id" : 163948323,
      "original_commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "original_position" : 104,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 91655215,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-25T20:09:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/163954610",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r164138244"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164138244"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think there is still a bug here where scan will return success\r\n\r\nSorry for the churn, but I no longer think there's a bug here. Opened #12275 to try to clarify the return value.",
      "commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "created_at" : "2018-01-26T15:22:48Z",
      "diff_hunk" : "@@ -1683,14 +1707,20 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlock\n             if (pindex == pindexStop) {\n                 break;\n             }\n-            pindex = chainActive.Next(pindex);\n+            {\n+                LOCK(cs_main);\n+                pindex = chainActive.Next(pindex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11281#discussion_r164138244",
      "id" : 164138244,
      "in_reply_to_id" : 163948323,
      "original_commit_id" : "7f812502b78b76653bbef19169e8a05873ee3b8d",
      "original_position" : 104,
      "path" : "src/wallet/wallet.cpp",
      "position" : 104,
      "pull_request_review_id" : 91869644,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11281",
      "updated_at" : "2018-01-26T15:22:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/164138244",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
