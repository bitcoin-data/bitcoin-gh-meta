{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "This is a work in progress, all comments and review are welcome and appreciated.\r\n\r\n**TL;DR:** We add a new network RPC call, `getnetworkrpcinfo`, that returns metrics about JSON RPC HTTP server.\r\n\r\n## INTRODUCTION\r\nAs part of constructing Service Level Agreements (SLAs) around the uptime of Bitcoin nodes, it is useful to measure such things as requests processed per second or average request processing time. While the `getnetworkinfo` RPC call provides a lot information and many useful metrics about the P2P layer of Bitcoin, it does not provide any metrics about the JSON RPC layer. Since many services interact with Bitcoin almost entirely through its JSON RPC interface, it would be useful to collect and provide metrics about this interface.\r\n\r\n## OVERVIEW OF CHANGES\r\nThis PR contains two major changes: Collecting HTTP server metrics and Adding a new RPC method.\r\n\r\n### Collect HTTP Server Metrics (`httpserver.h`, `httpserver.cpp`)\r\nThis change is the first part of adding a new RPC call to report stats from the HTTP server. It modifies the HTTP server functionality to collect and report the gathered statistics.\r\n\r\n`httpserver.h`:\r\n  * Add private member variable `receivedAtTimeMicros` to `HTTPRequest` to record the time at which the request was started.\r\n  * Add data-type, `RPCServerStats`, that holds all gathered HTTP server stats.\r\n  * Add function, `GetRPCServerStats`, that returns the current RPC server stats via the provider pointer.\r\n\r\n`httpserver.cpp`:\r\n  * Add static global `g_rpcserverstats` to hold HTTP server stats across all requests.\r\n  * Add static global `g_rpcserverstats_mutex` to serialize writes to `g_rpcserverstats`.\r\n  * Modify several functions to collect the RPC server stats.\r\n  * Implement `GetRPCServerStats`.\r\n\r\n### Add getnetworkrpcinfo RPC Method (`rpc/net.cpp`)\r\nAdd a new RPC command, `getnetworkrpcinfo`, that returns an object containing various state information about the HTTP server providing a JSON RPC interface. This information can be used to derive information such as requests per second and average request processing time.\r\n\r\nThe information is provided in a raw form leaving the clients to derive such useful metrics, this is intentional and allows this RPC call to avoid issues around floating point accuracy and floating point error accumulation. Instead, these issues are left to the consumers of the response object to handle in whatever fashion they like.",
   "closed_at" : "2018-09-15T15:12:29Z",
   "closed_by" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/69561?v=4",
      "events_url" : "https://api.github.com/users/etscrivner/events{/privacy}",
      "followers_url" : "https://api.github.com/users/etscrivner/followers",
      "following_url" : "https://api.github.com/users/etscrivner/following{/other_user}",
      "gists_url" : "https://api.github.com/users/etscrivner/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/etscrivner",
      "id" : 69561,
      "login" : "etscrivner",
      "node_id" : "MDQ6VXNlcjY5NTYx",
      "organizations_url" : "https://api.github.com/users/etscrivner/orgs",
      "received_events_url" : "https://api.github.com/users/etscrivner/received_events",
      "repos_url" : "https://api.github.com/users/etscrivner/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/etscrivner/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/etscrivner/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/etscrivner"
   },
   "comments" : 9,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14202/comments",
   "created_at" : "2018-09-12T02:53:05Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14202/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/14202",
   "id" : 359295923,
   "labels" : [
      {
         "color" : "0052cc",
         "default" : false,
         "id" : 98279177,
         "name" : "RPC/REST/ZMQ",
         "node_id" : "MDU6TGFiZWw5ODI3OTE3Nw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14202/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MjE0ODIxMzI1",
   "number" : 14202,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/14202.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14202",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/14202.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14202"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "[WIP] RPC: Add Method To Retrieve HTTP Server Metrics",
   "updated_at" : "2018-09-15T15:12:29Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14202",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/69561?v=4",
      "events_url" : "https://api.github.com/users/etscrivner/events{/privacy}",
      "followers_url" : "https://api.github.com/users/etscrivner/followers",
      "following_url" : "https://api.github.com/users/etscrivner/following{/other_user}",
      "gists_url" : "https://api.github.com/users/etscrivner/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/etscrivner",
      "id" : 69561,
      "login" : "etscrivner",
      "node_id" : "MDQ6VXNlcjY5NTYx",
      "organizations_url" : "https://api.github.com/users/etscrivner/orgs",
      "received_events_url" : "https://api.github.com/users/etscrivner/received_events",
      "repos_url" : "https://api.github.com/users/etscrivner/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/etscrivner/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/etscrivner/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/etscrivner"
   }
}
