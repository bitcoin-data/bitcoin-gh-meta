{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "In `validation.cpp`, both `ConnectTip` and `DisconnectTip` invoke a `GetMainSignals()...` callback, which schedules a future event though the CScheduler interface.\r\n\r\nThese functions are called in 3 places:\r\n- `ActivateBestChainTipStep`\r\n- `InvalidateBlock`\r\n- `RewindBlockIndex`\r\n\r\nThe first of these 3 prevents the scheduler queue from growing unboundedly, by limiting the size to 10 in `ActivateBestChainTip`. The other two however do not, and @Sjors discovered that doing a giant `invalidateblock` RPC call will in fact blow up the node's memory usage (which turns out to be caused by the queue events holding all disconnected blocks in memory).\r\n\r\nI believe there are several improvements necessary.\r\n\r\n1. (short term symptom fix) If this issue also appears for `RewindBlockIndex`, we must fix it before 0.17, as this may prevent nodes from upgrading pre-0.13 code. I think this is easy, as this function is called prior to normal node operation, so it can easily be reworked to release `cs_main` intermittently and drain the queue.\r\n\r\n2. (long term fix) The use of background queues is a means to increase parallellism, not a way to break lock dependencies (as @gmaxwell pointed out privately to me, whenever a background queue is used to break a dependency, attempts to limit its size can turn into a deadlock). One way I think is to have a debug mode where the background scheduler immediately runs all scheduled actions synchronously, forcing all add-to-queue calls to happen without locks held. Once everything works in such a mode, we can safely add actual queue size limits as opposed to ad-hoc checks to prevent the queue from growing too large.\r\n\r\n3. (orthogonal memory usage reduction) It's unfortunate that our `DisconnectBlock` events hold a shared pointer to the block being disconnected. Ideally there is a shared layer that only keeps the last few blocks in memory, and releases and reloads them from disk when needed otherwise. This wouldn't fix the unbounded growth issue above, but it would reduce the impact. It's also independently useful to reduce the memory during very large reorgs (where we can't run callbacks until the entire thing completed).\r\n",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 16,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14289/comments",
   "created_at" : "2018-09-21T21:18:09Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14289/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/14289",
   "id" : 362777417,
   "labels" : [
      {
         "color" : "FBBAAB",
         "default" : false,
         "id" : 64585,
         "name" : "Bug",
         "node_id" : "MDU6TGFiZWw2NDU4NQ==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug"
      },
      {
         "color" : "981023",
         "default" : false,
         "id" : 326918230,
         "name" : "Resource usage",
         "node_id" : "MDU6TGFiZWwzMjY5MTgyMzA=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Resource%20usage"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14289/labels{/name}",
   "locked" : false,
   "milestone" : {
      "closed_at" : null,
      "closed_issues" : 64,
      "created_at" : "2018-05-31T19:40:07Z",
      "creator" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      },
      "description" : null,
      "due_on" : null,
      "html_url" : "https://github.com/bitcoin/bitcoin/milestone/37",
      "id" : 3391434,
      "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/37/labels",
      "node_id" : "MDk6TWlsZXN0b25lMzM5MTQzNA==",
      "number" : 37,
      "open_issues" : 23,
      "state" : "open",
      "title" : "0.19.0",
      "updated_at" : "2019-07-29T13:46:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/37"
   },
   "node_id" : "MDU6SXNzdWUzNjI3Nzc0MTc=",
   "number" : 14289,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "title" : "Unbounded growth of scheduler queue",
   "updated_at" : "2019-07-05T14:35:07Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14289",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
      "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
      "followers_url" : "https://api.github.com/users/sipa/followers",
      "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/sipa",
      "id" : 548488,
      "login" : "sipa",
      "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
      "organizations_url" : "https://api.github.com/users/sipa/orgs",
      "received_events_url" : "https://api.github.com/users/sipa/received_events",
      "repos_url" : "https://api.github.com/users/sipa/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/sipa"
   }
}
