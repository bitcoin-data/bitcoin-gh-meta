[
   {
      "author_association" : "MEMBER",
      "body" : "Our resident integer expert @arvidn of `libtorrent` fame might want to review? :-)",
      "created_at" : "2018-09-15T07:21:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14223#issuecomment-421537701",
      "id" : 421537701,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14223",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMTUzNzcwMQ==",
      "updated_at" : "2018-09-15T07:21:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421537701",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  nSizeWithDescendants = (uint64_t)((int64_t)nSizeWithDescendants + modifySize);\r\n>  assert(int64_t(nSizeWithDescendants) > 0);\r\n\r\nThis code ends up looking pretty deeply confused.  The fix at 219 looks okay to me, the asserts should probably changed to typical overflow checking before the operations they're checking, rather than a whirlwind of casts. :)\r\n\r\n",
      "created_at" : "2018-09-15T07:24:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14223#issuecomment-421537812",
      "id" : 421537812,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14223",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMTUzNzgxMg==",
      "updated_at" : "2018-09-15T07:29:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421537812",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13804 (Transaction Pool Layer by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-09-15T09:11:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14223#issuecomment-421543194",
      "id" : 421543194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14223",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMTU0MzE5NA==",
      "updated_at" : "2018-09-15T09:11:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421543194",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14223#discussion_r217889715"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14223"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217889715"
         }
      },
      "author_association" : "NONE",
      "body" : "could you explain what you're doing here?\r\nI get the impression that you intend to make it so that (unintended) unsigned wraparound do not happen. I don't think it's obvious how these casts help with that. Is `modifySize` legitimately negative sometimes? and is `nSizeWithDescendants` legitimately near `INT64_MAX` as a result?",
      "commit_id" : "f09bc7ec9859bba6d1df765adb1030d276b8f626",
      "created_at" : "2018-09-15T16:52:18Z",
      "diff_hunk" : "@@ -305,19 +305,19 @@ void CTxMemPool::UpdateForRemoveFromMempool(const setEntries &entriesToRemove, b\n \n void CTxMemPoolEntry::UpdateDescendantState(int64_t modifySize, CAmount modifyFee, int64_t modifyCount)\n {\n-    nSizeWithDescendants += modifySize;\n+    nSizeWithDescendants = (uint64_t)((int64_t)nSizeWithDescendants + modifySize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14223#discussion_r217889715",
      "id" : 217889715,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzg4OTcxNQ==",
      "original_commit_id" : "eb0dd77fbff0ad84ebe5fa60056d87459e7cb59f",
      "original_position" : 14,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 155718998,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14223",
      "updated_at" : "2018-09-15T17:09:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217889715",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/661450?v=4",
         "events_url" : "https://api.github.com/users/arvidn/events{/privacy}",
         "followers_url" : "https://api.github.com/users/arvidn/followers",
         "following_url" : "https://api.github.com/users/arvidn/following{/other_user}",
         "gists_url" : "https://api.github.com/users/arvidn/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/arvidn",
         "id" : 661450,
         "login" : "arvidn",
         "node_id" : "MDQ6VXNlcjY2MTQ1MA==",
         "organizations_url" : "https://api.github.com/users/arvidn/orgs",
         "received_events_url" : "https://api.github.com/users/arvidn/received_events",
         "repos_url" : "https://api.github.com/users/arvidn/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/arvidn/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/arvidn/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/arvidn"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@gmaxwell Yes agree it looks weird a bit weird together with the old `assert(Ã¢ÂÂ¦)`. Your suggestion to go with typical overflow checking is better. I don't know the rationale behind that `assert(Ã¢ÂÂ¦)`: I'll have to dig in the repo and GitHub history too see. Closing this PR for now :-)  I'll revisit when I have prepared a better solution which also gets rid of that old assert.",
      "created_at" : "2018-09-15T17:50:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14223#issuecomment-421606921",
      "id" : 421606921,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14223",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMTYwNjkyMQ==",
      "updated_at" : "2018-09-15T18:07:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421606921",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14223#discussion_r217891322"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14223"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217891322"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@arvidn Yes `modifySize` can be legitimately negative. Actually that condition and the resulting wraparound is trigged just by running the ordinary test suite:\r\n\r\n```\r\n$ ./configure --with-sanitizers=integer && \\\r\n    make check && \\\r\n    test/functional/test_runner.py\r\nÃ¢ÂÂ¦\r\ntxmempool.cpp:308:26: runtime error: unsigned integer overflow: 223 + 18446744073709551532 cannot be represented in type 'unsigned long'\r\nÃ¢ÂÂ¦\r\n```\r\n\r\nClosing this PR for now: I'll go with @gmaxwell's suggestion with typical overflow checking instead of explicit casts to avoid this.",
      "commit_id" : "f09bc7ec9859bba6d1df765adb1030d276b8f626",
      "created_at" : "2018-09-15T17:54:26Z",
      "diff_hunk" : "@@ -305,19 +305,19 @@ void CTxMemPool::UpdateForRemoveFromMempool(const setEntries &entriesToRemove, b\n \n void CTxMemPoolEntry::UpdateDescendantState(int64_t modifySize, CAmount modifyFee, int64_t modifyCount)\n {\n-    nSizeWithDescendants += modifySize;\n+    nSizeWithDescendants = (uint64_t)((int64_t)nSizeWithDescendants + modifySize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14223#discussion_r217891322",
      "id" : 217891322,
      "in_reply_to_id" : 217889715,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzg5MTMyMg==",
      "original_commit_id" : "eb0dd77fbff0ad84ebe5fa60056d87459e7cb59f",
      "original_position" : 14,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 155720657,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14223",
      "updated_at" : "2018-09-15T18:07:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217891322",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
