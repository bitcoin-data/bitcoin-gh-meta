[
   {
      "author_association" : "MEMBER",
      "body" : "I triggered this issue while running the tests on the 0.16 branch:\r\n\r\n```\r\n\u001b[1mfeature_dbcrash.py\u001b[0m failed, Duration: 1185 s\r\n\r\n\u001b[1mstdout:\r\n\u001b[0m2018-04-05 17:05:30.803000 TestFramework (INFO): Initializing test directory /tmp/bitcoin_test_runner_20180405_130431/feature_dbcrash_170\r\n2018-04-05 17:06:08.451000 TestFramework (INFO): Prepped 5001 utxo entries\r\n2018-04-05 17:06:59.908000 TestFramework (INFO): Iteration 0, generating 2500 transactions [0, 0, 0]\r\n2018-04-05 17:07:17.195000 TestFramework (INFO): Iteration 1, generating 2500 transactions [0, 0, 0]\r\n2018-04-05 17:07:33.347000 TestFramework (INFO): Iteration 2, generating 2500 transactions [0, 0, 0]\r\n2018-04-05 17:07:49.595000 TestFramework (INFO): Iteration 3, generating 2500 transactions [0, 0, 0]\r\n2018-04-05 17:08:09.162000 TestFramework (INFO): Iteration 4, generating 2500 transactions [0, 0, 0]\r\n2018-04-05 17:08:26.442000 TestFramework (INFO): Iteration 5, generating 2500 transactions [0, 0, 0]\r\n2018-04-05 17:08:47.728000 TestFramework (INFO): Iteration 6, generating 2500 transactions [0, 0, 0]\r\n2018-04-05 17:09:13.273000 TestFramework (INFO): Iteration 7, generating 2500 transactions [1, 0, 0]\r\n2018-04-05 17:09:34.107000 TestFramework (INFO): Iteration 8, generating 2500 transactions [2, 0, 0]\r\n2018-04-05 17:10:23.227000 TestFramework (INFO): Iteration 9, generating 2500 transactions [3, 1, 0]\r\n2018-04-05 17:10:48.601000 TestFramework (INFO): Iteration 10, generating 2500 transactions [3, 1, 0]\r\n2018-04-05 17:11:14.825000 TestFramework (INFO): Iteration 11, generating 2500 transactions [4, 1, 0]\r\n2018-04-05 17:11:41.301000 TestFramework (INFO): Iteration 12, generating 2500 transactions [4, 2, 0]\r\n2018-04-05 17:12:04.667000 TestFramework (INFO): Iteration 13, generating 2500 transactions [5, 2, 0]\r\n2018-04-05 17:12:29.121000 TestFramework (INFO): Iteration 14, generating 2500 transactions [5, 2, 0]\r\n2018-04-05 17:12:56.188000 TestFramework (INFO): Iteration 15, generating 2500 transactions [5, 3, 0]\r\n2018-04-05 17:13:24.200000 TestFramework (INFO): Iteration 16, generating 2500 transactions [6, 3, 0]\r\n2018-04-05 17:14:22.805000 TestFramework (INFO): Iteration 17, generating 2500 transactions [7, 4, 0]\r\n2018-04-05 17:15:35.174000 TestFramework (INFO): Iteration 18, generating 2500 transactions [8, 4, 1]\r\n2018-04-05 17:16:01.286000 TestFramework (INFO): Iteration 19, generating 2500 transactions [8, 4, 1]\r\n2018-04-05 17:16:30.793000 TestFramework (INFO): Iteration 20, generating 2500 transactions [8, 4, 1]\r\n2018-04-05 17:16:56.134000 TestFramework (INFO): Iteration 21, generating 2500 transactions [8, 4, 1]\r\n2018-04-05 17:17:24.077000 TestFramework (INFO): Iteration 22, generating 2500 transactions [8, 4, 1]\r\n2018-04-05 17:18:05.554000 TestFramework (INFO): Iteration 23, generating 2500 transactions [9, 5, 2]\r\n2018-04-05 17:18:39.609000 TestFramework (INFO): Iteration 24, generating 2500 transactions [10, 5, 2]\r\n2018-04-05 17:19:25.984000 TestFramework (INFO): Iteration 25, generating 2500 transactions [10, 5, 2]\r\n2018-04-05 17:20:07.936000 TestFramework (INFO): Iteration 26, generating 2500 transactions [11, 5, 2]\r\n2018-04-05 17:20:47.133000 TestFramework (INFO): Iteration 27, generating 2500 transactions [11, 5, 2]\r\n2018-04-05 17:21:31.789000 TestFramework (INFO): Iteration 28, generating 2500 transactions [11, 5, 3]\r\n2018-04-05 17:22:11.479000 TestFramework (INFO): Iteration 29, generating 2500 transactions [11, 5, 3]\r\n2018-04-05 17:22:55.978000 TestFramework (INFO): Iteration 30, generating 2500 transactions [12, 5, 3]\r\n2018-04-05 17:23:42.142000 TestFramework (INFO): Iteration 31, generating 2500 transactions [12, 5, 3]\r\n2018-04-05 17:25:15.294000 TestFramework (ERROR): Unexpected exception caught during testing\r\nTraceback (most recent call last):\r\n  File \"/home/prod/jenkins/bitcoin/test/functional/feature_dbcrash.py\", line 81, in restart_node\r\n    self.start_node(node_index)\r\n  File \"/home/prod/jenkins/bitcoin/test/functional/test_framework/test_framework.py\", line 229, in start_node\r\n    node.wait_for_rpc_connection()\r\n  File \"/home/prod/jenkins/bitcoin/test/functional/test_framework/test_node.py\", line 104, in wait_for_rpc_connection\r\n    self.rpc.getblockcount()\r\n  File \"/home/prod/jenkins/bitcoin/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/home/prod/jenkins/bitcoin/test/functional/test_framework/authproxy.py\", line 136, in __call__\r\n    response = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n  File \"/home/prod/jenkins/bitcoin/test/functional/test_framework/authproxy.py\", line 107, in _request\r\n    return self._get_response()\r\n  File \"/home/prod/jenkins/bitcoin/test/functional/test_framework/authproxy.py\", line 168, in _get_response\r\n    'code': -342, 'message': 'non-JSON HTTP response with \\'%i %s\\' from server' % (http_response.status, http_response.reason)})\r\ntest_framework.authproxy.JSONRPCException: non-JSON HTTP response with '401 Unauthorized' from server (-342)\r\n```\r\n\r\nBut this is also straightforward to reproduce on master; I was able to do so by adding a small sleep in `wait_for_rpc_connection` in `test_node.py`:\r\n```\r\ndiff --git a/test/functional/test_framework/test_node.py b/test/functional/test_framework/test_node.py\r\nindex 291ac3ee46..44627cba7c 100755\r\n--- a/test/functional/test_framework/test_node.py\r\n+++ b/test/functional/test_framework/test_node.py\r\n@@ -111,6 +111,7 @@ class TestNode():\r\n                 raise FailedToStartError('bitcoind exited with status {} during initialization'.format(self.process.returncode))\r\n             try:\r\n                 self.rpc = get_rpc_proxy(rpc_url(self.datadir, self.index, self.rpchost), self.index, timeout=self.rpc_timeout, coveragedir=self.coverage_dir)\r\n+                time.sleep(0.5)\r\n                 self.rpc.getblockcount()\r\n                 # If the call to getblockcount() succeeds then the RPC connection is up\r\n                 self.rpc_connected = True\r\n```",
      "created_at" : "2018-04-06T13:54:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12902#issuecomment-379260451",
      "id" : 379260451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12902",
      "updated_at" : "2018-04-06T13:54:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379260451",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Considering that we usually clean up the datadir when the test was successful, wouldn't it make more sense to delete the cookie when it was left behind due to a crash? That would also limit the changes to `feature_dbcrash`, the only place where the fix would be needed, it seems... Just a thought, no strong opinion.\r\n\r\nConcept ACK",
      "created_at" : "2018-04-06T14:48:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12902#issuecomment-379276702",
      "id" : 379276702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12902",
      "updated_at" : "2018-04-06T14:48:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379276702",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke I did consider that as well, also I considered changing the way we use the test framework so that if a cookie file is already present we instruct bitcoind to use it...  None of these options seems all that great to me as this is pretty messy, but I figure that changing `wait_for_rpc_connection` is more robust (ie if other tests end up getting written that need something like this), versus special-casing cookie file deletion in a specific test (as that knowledge would likely be forgotten when a new test that needs it gets written).\r\n\r\nEdit: I should add -- normally the cookie file is deleted by bitcoind when it shuts down cleanly, not the test framework (I think).",
      "created_at" : "2018-04-06T14:58:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12902#issuecomment-379279775",
      "id" : 379279775,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12902",
      "updated_at" : "2018-04-06T15:00:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379279775",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12902#discussion_r179864429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12902"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179864429"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps log, since this is an unexpected condition?",
      "commit_id" : "02b3c4af8a1e75a918363ee64c05a8966ad3dec2",
      "created_at" : "2018-04-06T20:13:51Z",
      "diff_hunk" : "@@ -128,7 +128,14 @@ def wait_for_rpc_connection(self):\n                 if e.errno != errno.ECONNREFUSED:  # Port not yet open?\n                     raise  # unknown IO error\n             except JSONRPCException as e:  # Initialization phase\n-                if e.error['code'] != -28:  # RPC in warmup?\n+                if e.error['code'] == -342 and '401 Unauthorized' in str(e):\n+                    # The code comes from authproxy.py, passing through the http\n+                    # error. 'Unauthorized' can happen due to a race condition with\n+                    # using an old cookie file which is overwritten when the\n+                    # node starts up, so treat this the same as \"No RPC\n+                    # credentials\" and do nothing.\n+                    pass",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12902#discussion_r179864429",
      "id" : 179864429,
      "original_commit_id" : "02b3c4af8a1e75a918363ee64c05a8966ad3dec2",
      "original_position" : 11,
      "path" : "test/functional/test_framework/test_node.py",
      "position" : 11,
      "pull_request_review_id" : 110194852,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12902",
      "updated_at" : "2018-04-06T20:13:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/179864429",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> Considering that we usually clean up the datadir when the test was successful, wouldn't it make more sense to delete the cookie when it was left behind due to a crash? \r\n\r\nThat was my initial response to this as well.\r\nIf the test framework makes sure that no cookie file is left behind, the race will not trigger in the first place, and we don't have to special-case it.\r\n\r\n> Edit: I should add -- normally the cookie file is deleted by bitcoind when it shuts down cleanly, not the test framework (I think).\r\n\r\nCorrect.\r\nThis is done here: https://github.com/bitcoin/bitcoin/blob/master/src/rpc/server.cpp#L323",
      "created_at" : "2018-04-09T14:01:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12902#issuecomment-379762747",
      "id" : 379762747,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12902",
      "updated_at" : "2018-04-09T14:03:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379762747",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj @MarcoFalke I reworked this PR to delete cookie files, if present, as suggested.  I avoided putting this logic directly in `feature_dbcrash.py`, since the authentication logic lives in the test framework (and the test is unaware of cookie files or RPC authentication in the first place), but let me know if you think I should move it.\r\n\r\nOriginal version of this PR is here for comparison: https://github.com/sdaftuar/bitcoin/commit/02b3c4af8a1e75a918363ee64c05a8966ad3dec2\r\n\r\nAlso updated OP to account for new behavior.",
      "created_at" : "2018-04-09T18:58:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12902#issuecomment-379857698",
      "id" : 379857698,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12902",
      "updated_at" : "2018-04-09T18:59:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379857698",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 75d0e4c5444249f0cf81ed0494e2c2717170b695",
      "created_at" : "2018-04-09T19:21:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12902#issuecomment-379864151",
      "id" : 379864151,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12902",
      "updated_at" : "2018-04-09T19:21:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379864151",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested ACK 75d0e4c5444249f0cf81ed0494e2c2717170b695.\r\n\r\nI'd be tempted to put the new functionality directly into `TestNode.start()`, since that's the only place it gets called, but this is also fine.",
      "created_at" : "2018-04-09T19:33:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12902#issuecomment-379868177",
      "id" : 379868177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12902",
      "updated_at" : "2018-04-09T19:33:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379868177",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">I'd be tempted to put the new functionality directly into TestNode.start(), since that's the only place it gets called, but this is also fine.\r\n\r\nNo strong opinion, but it looked like `util.py` is the only place in the test framework that currently knows where cookie files live exactly, so I figured might as well continue to restrict that knowledge to one area of the codebase.",
      "created_at" : "2018-04-09T21:08:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12902#issuecomment-379894739",
      "id" : 379894739,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12902",
      "updated_at" : "2018-04-09T21:08:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379894739",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "post-utACK 75d0e4c5444249f0cf81ed0494e2c2717170b695",
      "created_at" : "2018-04-10T08:17:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12902#issuecomment-380014889",
      "id" : 380014889,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12902",
      "updated_at" : "2018-04-10T08:17:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/380014889",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
