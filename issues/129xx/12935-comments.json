[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r180651168"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/180651168"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Looks like `lRemovedTxn` still needs to be cleared in this method, unless moving it wholly into `ProcessOrphans` is appropriate.",
      "commit_id" : "4dee1ea5cb061bef9fd1b61e04dc128b3e097204",
      "created_at" : "2018-04-11T06:55:39Z",
      "diff_hunk" : "@@ -2179,9 +2250,6 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             AcceptToMemoryPool(mempool, state, ptx, &fMissingInputs, &lRemovedTxn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r180651168",
      "id" : 180651168,
      "original_commit_id" : "aaaa4569b1ef49ce6f031325f03d171de55d8419",
      "original_position" : 90,
      "path" : "src/net_processing.cpp",
      "position" : 90,
      "pull_request_review_id" : 111105663,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935",
      "updated_at" : "2018-04-14T16:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/180651168",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK, both for the addition of testing and due to the fact that ProcessMessage is >1300 lines at the moment. Would be great if other applications of the method were ready, to help inform its interface.",
      "created_at" : "2018-04-11T06:57:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#issuecomment-380347558",
      "id" : 380347558,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12935",
      "updated_at" : "2018-04-11T06:57:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/380347558",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "This is a move-only commit - so maybe not the right place - but it might be nice to separate the misbehaving peer punishment logic from the re-attempting to accept orphans to the mempool logic - good first step though",
      "created_at" : "2018-04-11T16:51:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#issuecomment-380521404",
      "id" : 380521404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/12935",
      "updated_at" : "2018-04-11T16:51:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/380521404",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/195769?v=4",
         "events_url" : "https://api.github.com/users/skeees/events{/privacy}",
         "followers_url" : "https://api.github.com/users/skeees/followers",
         "following_url" : "https://api.github.com/users/skeees/following{/other_user}",
         "gists_url" : "https://api.github.com/users/skeees/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/skeees",
         "id" : 195769,
         "login" : "skeees",
         "organizations_url" : "https://api.github.com/users/skeees/orgs",
         "received_events_url" : "https://api.github.com/users/skeees/received_events",
         "repos_url" : "https://api.github.com/users/skeees/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/skeees/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/skeees/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/skeees"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r180830562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/180830562"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry, that indeed looks ugly right now. I will rebase this on #11775, which removes `lRemovedTxn` in whole.",
      "commit_id" : "4dee1ea5cb061bef9fd1b61e04dc128b3e097204",
      "created_at" : "2018-04-11T17:11:27Z",
      "diff_hunk" : "@@ -2179,9 +2250,6 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             AcceptToMemoryPool(mempool, state, ptx, &fMissingInputs, &lRemovedTxn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r180830562",
      "id" : 180830562,
      "in_reply_to_id" : 180651168,
      "original_commit_id" : "aaaa4569b1ef49ce6f031325f03d171de55d8419",
      "original_position" : 90,
      "path" : "src/net_processing.cpp",
      "position" : 90,
      "pull_request_review_id" : 111322303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935",
      "updated_at" : "2018-04-14T16:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/180830562",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181469335"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181469335"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems like it woud be more robust (prevent hangs if the node wasn't disconnected) to call `network_thread_join` after `disconnect_p2ps`. This is the pattern used most other places (except `feature_block` for some reason). This would also make shutdown order the reverse of initialization order, which is a good pattern in general.",
      "commit_id" : "4dee1ea5cb061bef9fd1b61e04dc128b3e097204",
      "created_at" : "2018-04-13T18:13:30Z",
      "diff_hunk" : "@@ -6,24 +6,45 @@\n \n In this test we connect to one node over p2p, and test tx requests.\"\"\"\n from test_framework.blocktools import create_block, create_coinbase, create_transaction\n-from test_framework.messages import COIN\n-from test_framework.mininode import network_thread_start, P2PDataStore\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxOut,\n+)\n+from test_framework.mininode import network_thread_start, P2PDataStore, network_thread_join\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n \n-class InvalidTxRequestTest(BitcoinTestFramework):\n \n+class InvalidTxRequestTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n-        self.extra_args = [[\"-whitelist=127.0.0.1\"]]\n+\n+    def reconnect_p2p(self, additional_conn=False):\n+        \"\"\"Add a P2P connection to the node.\n+\n+        The node gets disconnected several times in this test. This helper\n+        method reconnects the p2p and restarts the network thread.\"\"\"\n+\n+        network_thread_join()\n+        self.nodes[0].disconnect_p2ps()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181469335",
      "id" : 181469335,
      "original_commit_id" : "aaaa4569b1ef49ce6f031325f03d171de55d8419",
      "original_position" : 34,
      "path" : "test/functional/p2p_invalid_tx.py",
      "position" : null,
      "pull_request_review_id" : 112109784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935",
      "updated_at" : "2018-04-14T16:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181469335",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181470108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181470108"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It seems not great to immediately start, stop, and restart the network thread. Could just split up the reconnect method up into connect / disconnect methods to avoid this.",
      "commit_id" : "4dee1ea5cb061bef9fd1b61e04dc128b3e097204",
      "created_at" : "2018-04-13T18:16:30Z",
      "diff_hunk" : "@@ -6,24 +6,45 @@\n \n In this test we connect to one node over p2p, and test tx requests.\"\"\"\n from test_framework.blocktools import create_block, create_coinbase, create_transaction\n-from test_framework.messages import COIN\n-from test_framework.mininode import network_thread_start, P2PDataStore\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxOut,\n+)\n+from test_framework.mininode import network_thread_start, P2PDataStore, network_thread_join\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n \n-class InvalidTxRequestTest(BitcoinTestFramework):\n \n+class InvalidTxRequestTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n-        self.extra_args = [[\"-whitelist=127.0.0.1\"]]\n+\n+    def reconnect_p2p(self, additional_conn=False):\n+        \"\"\"Add a P2P connection to the node.\n+\n+        The node gets disconnected several times in this test. This helper\n+        method reconnects the p2p and restarts the network thread.\"\"\"\n+\n+        network_thread_join()\n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].add_p2p_connection(P2PDataStore())\n+        if additional_conn:\n+            self.nodes[0].add_p2p_connection(P2PDataStore())\n+        network_thread_start()\n+        self.nodes[0].p2p.wait_for_verack()\n \n     def run_test(self):\n         # Add p2p connection to node0\n         node = self.nodes[0]  # convenience reference to the node\n-        node.add_p2p_connection(P2PDataStore())\n-\n+        # reconnect_p2p() expects the network thread to be running\n         network_thread_start()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181470108",
      "id" : 181470108,
      "original_commit_id" : "aaaa4569b1ef49ce6f031325f03d171de55d8419",
      "original_position" : 47,
      "path" : "test/functional/p2p_invalid_tx.py",
      "position" : null,
      "pull_request_review_id" : 112109784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935",
      "updated_at" : "2018-04-14T16:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181470108",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181470581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181470581"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe just take a num_connections=1 optional argument and shorten to\r\n\r\n```python\r\nfor _ in range(num_connections):\r\n    self.nodes[0].add_p2p_connection(P2PDataStore())\r\n```",
      "commit_id" : "4dee1ea5cb061bef9fd1b61e04dc128b3e097204",
      "created_at" : "2018-04-13T18:18:09Z",
      "diff_hunk" : "@@ -6,24 +6,45 @@\n \n In this test we connect to one node over p2p, and test tx requests.\"\"\"\n from test_framework.blocktools import create_block, create_coinbase, create_transaction\n-from test_framework.messages import COIN\n-from test_framework.mininode import network_thread_start, P2PDataStore\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxOut,\n+)\n+from test_framework.mininode import network_thread_start, P2PDataStore, network_thread_join\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n \n-class InvalidTxRequestTest(BitcoinTestFramework):\n \n+class InvalidTxRequestTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n-        self.extra_args = [[\"-whitelist=127.0.0.1\"]]\n+\n+    def reconnect_p2p(self, additional_conn=False):\n+        \"\"\"Add a P2P connection to the node.\n+\n+        The node gets disconnected several times in this test. This helper\n+        method reconnects the p2p and restarts the network thread.\"\"\"\n+\n+        network_thread_join()\n+        self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].add_p2p_connection(P2PDataStore())\n+        if additional_conn:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181470581",
      "id" : 181470581,
      "original_commit_id" : "aaaa4569b1ef49ce6f031325f03d171de55d8419",
      "original_position" : 36,
      "path" : "test/functional/p2p_invalid_tx.py",
      "position" : null,
      "pull_request_review_id" : 112109784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935",
      "updated_at" : "2018-04-14T16:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181470581",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181473228"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181473228"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Check for reject reason below is now dropped (I guess is because the mininode is no longer whitelisted), so might be clearer to update this comment.",
      "commit_id" : "4dee1ea5cb061bef9fd1b61e04dc128b3e097204",
      "created_at" : "2018-04-13T18:27:45Z",
      "diff_hunk" : "@@ -44,12 +65,48 @@ def run_test(self):\n \n         # b'\\x64' is OP_NOTIF\n         # Transaction will be rejected with code 16 (REJECT_INVALID)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181473228",
      "id" : 181473228,
      "original_commit_id" : "aaaa4569b1ef49ce6f031325f03d171de55d8419",
      "original_position" : 56,
      "path" : "test/functional/p2p_invalid_tx.py",
      "position" : 59,
      "pull_request_review_id" : 112109784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935",
      "updated_at" : "2018-04-14T16:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181473228",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181473709"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181473709"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can the `expect_disconnect` case actually wait and verify the disconnect happened?",
      "commit_id" : "4dee1ea5cb061bef9fd1b61e04dc128b3e097204",
      "created_at" : "2018-04-13T18:29:50Z",
      "diff_hunk" : "@@ -573,7 +573,8 @@ def send_txs_and_test(self, txs, rpc, success=True, reject_code=None, reject_rea\n         for tx in txs:\n             self.send_message(msg_tx(tx))\n \n-        self.sync_with_ping()\n+        if not expect_disconnect:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181473709",
      "id" : 181473709,
      "original_commit_id" : "aaaa4569b1ef49ce6f031325f03d171de55d8419",
      "original_position" : 14,
      "path" : "test/functional/test_framework/mininode.py",
      "position" : null,
      "pull_request_review_id" : 112109784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935",
      "updated_at" : "2018-04-14T16:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181473709",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181477903"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181477903"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "More test description would be helpful here (it took me a while to figure it out): Test confirms that mininode 1 doesn't get disconnected right away after sending the node an invalid orphan transaction. It then confirms mininode 1 is disconnected later when mininode 0 provides the missing parent which makes it possible to detect the orphan was invalid.\r\n\r\nAt least this explains the `tx_withhold` and `tx_orphan_2_invalid` parts of the new test. I still don't know why `tx_orphan_1`, `tx_orphan_2_no_fee`, and `tx_orphan_2_valid` are added and what they are testing for.",
      "commit_id" : "4dee1ea5cb061bef9fd1b61e04dc128b3e097204",
      "created_at" : "2018-04-13T18:45:12Z",
      "diff_hunk" : "@@ -44,12 +65,48 @@ def run_test(self):\n \n         # b'\\x64' is OP_NOTIF\n         # Transaction will be rejected with code 16 (REJECT_INVALID)\n+        self.log.info('Test a transaction that is rejected')\n         tx1 = create_transaction(block1.vtx[0], 0, b'\\x64', 50 * COIN - 12000)\n-        node.p2p.send_txs_and_test([tx1], node, success=False, reject_code=16, reject_reason=b'mandatory-script-verify-flag-failed (Invalid OP_IF construction)')\n+        node.p2p.send_txs_and_test([tx1], node, success=False, expect_disconnect=True)\n+        self.reconnect_p2p(additional_conn=True)  # Add one more (that is later disconnected)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181477903",
      "id" : 181477903,
      "original_commit_id" : "aaaa4569b1ef49ce6f031325f03d171de55d8419",
      "original_position" : 61,
      "path" : "test/functional/p2p_invalid_tx.py",
      "position" : null,
      "pull_request_review_id" : 112109784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935",
      "updated_at" : "2018-04-14T16:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181477903",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181478907"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181478907"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What is \"may be rejected by policy\" referring to and which transactions does it apply to?",
      "commit_id" : "4dee1ea5cb061bef9fd1b61e04dc128b3e097204",
      "created_at" : "2018-04-13T18:49:05Z",
      "diff_hunk" : "@@ -44,12 +65,48 @@ def run_test(self):\n \n         # b'\\x64' is OP_NOTIF\n         # Transaction will be rejected with code 16 (REJECT_INVALID)\n+        self.log.info('Test a transaction that is rejected')\n         tx1 = create_transaction(block1.vtx[0], 0, b'\\x64', 50 * COIN - 12000)\n-        node.p2p.send_txs_and_test([tx1], node, success=False, reject_code=16, reject_reason=b'mandatory-script-verify-flag-failed (Invalid OP_IF construction)')\n+        node.p2p.send_txs_and_test([tx1], node, success=False, expect_disconnect=True)\n+        self.reconnect_p2p(additional_conn=True)  # Add one more (that is later disconnected)\n+\n+        self.log.info('Test orphan transaction handling ... ')\n+        tx_withhold = CTransaction()\n+        tx_withhold.vin.append(CTxIn(outpoint=COutPoint(block1.vtx[0].sha256, 0)))\n+        tx_withhold.vout.append(CTxOut(nValue=50 * COIN - 12000, scriptPubKey=b'\\x51'))\n+        tx_withhold.calc_sha256()\n+\n+        tx_orphan_1 = CTransaction()\n+        tx_orphan_1.vin.append(CTxIn(outpoint=COutPoint(tx_withhold.sha256, 0)))\n+        tx_orphan_1.vout = [CTxOut(nValue=10 * COIN, scriptPubKey=b'\\x51')] * 3\n+        tx_orphan_1.calc_sha256()\n+\n+        tx_orphan_2_no_fee = CTransaction()\n+        tx_orphan_2_no_fee.vin.append(CTxIn(outpoint=COutPoint(tx_orphan_1.sha256, 0)))\n+        tx_orphan_2_no_fee.vout.append(CTxOut(nValue=10 * COIN, scriptPubKey=b'\\x51'))\n+\n+        tx_orphan_2_valid = CTransaction()\n+        tx_orphan_2_valid.vin.append(CTxIn(outpoint=COutPoint(tx_orphan_1.sha256, 1)))\n+        tx_orphan_2_valid.vout.append(CTxOut(nValue=10 * COIN - 12000, scriptPubKey=b'\\x51'))\n+        tx_orphan_2_valid.calc_sha256()\n+\n+        tx_orphan_2_invalid = CTransaction()\n+        tx_orphan_2_invalid.vin.append(CTxIn(outpoint=COutPoint(tx_orphan_1.sha256, 2)))\n+        tx_orphan_2_invalid.vout.append(CTxOut(nValue=11 * COIN, scriptPubKey=b'\\x51'))\n+\n+        self.log.info('Send the orphans ... ')\n+        # Send orphan txs that are valid by consensus, but may be rejected by policy from p2ps[0]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181478907",
      "id" : 181478907,
      "original_commit_id" : "aaaa4569b1ef49ce6f031325f03d171de55d8419",
      "original_position" : 88,
      "path" : "test/functional/p2p_invalid_tx.py",
      "position" : null,
      "pull_request_review_id" : 112109784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935",
      "updated_at" : "2018-04-14T16:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181478907",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181480094"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181480094"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would be nice just for clarity if this could explicitly verify mininode 1 was disconnected and mininode is still connected. I understand the condition is implied from the peer count combined with `expect_disconnect=False` above, but it's not clear why this can't just be tested directly.",
      "commit_id" : "4dee1ea5cb061bef9fd1b61e04dc128b3e097204",
      "created_at" : "2018-04-13T18:52:37Z",
      "diff_hunk" : "@@ -44,12 +65,48 @@ def run_test(self):\n \n         # b'\\x64' is OP_NOTIF\n         # Transaction will be rejected with code 16 (REJECT_INVALID)\n+        self.log.info('Test a transaction that is rejected')\n         tx1 = create_transaction(block1.vtx[0], 0, b'\\x64', 50 * COIN - 12000)\n-        node.p2p.send_txs_and_test([tx1], node, success=False, reject_code=16, reject_reason=b'mandatory-script-verify-flag-failed (Invalid OP_IF construction)')\n+        node.p2p.send_txs_and_test([tx1], node, success=False, expect_disconnect=True)\n+        self.reconnect_p2p(additional_conn=True)  # Add one more (that is later disconnected)\n+\n+        self.log.info('Test orphan transaction handling ... ')\n+        tx_withhold = CTransaction()\n+        tx_withhold.vin.append(CTxIn(outpoint=COutPoint(block1.vtx[0].sha256, 0)))\n+        tx_withhold.vout.append(CTxOut(nValue=50 * COIN - 12000, scriptPubKey=b'\\x51'))\n+        tx_withhold.calc_sha256()\n+\n+        tx_orphan_1 = CTransaction()\n+        tx_orphan_1.vin.append(CTxIn(outpoint=COutPoint(tx_withhold.sha256, 0)))\n+        tx_orphan_1.vout = [CTxOut(nValue=10 * COIN, scriptPubKey=b'\\x51')] * 3\n+        tx_orphan_1.calc_sha256()\n+\n+        tx_orphan_2_no_fee = CTransaction()\n+        tx_orphan_2_no_fee.vin.append(CTxIn(outpoint=COutPoint(tx_orphan_1.sha256, 0)))\n+        tx_orphan_2_no_fee.vout.append(CTxOut(nValue=10 * COIN, scriptPubKey=b'\\x51'))\n+\n+        tx_orphan_2_valid = CTransaction()\n+        tx_orphan_2_valid.vin.append(CTxIn(outpoint=COutPoint(tx_orphan_1.sha256, 1)))\n+        tx_orphan_2_valid.vout.append(CTxOut(nValue=10 * COIN - 12000, scriptPubKey=b'\\x51'))\n+        tx_orphan_2_valid.calc_sha256()\n+\n+        tx_orphan_2_invalid = CTransaction()\n+        tx_orphan_2_invalid.vin.append(CTxIn(outpoint=COutPoint(tx_orphan_1.sha256, 2)))\n+        tx_orphan_2_invalid.vout.append(CTxOut(nValue=11 * COIN, scriptPubKey=b'\\x51'))\n+\n+        self.log.info('Send the orphans ... ')\n+        # Send orphan txs that are valid by consensus, but may be rejected by policy from p2ps[0]\n+        node.p2p.send_txs_and_test([tx_orphan_1, tx_orphan_2_no_fee, tx_orphan_2_valid], node, success=False)\n+        # Send consensus-invalid tx from p2ps[1], they should get disconnected later on\n+        node.p2ps[1].send_txs_and_test([tx_orphan_2_invalid], node, success=False)\n+\n+        self.log.info('Send the withhold tx ... ')\n+        assert_equal(2, len(node.getpeerinfo()))\n+        # The tx itself is successfully accepted, but we should get disconnected anyway\n+        node.p2p.send_txs_and_test([tx_withhold], node, success=True, expect_disconnect=False)\n+        assert_equal(1, len(node.getpeerinfo()))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181480094",
      "id" : 181480094,
      "original_commit_id" : "aaaa4569b1ef49ce6f031325f03d171de55d8419",
      "original_position" : 97,
      "path" : "test/functional/p2p_invalid_tx.py",
      "position" : null,
      "pull_request_review_id" : 112109784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935",
      "updated_at" : "2018-04-14T16:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181480094",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181485154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181485154"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could make sense to rebase the test commit before the refactoring commit, to make it clear existing code is supposed to pass the new test.\r\n\r\nOr maybe just put the new test in a standalone PR if the refactoring is going to be held up by #11775 anyway (https://github.com/bitcoin/bitcoin/pull/12935#discussion_r180830562).",
      "commit_id" : "4dee1ea5cb061bef9fd1b61e04dc128b3e097204",
      "created_at" : "2018-04-13T19:12:07Z",
      "diff_hunk" : "@@ -44,12 +65,48 @@ def run_test(self):\n \n         # b'\\x64' is OP_NOTIF\n         # Transaction will be rejected with code 16 (REJECT_INVALID)\n+        self.log.info('Test a transaction that is rejected')\n         tx1 = create_transaction(block1.vtx[0], 0, b'\\x64', 50 * COIN - 12000)\n-        node.p2p.send_txs_and_test([tx1], node, success=False, reject_code=16, reject_reason=b'mandatory-script-verify-flag-failed (Invalid OP_IF construction)')\n+        node.p2p.send_txs_and_test([tx1], node, success=False, expect_disconnect=True)\n+        self.reconnect_p2p(additional_conn=True)  # Add one more (that is later disconnected)\n+\n+        self.log.info('Test orphan transaction handling ... ')\n+        tx_withhold = CTransaction()\n+        tx_withhold.vin.append(CTxIn(outpoint=COutPoint(block1.vtx[0].sha256, 0)))\n+        tx_withhold.vout.append(CTxOut(nValue=50 * COIN - 12000, scriptPubKey=b'\\x51'))\n+        tx_withhold.calc_sha256()\n+\n+        tx_orphan_1 = CTransaction()\n+        tx_orphan_1.vin.append(CTxIn(outpoint=COutPoint(tx_withhold.sha256, 0)))\n+        tx_orphan_1.vout = [CTxOut(nValue=10 * COIN, scriptPubKey=b'\\x51')] * 3\n+        tx_orphan_1.calc_sha256()\n+\n+        tx_orphan_2_no_fee = CTransaction()\n+        tx_orphan_2_no_fee.vin.append(CTxIn(outpoint=COutPoint(tx_orphan_1.sha256, 0)))\n+        tx_orphan_2_no_fee.vout.append(CTxOut(nValue=10 * COIN, scriptPubKey=b'\\x51'))\n+\n+        tx_orphan_2_valid = CTransaction()\n+        tx_orphan_2_valid.vin.append(CTxIn(outpoint=COutPoint(tx_orphan_1.sha256, 1)))\n+        tx_orphan_2_valid.vout.append(CTxOut(nValue=10 * COIN - 12000, scriptPubKey=b'\\x51'))\n+        tx_orphan_2_valid.calc_sha256()\n+\n+        tx_orphan_2_invalid = CTransaction()\n+        tx_orphan_2_invalid.vin.append(CTxIn(outpoint=COutPoint(tx_orphan_1.sha256, 2)))\n+        tx_orphan_2_invalid.vout.append(CTxOut(nValue=11 * COIN, scriptPubKey=b'\\x51'))\n+\n+        self.log.info('Send the orphans ... ')\n+        # Send orphan txs that are valid by consensus, but may be rejected by policy from p2ps[0]\n+        node.p2p.send_txs_and_test([tx_orphan_1, tx_orphan_2_no_fee, tx_orphan_2_valid], node, success=False)\n+        # Send consensus-invalid tx from p2ps[1], they should get disconnected later on\n+        node.p2ps[1].send_txs_and_test([tx_orphan_2_invalid], node, success=False)\n+\n+        self.log.info('Send the withhold tx ... ')\n+        assert_equal(2, len(node.getpeerinfo()))\n+        # The tx itself is successfully accepted, but we should get disconnected anyway\n+        node.p2p.send_txs_and_test([tx_withhold], node, success=True, expect_disconnect=False)\n+        assert_equal(1, len(node.getpeerinfo()))\n \n-        # Verify valid transaction\n-        tx1 = create_transaction(block1.vtx[0], 0, b'', 50 * COIN - 12000)\n-        node.p2p.send_txs_and_test([tx1], node, success=True)\n+        assert_equal({t.hash for t in [tx_withhold, tx_orphan_1, tx_orphan_2_valid]}, set(node.getrawmempool()))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181485154",
      "id" : 181485154,
      "original_commit_id" : "aaaa4569b1ef49ce6f031325f03d171de55d8419",
      "original_position" : 102,
      "path" : "test/functional/p2p_invalid_tx.py",
      "position" : null,
      "pull_request_review_id" : 112109784,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935",
      "updated_at" : "2018-04-14T16:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181485154",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181497585"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181497585"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree. Should be fixed in both places.",
      "commit_id" : "4dee1ea5cb061bef9fd1b61e04dc128b3e097204",
      "created_at" : "2018-04-13T20:07:27Z",
      "diff_hunk" : "@@ -6,24 +6,45 @@\n \n In this test we connect to one node over p2p, and test tx requests.\"\"\"\n from test_framework.blocktools import create_block, create_coinbase, create_transaction\n-from test_framework.messages import COIN\n-from test_framework.mininode import network_thread_start, P2PDataStore\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxOut,\n+)\n+from test_framework.mininode import network_thread_start, P2PDataStore, network_thread_join\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n \n-class InvalidTxRequestTest(BitcoinTestFramework):\n \n+class InvalidTxRequestTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n-        self.extra_args = [[\"-whitelist=127.0.0.1\"]]\n+\n+    def reconnect_p2p(self, additional_conn=False):\n+        \"\"\"Add a P2P connection to the node.\n+\n+        The node gets disconnected several times in this test. This helper\n+        method reconnects the p2p and restarts the network thread.\"\"\"\n+\n+        network_thread_join()\n+        self.nodes[0].disconnect_p2ps()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181497585",
      "id" : 181497585,
      "in_reply_to_id" : 181469335,
      "original_commit_id" : "aaaa4569b1ef49ce6f031325f03d171de55d8419",
      "original_position" : 34,
      "path" : "test/functional/p2p_invalid_tx.py",
      "position" : null,
      "pull_request_review_id" : 112143964,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/12935",
      "updated_at" : "2018-04-14T16:04:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181497585",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
