{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Fix bug in the descriptor parsing fuzzing harness (`descriptor_parse`) by making sure `secp256k1_context_verify` is properly initialized (via `ECCVerifyHandle`).\r\n\r\nBackground:\r\n\r\nWhen fuzzing `Parse(â¦)` with `libFuzzer` I eventually reached the test case `combo(020000000000000000000000000000000000000000000000000000000000000000)`. That input triggers a call to `CPubKey::IsFullyValid()` which in turns requires an initialized `secp256k1_context_verify`.\r\n\r\nThe fuzzing harness did not fulfil that pre-condition prior to this commit (sorry, my fault!) :)\r\n\r\nBefore:\r\n\r\n```\r\n$ mkdir descriptors/\r\n$ echo -n 'combo(020000000000000000000000000000000000000000000000000000000000000000)' > descriptors/input\r\n$ UBSAN_OPTIONS=\"print_stacktrace=1:halt_on_error=1\" src/test/fuzz/descriptor_parse -runs=1 descriptors/\r\nâ¦\r\npubkey.cpp:210:38: runtime error: null pointer passed as argument 1, which is declared to never be null\r\nsecp256k1/include/secp256k1.h:305:3: note: nonnull attribute specified here\r\n    #0 0x561c032ccf25 in CPubKey::IsFullyValid() const src/pubkey.cpp:210:12\r\n    #1 0x561c022139c3 in (anonymous namespace)::ParsePubkeyInner(Span<char const> const&, bool, FlatSigningProvider&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) src/script/descriptor.cpp:674:24\r\n    #2 0x561c02207680 in (anonymous namespace)::ParsePubkey(Span<char const> const&, bool, FlatSigningProvider&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) src/script/descriptor.cpp:730:42\r\n    #3 0x561c0220080e in (anonymous namespace)::ParseScript(Span<char const>&, (anonymous namespace)::ParseScriptContext, FlatSigningProvider&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) src/script/descriptor.cpp:774:23\r\n    #4 0x561c021ffb07 in Parse(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, FlatSigningProvider&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool) src/script/descriptor.cpp:994:16\r\n    #5 0x561c0218d5d4 in test_one_input(std::vector<unsigned char, std::allocator<unsigned char> > const&) src/test/fuzz/descriptor_parse.cpp:20:9\r\nâ¦\r\n$\r\n```\r\n\r\nAfter:\r\n\r\n```\r\n$ mkdir descriptors/\r\n$ echo -n 'combo(020000000000000000000000000000000000000000000000000000000000000000)' > descriptors/input\r\n$ UBSAN_OPTIONS=\"print_stacktrace=1:halt_on_error=1\" src/test/fuzz/descriptor_parse -runs=1 descriptors/\r\nâ¦\r\nDone 2 runs in 0 second(s)\r\n$\r\n```",
   "closed_at" : "2019-12-08T18:18:06Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 6,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17685/comments",
   "created_at" : "2019-12-06T18:44:09Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17685/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/17685",
   "id" : 534199983,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17685/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MzUwMTUxOTQ2",
   "number" : 17685,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/17685.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17685",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/17685.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17685"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "tests: Fix bug in the descriptor parsing fuzzing harness (descriptor_parse)",
   "updated_at" : "2019-12-08T18:18:06Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17685",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
