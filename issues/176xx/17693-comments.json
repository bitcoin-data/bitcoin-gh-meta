[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17479 (Return BlockValidationState from ProcessNewBlock if CheckBlock/AcceptBlock fails by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-12-07T23:13:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#issuecomment-562895071",
      "id" : 562895071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17693",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2Mjg5NTA3MQ==",
      "updated_at" : "2020-03-22T05:30:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562895071",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2020-01-02T23:21:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#issuecomment-570395703",
      "id" : 570395703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17693",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MDM5NTcwMw==",
      "updated_at" : "2020-01-02T23:21:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570395703",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "~~Concept NACK,~~ just make the block and submit it in the test suite...",
      "created_at" : "2020-01-03T19:06:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#issuecomment-570667415",
      "id" : 570667415,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17693",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MDY2NzQxNQ==",
      "updated_at" : "2020-01-05T16:37:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570667415",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@luke-jr What if there is no \"test suite\"? Usually when testing a system that talks to bitcoind with regtest I use cli to send from bitcoind wallet and `generatetoaddress` to mine blocks. With this setup it is very difficult to simulate double spend without having a second bitcoind and doing an extensive workaround. This seems to have a decent amount of interest, since this PR had a thumbs up and the original PR #17653 had two concept ACKs. Also, #16523 was created for this same purpose.",
      "created_at" : "2020-01-05T16:14:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#issuecomment-570925533",
      "id" : 570925533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17693",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MDkyNTUzMw==",
      "updated_at" : "2020-01-05T16:14:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570925533",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Fair enough. Concept NACK retracted.",
      "created_at" : "2020-01-05T16:37:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#issuecomment-570927375",
      "id" : 570927375,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17693",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MDkyNzM3NQ==",
      "updated_at" : "2020-01-05T16:37:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570927375",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "concept ACK, we need it to test our systems as well",
      "created_at" : "2020-02-20T15:23:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#issuecomment-589117273",
      "id" : 589117273,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17693",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4OTExNzI3Mw==",
      "updated_at" : "2020-02-20T15:23:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589117273",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393184185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393184185"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Needs rebase",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-16T17:12:41Z",
      "diff_hunk" : "@@ -224,6 +241,95 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n     return generateBlocks(mempool, coinbase_script, nGenerate, nMaxTries);\n }\n \n+static UniValue generateblock(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"generateblock\",\n+        \"\\nMine a block with a set of transactions immediately to a specified address or descriptor (before the RPC call returns)\\n\",\n+        {\n+            {\"address/descriptor\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The address or descriptor to send the newly generated bitcoin to.\"},\n+            {\"transactions\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of hex strings which are either txids or raw transactions.\\n\"\n+                \"Txids must reference transactions currently in the mempool.\",\n+                {\n+                    {\"rawtx/txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            }\n+        },\n+        RPCResult{\n+            \"blockhash     (hex) hash of generated block\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393184185",
      "id" : 393184185,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4NDE4NQ==",
      "original_commit_id" : "643d3514608892f89624eb7aaf4a9951b67ff8f3",
      "original_line" : 258,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : null,
      "pull_request_review_id" : 375422084,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393184185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393377634"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393377634"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What do you need `BlockAssembler` for when you have a preselected set of transactions? Can't you construct a `CBlockTemplate` directly?",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-17T00:09:24Z",
      "diff_hunk" : "@@ -81,15 +81,13 @@ void BlockAssembler::resetBlock()\n     nBlockSigOpsCost = 400;\n     fIncludeWitness = false;\n \n-    // These counters do not include coinbase tx\n-    nBlockTx = 0;\n     nFees = 0;\n }\n \n Optional<int64_t> BlockAssembler::m_last_block_num_txs{nullopt};\n Optional<int64_t> BlockAssembler::m_last_block_weight{nullopt};\n \n-std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn)\n+std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn, const std::vector<CTransactionRef>* preselected_txs)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393377634",
      "id" : 393377634,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3NzYzNA==",
      "original_commit_id" : "226b38b716a9e558a7552bca6364a812c9e23cb4",
      "original_line" : 90,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/miner.cpp",
      "position" : null,
      "pull_request_review_id" : 375660904,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393377634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on having an RPC that can do this, but I'm not convinced about the approach (see comment elsewhere).",
      "created_at" : "2020-03-17T00:10:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#issuecomment-599813644",
      "id" : 599813644,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17693",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5OTgxMzY0NA==",
      "updated_at" : "2020-03-17T00:10:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599813644",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393384945"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393384945"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I did initially https://github.com/bitcoin/bitcoin/pull/17653/commits/b0745f8dc517501f612b56a0cee726e5bc4c4c8c but @instagibbs suggested I take this approach instead https://github.com/bitcoin/bitcoin/pull/17653#issuecomment-561225955. Now I'm not sure which is better, duplicating a lot of code from `BlockAssembler` or modifying it to support adding preselected txs.",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-17T00:40:43Z",
      "diff_hunk" : "@@ -81,15 +81,13 @@ void BlockAssembler::resetBlock()\n     nBlockSigOpsCost = 400;\n     fIncludeWitness = false;\n \n-    // These counters do not include coinbase tx\n-    nBlockTx = 0;\n     nFees = 0;\n }\n \n Optional<int64_t> BlockAssembler::m_last_block_num_txs{nullopt};\n Optional<int64_t> BlockAssembler::m_last_block_weight{nullopt};\n \n-std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn)\n+std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn, const std::vector<CTransactionRef>* preselected_txs)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393384945",
      "id" : 393384945,
      "in_reply_to_id" : 393377634,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4NDk0NQ==",
      "original_commit_id" : "226b38b716a9e558a7552bca6364a812c9e23cb4",
      "original_line" : 90,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/miner.cpp",
      "position" : null,
      "pull_request_review_id" : 375669858,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393384945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'll take another look this week. Maybe I need to see the approaches side\nby side.\nOn Mon, Mar 16, 2020, 8:40 PM andrewtoth <notifications@github.com> wrote:\n\n> *@andrewtoth* commented on this pull request.\n> ------------------------------\n>\n> In src/miner.cpp\n> <https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393384945>:\n>\n> >      nFees = 0;\n>  }\n>\n>  Optional<int64_t> BlockAssembler::m_last_block_num_txs{nullopt};\n>  Optional<int64_t> BlockAssembler::m_last_block_weight{nullopt};\n>\n> -std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn)\n> +std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn, const std::vector<CTransactionRef>* preselected_txs)\n>\n> I did initially b0745f8\n> <https://github.com/bitcoin/bitcoin/commit/b0745f8dc517501f612b56a0cee726e5bc4c4c8c>\n> but @instagibbs <https://github.com/instagibbs> suggested I take this\n> approach instead #17653 (comment)\n> <https://github.com/bitcoin/bitcoin/pull/17653#issuecomment-561225955>.\n> Now I'm not sure which is better, duplicating a lot of code from\n> BlockAssembler or modifying it to support adding preselected txs.\n>\n> â\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393384945>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABMAFU44MHTZUALQHO6WUSTRH3BJVANCNFSM4JXP3YZQ>\n> .\n>\n",
      "created_at" : "2020-03-17T01:06:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#issuecomment-599826257",
      "id" : 599826257,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17693",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5OTgyNjI1Nw==",
      "updated_at" : "2020-03-17T01:06:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599826257",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok, I see. But the first iteration of the code was duplicating everything, including the grinding. I'm suggesting not duplicating the grinding, but by just constructing a BlockTemplate directly, instead of overloading BlockAssembler to do that.",
      "created_at" : "2020-03-17T01:09:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#issuecomment-599826971",
      "id" : 599826971,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17693",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5OTgyNjk3MQ==",
      "updated_at" : "2020-03-17T01:09:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599826971",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa updated with your suggestion.",
      "created_at" : "2020-03-17T04:34:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#issuecomment-599872808",
      "id" : 599872808,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17693",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5OTg3MjgwOA==",
      "updated_at" : "2020-03-17T04:34:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599872808",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393680472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393680472"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the string does not need to be wrapped in an object and can be returned as is.",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-17T13:31:54Z",
      "diff_hunk" : "@@ -228,6 +297,98 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n     return generateBlocks(mempool, coinbase_script, nGenerate, nMaxTries);\n }\n \n+static UniValue generateblock(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"generateblock\",\n+        \"\\nMine a block with a set of transactions immediately to a specified address or descriptor (before the RPC call returns)\\n\",\n+        {\n+            {\"address/descriptor\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The address or descriptor to send the newly generated bitcoin to.\"},\n+            {\"transactions\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of hex strings which are either txids or raw transactions.\\n\"\n+                \"Txids must reference transactions currently in the mempool.\",\n+                {\n+                    {\"rawtx/txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            }\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393680472",
      "id" : 393680472,
      "line" : 289,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4MDQ3Mg==",
      "original_commit_id" : "718796afa63a6001decebc7845b5b9e891013e75",
      "original_line" : 289,
      "original_position" : 144,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : 158,
      "pull_request_review_id" : 376035231,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393680472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393692622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393692622"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is this code moved into this function? It could stay at the original place and here you just pass in a `shared_ptr` of the resulting block?",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-17T13:49:59Z",
      "diff_hunk" : "@@ -100,6 +100,88 @@ static UniValue getnetworkhashps(const JSONRPCRequest& request)\n     return GetNetworkHashPS(!request.params[0].isNull() ? request.params[0].get_int() : 120, !request.params[1].isNull() ? request.params[1].get_int() : -1);\n }\n \n+static bool GenerateBlock(const CTxMemPool& mempool, const CScript& coinbase_script, const std::vector<CTransactionRef>* preselected_txs, uint64_t& max_tries, unsigned int& extra_nonce, uint256& block_hash)\n+{\n+    block_hash.SetNull();\n+\n+    CBlock block;\n+    CChainParams chainparams(Params());\n+\n+    if (!preselected_txs) {\n+        std::unique_ptr<CBlockTemplate> pblocktemplate(BlockAssembler(mempool, chainparams).CreateNewBlock(coinbase_script));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393692622",
      "id" : 393692622,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5MjYyMg==",
      "original_commit_id" : "718796afa63a6001decebc7845b5b9e891013e75",
      "original_line" : 111,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : null,
      "pull_request_review_id" : 376035231,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393692622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393695690"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393695690"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is this code (and the lines above it) in this function? It could be either inlined in the rpc, or if you prefer wrapped into another function that returns a `shared_ptr` of the block, which gets then passed in here.\r\n\r\nThis makes this function simpler (has one purpose: mining) and has less redundant parameters passed in (like the mempool, which is not needed in this branch at all)",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-17T13:54:31Z",
      "diff_hunk" : "@@ -100,6 +100,88 @@ static UniValue getnetworkhashps(const JSONRPCRequest& request)\n     return GetNetworkHashPS(!request.params[0].isNull() ? request.params[0].get_int() : 120, !request.params[1].isNull() ? request.params[1].get_int() : -1);\n }\n \n+static bool GenerateBlock(const CTxMemPool& mempool, const CScript& coinbase_script, const std::vector<CTransactionRef>* preselected_txs, uint64_t& max_tries, unsigned int& extra_nonce, uint256& block_hash)\n+{\n+    block_hash.SetNull();\n+\n+    CBlock block;\n+    CChainParams chainparams(Params());\n+\n+    if (!preselected_txs) {\n+        std::unique_ptr<CBlockTemplate> pblocktemplate(BlockAssembler(mempool, chainparams).CreateNewBlock(coinbase_script));\n+        if (!pblocktemplate.get())\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Couldn't create new block\");\n+        block = pblocktemplate->block;\n+        {\n+            LOCK(cs_main);\n+            IncrementExtraNonce(&block, ::ChainActive().Tip(), extra_nonce);\n+        }\n+    } else {\n+\n+        CBlockIndex* previous_index;\n+        {\n+            LOCK(cs_main);\n+            previous_index = ::ChainActive().Tip();\n+        }\n+        CHECK_NONFATAL(previous_index != nullptr);\n+\n+        const int height = previous_index->nHeight + 1;\n+\n+        // Create coinbase transaction.\n+        CMutableTransaction coinbase_tx;\n+        coinbase_tx.vin.resize(1);\n+        coinbase_tx.vin[0].prevout.SetNull();\n+        coinbase_tx.vout.resize(1);\n+        coinbase_tx.vout[0].scriptPubKey = coinbase_script;\n+        coinbase_tx.vout[0].nValue = GetBlockSubsidy(height, chainparams.GetConsensus());\n+        coinbase_tx.vin[0].scriptSig = CScript() << height << OP_0;\n+        block.vtx.push_back(MakeTransactionRef(std::move(coinbase_tx)));\n+\n+        // Add transactions\n+        block.vtx.insert(block.vtx.end(), preselected_txs->begin(), preselected_txs->end());\n+\n+        block.nVersion = ComputeBlockVersion(previous_index, chainparams.GetConsensus());\n+        if (chainparams.MineBlocksOnDemand())\n+            block.nVersion = gArgs.GetArg(\"-blockversion\", block.nVersion);\n+\n+        // Fill in header\n+        block.hashPrevBlock = previous_index->GetBlockHash();\n+        block.nTime = GetAdjustedTime();\n+        UpdateTime(&block, chainparams.GetConsensus(), previous_index);\n+        block.nBits = GetNextWorkRequired(previous_index, &block, chainparams.GetConsensus());\n+        block.nNonce = 0;\n+\n+        GenerateCoinbaseCommitment(block, previous_index, chainparams.GetConsensus());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393695690",
      "id" : 393695690,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5NTY5MA==",
      "original_commit_id" : "718796afa63a6001decebc7845b5b9e891013e75",
      "original_line" : 154,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : null,
      "pull_request_review_id" : 376035231,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393695690",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393700854"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393700854"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I was attempting to follow the guidelines from https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#rpc-interface-guidelines: \r\n\r\n- Try to make the RPC response a JSON object.\r\n\r\n  - *Rationale*: If a RPC response is not a JSON object, then it is harder to avoid API breakage if\r\n    new data in the response is needed.\r\n",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-17T14:01:59Z",
      "diff_hunk" : "@@ -228,6 +297,98 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n     return generateBlocks(mempool, coinbase_script, nGenerate, nMaxTries);\n }\n \n+static UniValue generateblock(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"generateblock\",\n+        \"\\nMine a block with a set of transactions immediately to a specified address or descriptor (before the RPC call returns)\\n\",\n+        {\n+            {\"address/descriptor\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The address or descriptor to send the newly generated bitcoin to.\"},\n+            {\"transactions\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of hex strings which are either txids or raw transactions.\\n\"\n+                \"Txids must reference transactions currently in the mempool.\",\n+                {\n+                    {\"rawtx/txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            }\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393700854",
      "id" : 393700854,
      "in_reply_to_id" : 393680472,
      "line" : 289,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMDg1NA==",
      "original_commit_id" : "718796afa63a6001decebc7845b5b9e891013e75",
      "original_line" : 289,
      "original_position" : 144,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : 158,
      "pull_request_review_id" : 376062042,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393700854",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393717939"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393717939"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Interesting, I forgot about that. Thanks for reminding.",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-17T14:25:23Z",
      "diff_hunk" : "@@ -228,6 +297,98 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n     return generateBlocks(mempool, coinbase_script, nGenerate, nMaxTries);\n }\n \n+static UniValue generateblock(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"generateblock\",\n+        \"\\nMine a block with a set of transactions immediately to a specified address or descriptor (before the RPC call returns)\\n\",\n+        {\n+            {\"address/descriptor\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The address or descriptor to send the newly generated bitcoin to.\"},\n+            {\"transactions\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of hex strings which are either txids or raw transactions.\\n\"\n+                \"Txids must reference transactions currently in the mempool.\",\n+                {\n+                    {\"rawtx/txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            }\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393717939",
      "id" : 393717939,
      "in_reply_to_id" : 393680472,
      "line" : 289,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcxNzkzOQ==",
      "original_commit_id" : "718796afa63a6001decebc7845b5b9e891013e75",
      "original_line" : 289,
      "original_position" : 144,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : 158,
      "pull_request_review_id" : 376084129,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393717939",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393719475"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393719475"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's a great guideline, glad it's written down!",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-17T14:27:24Z",
      "diff_hunk" : "@@ -228,6 +297,98 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n     return generateBlocks(mempool, coinbase_script, nGenerate, nMaxTries);\n }\n \n+static UniValue generateblock(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"generateblock\",\n+        \"\\nMine a block with a set of transactions immediately to a specified address or descriptor (before the RPC call returns)\\n\",\n+        {\n+            {\"address/descriptor\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The address or descriptor to send the newly generated bitcoin to.\"},\n+            {\"transactions\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of hex strings which are either txids or raw transactions.\\n\"\n+                \"Txids must reference transactions currently in the mempool.\",\n+                {\n+                    {\"rawtx/txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            }\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393719475",
      "id" : 393719475,
      "in_reply_to_id" : 393680472,
      "line" : 289,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcxOTQ3NQ==",
      "original_commit_id" : "718796afa63a6001decebc7845b5b9e891013e75",
      "original_line" : 289,
      "original_position" : 144,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : 158,
      "pull_request_review_id" : 376086041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393719475",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393725241"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393725241"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`s/a set of transactions/a set of ordered transactions/` to be pedantic",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-17T14:35:01Z",
      "diff_hunk" : "@@ -228,6 +297,98 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n     return generateBlocks(mempool, coinbase_script, nGenerate, nMaxTries);\n }\n \n+static UniValue generateblock(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"generateblock\",\n+        \"\\nMine a block with a set of transactions immediately to a specified address or descriptor (before the RPC call returns)\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393725241",
      "id" : 393725241,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNTI0MQ==",
      "original_commit_id" : "a2b4adeb7c5ba8bff76cfad7b34694ad5ad1a030",
      "original_line" : 253,
      "original_position" : 133,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : null,
      "pull_request_review_id" : 376093307,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393725241",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393727104"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393727104"
         }
      },
      "author_association" : "MEMBER",
      "body" : "comment for followup only: Allow a bypass of validity check for building block tests via RPC",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-17T14:37:35Z",
      "diff_hunk" : "@@ -100,6 +100,88 @@ static UniValue getnetworkhashps(const JSONRPCRequest& request)\n     return GetNetworkHashPS(!request.params[0].isNull() ? request.params[0].get_int() : 120, !request.params[1].isNull() ? request.params[1].get_int() : -1);\n }\n \n+static bool GenerateBlock(const CTxMemPool& mempool, const CScript& coinbase_script, const std::vector<CTransactionRef>* preselected_txs, uint64_t& max_tries, unsigned int& extra_nonce, uint256& block_hash)\n+{\n+    block_hash.SetNull();\n+\n+    CBlock block;\n+    CChainParams chainparams(Params());\n+\n+    if (!preselected_txs) {\n+        std::unique_ptr<CBlockTemplate> pblocktemplate(BlockAssembler(mempool, chainparams).CreateNewBlock(coinbase_script));\n+        if (!pblocktemplate.get())\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Couldn't create new block\");\n+        block = pblocktemplate->block;\n+        {\n+            LOCK(cs_main);\n+            IncrementExtraNonce(&block, ::ChainActive().Tip(), extra_nonce);\n+        }\n+    } else {\n+\n+        CBlockIndex* previous_index;\n+        {\n+            LOCK(cs_main);\n+            previous_index = ::ChainActive().Tip();\n+        }\n+        CHECK_NONFATAL(previous_index != nullptr);\n+\n+        const int height = previous_index->nHeight + 1;\n+\n+        // Create coinbase transaction.\n+        CMutableTransaction coinbase_tx;\n+        coinbase_tx.vin.resize(1);\n+        coinbase_tx.vin[0].prevout.SetNull();\n+        coinbase_tx.vout.resize(1);\n+        coinbase_tx.vout[0].scriptPubKey = coinbase_script;\n+        coinbase_tx.vout[0].nValue = GetBlockSubsidy(height, chainparams.GetConsensus());\n+        coinbase_tx.vin[0].scriptSig = CScript() << height << OP_0;\n+        block.vtx.push_back(MakeTransactionRef(std::move(coinbase_tx)));\n+\n+        // Add transactions\n+        block.vtx.insert(block.vtx.end(), preselected_txs->begin(), preselected_txs->end());\n+\n+        block.nVersion = ComputeBlockVersion(previous_index, chainparams.GetConsensus());\n+        if (chainparams.MineBlocksOnDemand())\n+            block.nVersion = gArgs.GetArg(\"-blockversion\", block.nVersion);\n+\n+        // Fill in header\n+        block.hashPrevBlock = previous_index->GetBlockHash();\n+        block.nTime = GetAdjustedTime();\n+        UpdateTime(&block, chainparams.GetConsensus(), previous_index);\n+        block.nBits = GetNextWorkRequired(previous_index, &block, chainparams.GetConsensus());\n+        block.nNonce = 0;\n+\n+        GenerateCoinbaseCommitment(block, previous_index, chainparams.GetConsensus());\n+\n+        {\n+            LOCK(cs_main);\n+            IncrementExtraNonce(&block, ::ChainActive().Tip(), extra_nonce);\n+\n+            BlockValidationState state;\n+            if (!TestBlockValidity(state, chainparams, block, previous_index, false, false)) {\n+                throw JSONRPCError(RPC_VERIFY_ERROR, strprintf(\"TestBlockValidity failed: %s\", state.ToString()));\n+            }\n+        }\n+    }\n+\n+    while (max_tries > 0 && block.nNonce < std::numeric_limits<uint32_t>::max() && !CheckProofOfWork(block.GetHash(), block.nBits, chainparams.GetConsensus()) && !ShutdownRequested()) {\n+        ++block.nNonce;\n+        --max_tries;\n+    }\n+    if (max_tries == 0 || ShutdownRequested()) {\n+        return false;\n+    }\n+    if (block.nNonce == std::numeric_limits<uint32_t>::max()) {\n+        return true;\n+    }\n+    std::shared_ptr<const CBlock> shared_pblock = std::make_shared<const CBlock>(block);\n+    if (!ProcessNewBlock(chainparams, shared_pblock, true, nullptr))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393727104",
      "id" : 393727104,
      "line" : 126,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzEwNA==",
      "original_commit_id" : "a2b4adeb7c5ba8bff76cfad7b34694ad5ad1a030",
      "original_line" : 126,
      "original_position" : 79,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : 27,
      "pull_request_review_id" : 376093307,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393727104",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393727789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393727789"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also note the block constructed must have all valid transactions and transaction ordering, otherwise it will be rejected.",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-17T14:38:33Z",
      "diff_hunk" : "@@ -228,6 +297,98 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n     return generateBlocks(mempool, coinbase_script, nGenerate, nMaxTries);\n }\n \n+static UniValue generateblock(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"generateblock\",\n+        \"\\nMine a block with a set of transactions immediately to a specified address or descriptor (before the RPC call returns)\\n\",\n+        {\n+            {\"address/descriptor\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The address or descriptor to send the newly generated bitcoin to.\"},\n+            {\"transactions\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of hex strings which are either txids or raw transactions.\\n\"\n+                \"Txids must reference transactions currently in the mempool.\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393727789",
      "id" : 393727789,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNzc4OQ==",
      "original_commit_id" : "a2b4adeb7c5ba8bff76cfad7b34694ad5ad1a030",
      "original_line" : 257,
      "original_position" : 137,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : null,
      "pull_request_review_id" : 376093307,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393727789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r396147210"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396147210"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Separated the code out.",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-22T22:12:33Z",
      "diff_hunk" : "@@ -100,6 +100,88 @@ static UniValue getnetworkhashps(const JSONRPCRequest& request)\n     return GetNetworkHashPS(!request.params[0].isNull() ? request.params[0].get_int() : 120, !request.params[1].isNull() ? request.params[1].get_int() : -1);\n }\n \n+static bool GenerateBlock(const CTxMemPool& mempool, const CScript& coinbase_script, const std::vector<CTransactionRef>* preselected_txs, uint64_t& max_tries, unsigned int& extra_nonce, uint256& block_hash)\n+{\n+    block_hash.SetNull();\n+\n+    CBlock block;\n+    CChainParams chainparams(Params());\n+\n+    if (!preselected_txs) {\n+        std::unique_ptr<CBlockTemplate> pblocktemplate(BlockAssembler(mempool, chainparams).CreateNewBlock(coinbase_script));\n+        if (!pblocktemplate.get())\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Couldn't create new block\");\n+        block = pblocktemplate->block;\n+        {\n+            LOCK(cs_main);\n+            IncrementExtraNonce(&block, ::ChainActive().Tip(), extra_nonce);\n+        }\n+    } else {\n+\n+        CBlockIndex* previous_index;\n+        {\n+            LOCK(cs_main);\n+            previous_index = ::ChainActive().Tip();\n+        }\n+        CHECK_NONFATAL(previous_index != nullptr);\n+\n+        const int height = previous_index->nHeight + 1;\n+\n+        // Create coinbase transaction.\n+        CMutableTransaction coinbase_tx;\n+        coinbase_tx.vin.resize(1);\n+        coinbase_tx.vin[0].prevout.SetNull();\n+        coinbase_tx.vout.resize(1);\n+        coinbase_tx.vout[0].scriptPubKey = coinbase_script;\n+        coinbase_tx.vout[0].nValue = GetBlockSubsidy(height, chainparams.GetConsensus());\n+        coinbase_tx.vin[0].scriptSig = CScript() << height << OP_0;\n+        block.vtx.push_back(MakeTransactionRef(std::move(coinbase_tx)));\n+\n+        // Add transactions\n+        block.vtx.insert(block.vtx.end(), preselected_txs->begin(), preselected_txs->end());\n+\n+        block.nVersion = ComputeBlockVersion(previous_index, chainparams.GetConsensus());\n+        if (chainparams.MineBlocksOnDemand())\n+            block.nVersion = gArgs.GetArg(\"-blockversion\", block.nVersion);\n+\n+        // Fill in header\n+        block.hashPrevBlock = previous_index->GetBlockHash();\n+        block.nTime = GetAdjustedTime();\n+        UpdateTime(&block, chainparams.GetConsensus(), previous_index);\n+        block.nBits = GetNextWorkRequired(previous_index, &block, chainparams.GetConsensus());\n+        block.nNonce = 0;\n+\n+        GenerateCoinbaseCommitment(block, previous_index, chainparams.GetConsensus());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r396147210",
      "id" : 396147210,
      "in_reply_to_id" : 393695690,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0NzIxMA==",
      "original_commit_id" : "718796afa63a6001decebc7845b5b9e891013e75",
      "original_line" : 154,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : null,
      "pull_request_review_id" : 379052975,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396147210",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r396495830"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396495830"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't really like duplicating every single line of CreateNewBlock. After #17781 there is no reason that we can't just pass an empty mempool to the miner and get an empty block out.\r\n\r\nSee here:\r\n\r\n```diff\r\ndiff --git a/src/miner.cpp b/src/miner.cpp\r\nindex 61d27d17c1..b769121d97 100644\r\n--- a/src/miner.cpp\r\n+++ b/src/miner.cpp\r\n@@ -39,6 +39,17 @@ int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParam\r\n     return nNewTime - nOldTime;\r\n }\r\n \r\n+void ReGenerateCommitments(CBlock& block)\r\n+{\r\n+    CMutableTransaction tx{*block.vtx.at(0)};\r\n+    tx.vout.erase(tx.vout.begin() + GetWitnessCommitmentIndex(block));\r\n+    block.vtx.at(0) = MakeTransactionRef(tx);\r\n+\r\n+    GenerateCoinbaseCommitment(block, WITH_LOCK(cs_main, return LookupBlockIndex(block.hashPrevBlock)), Params().GetConsensus());\r\n+\r\n+    block.hashMerkleRoot = BlockMerkleRoot(block);\r\n+}\r\n+\r\n BlockAssembler::Options::Options() {\r\n     blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\r\n     nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\r\ndiff --git a/src/miner.h b/src/miner.h\r\nindex cc8fc31a9f..fee02b591d 100644\r\n--- a/src/miner.h\r\n+++ b/src/miner.h\r\n@@ -203,4 +203,7 @@ private:\r\n void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned int& nExtraNonce);\r\n int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev);\r\n \r\n+/** Update an old GenerateCoinbaseCommitment from CreateNewBlock after the block txs have changed */\r\n+void ReGenerateCommitments(CBlock& block);\r\n+\r\n #endif // BITCOIN_MINER_H\r\ndiff --git a/src/rpc/mining.cpp b/src/rpc/mining.cpp\r\nindex 007d9253a1..58aaccd1c3 100644\r\n--- a/src/rpc/mining.cpp\r\n+++ b/src/rpc/mining.cpp\r\n@@ -104,6 +104,11 @@ static bool GenerateBlock(CBlock& block, uint64_t& max_tries, unsigned int& extr\r\n {\r\n     block_hash.SetNull();\r\n \r\n+        {\r\n+            LOCK(cs_main);\r\n+            IncrementExtraNonce(&block, ::ChainActive().Tip(), extra_nonce);\r\n+        }\r\n+\r\n     CChainParams chainparams(Params());\r\n \r\n     while (max_tries > 0 && block.nNonce < std::numeric_limits<uint32_t>::max() && !CheckProofOfWork(block.GetHash(), block.nBits, chainparams.GetConsensus()) && !ShutdownRequested()) {\r\n@@ -143,11 +148,6 @@ static UniValue generateBlocks(const CTxMemPool& mempool, const CScript& coinbas\r\n         if (!pblocktemplate.get())\r\n             throw JSONRPCError(RPC_INTERNAL_ERROR, \"Couldn't create new block\");\r\n         CBlock *pblock = &pblocktemplate->block;\r\n-        {\r\n-            LOCK(cs_main);\r\n-            IncrementExtraNonce(pblock, ::ChainActive().Tip(), nExtraNonce);\r\n-        }\r\n-\r\n         uint256 block_hash;\r\n         if (!GenerateBlock(*pblock, nMaxTries, nExtraNonce, block_hash)) {\r\n             break;\r\n@@ -329,51 +329,29 @@ static UniValue generateblock(const JSONRPCRequest& request)\r\n         }\r\n     }\r\n \r\n-    CChainParams chainparams(Params());\r\n+    const CChainParams& chainparams = Params();\r\n+    unsigned int extra_nonce{0};\r\n     CBlock block;\r\n-\r\n-    CBlockIndex* previous_index;\r\n     {\r\n         LOCK(cs_main);\r\n-        previous_index = ::ChainActive().Tip();\r\n-    }\r\n-    CHECK_NONFATAL(previous_index != nullptr);\r\n-\r\n-    const int height = previous_index->nHeight + 1;\r\n \r\n-    // Create coinbase transaction.\r\n-    CMutableTransaction coinbase_tx;\r\n-    coinbase_tx.vin.resize(1);\r\n-    coinbase_tx.vin[0].prevout.SetNull();\r\n-    coinbase_tx.vout.resize(1);\r\n-    coinbase_tx.vout[0].scriptPubKey = coinbase_script;\r\n-    coinbase_tx.vout[0].nValue = GetBlockSubsidy(height, chainparams.GetConsensus());\r\n-    coinbase_tx.vin[0].scriptSig = CScript() << height << OP_0;\r\n-    block.vtx.push_back(MakeTransactionRef(std::move(coinbase_tx)));\r\n+        CTxMemPool empty_pool;\r\n+        std::unique_ptr<CBlockTemplate> blocktemplate(BlockAssembler(empty_pool, chainparams).CreateNewBlock(coinbase_script));\r\n+        if (!blocktemplate) {\r\n+            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Couldn't create new block\");\r\n+        }\r\n+        block = blocktemplate->block;\r\n+        CHECK_NONFATAL(block.vtx.size() == 1);\r\n+    }\r\n \r\n     // Add transactions\r\n     block.vtx.insert(block.vtx.end(), txs.begin(), txs.end());\r\n+    ReGenerateCommitments(block);\r\n \r\n-    block.nVersion = ComputeBlockVersion(previous_index, chainparams.GetConsensus());\r\n-    if (chainparams.MineBlocksOnDemand())\r\n-        block.nVersion = gArgs.GetArg(\"-blockversion\", block.nVersion);\r\n-\r\n-    // Fill in header\r\n-    block.hashPrevBlock = previous_index->GetBlockHash();\r\n-    block.nTime = GetAdjustedTime();\r\n-    UpdateTime(&block, chainparams.GetConsensus(), previous_index);\r\n-    block.nBits = GetNextWorkRequired(previous_index, &block, chainparams.GetConsensus());\r\n-    block.nNonce = 0;\r\n-\r\n-    GenerateCoinbaseCommitment(block, previous_index, chainparams.GetConsensus());\r\n-\r\n-    unsigned int extra_nonce{0};\r\n     {\r\n         LOCK(cs_main);\r\n-        IncrementExtraNonce(&block, ::ChainActive().Tip(), extra_nonce);\r\n-\r\n         BlockValidationState state;\r\n-        if (!TestBlockValidity(state, chainparams, block, previous_index, false, false)) {\r\n+        if (!TestBlockValidity(state, chainparams, block, LookupBlockIndex(block.hashPrevBlock), false, false)) {\r\n             throw JSONRPCError(RPC_VERIFY_ERROR, strprintf(\"TestBlockValidity failed: %s\", state.ToString()));\r\n         }\r\n     }\r\n",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-23T14:33:50Z",
      "diff_hunk" : "@@ -228,6 +248,148 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n     return generateBlocks(mempool, coinbase_script, nGenerate, nMaxTries);\n }\n \n+static UniValue generateblock(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"generateblock\",\n+        \"\\nMine a block with a set of ordered transactions immediately to a specified address or descriptor (before the RPC call returns)\\n\",\n+        {\n+            {\"address/descriptor\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The address or descriptor to send the newly generated bitcoin to.\"},\n+            {\"transactions\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of hex strings which are either txids or raw transactions.\\n\"\n+                \"Txids must reference transactions currently in the mempool.\\n\"\n+                \"All transactions must be valid and in valid order, otherwise the block will be rejected.\",\n+                {\n+                    {\"rawtx/txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            }\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_HEX, \"hash\", \"hash of generated block\"}\n+            }\n+        },\n+        RPCExamples{\n+            \"\\nGenerate a block to myaddress, with txs rawtx and mempool_txid\\n\"\n+            + HelpExampleCli(\"generateblock\", R\"(\"myaddress\" '[\"rawtx\", \"mempool_txid\"]')\")\n+        },\n+    }.Check(request);\n+\n+    const auto address_or_descriptor = request.params[0].get_str();\n+    CScript coinbase_script;\n+\n+    FlatSigningProvider key_provider;\n+    std::string error;\n+    const auto desc = Parse(address_or_descriptor, key_provider, error, /* require_checksum = */ false);\n+    if (desc) {\n+        if (desc->IsRange()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Ranged descriptor not accepted. Maybe pass through deriveaddresses first?\");\n+        }\n+\n+        FlatSigningProvider provider;\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(0, key_provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys\"));\n+        }\n+\n+        CHECK_NONFATAL(scripts.size() == 1);\n+        coinbase_script = scripts.at(0);\n+\n+    } else {\n+        const auto destination = DecodeDestination(address_or_descriptor);\n+        if (!IsValidDestination(destination)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Error: Invalid address or descriptor\");\n+        }\n+\n+        coinbase_script = GetScriptForDestination(destination);\n+    }\n+\n+    const CTxMemPool& mempool = EnsureMemPool();\n+\n+    std::vector<CTransactionRef> txs;\n+    const auto raw_txs_or_txids = request.params[1].get_array();\n+    for (size_t i = 0; i < raw_txs_or_txids.size(); i++) {\n+        const auto str(raw_txs_or_txids[i].get_str());\n+\n+        uint256 hash;\n+        CMutableTransaction mtx;\n+        if (ParseHashStr(str, hash)) {\n+\n+            const auto tx = mempool.get(hash);\n+            if (!tx) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Transaction %s not in mempool.\", str));\n+            }\n+\n+            txs.emplace_back(tx);\n+\n+        } else if (DecodeHexTx(mtx, str)) {\n+            txs.push_back(MakeTransactionRef(std::move(mtx)));\n+\n+        } else {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"Transaction decode failed for %s\", str));\n+        }\n+    }\n+\n+    CChainParams chainparams(Params());\n+    CBlock block;\n+\n+    CBlockIndex* previous_index;\n+    {\n+        LOCK(cs_main);\n+        previous_index = ::ChainActive().Tip();\n+    }\n+    CHECK_NONFATAL(previous_index != nullptr);\n+\n+    const int height = previous_index->nHeight + 1;\n+\n+    // Create coinbase transaction.\n+    CMutableTransaction coinbase_tx;\n+    coinbase_tx.vin.resize(1);\n+    coinbase_tx.vin[0].prevout.SetNull();\n+    coinbase_tx.vout.resize(1);\n+    coinbase_tx.vout[0].scriptPubKey = coinbase_script;\n+    coinbase_tx.vout[0].nValue = GetBlockSubsidy(height, chainparams.GetConsensus());\n+    coinbase_tx.vin[0].scriptSig = CScript() << height << OP_0;\n+    block.vtx.push_back(MakeTransactionRef(std::move(coinbase_tx)));\n+\n+    // Add transactions\n+    block.vtx.insert(block.vtx.end(), txs.begin(), txs.end());\n+\n+    block.nVersion = ComputeBlockVersion(previous_index, chainparams.GetConsensus());\n+    if (chainparams.MineBlocksOnDemand())\n+        block.nVersion = gArgs.GetArg(\"-blockversion\", block.nVersion);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r396495830",
      "id" : 396495830,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ5NTgzMA==",
      "original_commit_id" : "eeb409e4b06a7bfb3758483eff7e23b4f2c6de3c",
      "original_line" : 359,
      "original_position" : 173,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : null,
      "pull_request_review_id" : 379487075,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396495830",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r399022770"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399022770"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! I used your suggested changes, and I also pulled out some descriptor logic into its own function to dedupe code in both `generateblock` and `generatetodescriptor`.",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-27T04:00:18Z",
      "diff_hunk" : "@@ -228,6 +248,148 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n     return generateBlocks(mempool, coinbase_script, nGenerate, nMaxTries);\n }\n \n+static UniValue generateblock(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"generateblock\",\n+        \"\\nMine a block with a set of ordered transactions immediately to a specified address or descriptor (before the RPC call returns)\\n\",\n+        {\n+            {\"address/descriptor\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The address or descriptor to send the newly generated bitcoin to.\"},\n+            {\"transactions\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of hex strings which are either txids or raw transactions.\\n\"\n+                \"Txids must reference transactions currently in the mempool.\\n\"\n+                \"All transactions must be valid and in valid order, otherwise the block will be rejected.\",\n+                {\n+                    {\"rawtx/txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n+                },\n+            }\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR_HEX, \"hash\", \"hash of generated block\"}\n+            }\n+        },\n+        RPCExamples{\n+            \"\\nGenerate a block to myaddress, with txs rawtx and mempool_txid\\n\"\n+            + HelpExampleCli(\"generateblock\", R\"(\"myaddress\" '[\"rawtx\", \"mempool_txid\"]')\")\n+        },\n+    }.Check(request);\n+\n+    const auto address_or_descriptor = request.params[0].get_str();\n+    CScript coinbase_script;\n+\n+    FlatSigningProvider key_provider;\n+    std::string error;\n+    const auto desc = Parse(address_or_descriptor, key_provider, error, /* require_checksum = */ false);\n+    if (desc) {\n+        if (desc->IsRange()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Ranged descriptor not accepted. Maybe pass through deriveaddresses first?\");\n+        }\n+\n+        FlatSigningProvider provider;\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(0, key_provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys\"));\n+        }\n+\n+        CHECK_NONFATAL(scripts.size() == 1);\n+        coinbase_script = scripts.at(0);\n+\n+    } else {\n+        const auto destination = DecodeDestination(address_or_descriptor);\n+        if (!IsValidDestination(destination)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Error: Invalid address or descriptor\");\n+        }\n+\n+        coinbase_script = GetScriptForDestination(destination);\n+    }\n+\n+    const CTxMemPool& mempool = EnsureMemPool();\n+\n+    std::vector<CTransactionRef> txs;\n+    const auto raw_txs_or_txids = request.params[1].get_array();\n+    for (size_t i = 0; i < raw_txs_or_txids.size(); i++) {\n+        const auto str(raw_txs_or_txids[i].get_str());\n+\n+        uint256 hash;\n+        CMutableTransaction mtx;\n+        if (ParseHashStr(str, hash)) {\n+\n+            const auto tx = mempool.get(hash);\n+            if (!tx) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Transaction %s not in mempool.\", str));\n+            }\n+\n+            txs.emplace_back(tx);\n+\n+        } else if (DecodeHexTx(mtx, str)) {\n+            txs.push_back(MakeTransactionRef(std::move(mtx)));\n+\n+        } else {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"Transaction decode failed for %s\", str));\n+        }\n+    }\n+\n+    CChainParams chainparams(Params());\n+    CBlock block;\n+\n+    CBlockIndex* previous_index;\n+    {\n+        LOCK(cs_main);\n+        previous_index = ::ChainActive().Tip();\n+    }\n+    CHECK_NONFATAL(previous_index != nullptr);\n+\n+    const int height = previous_index->nHeight + 1;\n+\n+    // Create coinbase transaction.\n+    CMutableTransaction coinbase_tx;\n+    coinbase_tx.vin.resize(1);\n+    coinbase_tx.vin[0].prevout.SetNull();\n+    coinbase_tx.vout.resize(1);\n+    coinbase_tx.vout[0].scriptPubKey = coinbase_script;\n+    coinbase_tx.vout[0].nValue = GetBlockSubsidy(height, chainparams.GetConsensus());\n+    coinbase_tx.vin[0].scriptSig = CScript() << height << OP_0;\n+    block.vtx.push_back(MakeTransactionRef(std::move(coinbase_tx)));\n+\n+    // Add transactions\n+    block.vtx.insert(block.vtx.end(), txs.begin(), txs.end());\n+\n+    block.nVersion = ComputeBlockVersion(previous_index, chainparams.GetConsensus());\n+    if (chainparams.MineBlocksOnDemand())\n+        block.nVersion = gArgs.GetArg(\"-blockversion\", block.nVersion);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r399022770",
      "id" : 399022770,
      "in_reply_to_id" : 396495830,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyMjc3MA==",
      "original_commit_id" : "eeb409e4b06a7bfb3758483eff7e23b4f2c6de3c",
      "original_line" : 359,
      "original_position" : 173,
      "original_start_line" : null,
      "path" : "src/rpc/mining.cpp",
      "position" : null,
      "pull_request_review_id" : 382566821,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399022770",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK caf349793c1b53558345f828db97157402d35e59 ð°\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK caf349793c1b53558345f828db97157402d35e59 ð°\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUjFywwAl4Th3T4WgpDPkoK+xxcLJYh7AJ/Qh8QcC6pkUKAyTIhZYRsTlfxrPSdK\r\nlAeyw01F+8D+D4lYfcyfwyWM/8NGgptBSaNkqPwmC6mMXwbWEFC/rFRX+1bzm3W3\r\n3iE0atWw1josFzAbN+d2fS2PS8+oYxAtxHKp9TmQBmLcGpfHFyD6eFxykuNCh4K3\r\n6q0F76pOqawaeca8sGbI4GsaQ2hJSmbEzrAk0rTCKiUoUzcKDfgH0zvA0dVUg3hd\r\n2hG9WJsReY442Et4oDckYXmQEqmt5jBBGBOwujiggjvoPzsld5dt5fhJr5ozYTwe\r\nzbPKInA+/AqctSiGXihua839tr7orj0U44ic3qFz1GuEQV6r33GtXd21hnsK7wOE\r\nFNHI0hauTwEi9q97uTwRINH8ViempTmfRX8Qkq9LEGpmFoa0ASrkzoUJAvhvHIsI\r\nwEIs/Fl3JIOoavXvy9aovu3ML23r76YEj64QLm7dDYl4HOBxHEuYmHDVpvkno8HQ\r\n2+lPZulu\r\n=H9NR\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `c19e13576acebcefa7d15014301ba97512854e83ceafa11fbfedb8e5ee57a989  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108c19e13576acebcefa7d15014301ba97512854e83ceafa11fbfedb8e5ee57a989f010a69f746421ab3a7ee078980a117a87c408fff010348e3dd4e953374738d0f143d1f2028d08f1045e7e1666f008909e99086ac7d29c0083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff0105822e4d60e2c11c401cd643da800c24508f1045e7e1666f0082d49096fb4f13a5f0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff01088f72934b5b8844b652881b02c6b6fd508f1045e7e1666f008a37da8fd03d238040083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010cb6f758d96fb9180dc74104c526bfe1d08f1045e7e1666f008099b22236d6505510083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6d)\r\n\r\n</details>\r\n",
      "created_at" : "2020-03-27T15:06:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#issuecomment-605050846",
      "id" : 605050846,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17693",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNTA1MDg0Ng==",
      "updated_at" : "2020-03-27T15:06:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605050846",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r399333109"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399333109"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n# Copyright (c) 2020 The Bitcoin Core developers\r\n```",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-27T15:07:14Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r399333109",
      "id" : 399333109,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzMzEwOQ==",
      "original_commit_id" : "4292064f80ed3262d9f9af1dee6826ce38f1bf58",
      "original_line" : 2,
      "original_position" : 2,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 382943629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399333109",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r399333222"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399333222"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    assert_raises_rpc_error,\r\n```",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-27T15:07:24Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''Test generateblock rpc.\n+'''\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r399333222",
      "id" : 399333222,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzMzIyMg==",
      "original_commit_id" : "4292064f80ed3262d9f9af1dee6826ce38f1bf58",
      "original_line" : 11,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 382943629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399333222",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r399333500"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399333500"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        self.log.info('Generate an empty block to address')\r\n```\r\n\r\nRationale: https://github.com/bitcoin/bitcoin/blob/master/test/functional/README.md#general-test-writing-advice",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-27T15:07:49Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''Test generateblock rpc.\n+'''\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error\n+)\n+\n+class GenerateBlockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        # Generate an empty block to address",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r399333500",
      "id" : 399333500,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzMzUwMA==",
      "original_commit_id" : "4292064f80ed3262d9f9af1dee6826ce38f1bf58",
      "original_line" : 24,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 382943629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399333500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r399333574"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399333574"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-27T15:07:56Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''Test generateblock rpc.\n+'''\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error\n+)\n+\n+class GenerateBlockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        # Generate an empty block to address\n+        address = node.getnewaddress()\n+        hash = node.generateblock(address, [])['hash']\n+        block = node.getblock(hash, 2)\n+        assert_equal(len(block['tx']), 1)\n+        assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], address)\n+\n+        # Generate an empty block to a descriptor",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r399333574",
      "id" : 399333574,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzMzU3NA==",
      "original_commit_id" : "4292064f80ed3262d9f9af1dee6826ce38f1bf58",
      "original_line" : 31,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 382943629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399333574",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r399333705"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399333705"
         }
      },
      "author_association" : "MEMBER",
      "body" : "etc ...",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2020-03-27T15:08:08Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''Test generateblock rpc.\n+'''\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error\n+)\n+\n+class GenerateBlockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        # Generate an empty block to address\n+        address = node.getnewaddress()\n+        hash = node.generateblock(address, [])['hash']\n+        block = node.getblock(hash, 2)\n+        assert_equal(len(block['tx']), 1)\n+        assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], address)\n+\n+        # Generate an empty block to a descriptor\n+        hash = node.generateblock('addr(' + address + ')', [])['hash']\n+        block = node.getblock(hash, 2)\n+        assert_equal(len(block['tx']), 1)\n+        assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], address)\n+\n+        # Generate an empty block to a combo descriptor with compressed pubkey",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r399333705",
      "id" : 399333705,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzMzcwNQ==",
      "original_commit_id" : "4292064f80ed3262d9f9af1dee6826ce38f1bf58",
      "original_line" : 37,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "test/functional/rpc_generateblock.py",
      "position" : null,
      "pull_request_review_id" : 382943629,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-27T16:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/399333705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 7524b6479cb20471d827aec5500925c86c62ce1c ð\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nre-ACK 7524b6479cb20471d827aec5500925c86c62ce1c ð\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUioEAv/XByMTYwhQ58oELwHk0VDhpY7mgGWvhdkpepTAj3h6ubQIfmiDS4wFaqL\r\nTGidhK5MYhc9ZZKYm6r2ZFCD6YQafvpn1K/ok0tfLgFbiAFRo3EJ4H8Nz0+M6M2F\r\nJ1ULhbnBypjPM+5guoh+Vo56EV4TBhYVeY76Y8i5qLEdiGjOBxlsAEoMY77T7jWg\r\nQmSflP9mTIXGS2xbVQkzjPiKA7H8G0NCgZX5Zbi6COZ73J3nSCxURWGhyoS+03j0\r\nR0RaEeDlfBtCFnSZHSk4DNuuCk8V+si8sqyCdsfCW5sVf/zHqDQn6PvlDN85DaQS\r\nh2ybD8hf4IJWtk41CDVzhDQuTFD3dspPzNDX8FNbNttBRt/CAC1+UPTUaVsThBET\r\nDKz0uCoO3DXwoKa0Akdz4bTf/GFlpRh8+BWC3A/lg1D3Hpc9RLcQKQbn6v434hWJ\r\nQ6u6xgmBNmWtikLnfAOUSVm2mHwTxrQrSlLp6WD8kliM74oUAo0n6uQCpDNyvp39\r\n4y2c1Gcd\r\n=aDC3\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `df2de0a97ae347b1985267b6969efcbe2e76c6b0a484832ef46013bf7f784ade  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108df2de0a97ae347b1985267b6969efcbe2e76c6b0a484832ef46013bf7f784adef0100cfb4378b4fb4ff6a162b937e83f91bf08fff01069b325861a178014d0fc10444813c52808f1045e7e26c8f008a598a7ecd3918bd50083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff01090a8d0500417c35fca2fe8b8863bf0b508f120ef68852943560854145b496ab259d188f5ec1484d538c52ad95775954bd46c0d08f1045e7e26c7f0089b53fcce0a07e7ae0083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010bcc2ed222b1fdd61cc16e981c6f79c4e08f1045e7e26c9f00895c422e50900fc090083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6df010c78140660bea46500b2507f6bab2c7b708f120504ea76c2e0ab532668a251bc262c2e8b7e1ee8466ad2018f5c1fee8d8285ef608f1045e7e26c8f008ae2ce8de3e3fc7d90083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n\r\n",
      "created_at" : "2020-03-27T16:16:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#issuecomment-605089079",
      "id" : 605089079,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17693",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNTA4OTA3OQ==",
      "updated_at" : "2020-03-27T16:16:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605089079",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Does this need release notes?",
      "created_at" : "2020-03-27T17:24:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#issuecomment-605132855",
      "id" : 605132855,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17693",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNTEzMjg1NQ==",
      "updated_at" : "2020-03-27T17:24:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605132855",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r602704082"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602704082"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This change means that the extra_nonce logic is now unused. Previously if the nNonce field rolled, we'd go around the loop again and call `IncrementExtraNonce()`. Now we'll just return `true`.\r\n\r\nI've proposed removing that logic entirely in #21533.",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2021-03-27T10:55:54Z",
      "diff_hunk" : "@@ -118,29 +148,54 @@ static UniValue generateBlocks(const CTxMemPool& mempool, const CScript& coinbas\n         if (!pblocktemplate.get())\n             throw JSONRPCError(RPC_INTERNAL_ERROR, \"Couldn't create new block\");\n         CBlock *pblock = &pblocktemplate->block;\n-        {\n-            LOCK(cs_main);\n-            IncrementExtraNonce(pblock, ::ChainActive().Tip(), nExtraNonce);\n-        }\n-        while (nMaxTries > 0 && pblock->nNonce < std::numeric_limits<uint32_t>::max() && !CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()) && !ShutdownRequested()) {\n-            ++pblock->nNonce;\n-            --nMaxTries;\n-        }\n-        if (nMaxTries == 0 || ShutdownRequested()) {\n+\n+        uint256 block_hash;\n+        if (!GenerateBlock(*pblock, nMaxTries, nExtraNonce, block_hash)) {\n             break;\n         }\n-        if (pblock->nNonce == std::numeric_limits<uint32_t>::max()) {\n-            continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r602704082",
      "id" : 602704082,
      "line" : 133,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjcwNDA4Mg==",
      "original_commit_id" : "dcc8332543f8fb6d1bb47cb270fcbb6a814a7d6e",
      "original_line" : 133,
      "original_position" : 56,
      "original_start_line" : 132,
      "path" : "src/rpc/mining.cpp",
      "position" : 56,
      "pull_request_review_id" : 622640307,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "LEFT",
      "start_line" : 132,
      "start_side" : "LEFT",
      "updated_at" : "2021-03-27T10:55:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602704082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r613202272"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613202272"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Never mind, I misunderstood the new interface for `GenerateBlock()`:\r\n\r\n- returns false: generation of block failed\r\n- returns true with valid block_hash out-param: generation of block succeeded\r\n- returns true with invalid (nullified) block_hash out-param: generation of block didn't succeed, maximum nNonce reached\r\n\r\n(thanks to @theStack for pointing this out: https://github.com/bitcoin/bitcoin/pull/21533#pullrequestreview-634095912)",
      "commit_id" : "7524b6479cb20471d827aec5500925c86c62ce1c",
      "created_at" : "2021-04-14T12:29:06Z",
      "diff_hunk" : "@@ -118,29 +148,54 @@ static UniValue generateBlocks(const CTxMemPool& mempool, const CScript& coinbas\n         if (!pblocktemplate.get())\n             throw JSONRPCError(RPC_INTERNAL_ERROR, \"Couldn't create new block\");\n         CBlock *pblock = &pblocktemplate->block;\n-        {\n-            LOCK(cs_main);\n-            IncrementExtraNonce(pblock, ::ChainActive().Tip(), nExtraNonce);\n-        }\n-        while (nMaxTries > 0 && pblock->nNonce < std::numeric_limits<uint32_t>::max() && !CheckProofOfWork(pblock->GetHash(), pblock->nBits, Params().GetConsensus()) && !ShutdownRequested()) {\n-            ++pblock->nNonce;\n-            --nMaxTries;\n-        }\n-        if (nMaxTries == 0 || ShutdownRequested()) {\n+\n+        uint256 block_hash;\n+        if (!GenerateBlock(*pblock, nMaxTries, nExtraNonce, block_hash)) {\n             break;\n         }\n-        if (pblock->nNonce == std::numeric_limits<uint32_t>::max()) {\n-            continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17693#discussion_r613202272",
      "id" : 613202272,
      "in_reply_to_id" : 602704082,
      "line" : 133,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzIwMjI3Mg==",
      "original_commit_id" : "dcc8332543f8fb6d1bb47cb270fcbb6a814a7d6e",
      "original_line" : 133,
      "original_position" : 56,
      "original_start_line" : 132,
      "path" : "src/rpc/mining.cpp",
      "position" : 56,
      "pull_request_review_id" : 635558670,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17693",
      "side" : "LEFT",
      "start_line" : 132,
      "start_side" : "LEFT",
      "updated_at" : "2021-04-14T12:29:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613202272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   }
]
