{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "This code makes executing two particular (and potentially other) attacks harder.\r\n\r\n### InvBlock\r\nThis behavior was described well [here](https://www.cs.umd.edu/projects/coinscope/coinscope.pdf) (page 11).\r\n\r\nPer current implementation, if node A receives _INV_ (tx) from node B, node A sends _GETDATA_ to B and waits for _TX_ message back.\r\n\r\nNode A is likely to receive more _INVs_ (regarding the same tx) from other peers. But node A would not send another _GETDATA_ unless it does not hear _TX_ back from node B for next 2 minutes (to save bandwidth)\r\n\r\nThus, if B is a malicious node, it can prevent node A from getting the transaction (even if all Aâs peers have it) for 2 minutes.\r\n\r\nThis behavior seems to be an inherent limitation of the current P2P relay protocol, and I donât see how it can be fundamentally changed (I can see workarounds which involve rewriting a lot of P2P code though).\r\n\r\n### What does this PR fix?\r\n\r\nThe attacks Iâm looking at involve preventing A from learning the transaction for 2*N minutes. To do that, an attacker has to spin up N nodes and send N _INVs_ simultaneously to node A (then InvBlocks will be queued with an interval of 2 minutes according to current implementation)\r\n\r\nMore precisely, 2 scenarios Iâm looking at are:\r\n1. An attacker censors a particular transaction. By performing InvBlock from different nodes, an attacker can execute a network-wide censorship of a particular transaction (or all transactions). The earlier an attacker founds the transaction he wants to censor, the easier it is to perform an attack. As it was pointed out by @gwillen, this is even more dangerous in the case of lightning, where transactions are known in advance. \r\n2. Topology inference described in papers [1](https://www.cs.umd.edu/projects/coinscope/coinscope.pdf), [2](https://arxiv.org/pdf/1812.00942.pdf) involve network-wide InvBlock. This fix would not mitigate this type of inference, but I believe it will make it more expensive to perform (an attacker would have to create more transactions and perform more rounds to learn the topology, the second paper itself notes that InvBlock isolation is important for the attack).\r\n\r\n### How does it work\r\nThis PR introduces bias toward outbound connections (they have higher priority when a node chooses from whom it should request a transaction) and randomizes the order.\r\nAs per @gmaxwell suggestion, GETDATA requests queue is created after processing all incoming messages from all nodes. \r\n\r\nAfter this fix, if the incoming messages were [I1, I2, I3, O1, O2, O3, O4], the queue for _GETDATA_ may look like [O2, O1, O3, O4, I1, I3, I2, â¦.].\r\n\r\nIf {I1, I2, I3} were significantly earlier (but the difference is less than TX_TIMEOUT=60 s) than others, the queue for _GETDATA_ may look like [I2, O2, O1, O3, O4, I1, I3, â¦.]. \r\n\r\n\r\n### Other comments:\r\n1. This mitigation works better if the connectivity is higher (especially outbound, because it would be less likely that 2 _GETDATAs_ for inbound malicious nodes queued together)\r\n",
   "closed_at" : "2019-02-08T04:13:10Z",
   "closed_by" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
      "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
      "followers_url" : "https://api.github.com/users/sipa/followers",
      "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/sipa",
      "id" : 548488,
      "login" : "sipa",
      "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
      "organizations_url" : "https://api.github.com/users/sipa/orgs",
      "received_events_url" : "https://api.github.com/users/sipa/received_events",
      "repos_url" : "https://api.github.com/users/sipa/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/sipa"
   },
   "comments" : 29,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897/comments",
   "created_at" : "2018-12-08T04:12:48Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897",
   "id" : 388883229,
   "labels" : [
      {
         "color" : "006b75",
         "default" : false,
         "id" : 98298007,
         "name" : "P2P",
         "node_id" : "MDU6TGFiZWw5ODI5ODAwNw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897/labels{/name}",
   "locked" : false,
   "milestone" : {
      "closed_at" : "2019-05-03T02:51:38Z",
      "closed_issues" : 186,
      "created_at" : "2018-05-03T15:34:54Z",
      "creator" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      },
      "description" : "",
      "due_on" : null,
      "html_url" : "https://github.com/bitcoin/bitcoin/milestone/35",
      "id" : 3318051,
      "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/35/labels",
      "node_id" : "MDk6TWlsZXN0b25lMzMxODA1MQ==",
      "number" : 35,
      "open_issues" : 0,
      "state" : "closed",
      "title" : "0.18.0",
      "updated_at" : "2019-05-03T02:51:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/milestones/35"
   },
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MjM3MDQzODU1",
   "number" : 14897,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/14897.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/14897.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "randomize GETDATA(tx) request order and introduce bias toward outbound ",
   "updated_at" : "2019-06-17T13:32:01Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
      "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
      "followers_url" : "https://api.github.com/users/naumenkogs/followers",
      "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/naumenkogs",
      "id" : 7975071,
      "login" : "naumenkogs",
      "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
      "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
      "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
      "repos_url" : "https://api.github.com/users/naumenkogs/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/naumenkogs"
   }
}
