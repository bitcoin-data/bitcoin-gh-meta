[
   {
      "author_association" : "MEMBER",
      "body" : "I'm strongly in support of doing something about this. \r\n\r\nBut instead, why not  do something like:  for each tx keep a next-time and ordered data structure, sorted on ( outbound, nonce) where nonce is just selected at random when the inv is processed.\r\n\r\nThen after each run of the message handling loop, after processing messages from all peers. go through the txn and for every tx with a next-time in the past, pop the best element from the list and query its peer, then update the next time.\r\n\r\nThis way there is even a decent chance that you do not fetch the txn from the first to offer it to you, you fetch in random order, and fetch from outpeers first if there are any outstanding offer.",
      "created_at" : "2018-12-08T04:40:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445430340",
      "id" : 445430340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTQzMDM0MA==",
      "updated_at" : "2018-12-08T04:40:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445430340",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@gmaxwell My implementation was supposed to have minimum intrusion in other parts of the code, but now when you suggested an alternative it seems not much code too. I'll update my PR soon.",
      "created_at" : "2018-12-08T05:59:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445434264",
      "id" : 445434264,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTQzNDI2NA==",
      "updated_at" : "2018-12-08T05:59:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445434264",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15141](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15141.html) (Rewrite DoS interface between validation and net_processing by sdaftuar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-12-08T06:42:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445436633",
      "id" : 445436633,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTQzNjYzMw==",
      "updated_at" : "2019-02-04T22:56:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445436633",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Awesome, if you find that implementing something else actually does turn out to be complicated, please feel free to loop back.  I asked in part because it didn't _seem_ like it would be much more complicated, but the devil is in the details.  I think what you propose here sounds better than nothing, but I think we can probably bypass the half-measure. :)",
      "created_at" : "2018-12-08T20:42:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445488406",
      "id" : 445488406,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTQ4ODQwNg==",
      "updated_at" : "2018-12-08T20:42:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445488406",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240058192"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240058192"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe use the internal random functions here (`GetRand()`)?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-09T23:05:49Z",
      "diff_hunk" : "@@ -2786,38 +2803,29 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;\n \n-    // Each retry is 2 minutes after the last\n-    nRequestTime = std::max(nRequestTime + 2 * 60 * 1000000, nNow);\n-    if (it != mapAlreadyAskedFor.end())\n-        mapAlreadyAskedFor.update(it, nRequestTime);\n-    else\n-        mapAlreadyAskedFor.insert(std::make_pair(inv.hash, nRequestTime));\n-    mapAskFor.insert(std::make_pair(nRequestTime, inv));\n+    tx_to_ask.insert(std::make_pair(inv.hash, nNow));\n+\n+    int priority = rand() % OUTBOUND_ASK_PRIORITY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240058192",
      "id" : 240058192,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDA1ODE5Mg==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 74,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 182999927,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240058192",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice work!\r\nConcept ACK.",
      "created_at" : "2018-12-09T23:06:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-445580678",
      "id" : 445580678,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NTU4MDY3OA==",
      "updated_at" : "2018-12-09T23:06:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445580678",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240135053"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240135053"
         }
      },
      "author_association" : "NONE",
      "body" : "Using something like `randrange` would be even better",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-10T09:28:17Z",
      "diff_hunk" : "@@ -2786,38 +2803,29 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;\n \n-    // Each retry is 2 minutes after the last\n-    nRequestTime = std::max(nRequestTime + 2 * 60 * 1000000, nNow);\n-    if (it != mapAlreadyAskedFor.end())\n-        mapAlreadyAskedFor.update(it, nRequestTime);\n-    else\n-        mapAlreadyAskedFor.insert(std::make_pair(inv.hash, nRequestTime));\n-    mapAskFor.insert(std::make_pair(nRequestTime, inv));\n+    tx_to_ask.insert(std::make_pair(inv.hash, nNow));\n+\n+    int priority = rand() % OUTBOUND_ASK_PRIORITY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240135053",
      "id" : 240135053,
      "in_reply_to_id" : 240058192,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDEzNTA1Mw==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 74,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 183092381,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240135053",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240135562"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240135562"
         }
      },
      "author_association" : "NONE",
      "body" : "I think this name is way too generic. Maybe `GETDATA_TIMEOUT`?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-10T09:29:44Z",
      "diff_hunk" : "@@ -88,6 +88,11 @@ static const size_t DEFAULT_MAXSENDBUFFER    = 1 * 1000;\n // NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n static const unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n \n+// time between GETDATA requests to different peers\n+static const int64_t TX_TIMEOUT = 60 * 1000000;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240135562",
      "id" : 240135562,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDEzNTU2Mg==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 14,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 183093021,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240135562",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240159098"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240159098"
         }
      },
      "author_association" : "NONE",
      "body" : "I find this block and especially this line barely readable. All those `peerToAsk->second.first`...\r\nMaybe you can at least consider extracting some variables and giving them proper names?\r\n\r\nFor example `tx->first` is `tx_hash`. \r\n`tx-second` is a `timeout` and so on.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-10T10:36:59Z",
      "diff_hunk" : "@@ -2065,6 +2066,22 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n         }\n+        int64_t nNow = GetTimeMicros();\n+        for (std::map<uint256, int64_t>::const_iterator tx = tx_to_ask.begin(); tx != tx_to_ask.end(); ++tx) {\n+            if (tx->second > nNow)\n+                continue;\n+\n+            std::multimap<int, std::pair<CNode*, CInv>> peersToAskTx = tx_to_ask_from.find(tx->first)->second;\n+            std::multimap<int, std::pair<CNode*, CInv>>::iterator peerToAsk = peersToAskTx.begin();\n+            if (peerToAsk != peersToAskTx.end()) {\n+                peerToAsk->second.first->scheduled_asks.insert(peerToAsk->second.second);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240159098",
      "id" : 240159098,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDE1OTA5OA==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 22,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 183121612,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240159098",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240163117"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240163117"
         }
      },
      "author_association" : "NONE",
      "body" : "Can this `CNode*` pointer dangle?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-10T10:49:14Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};\n std::string strSubVersion;\n \n-limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n+limitedmap<uint256, int64_t> tx_to_ask(MAX_INV_SZ);\n+std::map<uint256, std::multimap<int, std::pair<CNode*, CInv>>> tx_to_ask_from;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240163117",
      "id" : 240163117,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDE2MzExNw==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 6,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 183126588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240163117",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240166538"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240166538"
         }
      },
      "author_association" : "NONE",
      "body" : "Besides, neither comment nor the variable name mention unit. I guess those are microseconds, but still...",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-10T11:00:09Z",
      "diff_hunk" : "@@ -88,6 +88,11 @@ static const size_t DEFAULT_MAXSENDBUFFER    = 1 * 1000;\n // NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n static const unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n \n+// time between GETDATA requests to different peers\n+static const int64_t TX_TIMEOUT = 60 * 1000000;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240166538",
      "id" : 240166538,
      "in_reply_to_id" : 240135562,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDE2NjUzOA==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 14,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 183130907,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240166538",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240172301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240172301"
         }
      },
      "author_association" : "NONE",
      "body" : "I am a bit confused: \r\nSo here if a node is inbound - it's priority is bound by OUTBOUND_ASK_PRIORITY,\r\nand if it is outbound - you add OUTBOUND_ASK_PRIORITY one more time.\r\n\r\nSo outbound nodes will have higher priority value, right? \r\n\r\nBut then in \r\n`std::multimap<int, std::pair<CNode*, CInv>>::iterator peerToAsk = peersToAskTx.begin();`\r\nYou take the node with lowest priority?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-10T11:20:08Z",
      "diff_hunk" : "@@ -2786,38 +2803,29 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;\n \n-    // Each retry is 2 minutes after the last\n-    nRequestTime = std::max(nRequestTime + 2 * 60 * 1000000, nNow);\n-    if (it != mapAlreadyAskedFor.end())\n-        mapAlreadyAskedFor.update(it, nRequestTime);\n-    else\n-        mapAlreadyAskedFor.insert(std::make_pair(inv.hash, nRequestTime));\n-    mapAskFor.insert(std::make_pair(nRequestTime, inv));\n+    tx_to_ask.insert(std::make_pair(inv.hash, nNow));\n+\n+    int priority = rand() % OUTBOUND_ASK_PRIORITY;\n+    if (!fInbound) {\n+        priority += OUTBOUND_ASK_PRIORITY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240172301",
      "id" : 240172301,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDE3MjMwMQ==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 76,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 183137952,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240172301",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240287543"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240287543"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "oops. You are right.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-10T16:41:19Z",
      "diff_hunk" : "@@ -2786,38 +2803,29 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;\n \n-    // Each retry is 2 minutes after the last\n-    nRequestTime = std::max(nRequestTime + 2 * 60 * 1000000, nNow);\n-    if (it != mapAlreadyAskedFor.end())\n-        mapAlreadyAskedFor.update(it, nRequestTime);\n-    else\n-        mapAlreadyAskedFor.insert(std::make_pair(inv.hash, nRequestTime));\n-    mapAskFor.insert(std::make_pair(nRequestTime, inv));\n+    tx_to_ask.insert(std::make_pair(inv.hash, nNow));\n+\n+    int priority = rand() % OUTBOUND_ASK_PRIORITY;\n+    if (!fInbound) {\n+        priority += OUTBOUND_ASK_PRIORITY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240287543",
      "id" : 240287543,
      "in_reply_to_id" : 240172301,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDI4NzU0Mw==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 76,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 183282656,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240287543",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240316792"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240316792"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It seems CNode constructor is deleted, and using a pointer is widely used across the codebase. What exactly would you suggest?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-10T17:58:56Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};\n std::string strSubVersion;\n \n-limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n+limitedmap<uint256, int64_t> tx_to_ask(MAX_INV_SZ);\n+std::map<uint256, std::multimap<int, std::pair<CNode*, CInv>>> tx_to_ask_from;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240316792",
      "id" : 240316792,
      "in_reply_to_id" : 240163117,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDMxNjc5Mg==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 6,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 183319213,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240316792",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240343501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240343501"
         }
      },
      "author_association" : "NONE",
      "body" : "I asked because I wasn't able to figure out if this is a problem during my initial review: \r\nif we put some node to this map and this node disconnects after. What will happen?\r\n\r\nRight now I can't check it. Will look tomorrow more thoroughly. \r\nI also have a solution in case pointers can dangle - you can use `NodeId`. And then when you need actual pointer to `CNode` query it from `CConnman`.\r\n\r\nBTW, thanks for extracted variables. It is much better now!\r\n\r\n\r\n",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-10T19:14:58Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};\n std::string strSubVersion;\n \n-limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n+limitedmap<uint256, int64_t> tx_to_ask(MAX_INV_SZ);\n+std::map<uint256, std::multimap<int, std::pair<CNode*, CInv>>> tx_to_ask_from;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240343501",
      "id" : 240343501,
      "in_reply_to_id" : 240163117,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDM0MzUwMQ==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 6,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 183352609,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240343501",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/621585?v=4",
         "events_url" : "https://api.github.com/users/AM5800/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AM5800/followers",
         "following_url" : "https://api.github.com/users/AM5800/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AM5800/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AM5800",
         "id" : 621585,
         "login" : "AM5800",
         "node_id" : "MDQ6VXNlcjYyMTU4NQ==",
         "organizations_url" : "https://api.github.com/users/AM5800/orgs",
         "received_events_url" : "https://api.github.com/users/AM5800/received_events",
         "repos_url" : "https://api.github.com/users/AM5800/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AM5800/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AM5800/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AM5800"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240366097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240366097"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That's indeed a good idea.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-10T20:21:45Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};\n std::string strSubVersion;\n \n-limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n+limitedmap<uint256, int64_t> tx_to_ask(MAX_INV_SZ);\n+std::map<uint256, std::multimap<int, std::pair<CNode*, CInv>>> tx_to_ask_from;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240366097",
      "id" : 240366097,
      "in_reply_to_id" : 240163117,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDM2NjA5Nw==",
      "original_commit_id" : "6019b2a8754c2a610a0355d904fb16c86dd91b5a",
      "original_position" : 6,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 183380983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240366097",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240477325"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240477325"
         }
      },
      "author_association" : "NONE",
      "body" : "I'm not sure why this magic is still necessary, as well as I'm not sure whether we need microseconds here",
      "commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "created_at" : "2018-12-11T05:28:18Z",
      "diff_hunk" : "@@ -2786,38 +2816,31 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r240477325",
      "id" : 240477325,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDQ3NzMyNQ==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 76,
      "path" : "src/net.cpp",
      "position" : 76,
      "pull_request_review_id" : 183515358,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2018-12-11T05:28:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240477325",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242184732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242184732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you should initialize this with nullptr.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-17T15:11:24Z",
      "diff_hunk" : "@@ -2065,6 +2066,35 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n         }\n+        int64_t nNow = GetTimeMicros();\n+        for (std::map<uint256, int64_t>::const_iterator tx = tx_to_ask.begin(); tx != tx_to_ask.end(); ++tx) {\n+            int64_t next_ask_time = tx->second;\n+            if (next_ask_time > nNow)\n+                continue;\n+\n+            uint256 tx_hash = tx->first;\n+            std::multimap<int, std::pair<CNode*, CInv>> peers_to_ask_tx = tx_to_ask_from.find(tx_hash)->second;\n+            std::multimap<int, std::pair<CNode*, CInv>>::iterator peer_to_ask = peers_to_ask_tx.begin();\n+            // Make sure that queried peer is not disconnected\n+            CNode* peer;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242184732",
      "id" : 242184732,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjE4NDczMg==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 24,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 185636386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242184732",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242565737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242565737"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This comment was marked resolved but I think the review comment still hasn't been addressed -- I think it'd be better to store a `NodeId` rather than a `CNode *` inside this structure, to avoid concerns around the locking of CNode's and potentially dereferencing a deleted object.\r\n\r\nAlso could you add a comment explaining what is being stored in this map?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-18T14:49:10Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};\n std::string strSubVersion;\n \n-limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n+limitedmap<uint256, int64_t> tx_to_ask(MAX_INV_SZ);\n+std::map<uint256, std::multimap<int, std::pair<CNode*, CInv>>> tx_to_ask_from;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242565737",
      "id" : 242565737,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU2NTczNw==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 6,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242565737",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242567478"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242567478"
         }
      },
      "author_association" : "MEMBER",
      "body" : "All the code added in this chunk strikes me as logic that belongs in the `SendMessages()` function in `net_processing.cpp`, rather than in the message handling thread.\r\n\r\nThe split between what we do in `net.cpp` and what we do in `net_processing.cpp` isn't crystal clear, but my general sense is that we try to do application level behaviors in `net_processing.cpp`, and generic/low-level network logic in `net.cpp`.  When there's spillover between the two (such as when we need to store data in a `CNode` that feels like it belongs in `CNodeState` but for some reason it's tricky to do), then the split tends to be that `net.cpp` just handles the data storage, while the logic that uses it is in `net_processing.cpp`.\r\n\r\nSo adding logic directly to `ThreadMessageHandler` makes me vaguely uncomfortable -- the locking around CNode's can be tricky to get right, and so doing application-level things in here feels like the wrong design.\r\n\r\nI actually wonder if we could move all this transaction request logic (including the per-peer and per-txid storage) to be in `net_processing.cpp`, and do this all with `CNodeState`, rather than have inv storage kept in `CNode`?  If that's achievable, I think that would be a win overall.\r\n\r\n@TheBlueMatt or @theuni -- care to agree/disagree with what I wrote?\r\n",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-18T14:53:12Z",
      "diff_hunk" : "@@ -2065,6 +2066,35 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n         }\n+        int64_t nNow = GetTimeMicros();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242567478",
      "id" : 242567478,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU2NzQ3OA==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 14,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242567478",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242572079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242572079"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Storing a `CNode *` and doing an `AddRef` seems risky to me -- I think it's better to store a NodeId and do a lookup to see if the peer is still around.  Otherwise, it's possible for a CNode object to live on even after a peer has disconnected, potentially for a long time?  And in general reasoning about the lifetime of these objects is already a little tricky, so I think we should avoid adding more complexity to it.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-18T15:04:12Z",
      "diff_hunk" : "@@ -2786,38 +2816,31 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;\n \n-    // Each retry is 2 minutes after the last\n-    nRequestTime = std::max(nRequestTime + 2 * 60 * 1000000, nNow);\n-    if (it != mapAlreadyAskedFor.end())\n-        mapAlreadyAskedFor.update(it, nRequestTime);\n-    else\n-        mapAlreadyAskedFor.insert(std::make_pair(inv.hash, nRequestTime));\n-    mapAskFor.insert(std::make_pair(nRequestTime, inv));\n+    tx_to_ask.insert(std::make_pair(inv.hash, nNow));\n+\n+    // Peers with lower priority are queried earlier\n+    int priority = GetRandInt(OUTBOUND_ASK_MAX_INFERIORITY - 1);\n+    if (fInbound) {\n+        priority += OUTBOUND_ASK_MAX_INFERIORITY;\n+    }\n+\n+    tx_to_ask_from[inv.hash].insert(std::make_pair(priority, std::make_pair(this, inv)));\n+    AddRef();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242572079",
      "id" : 242572079,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU3MjA3OQ==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 94,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242572079",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242578580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242578580"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was wondering if we should bake in a delay if we receive a new transaction for the first time from an inbound peer?  It seems like if we want to give some window for an outbound peer to jump the queue before we make a getdata request to an inbound peer, then we might as well make that window more explicit, rather than leave it to the timing of the message handling thread.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-18T15:19:55Z",
      "diff_hunk" : "@@ -2786,38 +2816,31 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);\n-\n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n     static int64_t nLastTime;\n     ++nLastTime;\n     nNow = std::max(nNow, nLastTime);\n     nLastTime = nNow;\n \n-    // Each retry is 2 minutes after the last\n-    nRequestTime = std::max(nRequestTime + 2 * 60 * 1000000, nNow);\n-    if (it != mapAlreadyAskedFor.end())\n-        mapAlreadyAskedFor.update(it, nRequestTime);\n-    else\n-        mapAlreadyAskedFor.insert(std::make_pair(inv.hash, nRequestTime));\n-    mapAskFor.insert(std::make_pair(nRequestTime, inv));\n+    tx_to_ask.insert(std::make_pair(inv.hash, nNow));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242578580",
      "id" : 242578580,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU3ODU4MA==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 85,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242578580",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242686938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242686938"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Erasing from `tx_to_ask_from` would mean that we will forget all the other peers who have announced this transaction to us as well, and not be able to request it anymore?  I think we shouldn't do that until after the transaction has been accepted to our mempool (or maybe is in our orphan map).  Otherwise an adversary could blind us to a segwit transaction by announcing a tx first, waiting a reasonable amount of time for other peers to announce, and then delivering a malleated version.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-18T20:06:17Z",
      "diff_hunk" : "@@ -2210,8 +2210,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         bool fMissingInputs = false;\n         CValidationState state;\n \n-        pfrom->setAskFor.erase(inv.hash);\n-        mapAlreadyAskedFor.erase(inv.hash);\n+        pfrom->ask_set.erase(inv);\n+        tx_to_ask.erase(inv.hash);\n+        tx_to_ask_from.erase(inv.hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242686938",
      "id" : 242686938,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjY4NjkzOA==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 17,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242686938",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242691483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242691483"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The comment above this line should be updated for the new variable name.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-18T20:20:28Z",
      "diff_hunk" : "@@ -69,7 +69,7 @@ static const bool DEFAULT_UPNP = false;\n /** The maximum number of entries in mapAskFor */\n static const size_t MAPASKFOR_MAX_SZ = MAX_INV_SZ;\n /** The maximum number of entries in setAskFor (larger due to getdata latency)*/\n-static const size_t SETASKFOR_MAX_SZ = 2 * MAX_INV_SZ;\n+static const size_t ASKSET_MAX_SZ = 2 * MAX_INV_SZ;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242691483",
      "id" : 242691483,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjY5MTQ4Mw==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 5,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242691483",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242692171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242692171"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Do we need to make this `std::multimap<...>& peers_to_ask_tx` to avoid a copy?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-18T20:22:54Z",
      "diff_hunk" : "@@ -2065,6 +2066,35 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n         }\n+        int64_t nNow = GetTimeMicros();\n+        for (std::map<uint256, int64_t>::const_iterator tx = tx_to_ask.begin(); tx != tx_to_ask.end(); ++tx) {\n+            int64_t next_ask_time = tx->second;\n+            if (next_ask_time > nNow)\n+                continue;\n+\n+            uint256 tx_hash = tx->first;\n+            std::multimap<int, std::pair<CNode*, CInv>> peers_to_ask_tx = tx_to_ask_from.find(tx_hash)->second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242692171",
      "id" : 242692171,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjY5MjE3MQ==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 21,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242692171",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242693563"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242693563"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps update this comment to explain what is in this map exactly?  I think it's txid -> next request time in micros?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-18T20:27:31Z",
      "diff_hunk" : "@@ -536,7 +541,13 @@ extern bool fDiscover;\n extern bool fListen;\n extern bool fRelayTxes;\n \n-extern limitedmap<uint256, int64_t> mapAlreadyAskedFor;\n+// keeps track of all received INVs for which TX not received",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242693563",
      "id" : 242693563,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjY5MzU2Mw==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 26,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242693563",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242693745"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242693745"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also here, would be nice to have the comment explain exactly what the fields in the map are.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-18T20:28:07Z",
      "diff_hunk" : "@@ -536,7 +541,13 @@ extern bool fDiscover;\n extern bool fListen;\n extern bool fRelayTxes;\n \n-extern limitedmap<uint256, int64_t> mapAlreadyAskedFor;\n+// keeps track of all received INVs for which TX not received\n+extern limitedmap<uint256, int64_t> tx_to_ask;\n+\n+// peers are ordered randomly with a bias towards outbound\n+// need CInv inside to distinguish segwit",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r242693745",
      "id" : 242693745,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjY5Mzc0NQ==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 30,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : 186101993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242693745",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r243020650"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243020650"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, that stuff has no business being in net, its only currently there for historical reasons, if there's an opportunity to move it to net_processing, we should.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-19T18:10:47Z",
      "diff_hunk" : "@@ -2065,6 +2066,35 @@ void CConnman::ThreadMessageHandler()\n             if (flagInterruptMsgProc)\n                 return;\n         }\n+        int64_t nNow = GetTimeMicros();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r243020650",
      "id" : 243020650,
      "in_reply_to_id" : 242567478,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzAyMDY1MA==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 14,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 186679424,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243020650",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r243048621"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243048621"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If an adversary were to blast us with huge INV messages, then I think they could take over this data structure, and blind us to all other transactions -- once a txid leaves `tx_to_ask` I think we'll never request it?\r\n\r\nAlso, I think this is one way that `tx_to_ask` and `tx_to_ask_from` could get out of sync which looks like it would cause a memory leak.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2018-12-19T19:37:53Z",
      "diff_hunk" : "@@ -86,7 +86,8 @@ std::map<CNetAddr, LocalServiceInfo> mapLocalHost GUARDED_BY(cs_mapLocalHost);\n static bool vfLimited[NET_MAX] GUARDED_BY(cs_mapLocalHost) = {};\n std::string strSubVersion;\n \n-limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n+limitedmap<uint256, int64_t> tx_to_ask(MAX_INV_SZ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r243048621",
      "id" : 243048621,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzA0ODYyMQ==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 5,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 186714775,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/243048621",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r245672104"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245672104"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is the last use of `FormatISO8601Time`. Please remove it from `src/util/time.cpp`.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-07T14:33:40Z",
      "diff_hunk" : "@@ -2786,38 +2816,31 @@ CNode::~CNode()\n     CloseSocket(hSocket);\n }\n \n-void CNode::AskFor(const CInv& inv)\n+void CNode::AddToAskSet(const CInv& inv)\n {\n-    if (mapAskFor.size() > MAPASKFOR_MAX_SZ || setAskFor.size() > SETASKFOR_MAX_SZ)\n+    if (ask_set.size() > ASKSET_MAX_SZ)\n         return;\n     // a peer may not have multiple non-responded queue positions for a single inv item\n-    if (!setAskFor.insert(inv.hash).second)\n+    if (!ask_set.insert(inv).second)\n         return;\n \n-    // We're using mapAskFor as a priority queue,\n-    // the key is the earliest time the request can be sent\n-    int64_t nRequestTime;\n-    limitedmap<uint256, int64_t>::const_iterator it = mapAlreadyAskedFor.find(inv.hash);\n-    if (it != mapAlreadyAskedFor.end())\n-        nRequestTime = it->second;\n-    else\n-        nRequestTime = 0;\n-    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, FormatISO8601Time(nRequestTime/1000000), id);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r245672104",
      "id" : 245672104,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTY3MjEwNA==",
      "original_commit_id" : "4ba0f8648bbe8bf159018d53c7761ce90cfcd0f1",
      "original_position" : 69,
      "path" : "src/net.cpp",
      "position" : 29,
      "pull_request_review_id" : 189831223,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245672104",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-01-14T14:20:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-454020512",
      "id" : 454020512,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NDAyMDUxMg==",
      "updated_at" : "2019-01-14T14:20:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454020512",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I've updated the implementation in a DoS-resistant way.\r\n\r\nWell, the new code is heavily based on the latest @sdaftuar work (mostly his implementation with my review and couple minor edits), but we decided to use this PR.",
      "created_at" : "2019-01-14T21:27:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-454167958",
      "id" : 454167958,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NDE2Nzk1OA==",
      "updated_at" : "2019-01-14T21:27:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454167958",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think I might be missing something about when the code in `SendMessages()` runs. But how is this change randomizing which peer a transaction gets requested from?\r\n\r\nIt seems like the first request is scheduled based on inv time, and goes to the peer that announced first (with 1 second penalty for an incoming peer):\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2f9abf746b3555ca8b47e8d0122bf4252396a7ff/src/net_processing.cpp#L669-L674\r\n\r\nAnd then subsequent requests all get scheduled at the same time based on the first request (again with penalty for incoming peers):\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2f9abf746b3555ca8b47e8d0122bf4252396a7ff/src/net_processing.cpp#L3865-L3867\r\n\r\nSo the peer chosen will depend on the order of SendMessages() calls, which appears to be fixed, not random.\r\n\r\nVery possible I am missing something here, though.\r\n\r\nAs for the PR, I need to look more closely at the code, but in general it looks very good and the comments are great. It would be good to add a commit description and also credit Suhas if it's true this is \"heavily based\" on his work (https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-454167958). I think if you add a\r\n\r\n```\r\nCo-authored-by: Suhas Daftuar <sdaftuar@gmail.com>\r\n```\r\n\r\nline to the end of your commit message it will list him as a coauthor in github.\r\n\r\n\r\n\r\n\r\n",
      "created_at" : "2019-01-18T20:50:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-455683287",
      "id" : 455683287,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NTY4MzI4Nw==",
      "updated_at" : "2019-01-18T20:50:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455683287",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky\r\n\r\nIt would not randomize for outbound peers, because the request would be sent right after processMessage for a given peer. We might add a delay to randomize this one too, but under current threat model (sybil attacks through outbound are very unlikely) I don't see a real reason.\r\n\r\nAnd yes, I should modify the github comment to credit Suhas, thanks for the idea.",
      "created_at" : "2019-01-18T21:39:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-455696095",
      "id" : 455696095,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NTY5NjA5NQ==",
      "updated_at" : "2019-01-19T00:58:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455696095",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It would not randomize for outbound peers, because the request would be sent right after processMessage for a given peer\r\n\r\nThis is only true for the first request, right? After the first request, assuming it timed out, all the outbound peers would be scheduled to make the next request at the same time (`last_request_time + MAX_GETDATA_TX_DELAY`), and since SendMessages() seems to be called on peers in a stable order, which peer requested first would be fixed. This seems to contradict the PR description which says \"This PR introduces bias toward outbound connections (they have higher priority when a node chooses from whom it should request a transaction) and randomizes the order.\" Maybe you just need to drop the part about randomizing the order.\r\n\r\nI think I also need to look into how `SendMessages()` is called. It seems like if it were called in a predictable way, like once a second on all peers in a fixed order, then this code would just keep resending the transaction request to the first outbound peer after the initial request timed out, and never try any different peers, because every peer would schedule their next request at the exact same time, and the same peer would always be called first to actually send the request.",
      "created_at" : "2019-01-18T22:59:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-455715211",
      "id" : 455715211,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NTcxNTIxMQ==",
      "updated_at" : "2019-01-18T23:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455715211",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky I would rather randomize it for outbound as well, since the point you're making seems correct and it's no good.\r\n\r\nIt is called in a fixed order. There is a chance of randomization due to non-uniform processing time per request, but this processing time is way less than 1 second, so the chance is very low.\r\n\r\nAfter talking to you, I think we should add PoissonNext() to both outbound and inbound delays (a new delay every time), because this would only make it stronger and won't bring any bad implications. What do you think?",
      "created_at" : "2019-01-18T23:05:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-455716192",
      "id" : 455716192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NTcxNjE5Mg==",
      "updated_at" : "2019-01-18T23:05:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455716192",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Adding PoissonNext() seems like a reasonable way to randomize & rotate among peers, but I am far from an expert on this code and am just trying to understand it myself, so hopefully others will weigh in.",
      "created_at" : "2019-01-18T23:13:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-455717682",
      "id" : 455717682,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NTcxNzY4Mg==",
      "updated_at" : "2019-01-18T23:13:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455717682",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky Ah, I think I was confused for a while myself (Sorry for that), but see what actually happens.\r\n\r\nImagine scheduling a request for t=1 from peer A. Then, for A and other peers B, C we've heard the transaction from the next request time after the timeout will be t1=61. Then, m_tx_download.m_tx_process_time for peer A would not contain the tx anymore (it'd be in in_flight), and the choice between B and C will be random, because they're scheduled for the same time, and who knows which node's SendMessages will hit this timestamp first.\r\n\r\nWell, a bit not random, because Probability(B) > Probability(C) if the list is A B C D E F G H. But that's fine, because 1) outbound would be always prioritized; 2) An attacker cannot control this list.\r\n\r\nThus, I think we should not change anything (besides perhaps adding a little delay for outbound to not process right away, but that's not critical)",
      "created_at" : "2019-01-18T23:23:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-455719371",
      "id" : 455719371,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NTcxOTM3MQ==",
      "updated_at" : "2019-01-18T23:44:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455719371",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "My concern isn't than an attacker will be able to choose an outbound peer. My concern is that if an outbound peer fails, the code might just keep trying to send requests to it without ever trying another peer. With:\r\n\r\n```c++\r\nvoid ThreadMessageHandler() {\r\n   for (pnode : vnodes) {\r\n      SendMessages(pnode);\r\n   }\r\n}\r\n```\r\n\r\nif there's a longer delay between `ThreadMessageHandler` calls than it take `ThreadMessageHandler` to execute, and if multiple nodes are scheduled to send a request at the same time, the earlier node in the list will usually be the one sending the request, unless I'm missing something.",
      "created_at" : "2019-01-19T00:17:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-455728035",
      "id" : 455728035,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NTcyODAzNQ==",
      "updated_at" : "2019-01-19T00:17:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455728035",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky no it won't, because it will be removed from the attacker's  ```state.m_tx_download.m_tx_process_time``` (it will be in attacker's ```state.m_tx_download.m_in_flight``` instead). And thus next time we will ask it from some other peer, which was never asked for that tx before.",
      "created_at" : "2019-01-19T00:41:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-455731279",
      "id" : 455731279,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NTczMTI3OQ==",
      "updated_at" : "2019-01-19T00:41:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455731279",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Makes sense. Thanks!",
      "created_at" : "2019-01-19T00:57:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-455733185",
      "id" : 455733185,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NTczMzE4NQ==",
      "updated_at" : "2019-01-19T00:57:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455733185",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250406395"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250406395"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Use `peer.m_tx_process_time.emplace(process_time, txid);` for better readability (and possibly slightly better performance).",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-23T22:58:13Z",
      "diff_hunk" : "@@ -591,6 +657,25 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void RequestTx(CNodeState *state, uint256 &txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState &peer = state->m_tx_download;\n+    if (peer.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer.m_tx_announced.count(txid)) {\n+        // Too many queued announcements from this peer, or we already have\n+        // this announcement\n+        return;\n+    }\n+    peer.m_tx_announced.insert(txid);\n+\n+    int64_t process_time = GetTimeMicros();\n+\n+    // We delay processing announcements from non-preferred (eg inbound) peers\n+    if (!state->fPreferredDownload) process_time += INBOUND_PEER_TX_DELAY;\n+\n+    peer.m_tx_process_time.insert(std::make_pair(process_time, txid));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250406395",
      "id" : 250406395,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDQwNjM5NQ==",
      "original_commit_id" : "53ad7bedb4e6182acc8f087f92ab87b48184062b",
      "original_position" : 99,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 195785987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250406395",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250406573"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250406573"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Slightly confusing variable name. What about `download_state` ?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-23T22:58:52Z",
      "diff_hunk" : "@@ -591,6 +657,25 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void RequestTx(CNodeState *state, uint256 &txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState &peer = state->m_tx_download;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250406573",
      "id" : 250406573,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDQwNjU3Mw==",
      "original_commit_id" : "53ad7bedb4e6182acc8f087f92ab87b48184062b",
      "original_position" : 86,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 195785987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250406573",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250406784"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250406784"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`txid` can be a const reference",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-23T22:59:40Z",
      "diff_hunk" : "@@ -609,6 +694,26 @@ static bool IsOutboundDisconnectionCandidate(const CNode *node)\n     return !(node->fInbound || node->m_manual_connection || node->fFeeler || node->fOneShot);\n }\n \n+int64_t PeerLogicValidation::GetTxRequestTime(uint256 &txid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250406784",
      "id" : 250406784,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDQwNjc4NA==",
      "original_commit_id" : "53ad7bedb4e6182acc8f087f92ab87b48184062b",
      "original_position" : 110,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 195785987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250406784",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250407281"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250407281"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`txid` can be a const reference",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-23T23:01:34Z",
      "diff_hunk" : "@@ -609,6 +694,26 @@ static bool IsOutboundDisconnectionCandidate(const CNode *node)\n     return !(node->fInbound || node->m_manual_connection || node->fFeeler || node->fOneShot);\n }\n \n+int64_t PeerLogicValidation::GetTxRequestTime(uint256 &txid)\n+{\n+    auto it = m_already_asked_for.find(txid);\n+    if (it != m_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void PeerLogicValidation::UpdateTxRequestTime(uint256 &txid, int64_t request_time)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250407281",
      "id" : 250407281,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDQwNzI4MQ==",
      "original_commit_id" : "53ad7bedb4e6182acc8f087f92ab87b48184062b",
      "original_position" : 119,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 195785987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250407281",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250411372"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250411372"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This 'private' seems redundant.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-23T23:16:46Z",
      "diff_hunk" : "@@ -72,11 +72,19 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n     void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main) { m_already_asked_for.erase(txid); }\n+private:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250411372",
      "id" : 250411372,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDQxMTM3Mg==",
      "original_commit_id" : "53ad7bedb4e6182acc8f087f92ab87b48184062b",
      "original_position" : 5,
      "path" : "src/net_processing.h",
      "position" : null,
      "pull_request_review_id" : 195785987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250411372",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250418030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250418030"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Instead of `(*tx_process_time.begin()).first` you can write `tx_process_time.begin()->first`",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-23T23:46:06Z",
      "diff_hunk" : "@@ -3731,24 +3838,44 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n-        while (!pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n+        std::multimap<int64_t, uint256> &tx_process_time = state.m_tx_download.m_tx_process_time;\n+        while (!tx_process_time.empty() && (*tx_process_time.begin()).first <= nNow && state.m_tx_download.m_in_flight.size() < MAX_PEER_TX_IN_FLIGHT)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250418030",
      "id" : 250418030,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDQxODAzMA==",
      "original_commit_id" : "53ad7bedb4e6182acc8f087f92ab87b48184062b",
      "original_position" : 206,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 195785987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250418030",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250418365"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250418365"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Typo: requested",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-23T23:47:41Z",
      "diff_hunk" : "@@ -3731,24 +3838,44 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n-        while (!pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n+        std::multimap<int64_t, uint256> &tx_process_time = state.m_tx_download.m_tx_process_time;\n+        while (!tx_process_time.empty() && (*tx_process_time.begin()).first <= nNow && state.m_tx_download.m_in_flight.size() < MAX_PEER_TX_IN_FLIGHT)\n         {\n-            const CInv& inv = (*pto->mapAskFor.begin()).second;\n+            const uint256& txid = (*tx_process_time.begin()).second;\n+            CInv inv(MSG_TX | GetFetchFlags(pto), txid);\n             if (!AlreadyHave(inv))\n             {\n-                LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n-                vGetData.push_back(inv);\n-                if (vGetData.size() >= 1000)\n-                {\n-                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n-                    vGetData.clear();\n+                // If this transaction was last request more than 1 minute ago,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250418365",
      "id" : 250418365,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDQxODM2NQ==",
      "original_commit_id" : "53ad7bedb4e6182acc8f087f92ab87b48184062b",
      "original_position" : 219,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 195785987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250418365",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250425010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250425010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Typo: inboudnd",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-24T00:21:38Z",
      "diff_hunk" : "@@ -3731,24 +3838,44 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n-        while (!pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n+        std::multimap<int64_t, uint256> &tx_process_time = state.m_tx_download.m_tx_process_time;\n+        while (!tx_process_time.empty() && (*tx_process_time.begin()).first <= nNow && state.m_tx_download.m_in_flight.size() < MAX_PEER_TX_IN_FLIGHT)\n         {\n-            const CInv& inv = (*pto->mapAskFor.begin()).second;\n+            const uint256& txid = (*tx_process_time.begin()).second;\n+            CInv inv(MSG_TX | GetFetchFlags(pto), txid);\n             if (!AlreadyHave(inv))\n             {\n-                LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n-                vGetData.push_back(inv);\n-                if (vGetData.size() >= 1000)\n-                {\n-                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n-                    vGetData.clear();\n+                // If this transaction was last request more than 1 minute ago,\n+                // then request.\n+                int64_t last_request_time = GetTxRequestTime(inv.hash);\n+                if (last_request_time <= nNow - MAX_GETDATA_TX_DELAY) {\n+                    LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n+                    vGetData.push_back(inv);\n+                    if (vGetData.size() >= 1000)\n+                    {\n+                        connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n+                        vGetData.clear();\n+                    }\n+                    UpdateTxRequestTime(inv.hash, nNow);\n+                    state.m_tx_download.m_in_flight.insert(inv.hash);\n+                } else {\n+                    // This transaction is in flight from someone else; queue\n+                    // up processing to happen after the download times out\n+                    // (with a slight delay for inboudnd peers, to prefer",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250425010",
      "id" : 250425010,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDQyNTAxMA==",
      "original_commit_id" : "53ad7bedb4e6182acc8f087f92ab87b48184062b",
      "original_position" : 235,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 195785987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250425010",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250426347"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250426347"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could this just call `RequestTx`? To avoid spreading the INBOUND_PEER_TX_DELAY logic over two places in the code.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-24T00:28:28Z",
      "diff_hunk" : "@@ -3731,24 +3838,44 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n-        while (!pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n+        std::multimap<int64_t, uint256> &tx_process_time = state.m_tx_download.m_tx_process_time;\n+        while (!tx_process_time.empty() && (*tx_process_time.begin()).first <= nNow && state.m_tx_download.m_in_flight.size() < MAX_PEER_TX_IN_FLIGHT)\n         {\n-            const CInv& inv = (*pto->mapAskFor.begin()).second;\n+            const uint256& txid = (*tx_process_time.begin()).second;\n+            CInv inv(MSG_TX | GetFetchFlags(pto), txid);\n             if (!AlreadyHave(inv))\n             {\n-                LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n-                vGetData.push_back(inv);\n-                if (vGetData.size() >= 1000)\n-                {\n-                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n-                    vGetData.clear();\n+                // If this transaction was last request more than 1 minute ago,\n+                // then request.\n+                int64_t last_request_time = GetTxRequestTime(inv.hash);\n+                if (last_request_time <= nNow - MAX_GETDATA_TX_DELAY) {\n+                    LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n+                    vGetData.push_back(inv);\n+                    if (vGetData.size() >= 1000)\n+                    {\n+                        connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n+                        vGetData.clear();\n+                    }\n+                    UpdateTxRequestTime(inv.hash, nNow);\n+                    state.m_tx_download.m_in_flight.insert(inv.hash);\n+                } else {\n+                    // This transaction is in flight from someone else; queue\n+                    // up processing to happen after the download times out\n+                    // (with a slight delay for inboudnd peers, to prefer\n+                    // requests to outbound peers).\n+                    int64_t new_process_time = last_request_time + MAX_GETDATA_TX_DELAY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250426347",
      "id" : 250426347,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDQyNjM0Nw==",
      "original_commit_id" : "53ad7bedb4e6182acc8f087f92ab87b48184062b",
      "original_position" : 237,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 195785987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250426347",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250430235"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250430235"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Incorrect indentation.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-24T00:49:26Z",
      "diff_hunk" : "@@ -3731,24 +3838,44 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n-        while (!pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n+        std::multimap<int64_t, uint256> &tx_process_time = state.m_tx_download.m_tx_process_time;\n+        while (!tx_process_time.empty() && (*tx_process_time.begin()).first <= nNow && state.m_tx_download.m_in_flight.size() < MAX_PEER_TX_IN_FLIGHT)\n         {\n-            const CInv& inv = (*pto->mapAskFor.begin()).second;\n+            const uint256& txid = (*tx_process_time.begin()).second;\n+            CInv inv(MSG_TX | GetFetchFlags(pto), txid);\n             if (!AlreadyHave(inv))\n             {\n-                LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n-                vGetData.push_back(inv);\n-                if (vGetData.size() >= 1000)\n-                {\n-                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n-                    vGetData.clear();\n+                // If this transaction was last request more than 1 minute ago,\n+                // then request.\n+                int64_t last_request_time = GetTxRequestTime(inv.hash);\n+                if (last_request_time <= nNow - MAX_GETDATA_TX_DELAY) {\n+                    LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n+                    vGetData.push_back(inv);\n+                    if (vGetData.size() >= 1000)\n+                    {\n+                        connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n+                        vGetData.clear();\n+                    }\n+                    UpdateTxRequestTime(inv.hash, nNow);\n+                    state.m_tx_download.m_in_flight.insert(inv.hash);\n+                } else {\n+                    // This transaction is in flight from someone else; queue\n+                    // up processing to happen after the download times out\n+                    // (with a slight delay for inboudnd peers, to prefer\n+                    // requests to outbound peers).\n+                    int64_t new_process_time = last_request_time + MAX_GETDATA_TX_DELAY;\n+                    if (!state.fPreferredDownload) new_process_time += INBOUND_PEER_TX_DELAY;\n+                    tx_process_time.insert(std::make_pair(new_process_time, txid));\n                 }\n-            } else {\n-                //If we're not going to ask, don't expect a response.\n-                pto->setAskFor.erase(inv.hash);\n-            }\n-            pto->mapAskFor.erase(pto->mapAskFor.begin());\n+              } else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r250430235",
      "id" : 250430235,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDQzMDIzNQ==",
      "original_commit_id" : "53ad7bedb4e6182acc8f087f92ab87b48184062b",
      "original_position" : 246,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 195785987,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250430235",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Due to the fact that nodes are processed in order in CConnman::ThreadMessageHandler, with an up-to-100ms delay before running SendMessages, I believe it may be very likely that the first outgoing peer will get the inv first. Maybe when re-inserting invs in the queue for processing, add a small random delay (say in the order of a few seconds)?",
      "created_at" : "2019-01-24T19:08:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-457318391",
      "id" : 457318391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NzMxODM5MQ==",
      "updated_at" : "2019-01-24T19:08:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457318391",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa so in current version inbound peers get a penalty of 1 second. Without the randomization you suggest, creating sybil inbound connections to a target node is quite pointless.\r\n\r\nIf we add this PoissonNextSend(2) to every *non-first* (I believe it does not make sense for first) request, it would make sense to create sybil inbounds, hope that one of them roll zero and get a 1-second delay (from penalty), while one (or N/8) outbound get 2-seconds delay on average (and there are currently only 8 outbound not all of which would know the tx under attack).\r\n\r\nThus, there is a trade-off. I think it is safe enough when penalty >= delay, so I'll make both of them 1 second for now. I will leave a comment about it as well.",
      "created_at" : "2019-01-26T04:50:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-457802080",
      "id" : 457802080,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NzgwMjA4MA==",
      "updated_at" : "2019-01-26T04:51:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457802080",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs What about something like a uniform delay between 60 and 62 s for outbound, and between 62 and 64 s for inbound?",
      "created_at" : "2019-01-26T05:17:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-457803340",
      "id" : 457803340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NzgwMzM0MA==",
      "updated_at" : "2019-01-26T05:17:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457803340",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've increased the delay to 2 seconds. We might've still used 1 second for first request to reduce the latency, but 1) I believe the issue pointed out above still applies for inbound even though it's much less likely 2) I think latency won't be affected significantly (I'd expect 5% extra delay or so)  3) code looks a bit cleaner this way",
      "created_at" : "2019-01-26T05:35:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-457804217",
      "id" : 457804217,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NzgwNDIxNw==",
      "updated_at" : "2019-01-26T05:35:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457804217",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251509914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251509914"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Looks like you can remove these two lines now",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-28T17:13:21Z",
      "diff_hunk" : "@@ -72,6 +72,8 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n     void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    // void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main) { m_already_asked_for.erase(txid); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251509914",
      "id" : 251509914,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTUwOTkxNA==",
      "original_commit_id" : "fe01a6d9420d1bc4f1490b2ca9b776c3a4c9c38e",
      "original_position" : 4,
      "path" : "src/net_processing.h",
      "position" : null,
      "pull_request_review_id" : 197155484,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251509914",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/12243734?v=4",
         "events_url" : "https://api.github.com/users/marcinja/events{/privacy}",
         "followers_url" : "https://api.github.com/users/marcinja/followers",
         "following_url" : "https://api.github.com/users/marcinja/following{/other_user}",
         "gists_url" : "https://api.github.com/users/marcinja/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/marcinja",
         "id" : 12243734,
         "login" : "marcinja",
         "node_id" : "MDQ6VXNlcjEyMjQzNzM0",
         "organizations_url" : "https://api.github.com/users/marcinja/orgs",
         "received_events_url" : "https://api.github.com/users/marcinja/received_events",
         "repos_url" : "https://api.github.com/users/marcinja/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/marcinja/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/marcinja/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/marcinja"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251569015"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251569015"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "oops!",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-28T19:54:08Z",
      "diff_hunk" : "@@ -72,6 +72,8 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n     void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    // void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main) { m_already_asked_for.erase(txid); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251569015",
      "id" : 251569015,
      "in_reply_to_id" : 251509914,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTU2OTAxNQ==",
      "original_commit_id" : "fe01a6d9420d1bc4f1490b2ca9b776c3a4c9c38e",
      "original_position" : 4,
      "path" : "src/net_processing.h",
      "position" : null,
      "pull_request_review_id" : 197228835,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251569015",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251978894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251978894"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There's no downside here to using a uniform distribution here, is there?  And otherwise some inbound peers could be prioritized over outbound peers, which is what we were trying to avoid... I think we could just do:\r\n\r\n`process_time = last_request_time + MAX_GETDATA_TX_DELAY + GetRand(AVG_GETDATA_REQUEST_INTERVAL * 1000000)`",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-29T19:19:14Z",
      "diff_hunk" : "@@ -657,25 +663,56 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n-void RequestTx(CNodeState *state, uint256 &txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    m_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid)\n+{\n+    auto it = m_already_asked_for.find(txid);\n+    if (it != m_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256 &txid, int64_t request_time)\n {\n-    CNodeState::TxDownloadState &peer = state->m_tx_download;\n-    if (peer.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer.m_tx_announced.count(txid)) {\n+    auto it = m_already_asked_for.find(txid);\n+    if (it == m_already_asked_for.end()) {\n+        m_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        m_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState *state, const uint256 &txid) {\n+    CNodeState::TxDownloadState &peer_download_state = state->m_tx_download;\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n         // Too many queued announcements from this peer, or we already have\n         // this announcement\n         return;\n     }\n-    peer.m_tx_announced.insert(txid);\n \n-    int64_t process_time = GetTimeMicros();\n+    int64_t process_time;\n+    int64_t last_request_time = GetTxRequestTime(txid);\n+    // First time requesting this tx\n+    if (last_request_time == 0) {\n+        peer_download_state.m_tx_announced.insert(txid);\n+        process_time = GetTimeMicros();\n+    } else {\n+        // Add extra delay so that first peer from the list is not prioritizied due to ThreadMessageHandler delay\n+        process_time = PoissonNextSend(last_request_time + MAX_GETDATA_TX_DELAY, AVG_GETDATA_REQUEST_INTERVAL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251978894",
      "id" : 251978894,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTk3ODg5NA==",
      "original_commit_id" : "be6a8a3c44acae5dc23aca67fd9f25ddc9d10f51",
      "original_position" : 77,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 197736548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251978894",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251978982"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251978982"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: prioritized\r\n\r\nAlso I find this comment a bit confusing, perhaps just something like:\r\n`// Randomize the delay to avoid biasing some peers over others (such as due to fixed ordering of peer processing in ThreadMessageHandler)`\r\n\r\n(BTW sorry for writing this code incorrectly the first time, I mistakenly thought we shuffled our peers each loop iteration in ThreadMessageHandler, which is why I didn't add randomization here in the first place!)",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-29T19:19:31Z",
      "diff_hunk" : "@@ -657,25 +663,56 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n-void RequestTx(CNodeState *state, uint256 &txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    m_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid)\n+{\n+    auto it = m_already_asked_for.find(txid);\n+    if (it != m_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256 &txid, int64_t request_time)\n {\n-    CNodeState::TxDownloadState &peer = state->m_tx_download;\n-    if (peer.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer.m_tx_announced.count(txid)) {\n+    auto it = m_already_asked_for.find(txid);\n+    if (it == m_already_asked_for.end()) {\n+        m_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        m_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState *state, const uint256 &txid) {\n+    CNodeState::TxDownloadState &peer_download_state = state->m_tx_download;\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n         // Too many queued announcements from this peer, or we already have\n         // this announcement\n         return;\n     }\n-    peer.m_tx_announced.insert(txid);\n \n-    int64_t process_time = GetTimeMicros();\n+    int64_t process_time;\n+    int64_t last_request_time = GetTxRequestTime(txid);\n+    // First time requesting this tx\n+    if (last_request_time == 0) {\n+        peer_download_state.m_tx_announced.insert(txid);\n+        process_time = GetTimeMicros();\n+    } else {\n+        // Add extra delay so that first peer from the list is not prioritizied due to ThreadMessageHandler delay",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251978982",
      "id" : 251978982,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTk3ODk4Mg==",
      "original_commit_id" : "be6a8a3c44acae5dc23aca67fd9f25ddc9d10f51",
      "original_position" : 76,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 197736548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251978982",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251979507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251979507"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we still want the `GUARDED_BY(cs_main)` annotation here?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-29T19:20:54Z",
      "diff_hunk" : "@@ -367,6 +370,9 @@ struct CNodeState {\n     }\n };\n \n+// Keeps track of the time (in microseconds) when transactions were requested last time\n+limitedmap<uint256, int64_t> m_already_asked_for(MAX_INV_SZ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251979507",
      "id" : 251979507,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTk3OTUwNw==",
      "original_commit_id" : "be6a8a3c44acae5dc23aca67fd9f25ddc9d10f51",
      "original_position" : 22,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 197736548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251979507",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251979712"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251979712"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this should also have `EXCLUSIVE_LOCKS_REQUIRED(cs_main)`.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-29T19:21:29Z",
      "diff_hunk" : "@@ -657,25 +663,56 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n-void RequestTx(CNodeState *state, uint256 &txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    m_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251979712",
      "id" : 251979712,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTk3OTcxMg==",
      "original_commit_id" : "be6a8a3c44acae5dc23aca67fd9f25ddc9d10f51",
      "original_position" : 37,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 197736548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251979712",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251979850"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251979850"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`EXCLUSIVE_LOCKS_REQUIRED(cs_main)` here as well.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-29T19:21:52Z",
      "diff_hunk" : "@@ -657,25 +663,56 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n-void RequestTx(CNodeState *state, uint256 &txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    m_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid)\n+{\n+    auto it = m_already_asked_for.find(txid);\n+    if (it != m_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256 &txid, int64_t request_time)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251979850",
      "id" : 251979850,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTk3OTg1MA==",
      "original_commit_id" : "be6a8a3c44acae5dc23aca67fd9f25ddc9d10f51",
      "original_position" : 46,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 197736548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251979850",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251980514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251980514"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`EXCLUSIVE_LOCKS_REQUIRED(cs_main)` here as well.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-29T19:23:37Z",
      "diff_hunk" : "@@ -657,25 +663,56 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n-void RequestTx(CNodeState *state, uint256 &txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    m_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid)\n+{\n+    auto it = m_already_asked_for.find(txid);\n+    if (it != m_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256 &txid, int64_t request_time)\n {\n-    CNodeState::TxDownloadState &peer = state->m_tx_download;\n-    if (peer.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer.m_tx_announced.count(txid)) {\n+    auto it = m_already_asked_for.find(txid);\n+    if (it == m_already_asked_for.end()) {\n+        m_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        m_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState *state, const uint256 &txid) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r251980514",
      "id" : 251980514,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTk4MDUxNA==",
      "original_commit_id" : "be6a8a3c44acae5dc23aca67fd9f25ddc9d10f51",
      "original_position" : 59,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 197736548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251980514",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252044077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252044077"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "For some reason I didn't manage to make it work with limitedmaps. It seemed like it's either size allocation or ``GUARDED_BY``, and I don't see how to allocate it anywhere else after my code changes. ",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-29T22:25:57Z",
      "diff_hunk" : "@@ -367,6 +370,9 @@ struct CNodeState {\n     }\n };\n \n+// Keeps track of the time (in microseconds) when transactions were requested last time\n+limitedmap<uint256, int64_t> m_already_asked_for(MAX_INV_SZ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252044077",
      "id" : 252044077,
      "in_reply_to_id" : 251979507,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjA0NDA3Nw==",
      "original_commit_id" : "be6a8a3c44acae5dc23aca67fd9f25ddc9d10f51",
      "original_position" : 22,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 197817169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252044077",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252054079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252054079"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> some inbound peers could be prioritized over outbound peers\r\n\r\nNope, with these constants, it's [60..62] for outbound and [62..64] for inbound, so it's not possible.\r\n\r\nHowever, I think you're right and using GetRand() would work.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-29T22:59:38Z",
      "diff_hunk" : "@@ -657,25 +663,56 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n-void RequestTx(CNodeState *state, uint256 &txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    m_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid)\n+{\n+    auto it = m_already_asked_for.find(txid);\n+    if (it != m_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256 &txid, int64_t request_time)\n {\n-    CNodeState::TxDownloadState &peer = state->m_tx_download;\n-    if (peer.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer.m_tx_announced.count(txid)) {\n+    auto it = m_already_asked_for.find(txid);\n+    if (it == m_already_asked_for.end()) {\n+        m_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        m_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState *state, const uint256 &txid) {\n+    CNodeState::TxDownloadState &peer_download_state = state->m_tx_download;\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n         // Too many queued announcements from this peer, or we already have\n         // this announcement\n         return;\n     }\n-    peer.m_tx_announced.insert(txid);\n \n-    int64_t process_time = GetTimeMicros();\n+    int64_t process_time;\n+    int64_t last_request_time = GetTxRequestTime(txid);\n+    // First time requesting this tx\n+    if (last_request_time == 0) {\n+        peer_download_state.m_tx_announced.insert(txid);\n+        process_time = GetTimeMicros();\n+    } else {\n+        // Add extra delay so that first peer from the list is not prioritizied due to ThreadMessageHandler delay\n+        process_time = PoissonNextSend(last_request_time + MAX_GETDATA_TX_DELAY, AVG_GETDATA_REQUEST_INTERVAL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252054079",
      "id" : 252054079,
      "in_reply_to_id" : 251978894,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjA1NDA3OQ==",
      "original_commit_id" : "be6a8a3c44acae5dc23aca67fd9f25ddc9d10f51",
      "original_position" : 77,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 197829485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252054079",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252104433"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252104433"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> For some reason I didn't manage to make it work with limitedmaps. It seemed like it's either size allocation or GUARDED_BY, and I don't see how to allocate it anywhere else after my code changes.\r\n\r\n\r\nThis might work\r\n\r\n```suggestion\r\nlimitedmap<uint256, int64_t> m_already_asked_for GUARDED_BY(cs_main)(MAX_INV_SZ);\r\n```",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-30T03:19:13Z",
      "diff_hunk" : "@@ -301,6 +370,9 @@ struct CNodeState {\n     }\n };\n \n+// Keeps track of the time (in microseconds) when transactions were requested last time\n+limitedmap<uint256, int64_t> m_already_asked_for(MAX_INV_SZ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252104433",
      "id" : 252104433,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjEwNDQzMw==",
      "original_commit_id" : "1c2dc6dfb6811987f752ca3abb3134395c468b93",
      "original_position" : 88,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 197889380,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252104433",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252301125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252301125"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Nope, with these constants, it's [60..62] for outbound and [62..64] for inbound, so it's not possible.\r\n\r\nThere is no upper bound on what PoissonNextSend might return...?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-30T15:20:11Z",
      "diff_hunk" : "@@ -657,25 +663,56 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n-void RequestTx(CNodeState *state, uint256 &txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    m_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid)\n+{\n+    auto it = m_already_asked_for.find(txid);\n+    if (it != m_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256 &txid, int64_t request_time)\n {\n-    CNodeState::TxDownloadState &peer = state->m_tx_download;\n-    if (peer.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer.m_tx_announced.count(txid)) {\n+    auto it = m_already_asked_for.find(txid);\n+    if (it == m_already_asked_for.end()) {\n+        m_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        m_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState *state, const uint256 &txid) {\n+    CNodeState::TxDownloadState &peer_download_state = state->m_tx_download;\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n         // Too many queued announcements from this peer, or we already have\n         // this announcement\n         return;\n     }\n-    peer.m_tx_announced.insert(txid);\n \n-    int64_t process_time = GetTimeMicros();\n+    int64_t process_time;\n+    int64_t last_request_time = GetTxRequestTime(txid);\n+    // First time requesting this tx\n+    if (last_request_time == 0) {\n+        peer_download_state.m_tx_announced.insert(txid);\n+        process_time = GetTimeMicros();\n+    } else {\n+        // Add extra delay so that first peer from the list is not prioritizied due to ThreadMessageHandler delay\n+        process_time = PoissonNextSend(last_request_time + MAX_GETDATA_TX_DELAY, AVG_GETDATA_REQUEST_INTERVAL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252301125",
      "id" : 252301125,
      "in_reply_to_id" : 251978894,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjMwMTEyNQ==",
      "original_commit_id" : "be6a8a3c44acae5dc23aca67fd9f25ddc9d10f51",
      "original_position" : 77,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 198134141,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252301125",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested and it works, though I'd like to see the changes I mentioned above.\r\n\r\nHere's a functional test that reviewers may be interested in that demonstrates the new behavior (this test fails on master):\r\n\r\n```\r\n#!/usr/bin/env python3\r\n# Copyright (c) 2019 The Bitcoin Core developers\r\n# Distributed under the MIT software license, see the accompanying\r\n# file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n\"\"\"Test transaction download behavior for resilience to InvBlock.\r\n\r\n- Create some bitcoind nodes that are connected to one another.\r\n- Create many mininode's to each bitcoind.\r\n- Randomly create a transaction on a bitcoind node:\r\n  * When a mininode hears of the transaction via an INV, send\r\n    announcements from all mininodes to all bitcoind nodes.\r\n  * Do not respond to any GETDATA requests.\r\n  * Verify that after 90 seconds all bitcoind nodes still have each\r\n    transaction.\r\n\r\n\"\"\"\r\n\r\nfrom test_framework.messages import msg_inv, CInv\r\nfrom test_framework.mininode import P2PInterface\r\nfrom test_framework.test_framework import BitcoinTestFramework\r\nfrom test_framework.util import sync_mempools\r\n\r\nclass TestP2PConn(P2PInterface):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.announced_tx = []\r\n\r\nclass TxDownloadTest(BitcoinTestFramework):\r\n    def set_test_params(self):\r\n        self.setup_clean_chain = True\r\n        self.num_nodes = 5\r\n\r\n    def test_inv_block(self):\r\n        # Pick a random bitcoind and generate a transaction\r\n        import random\r\n        node = random.choice(self.nodes)\r\n        txid = node.sendtoaddress(random.choice(self.nodes).getnewaddress(), 1)\r\n        self.log.info(\"---> Generated txid \" + txid)\r\n        txid = int(txid, 16)\r\n\r\n        # Announce the transaction to all peers\r\n        msg = msg_inv([CInv(t=1, h=txid)])\r\n        for p in self.peers:\r\n            p.send_message(msg)\r\n\r\n        sync_mempools(self.nodes, timeout=90)\r\n        self.log.info(\"---> Mempools synced\")\r\n\r\n    def run_test(self):\r\n        # Setup the p2p connections\r\n        NUM_INBOUND = 10\r\n        self.peers = []\r\n        for node in self.nodes:\r\n            node.generate(10)\r\n            self.sync_all()\r\n            for i in range(NUM_INBOUND):\r\n                 self.peers.append(node.add_p2p_connection(TestP2PConn()))\r\n\r\n        self.nodes[0].generate(100) # mature prior coinbases\r\n        self.sync_all()\r\n        self.log.info(\"Nodes are setup with balances\")\r\n\r\n        TRIALS = 2\r\n        for i in range(TRIALS):\r\n            self.log.info(\"InvBlockTest: trial %d\" % i)\r\n            self.test_inv_block()\r\n\r\nif __name__ == '__main__':\r\n    TxDownloadTest().main()\r\n```",
      "created_at" : "2019-01-30T15:31:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-458987276",
      "id" : 458987276,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1ODk4NzI3Ng==",
      "updated_at" : "2019-01-30T15:31:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458987276",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252308379"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252308379"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You're right, thanks.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-30T15:35:38Z",
      "diff_hunk" : "@@ -657,25 +663,56 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n-void RequestTx(CNodeState *state, uint256 &txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    m_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid)\n+{\n+    auto it = m_already_asked_for.find(txid);\n+    if (it != m_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256 &txid, int64_t request_time)\n {\n-    CNodeState::TxDownloadState &peer = state->m_tx_download;\n-    if (peer.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer.m_tx_announced.count(txid)) {\n+    auto it = m_already_asked_for.find(txid);\n+    if (it == m_already_asked_for.end()) {\n+        m_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        m_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState *state, const uint256 &txid) {\n+    CNodeState::TxDownloadState &peer_download_state = state->m_tx_download;\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n         // Too many queued announcements from this peer, or we already have\n         // this announcement\n         return;\n     }\n-    peer.m_tx_announced.insert(txid);\n \n-    int64_t process_time = GetTimeMicros();\n+    int64_t process_time;\n+    int64_t last_request_time = GetTxRequestTime(txid);\n+    // First time requesting this tx\n+    if (last_request_time == 0) {\n+        peer_download_state.m_tx_announced.insert(txid);\n+        process_time = GetTimeMicros();\n+    } else {\n+        // Add extra delay so that first peer from the list is not prioritizied due to ThreadMessageHandler delay\n+        process_time = PoissonNextSend(last_request_time + MAX_GETDATA_TX_DELAY, AVG_GETDATA_REQUEST_INTERVAL);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252308379",
      "id" : 252308379,
      "in_reply_to_id" : 251978894,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjMwODM3OQ==",
      "original_commit_id" : "be6a8a3c44acae5dc23aca67fd9f25ddc9d10f51",
      "original_position" : 77,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 198143460,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252308379",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Could the commits be squashed into a single one? It seems they are just fixups to the first one.",
      "created_at" : "2019-01-30T15:39:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-458990298",
      "id" : 458990298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1ODk5MDI5OA==",
      "updated_at" : "2019-01-30T15:39:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458990298",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252326992"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252326992"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Verified that this works, thanks @MarcoFalke ",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-30T16:14:44Z",
      "diff_hunk" : "@@ -301,6 +370,9 @@ struct CNodeState {\n     }\n };\n \n+// Keeps track of the time (in microseconds) when transactions were requested last time\n+limitedmap<uint256, int64_t> m_already_asked_for(MAX_INV_SZ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252326992",
      "id" : 252326992,
      "in_reply_to_id" : 252104433,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjMyNjk5Mg==",
      "original_commit_id" : "1c2dc6dfb6811987f752ca3abb3134395c468b93",
      "original_position" : 88,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 198167619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252326992",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252328086"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252328086"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Actually, this should be renamed now to `g_already_asked_for`",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-30T16:17:10Z",
      "diff_hunk" : "@@ -367,6 +370,9 @@ struct CNodeState {\n     }\n };\n \n+// Keeps track of the time (in microseconds) when transactions were requested last time\n+limitedmap<uint256, int64_t> m_already_asked_for(MAX_INV_SZ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252328086",
      "id" : 252328086,
      "in_reply_to_id" : 251979507,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjMyODA4Ng==",
      "original_commit_id" : "be6a8a3c44acae5dc23aca67fd9f25ddc9d10f51",
      "original_position" : 22,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 198169044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252328086",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252348537"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252348537"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: This comment should be updated to refer to the new variables (eg mapAlreadyAskedFor was renamed), new constants (1 second is now incorrect), and the randomization behavior/delay change.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-30T17:02:26Z",
      "diff_hunk" : "@@ -274,6 +286,63 @@ struct CNodeState {\n     //! Time of last new block announcement\n     int64_t m_last_block_announcement;\n \n+    /*\n+     * State associated with transaction download.\n+     *\n+     * Tx download algorithm:\n+     *\n+     *   When inv comes in, queue up (process_time, txid) inside the peer's\n+     *   CNodeState (m_tx_process_time) as long as m_tx_announced for the peer\n+     *   isn't too big (MAX_PEER_TX_ANNOUNCEMENTS).\n+     *\n+     *   The process_time for a transaction is set to nNow for outbound peers,\n+     *   nNow + 1 second for inbound peers. This is the time at which we'll\n+     *   consider trying to request the transaction from the peer in\n+     *   SendMessages(). The delay for inbound peers is to allow outbound peers\n+     *   a chance to announce before we request from inbound peers, to prevent\n+     *   an adversary from using inbound connections to blind us to a\n+     *   transaction (InvBlock).\n+     *\n+     *   When we call SendMessages() for a given peer,\n+     *   we will loop over the transactions in m_tx_process_time, looking\n+     *   at the transactions whose process_time <= nNow. We'll request each\n+     *   such transaction that we don't have already and that hasn't been\n+     *   requested from another peer recently, up until we hit the\n+     *   MAX_PEER_TX_IN_FLIGHT limit for the peer. Then we'll update\n+     *   mapAlreadyAskedFor for each requested txid, storing the time of the\n+     *   GETDATA request. We use mapAlreadyAskedFor to coordinate transaction\n+     *   requests amongst our peers.\n+     *\n+     *   For transactions that we still need but we have already recently\n+     *   requested from some other peer, we'll reinsert (process_time, txid)\n+     *   back into the peer's m_tx_process_time at the point in the future at\n+     *   which the most recent GETDATA request would time out (ie\n+     *   MAX_GETDATA_TX_DELAY + the request time stored in mapAlreadyAskedFor).\n+     *   We add an additional delay for inbound peers, again to prefer\n+     *   attempting download from outbound peers first.\n+     *\n+     *   When we receive a transaction from a peer, we remove the txid from the\n+     *   peer's m_in_flight set and from their recently announced set\n+     *   (m_tx_announced).  We also clear m_already_asked_for for that entry, so\n+     *   that if somehow the transaction is not accepted but also not added to\n+     *   the reject filter, then we will eventually redownload from other\n+     *   peers.\n+     */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252348537",
      "id" : 252348537,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjM0ODUzNw==",
      "original_commit_id" : "cf36539a4d7a428e2120c1bc26cfba3216a48a69",
      "original_position" : 64,
      "path" : "src/net_processing.cpp",
      "position" : 70,
      "pull_request_review_id" : 198189249,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252348537",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252348726"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252348726"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I mentioned this before, I believe our style guide says that globals should start with `g_` instead of `m_`.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-01-30T17:02:53Z",
      "diff_hunk" : "@@ -301,6 +370,9 @@ struct CNodeState {\n     }\n };\n \n+// Keeps track of the time (in microseconds) when transactions were requested last time\n+limitedmap<uint256, int64_t> m_already_asked_for GUARDED_BY(cs_main)(MAX_INV_SZ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r252348726",
      "id" : 252348726,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjM0ODcyNg==",
      "original_commit_id" : "cf36539a4d7a428e2120c1bc26cfba3216a48a69",
      "original_position" : 88,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 198189249,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252348726",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253583389"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253583389"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Presumably the `MAX_PEER_TX_ANNOUNCEMENTS` limitation prevents any peer from triggering unnecessary evictions by overrunning this map with junk announcements.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T18:17:57Z",
      "diff_hunk" : "@@ -301,6 +373,9 @@ struct CNodeState {\n     }\n };\n \n+// Keeps track of the time (in microseconds) when transactions were requested last time\n+limitedmap<uint256, int64_t> g_already_asked_for GUARDED_BY(cs_main)(MAX_INV_SZ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253583389",
      "id" : 253583389,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzU4MzM4OQ==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 91,
      "path" : "src/net_processing.cpp",
      "position" : 94,
      "pull_request_review_id" : 199731895,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253583389",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253584924"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253584924"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is it worth a belt-and-suspenders early return here if `txid` is present in `peer_download_state.m_tx_announced` or `.m_in_flight`, a la the old `AskFor()` definition? Or is that change in behavior intentional?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T18:22:08Z",
      "diff_hunk" : "@@ -591,6 +666,58 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    g_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it != g_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256& txid, int64_t request_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it == g_already_asked_for.end()) {\n+        g_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        g_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState* state, const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState& peer_download_state = state->m_tx_download;\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n+        // Too many queued announcements from this peer, or we already have\n+        // this announcement\n+        return;\n+    }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253584924",
      "id" : 253584924,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzU4NDkyNA==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 133,
      "path" : "src/net_processing.cpp",
      "position" : 137,
      "pull_request_review_id" : 199731895,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253584924",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253587193"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253587193"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Might be missing something, but can't see any necessity for this new param.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T18:28:29Z",
      "diff_hunk" : "@@ -1570,7 +1697,7 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n     return true;\n }\n \n-bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman* connman, const std::atomic<bool>& interruptMsgProc, bool enable_bip61)\n+bool static ProcessMessage(PeerLogicValidation* peer_logic, CNode* pfrom, const std::string& strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman* connman, const std::atomic<bool>& interruptMsgProc, bool enable_bip61)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253587193",
      "id" : 253587193,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzU4NzE5Mw==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 160,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 199731895,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253587193",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253597444"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253597444"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the limit on the number of in-flight requests to a peer is what prevents this from being taken over.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T18:54:18Z",
      "diff_hunk" : "@@ -301,6 +373,9 @@ struct CNodeState {\n     }\n };\n \n+// Keeps track of the time (in microseconds) when transactions were requested last time\n+limitedmap<uint256, int64_t> g_already_asked_for GUARDED_BY(cs_main)(MAX_INV_SZ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253597444",
      "id" : 253597444,
      "in_reply_to_id" : 253583389,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzU5NzQ0NA==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 91,
      "path" : "src/net_processing.cpp",
      "position" : 94,
      "pull_request_review_id" : 199748696,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253597444",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253597989"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253597989"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I believe the ` || peer_download_state.m_tx_announced.count(txid)) {` captures the check you're asking about?  I don't think this should be a change in behavior compared with AskFor().\r\n\r\nBecause we check against m_tx_announced, I don't think we also need to check with what's in flight.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T18:55:34Z",
      "diff_hunk" : "@@ -591,6 +666,58 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    g_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it != g_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256& txid, int64_t request_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it == g_already_asked_for.end()) {\n+        g_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        g_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState* state, const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState& peer_download_state = state->m_tx_download;\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n+        // Too many queued announcements from this peer, or we already have\n+        // this announcement\n+        return;\n+    }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253597989",
      "id" : 253597989,
      "in_reply_to_id" : 253584924,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzU5Nzk4OQ==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 133,
      "path" : "src/net_processing.cpp",
      "position" : 137,
      "pull_request_review_id" : 199748696,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253597989",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253598802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253598802"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is a hold-over from an earlier version of this patch in which some of the data structures were inside PeerLogicValidation -- I think you're right that this should be removed now.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T18:57:30Z",
      "diff_hunk" : "@@ -1570,7 +1697,7 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n     return true;\n }\n \n-bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman* connman, const std::atomic<bool>& interruptMsgProc, bool enable_bip61)\n+bool static ProcessMessage(PeerLogicValidation* peer_logic, CNode* pfrom, const std::string& strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman* connman, const std::atomic<bool>& interruptMsgProc, bool enable_bip61)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253598802",
      "id" : 253598802,
      "in_reply_to_id" : 253587193,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzU5ODgwMg==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 160,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 199748696,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253598802",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253599147"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253599147"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "good point, it's not needed after latest changes.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T18:58:20Z",
      "diff_hunk" : "@@ -1570,7 +1697,7 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n     return true;\n }\n \n-bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman* connman, const std::atomic<bool>& interruptMsgProc, bool enable_bip61)\n+bool static ProcessMessage(PeerLogicValidation* peer_logic, CNode* pfrom, const std::string& strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman* connman, const std::atomic<bool>& interruptMsgProc, bool enable_bip61)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253599147",
      "id" : 253599147,
      "in_reply_to_id" : 253587193,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzU5OTE0Nw==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 160,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 199750769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253599147",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253603806"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253603806"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Right, and you need as many as 500 sybil connections to overrun this map :)",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T19:10:32Z",
      "diff_hunk" : "@@ -301,6 +373,9 @@ struct CNodeState {\n     }\n };\n \n+// Keeps track of the time (in microseconds) when transactions were requested last time\n+limitedmap<uint256, int64_t> g_already_asked_for GUARDED_BY(cs_main)(MAX_INV_SZ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253603806",
      "id" : 253603806,
      "in_reply_to_id" : 253583389,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzYwMzgwNg==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 91,
      "path" : "src/net_processing.cpp",
      "position" : 94,
      "pull_request_review_id" : 199756131,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253603806",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253608895"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253608895"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I forgot to add that the downside to this map being overrun is that we'll just request a transaction sooner than we otherwise would have (in the event that it was removed due to this data structure filling up). So if a zillion peers manage to take over this data structure, they're just wasting our bandwidth a bit -- which they can already do.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T19:23:54Z",
      "diff_hunk" : "@@ -301,6 +373,9 @@ struct CNodeState {\n     }\n };\n \n+// Keeps track of the time (in microseconds) when transactions were requested last time\n+limitedmap<uint256, int64_t> g_already_asked_for GUARDED_BY(cs_main)(MAX_INV_SZ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253608895",
      "id" : 253608895,
      "in_reply_to_id" : 253583389,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzYwODg5NQ==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 91,
      "path" : "src/net_processing.cpp",
      "position" : 94,
      "pull_request_review_id" : 199762372,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253608895",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253616437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253616437"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If `g_already_asked_for` turns into a normal map, this whole function can become `g_already_asked_for[txid] = request_time;`.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T19:43:13Z",
      "diff_hunk" : "@@ -591,6 +666,58 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    g_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it != g_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256& txid, int64_t request_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253616437",
      "id" : 253616437,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzYxNjQzNw==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 116,
      "path" : "src/net_processing.cpp",
      "position" : 119,
      "pull_request_review_id" : 199771603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253616437",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253624945"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253624945"
         }
      },
      "author_association" : "MEMBER",
      "body" : "D'oh, yep you're totally right.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T20:05:13Z",
      "diff_hunk" : "@@ -591,6 +666,58 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    g_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it != g_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256& txid, int64_t request_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it == g_already_asked_for.end()) {\n+        g_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        g_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState* state, const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState& peer_download_state = state->m_tx_download;\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n+        // Too many queued announcements from this peer, or we already have\n+        // this announcement\n+        return;\n+    }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253624945",
      "id" : 253624945,
      "in_reply_to_id" : 253584924,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzYyNDk0NQ==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 133,
      "path" : "src/net_processing.cpp",
      "position" : 137,
      "pull_request_review_id" : 199781677,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253624945",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253626146"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253626146"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I think the limit on the number of in-flight requests to a peer is what prevents this from being taken over.\r\n\r\nAh right, per the third clause in this while condition: https://github.com/bitcoin/bitcoin/pull/14897/files#diff-eff7adeaec73a769788bb78858815c91R3864",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T20:08:20Z",
      "diff_hunk" : "@@ -301,6 +373,9 @@ struct CNodeState {\n     }\n };\n \n+// Keeps track of the time (in microseconds) when transactions were requested last time\n+limitedmap<uint256, int64_t> g_already_asked_for GUARDED_BY(cs_main)(MAX_INV_SZ);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253626146",
      "id" : 253626146,
      "in_reply_to_id" : 253583389,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzYyNjE0Ng==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 91,
      "path" : "src/net_processing.cpp",
      "position" : 94,
      "pull_request_review_id" : 199782955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253626146",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK modulo the unnecessary `ProcessMessage()` param.",
      "created_at" : "2019-02-04T20:09:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-460394142",
      "id" : 460394142,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MDM5NDE0Mg==",
      "updated_at" : "2019-02-04T20:09:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/460394142",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK https://github.com/bitcoin/bitcoin/commit/acf05329ca1bc36f8e89dcd7e1db956b6681262d\r\n\r\nIt'd be nice if someone packaged up @sdaftuar's functional test for a follow-up PR.",
      "created_at" : "2019-02-04T20:16:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-460396485",
      "id" : 460396485,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MDM5NjQ4NQ==",
      "updated_at" : "2019-02-04T20:16:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/460396485",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253662793"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253662793"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Suggestion: use `auto&` as type.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T21:58:48Z",
      "diff_hunk" : "@@ -3731,24 +3860,39 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n-        while (!pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n-        {\n-            const CInv& inv = (*pto->mapAskFor.begin()).second;\n-            if (!AlreadyHave(inv))\n-            {\n-                LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n-                vGetData.push_back(inv);\n-                if (vGetData.size() >= 1000)\n-                {\n-                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n-                    vGetData.clear();\n+        std::multimap<int64_t, uint256>& tx_process_time = state.m_tx_download.m_tx_process_time;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253662793",
      "id" : 253662793,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzY2Mjc5Mw==",
      "original_commit_id" : "acf05329ca1bc36f8e89dcd7e1db956b6681262d",
      "original_position" : 201,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 199771603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253662793",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253662911"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253662911"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Suggestion: use `tx_process_time.begin()->second`.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T21:59:10Z",
      "diff_hunk" : "@@ -3731,24 +3860,39 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n-        while (!pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n-        {\n-            const CInv& inv = (*pto->mapAskFor.begin()).second;\n-            if (!AlreadyHave(inv))\n-            {\n-                LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n-                vGetData.push_back(inv);\n-                if (vGetData.size() >= 1000)\n-                {\n-                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n-                    vGetData.clear();\n+        std::multimap<int64_t, uint256>& tx_process_time = state.m_tx_download.m_tx_process_time;\n+        while (!tx_process_time.empty() && tx_process_time.begin()->first <= nNow && state.m_tx_download.m_in_flight.size() < MAX_PEER_TX_IN_FLIGHT) {\n+            const uint256& txid = (*tx_process_time.begin()).second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253662911",
      "id" : 253662911,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzY2MjkxMQ==",
      "original_commit_id" : "acf05329ca1bc36f8e89dcd7e1db956b6681262d",
      "original_position" : 203,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 199771603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253662911",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253663293"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253663293"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe introduce a constant for this (I know it's moved code, feel free to ignore).",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T22:00:17Z",
      "diff_hunk" : "@@ -3731,24 +3860,39 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n-        while (!pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n-        {\n-            const CInv& inv = (*pto->mapAskFor.begin()).second;\n-            if (!AlreadyHave(inv))\n-            {\n-                LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n-                vGetData.push_back(inv);\n-                if (vGetData.size() >= 1000)\n-                {\n-                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n-                    vGetData.clear();\n+        std::multimap<int64_t, uint256>& tx_process_time = state.m_tx_download.m_tx_process_time;\n+        while (!tx_process_time.empty() && tx_process_time.begin()->first <= nNow && state.m_tx_download.m_in_flight.size() < MAX_PEER_TX_IN_FLIGHT) {\n+            const uint256& txid = (*tx_process_time.begin()).second;\n+            CInv inv(MSG_TX | GetFetchFlags(pto), txid);\n+            if (!AlreadyHave(inv)) {\n+                // If this transaction was last requested more than 1 minute ago,\n+                // then request.\n+                int64_t last_request_time = GetTxRequestTime(inv.hash);\n+                if (last_request_time <= nNow - GETDATA_TX_INTERVAL) {\n+                    LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n+                    vGetData.push_back(inv);\n+                    if (vGetData.size() >= 1000) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253663293",
      "id" : 253663293,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzY2MzI5Mw==",
      "original_commit_id" : "acf05329ca1bc36f8e89dcd7e1db956b6681262d",
      "original_position" : 212,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 199771603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253663293",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253667919"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253667919"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can add `static_assert(INBOUND_PEER_DELAY >= MAX_GETDATA_RANDOM_DELAY, \"To preserve security, MAX_GETDATA_RANDOM_DELAY should not exceed INBOUND_PEER_DELAY\");` if you want to codify this (only checked at compile time).",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T22:15:16Z",
      "diff_hunk" : "@@ -64,6 +64,18 @@ static constexpr int STALE_RELAY_AGE_LIMIT = 30 * 24 * 60 * 60;\n /// Age after which a block is considered historical for purposes of rate\n /// limiting block relay. Set to one week, denominated in seconds.\n static constexpr int HISTORICAL_BLOCK_AGE = 7 * 24 * 60 * 60;\n+/** Maximum number of in-flight transactions from a peer */\n+static constexpr int32_t MAX_PEER_TX_IN_FLIGHT = 100;\n+/** Maximum number of announced transactions from a peer */\n+static constexpr int32_t MAX_PEER_TX_ANNOUNCEMENTS = 2 * MAX_INV_SZ;\n+/** How many microseconds to delay requesting transactions from inbound peers */\n+static constexpr int64_t INBOUND_PEER_TX_DELAY = 2 * 1000000;\n+/** How long to wait (in microseconds) before downloading a transaction from an additional peer */\n+static constexpr int64_t GETDATA_TX_INTERVAL = 60 * 1000000;\n+/** Maximum delay (in microseconds) for transaction requests to avoid biasing some peers over others.\n+ * To preserve security, should not exceed INBOUND_PEER_TX_DELAY */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253667919",
      "id" : 253667919,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzY2NzkxOQ==",
      "original_commit_id" : "acf05329ca1bc36f8e89dcd7e1db956b6681262d",
      "original_position" : 13,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 199771603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253667919",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253670248"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253670248"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You could avoid querying the time here, by passing in `nNow` from the caller.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T22:22:40Z",
      "diff_hunk" : "@@ -591,6 +666,58 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    g_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it != g_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256& txid, int64_t request_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it == g_already_asked_for.end()) {\n+        g_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        g_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState* state, const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState& peer_download_state = state->m_tx_download;\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n+        // Too many queued announcements from this peer, or we already have\n+        // this announcement\n+        return;\n+    }\n+\n+    int64_t process_time;\n+    int64_t last_request_time = GetTxRequestTime(txid);\n+    // First time requesting this tx\n+    if (last_request_time == 0) {\n+        peer_download_state.m_tx_announced.insert(txid);\n+        process_time = GetTimeMicros();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253670248",
      "id" : 253670248,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzY3MDI0OA==",
      "original_commit_id" : "acf05329ca1bc36f8e89dcd7e1db956b6681262d",
      "original_position" : 139,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 199771603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253670248",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253678797"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253678797"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Awesome, I forgot about this option.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T22:52:36Z",
      "diff_hunk" : "@@ -64,6 +64,18 @@ static constexpr int STALE_RELAY_AGE_LIMIT = 30 * 24 * 60 * 60;\n /// Age after which a block is considered historical for purposes of rate\n /// limiting block relay. Set to one week, denominated in seconds.\n static constexpr int HISTORICAL_BLOCK_AGE = 7 * 24 * 60 * 60;\n+/** Maximum number of in-flight transactions from a peer */\n+static constexpr int32_t MAX_PEER_TX_IN_FLIGHT = 100;\n+/** Maximum number of announced transactions from a peer */\n+static constexpr int32_t MAX_PEER_TX_ANNOUNCEMENTS = 2 * MAX_INV_SZ;\n+/** How many microseconds to delay requesting transactions from inbound peers */\n+static constexpr int64_t INBOUND_PEER_TX_DELAY = 2 * 1000000;\n+/** How long to wait (in microseconds) before downloading a transaction from an additional peer */\n+static constexpr int64_t GETDATA_TX_INTERVAL = 60 * 1000000;\n+/** Maximum delay (in microseconds) for transaction requests to avoid biasing some peers over others.\n+ * To preserve security, should not exceed INBOUND_PEER_TX_DELAY */",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253678797",
      "id" : 253678797,
      "in_reply_to_id" : 253667919,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzY3ODc5Nw==",
      "original_commit_id" : "acf05329ca1bc36f8e89dcd7e1db956b6681262d",
      "original_position" : 13,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 199848088,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253678797",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253682754"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253682754"
         }
      },
      "author_association" : "MEMBER",
      "body" : "doc-nit: Either remove the \"tx\" from the `m_tx_`-prefix from the other members or call this member `m_tx_in_flight`?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-04T23:07:28Z",
      "diff_hunk" : "@@ -274,6 +286,66 @@ struct CNodeState {\n     //! Time of last new block announcement\n     int64_t m_last_block_announcement;\n \n+    /*\n+     * State associated with transaction download.\n+     *\n+     * Tx download algorithm:\n+     *\n+     *   When inv comes in, queue up (process_time, txid) inside the peer's\n+     *   CNodeState (m_tx_process_time) as long as m_tx_announced for the peer\n+     *   isn't too big (MAX_PEER_TX_ANNOUNCEMENTS).\n+     *\n+     *   The process_time for a transaction is set to nNow for outbound peers,\n+     *   nNow + 2 seconds for inbound peers. This is the time at which we'll\n+     *   consider trying to request the transaction from the peer in\n+     *   SendMessages(). The delay for inbound peers is to allow outbound peers\n+     *   a chance to announce before we request from inbound peers, to prevent\n+     *   an adversary from using inbound connections to blind us to a\n+     *   transaction (InvBlock).\n+     *\n+     *   When we call SendMessages() for a given peer,\n+     *   we will loop over the transactions in m_tx_process_time, looking\n+     *   at the transactions whose process_time <= nNow. We'll request each\n+     *   such transaction that we don't have already and that hasn't been\n+     *   requested from another peer recently, up until we hit the\n+     *   MAX_PEER_TX_IN_FLIGHT limit for the peer. Then we'll update\n+     *   g_already_asked_for for each requested txid, storing the time of the\n+     *   GETDATA request. We use g_already_asked_for to coordinate transaction\n+     *   requests amongst our peers.\n+     *\n+     *   For transactions that we still need but we have already recently\n+     *   requested from some other peer, we'll reinsert (process_time, txid)\n+     *   back into the peer's m_tx_process_time at the point in the future at\n+     *   which the most recent GETDATA request would time out (ie\n+     *   GETDATA_TX_INTERVAL + the request time stored in g_already_asked_for).\n+     *   We add an additional delay for inbound peers, again to prefer\n+     *   attempting download from outbound peers first.\n+     *   We also add an extra small random delay up to 2 seconds\n+     *   to avoid biasing some peers over others. (e.g., due to fixed ordering\n+     *   of peer processing in ThreadMessageHandler).\n+     *\n+     *   When we receive a transaction from a peer, we remove the txid from the\n+     *   peer's m_in_flight set and from their recently announced set\n+     *   (m_tx_announced).  We also clear g_already_asked_for for that entry, so\n+     *   that if somehow the transaction is not accepted but also not added to\n+     *   the reject filter, then we will eventually redownload from other\n+     *   peers.\n+     */\n+    struct TxDownloadState {\n+        /* Track when to attempt download of announced transactions (process\n+         * time in micros -> txid)\n+         */\n+        std::multimap<int64_t, uint256> m_tx_process_time;\n+\n+        //! Store all the transactions a peer has recently announced\n+        std::set<uint256> m_tx_announced;\n+\n+        //! Store transactions which were requested by us\n+        std::set<uint256> m_in_flight;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253682754",
      "id" : 253682754,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MzY4Mjc1NA==",
      "original_commit_id" : "acf05329ca1bc36f8e89dcd7e1db956b6681262d",
      "original_position" : 78,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 199853098,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/253682754",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254007802"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254007802"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "To be clear: are you suggesting switching to normal map and relying on the fact that we are not gonna have 500 sybils (so that it results in the same limiting properties due to checks discussed [here](https://github.com/bitcoin/bitcoin/pull/14897#discussion_r253583389)?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-05T19:16:19Z",
      "diff_hunk" : "@@ -591,6 +666,58 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    g_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it != g_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256& txid, int64_t request_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254007802",
      "id" : 254007802,
      "in_reply_to_id" : 253616437,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDAwNzgwMg==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 116,
      "path" : "src/net_processing.cpp",
      "position" : 119,
      "pull_request_review_id" : 200255384,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254007802",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254013618"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254013618"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: Should be const reference?",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-05T19:30:50Z",
      "diff_hunk" : "@@ -591,6 +666,58 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254013618",
      "id" : 254013618,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDAxMzYxOA==",
      "original_commit_id" : "acf05329ca1bc36f8e89dcd7e1db956b6681262d",
      "original_position" : 100,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 199853098,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254013618",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254016483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254016483"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In this function you are checking against the size of `m_tx_announced` to prevent DoS. However, a remote peer can control whether entries are added to `m_tx_announced` or not (see the if condition before `peer_download_state.m_tx_announced.insert`)\r\n\r\nSo you can eat all memory by slowly filling `m_tx_process_time` without touching the other tx download state and thus avoid the DoS protection.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-05T19:38:31Z",
      "diff_hunk" : "@@ -591,6 +666,58 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    g_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it != g_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256& txid, int64_t request_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it == g_already_asked_for.end()) {\n+        g_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        g_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState* state, const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState& peer_download_state = state->m_tx_download;\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n+        // Too many queued announcements from this peer, or we already have\n+        // this announcement\n+        return;\n+    }\n+\n+    int64_t process_time;\n+    int64_t last_request_time = GetTxRequestTime(txid);\n+    // First time requesting this tx\n+    if (last_request_time == 0) {\n+        peer_download_state.m_tx_announced.insert(txid);\n+        process_time = GetTimeMicros();\n+    } else {\n+        // Randomize the delay to avoid biasing some peers over others (such as due to\n+        // fixed ordering of peer processing in ThreadMessageHandler)\n+        process_time = last_request_time + GETDATA_TX_INTERVAL + GetRand(MAX_GETDATA_RANDOM_DELAY);\n+    }\n+\n+    // We delay processing announcements from non-preferred (eg inbound) peers\n+    if (!state->fPreferredDownload) process_time += INBOUND_PEER_TX_DELAY;\n+\n+    peer_download_state.m_tx_process_time.emplace(process_time, txid);\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254016483",
      "id" : 254016483,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDAxNjQ4Mw==",
      "original_commit_id" : "acf05329ca1bc36f8e89dcd7e1db956b6681262d",
      "original_position" : 150,
      "path" : "src/net_processing.cpp",
      "position" : 153,
      "pull_request_review_id" : 199853098,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254016483",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254017151"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254017151"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Maybe introduce a constant for this (I know it's moved code, feel free to ignore).\r\n\r\nI'd prefer to do this in a follow up pull request for all places where this constant is used, since this is not the only place that uses this constant IIRC.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-05T19:40:21Z",
      "diff_hunk" : "@@ -3731,24 +3860,39 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n-        while (!pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n-        {\n-            const CInv& inv = (*pto->mapAskFor.begin()).second;\n-            if (!AlreadyHave(inv))\n-            {\n-                LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n-                vGetData.push_back(inv);\n-                if (vGetData.size() >= 1000)\n-                {\n-                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n-                    vGetData.clear();\n+        std::multimap<int64_t, uint256>& tx_process_time = state.m_tx_download.m_tx_process_time;\n+        while (!tx_process_time.empty() && tx_process_time.begin()->first <= nNow && state.m_tx_download.m_in_flight.size() < MAX_PEER_TX_IN_FLIGHT) {\n+            const uint256& txid = (*tx_process_time.begin()).second;\n+            CInv inv(MSG_TX | GetFetchFlags(pto), txid);\n+            if (!AlreadyHave(inv)) {\n+                // If this transaction was last requested more than 1 minute ago,\n+                // then request.\n+                int64_t last_request_time = GetTxRequestTime(inv.hash);\n+                if (last_request_time <= nNow - GETDATA_TX_INTERVAL) {\n+                    LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n+                    vGetData.push_back(inv);\n+                    if (vGetData.size() >= 1000) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254017151",
      "id" : 254017151,
      "in_reply_to_id" : 253663293,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDAxNzE1MQ==",
      "original_commit_id" : "acf05329ca1bc36f8e89dcd7e1db956b6681262d",
      "original_position" : 212,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 199853098,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254017151",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254023223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254023223"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good catch!  Looks like it's just a mistake that we are only adding to m_tx_announced if `last_request_time == 0`, rather than always.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-05T19:57:11Z",
      "diff_hunk" : "@@ -591,6 +666,58 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    g_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it != g_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256& txid, int64_t request_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it == g_already_asked_for.end()) {\n+        g_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        g_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState* state, const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState& peer_download_state = state->m_tx_download;\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n+        // Too many queued announcements from this peer, or we already have\n+        // this announcement\n+        return;\n+    }\n+\n+    int64_t process_time;\n+    int64_t last_request_time = GetTxRequestTime(txid);\n+    // First time requesting this tx\n+    if (last_request_time == 0) {\n+        peer_download_state.m_tx_announced.insert(txid);\n+        process_time = GetTimeMicros();\n+    } else {\n+        // Randomize the delay to avoid biasing some peers over others (such as due to\n+        // fixed ordering of peer processing in ThreadMessageHandler)\n+        process_time = last_request_time + GETDATA_TX_INTERVAL + GetRand(MAX_GETDATA_RANDOM_DELAY);\n+    }\n+\n+    // We delay processing announcements from non-preferred (eg inbound) peers\n+    if (!state->fPreferredDownload) process_time += INBOUND_PEER_TX_DELAY;\n+\n+    peer_download_state.m_tx_process_time.emplace(process_time, txid);\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254023223",
      "id" : 254023223,
      "in_reply_to_id" : 254016483,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDAyMzIyMw==",
      "original_commit_id" : "acf05329ca1bc36f8e89dcd7e1db956b6681262d",
      "original_position" : 150,
      "path" : "src/net_processing.cpp",
      "position" : 153,
      "pull_request_review_id" : 200274020,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254023223",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254025498"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254025498"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It seems like it's the only place.\r\nWe had this discussion on IRC: the code for processing GETDATA uses 50,000 instead of 1000 for compatibility reasons.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-05T20:03:51Z",
      "diff_hunk" : "@@ -3731,24 +3860,39 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n-        while (!pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n-        {\n-            const CInv& inv = (*pto->mapAskFor.begin()).second;\n-            if (!AlreadyHave(inv))\n-            {\n-                LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n-                vGetData.push_back(inv);\n-                if (vGetData.size() >= 1000)\n-                {\n-                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n-                    vGetData.clear();\n+        std::multimap<int64_t, uint256>& tx_process_time = state.m_tx_download.m_tx_process_time;\n+        while (!tx_process_time.empty() && tx_process_time.begin()->first <= nNow && state.m_tx_download.m_in_flight.size() < MAX_PEER_TX_IN_FLIGHT) {\n+            const uint256& txid = (*tx_process_time.begin()).second;\n+            CInv inv(MSG_TX | GetFetchFlags(pto), txid);\n+            if (!AlreadyHave(inv)) {\n+                // If this transaction was last requested more than 1 minute ago,\n+                // then request.\n+                int64_t last_request_time = GetTxRequestTime(inv.hash);\n+                if (last_request_time <= nNow - GETDATA_TX_INTERVAL) {\n+                    LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n+                    vGetData.push_back(inv);\n+                    if (vGetData.size() >= 1000) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254025498",
      "id" : 254025498,
      "in_reply_to_id" : 253663293,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDAyNTQ5OA==",
      "original_commit_id" : "acf05329ca1bc36f8e89dcd7e1db956b6681262d",
      "original_position" : 212,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 200276983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254025498",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@naumenkogs  Unless you'd like to be credited as `User` in the release notes, you'll want to change the author name on your commit:\r\n```\r\nAuthor: User <...@gmail.com>\r\n```",
      "created_at" : "2019-02-06T17:56:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-461121519",
      "id" : 461121519,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MTEyMTUxOQ==",
      "updated_at" : "2019-02-06T17:56:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461121519",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254393143"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254393143"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, I'm suggesting that *if* we'd determine that switching to a normal map is safe, this function can be simplified.\r\n\r\n",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-06T18:26:57Z",
      "diff_hunk" : "@@ -591,6 +666,58 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void EraseTxRequest(uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    g_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it != g_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256& txid, int64_t request_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254393143",
      "id" : 254393143,
      "in_reply_to_id" : 253616437,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDM5MzE0Mw==",
      "original_commit_id" : "1442d29530c7245e8a9eca69b4ecdd474fcb38ff",
      "original_position" : 116,
      "path" : "src/net_processing.cpp",
      "position" : 119,
      "pull_request_review_id" : 200732104,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-07T04:25:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254393143",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 4282e1472d",
      "created_at" : "2019-02-06T19:35:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-461157405",
      "id" : 461157405,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MTE1NzQwNQ==",
      "updated_at" : "2019-02-06T19:35:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461157405",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 4282e1472d7798cb622a3918e6cd168ab49ff96e\r\n\r\nOne thing for future consideration: it seems to me that `filterInventoryKnown` and `m_tx_announced` have a partial overlapping function, which makes me wonder if they can be merged, or at least have inv announcement test both.\r\n\r\nYou may want to take @laanwj's comment into account about crediting of your commit.\r\n\r\n",
      "created_at" : "2019-02-06T23:49:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-461234685",
      "id" : 461234685,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MTIzNDY4NQ==",
      "updated_at" : "2019-02-06T23:49:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461234685",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "My last change is just to update author's name.",
      "created_at" : "2019-02-07T15:06:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-461458762",
      "id" : 461458762,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MTQ1ODc2Mg==",
      "updated_at" : "2019-02-07T15:10:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461458762",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "no-code-changes ACK 1cff3d6cb0",
      "created_at" : "2019-02-07T15:12:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-461461555",
      "id" : 461461555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MTQ2MTU1NQ==",
      "updated_at" : "2019-02-07T15:12:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461461555",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254809602"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254809602"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: Could be `const`",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-07T18:23:11Z",
      "diff_hunk" : "@@ -591,6 +669,58 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void EraseTxRequest(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    g_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it != g_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256& txid, int64_t request_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it == g_already_asked_for.end()) {\n+        g_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        g_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState* state, const uint256& txid, int64_t nNow) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState& peer_download_state = state->m_tx_download;\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n+        // Too many queued announcements from this peer, or we already have\n+        // this announcement\n+        return;\n+    }\n+    peer_download_state.m_tx_announced.insert(txid);\n+\n+    int64_t process_time;\n+    int64_t last_request_time = GetTxRequestTime(txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254809602",
      "id" : 254809602,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDgwOTYwMg==",
      "original_commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "original_position" : 139,
      "path" : "src/net_processing.cpp",
      "position" : 139,
      "pull_request_review_id" : 201248349,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-11T15:07:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254809602",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254809936"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254809936"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: Could inline `GetTxRequestTime` here to avoid the named symbol `last_request_time`.",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-07T18:24:06Z",
      "diff_hunk" : "@@ -3731,24 +3866,39 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         //\n         // Message: getdata (non-blocks)\n         //\n-        while (!pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n-        {\n-            const CInv& inv = (*pto->mapAskFor.begin()).second;\n-            if (!AlreadyHave(inv))\n-            {\n-                LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n-                vGetData.push_back(inv);\n-                if (vGetData.size() >= 1000)\n-                {\n-                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n-                    vGetData.clear();\n+        auto& tx_process_time = state.m_tx_download.m_tx_process_time;\n+        while (!tx_process_time.empty() && tx_process_time.begin()->first <= nNow && state.m_tx_download.m_tx_in_flight.size() < MAX_PEER_TX_IN_FLIGHT) {\n+            const uint256& txid = tx_process_time.begin()->second;\n+            CInv inv(MSG_TX | GetFetchFlags(pto), txid);\n+            if (!AlreadyHave(inv)) {\n+                // If this transaction was last requested more than 1 minute ago,\n+                // then request.\n+                int64_t last_request_time = GetTxRequestTime(inv.hash);\n+                if (last_request_time <= nNow - GETDATA_TX_INTERVAL) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254809936",
      "id" : 254809936,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDgwOTkzNg==",
      "original_commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "original_position" : 225,
      "path" : "src/net_processing.cpp",
      "position" : 225,
      "pull_request_review_id" : 201248349,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-11T15:07:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254809936",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254812156"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254812156"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style-nit: Could make this `if (!peer_download_state.m_tx_announced.insert(txid).second) return;` and remove the `count()` above to avoid two lookups. (This will be in line with the previous code in `AskFor`)",
      "commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-07T18:29:46Z",
      "diff_hunk" : "@@ -591,6 +669,58 @@ static void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vec\n     }\n }\n \n+void EraseTxRequest(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    g_already_asked_for.erase(txid);\n+}\n+\n+int64_t GetTxRequestTime(const uint256& txid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it != g_already_asked_for.end()) {\n+        return it->second;\n+    }\n+    return 0;\n+}\n+\n+void UpdateTxRequestTime(const uint256& txid, int64_t request_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    auto it = g_already_asked_for.find(txid);\n+    if (it == g_already_asked_for.end()) {\n+        g_already_asked_for.insert(std::make_pair(txid, request_time));\n+    } else {\n+        g_already_asked_for.update(it, request_time);\n+    }\n+}\n+\n+\n+void RequestTx(CNodeState* state, const uint256& txid, int64_t nNow) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    CNodeState::TxDownloadState& peer_download_state = state->m_tx_download;\n+    if (peer_download_state.m_tx_announced.size() >= MAX_PEER_TX_ANNOUNCEMENTS || peer_download_state.m_tx_announced.count(txid)) {\n+        // Too many queued announcements from this peer, or we already have\n+        // this announcement\n+        return;\n+    }\n+    peer_download_state.m_tx_announced.insert(txid);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#discussion_r254812156",
      "id" : 254812156,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDgxMjE1Ng==",
      "original_commit_id" : "1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "original_position" : 136,
      "path" : "src/net_processing.cpp",
      "position" : 136,
      "pull_request_review_id" : 201248349,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/14897",
      "updated_at" : "2019-02-11T15:07:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254812156",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "no-code-changes ACK 1cff3d6cb017aea87d16cbda0768bbab256d16da",
      "created_at" : "2019-02-07T19:39:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/14897#issuecomment-461567530",
      "id" : 461567530,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/14897",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MTU2NzUzMA==",
      "updated_at" : "2019-02-07T19:39:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461567530",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
