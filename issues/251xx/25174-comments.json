[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This breaks out the easy parts from #24474, which in turn was broken out from #21527.",
      "created_at" : "2022-05-19T22:36:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#issuecomment-1132269943",
      "id" : 1132269943,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25174",
      "node_id" : "IC_kwDOABII585DfRF3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1132269943/reactions"
      },
      "updated_at" : "2022-05-19T22:36:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1132269943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r877823666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877823666"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This member is only accessed by the scheduler thread, so I don't think it needs to be guarded. I see that all access happens to be while cs_main is held, but I'm not sure that's a good reason to add this annotation.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-20T07:24:00Z",
      "diff_hunk" : "@@ -599,14 +599,14 @@ class PeerManagerImpl final : public PeerManager\n     std::atomic<int> m_best_height{-1};\n \n     /** Next time to check for stale tip */\n-    std::chrono::seconds m_stale_tip_check_time{0s};\n+    std::chrono::seconds m_stale_tip_check_time GUARDED_BY(cs_main){0s};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r877823666",
      "id" : 877823666,
      "line" : 602,
      "node_id" : "PRRC_kwDOABII5840Uoay",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 602,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 14,
      "pull_request_review_id" : 979643314,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877823666/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-20T07:31:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877823666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r877827255"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877827255"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As above, this doesn't need cs_main.\r\n\r\nIn fact, I don't see the point of this variable at all. It's only used to prevent calling `StartExtraBlockRelayPeers()` more than once, but that function could be made idempotent to prevent logging multiple times by using `std::atomic<bool>::exchange()`.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-20T07:28:20Z",
      "diff_hunk" : "@@ -599,14 +599,14 @@ class PeerManagerImpl final : public PeerManager\n     std::atomic<int> m_best_height{-1};\n \n     /** Next time to check for stale tip */\n-    std::chrono::seconds m_stale_tip_check_time{0s};\n+    std::chrono::seconds m_stale_tip_check_time GUARDED_BY(cs_main){0s};\n \n     /** Whether this node is running in blocks only mode */\n     const bool m_ignore_incoming_txs;\n \n     /** Whether we've completed initial sync yet, for determining when to turn\n       * on extra block-relay-only peers. */\n-    bool m_initial_sync_finished{false};\n+    bool m_initial_sync_finished GUARDED_BY(cs_main){false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r877827255",
      "id" : 877827255,
      "line" : 609,
      "node_id" : "PRRC_kwDOABII5840UpS3",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 609,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 22,
      "pull_request_review_id" : 979643314,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877827255/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-20T07:31:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877827255",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r877828510"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877828510"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As your commit log already says, I think it'd be better just to actually make this const and included as a ctor parameter (and also made private).",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-20T07:29:57Z",
      "diff_hunk" : "@@ -466,7 +466,7 @@ class CNode\n      * from the wire. This cleaned string can safely be logged or displayed.\n      */\n     std::string cleanSubVer GUARDED_BY(m_subver_mutex){};\n-    bool m_prefer_evict{false}; // This peer is preferred for eviction.\n+    bool m_prefer_evict{false}; // This peer is preferred for eviction. (treated as const)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r877828510",
      "id" : 877828510,
      "line" : 469,
      "node_id" : "PRRC_kwDOABII5840Upme",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 469,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 45,
      "pull_request_review_id" : 979643314,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877828510/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-20T07:31:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877828510",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r877829155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877829155"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think the comment is useful. Anyone reading the code should be able to check this for themselves (and not trust a code comment that claims this).",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-20T07:30:48Z",
      "diff_hunk" : "@@ -413,10 +413,10 @@ class CNode\n     friend struct ConnmanTestMsg;\n \n public:\n-    std::unique_ptr<TransportDeserializer> m_deserializer;\n-    std::unique_ptr<TransportSerializer> m_serializer;\n+    const std::unique_ptr<TransportDeserializer> m_deserializer; // Used only by SocketHandler thread",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r877829155",
      "id" : 877829155,
      "line" : 416,
      "node_id" : "PRRC_kwDOABII5840Upwj",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 416,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 23,
      "pull_request_review_id" : 979643314,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877829155/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-20T07:31:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877829155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23233](https://github.com/bitcoin/bitcoin/pull/23233) (BIP324: Add encrypted p2p transport {de}serializer by dhruv)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2022-05-20T09:25:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#issuecomment-1132681265",
      "id" : 1132681265,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25174",
      "node_id" : "IC_kwDOABII585Dg1gx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1132681265/reactions"
      },
      "updated_at" : "2022-08-29T11:22:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1132681265",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r878263963"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878263963"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That it is *accessible* by other threads is why it needs to be guarded -- that's what ensures that it is only *accessed* by one thread at a time (or ever). Right now, if it were accessed by other threads who'd locked `cs_main`, it would be safe -- all this does is document that.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-20T15:15:30Z",
      "diff_hunk" : "@@ -599,14 +599,14 @@ class PeerManagerImpl final : public PeerManager\n     std::atomic<int> m_best_height{-1};\n \n     /** Next time to check for stale tip */\n-    std::chrono::seconds m_stale_tip_check_time{0s};\n+    std::chrono::seconds m_stale_tip_check_time GUARDED_BY(cs_main){0s};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r878263963",
      "id" : 878263963,
      "in_reply_to_id" : 877823666,
      "line" : 602,
      "node_id" : "PRRC_kwDOABII5840WT6b",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 602,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 14,
      "pull_request_review_id" : 980282482,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878263963/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-20T15:15:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878263963",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r878265507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878265507"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "As above, if you have `cs_main` it is safe to access this. It is not unconditionally safe for anyone to access it (unlike if it were atomic or const), hence it should be guarded. This is attempting to be a minimal, documentation only PR, so removing the variable is out of scope.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-20T15:17:10Z",
      "diff_hunk" : "@@ -599,14 +599,14 @@ class PeerManagerImpl final : public PeerManager\n     std::atomic<int> m_best_height{-1};\n \n     /** Next time to check for stale tip */\n-    std::chrono::seconds m_stale_tip_check_time{0s};\n+    std::chrono::seconds m_stale_tip_check_time GUARDED_BY(cs_main){0s};\n \n     /** Whether this node is running in blocks only mode */\n     const bool m_ignore_incoming_txs;\n \n     /** Whether we've completed initial sync yet, for determining when to turn\n       * on extra block-relay-only peers. */\n-    bool m_initial_sync_finished{false};\n+    bool m_initial_sync_finished GUARDED_BY(cs_main){false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r878265507",
      "id" : 878265507,
      "in_reply_to_id" : 877827255,
      "line" : 609,
      "node_id" : "PRRC_kwDOABII5840WUSj",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 609,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 22,
      "pull_request_review_id" : 980284578,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878265507/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-20T15:17:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878265507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r878265909"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878265909"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The comment is so the person reading the code knows what to check for.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-20T15:17:37Z",
      "diff_hunk" : "@@ -413,10 +413,10 @@ class CNode\n     friend struct ConnmanTestMsg;\n \n public:\n-    std::unique_ptr<TransportDeserializer> m_deserializer;\n-    std::unique_ptr<TransportSerializer> m_serializer;\n+    const std::unique_ptr<TransportDeserializer> m_deserializer; // Used only by SocketHandler thread",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r878265909",
      "id" : 878265909,
      "in_reply_to_id" : 877829155,
      "line" : 416,
      "node_id" : "PRRC_kwDOABII5840WUY1",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 416,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 23,
      "pull_request_review_id" : 980285136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878265909/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-20T15:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878265909",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r878303284"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878303284"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess I'm okay with that in a follow up, but this patchset's been stewing for about 15 months now, so I'm a bit skeptical about increasing the scope?",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-20T15:58:04Z",
      "diff_hunk" : "@@ -466,7 +466,7 @@ class CNode\n      * from the wire. This cleaned string can safely be logged or displayed.\n      */\n     std::string cleanSubVer GUARDED_BY(m_subver_mutex){};\n-    bool m_prefer_evict{false}; // This peer is preferred for eviction.\n+    bool m_prefer_evict{false}; // This peer is preferred for eviction. (treated as const)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r878303284",
      "id" : 878303284,
      "in_reply_to_id" : 877828510,
      "line" : 469,
      "node_id" : "PRRC_kwDOABII5840Wdg0",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 469,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 45,
      "pull_request_review_id" : 980345516,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878303284/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-20T15:58:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/878303284",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Approach ACK.",
      "created_at" : "2022-05-20T16:36:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#issuecomment-1133105043",
      "id" : 1133105043,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25174",
      "node_id" : "IC_kwDOABII585Dic-T",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1133105043/reactions"
      },
      "updated_at" : "2022-05-20T16:36:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1133105043",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/94266259?v=4",
         "events_url" : "https://api.github.com/users/w0xlt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/w0xlt/followers",
         "following_url" : "https://api.github.com/users/w0xlt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/w0xlt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/w0xlt",
         "id" : 94266259,
         "login" : "w0xlt",
         "node_id" : "U_kgDOBZ5jkw",
         "organizations_url" : "https://api.github.com/users/w0xlt/orgs",
         "received_events_url" : "https://api.github.com/users/w0xlt/received_events",
         "repos_url" : "https://api.github.com/users/w0xlt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/w0xlt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/w0xlt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/w0xlt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r880291019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880291019"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Just because a variable is accessed under `cs_main` does not mean that it has to be protected by it. It would have to be if there was a relationship between `m_stale_tip_check_time` and some other variable that is already protected by `cs_main` and both have to be accessed together, but that is not the case.\r\n\r\nThis is the `m_stale_tip_check_time` access:\r\n\r\n```cpp\r\nif (now > m_stale_tip_check_time) {\r\n    ...\r\n    m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\r\n}\r\n```\r\n\r\nIf that would be called by multiple threads it would need a mutex protection. Not necessary `cs_main`. I think it is best to either leave it as is (because it is only accessed by a single thread) or introduce a new mutex for `m_stale_tip_check_time`.\r\n\r\nConsider also a future work that tries to split `cs_main` to improve concurrency - then things have to be chopped off from `cs_main`. Needlessly adding `m_stale_tip_check_time` under it will create more work in the future.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-24T09:40:40Z",
      "diff_hunk" : "@@ -599,14 +599,14 @@ class PeerManagerImpl final : public PeerManager\n     std::atomic<int> m_best_height{-1};\n \n     /** Next time to check for stale tip */\n-    std::chrono::seconds m_stale_tip_check_time{0s};\n+    std::chrono::seconds m_stale_tip_check_time GUARDED_BY(cs_main){0s};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r880291019",
      "id" : 880291019,
      "in_reply_to_id" : 877823666,
      "line" : 602,
      "node_id" : "PRRC_kwDOABII5840eCzL",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 602,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 14,
      "pull_request_review_id" : 982910595,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880291019/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-24T09:40:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880291019",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r880302249"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880302249"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`m_serializer` and `m_deserializer` do not have to be `unique_ptr`. I think `const unique_ptr<T> m_member;` is the same as `T m_member;` and the latter should be preferred because it is simpler, no?\r\n\r\nConsider this:\r\n\r\n<details>\r\n<summary>diff</summary>\r\n\r\n```diff\r\ndiff --git i/src/net.cpp w/src/net.cpp\r\nindex e275c2964d..18110e553b 100644\r\n--- i/src/net.cpp\r\n+++ w/src/net.cpp\r\n@@ -670,22 +670,22 @@ bool CNode::ReceiveMsgBytes(Span<const uint8_t> msg_bytes, bool& complete)\r\n     const auto time = GetTime<std::chrono::microseconds>();\r\n     LOCK(cs_vRecv);\r\n     m_last_recv = std::chrono::duration_cast<std::chrono::seconds>(time);\r\n     nRecvBytes += msg_bytes.size();\r\n     while (msg_bytes.size() > 0) {\r\n         // absorb network data\r\n-        int handled = m_deserializer->Read(msg_bytes);\r\n+        int handled = m_deserializer.Read(msg_bytes);\r\n         if (handled < 0) {\r\n             // Serious header problem, disconnect from the peer.\r\n             return false;\r\n         }\r\n \r\n-        if (m_deserializer->Complete()) {\r\n+        if (m_deserializer.Complete()) {\r\n             // decompose a transport agnostic CNetMessage from the deserializer\r\n             bool reject_message{false};\r\n-            CNetMessage msg = m_deserializer->GetMessage(time, reject_message);\r\n+            CNetMessage msg = m_deserializer.GetMessage(time, reject_message);\r\n             if (reject_message) {\r\n                 // Message deserialization failed. Drop the message but don't disconnect the peer.\r\n                 // store the size of the corrupt message\r\n                 mapRecvBytesPerMsgType.at(NET_MESSAGE_TYPE_OTHER) += msg.m_raw_message_size;\r\n                 continue;\r\n             }\r\n@@ -3042,14 +3042,14 @@ ServiceFlags CConnman::GetLocalServices() const\r\n     return nLocalServices;\r\n }\r\n \r\n unsigned int CConnman::GetReceiveFloodSize() const { return nReceiveFloodSize; }\r\n \r\n CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, std::shared_ptr<Sock> sock, const CAddress& addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress& addrBindIn, const std::string& addrNameIn, ConnectionType conn_type_in, bool inbound_onion)\r\n-    : m_deserializer{std::make_unique<V1TransportDeserializer>(V1TransportDeserializer(Params(), idIn, SER_NETWORK, INIT_PROTO_VERSION))},\r\n-      m_serializer{std::make_unique<V1TransportSerializer>(V1TransportSerializer())},\r\n+    : m_deserializer{V1TransportDeserializer(Params(), idIn, SER_NETWORK, INIT_PROTO_VERSION)},\r\n+      m_serializer{V1TransportSerializer()},\r\n       m_sock{sock},\r\n       m_connected{GetTime<std::chrono::seconds>()},\r\n       addr(addrIn),\r\n       addrBind(addrBindIn),\r\n       m_addr_name{addrNameIn.empty() ? addr.ToStringIPPort() : addrNameIn},\r\n       m_inbound_onion(inbound_onion),\r\n@@ -3094,13 +3094,13 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\r\n         msg.data.size(),\r\n         msg.data.data()\r\n     );\r\n \r\n     // make sure we use the appropriate network transport format\r\n     std::vector<unsigned char> serializedHeader;\r\n-    pnode->m_serializer->prepareForTransport(msg, serializedHeader);\r\n+    pnode->m_serializer.prepareForTransport(msg, serializedHeader);\r\n     size_t nTotalSize = nMessageSize + serializedHeader.size();\r\n \r\n     size_t nBytesSent = 0;\r\n     {\r\n         LOCK(pnode->cs_vSend);\r\n         bool optimisticSend(pnode->vSendMsg.empty());\r\ndiff --git i/src/net.h w/src/net.h\r\nindex 5c43c5bfb8..f99a33a7d1 100644\r\n--- i/src/net.h\r\n+++ w/src/net.h\r\n@@ -410,14 +410,14 @@ public:\r\n class CNode\r\n {\r\n     friend class CConnman;\r\n     friend struct ConnmanTestMsg;\r\n \r\n public:\r\n-    const std::unique_ptr<TransportDeserializer> m_deserializer; // Used only by SocketHandler thread\r\n-    const std::unique_ptr<const TransportSerializer> m_serializer;\r\n+    V1TransportDeserializer m_deserializer; // Used only by SocketHandler thread\r\n+    const V1TransportSerializer m_serializer;\r\n \r\n     NetPermissionFlags m_permissionFlags{NetPermissionFlags::None}; // treated as const outside of fuzz tester\r\n     std::atomic<ServiceFlags> nServices{NODE_NONE};\r\n \r\n     /**\r\n      * Socket used for communication with the node.\r\ndiff --git i/src/test/util/net.cpp w/src/test/util/net.cpp\r\nindex 62b770753a..c6d0c185d1 100644\r\n--- i/src/test/util/net.cpp\r\n+++ w/src/test/util/net.cpp\r\n@@ -30,13 +30,13 @@ void ConnmanTestMsg::NodeReceiveMsgBytes(CNode& node, Span<const uint8_t> msg_by\r\n     }\r\n }\r\n \r\n bool ConnmanTestMsg::ReceiveMsgFrom(CNode& node, CSerializedNetMsg& ser_msg) const\r\n {\r\n     std::vector<uint8_t> ser_msg_header;\r\n-    node.m_serializer->prepareForTransport(ser_msg, ser_msg_header);\r\n+    node.m_serializer.prepareForTransport(ser_msg, ser_msg_header);\r\n \r\n     bool complete;\r\n     NodeReceiveMsgBytes(node, ser_msg_header, complete);\r\n     NodeReceiveMsgBytes(node, ser_msg.data, complete);\r\n     return complete;\r\n }\r\n```\r\n</details>",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-24T09:51:58Z",
      "diff_hunk" : "@@ -413,10 +413,10 @@ class CNode\n     friend struct ConnmanTestMsg;\n \n public:\n-    std::unique_ptr<TransportDeserializer> m_deserializer;\n-    std::unique_ptr<TransportSerializer> m_serializer;\n+    const std::unique_ptr<TransportDeserializer> m_deserializer; // Used only by SocketHandler thread\n+    const std::unique_ptr<const TransportSerializer> m_serializer;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r880302249",
      "id" : 880302249,
      "line" : 417,
      "node_id" : "PRRC_kwDOABII5840eFip",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 417,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 24,
      "pull_request_review_id" : 982926107,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880302249/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-24T10:22:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880302249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r880323950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880323950"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Instead of just a comment, consider actually making it `const`:\r\n\r\n<details>\r\n<summary>diff</summary>\r\n\r\n```diff\r\ndiff --git i/src/net.cpp w/src/net.cpp\r\nindex e275c2964d..7bcaa6feef 100644\r\n--- i/src/net.cpp\r\n+++ w/src/net.cpp\r\n@@ -1237,15 +1237,15 @@ void CConnman::CreateNodeFromAcceptedSocket(std::unique_ptr<Sock>&& sock,\r\n                              addr,\r\n                              CalculateKeyedNetGroup(addr),\r\n                              nonce,\r\n                              addr_bind,\r\n                              /*addrNameIn=*/\"\",\r\n                              ConnectionType::INBOUND,\r\n-                             inbound_onion);\r\n+                             inbound_onion,\r\n+                             permissionFlags);\r\n     pnode->AddRef();\r\n-    pnode->m_permissionFlags = permissionFlags;\r\n     pnode->m_prefer_evict = discouraged;\r\n     m_msgproc->InitializeNode(pnode);\r\n \r\n     LogPrint(BCLog::NET, \"connection from %s accepted\\n\", addr.ToString());\r\n \r\n     {\r\n@@ -3041,15 +3041,16 @@ ServiceFlags CConnman::GetLocalServices() const\r\n {\r\n     return nLocalServices;\r\n }\r\n \r\n unsigned int CConnman::GetReceiveFloodSize() const { return nReceiveFloodSize; }\r\n \r\n-CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, std::shared_ptr<Sock> sock, const CAddress& addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress& addrBindIn, const std::string& addrNameIn, ConnectionType conn_type_in, bool inbound_onion)\r\n+CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, std::shared_ptr<Sock> sock, const CAddress& addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress& addrBindIn, const std::string& addrNameIn, ConnectionType conn_type_in, bool inbound_onion, NetPermissionFlags permissoin_flags)\r\n     : m_deserializer{std::make_unique<V1TransportDeserializer>(V1TransportDeserializer(Params(), idIn, SER_NETWORK, INIT_PROTO_VERSION))},\r\n       m_serializer{std::make_unique<V1TransportSerializer>(V1TransportSerializer())},\r\n+      m_permissionFlags{permissoin_flags},\r\n       m_sock{sock},\r\n       m_connected{GetTime<std::chrono::seconds>()},\r\n       addr(addrIn),\r\n       addrBind(addrBindIn),\r\n       m_addr_name{addrNameIn.empty() ? addr.ToStringIPPort() : addrNameIn},\r\n       m_inbound_onion(inbound_onion),\r\ndiff --git i/src/net.h w/src/net.h\r\nindex 5c43c5bfb8..8701e7502a 100644\r\n--- i/src/net.h\r\n+++ w/src/net.h\r\n@@ -413,13 +413,13 @@ class CNode\r\n     friend struct ConnmanTestMsg;\r\n \r\n public:\r\n     const std::unique_ptr<TransportDeserializer> m_deserializer; // Used only by SocketHandler thread\r\n     const std::unique_ptr<const TransportSerializer> m_serializer;\r\n \r\n-    NetPermissionFlags m_permissionFlags{NetPermissionFlags::None}; // treated as const outside of fuzz tester\r\n+    const NetPermissionFlags m_permissionFlags;\r\n     std::atomic<ServiceFlags> nServices{NODE_NONE};\r\n \r\n     /**\r\n      * Socket used for communication with the node.\r\n      * May not own a Sock object (after `CloseSocketDisconnect()` or during tests).\r\n      * `shared_ptr` (instead of `unique_ptr`) is used to avoid premature close of\r\n@@ -582,13 +582,13 @@ public:\r\n     std::atomic<std::chrono::microseconds> m_last_ping_time{0us};\r\n \r\n     /** Lowest measured round-trip time. Used as an inbound peer eviction\r\n      * criterium in CConnman::AttemptToEvictConnection. */\r\n     std::atomic<std::chrono::microseconds> m_min_ping_time{std::chrono::microseconds::max()};\r\n \r\n-    CNode(NodeId id, ServiceFlags nLocalServicesIn, std::shared_ptr<Sock> sock, const CAddress& addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress& addrBindIn, const std::string& addrNameIn, ConnectionType conn_type_in, bool inbound_onion);\r\n+    CNode(NodeId id, ServiceFlags nLocalServicesIn, std::shared_ptr<Sock> sock, const CAddress& addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress& addrBindIn, const std::string& addrNameIn, ConnectionType conn_type_in, bool inbound_onion, NetPermissionFlags permission_flags = NetPermissionFlags::None);\r\n     CNode(const CNode&) = delete;\r\n     CNode& operator=(const CNode&) = delete;\r\n \r\n     NodeId GetId() const {\r\n         return id;\r\n     }\r\ndiff --git i/src/test/fuzz/util.cpp w/src/test/fuzz/util.cpp\r\nindex 033c6e18d5..5bbaf903c0 100644\r\n--- i/src/test/fuzz/util.cpp\r\n+++ w/src/test/fuzz/util.cpp\r\n@@ -233,13 +233,12 @@ bool FuzzedSock::IsConnected(std::string& errmsg) const\r\n }\r\n \r\n void FillNode(FuzzedDataProvider& fuzzed_data_provider, ConnmanTestMsg& connman, PeerManager& peerman, CNode& node) noexcept\r\n {\r\n     const bool successfully_connected{fuzzed_data_provider.ConsumeBool()};\r\n     const ServiceFlags remote_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\r\n-    const NetPermissionFlags permission_flags = ConsumeWeakEnum(fuzzed_data_provider, ALL_NET_PERMISSION_FLAGS);\r\n     const int32_t version = fuzzed_data_provider.ConsumeIntegralInRange<int32_t>(MIN_PEER_PROTO_VERSION, std::numeric_limits<int32_t>::max());\r\n     const bool relay_txs{fuzzed_data_provider.ConsumeBool()};\r\n \r\n     const CNetMsgMaker mm{0};\r\n \r\n     CSerializedNetMsg msg_version{\r\n@@ -268,13 +267,12 @@ void FillNode(FuzzedDataProvider& fuzzed_data_provider, ConnmanTestMsg& connman,\r\n     assert(node.nVersion == version);\r\n     assert(node.GetCommonVersion() == std::min(version, PROTOCOL_VERSION));\r\n     assert(node.nServices == remote_services);\r\n     CNodeStateStats statestats;\r\n     assert(peerman.GetNodeStateStats(node.GetId(), statestats));\r\n     assert(statestats.m_relay_txs == (relay_txs && !node.IsBlockOnlyConn()));\r\n-    node.m_permissionFlags = permission_flags;\r\n     if (successfully_connected) {\r\n         CSerializedNetMsg msg_verack{mm.Make(NetMsgType::VERACK)};\r\n         (void)connman.ReceiveMsgFrom(node, msg_verack);\r\n         node.fPauseSend = false;\r\n         connman.ProcessMessagesOnce(node);\r\n         {\r\ndiff --git i/src/test/fuzz/util.h w/src/test/fuzz/util.h\r\nindex 580105e442..4d3568ff81 100644\r\n--- i/src/test/fuzz/util.h\r\n+++ w/src/test/fuzz/util.h\r\n@@ -297,23 +297,25 @@ auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<N\r\n     const uint64_t keyed_net_group = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\r\n     const uint64_t local_host_nonce = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\r\n     const CAddress addr_bind = ConsumeAddress(fuzzed_data_provider);\r\n     const std::string addr_name = fuzzed_data_provider.ConsumeRandomLengthString(64);\r\n     const ConnectionType conn_type = fuzzed_data_provider.PickValueInArray(ALL_CONNECTION_TYPES);\r\n     const bool inbound_onion{conn_type == ConnectionType::INBOUND ? fuzzed_data_provider.ConsumeBool() : false};\r\n+    const NetPermissionFlags permission_flags = ConsumeWeakEnum(fuzzed_data_provider, ALL_NET_PERMISSION_FLAGS);\r\n     if constexpr (ReturnUniquePtr) {\r\n         return std::make_unique<CNode>(node_id,\r\n                                        local_services,\r\n                                        sock,\r\n                                        address,\r\n                                        keyed_net_group,\r\n                                        local_host_nonce,\r\n                                        addr_bind,\r\n                                        addr_name,\r\n                                        conn_type,\r\n-                                       inbound_onion);\r\n+                                       inbound_onion,\r\n+                                       permission_flags);\r\n     } else {\r\n         return CNode{node_id,\r\n                      local_services,\r\n                      sock,\r\n                      address,\r\n                      keyed_net_group,\r\n\r\n```\r\n</details>",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-24T10:14:18Z",
      "diff_hunk" : "@@ -413,10 +413,10 @@ class CNode\n     friend struct ConnmanTestMsg;\n \n public:\n-    std::unique_ptr<TransportDeserializer> m_deserializer;\n-    std::unique_ptr<TransportSerializer> m_serializer;\n+    const std::unique_ptr<TransportDeserializer> m_deserializer; // Used only by SocketHandler thread\n+    const std::unique_ptr<const TransportSerializer> m_serializer;\n \n-    NetPermissionFlags m_permissionFlags{NetPermissionFlags::None};\n+    NetPermissionFlags m_permissionFlags{NetPermissionFlags::None}; // treated as const outside of fuzz tester",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r880323950",
      "id" : 880323950,
      "line" : 419,
      "node_id" : "PRRC_kwDOABII5840eK1u",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 419,
      "original_position" : 27,
      "original_start_line" : 419,
      "path" : "src/net.h",
      "position" : 27,
      "pull_request_review_id" : 982926107,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880323950/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 419,
      "start_side" : "LEFT",
      "updated_at" : "2022-05-24T10:22:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880323950",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r880334717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880334717"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Same as [m_permissionFlags](https://github.com/bitcoin/bitcoin/pull/25174#discussion_r880323950), better make it `const`. It is even easier than `m_permissionFlags` because there are no fuzzer changes. Or should we fuzz `m_prefer_evict` too? It would be one-line extension to the fuzzer's `ConsumeNode()` to pass one more boolean parameter from `ConsumeBool()`.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-24T10:26:23Z",
      "diff_hunk" : "@@ -466,7 +466,7 @@ class CNode\n      * from the wire. This cleaned string can safely be logged or displayed.\n      */\n     std::string cleanSubVer GUARDED_BY(m_subver_mutex){};\n-    bool m_prefer_evict{false}; // This peer is preferred for eviction.\n+    bool m_prefer_evict{false}; // This peer is preferred for eviction. (treated as const)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r880334717",
      "id" : 880334717,
      "in_reply_to_id" : 877828510,
      "line" : 469,
      "node_id" : "PRRC_kwDOABII5840eNd9",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 469,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 45,
      "pull_request_review_id" : 982970884,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880334717/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-24T10:26:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880334717",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r882902779"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882902779"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Just because a variable is accessed under `cs_main` does not mean that it has to be protected by it.\r\n\r\nThat's true of everything protected by `cs_main` -- if it weren't there would be no hope of replacing cs_main by some other scheme. The issue isn't whether guarding the variable in some other way would also be safe, it's about documenting some way in which we can guarantee that the use is safe, and have the compiler maintain that guarantee for us.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-26T17:21:02Z",
      "diff_hunk" : "@@ -599,14 +599,14 @@ class PeerManagerImpl final : public PeerManager\n     std::atomic<int> m_best_height{-1};\n \n     /** Next time to check for stale tip */\n-    std::chrono::seconds m_stale_tip_check_time{0s};\n+    std::chrono::seconds m_stale_tip_check_time GUARDED_BY(cs_main){0s};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r882902779",
      "id" : 882902779,
      "in_reply_to_id" : 877823666,
      "line" : 602,
      "node_id" : "PRRC_kwDOABII5840oAb7",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 602,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 14,
      "pull_request_review_id" : 986549170,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882902779/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-26T17:21:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882902779",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r882903387"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882903387"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "They need to be pointers because they're initialised to a subclass of the type they are.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-26T17:21:47Z",
      "diff_hunk" : "@@ -413,10 +413,10 @@ class CNode\n     friend struct ConnmanTestMsg;\n \n public:\n-    std::unique_ptr<TransportDeserializer> m_deserializer;\n-    std::unique_ptr<TransportSerializer> m_serializer;\n+    const std::unique_ptr<TransportDeserializer> m_deserializer; // Used only by SocketHandler thread\n+    const std::unique_ptr<const TransportSerializer> m_serializer;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r882903387",
      "id" : 882903387,
      "in_reply_to_id" : 880302249,
      "line" : 417,
      "node_id" : "PRRC_kwDOABII5840oAlb",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 417,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 24,
      "pull_request_review_id" : 986549976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882903387/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-26T17:21:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882903387",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r883339909"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883339909"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The type they are can be changed: `V1TransportDeserializer m_deserializer;`, as in the diff above. The polymorphism is not needed - we don't use it via a pointer to the base class.\r\n\r\nBefore:\r\n\r\n```cpp\r\nconst std::unique_ptr<TransportDeserializer> m_deserializer;\r\nm_deserializer{std::make_unique<V1TransportDeserializer>(V1TransportDeserializer(...))}\r\n```\r\n\r\nVS\r\n\r\nAfter:\r\n\r\n```cpp\r\nV1TransportDeserializer m_deserializer;\r\nm_deserializer{V1TransportDeserializer(...)}\r\n```\r\n\r\nIt looks like a pure simplification.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-27T07:10:10Z",
      "diff_hunk" : "@@ -413,10 +413,10 @@ class CNode\n     friend struct ConnmanTestMsg;\n \n public:\n-    std::unique_ptr<TransportDeserializer> m_deserializer;\n-    std::unique_ptr<TransportSerializer> m_serializer;\n+    const std::unique_ptr<TransportDeserializer> m_deserializer; // Used only by SocketHandler thread\n+    const std::unique_ptr<const TransportSerializer> m_serializer;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r883339909",
      "id" : 883339909,
      "in_reply_to_id" : 880302249,
      "line" : 417,
      "node_id" : "PRRC_kwDOABII5840prKF",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 417,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 24,
      "pull_request_review_id" : 987129098,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883339909/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-27T07:10:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883339909",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r883351140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883351140"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see your point, but enforcing an unnecessary protection by `cs_main` seems like an abuse to me.\r\n\r\nIMO we shouldn't try to have the compiler maintain a thread-safety guarantee for private class members that are not accessed by multiple threads. If a future change expands the variable usage to multiple threads, then that change should introduce a suitable protection.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-27T07:31:51Z",
      "diff_hunk" : "@@ -599,14 +599,14 @@ class PeerManagerImpl final : public PeerManager\n     std::atomic<int> m_best_height{-1};\n \n     /** Next time to check for stale tip */\n-    std::chrono::seconds m_stale_tip_check_time{0s};\n+    std::chrono::seconds m_stale_tip_check_time GUARDED_BY(cs_main){0s};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r883351140",
      "id" : 883351140,
      "in_reply_to_id" : 877823666,
      "line" : 602,
      "node_id" : "PRRC_kwDOABII5840pt5k",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 602,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 14,
      "pull_request_review_id" : 987142955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883351140/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-27T07:31:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883351140",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r883488811"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883488811"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For context, the unique ptr to a deserializer object was added in #16202. The intention was to use a polymorphism so the deserializer could be upgraded to a p2p v2 (BIP 324) deserializer later.\r\n\r\nI tend to agree with @vasild that we should change this to be simpler. There's been almost no progress on p2p v2 in the intervening years, and it's easy enough to change this back to a polymorphism later if required.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-27T10:33:07Z",
      "diff_hunk" : "@@ -413,10 +413,10 @@ class CNode\n     friend struct ConnmanTestMsg;\n \n public:\n-    std::unique_ptr<TransportDeserializer> m_deserializer;\n-    std::unique_ptr<TransportSerializer> m_serializer;\n+    const std::unique_ptr<TransportDeserializer> m_deserializer; // Used only by SocketHandler thread\n+    const std::unique_ptr<const TransportSerializer> m_serializer;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r883488811",
      "id" : 883488811,
      "in_reply_to_id" : 880302249,
      "line" : 417,
      "node_id" : "PRRC_kwDOABII5840qPgr",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 417,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 24,
      "pull_request_review_id" : 987334212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883488811/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-27T10:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883488811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r883703860"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883703860"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The draft p2p v2 patches make use of the polymorphism, so removing it now seems like it makes things worse to me. Even if it is a good idea, it's fine for a followup, and doesn't improve thread safety so isn't necessary here.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-05-27T15:06:26Z",
      "diff_hunk" : "@@ -413,10 +413,10 @@ class CNode\n     friend struct ConnmanTestMsg;\n \n public:\n-    std::unique_ptr<TransportDeserializer> m_deserializer;\n-    std::unique_ptr<TransportSerializer> m_serializer;\n+    const std::unique_ptr<TransportDeserializer> m_deserializer; // Used only by SocketHandler thread\n+    const std::unique_ptr<const TransportSerializer> m_serializer;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r883703860",
      "id" : 883703860,
      "in_reply_to_id" : 880302249,
      "line" : 417,
      "node_id" : "PRRC_kwDOABII5840rEA0",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 417,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 24,
      "pull_request_review_id" : 987640188,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883703860/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-27T15:06:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883703860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r887880933"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887880933"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok, `unique_ptr` or not is not so much related to thread-safety, kind of scope creep for this PR.",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-06-02T12:12:21Z",
      "diff_hunk" : "@@ -413,10 +413,10 @@ class CNode\n     friend struct ConnmanTestMsg;\n \n public:\n-    std::unique_ptr<TransportDeserializer> m_deserializer;\n-    std::unique_ptr<TransportSerializer> m_serializer;\n+    const std::unique_ptr<TransportDeserializer> m_deserializer; // Used only by SocketHandler thread\n+    const std::unique_ptr<const TransportSerializer> m_serializer;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r887880933",
      "id" : 887880933,
      "in_reply_to_id" : 880302249,
      "line" : 417,
      "node_id" : "PRRC_kwDOABII58406_zl",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 417,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 24,
      "pull_request_review_id" : 993439273,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887880933/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-02T12:12:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887880933",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2022-07-18T10:46:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#issuecomment-1187046405",
      "id" : 1187046405,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25174",
      "node_id" : "IC_kwDOABII585GwOQF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1187046405/reactions"
      },
      "updated_at" : "2022-07-18T10:46:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1187046405",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r923420952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923420952"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Just because a variable is accessed under `cs_main` does not mean that it has to be protected by it.\r\n\r\nAgree.\r\n\r\nMutex's purpose is to protect not an access to a variable, rather class's invariants (any thread must see an object in the consistent state). If we fail to clear describe a protected invariant, it would be better to avoid guarding by a mutex, no?",
      "commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "created_at" : "2022-07-18T14:11:37Z",
      "diff_hunk" : "@@ -599,14 +599,14 @@ class PeerManagerImpl final : public PeerManager\n     std::atomic<int> m_best_height{-1};\n \n     /** Next time to check for stale tip */\n-    std::chrono::seconds m_stale_tip_check_time{0s};\n+    std::chrono::seconds m_stale_tip_check_time GUARDED_BY(cs_main){0s};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r923420952",
      "id" : 923420952,
      "in_reply_to_id" : 877823666,
      "line" : 602,
      "node_id" : "PRRC_kwDOABII5843CkkY",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 602,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 14,
      "pull_request_review_id" : 1041923386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923420952/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-18T14:11:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/923420952",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-08-26T22:26:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#issuecomment-1229011461",
      "id" : 1229011461,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25174",
      "node_id" : "IC_kwDOABII585JQToF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229011461/reactions"
      },
      "updated_at" : "2022-08-26T22:26:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1229011461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957002269"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957002269"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Apart from the feedback already given, this also seems arbitrary. If you want to document symbols that happen to be under the cs_main scope, why only document this one, and not everything else, like `m_highest_fast_announce` ...\r\n\r\nMaybe leave this hunk for a separate pull request? Otherwise I am not sure if this will move forward.",
      "commit_id" : "069fc1e4d86431b5237288206e929acc3977f43b",
      "created_at" : "2022-08-29T07:52:53Z",
      "diff_hunk" : "@@ -657,7 +657,7 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Whether we've completed initial sync yet, for determining when to turn\n       * on extra block-relay-only peers. */\n-    bool m_initial_sync_finished{false};\n+    bool m_initial_sync_finished GUARDED_BY(cs_main){false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957002269",
      "id" : 957002269,
      "line" : 660,
      "node_id" : "PRRC_kwDOABII5845CrId",
      "original_commit_id" : "38ea8226ba7b6359b556c8e3f526a1e3c84062ff",
      "original_line" : 660,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 23,
      "pull_request_review_id" : 1088217846,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957002269/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-29T07:52:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957002269",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957038131"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957038131"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`m_highest_fast_announce` is a member of PeerManagerImpl, not CNode or Peer, so is out of scope for this PR...",
      "commit_id" : "069fc1e4d86431b5237288206e929acc3977f43b",
      "created_at" : "2022-08-29T08:32:45Z",
      "diff_hunk" : "@@ -657,7 +657,7 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Whether we've completed initial sync yet, for determining when to turn\n       * on extra block-relay-only peers. */\n-    bool m_initial_sync_finished{false};\n+    bool m_initial_sync_finished GUARDED_BY(cs_main){false};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957038131",
      "id" : 957038131,
      "in_reply_to_id" : 957002269,
      "line" : 660,
      "node_id" : "PRRC_kwDOABII5845Cz4z",
      "original_commit_id" : "38ea8226ba7b6359b556c8e3f526a1e3c84062ff",
      "original_line" : 660,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 23,
      "pull_request_review_id" : 1088268293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957038131/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-29T08:32:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957038131",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957158282"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957158282"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Question, are both guards useful here? (All but one of the other instances of `PT_GUARDED_BY` don't cumulate both annotations.)  \r\n\r\n```diff\r\n-    std::unique_ptr<i2p::sam::Session> m_i2p_sam_session GUARDED_BY(m_sock_mutex) PT_GUARDED_BY(m_sock_mutex);\r\n+    std::unique_ptr<i2p::sam::Session> m_i2p_sam_session PT_GUARDED_BY(m_sock_mutex);\r\n };\r\n```\r\n",
      "commit_id" : "069fc1e4d86431b5237288206e929acc3977f43b",
      "created_at" : "2022-08-29T10:33:26Z",
      "diff_hunk" : "@@ -613,7 +613,7 @@ class CNode\n      * closed.\n      * Otherwise this unique_ptr is empty.\n      */\n-    std::unique_ptr<i2p::sam::Session> m_i2p_sam_session GUARDED_BY(m_sock_mutex);\n+    std::unique_ptr<i2p::sam::Session> m_i2p_sam_session GUARDED_BY(m_sock_mutex) PT_GUARDED_BY(m_sock_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957158282",
      "id" : 957158282,
      "line" : 616,
      "node_id" : "PRRC_kwDOABII5845DROK",
      "original_commit_id" : "069fc1e4d86431b5237288206e929acc3977f43b",
      "original_line" : 616,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 54,
      "pull_request_review_id" : 1088438353,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957158282/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-29T10:44:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957158282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957160481"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957160481"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree to make these private data members (consider to prefer [non-const](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c12-dont-make-data-members-const-or-references)), if they do not need to be public or protected for testing/fuzzing, e.g.\r\n\r\n```diff\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -339,6 +339,8 @@ class CNode\r\n {\r\n     friend class CConnman;\r\n     friend struct ConnmanTestMsg;\r\n+private:\r\n+    bool m_prefer_evict{false}; // This peer is preferred for eviction.\r\n \r\n public:\r\n     const std::unique_ptr<TransportDeserializer> m_deserializer; // Used only by SocketHandler thread\r\n@@ -393,7 +395,6 @@ public:\r\n      * from the wire. This cleaned string can safely be logged or displayed.\r\n      */\r\n     std::string cleanSubVer GUARDED_BY(m_subver_mutex){};\r\n-    bool m_prefer_evict{false}; // This peer is preferred for eviction. (treated as const)\r\n     bool HasPermission(NetPermissionFlags permission) const {\r\n         return NetPermissions::HasFlag(m_permissionFlags, permission);\r\n     }\r\n```\r\n",
      "commit_id" : "069fc1e4d86431b5237288206e929acc3977f43b",
      "created_at" : "2022-08-29T10:36:20Z",
      "diff_hunk" : "@@ -466,7 +466,7 @@ class CNode\n      * from the wire. This cleaned string can safely be logged or displayed.\n      */\n     std::string cleanSubVer GUARDED_BY(m_subver_mutex){};\n-    bool m_prefer_evict{false}; // This peer is preferred for eviction.\n+    bool m_prefer_evict{false}; // This peer is preferred for eviction. (treated as const)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957160481",
      "id" : 957160481,
      "in_reply_to_id" : 877828510,
      "line" : 396,
      "node_id" : "PRRC_kwDOABII5845DRwh",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 396,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 45,
      "pull_request_review_id" : 1088438353,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957160481/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-29T11:03:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957160481",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957222829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957222829"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No, the original annotation was correct; for some reason I thought PT_GUARDED_BY added some checks GUARDED_BY doesn't have, but that doesn't seem to be the case.\r\n\r\nChanging from GUARDED_BY to PT_GUARDED_BY alone would allow you to do `m_i2p_sam_session = nullptr` without holding the lock, or `if (m_i2p_sam_session != nullptr) { LOCK(m_sock_mutex); m_i2p_sam_session->foo(); }` which would be racy.",
      "commit_id" : "069fc1e4d86431b5237288206e929acc3977f43b",
      "created_at" : "2022-08-29T11:47:54Z",
      "diff_hunk" : "@@ -613,7 +613,7 @@ class CNode\n      * closed.\n      * Otherwise this unique_ptr is empty.\n      */\n-    std::unique_ptr<i2p::sam::Session> m_i2p_sam_session GUARDED_BY(m_sock_mutex);\n+    std::unique_ptr<i2p::sam::Session> m_i2p_sam_session GUARDED_BY(m_sock_mutex) PT_GUARDED_BY(m_sock_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957222829",
      "id" : 957222829,
      "in_reply_to_id" : 957158282,
      "line" : 616,
      "node_id" : "PRRC_kwDOABII5845Dg-t",
      "original_commit_id" : "069fc1e4d86431b5237288206e929acc3977f43b",
      "original_line" : 616,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 54,
      "pull_request_review_id" : 1088526991,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957222829/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-29T11:47:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957222829",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957225539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957225539"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Making data members private does not make them thread safe. This member is thread safe in the current code, despite the lack of a guarding mutex, because its value is fixed immediately after creation, before another thread can access it, and it does not change until it's destructed.",
      "commit_id" : "069fc1e4d86431b5237288206e929acc3977f43b",
      "created_at" : "2022-08-29T11:51:09Z",
      "diff_hunk" : "@@ -466,7 +466,7 @@ class CNode\n      * from the wire. This cleaned string can safely be logged or displayed.\n      */\n     std::string cleanSubVer GUARDED_BY(m_subver_mutex){};\n-    bool m_prefer_evict{false}; // This peer is preferred for eviction.\n+    bool m_prefer_evict{false}; // This peer is preferred for eviction. (treated as const)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957225539",
      "id" : 957225539,
      "in_reply_to_id" : 877828510,
      "line" : 396,
      "node_id" : "PRRC_kwDOABII5845DhpD",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 396,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 45,
      "pull_request_review_id" : 1088530771,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957225539/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-29T11:51:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957225539",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957235557"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957235557"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, the point is to encapsulate as private if the data member participates in the objectâs invariant, versus public (and const if thread-safe).\r\n\r\nEdit: correcting myself, these don't seem to be invariants, so public and const seems fine.",
      "commit_id" : "9816dc96b77fd9780bb97891cd45a1b9798db8f5",
      "created_at" : "2022-08-29T12:03:17Z",
      "diff_hunk" : "@@ -466,7 +466,7 @@ class CNode\n      * from the wire. This cleaned string can safely be logged or displayed.\n      */\n     std::string cleanSubVer GUARDED_BY(m_subver_mutex){};\n-    bool m_prefer_evict{false}; // This peer is preferred for eviction.\n+    bool m_prefer_evict{false}; // This peer is preferred for eviction. (treated as const)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957235557",
      "id" : 957235557,
      "in_reply_to_id" : 877828510,
      "line" : 396,
      "node_id" : "PRRC_kwDOABII5845DkFl",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 396,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 45,
      "pull_request_review_id" : 1088545171,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957235557/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-30T15:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957235557",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957253769"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957253769"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "When I look at both `m_stale_tip_check_time` and `m_initial_sync_finished` and want to convince myself that there's no chance of one thread racing to access them while another is in the middle of modifying them, the way I convince myself of that is \"oh, they're both used from precisely one function, and that function just locked cs_main\".\r\n\r\nIt's certainly possible to look further, and say that `CheckForStaleTipAndEvictPeers` is only called via the scheduler thread; but that's more work, and it's not something that I can easily get the compiler to check for me. I *could* tell the compiler to check it for me with more work; but that involves adding thread-specific mutexes which reviewers here have objected to previously https://github.com/bitcoin/bitcoin/pull/21527#discussion_r631895780 and the whole point of breaking this PR out was to try to make some incremental progress in the meantime.",
      "commit_id" : "9816dc96b77fd9780bb97891cd45a1b9798db8f5",
      "created_at" : "2022-08-29T12:20:20Z",
      "diff_hunk" : "@@ -599,14 +599,14 @@ class PeerManagerImpl final : public PeerManager\n     std::atomic<int> m_best_height{-1};\n \n     /** Next time to check for stale tip */\n-    std::chrono::seconds m_stale_tip_check_time{0s};\n+    std::chrono::seconds m_stale_tip_check_time GUARDED_BY(cs_main){0s};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957253769",
      "id" : 957253769,
      "in_reply_to_id" : 877823666,
      "line" : 651,
      "node_id" : "PRRC_kwDOABII5845DoiJ",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 651,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 14,
      "pull_request_review_id" : 1088575489,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957253769/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-29T12:20:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957253769",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957281170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957281170"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The reason it's thread-safe is that it's (effectively) const; the reason it's (effectively) const is that its value is known at the time the connection is setup. This PR is only about documenting why data members are thread safe, not changing logic or encapsulation...\r\n\r\nI don't really get the `private` suggestion -- it's a `CNode` data member, but it's not accessed by any `CNode` member functions, it's only used by `CConnman::AttemptToEvictConnection`. While `CConnman` is a friend class so could get away with that, it seems like a weird thing to do.\r\n\r\nhttps://github.com/ajtowns/bitcoin/commits/202208-cnodeoptions has a commit with these actually made `const` for whatever that's worth. Again, it does more than just document the current state of the code, so I'm not adding it to this PR.",
      "commit_id" : "9816dc96b77fd9780bb97891cd45a1b9798db8f5",
      "created_at" : "2022-08-29T12:48:03Z",
      "diff_hunk" : "@@ -466,7 +466,7 @@ class CNode\n      * from the wire. This cleaned string can safely be logged or displayed.\n      */\n     std::string cleanSubVer GUARDED_BY(m_subver_mutex){};\n-    bool m_prefer_evict{false}; // This peer is preferred for eviction.\n+    bool m_prefer_evict{false}; // This peer is preferred for eviction. (treated as const)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957281170",
      "id" : 957281170,
      "in_reply_to_id" : 877828510,
      "line" : 396,
      "node_id" : "PRRC_kwDOABII5845DvOS",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 396,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 45,
      "pull_request_review_id" : 1088612131,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957281170/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-29T12:48:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957281170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "review ACK 9816dc96b77fd9780bb97891cd45a1b9798db8f5 ð\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nreview ACK 9816dc96b77fd9780bb97891cd45a1b9798db8f5 ð\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUiGPQwAk8l83FaAio2oGaavZm/DW+AtDfrRktDHvmfZC78JmukdBl+ZFGYStrY+\r\nb7WdSH1n98Xf1Czr1oHrMc1uEHxj/ajAw0lR3ELurht0jRv6o12YMiltI6E21olh\r\nYFhrHVDPwPOgfcS8W1quNAv21MFX1tQTP7vFyyHiZbkP51dHlLKOJRah6SL9Ag9l\r\nCyFXjrDtIE6bgOF06+/T/3KFPDxbxy8vrhsMTGeg33oj6FcCvP+xhkLrwyrmdHnT\r\nmmcHCjfmoWRHcY5alEKOUQAFw+olpEzlLKq8mwsZoCt4prbk8tfihKu3If7LxscP\r\nuF4dDGD3nWiOL76mVgF27MMurdIY7yCI5IHNPOzBxQX8dfjuKY0OnPXLWFJjKOXf\r\ni2MOBQyxJ4fAkZ+KVyBo5qEh2PuwTA+oMFbIyNhaj/IDpOv9W9dHb7jqEkgVEynb\r\nBtmQztp7SkutBiv1rfarRRSWKRkrussJzMY43U7lFe+ClZFXMEw3NJh/AqtThtdV\r\nmG/YSC0D\r\n=34Gj\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n\r\n</details>\r\n",
      "created_at" : "2022-08-29T13:04:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#issuecomment-1230259853",
      "id" : 1230259853,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25174",
      "node_id" : "IC_kwDOABII585JVEaN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 1,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1230259853/reactions"
      },
      "updated_at" : "2022-08-29T13:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1230259853",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Here's one way of documenting \"This member is only accessed by the scheduler thread\" with (I believe) no runtime impact:\r\n\r\n```c++\r\nclass LOCKABLE CodeInspectionRequired { };\r\nclass SCOPED_LOCKABLE CodeInspectionSaysSafeToUse\r\n{\r\npublic:\r\n    CodeInspectionSaysSafeToUse(const CodeInspectionRequired& mut) EXCLUSIVE_LOCK_FUNCTION(mut) { }\r\n    ~CodeInspectionSaysSafeToUse() UNLOCK_FUNCTION() { }\r\n};\r\n#define SAFE_TO_USE(mut) CodeInspectionSaysSafeToUse UNIQUE_NAME(criticalblock)(mut)\r\n```\r\n\r\nYou'd then use it to annotate variables where you have to manually inspect the logic used to access them:\r\n\r\n```c++\r\n    static constexpr CodeInspectionRequired FROM_SCHEDULER_THREAD;\r\n    std::chrono::seconds m_stale_tip_check_time GUARDED_BY(FROM_SCHEDULER_THREAD){0s};\r\n```\r\n\r\nbut could pass that logic up through functions:\r\n\r\n```c++\r\n    void CheckForStaleTipAndEvictPeers() EXCLUSIVE_LOCKS_REQUIRED(FROM_SCHEDULER_THREAD) override;\r\n```\r\n\r\nto the caller:\r\n\r\n```c++\r\n    scheduler.scheduleEvery([this] { SAFE_TO_USE(FROM_SCHEDULER_THREAD); this->CheckForStaleTipAndEvictPeers(); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});\r\n```\r\n\r\nIn this particular case, you'd need to put the `FROM_SCHEDULER_THREAD` declaration in the `PeerManager` virtual class where `CheckForStaleTipAndEvictPeers` is first declared there, and also add `SAFE_TO_USE` annotations in the unit tests. Without the `SAFE_TO_USE` annotation, clang errors with:\r\n\r\n```\r\nnet_processing.cpp:1695:81: error: calling function 'CheckForStaleTipAndEvictPeers' requires holding mutex 'FROM_SCHEDULER_THREAD' exclusively [-Werror,-Wthread-safety-analysis]\r\n    scheduler.scheduleEvery([this] { this->CheckForStaleTipAndEvictPeers(); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});\r\n```\r\n\r\nIs something like the above a good idea? It seems better than what we have now, where we don't document why a variable is safe at all, and could introduce a race by having one PR introduce a new access from another thread with `cs_main` held, while another introduces a new access from the scheduler thread without `cs_main` held, with a bug introduced because neither reviewers nor the compiler hasn't been told what to expect.\r\n\r\nBut compared to just saying `GUARDED_BY(cs_main)` when it already is guarded by cs_main, the above seems needlessly complicated and like it puts too much work on developers rather than tooling.",
      "created_at" : "2022-08-29T13:16:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#issuecomment-1230284198",
      "id" : 1230284198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25174",
      "node_id" : "IC_kwDOABII585JVKWm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1230284198/reactions"
      },
      "updated_at" : "2022-08-29T13:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1230284198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 9816dc96b77fd9780bb97891cd45a1b9798db8f5",
      "created_at" : "2022-08-29T15:38:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#issuecomment-1230488334",
      "id" : 1230488334,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25174",
      "node_id" : "IC_kwDOABII585JV8MO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1230488334/reactions"
      },
      "updated_at" : "2022-08-29T15:38:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1230488334",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Still curious about PR author's opinion about https://github.com/bitcoin/bitcoin/pull/25174#discussion_r880323950.\r\n\r\nSee https://github.com/bitcoin/bitcoin/pull/25174#discussion_r957281170",
      "created_at" : "2022-08-30T09:34:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#issuecomment-1231417307",
      "id" : 1231417307,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25174",
      "node_id" : "IC_kwDOABII585JZe_b",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1231417307/reactions"
      },
      "updated_at" : "2022-08-30T09:34:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1231417307",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r959296476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959296476"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Made const in #25962",
      "commit_id" : "9816dc96b77fd9780bb97891cd45a1b9798db8f5",
      "created_at" : "2022-08-31T08:18:53Z",
      "diff_hunk" : "@@ -466,7 +466,7 @@ class CNode\n      * from the wire. This cleaned string can safely be logged or displayed.\n      */\n     std::string cleanSubVer GUARDED_BY(m_subver_mutex){};\n-    bool m_prefer_evict{false}; // This peer is preferred for eviction.\n+    bool m_prefer_evict{false}; // This peer is preferred for eviction. (treated as const)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25174#discussion_r959296476",
      "id" : 959296476,
      "in_reply_to_id" : 877828510,
      "line" : 396,
      "node_id" : "PRRC_kwDOABII5845LbPc",
      "original_commit_id" : "5df0bd1e8dbfa244ba7cf4bced0bd14e297c02e3",
      "original_line" : 396,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 45,
      "pull_request_review_id" : 1091477959,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25174",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959296476/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-08-31T08:18:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/959296476",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]
