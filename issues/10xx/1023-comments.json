[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r630690"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/630690"
         }
      },
      "author_association" : "NONE",
      "body" : "Is there a possibility to display a message box before the GUI is initialized?\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-04-01T12:45:56Z",
      "diff_hunk" : "@@ -126,23 +128,34 @@ void InitMessage(const std::string &message)\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n-#if !defined(MAC_OSX) && !defined(WIN32)\n-// TODO: implement qtipcserver.cpp for Mac and Windows\n+#if !defined(MAC_OSX)\n+// TODO: implement qtipcserver.cpp for Mac\n \n     // Do this early as we don't want to bother initializing if we are just calling IPC\n     for (int i = 1; i < argc; i++)\n     {\n-        if (strlen(argv[i]) > 7 && strncasecmp(argv[i], \"bitcoin:\", 8) == 0)\n+        // limit length of parsed URLs to max. size of message queue messages\n+        if (strlen(argv[i]) > 7 && strlen(argv[i]) <= BCQT_MQ_MAX_MESSAGE_SIZE && strncasecmp(argv[i], \"bitcoin:\", 8) == 0)\n         {\n-            const char *strURL = argv[i];\n+            const char* pszURL = argv[i];\n             try {\n-                boost::interprocess::message_queue mq(boost::interprocess::open_only, \"BitcoinURL\");\n-                if(mq.try_send(strURL, strlen(strURL), 0))\n+                interprocess::message_queue mq(interprocess::open_only, BCQT_MQ_NAME);\n+                if (mq.try_send(pszURL, strlen(pszURL), 0))\n                     exit(0);\n                 else\n                     break;\n             }\n-            catch (boost::interprocess::interprocess_exception &ex) {\n+            catch (interprocess::interprocess_exception &ex) {\n+                // don't log the \"file not found\" exception, because that's normal for\n+                // the first start of the first instance\n+                if (ex.get_error_code() != interprocess::not_found_error)\n+                {\n+                    printf(\"boost interprocess exception #%d: %s\\n\", ex.get_error_code(), ex.what());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r630690",
      "id" : 630690,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMDY5MA==",
      "original_commit_id" : "8b4659d3b98c8e82d77cb7cd400d27ef7cc1f4a1",
      "original_line" : null,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/qt/bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/630690/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/630690",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r631705"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631705"
         }
      },
      "author_association" : "MEMBER",
      "body" : "- Before the bitcoin GUI is initialized, in GUI code, in the main thread: yes you can use the QMessageBox::critical static function\n- Before Qt and translation services are initialized: no\n\nIn this place here you can't.\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-04-02T07:15:20Z",
      "diff_hunk" : "@@ -126,23 +128,34 @@ void InitMessage(const std::string &message)\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n-#if !defined(MAC_OSX) && !defined(WIN32)\n-// TODO: implement qtipcserver.cpp for Mac and Windows\n+#if !defined(MAC_OSX)\n+// TODO: implement qtipcserver.cpp for Mac\n \n     // Do this early as we don't want to bother initializing if we are just calling IPC\n     for (int i = 1; i < argc; i++)\n     {\n-        if (strlen(argv[i]) > 7 && strncasecmp(argv[i], \"bitcoin:\", 8) == 0)\n+        // limit length of parsed URLs to max. size of message queue messages\n+        if (strlen(argv[i]) > 7 && strlen(argv[i]) <= BCQT_MQ_MAX_MESSAGE_SIZE && strncasecmp(argv[i], \"bitcoin:\", 8) == 0)\n         {\n-            const char *strURL = argv[i];\n+            const char* pszURL = argv[i];\n             try {\n-                boost::interprocess::message_queue mq(boost::interprocess::open_only, \"BitcoinURL\");\n-                if(mq.try_send(strURL, strlen(strURL), 0))\n+                interprocess::message_queue mq(interprocess::open_only, BCQT_MQ_NAME);\n+                if (mq.try_send(pszURL, strlen(pszURL), 0))\n                     exit(0);\n                 else\n                     break;\n             }\n-            catch (boost::interprocess::interprocess_exception &ex) {\n+            catch (interprocess::interprocess_exception &ex) {\n+                // don't log the \"file not found\" exception, because that's normal for\n+                // the first start of the first instance\n+                if (ex.get_error_code() != interprocess::not_found_error)\n+                {\n+                    printf(\"boost interprocess exception #%d: %s\\n\", ex.get_error_code(), ex.what());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r631705",
      "id" : 631705,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTcwNQ==",
      "original_commit_id" : "8b4659d3b98c8e82d77cb7cd400d27ef7cc1f4a1",
      "original_line" : null,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/qt/bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631705/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Please don't open pull requests until you think your code is 100% perfect and tested and ready to go.\n\nBefore then, you can ask people to look at your code or help out using your github repository.\n",
      "created_at" : "2012-04-02T18:35:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-4885091",
      "id" : 4885091,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4ODUwOTE=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/4885091/reactions"
      },
      "updated_at" : "2012-04-02T18:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/4885091",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "These might be interesting as an alternative to boost::interprocess (and flakey shared memory queues in general):\n\nhttp://doc.qt.nokia.com/4.7-snapshot/qlocalserver.html\nhttp://doc.qt.nokia.com/4.7-snapshot/qlocalsocket.html\n\nThey provide a named socket (unix socket on unix, pipe on windows) to communicate between processes on the same machine.\n\nAlternatively, boost also supports unix sockets and windows named pipes, however, the difference is not abstracted away like in the Qt implementation so will need #ifdefs.\n",
      "created_at" : "2012-04-07T12:29:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-5007888",
      "id" : 5007888,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwMDc4ODg=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5007888/reactions"
      },
      "updated_at" : "2012-04-07T12:36:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5007888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebasing required.\n",
      "created_at" : "2012-04-10T13:51:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-5046267",
      "id" : 5046267,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNDYyNjc=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5046267/reactions"
      },
      "updated_at" : "2012-04-10T13:51:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5046267",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Rebased and re-worked a little. I need someone to test this ;).\n\nNeeds boost 1.49 with a small edit in boost/interprocess/detail/tmp_dir_helpers.hpp see: https://svn.boost.org/trac/boost/ticket/5392#comment:24\n\nThere is currently no need for any hard monkey-patches like #986.\n",
      "created_at" : "2012-04-10T21:01:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-5056175",
      "id" : 5056175,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNTYxNzU=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5056175/reactions"
      },
      "updated_at" : "2012-04-10T21:01:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5056175",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "NACK-- not worth requiring boost 1.49 for this, and \"a small edit in boost\" scares the pants off me.\n",
      "created_at" : "2012-04-11T01:22:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-5060351",
      "id" : 5060351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNjAzNTE=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5060351/reactions"
      },
      "updated_at" : "2012-04-11T01:22:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5060351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "The small edit is uncommenting 3 lines of code that are already IN the tmp_dir_helpers.hpp ... I really would like to know what your problem with a boost update is? If you could explain it a little it makes it easier for me to understand, thanks.\n",
      "created_at" : "2012-04-11T06:23:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-5062872",
      "id" : 5062872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNjI4NzI=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5062872/reactions"
      },
      "updated_at" : "2012-04-11T06:23:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5062872",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "With the amount of trouble it has given us, I think we can safely conclude that boost::interprocess is not ready for production use yet until upstream gets their act together. Also it seems aimed at much more complex use-cases such as sharing memory and objects instead of signaling simple lines of text between processes. \n\nWhen I have some time I'll try coming up with a QLocalServer/QLocalSocket based implementation.\n",
      "created_at" : "2012-04-11T07:13:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-5063407",
      "id" : 5063407,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNjM0MDc=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5063407/reactions"
      },
      "updated_at" : "2012-04-11T07:13:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5063407",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "RE: what's the trouble with requiring everybody upgrade to boost 1.49:  boost is probably the hardest of our dependencies to get compiled and working, and somebody running an older version of Linux or OSX that spent a day getting boost 1.46 compiled and working properly to compile bitcoind isn't going to be happy if we tell them \"you need 1.49 now, because we need that version to fix a bug in URI handling on Windows.\"\n\nThey may not care about bitcoin-qt at all and certainly don't care about Windows....\n",
      "created_at" : "2012-04-11T17:32:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-5074216",
      "id" : 5074216,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNzQyMTY=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5074216/reactions"
      },
      "updated_at" : "2012-04-11T17:32:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5074216",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Gavin: I don't completely follow this reasoning. URL handling (and _any_ usage of boost::interprocess) is limited to bitcoin-qt, if we required boost 1.49 for bitcoin-qt for Windows doesn't mean everyone has to upgrade. The rest of the code can remain backwards compatible. Also, even for bitcoin-qt, the older boost::interprocess works fine in Linux.\n",
      "created_at" : "2012-04-11T17:45:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-5074502",
      "id" : 5074502,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNzQ1MDI=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5074502/reactions"
      },
      "updated_at" : "2012-04-11T17:46:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5074502",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "It's to easy to say Linux / OSX users may not care about Bitcoin-Qt at all and certainly don't care about Windows. How many Windows users download the client and how many use the GUI version contra how many Linux users are out there? For example I never used bitcoind as Windows users like GUIs and that's a fact :). I could say I don't care about Linux users that want to compile bitcoind, but I don't do this :D.\n\nBut I'm fine with my work currently not beeing used ... even if no one ever tested it ;).\n",
      "created_at" : "2012-04-11T21:28:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-5079425",
      "id" : 5079425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNzk0MjU=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5079425/reactions"
      },
      "updated_at" : "2012-04-11T21:28:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5079425",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "wtf is with 1e39376? you just committed conflicts!\n",
      "created_at" : "2012-05-27T14:05:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-5953721",
      "id" : 5953721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NTM3MjE=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5953721/reactions"
      },
      "updated_at" : "2012-05-27T14:05:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5953721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Dunno how that happened, I normally don't include rebase-conflicts ;), should work again. Sorry @luke-jr!\n",
      "created_at" : "2012-05-27T14:27:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-5953846",
      "id" : 5953846,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NTM4NDY=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5953846/reactions"
      },
      "updated_at" : "2012-05-27T14:27:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/5953846",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956884"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956884"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is redundant, boost already deals with this for us, see message_queue.hpp:501 (in 1.49)\n\"//Check if buffer is smaller than maximum allowed\"\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T12:53:46Z",
      "diff_hunk" : "@@ -116,23 +116,34 @@ static void handleRunawayException(std::exception *e)\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n-#if !defined(MAC_OSX) && !defined(WIN32)\n-// TODO: implement qtipcserver.cpp for Mac and Windows\n+#if !defined(MAC_OSX)\n+// TODO: implement qtipcserver.cpp for Mac\n \n     // Do this early as we don't want to bother initializing if we are just calling IPC\n     for (int i = 1; i < argc; i++)\n     {\n-        if (boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n+        // limit length of parsed URIs to max. size of message queue messages",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956884",
      "id" : 956884,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1Njg4NA==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/qt/bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956884/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956884",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956885"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956885"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is there a reason to use a std:;string instead of a const char*, seems like std::string needlessly copies the data to yet another buffer? (and then copies it back in 2 lines where you call c_str()\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T12:54:43Z",
      "diff_hunk" : "@@ -116,23 +116,34 @@ static void handleRunawayException(std::exception *e)\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n-#if !defined(MAC_OSX) && !defined(WIN32)\n-// TODO: implement qtipcserver.cpp for Mac and Windows\n+#if !defined(MAC_OSX)\n+// TODO: implement qtipcserver.cpp for Mac\n \n     // Do this early as we don't want to bother initializing if we are just calling IPC\n     for (int i = 1; i < argc; i++)\n     {\n-        if (boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n+        // limit length of parsed URIs to max. size of message queue messages\n+        if (strlen(argv[i]) <= IPC_MQ_MAX_MESSAGE_SIZE && boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n         {\n-            const char *strURI = argv[i];\n+            std::string strURI = argv[i];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956885",
      "id" : 956885,
      "line" : 127,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1Njg4NQ==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/qt/bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956885/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956885",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956886"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why convert to try_receive instead of timed_receive? With timed_receive we can handle URIs instantly without any messy Sleeps and without eating CPU?\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T12:58:26Z",
      "diff_hunk" : "@@ -2,88 +2,115 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <boost/algorithm/string.hpp>\n+#include <boost/filesystem.hpp>\n #include <boost/interprocess/ipc/message_queue.hpp>\n-#include <boost/tokenizer.hpp>\n-#include <boost/date_time/posix_time/posix_time.hpp>\n \n #include \"ui_interface.h\"\n+#include \"util.h\"\n #include \"qtipcserver.h\"\n \n-using namespace boost::interprocess;\n-using namespace boost::posix_time;\n using namespace boost;\n-using namespace std;\n \n-void ipcShutdown()\n+/** global state definition */\n+ipcState globalIpcState = IPC_NOT_INITIALIZED;\n+\n+void ipcThread(void* pArg)\n {\n-    message_queue::remove(BITCOINURI_QUEUE_NAME);\n+    IMPLEMENT_RANDOMIZE_STACK(ipcThread(pArg));\n+    try\n+    {\n+        ipcThread2(pArg);\n+    }\n+    catch (std::exception& e) {\n+        PrintExceptionContinue(&e, \"ipcThread()\");\n+    } catch (...) {\n+        PrintExceptionContinue(NULL, \"ipcThread()\");\n+    }\n+    printf(\"ipcThread exited\\n\");\n }\n \n-void ipcThread(void* parg)\n+void ipcThread2(void* pArg)\n {\n-    message_queue* mq = (message_queue*)parg;\n-    char strBuf[257];\n-    size_t nSize;\n-    unsigned int nPriority;\n+    printf(\"ipcThread started\\n\");\n+\n+    interprocess::message_queue* mq = (interprocess::message_queue*)pArg;\n+    char buffer[IPC_MQ_MAX_MESSAGE_SIZE + 1] = \"\";\n+    size_t nSize = 0;\n+    unsigned int nPriority = 0;\n+\n     loop\n     {\n-        ptime d = boost::posix_time::microsec_clock::universal_time() + millisec(100);\n-        if(mq->timed_receive(&strBuf, sizeof(strBuf), nSize, nPriority, d))\n+        if (mq->try_receive(&buffer, sizeof(buffer), nSize, nPriority))\n         {\n-            uiInterface.ThreadSafeHandleURI(std::string(strBuf, nSize));\n+            uiInterface.ThreadSafeHandleURI(std::string(buffer, nSize));\n             Sleep(1000);\n         }\n+        else\n+            /** needs to be here to stop this thread from utilizing 100% of a CPU core */\n+            Sleep(100);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956886",
      "id" : 956886,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1Njg4Ng==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/qt/qtipcserver.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956886/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956889"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956889"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is there a reason for this? I see it only set but never read, which seems pointless?\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T12:59:11Z",
      "diff_hunk" : "@@ -2,88 +2,115 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <boost/algorithm/string.hpp>\n+#include <boost/filesystem.hpp>\n #include <boost/interprocess/ipc/message_queue.hpp>\n-#include <boost/tokenizer.hpp>\n-#include <boost/date_time/posix_time/posix_time.hpp>\n \n #include \"ui_interface.h\"\n+#include \"util.h\"\n #include \"qtipcserver.h\"\n \n-using namespace boost::interprocess;\n-using namespace boost::posix_time;\n using namespace boost;\n-using namespace std;\n \n-void ipcShutdown()\n+/** global state definition */\n+ipcState globalIpcState = IPC_NOT_INITIALIZED;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956889",
      "id" : 956889,
      "line" : 16,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1Njg4OQ==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/qt/qtipcserver.cpp",
      "position" : 22,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956889/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956889",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956890"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956890"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is there a reason this is no longer needed?\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T13:00:05Z",
      "diff_hunk" : "@@ -2,88 +2,115 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <boost/algorithm/string.hpp>\n+#include <boost/filesystem.hpp>\n #include <boost/interprocess/ipc/message_queue.hpp>\n-#include <boost/tokenizer.hpp>\n-#include <boost/date_time/posix_time/posix_time.hpp>\n \n #include \"ui_interface.h\"\n+#include \"util.h\"\n #include \"qtipcserver.h\"\n \n-using namespace boost::interprocess;\n-using namespace boost::posix_time;\n using namespace boost;\n-using namespace std;\n \n-void ipcShutdown()\n+/** global state definition */\n+ipcState globalIpcState = IPC_NOT_INITIALIZED;\n+\n+void ipcThread(void* pArg)\n {\n-    message_queue::remove(BITCOINURI_QUEUE_NAME);\n+    IMPLEMENT_RANDOMIZE_STACK(ipcThread(pArg));\n+    try\n+    {\n+        ipcThread2(pArg);\n+    }\n+    catch (std::exception& e) {\n+        PrintExceptionContinue(&e, \"ipcThread()\");\n+    } catch (...) {\n+        PrintExceptionContinue(NULL, \"ipcThread()\");\n+    }\n+    printf(\"ipcThread exited\\n\");\n }\n \n-void ipcThread(void* parg)\n+void ipcThread2(void* pArg)\n {\n-    message_queue* mq = (message_queue*)parg;\n-    char strBuf[257];\n-    size_t nSize;\n-    unsigned int nPriority;\n+    printf(\"ipcThread started\\n\");\n+\n+    interprocess::message_queue* mq = (interprocess::message_queue*)pArg;\n+    char buffer[IPC_MQ_MAX_MESSAGE_SIZE + 1] = \"\";\n+    size_t nSize = 0;\n+    unsigned int nPriority = 0;\n+\n     loop\n     {\n-        ptime d = boost::posix_time::microsec_clock::universal_time() + millisec(100);\n-        if(mq->timed_receive(&strBuf, sizeof(strBuf), nSize, nPriority, d))\n+        if (mq->try_receive(&buffer, sizeof(buffer), nSize, nPriority))\n         {\n-            uiInterface.ThreadSafeHandleURI(std::string(strBuf, nSize));\n+            uiInterface.ThreadSafeHandleURI(std::string(buffer, nSize));\n             Sleep(1000);\n         }\n+        else\n+            /** needs to be here to stop this thread from utilizing 100% of a CPU core */\n+            Sleep(100);\n+\n         if (fShutdown)\n-        {\n-            ipcShutdown();\n             break;\n-        }\n     }\n-    ipcShutdown();\n+\n+    /** cleanup allocated memory and set global IPC state to not initialized */\n+    delete mq;\n+    globalIpcState = IPC_NOT_INITIALIZED;\n }\n \n-void ipcInit()\n+void ipcInit(bool fUseMQModeOpenOnly, bool fInitCalledAfterRecovery)\n {\n-#ifdef MAC_OSX\n-    // TODO: implement bitcoin: URI handling the Mac Way\n-    return;\n-#endif\n-#ifdef WIN32\n-    // TODO: THOROUGHLY test boost::interprocess fix,\n-    // and make sure there are no Windows argument-handling exploitable\n-    // problems.\n-    return;\n-#endif\n+    /** set global IPC state variable to not initialized */\n+    globalIpcState = IPC_NOT_INITIALIZED;\n \n-    message_queue* mq;\n-    char strBuf[257];\n-    size_t nSize;\n-    unsigned int nPriority;\n-    try {\n-        mq = new message_queue(open_or_create, BITCOINURI_QUEUE_NAME, 2, 256);\n+    interprocess::message_queue* mq = NULL;\n \n-        // Make sure we don't lose any bitcoin: URIs\n-        for (int i = 0; i < 2; i++)\n+    try {\n+        if (fUseMQModeOpenOnly)\n+            mq = new interprocess::message_queue(interprocess::open_only, IPC_MQ_NAME);\n+        else\n+            mq = new interprocess::message_queue(interprocess::create_only, IPC_MQ_NAME, IPC_MQ_MAX_MESSAGES, IPC_MQ_MAX_MESSAGE_SIZE);\n+    }\n+    catch (interprocess::interprocess_exception &ex) {\n+#ifdef WIN32\n+        /** check if the exception is a \"file not found\" error */\n+        if(ex.get_error_code() == interprocess::not_found_error)\n         {\n-            ptime d = boost::posix_time::microsec_clock::universal_time() + millisec(1);\n-            if(mq->timed_receive(&strBuf, sizeof(strBuf), nSize, nPriority, d))\n+            if (!fInitCalledAfterRecovery)\n             {\n-                uiInterface.ThreadSafeHandleURI(std::string(strBuf, nSize));\n+                printf(\"ipcInit - trying to create new message queue...\\n\");\n+\n+                /** try init once more (false - create_only mode / true - avoid an infinite recursion)\n+                 * create_only: create new message queue\n+                 */\n+                ipcInit(false, true);\n             }\n-            else\n-                break;\n         }\n+        /** check if the exception is a \"file already exists\" error */\n+        else if (ex.get_error_code() == interprocess::already_exists_error)\n+        {\n+            if (!fInitCalledAfterRecovery)\n+            {\n+                printf(\"ipcInit - trying to open current message queue...\\n\");\n \n-        // Make sure only one bitcoin instance is listening",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956890",
      "id" : 956890,
      "line" : 78,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1Njg5MA==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/qt/qtipcserver.cpp",
      "position" : 138,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956890/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956891"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956891"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Im assuming it does, but this does call message_queue::remove, correct?\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T13:02:19Z",
      "diff_hunk" : "@@ -2,88 +2,115 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <boost/algorithm/string.hpp>\n+#include <boost/filesystem.hpp>\n #include <boost/interprocess/ipc/message_queue.hpp>\n-#include <boost/tokenizer.hpp>\n-#include <boost/date_time/posix_time/posix_time.hpp>\n \n #include \"ui_interface.h\"\n+#include \"util.h\"\n #include \"qtipcserver.h\"\n \n-using namespace boost::interprocess;\n-using namespace boost::posix_time;\n using namespace boost;\n-using namespace std;\n \n-void ipcShutdown()\n+/** global state definition */\n+ipcState globalIpcState = IPC_NOT_INITIALIZED;\n+\n+void ipcThread(void* pArg)\n {\n-    message_queue::remove(BITCOINURI_QUEUE_NAME);\n+    IMPLEMENT_RANDOMIZE_STACK(ipcThread(pArg));\n+    try\n+    {\n+        ipcThread2(pArg);\n+    }\n+    catch (std::exception& e) {\n+        PrintExceptionContinue(&e, \"ipcThread()\");\n+    } catch (...) {\n+        PrintExceptionContinue(NULL, \"ipcThread()\");\n+    }\n+    printf(\"ipcThread exited\\n\");\n }\n \n-void ipcThread(void* parg)\n+void ipcThread2(void* pArg)\n {\n-    message_queue* mq = (message_queue*)parg;\n-    char strBuf[257];\n-    size_t nSize;\n-    unsigned int nPriority;\n+    printf(\"ipcThread started\\n\");\n+\n+    interprocess::message_queue* mq = (interprocess::message_queue*)pArg;\n+    char buffer[IPC_MQ_MAX_MESSAGE_SIZE + 1] = \"\";\n+    size_t nSize = 0;\n+    unsigned int nPriority = 0;\n+\n     loop\n     {\n-        ptime d = boost::posix_time::microsec_clock::universal_time() + millisec(100);\n-        if(mq->timed_receive(&strBuf, sizeof(strBuf), nSize, nPriority, d))\n+        if (mq->try_receive(&buffer, sizeof(buffer), nSize, nPriority))\n         {\n-            uiInterface.ThreadSafeHandleURI(std::string(strBuf, nSize));\n+            uiInterface.ThreadSafeHandleURI(std::string(buffer, nSize));\n             Sleep(1000);\n         }\n+        else\n+            /** needs to be here to stop this thread from utilizing 100% of a CPU core */\n+            Sleep(100);\n+\n         if (fShutdown)\n-        {\n-            ipcShutdown();\n             break;\n-        }\n     }\n-    ipcShutdown();\n+\n+    /** cleanup allocated memory and set global IPC state to not initialized */\n+    delete mq;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956891",
      "id" : 956891,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1Njg5MQ==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/qt/qtipcserver.cpp",
      "position" : 75,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956891/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956891",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956892"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ACK, we really should do this.\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T13:02:52Z",
      "diff_hunk" : "@@ -2,88 +2,115 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <boost/algorithm/string.hpp>\n+#include <boost/filesystem.hpp>\n #include <boost/interprocess/ipc/message_queue.hpp>\n-#include <boost/tokenizer.hpp>\n-#include <boost/date_time/posix_time/posix_time.hpp>\n \n #include \"ui_interface.h\"\n+#include \"util.h\"\n #include \"qtipcserver.h\"\n \n-using namespace boost::interprocess;\n-using namespace boost::posix_time;\n using namespace boost;\n-using namespace std;\n \n-void ipcShutdown()\n+/** global state definition */\n+ipcState globalIpcState = IPC_NOT_INITIALIZED;\n+\n+void ipcThread(void* pArg)\n {\n-    message_queue::remove(BITCOINURI_QUEUE_NAME);\n+    IMPLEMENT_RANDOMIZE_STACK(ipcThread(pArg));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956892",
      "id" : 956892,
      "line" : 20,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1Njg5Mg==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/qt/qtipcserver.cpp",
      "position" : 27,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956892/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956892",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956968"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's more consistent to use C++ string handling everywhere instead of strlen() and friends (performance is not an argument here). In most implementations, c_str doesn't perform a copy, but it simply returns a pointer to the internal buffer. Though it'd be better to use .data() if you don't rely on it being zero-terminated like in this case.\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T14:35:34Z",
      "diff_hunk" : "@@ -116,23 +116,34 @@ static void handleRunawayException(std::exception *e)\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n-#if !defined(MAC_OSX) && !defined(WIN32)\n-// TODO: implement qtipcserver.cpp for Mac and Windows\n+#if !defined(MAC_OSX)\n+// TODO: implement qtipcserver.cpp for Mac\n \n     // Do this early as we don't want to bother initializing if we are just calling IPC\n     for (int i = 1; i < argc; i++)\n     {\n-        if (boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n+        // limit length of parsed URIs to max. size of message queue messages\n+        if (strlen(argv[i]) <= IPC_MQ_MAX_MESSAGE_SIZE && boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n         {\n-            const char *strURI = argv[i];\n+            std::string strURI = argv[i];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956968",
      "id" : 956968,
      "line" : 127,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1Njk2OA==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/qt/bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956968/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956969"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956969"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I do wonder why strlen is still used in the line above this, though. I guess the consistency argument doesn't hold either :-)\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T14:36:54Z",
      "diff_hunk" : "@@ -116,23 +116,34 @@ static void handleRunawayException(std::exception *e)\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n-#if !defined(MAC_OSX) && !defined(WIN32)\n-// TODO: implement qtipcserver.cpp for Mac and Windows\n+#if !defined(MAC_OSX)\n+// TODO: implement qtipcserver.cpp for Mac\n \n     // Do this early as we don't want to bother initializing if we are just calling IPC\n     for (int i = 1; i < argc; i++)\n     {\n-        if (boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n+        // limit length of parsed URIs to max. size of message queue messages\n+        if (strlen(argv[i]) <= IPC_MQ_MAX_MESSAGE_SIZE && boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n         {\n-            const char *strURI = argv[i];\n+            std::string strURI = argv[i];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r956969",
      "id" : 956969,
      "line" : 127,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1Njk2OQ==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/qt/bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956969/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956969",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957007"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957007"
         }
      },
      "author_association" : "NONE",
      "body" : "ACK, this gets removed!\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T15:13:50Z",
      "diff_hunk" : "@@ -116,23 +116,34 @@ static void handleRunawayException(std::exception *e)\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n-#if !defined(MAC_OSX) && !defined(WIN32)\n-// TODO: implement qtipcserver.cpp for Mac and Windows\n+#if !defined(MAC_OSX)\n+// TODO: implement qtipcserver.cpp for Mac\n \n     // Do this early as we don't want to bother initializing if we are just calling IPC\n     for (int i = 1; i < argc; i++)\n     {\n-        if (boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n+        // limit length of parsed URIs to max. size of message queue messages",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957007",
      "id" : 957007,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzAwNw==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/qt/bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957007/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957007",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957011"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957011"
         }
      },
      "author_association" : "NONE",
      "body" : "As above line will get the strlen removed your argument counts :). My intention was to avoid pure char \\* usage as much as possible and use std::string for this.\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T15:16:13Z",
      "diff_hunk" : "@@ -116,23 +116,34 @@ static void handleRunawayException(std::exception *e)\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n-#if !defined(MAC_OSX) && !defined(WIN32)\n-// TODO: implement qtipcserver.cpp for Mac and Windows\n+#if !defined(MAC_OSX)\n+// TODO: implement qtipcserver.cpp for Mac\n \n     // Do this early as we don't want to bother initializing if we are just calling IPC\n     for (int i = 1; i < argc; i++)\n     {\n-        if (boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n+        // limit length of parsed URIs to max. size of message queue messages\n+        if (strlen(argv[i]) <= IPC_MQ_MAX_MESSAGE_SIZE && boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n         {\n-            const char *strURI = argv[i];\n+            std::string strURI = argv[i];",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957011",
      "id" : 957011,
      "line" : 127,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzAxMQ==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/qt/bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957011/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957017"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957017"
         }
      },
      "author_association" : "NONE",
      "body" : "@laanwj You suggested to use .data() instead of .c_str() for this here, but I'm not sure, why we don't need it to it be zero-terminated, can you explain please :).\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T15:20:32Z",
      "diff_hunk" : "@@ -116,23 +116,34 @@ static void handleRunawayException(std::exception *e)\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n-#if !defined(MAC_OSX) && !defined(WIN32)\n-// TODO: implement qtipcserver.cpp for Mac and Windows\n+#if !defined(MAC_OSX)\n+// TODO: implement qtipcserver.cpp for Mac\n \n     // Do this early as we don't want to bother initializing if we are just calling IPC\n     for (int i = 1; i < argc; i++)\n     {\n-        if (boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n+        // limit length of parsed URIs to max. size of message queue messages\n+        if (strlen(argv[i]) <= IPC_MQ_MAX_MESSAGE_SIZE && boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n         {\n-            const char *strURI = argv[i];\n+            std::string strURI = argv[i];\n             try {\n-                boost::interprocess::message_queue mq(boost::interprocess::open_only, BITCOINURI_QUEUE_NAME);\n-                if(mq.try_send(strURI, strlen(strURI), 0))\n+                boost::interprocess::message_queue mq(boost::interprocess::open_only, IPC_MQ_NAME);\n+                if (mq.try_send(strURI.c_str(), strURI.length(), 0))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957017",
      "id" : 957017,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzAxNw==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/qt/bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957017/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957019"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957019"
         }
      },
      "author_association" : "NONE",
      "body" : "@TheBlueMatt `globalIpcState` is used here, to avoid errors, if ipcInit fails for some reason.\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T15:21:46Z",
      "diff_hunk" : "@@ -271,14 +282,17 @@ int main(int argc, char *argv[])\n                 // Check for URI in argv\n                 for (int i = 1; i < argc; i++)\n                 {\n-                    if (boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n+                    // only bother with this if IPC is initialized\n+                    if (globalIpcState == IPC_INITIALIZED && strlen(argv[i]) <= IPC_MQ_MAX_MESSAGE_SIZE && boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957019",
      "id" : 957019,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzAxOQ==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/qt/bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957019/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957019",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957023"
         }
      },
      "author_association" : "NONE",
      "body" : "To be honest, I really don't recall, why I changed this ... it's no problem to revert to a timed_receive() :D.\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T15:23:04Z",
      "diff_hunk" : "@@ -2,88 +2,115 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <boost/algorithm/string.hpp>\n+#include <boost/filesystem.hpp>\n #include <boost/interprocess/ipc/message_queue.hpp>\n-#include <boost/tokenizer.hpp>\n-#include <boost/date_time/posix_time/posix_time.hpp>\n \n #include \"ui_interface.h\"\n+#include \"util.h\"\n #include \"qtipcserver.h\"\n \n-using namespace boost::interprocess;\n-using namespace boost::posix_time;\n using namespace boost;\n-using namespace std;\n \n-void ipcShutdown()\n+/** global state definition */\n+ipcState globalIpcState = IPC_NOT_INITIALIZED;\n+\n+void ipcThread(void* pArg)\n {\n-    message_queue::remove(BITCOINURI_QUEUE_NAME);\n+    IMPLEMENT_RANDOMIZE_STACK(ipcThread(pArg));\n+    try\n+    {\n+        ipcThread2(pArg);\n+    }\n+    catch (std::exception& e) {\n+        PrintExceptionContinue(&e, \"ipcThread()\");\n+    } catch (...) {\n+        PrintExceptionContinue(NULL, \"ipcThread()\");\n+    }\n+    printf(\"ipcThread exited\\n\");\n }\n \n-void ipcThread(void* parg)\n+void ipcThread2(void* pArg)\n {\n-    message_queue* mq = (message_queue*)parg;\n-    char strBuf[257];\n-    size_t nSize;\n-    unsigned int nPriority;\n+    printf(\"ipcThread started\\n\");\n+\n+    interprocess::message_queue* mq = (interprocess::message_queue*)pArg;\n+    char buffer[IPC_MQ_MAX_MESSAGE_SIZE + 1] = \"\";\n+    size_t nSize = 0;\n+    unsigned int nPriority = 0;\n+\n     loop\n     {\n-        ptime d = boost::posix_time::microsec_clock::universal_time() + millisec(100);\n-        if(mq->timed_receive(&strBuf, sizeof(strBuf), nSize, nPriority, d))\n+        if (mq->try_receive(&buffer, sizeof(buffer), nSize, nPriority))\n         {\n-            uiInterface.ThreadSafeHandleURI(std::string(strBuf, nSize));\n+            uiInterface.ThreadSafeHandleURI(std::string(buffer, nSize));\n             Sleep(1000);\n         }\n+        else\n+            /** needs to be here to stop this thread from utilizing 100% of a CPU core */\n+            Sleep(100);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957023",
      "id" : 957023,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzAyMw==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/qt/qtipcserver.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957023/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957027"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957027"
         }
      },
      "author_association" : "NONE",
      "body" : "It does NOT call remove(), which is one of the bigger changes in this pull. We leave the mq where it is and try to re-use it.\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T15:25:28Z",
      "diff_hunk" : "@@ -2,88 +2,115 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <boost/algorithm/string.hpp>\n+#include <boost/filesystem.hpp>\n #include <boost/interprocess/ipc/message_queue.hpp>\n-#include <boost/tokenizer.hpp>\n-#include <boost/date_time/posix_time/posix_time.hpp>\n \n #include \"ui_interface.h\"\n+#include \"util.h\"\n #include \"qtipcserver.h\"\n \n-using namespace boost::interprocess;\n-using namespace boost::posix_time;\n using namespace boost;\n-using namespace std;\n \n-void ipcShutdown()\n+/** global state definition */\n+ipcState globalIpcState = IPC_NOT_INITIALIZED;\n+\n+void ipcThread(void* pArg)\n {\n-    message_queue::remove(BITCOINURI_QUEUE_NAME);\n+    IMPLEMENT_RANDOMIZE_STACK(ipcThread(pArg));\n+    try\n+    {\n+        ipcThread2(pArg);\n+    }\n+    catch (std::exception& e) {\n+        PrintExceptionContinue(&e, \"ipcThread()\");\n+    } catch (...) {\n+        PrintExceptionContinue(NULL, \"ipcThread()\");\n+    }\n+    printf(\"ipcThread exited\\n\");\n }\n \n-void ipcThread(void* parg)\n+void ipcThread2(void* pArg)\n {\n-    message_queue* mq = (message_queue*)parg;\n-    char strBuf[257];\n-    size_t nSize;\n-    unsigned int nPriority;\n+    printf(\"ipcThread started\\n\");\n+\n+    interprocess::message_queue* mq = (interprocess::message_queue*)pArg;\n+    char buffer[IPC_MQ_MAX_MESSAGE_SIZE + 1] = \"\";\n+    size_t nSize = 0;\n+    unsigned int nPriority = 0;\n+\n     loop\n     {\n-        ptime d = boost::posix_time::microsec_clock::universal_time() + millisec(100);\n-        if(mq->timed_receive(&strBuf, sizeof(strBuf), nSize, nPriority, d))\n+        if (mq->try_receive(&buffer, sizeof(buffer), nSize, nPriority))\n         {\n-            uiInterface.ThreadSafeHandleURI(std::string(strBuf, nSize));\n+            uiInterface.ThreadSafeHandleURI(std::string(buffer, nSize));\n             Sleep(1000);\n         }\n+        else\n+            /** needs to be here to stop this thread from utilizing 100% of a CPU core */\n+            Sleep(100);\n+\n         if (fShutdown)\n-        {\n-            ipcShutdown();\n             break;\n-        }\n     }\n-    ipcShutdown();\n+\n+    /** cleanup allocated memory and set global IPC state to not initialized */\n+    delete mq;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957027",
      "id" : 957027,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzAyNw==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/qt/qtipcserver.cpp",
      "position" : 75,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957027/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957027",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957029"
         }
      },
      "author_association" : "NONE",
      "body" : "Quite a few devs were telling me it needs to be possible to use multiple instances in parallel AND as I wrote above this pulls doesn't remove a message_queue, so this was removed intentionally.\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T15:26:57Z",
      "diff_hunk" : "@@ -2,88 +2,115 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <boost/algorithm/string.hpp>\n+#include <boost/filesystem.hpp>\n #include <boost/interprocess/ipc/message_queue.hpp>\n-#include <boost/tokenizer.hpp>\n-#include <boost/date_time/posix_time/posix_time.hpp>\n \n #include \"ui_interface.h\"\n+#include \"util.h\"\n #include \"qtipcserver.h\"\n \n-using namespace boost::interprocess;\n-using namespace boost::posix_time;\n using namespace boost;\n-using namespace std;\n \n-void ipcShutdown()\n+/** global state definition */\n+ipcState globalIpcState = IPC_NOT_INITIALIZED;\n+\n+void ipcThread(void* pArg)\n {\n-    message_queue::remove(BITCOINURI_QUEUE_NAME);\n+    IMPLEMENT_RANDOMIZE_STACK(ipcThread(pArg));\n+    try\n+    {\n+        ipcThread2(pArg);\n+    }\n+    catch (std::exception& e) {\n+        PrintExceptionContinue(&e, \"ipcThread()\");\n+    } catch (...) {\n+        PrintExceptionContinue(NULL, \"ipcThread()\");\n+    }\n+    printf(\"ipcThread exited\\n\");\n }\n \n-void ipcThread(void* parg)\n+void ipcThread2(void* pArg)\n {\n-    message_queue* mq = (message_queue*)parg;\n-    char strBuf[257];\n-    size_t nSize;\n-    unsigned int nPriority;\n+    printf(\"ipcThread started\\n\");\n+\n+    interprocess::message_queue* mq = (interprocess::message_queue*)pArg;\n+    char buffer[IPC_MQ_MAX_MESSAGE_SIZE + 1] = \"\";\n+    size_t nSize = 0;\n+    unsigned int nPriority = 0;\n+\n     loop\n     {\n-        ptime d = boost::posix_time::microsec_clock::universal_time() + millisec(100);\n-        if(mq->timed_receive(&strBuf, sizeof(strBuf), nSize, nPriority, d))\n+        if (mq->try_receive(&buffer, sizeof(buffer), nSize, nPriority))\n         {\n-            uiInterface.ThreadSafeHandleURI(std::string(strBuf, nSize));\n+            uiInterface.ThreadSafeHandleURI(std::string(buffer, nSize));\n             Sleep(1000);\n         }\n+        else\n+            /** needs to be here to stop this thread from utilizing 100% of a CPU core */\n+            Sleep(100);\n+\n         if (fShutdown)\n-        {\n-            ipcShutdown();\n             break;\n-        }\n     }\n-    ipcShutdown();\n+\n+    /** cleanup allocated memory and set global IPC state to not initialized */\n+    delete mq;\n+    globalIpcState = IPC_NOT_INITIALIZED;\n }\n \n-void ipcInit()\n+void ipcInit(bool fUseMQModeOpenOnly, bool fInitCalledAfterRecovery)\n {\n-#ifdef MAC_OSX\n-    // TODO: implement bitcoin: URI handling the Mac Way\n-    return;\n-#endif\n-#ifdef WIN32\n-    // TODO: THOROUGHLY test boost::interprocess fix,\n-    // and make sure there are no Windows argument-handling exploitable\n-    // problems.\n-    return;\n-#endif\n+    /** set global IPC state variable to not initialized */\n+    globalIpcState = IPC_NOT_INITIALIZED;\n \n-    message_queue* mq;\n-    char strBuf[257];\n-    size_t nSize;\n-    unsigned int nPriority;\n-    try {\n-        mq = new message_queue(open_or_create, BITCOINURI_QUEUE_NAME, 2, 256);\n+    interprocess::message_queue* mq = NULL;\n \n-        // Make sure we don't lose any bitcoin: URIs\n-        for (int i = 0; i < 2; i++)\n+    try {\n+        if (fUseMQModeOpenOnly)\n+            mq = new interprocess::message_queue(interprocess::open_only, IPC_MQ_NAME);\n+        else\n+            mq = new interprocess::message_queue(interprocess::create_only, IPC_MQ_NAME, IPC_MQ_MAX_MESSAGES, IPC_MQ_MAX_MESSAGE_SIZE);\n+    }\n+    catch (interprocess::interprocess_exception &ex) {\n+#ifdef WIN32\n+        /** check if the exception is a \"file not found\" error */\n+        if(ex.get_error_code() == interprocess::not_found_error)\n         {\n-            ptime d = boost::posix_time::microsec_clock::universal_time() + millisec(1);\n-            if(mq->timed_receive(&strBuf, sizeof(strBuf), nSize, nPriority, d))\n+            if (!fInitCalledAfterRecovery)\n             {\n-                uiInterface.ThreadSafeHandleURI(std::string(strBuf, nSize));\n+                printf(\"ipcInit - trying to create new message queue...\\n\");\n+\n+                /** try init once more (false - create_only mode / true - avoid an infinite recursion)\n+                 * create_only: create new message queue\n+                 */\n+                ipcInit(false, true);\n             }\n-            else\n-                break;\n         }\n+        /** check if the exception is a \"file already exists\" error */\n+        else if (ex.get_error_code() == interprocess::already_exists_error)\n+        {\n+            if (!fInitCalledAfterRecovery)\n+            {\n+                printf(\"ipcInit - trying to open current message queue...\\n\");\n \n-        // Make sure only one bitcoin instance is listening",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957029",
      "id" : 957029,
      "line" : 78,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzAyOQ==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/qt/qtipcserver.cpp",
      "position" : 138,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957029/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T15:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957029",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Updated to reflect the last suggestions from the discussion, all commits will be merged after this get's final (if it get's final ^^), so I used NO speaking commit message!\n",
      "created_at" : "2012-06-10T15:59:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-6229399",
      "id" : 6229399,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjkzOTk=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6229399/reactions"
      },
      "updated_at" : "2012-06-10T15:59:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6229399",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957128"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957128"
         }
      },
      "author_association" : "MEMBER",
      "body" : "These few lines dont make it impossible to use multiple instances in parallel, in fact they make it more sane.  Without these lines, multiple instances get URIs distributed between them, which is...non-intuitive IMHO.  With these lines they simply all go to the most recent running version.\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T16:55:17Z",
      "diff_hunk" : "@@ -2,88 +2,115 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <boost/algorithm/string.hpp>\n+#include <boost/filesystem.hpp>\n #include <boost/interprocess/ipc/message_queue.hpp>\n-#include <boost/tokenizer.hpp>\n-#include <boost/date_time/posix_time/posix_time.hpp>\n \n #include \"ui_interface.h\"\n+#include \"util.h\"\n #include \"qtipcserver.h\"\n \n-using namespace boost::interprocess;\n-using namespace boost::posix_time;\n using namespace boost;\n-using namespace std;\n \n-void ipcShutdown()\n+/** global state definition */\n+ipcState globalIpcState = IPC_NOT_INITIALIZED;\n+\n+void ipcThread(void* pArg)\n {\n-    message_queue::remove(BITCOINURI_QUEUE_NAME);\n+    IMPLEMENT_RANDOMIZE_STACK(ipcThread(pArg));\n+    try\n+    {\n+        ipcThread2(pArg);\n+    }\n+    catch (std::exception& e) {\n+        PrintExceptionContinue(&e, \"ipcThread()\");\n+    } catch (...) {\n+        PrintExceptionContinue(NULL, \"ipcThread()\");\n+    }\n+    printf(\"ipcThread exited\\n\");\n }\n \n-void ipcThread(void* parg)\n+void ipcThread2(void* pArg)\n {\n-    message_queue* mq = (message_queue*)parg;\n-    char strBuf[257];\n-    size_t nSize;\n-    unsigned int nPriority;\n+    printf(\"ipcThread started\\n\");\n+\n+    interprocess::message_queue* mq = (interprocess::message_queue*)pArg;\n+    char buffer[IPC_MQ_MAX_MESSAGE_SIZE + 1] = \"\";\n+    size_t nSize = 0;\n+    unsigned int nPriority = 0;\n+\n     loop\n     {\n-        ptime d = boost::posix_time::microsec_clock::universal_time() + millisec(100);\n-        if(mq->timed_receive(&strBuf, sizeof(strBuf), nSize, nPriority, d))\n+        if (mq->try_receive(&buffer, sizeof(buffer), nSize, nPriority))\n         {\n-            uiInterface.ThreadSafeHandleURI(std::string(strBuf, nSize));\n+            uiInterface.ThreadSafeHandleURI(std::string(buffer, nSize));\n             Sleep(1000);\n         }\n+        else\n+            /** needs to be here to stop this thread from utilizing 100% of a CPU core */\n+            Sleep(100);\n+\n         if (fShutdown)\n-        {\n-            ipcShutdown();\n             break;\n-        }\n     }\n-    ipcShutdown();\n+\n+    /** cleanup allocated memory and set global IPC state to not initialized */\n+    delete mq;\n+    globalIpcState = IPC_NOT_INITIALIZED;\n }\n \n-void ipcInit()\n+void ipcInit(bool fUseMQModeOpenOnly, bool fInitCalledAfterRecovery)\n {\n-#ifdef MAC_OSX\n-    // TODO: implement bitcoin: URI handling the Mac Way\n-    return;\n-#endif\n-#ifdef WIN32\n-    // TODO: THOROUGHLY test boost::interprocess fix,\n-    // and make sure there are no Windows argument-handling exploitable\n-    // problems.\n-    return;\n-#endif\n+    /** set global IPC state variable to not initialized */\n+    globalIpcState = IPC_NOT_INITIALIZED;\n \n-    message_queue* mq;\n-    char strBuf[257];\n-    size_t nSize;\n-    unsigned int nPriority;\n-    try {\n-        mq = new message_queue(open_or_create, BITCOINURI_QUEUE_NAME, 2, 256);\n+    interprocess::message_queue* mq = NULL;\n \n-        // Make sure we don't lose any bitcoin: URIs\n-        for (int i = 0; i < 2; i++)\n+    try {\n+        if (fUseMQModeOpenOnly)\n+            mq = new interprocess::message_queue(interprocess::open_only, IPC_MQ_NAME);\n+        else\n+            mq = new interprocess::message_queue(interprocess::create_only, IPC_MQ_NAME, IPC_MQ_MAX_MESSAGES, IPC_MQ_MAX_MESSAGE_SIZE);\n+    }\n+    catch (interprocess::interprocess_exception &ex) {\n+#ifdef WIN32\n+        /** check if the exception is a \"file not found\" error */\n+        if(ex.get_error_code() == interprocess::not_found_error)\n         {\n-            ptime d = boost::posix_time::microsec_clock::universal_time() + millisec(1);\n-            if(mq->timed_receive(&strBuf, sizeof(strBuf), nSize, nPriority, d))\n+            if (!fInitCalledAfterRecovery)\n             {\n-                uiInterface.ThreadSafeHandleURI(std::string(strBuf, nSize));\n+                printf(\"ipcInit - trying to create new message queue...\\n\");\n+\n+                /** try init once more (false - create_only mode / true - avoid an infinite recursion)\n+                 * create_only: create new message queue\n+                 */\n+                ipcInit(false, true);\n             }\n-            else\n-                break;\n         }\n+        /** check if the exception is a \"file already exists\" error */\n+        else if (ex.get_error_code() == interprocess::already_exists_error)\n+        {\n+            if (!fInitCalledAfterRecovery)\n+            {\n+                printf(\"ipcInit - trying to open current message queue...\\n\");\n \n-        // Make sure only one bitcoin instance is listening",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957128",
      "id" : 957128,
      "line" : 78,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzEyOA==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 139,
      "original_start_line" : null,
      "path" : "src/qt/qtipcserver.cpp",
      "position" : 138,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957128/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T16:55:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957128",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957134"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957134"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If we leave it, does Bitcoin-Qt open properly?\nWould it not try to send to the mq, send properly, and then exit (when opening with a URI after previously closing)?\nMaking anyone open Bitcoin-Qt several times until the mq fills up?\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T16:58:02Z",
      "diff_hunk" : "@@ -2,88 +2,115 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <boost/algorithm/string.hpp>\n+#include <boost/filesystem.hpp>\n #include <boost/interprocess/ipc/message_queue.hpp>\n-#include <boost/tokenizer.hpp>\n-#include <boost/date_time/posix_time/posix_time.hpp>\n \n #include \"ui_interface.h\"\n+#include \"util.h\"\n #include \"qtipcserver.h\"\n \n-using namespace boost::interprocess;\n-using namespace boost::posix_time;\n using namespace boost;\n-using namespace std;\n \n-void ipcShutdown()\n+/** global state definition */\n+ipcState globalIpcState = IPC_NOT_INITIALIZED;\n+\n+void ipcThread(void* pArg)\n {\n-    message_queue::remove(BITCOINURI_QUEUE_NAME);\n+    IMPLEMENT_RANDOMIZE_STACK(ipcThread(pArg));\n+    try\n+    {\n+        ipcThread2(pArg);\n+    }\n+    catch (std::exception& e) {\n+        PrintExceptionContinue(&e, \"ipcThread()\");\n+    } catch (...) {\n+        PrintExceptionContinue(NULL, \"ipcThread()\");\n+    }\n+    printf(\"ipcThread exited\\n\");\n }\n \n-void ipcThread(void* parg)\n+void ipcThread2(void* pArg)\n {\n-    message_queue* mq = (message_queue*)parg;\n-    char strBuf[257];\n-    size_t nSize;\n-    unsigned int nPriority;\n+    printf(\"ipcThread started\\n\");\n+\n+    interprocess::message_queue* mq = (interprocess::message_queue*)pArg;\n+    char buffer[IPC_MQ_MAX_MESSAGE_SIZE + 1] = \"\";\n+    size_t nSize = 0;\n+    unsigned int nPriority = 0;\n+\n     loop\n     {\n-        ptime d = boost::posix_time::microsec_clock::universal_time() + millisec(100);\n-        if(mq->timed_receive(&strBuf, sizeof(strBuf), nSize, nPriority, d))\n+        if (mq->try_receive(&buffer, sizeof(buffer), nSize, nPriority))\n         {\n-            uiInterface.ThreadSafeHandleURI(std::string(strBuf, nSize));\n+            uiInterface.ThreadSafeHandleURI(std::string(buffer, nSize));\n             Sleep(1000);\n         }\n+        else\n+            /** needs to be here to stop this thread from utilizing 100% of a CPU core */\n+            Sleep(100);\n+\n         if (fShutdown)\n-        {\n-            ipcShutdown();\n             break;\n-        }\n     }\n-    ipcShutdown();\n+\n+    /** cleanup allocated memory and set global IPC state to not initialized */\n+    delete mq;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957134",
      "id" : 957134,
      "line" : 56,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzEzNA==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/qt/qtipcserver.cpp",
      "position" : 75,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957134/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T16:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957134",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957141"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, well then would it not be cleaner to return a value from ipcInit instead of adding a global state variable?\n",
      "commit_id" : "5fc2f75cf87198e090c3f6f3e1911fcd0c4776ad",
      "created_at" : "2012-06-10T17:02:56Z",
      "diff_hunk" : "@@ -271,14 +282,17 @@ int main(int argc, char *argv[])\n                 // Check for URI in argv\n                 for (int i = 1; i < argc; i++)\n                 {\n-                    if (boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n+                    // only bother with this if IPC is initialized\n+                    if (globalIpcState == IPC_INITIALIZED && strlen(argv[i]) <= IPC_MQ_MAX_MESSAGE_SIZE && boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#discussion_r957141",
      "id" : 957141,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1NzE0MQ==",
      "original_commit_id" : "6e2fb937f76fecbe0db397ef206d60e292c97024",
      "original_line" : null,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/qt/bitcoin.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1023",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957141/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-06-10T17:02:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I will cherry-pick some of the changes and open a new pull.\n",
      "created_at" : "2012-07-06T10:15:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1023#issuecomment-6801656",
      "id" : 6801656,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4MDE2NTY=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6801656/reactions"
      },
      "updated_at" : "2012-07-06T10:15:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6801656",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   }
]
