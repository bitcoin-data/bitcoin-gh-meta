[
   {
      "author_association" : "MEMBER",
      "body" : "I'm not a big fan of multiple config files. I would prefer if QT just edited `bitcoin.conf` and tells the user to do so manually if things gets too complicated. See also #6461.",
      "created_at" : "2018-03-17T15:33:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-373928998",
      "id" : 373928998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "updated_at" : "2018-03-17T15:33:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373928998",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I tried just making `bitcoin.conf` writeable instead of having two files in #12833, but that seems to raise some objections. So in that case: Concept ACK. \r\n\r\nCan you rebase this? From my experience with the other PR that should be easy and it worked quite well.",
      "created_at" : "2018-03-30T15:09:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-377545481",
      "id" : 377545481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "updated_at" : "2018-03-30T15:09:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377545481",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2018-03-31T21:24:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-377724496",
      "id" : 377724496,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "updated_at" : "2018-03-31T21:24:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/377724496",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "tACK aac0501 (tested through #12833)",
      "created_at" : "2018-04-03T10:56:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-378210193",
      "id" : 378210193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "updated_at" : "2018-04-03T10:56:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378210193",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs another rebase due to #11862. Perhaps not worth the effort without more Concept ACKs.",
      "created_at" : "2018-05-15T11:10:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-389129606",
      "id" : 389129606,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "updated_at" : "2018-05-15T11:10:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389129606",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r192556713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192556713"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Wouldn't it be better for `ReadRWConfigFile` not to throw exceptions in any normal case? If there's a weird setting, that's fine it will just get over-written later; if the file is read-only though that error should at least be reported to the user; and if there's some other unexpected sort of error that throws an exception, then that shouldn't be ignored?",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-06-02T10:51:56Z",
      "diff_hunk" : "@@ -118,6 +118,12 @@ bool AppInit(int argc, char* argv[])\n             return false;\n         }\n \n+        try {\n+            gArgs.ReadRWConfigFile(gArgs.GetArg(\"-confrw\", BITCOIN_RW_CONF_FILENAME));\n+        } catch (const std::exception& e) {\n+            // Ignore problems here, since we are responsible for this file",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r192556713",
      "id" : 192556713,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjU1NjcxMw==",
      "original_commit_id" : "aac05011480f10a0feea490474e4308ad123a644",
      "original_position" : 7,
      "path" : "src/bitcoind.cpp",
      "position" : null,
      "pull_request_review_id" : 125362873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192556713",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r192556745"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192556745"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"rwconfig\" is an implementation detail; it might be better to describe it via it's purpose instead. \"confui -- Specify configuration file that stores settings set in the UI\" or something?",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-06-02T10:53:27Z",
      "diff_hunk" : "@@ -332,6 +332,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-blocksonly\", strprintf(_(\"Whether to operate in a blocks only mode (default: %u)\"), DEFAULT_BLOCKSONLY));\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\"), BITCOIN_CONF_FILENAME));\n+    strUsage += HelpMessageOpt(\"-confrw=<file>\", strprintf(_(\"Specify read/write configuration file. Relative paths will be prefixed by the network-specific datadir location. (default: %s)\"), BITCOIN_RW_CONF_FILENAME));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r192556745",
      "id" : 192556745,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjU1Njc0NQ==",
      "original_commit_id" : "aac05011480f10a0feea490474e4308ad123a644",
      "original_position" : 4,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 125362873,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192556745",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r192841999"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192841999"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> \"rwconfig\" is an implementation detail; it might be better to describe it via it's purpose instead. \"confui -- Specify configuration file that stores settings set in the UI\" or something?\r\n\r\nIMO, rwconf is nice because it would let us an add an RPC interface for updating settings and persisting them. ",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-06-04T18:43:26Z",
      "diff_hunk" : "@@ -332,6 +332,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-blocksonly\", strprintf(_(\"Whether to operate in a blocks only mode (default: %u)\"), DEFAULT_BLOCKSONLY));\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\"), BITCOIN_CONF_FILENAME));\n+    strUsage += HelpMessageOpt(\"-confrw=<file>\", strprintf(_(\"Specify read/write configuration file. Relative paths will be prefixed by the network-specific datadir location. (default: %s)\"), BITCOIN_RW_CONF_FILENAME));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r192841999",
      "id" : 192841999,
      "in_reply_to_id" : 192556745,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Mjg0MTk5OQ==",
      "original_commit_id" : "aac05011480f10a0feea490474e4308ad123a644",
      "original_position" : 4,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 125696261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/192841999",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Let me know when I can add this back to project 8, i.e. when it is ready for review.",
      "created_at" : "2018-06-13T17:27:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-397020150",
      "id" : 397020150,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NzAyMDE1MA==",
      "updated_at" : "2018-06-13T17:27:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/397020150",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231615397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231615397"
         }
      },
      "author_association" : "MEMBER",
      "body" : "An integer wraparound will occur here in the case of `n == 0`.",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T18:01:24Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));\n+        while (i != '\\n') {\n+            i = streamIn.get();\n+            if (i == std::char_traits<char>::eof()) {\n+                break;\n+            }\n+            s.push_back(char(i));\n+        }\n+        return true;\n+    }\n+\n+    static const char * const ModifyRWConfigFile_ws_chars = \" \\t\\r\\n\";\n+\n+    static void ModifyRWConfigFile_SanityCheck(const std::string& s)\n+    {\n+        if (s.empty()) {\n+            // Dereferencing .begin or .rbegin below is invalid unless the string has at least one character.\n+            return;\n+        }\n+\n+        static const char * const newline_chars = \"\\r\\n\";\n+        static std::string ws_chars(ModifyRWConfigFile_ws_chars);\n+        if (s.find_first_of(newline_chars) != std::string::npos) {\n+            throw std::invalid_argument(\"New-line in config name/value\");\n+        }\n+        if (ws_chars.find(*s.begin()) != std::string::npos || ws_chars.find(*s.rbegin()) != std::string::npos) {\n+            throw std::invalid_argument(\"Config name/value has leading/trailing whitespace\");\n+        }\n+    }\n+\n+    static void ModifyRWConfigFile_WriteRemaining(std::ostream& stream_out, const std::map<std::string, std::string>& settings_to_change, std::set<std::string>& setFound)\n+    {\n+        for (const auto& pairSetting : settings_to_change) {\n+            const std::string& key = pairSetting.first;\n+            const std::string& val = pairSetting.second;\n+            if (setFound.find(key) != setFound.end()) {\n+                continue;\n+            }\n+            setFound.insert(key);\n+            ModifyRWConfigFile_SanityCheck(key);\n+            ModifyRWConfigFile_SanityCheck(val);\n+            stream_out << key << \"=\" << val << \"\\n\";\n+        }\n+    }\n+}\n+\n+void ModifyRWConfigStream(std::istream& stream_in, std::ostream& stream_out, const std::map<std::string, std::string>& settings_to_change)\n+{\n+    static const char * const ws_chars = ModifyRWConfigFile_ws_chars;\n+    std::set<std::string> setFound;\n+    std::string s, lineend, linebegin, key;\n+    std::string::size_type n, n2;\n+    bool inside_group = false, have_eof_nl = true, has_comment;\n+    std::map<std::string, std::string>::const_iterator iterCS;\n+    size_t lineno = 0;\n+    while (getline_with_eol(stream_in, s)) {\n+        ++lineno;\n+\n+        have_eof_nl = (!s.empty()) && (*s.rbegin() == '\\n');\n+        n = s.find('#');\n+        has_comment = (n != std::string::npos);\n+        if (!has_comment) {\n+            n = s.size();\n+        }\n+        n2 = s.find_last_not_of(ws_chars, n - 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231615397",
      "id" : 231615397,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYxNTM5Nw==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 188,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172622306,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231615397",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231616863"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231616863"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Make sure parameters name match between declaration and definition :-)",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T18:05:32Z",
      "diff_hunk" : "@@ -162,6 +169,10 @@ class ArgsManager\n     bool ParseParameters(int argc, const char* const argv[], std::string& error);\n     bool ReadConfigFiles(std::string& error, bool ignore_invalid_keys = false);\n \n+    void ModifyRWConfigFile(const std::map<std::string, std::string>& settings_to_change);\n+    void ModifyRWConfigFile(const std::string& setting_to_change, const std::string& new_value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231616863",
      "id" : 231616863,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYxNjg2Mw==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 42,
      "path" : "src/util/system.h",
      "position" : 42,
      "pull_request_review_id" : 172624178,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231616863",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231617006"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231617006"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`static` is redundant here",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T18:06:03Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231617006",
      "id" : 231617006,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYxNzAwNg==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 116,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172624380,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231617006",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231617074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231617074"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`static` is redundant here.",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T18:06:18Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));\n+        while (i != '\\n') {\n+            i = streamIn.get();\n+            if (i == std::char_traits<char>::eof()) {\n+                break;\n+            }\n+            s.push_back(char(i));\n+        }\n+        return true;\n+    }\n+\n+    static const char * const ModifyRWConfigFile_ws_chars = \" \\t\\r\\n\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231617074",
      "id" : 231617074,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYxNzA3NA==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 135,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172624470,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231617074",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231617121"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231617121"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here :-)",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T18:06:29Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));\n+        while (i != '\\n') {\n+            i = streamIn.get();\n+            if (i == std::char_traits<char>::eof()) {\n+                break;\n+            }\n+            s.push_back(char(i));\n+        }\n+        return true;\n+    }\n+\n+    static const char * const ModifyRWConfigFile_ws_chars = \" \\t\\r\\n\";\n+\n+    static void ModifyRWConfigFile_SanityCheck(const std::string& s)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231617121",
      "id" : 231617121,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYxNzEyMQ==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 137,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172624541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231617121",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231617147"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231617147"
         }
      },
      "author_association" : "MEMBER",
      "body" : "And here :-)",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T18:06:37Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));\n+        while (i != '\\n') {\n+            i = streamIn.get();\n+            if (i == std::char_traits<char>::eof()) {\n+                break;\n+            }\n+            s.push_back(char(i));\n+        }\n+        return true;\n+    }\n+\n+    static const char * const ModifyRWConfigFile_ws_chars = \" \\t\\r\\n\";\n+\n+    static void ModifyRWConfigFile_SanityCheck(const std::string& s)\n+    {\n+        if (s.empty()) {\n+            // Dereferencing .begin or .rbegin below is invalid unless the string has at least one character.\n+            return;\n+        }\n+\n+        static const char * const newline_chars = \"\\r\\n\";\n+        static std::string ws_chars(ModifyRWConfigFile_ws_chars);\n+        if (s.find_first_of(newline_chars) != std::string::npos) {\n+            throw std::invalid_argument(\"New-line in config name/value\");\n+        }\n+        if (ws_chars.find(*s.begin()) != std::string::npos || ws_chars.find(*s.rbegin()) != std::string::npos) {\n+            throw std::invalid_argument(\"Config name/value has leading/trailing whitespace\");\n+        }\n+    }\n+\n+    static void ModifyRWConfigFile_WriteRemaining(std::ostream& stream_out, const std::map<std::string, std::string>& settings_to_change, std::set<std::string>& setFound)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231617147",
      "id" : 231617147,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYxNzE0Nw==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 154,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172624588,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231617147",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231617641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231617641"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: End anonymous namespace with `// namespace`",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T18:08:08Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));\n+        while (i != '\\n') {\n+            i = streamIn.get();\n+            if (i == std::char_traits<char>::eof()) {\n+                break;\n+            }\n+            s.push_back(char(i));\n+        }\n+        return true;\n+    }\n+\n+    static const char * const ModifyRWConfigFile_ws_chars = \" \\t\\r\\n\";\n+\n+    static void ModifyRWConfigFile_SanityCheck(const std::string& s)\n+    {\n+        if (s.empty()) {\n+            // Dereferencing .begin or .rbegin below is invalid unless the string has at least one character.\n+            return;\n+        }\n+\n+        static const char * const newline_chars = \"\\r\\n\";\n+        static std::string ws_chars(ModifyRWConfigFile_ws_chars);\n+        if (s.find_first_of(newline_chars) != std::string::npos) {\n+            throw std::invalid_argument(\"New-line in config name/value\");\n+        }\n+        if (ws_chars.find(*s.begin()) != std::string::npos || ws_chars.find(*s.rbegin()) != std::string::npos) {\n+            throw std::invalid_argument(\"Config name/value has leading/trailing whitespace\");\n+        }\n+    }\n+\n+    static void ModifyRWConfigFile_WriteRemaining(std::ostream& stream_out, const std::map<std::string, std::string>& settings_to_change, std::set<std::string>& setFound)\n+    {\n+        for (const auto& pairSetting : settings_to_change) {\n+            const std::string& key = pairSetting.first;\n+            const std::string& val = pairSetting.second;\n+            if (setFound.find(key) != setFound.end()) {\n+                continue;\n+            }\n+            setFound.insert(key);\n+            ModifyRWConfigFile_SanityCheck(key);\n+            ModifyRWConfigFile_SanityCheck(val);\n+            stream_out << key << \"=\" << val << \"\\n\";\n+        }\n+    }\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231617641",
      "id" : 231617641,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYxNzY0MQ==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 168,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172625234,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231617641",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231619701"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231619701"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Avoid extra allocations by doing:\r\n\r\n```\r\ns = s.substr(0, n2);\r\ns += val;\r\n```",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T18:14:18Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));\n+        while (i != '\\n') {\n+            i = streamIn.get();\n+            if (i == std::char_traits<char>::eof()) {\n+                break;\n+            }\n+            s.push_back(char(i));\n+        }\n+        return true;\n+    }\n+\n+    static const char * const ModifyRWConfigFile_ws_chars = \" \\t\\r\\n\";\n+\n+    static void ModifyRWConfigFile_SanityCheck(const std::string& s)\n+    {\n+        if (s.empty()) {\n+            // Dereferencing .begin or .rbegin below is invalid unless the string has at least one character.\n+            return;\n+        }\n+\n+        static const char * const newline_chars = \"\\r\\n\";\n+        static std::string ws_chars(ModifyRWConfigFile_ws_chars);\n+        if (s.find_first_of(newline_chars) != std::string::npos) {\n+            throw std::invalid_argument(\"New-line in config name/value\");\n+        }\n+        if (ws_chars.find(*s.begin()) != std::string::npos || ws_chars.find(*s.rbegin()) != std::string::npos) {\n+            throw std::invalid_argument(\"Config name/value has leading/trailing whitespace\");\n+        }\n+    }\n+\n+    static void ModifyRWConfigFile_WriteRemaining(std::ostream& stream_out, const std::map<std::string, std::string>& settings_to_change, std::set<std::string>& setFound)\n+    {\n+        for (const auto& pairSetting : settings_to_change) {\n+            const std::string& key = pairSetting.first;\n+            const std::string& val = pairSetting.second;\n+            if (setFound.find(key) != setFound.end()) {\n+                continue;\n+            }\n+            setFound.insert(key);\n+            ModifyRWConfigFile_SanityCheck(key);\n+            ModifyRWConfigFile_SanityCheck(val);\n+            stream_out << key << \"=\" << val << \"\\n\";\n+        }\n+    }\n+}\n+\n+void ModifyRWConfigStream(std::istream& stream_in, std::ostream& stream_out, const std::map<std::string, std::string>& settings_to_change)\n+{\n+    static const char * const ws_chars = ModifyRWConfigFile_ws_chars;\n+    std::set<std::string> setFound;\n+    std::string s, lineend, linebegin, key;\n+    std::string::size_type n, n2;\n+    bool inside_group = false, have_eof_nl = true, has_comment;\n+    std::map<std::string, std::string>::const_iterator iterCS;\n+    size_t lineno = 0;\n+    while (getline_with_eol(stream_in, s)) {\n+        ++lineno;\n+\n+        have_eof_nl = (!s.empty()) && (*s.rbegin() == '\\n');\n+        n = s.find('#');\n+        has_comment = (n != std::string::npos);\n+        if (!has_comment) {\n+            n = s.size();\n+        }\n+        n2 = s.find_last_not_of(ws_chars, n - 1);\n+        if (n2 != std::string::npos) {\n+            n = n2 + 1;\n+        }\n+        n2 = s.find_first_not_of(ws_chars);\n+        if (n2 == std::string::npos || n2 >= n) {\n+            // Blank or comment-only line\n+            stream_out << s;\n+            continue;\n+        }\n+        lineend = s.substr(n);\n+        linebegin = s.substr(0, n2);\n+        s = s.substr(n2, n - n2);\n+\n+        // It is impossible for s to be empty here, due to the blank line check above\n+        if (*s.begin() == '[' && *s.rbegin() == ']') {\n+            // We don't use sections, so we could possibly just write out the rest of the file - but we need to check for unparsable lines, so we just set a flag to ignore settings from here on\n+            ModifyRWConfigFile_WriteRemaining(stream_out, settings_to_change, setFound);\n+            inside_group = true;\n+            key.clear();\n+\n+            stream_out << linebegin << s << lineend;\n+            continue;\n+        }\n+\n+        n = s.find('=');\n+        if (n == std::string::npos) {\n+            // Bad line; this causes boost to throw an exception when parsing, so we comment out the entire file\n+            stream_in.seekg(0, std::ios_base::beg);\n+            stream_out.seekp(0, std::ios_base::beg);\n+            if (!(stream_in.good() && stream_out.good())) {\n+                throw std::ios_base::failure(\"Failed to rewind (to comment out existing file)\");\n+            }\n+            // First, write out all the settings we intend to set\n+            setFound.clear();\n+            ModifyRWConfigFile_WriteRemaining(stream_out, settings_to_change, setFound);\n+            // We then define a category to ensure new settings get added before the invalid stuff\n+            stream_out << \"[INVALID]\\n\";\n+            // Then, describe the problem in a comment\n+            stream_out << \"# Error parsing line \" << lineno << \": \" << s << \"\\n\";\n+            // Finally, dump the rest of the file commented out\n+            while (getline_with_eol(stream_in, s)) {\n+                stream_out << \"#\" << s;\n+            }\n+            return;\n+        }\n+\n+        if (!inside_group) {\n+            // We don't support/use groups, so once we're inside key is always null to avoid setting anything\n+            n2 = s.find_last_not_of(ws_chars, n - 1);\n+            if (n2 == std::string::npos) {\n+                n2 = n - 1;\n+            } else {\n+                ++n2;\n+            }\n+            key = s.substr(0, n2);\n+        }\n+        if ((!key.empty()) && (iterCS = settings_to_change.find(key)) != settings_to_change.end() && setFound.find(key) == setFound.end()) {\n+            // This is the key we want to change\n+            const std::string& val = iterCS->second;\n+            setFound.insert(key);\n+            ModifyRWConfigFile_SanityCheck(val);\n+            if (has_comment) {\n+                // Rather than change a commented line, comment it out entirely (the existing comment may relate to the value) and replace it\n+                stream_out << key << \"=\" << val << \"\\n\";\n+                linebegin.insert(linebegin.begin(), '#');\n+            } else {\n+                // Just modify the value in-line otherwise\n+                n2 = s.find_first_not_of(ws_chars, n + 1);\n+                if (n2 == std::string::npos) {\n+                    n2 = n + 1;\n+                }\n+                s = s.substr(0, n2) + val;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231619701",
      "id" : 231619701,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYxOTcwMQ==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 260,
      "path" : "src/util/system.cpp",
      "position" : 263,
      "pull_request_review_id" : 172627756,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231619701",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231622905"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231622905"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The scope of `has_comment` can be reduced?",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T18:23:52Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));\n+        while (i != '\\n') {\n+            i = streamIn.get();\n+            if (i == std::char_traits<char>::eof()) {\n+                break;\n+            }\n+            s.push_back(char(i));\n+        }\n+        return true;\n+    }\n+\n+    static const char * const ModifyRWConfigFile_ws_chars = \" \\t\\r\\n\";\n+\n+    static void ModifyRWConfigFile_SanityCheck(const std::string& s)\n+    {\n+        if (s.empty()) {\n+            // Dereferencing .begin or .rbegin below is invalid unless the string has at least one character.\n+            return;\n+        }\n+\n+        static const char * const newline_chars = \"\\r\\n\";\n+        static std::string ws_chars(ModifyRWConfigFile_ws_chars);\n+        if (s.find_first_of(newline_chars) != std::string::npos) {\n+            throw std::invalid_argument(\"New-line in config name/value\");\n+        }\n+        if (ws_chars.find(*s.begin()) != std::string::npos || ws_chars.find(*s.rbegin()) != std::string::npos) {\n+            throw std::invalid_argument(\"Config name/value has leading/trailing whitespace\");\n+        }\n+    }\n+\n+    static void ModifyRWConfigFile_WriteRemaining(std::ostream& stream_out, const std::map<std::string, std::string>& settings_to_change, std::set<std::string>& setFound)\n+    {\n+        for (const auto& pairSetting : settings_to_change) {\n+            const std::string& key = pairSetting.first;\n+            const std::string& val = pairSetting.second;\n+            if (setFound.find(key) != setFound.end()) {\n+                continue;\n+            }\n+            setFound.insert(key);\n+            ModifyRWConfigFile_SanityCheck(key);\n+            ModifyRWConfigFile_SanityCheck(val);\n+            stream_out << key << \"=\" << val << \"\\n\";\n+        }\n+    }\n+}\n+\n+void ModifyRWConfigStream(std::istream& stream_in, std::ostream& stream_out, const std::map<std::string, std::string>& settings_to_change)\n+{\n+    static const char * const ws_chars = ModifyRWConfigFile_ws_chars;\n+    std::set<std::string> setFound;\n+    std::string s, lineend, linebegin, key;\n+    std::string::size_type n, n2;\n+    bool inside_group = false, have_eof_nl = true, has_comment;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231622905",
      "id" : 231622905,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYyMjkwNQ==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 176,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172631857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231622905",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231623141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231623141"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Use `(char)i` to get it consistent with the rest of the code base :-)",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T18:24:33Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231623141",
      "id" : 231623141,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYyMzE0MQ==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 124,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172632166,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231623141",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231623188"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231623188"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here :-)",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T18:24:45Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));\n+        while (i != '\\n') {\n+            i = streamIn.get();\n+            if (i == std::char_traits<char>::eof()) {\n+                break;\n+            }\n+            s.push_back(char(i));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231623188",
      "id" : 231623188,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTYyMzE4OA==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 130,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172632247,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231623188",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231662854"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231662854"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the current style is more readable.",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T20:19:55Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));\n+        while (i != '\\n') {\n+            i = streamIn.get();\n+            if (i == std::char_traits<char>::eof()) {\n+                break;\n+            }\n+            s.push_back(char(i));\n+        }\n+        return true;\n+    }\n+\n+    static const char * const ModifyRWConfigFile_ws_chars = \" \\t\\r\\n\";\n+\n+    static void ModifyRWConfigFile_SanityCheck(const std::string& s)\n+    {\n+        if (s.empty()) {\n+            // Dereferencing .begin or .rbegin below is invalid unless the string has at least one character.\n+            return;\n+        }\n+\n+        static const char * const newline_chars = \"\\r\\n\";\n+        static std::string ws_chars(ModifyRWConfigFile_ws_chars);\n+        if (s.find_first_of(newline_chars) != std::string::npos) {\n+            throw std::invalid_argument(\"New-line in config name/value\");\n+        }\n+        if (ws_chars.find(*s.begin()) != std::string::npos || ws_chars.find(*s.rbegin()) != std::string::npos) {\n+            throw std::invalid_argument(\"Config name/value has leading/trailing whitespace\");\n+        }\n+    }\n+\n+    static void ModifyRWConfigFile_WriteRemaining(std::ostream& stream_out, const std::map<std::string, std::string>& settings_to_change, std::set<std::string>& setFound)\n+    {\n+        for (const auto& pairSetting : settings_to_change) {\n+            const std::string& key = pairSetting.first;\n+            const std::string& val = pairSetting.second;\n+            if (setFound.find(key) != setFound.end()) {\n+                continue;\n+            }\n+            setFound.insert(key);\n+            ModifyRWConfigFile_SanityCheck(key);\n+            ModifyRWConfigFile_SanityCheck(val);\n+            stream_out << key << \"=\" << val << \"\\n\";\n+        }\n+    }\n+}\n+\n+void ModifyRWConfigStream(std::istream& stream_in, std::ostream& stream_out, const std::map<std::string, std::string>& settings_to_change)\n+{\n+    static const char * const ws_chars = ModifyRWConfigFile_ws_chars;\n+    std::set<std::string> setFound;\n+    std::string s, lineend, linebegin, key;\n+    std::string::size_type n, n2;\n+    bool inside_group = false, have_eof_nl = true, has_comment;\n+    std::map<std::string, std::string>::const_iterator iterCS;\n+    size_t lineno = 0;\n+    while (getline_with_eol(stream_in, s)) {\n+        ++lineno;\n+\n+        have_eof_nl = (!s.empty()) && (*s.rbegin() == '\\n');\n+        n = s.find('#');\n+        has_comment = (n != std::string::npos);\n+        if (!has_comment) {\n+            n = s.size();\n+        }\n+        n2 = s.find_last_not_of(ws_chars, n - 1);\n+        if (n2 != std::string::npos) {\n+            n = n2 + 1;\n+        }\n+        n2 = s.find_first_not_of(ws_chars);\n+        if (n2 == std::string::npos || n2 >= n) {\n+            // Blank or comment-only line\n+            stream_out << s;\n+            continue;\n+        }\n+        lineend = s.substr(n);\n+        linebegin = s.substr(0, n2);\n+        s = s.substr(n2, n - n2);\n+\n+        // It is impossible for s to be empty here, due to the blank line check above\n+        if (*s.begin() == '[' && *s.rbegin() == ']') {\n+            // We don't use sections, so we could possibly just write out the rest of the file - but we need to check for unparsable lines, so we just set a flag to ignore settings from here on\n+            ModifyRWConfigFile_WriteRemaining(stream_out, settings_to_change, setFound);\n+            inside_group = true;\n+            key.clear();\n+\n+            stream_out << linebegin << s << lineend;\n+            continue;\n+        }\n+\n+        n = s.find('=');\n+        if (n == std::string::npos) {\n+            // Bad line; this causes boost to throw an exception when parsing, so we comment out the entire file\n+            stream_in.seekg(0, std::ios_base::beg);\n+            stream_out.seekp(0, std::ios_base::beg);\n+            if (!(stream_in.good() && stream_out.good())) {\n+                throw std::ios_base::failure(\"Failed to rewind (to comment out existing file)\");\n+            }\n+            // First, write out all the settings we intend to set\n+            setFound.clear();\n+            ModifyRWConfigFile_WriteRemaining(stream_out, settings_to_change, setFound);\n+            // We then define a category to ensure new settings get added before the invalid stuff\n+            stream_out << \"[INVALID]\\n\";\n+            // Then, describe the problem in a comment\n+            stream_out << \"# Error parsing line \" << lineno << \": \" << s << \"\\n\";\n+            // Finally, dump the rest of the file commented out\n+            while (getline_with_eol(stream_in, s)) {\n+                stream_out << \"#\" << s;\n+            }\n+            return;\n+        }\n+\n+        if (!inside_group) {\n+            // We don't support/use groups, so once we're inside key is always null to avoid setting anything\n+            n2 = s.find_last_not_of(ws_chars, n - 1);\n+            if (n2 == std::string::npos) {\n+                n2 = n - 1;\n+            } else {\n+                ++n2;\n+            }\n+            key = s.substr(0, n2);\n+        }\n+        if ((!key.empty()) && (iterCS = settings_to_change.find(key)) != settings_to_change.end() && setFound.find(key) == setFound.end()) {\n+            // This is the key we want to change\n+            const std::string& val = iterCS->second;\n+            setFound.insert(key);\n+            ModifyRWConfigFile_SanityCheck(val);\n+            if (has_comment) {\n+                // Rather than change a commented line, comment it out entirely (the existing comment may relate to the value) and replace it\n+                stream_out << key << \"=\" << val << \"\\n\";\n+                linebegin.insert(linebegin.begin(), '#');\n+            } else {\n+                // Just modify the value in-line otherwise\n+                n2 = s.find_first_not_of(ws_chars, n + 1);\n+                if (n2 == std::string::npos) {\n+                    n2 = n + 1;\n+                }\n+                s = s.substr(0, n2) + val;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231662854",
      "id" : 231662854,
      "in_reply_to_id" : 231619701,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTY2Mjg1NA==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 260,
      "path" : "src/util/system.cpp",
      "position" : 263,
      "pull_request_review_id" : 172681240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231662854",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231663311"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231663311"
         }
      },
      "author_association" : "MEMBER",
      "body" : "C-style casts aren't good practice in C++.",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T20:21:37Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231663311",
      "id" : 231663311,
      "in_reply_to_id" : 231623141,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTY2MzMxMQ==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 124,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172681888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231663311",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231666685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231666685"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agreed. `static_cast<char>(i)` then?\r\n\r\nThe reasons I personally prefer `static_cast<char>(i)`:\r\n* https://isocpp.org/wiki/faq/style-and-techniques#static-cast\r\n* https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#es49-if-you-must-use-a-cast-use-a-named-cast\r\n* https://www.aristeia.com/EC3E/3E_item27.pdf\r\n",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T20:33:24Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231666685",
      "id" : 231666685,
      "in_reply_to_id" : 231623141,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTY2NjY4NQ==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 124,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172686222,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231666685",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231667115"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231667115"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I see your point and readability is probably more important than allocation efficiency in this case :-)",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T20:34:52Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));\n+        while (i != '\\n') {\n+            i = streamIn.get();\n+            if (i == std::char_traits<char>::eof()) {\n+                break;\n+            }\n+            s.push_back(char(i));\n+        }\n+        return true;\n+    }\n+\n+    static const char * const ModifyRWConfigFile_ws_chars = \" \\t\\r\\n\";\n+\n+    static void ModifyRWConfigFile_SanityCheck(const std::string& s)\n+    {\n+        if (s.empty()) {\n+            // Dereferencing .begin or .rbegin below is invalid unless the string has at least one character.\n+            return;\n+        }\n+\n+        static const char * const newline_chars = \"\\r\\n\";\n+        static std::string ws_chars(ModifyRWConfigFile_ws_chars);\n+        if (s.find_first_of(newline_chars) != std::string::npos) {\n+            throw std::invalid_argument(\"New-line in config name/value\");\n+        }\n+        if (ws_chars.find(*s.begin()) != std::string::npos || ws_chars.find(*s.rbegin()) != std::string::npos) {\n+            throw std::invalid_argument(\"Config name/value has leading/trailing whitespace\");\n+        }\n+    }\n+\n+    static void ModifyRWConfigFile_WriteRemaining(std::ostream& stream_out, const std::map<std::string, std::string>& settings_to_change, std::set<std::string>& setFound)\n+    {\n+        for (const auto& pairSetting : settings_to_change) {\n+            const std::string& key = pairSetting.first;\n+            const std::string& val = pairSetting.second;\n+            if (setFound.find(key) != setFound.end()) {\n+                continue;\n+            }\n+            setFound.insert(key);\n+            ModifyRWConfigFile_SanityCheck(key);\n+            ModifyRWConfigFile_SanityCheck(val);\n+            stream_out << key << \"=\" << val << \"\\n\";\n+        }\n+    }\n+}\n+\n+void ModifyRWConfigStream(std::istream& stream_in, std::ostream& stream_out, const std::map<std::string, std::string>& settings_to_change)\n+{\n+    static const char * const ws_chars = ModifyRWConfigFile_ws_chars;\n+    std::set<std::string> setFound;\n+    std::string s, lineend, linebegin, key;\n+    std::string::size_type n, n2;\n+    bool inside_group = false, have_eof_nl = true, has_comment;\n+    std::map<std::string, std::string>::const_iterator iterCS;\n+    size_t lineno = 0;\n+    while (getline_with_eol(stream_in, s)) {\n+        ++lineno;\n+\n+        have_eof_nl = (!s.empty()) && (*s.rbegin() == '\\n');\n+        n = s.find('#');\n+        has_comment = (n != std::string::npos);\n+        if (!has_comment) {\n+            n = s.size();\n+        }\n+        n2 = s.find_last_not_of(ws_chars, n - 1);\n+        if (n2 != std::string::npos) {\n+            n = n2 + 1;\n+        }\n+        n2 = s.find_first_not_of(ws_chars);\n+        if (n2 == std::string::npos || n2 >= n) {\n+            // Blank or comment-only line\n+            stream_out << s;\n+            continue;\n+        }\n+        lineend = s.substr(n);\n+        linebegin = s.substr(0, n2);\n+        s = s.substr(n2, n - n2);\n+\n+        // It is impossible for s to be empty here, due to the blank line check above\n+        if (*s.begin() == '[' && *s.rbegin() == ']') {\n+            // We don't use sections, so we could possibly just write out the rest of the file - but we need to check for unparsable lines, so we just set a flag to ignore settings from here on\n+            ModifyRWConfigFile_WriteRemaining(stream_out, settings_to_change, setFound);\n+            inside_group = true;\n+            key.clear();\n+\n+            stream_out << linebegin << s << lineend;\n+            continue;\n+        }\n+\n+        n = s.find('=');\n+        if (n == std::string::npos) {\n+            // Bad line; this causes boost to throw an exception when parsing, so we comment out the entire file\n+            stream_in.seekg(0, std::ios_base::beg);\n+            stream_out.seekp(0, std::ios_base::beg);\n+            if (!(stream_in.good() && stream_out.good())) {\n+                throw std::ios_base::failure(\"Failed to rewind (to comment out existing file)\");\n+            }\n+            // First, write out all the settings we intend to set\n+            setFound.clear();\n+            ModifyRWConfigFile_WriteRemaining(stream_out, settings_to_change, setFound);\n+            // We then define a category to ensure new settings get added before the invalid stuff\n+            stream_out << \"[INVALID]\\n\";\n+            // Then, describe the problem in a comment\n+            stream_out << \"# Error parsing line \" << lineno << \": \" << s << \"\\n\";\n+            // Finally, dump the rest of the file commented out\n+            while (getline_with_eol(stream_in, s)) {\n+                stream_out << \"#\" << s;\n+            }\n+            return;\n+        }\n+\n+        if (!inside_group) {\n+            // We don't support/use groups, so once we're inside key is always null to avoid setting anything\n+            n2 = s.find_last_not_of(ws_chars, n - 1);\n+            if (n2 == std::string::npos) {\n+                n2 = n - 1;\n+            } else {\n+                ++n2;\n+            }\n+            key = s.substr(0, n2);\n+        }\n+        if ((!key.empty()) && (iterCS = settings_to_change.find(key)) != settings_to_change.end() && setFound.find(key) == setFound.end()) {\n+            // This is the key we want to change\n+            const std::string& val = iterCS->second;\n+            setFound.insert(key);\n+            ModifyRWConfigFile_SanityCheck(val);\n+            if (has_comment) {\n+                // Rather than change a commented line, comment it out entirely (the existing comment may relate to the value) and replace it\n+                stream_out << key << \"=\" << val << \"\\n\";\n+                linebegin.insert(linebegin.begin(), '#');\n+            } else {\n+                // Just modify the value in-line otherwise\n+                n2 = s.find_first_not_of(ws_chars, n + 1);\n+                if (n2 == std::string::npos) {\n+                    n2 = n + 1;\n+                }\n+                s = s.substr(0, n2) + val;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231667115",
      "id" : 231667115,
      "in_reply_to_id" : 231619701,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTY2NzExNQ==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 260,
      "path" : "src/util/system.cpp",
      "position" : 263,
      "pull_request_review_id" : 172686767,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231667115",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231704879"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231704879"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There is no need for a cast at all. C++ allows construction of char just like any other type.",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T22:36:19Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231704879",
      "id" : 231704879,
      "in_reply_to_id" : 231623141,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTcwNDg3OQ==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 124,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172733148,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231704879",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Finally rebased (and ready for high-pri for review I think).\r\n\r\nEdit: Forgot #14532 was in high-pri still. This will have to wait I guess.",
      "created_at" : "2018-11-07T22:36:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-436803389",
      "id" : 436803389,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNjgwMzM4OQ==",
      "updated_at" : "2018-11-08T08:47:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436803389",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231714495"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231714495"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure I follow the \"no need for cast\" statement. Do we agree on the following two statements? :-)\r\n\r\n1. The functional cast expression `char(i)` is equivalent to the C-style cast expression `(char)i`\r\n1. When a C-style cast expression is encountered, the compiler interprets it as the first named cast that satisfies the requirements of the respective cast operator in the order: a. `const_cast<T>(Ã¢ÂÂ¦)`, b. `static_cast<T>(Ã¢ÂÂ¦)`, Ã¢ÂÂ¦, etc.\r\n",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T23:15:06Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231714495",
      "id" : 231714495,
      "in_reply_to_id" : 231623141,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTcxNDQ5NQ==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 124,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172744950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231714495",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231718036"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231718036"
         }
      },
      "author_association" : "MEMBER",
      "body" : "For primitive types we've generally used C-style casts over C++-style ones (they're equivalent in that case, and much less syntactic burden).",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-07T23:31:17Z",
      "diff_hunk" : "@@ -979,6 +1028,215 @@ std::string ArgsManager::GetChainName() const\n     return CBaseChainParams::MAIN;\n }\n \n+namespace {\n+\n+    // Like std::getline, but includes the EOL character in the result\n+    static bool getline_with_eol(std::istream& streamIn, std::string& s)\n+    {\n+        int i;\n+        i = streamIn.get();\n+        if (i == std::char_traits<char>::eof()) {\n+            return false;\n+        }\n+        s.clear();\n+        s.push_back(char(i));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r231718036",
      "id" : 231718036,
      "in_reply_to_id" : 231623141,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTcxODAzNg==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 124,
      "path" : "src/util/system.cpp",
      "position" : null,
      "pull_request_review_id" : 172749250,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231718036",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #16545 (refactor: Implement missing error checking for ArgsManager flags by ryanofsky)\n* #14866 ([wip] util: Improve evaluation of includeconf lines in network sections of the config file by AkioNak)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-11-09T03:48:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-437240932",
      "id" : 437240932,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzNzI0MDkzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-29T22:48:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437240932",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r232447449"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232447449"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: 0.18.0",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-11-10T09:38:35Z",
      "diff_hunk" : "@@ -1,6 +1,7 @@\n \n * banlist.dat: stores the IPs/Subnets of banned nodes\n * bitcoin.conf: contains configuration settings for bitcoind or bitcoin-qt\n+* bitcoin_rw.conf: contains configuration settings modified by bitcoind or bitcoin-qt: since 0.16.0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r232447449",
      "id" : 232447449,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ0NzQ0OQ==",
      "original_commit_id" : "4f5794f776d1815b04a01f379554fdbb1032aaec",
      "original_position" : 4,
      "path" : "doc/files.md",
      "position" : null,
      "pull_request_review_id" : 173656589,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232447449",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-11-19T19:05:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-440006029",
      "id" : 440006029,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0MDAwNjAyOQ==",
      "updated_at" : "2018-11-19T19:05:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440006029",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased (and ready for high-prio review list)",
      "created_at" : "2018-12-14T01:54:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-447185944",
      "id" : 447185944,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ0NzE4NTk0NA==",
      "updated_at" : "2018-12-14T01:54:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/447185944",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r242608382"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242608382"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-12-18T16:28:23Z",
      "diff_hunk" : "@@ -162,6 +169,10 @@ class ArgsManager\n     bool ParseParameters(int argc, const char* const argv[], std::string& error);\n     bool ReadConfigFiles(std::string& error, bool ignore_invalid_keys = false);\n \n+    void ModifyRWConfigFile(const std::map<std::string, std::string>& settings_to_change);\n+    void ModifyRWConfigFile(const std::string& setting_to_change, const std::string& new_value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r242608382",
      "id" : 242608382,
      "in_reply_to_id" : 231616863,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjYwODM4Mg==",
      "original_commit_id" : "2d2de023a4e2e00ed56f13eb22fd92dbd0836d1a",
      "original_position" : 42,
      "path" : "src/util/system.h",
      "position" : 42,
      "pull_request_review_id" : 186160331,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242608382",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r242642836"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242642836"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"util: Support prepending configs in ReadConfigStream\" (e95124005d4b0ad1d343eb60662d3e82a9e9194b)\r\n\r\n\r\nCould add description of offsets map:\r\n\r\n```c++\r\n// Map of option name -> number of option values prepended by this ReadConfigStream call.\r\n// Only used when prepend=true.\r\n```",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-12-18T18:00:36Z",
      "diff_hunk" : "@@ -886,22 +886,38 @@ static bool GetConfigOptions(std::istream& stream, std::string& error, std::vect\n     return true;\n }\n \n-bool ArgsManager::ReadConfigStream(std::istream& stream, std::string& error, bool ignore_invalid_keys)\n+bool ArgsManager::ReadConfigStream(std::istream& stream, std::string& error, bool ignore_invalid_keys, bool prepend)\n {\n     LOCK(cs_args);\n     std::vector<std::pair<std::string, std::string>> options;\n     m_config_sections.clear();\n     if (!GetConfigOptions(stream, error, options, m_config_sections)) {\n         return false;\n     }\n+    std::map<std::string, size_t> offsets;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r242642836",
      "id" : 242642836,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjY0MjgzNg==",
      "original_commit_id" : "e95124005d4b0ad1d343eb60662d3e82a9e9194b",
      "original_position" : 13,
      "path" : "src/util/system.cpp",
      "position" : 41,
      "pull_request_review_id" : 186204085,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242642836",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r242645787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242645787"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"util: Support prepending configs in ReadConfigStream\" (e95124005d4b0ad1d343eb60662d3e82a9e9194b)\r\n\r\nCould definitely use a c++ unit test checking the prepend behavior. Especially for the negated args part, which I could easily imagine someone screwing up in the future.",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-12-18T18:09:26Z",
      "diff_hunk" : "@@ -151,7 +151,7 @@ class ArgsManager\n     std::map<OptionsCategory, std::map<std::string, Arg>> m_available_args GUARDED_BY(cs_args);\n     std::set<std::string> m_config_sections GUARDED_BY(cs_args);\n \n-    NODISCARD bool ReadConfigStream(std::istream& stream, std::string& error, bool ignore_invalid_keys = false);\n+    NODISCARD bool ReadConfigStream(std::istream& stream, std::string& error, bool ignore_invalid_keys = false, bool prepend = false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r242645787",
      "id" : 242645787,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjY0NTc4Nw==",
      "original_commit_id" : "e95124005d4b0ad1d343eb60662d3e82a9e9194b",
      "original_position" : 5,
      "path" : "src/util/system.h",
      "position" : null,
      "pull_request_review_id" : 186204085,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242645787",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r242656516"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242656516"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"util: SelectBaseParams in ReadConfigFiles, before getting final datadir\" (cfd54102b60bc1a83c032f041e4199cf89e422f1)\r\n\r\nI don't understand what this commit is supposed to be doing. GetDataDir seems to be called with fNetSpecific=false below so it seems like baseparams wouldn't be accessed here. Also, it doesn't seem ideal that now SelectBaseParams will be called multiple times at startup instead of just once. I think right now it is only called once from SelectParams(). Would it be possible to add a unit test or an assert or something that guards against whatever condition this commit is supposed to prevent? Or maybe an english language description of what this commit is supposed to accomplish?",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2018-12-18T18:40:04Z",
      "diff_hunk" : "@@ -1004,6 +1004,14 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n         }\n     }\n \n+    // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r242656516",
      "id" : 242656516,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjY1NjUxNg==",
      "original_commit_id" : "cfd54102b60bc1a83c032f041e4199cf89e422f1",
      "original_position" : 4,
      "path" : "src/util/system.cpp",
      "position" : 80,
      "pull_request_review_id" : 186204085,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-02T03:56:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/242656516",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It seems like all we need is basic storage for settings that can be updated in the gui and maybe over rpc. I'd think the simplest way to do to this would be to add a UniValue m_rwsettings; member to the GlobalArgs class, tweak GetArg...() methods to return these settings, and serialize/deserialize the settings member as needed to <datadir>/settings.json by calling existing univalue read and write methods.\r\n\r\nI agree with @ryanofsky.\r\nWe do not have JSON configuration files, but for the rw settings, I think this is acceptable and easy to maintain. The code complexity would drop a lot and Ã¢ÂÂ since JSON is easy to manipulate with a text editor Ã¢ÂÂ still partially editable by humans.",
      "created_at" : "2019-01-04T06:24:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-451362425",
      "id" : 451362425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MTM2MjQyNQ==",
      "updated_at" : "2019-01-04T06:24:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451362425",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Pretty sure UniValue is actually more code than this simple INI modification logic...\r\n\r\nINI *is also* a simple machine-readable format, and we're already using it. The minimal complexity in modifications exists to *preserve* user edits (which UniValue doesn't support at all).",
      "created_at" : "2019-01-04T10:21:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-451406061",
      "id" : 451406061,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MTQwNjA2MQ==",
      "updated_at" : "2019-01-04T10:21:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451406061",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "There has been a quick discussion about UniValue vs INI files during the todays IRC meeting:\r\nhttp://www.erisian.com.au/bitcoin-core-dev/log-2019-01-10.html#l-451",
      "created_at" : "2019-01-11T06:21:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-453391480",
      "id" : 453391480,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MzM5MTQ4MA==",
      "updated_at" : "2019-01-11T06:21:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453391480",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "tl&dr of the IRC discussion seems to be \"whatever is less code\", so not much difference to the discussion here. I think there's something to be said for keeping the same format.\r\n\r\nIf we go for a different format, then I should repeat my point that I don't like how `bitcoin-cli`, and by extension other applications that use the RPC that rely on `bitcoin.conf` to figure out how to talk to it, can also process this file.\r\n\r\nI rebased #12833 again.",
      "created_at" : "2019-01-15T19:36:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-454522250",
      "id" : 454522250,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1NDUyMjI1MA==",
      "updated_at" : "2019-01-15T19:36:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454522250",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2019-02-12T15:17:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-462799198",
      "id" : 462799198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2Mjc5OTE5OA==",
      "updated_at" : "2019-02-12T15:17:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/462799198",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "At least one of the Travis machines failed with `test_bitcoin-qt: util/system.cpp:1213: void ArgsManager::EraseRWConfigFile(): Assertion `!rwconf_path.empty()' failed.`\r\n\r\nI also rebased #12833; everything still works afaik.\r\n\r\nAlso worth noting that this PR could make dynamic wallet loading / unloading in the GUI more useful (because we can remember which wallets are open). (update: see #15454)",
      "created_at" : "2019-02-12T18:29:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-462877925",
      "id" : 462877925,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2Mjg3NzkyNQ==",
      "updated_at" : "2019-02-21T17:18:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/462877925",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-02-21T08:40:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-465910872",
      "id" : 465910872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2NTkxMDg3Mg==",
      "updated_at" : "2019-02-21T08:40:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/465910872",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This currently only allows each config option to be specified once. However the normal bitcoin.conf file allows specifying some argument multiple times (e.g. `wallet`). It would be nice if this did that too.",
      "created_at" : "2019-02-21T19:57:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-466143595",
      "id" : 466143595,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2NjE0MzU5NQ==",
      "updated_at" : "2019-02-21T19:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/466143595",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@achow101 Yes, but that seems better left for a subsequent PR. This is good enough for most use cases right now.",
      "created_at" : "2019-02-23T02:46:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-466609082",
      "id" : 466609082,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2NjYwOTA4Mg==",
      "updated_at" : "2019-02-23T02:46:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/466609082",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r282245860"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282245860"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`bitcoin_rw.conf` is located in the network-specific data dir.",
      "commit_id" : "03d306b0838200eff4306fae180526061940dda8",
      "created_at" : "2019-05-08T20:55:10Z",
      "diff_hunk" : "@@ -1004,6 +1004,14 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n         }\n     }\n \n+    // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#discussion_r282245860",
      "id" : 282245860,
      "in_reply_to_id" : 242656516,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MjI0NTg2MA==",
      "original_commit_id" : "cfd54102b60bc1a83c032f041e4199cf89e422f1",
      "original_position" : 4,
      "path" : "src/util/system.cpp",
      "position" : 80,
      "pull_request_review_id" : 235287971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11082",
      "updated_at" : "2019-05-08T20:55:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282245860",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr Care to rebase?",
      "created_at" : "2019-09-24T21:56:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-534764951",
      "id" : 534764951,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzNDc2NDk1MQ==",
      "updated_at" : "2019-09-24T21:56:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534764951",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK ",
      "created_at" : "2019-10-10T23:00:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-540832813",
      "id" : 540832813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MDgzMjgxMw==",
      "updated_at" : "2019-10-10T23:01:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540832813",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "node_id" : "MDQ6VXNlcjEwMDg0NTg=",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2019-10-13T01:49:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-541377456",
      "id" : 541377456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MTM3NzQ1Ng==",
      "updated_at" : "2019-10-13T01:49:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541377456",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased #12833 (move QSettings to bitcoin_rw.conf) on top.",
      "created_at" : "2019-10-15T08:19:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-542096797",
      "id" : 542096797,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjA5Njc5Nw==",
      "updated_at" : "2019-10-15T08:19:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542096797",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-10-16T14:23:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-542726669",
      "id" : 542726669,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0MjcyNjY2OQ==",
      "updated_at" : "2019-10-16T14:23:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542726669",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The `bitcoin_rw.conf` file is being written to the network specific directories and not the datadir itself, so when using regtest or testnet mode, it won't be read and handled.\r\n\r\nSo either the network specific conf needs to be read, or it needs to be written to the datadir, preferably with network specific settings so that things done on each network don't interfere with each other.",
      "created_at" : "2019-10-16T21:07:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-542892259",
      "id" : 542892259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Mjg5MjI1OQ==",
      "updated_at" : "2019-10-16T21:09:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542892259",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It's being read from the network-specific directory too...",
      "created_at" : "2019-10-16T21:12:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-542893934",
      "id" : 542893934,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0Mjg5MzkzNA==",
      "updated_at" : "2019-10-16T21:12:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542893934",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is consistent with how QT stores network specific settings.",
      "created_at" : "2019-10-21T09:17:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-544426388",
      "id" : 544426388,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NDQyNjM4OA==",
      "updated_at" : "2019-10-21T09:17:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/544426388",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It's being read from the network-specific directory too...\r\n\r\nIt didn't seem to be working for me in #15454, maybe I was just doing something wrong there. Edit: Other changes to ArgsManager were causing my problems.",
      "created_at" : "2019-10-21T15:31:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-544570110",
      "id" : 544570110,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NDU3MDExMA==",
      "updated_at" : "2019-10-21T18:50:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/544570110",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Trivial rebased",
      "created_at" : "2019-10-29T02:15:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-547225174",
      "id" : 547225174,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0NzIyNTE3NA==",
      "updated_at" : "2019-10-29T02:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547225174",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-11-08T23:30:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-552030988",
      "id" : 552030988,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MjAzMDk4OA==",
      "updated_at" : "2019-11-08T23:30:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552030988",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "What is the status of this? Shall we close it? It had a few concept ACKs.",
      "created_at" : "2020-05-29T06:59:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-635798156",
      "id" : 635798156,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNTc5ODE1Ng==",
      "updated_at" : "2020-05-29T06:59:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635798156",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I would still like to see this, or something equivalent...",
      "created_at" : "2020-05-29T08:57:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-635858778",
      "id" : 635858778,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNTg1ODc3OA==",
      "updated_at" : "2020-05-29T08:57:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635858778",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Forgot to push the last rebase... pushed.",
      "created_at" : "2020-05-29T14:55:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-636018931",
      "id" : 636018931,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNjAxODkzMQ==",
      "updated_at" : "2020-05-29T14:55:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/636018931",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@luke-jr: pull is failing on CIs,... this PR could use some love and care.",
      "created_at" : "2020-06-05T06:56:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-639295859",
      "id" : 639295859,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzOTI5NTg1OQ==",
      "updated_at" : "2020-06-05T06:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/639295859",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased yet again",
      "created_at" : "2020-06-18T16:17:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-646136382",
      "id" : 646136382,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NjEzNjM4Mg==",
      "updated_at" : "2020-06-18T16:17:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646136382",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-07-23T17:03:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-663122173",
      "id" : 663122173,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MzEyMjE3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-23T17:03:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/663122173",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased",
      "created_at" : "2020-08-20T15:46:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-677745462",
      "id" : 677745462,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Nzc0NTQ2Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-20T15:46:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677745462",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm not sure this is needed now that we have the settings.json file. @luke-jr, can you explain why we should consider adding another settings file?",
      "created_at" : "2020-08-20T18:25:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-677825831",
      "id" : 677825831,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3NzgyNTgzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-20T18:25:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677825831",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "So we can revert settings.json before 0.21 is released and we're locked in to supporting such a bad idea?",
      "created_at" : "2020-08-20T18:57:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-677840600",
      "id" : 677840600,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Nzg0MDYwMA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-20T18:57:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677840600",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "NACK. Let's close this and move on.",
      "created_at" : "2020-08-20T19:22:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-677853669",
      "id" : 677853669,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3Nzg1MzY2OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-20T19:22:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677853669",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-09-23T07:50:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-697197068",
      "id" : 697197068,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NzE5NzA2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-23T07:50:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/697197068",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I have no objection to swapping the new `settings.json` out for `bitcoin_rw.conf` before the release, if this gets enough review. But I probably won't review this, because I don't think the difference is worth it. I don't expect users to manually read or edit this, since they can already access `bitcoin.conf`. So the choice of file format seems irrelevant.\r\n\r\nThe (rather large amount of) code in `ModifyRWConfigStream` presents entirely new file parsing. It would both be more useful, and easier to review, if it was also used to parse `bitcoin.conf`.",
      "created_at" : "2020-10-15T18:21:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-709506450",
      "id" : 709506450,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcwOTUwNjQ1MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-10-15T18:22:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709506450",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Now that we've branched off, and are unlikely to be reverting `settings.json`, I'm going to close this PR.",
      "created_at" : "2020-11-18T13:22:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11082#issuecomment-729673558",
      "id" : 729673558,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11082",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyOTY3MzU1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-18T13:22:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729673558",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
