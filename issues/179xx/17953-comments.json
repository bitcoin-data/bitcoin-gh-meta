[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r368068122"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/368068122"
         }
      },
      "author_association" : "MEMBER",
      "body" : "for reviewers, what's the `sizeof(T)` trick here?",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-17T18:11:42Z",
      "diff_hunk" : "@@ -0,0 +1,159 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant/get.hpp>\n+#include <boost/variant/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(T& value)\n+    {\n+        m_var = value;\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }\n+    template <class T>\n+    Variant(T&& value)\n+    {\n+        m_var = std::move(value);\n+    }\n+\n+    int which() const\n+    {\n+        return m_var.which();\n+    }\n+\n+    template <class T>\n+    T* get_if()\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    const T* get_if() const\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    T& get()\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+    template <class T>\n+    const T& get() const\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+\n+    Variant& operator=(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+        return *this;\n+    }\n+    Variant& operator=(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+        return *this;\n+    }\n+\n+    // Allow support for boost::Variant\n+    template <class Visitor>\n+    typename Visitor::result_type apply_visitor(Visitor& visitor) const\n+    {\n+        return boost::apply_visitor(visitor, m_var);\n+    }\n+    template <class Visitor>\n+    typename Visitor::result_type apply_visitor(const Visitor& visitor) const\n+    {\n+        return boost::apply_visitor(visitor, m_var);\n+    }\n+\n+    bool operator==(const Variant& other) const\n+    {\n+        return m_var == other.m_var;\n+    }\n+    bool operator!=(const Variant& other) const\n+    {\n+        return m_var != other.m_var;\n+    }\n+    bool operator<(const Variant& other) const\n+    {\n+        return m_var < other.m_var;\n+    }\n+    bool operator>(const Variant& other) const\n+    {\n+        return m_var > other.m_var;\n+    }\n+    bool operator<=(const Variant& other) const\n+    {\n+        return m_var <= other.m_var;\n+    }\n+    bool operator>=(const Variant& other) const\n+    {\n+        return m_var >= other.m_var;\n+    }\n+    // This are here to prevent implicit conversion to Variant and throw a compile time error.\n+    template <typename T>\n+    void operator==(const T&) const\n+    {\n+        static_assert(false && sizeof(T), \"Compared a Variant directly with type T. this prevented an implicit conversion\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r368068122",
      "id" : 368068122,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA2ODEyMg==",
      "original_commit_id" : "278dc53fa8a657e05b86ef2025f604891ca33571",
      "original_position" : 130,
      "path" : "src/variant.h",
      "position" : 124,
      "pull_request_review_id" : 344752818,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/368068122",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r368070494"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/368070494"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "right forgot to mention that.\r\nif I just do `static_assert(false, msg)` it won't compile no matter what.\r\nnow because the `sizeof(T)` is here then it can't evaluate the expression without monomorphising the function so it can know what `T` is. so as long as this function is never called the compiler won't fail compilation because it will never be able to evaluate it.\r\n\r\nie without: https://godbolt.org/z/ZGAFQB (fail compilation even though it isn't being called)\r\nwith: https://godbolt.org/z/JCDeeM (doesn't fail because can't evaluate)\r\nwith and used: https://godbolt.org/z/KCfNSV (fail compilation) \r\n\r\nFYI I stole that trick from: https://www.boost.org/doc/libs/1_71_0/boost/variant/variant.hpp (see `BOOST_STATIC_ASSERT`)",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-17T18:17:33Z",
      "diff_hunk" : "@@ -0,0 +1,159 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant/get.hpp>\n+#include <boost/variant/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(T& value)\n+    {\n+        m_var = value;\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }\n+    template <class T>\n+    Variant(T&& value)\n+    {\n+        m_var = std::move(value);\n+    }\n+\n+    int which() const\n+    {\n+        return m_var.which();\n+    }\n+\n+    template <class T>\n+    T* get_if()\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    const T* get_if() const\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    T& get()\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+    template <class T>\n+    const T& get() const\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+\n+    Variant& operator=(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+        return *this;\n+    }\n+    Variant& operator=(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+        return *this;\n+    }\n+\n+    // Allow support for boost::Variant\n+    template <class Visitor>\n+    typename Visitor::result_type apply_visitor(Visitor& visitor) const\n+    {\n+        return boost::apply_visitor(visitor, m_var);\n+    }\n+    template <class Visitor>\n+    typename Visitor::result_type apply_visitor(const Visitor& visitor) const\n+    {\n+        return boost::apply_visitor(visitor, m_var);\n+    }\n+\n+    bool operator==(const Variant& other) const\n+    {\n+        return m_var == other.m_var;\n+    }\n+    bool operator!=(const Variant& other) const\n+    {\n+        return m_var != other.m_var;\n+    }\n+    bool operator<(const Variant& other) const\n+    {\n+        return m_var < other.m_var;\n+    }\n+    bool operator>(const Variant& other) const\n+    {\n+        return m_var > other.m_var;\n+    }\n+    bool operator<=(const Variant& other) const\n+    {\n+        return m_var <= other.m_var;\n+    }\n+    bool operator>=(const Variant& other) const\n+    {\n+        return m_var >= other.m_var;\n+    }\n+    // This are here to prevent implicit conversion to Variant and throw a compile time error.\n+    template <typename T>\n+    void operator==(const T&) const\n+    {\n+        static_assert(false && sizeof(T), \"Compared a Variant directly with type T. this prevented an implicit conversion\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r368070494",
      "id" : 368070494,
      "in_reply_to_id" : 368068122,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA3MDQ5NA==",
      "original_commit_id" : "278dc53fa8a657e05b86ef2025f604891ca33571",
      "original_position" : 130,
      "path" : "src/variant.h",
      "position" : 124,
      "pull_request_review_id" : 344755861,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/368070494",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18202 (refactor: consolidate sendmany and sendtoaddress code by Sjors)\n* #18194 (Bugfix: GUI: Remove broken ability to edit the address field in the sending address book by luke-jr)\n* #18115 (wallet: Pass in transactions and messages for signing instead of exporting the private keys by achow101)\n* #17938 (Disallow automatic conversion between disparate hash types by Empact)\n* #17623 (rpc: add extensive file checks for dumptxoutset and dumpwallet by brakmic)\n* #17577 (refactor: deduplicate the message sign/verify code by vasild)\n* #16549 ([WIP] UI external signer support (e.g. hardware wallet) by Sjors)\n* #16546 ([WIP] External signer support - Wallet Box edition by Sjors)\n* #16528 (Native Descriptor Wallets using DescriptorScriptPubKeyMan by achow101)\n* #16440 (BIP-322: Generic signed message format by kallewoof)\n* #16378 ([WIP] The ultimate send RPC by Sjors)\n* #15294 ([moveonly] wallet: Extract RipeMd160 by Empact)\n* #15115 (GUI: Replace send-to-self with dual send+receive entries by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-01-18T00:58:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#issuecomment-575849018",
      "id" : 575849018,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17953",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTg0OTAxOA==",
      "updated_at" : "2020-02-25T03:19:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575849018",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370312083"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370312083"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add a new Variant type\" (85882c01d20add49f7b1f8b741e078968ec8080b)\r\n\r\nMaybe drop this overload. I don't think it's doing anything the other two overloads don't cover. Also std::variant doesn't have this: https://en.cppreference.com/w/cpp/utility/variant/variant",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T19:29:54Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370312083",
      "id" : 370312083,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMxMjA4Mw==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 31,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347552341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370312083",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370313122"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370313122"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add a new Variant type\" (85882c01d20add49f7b1f8b741e078968ec8080b)\r\n\r\nI think this overload is also not doing anything",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T19:32:10Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370313122",
      "id" : 370313122,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMxMzEyMg==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 40,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347552341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370313122",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370314229"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370314229"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add a new Variant type\" (85882c01d20add49f7b1f8b741e078968ec8080b)\r\n\r\nMaybe want `std::forward<T>(value)` instead of `std::move(value)` because this constructor (because it's a template) can be called with lvalues where it would be surprising to move from.",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T19:34:45Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }\n+    template <class T>\n+    Variant(T&& value)\n+    {\n+        m_var = std::move(value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370314229",
      "id" : 370314229,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMxNDIyOQ==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 44,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347552341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370314229",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370317262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370317262"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add a new Variant type\" (85882c01d20add49f7b1f8b741e078968ec8080b)\r\n\r\nMaybe add a template `operator=`, too. https://en.cppreference.com/w/cpp/utility/variant/operator%3D shows this as the third overload for `operator=`",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T19:41:09Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }\n+    template <class T>\n+    Variant(T&& value)\n+    {\n+        m_var = std::move(value);\n+    }\n+\n+    int which() const\n+    {\n+        return m_var.which();\n+    }\n+\n+    template <class T>\n+    T* get_if()\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    const T* get_if() const\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    T& get()\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+    template <class T>\n+    const T& get() const\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+\n+    Variant& operator=(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+        return *this;\n+    }\n+    Variant& operator=(Variant&& other)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370317262",
      "id" : 370317262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMxNzI2Mg==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 78,
      "path" : "src/variant.h",
      "position" : 71,
      "pull_request_review_id" : 347552341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370317262",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370325171"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370325171"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You're right, I was sure I dropped it.\r\nThere's no reason for both const and non-const constructor if it doesn't mutate.",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T19:58:20Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370325171",
      "id" : 370325171,
      "in_reply_to_id" : 370312083,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMyNTE3MQ==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 31,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347568992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370325171",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370326487"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370326487"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm seems that boost::variant implements this but std::variant doesn't.\r\ndoesn't this act as a copy constructor for a T?",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T20:01:13Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370326487",
      "id" : 370326487,
      "in_reply_to_id" : 370313122,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMyNjQ4Nw==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 40,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347570674,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370326487",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370326996"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370326996"
         }
      },
      "author_association" : "MEMBER",
      "body" : "~If you turn this into an `std::forward` I think you can drop all other copy constructors.~\r\n\r\nNevermind, the type doesn't match of course.",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T20:02:24Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }\n+    template <class T>\n+    Variant(T&& value)\n+    {\n+        m_var = std::move(value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370326996",
      "id" : 370326996,
      "in_reply_to_id" : 370314229,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMyNjk5Ng==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 44,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347571354,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370326996",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370333299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370333299"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I didn't really look into `std::forward` before, I now think I understand how and why it is useful, pretty cool. Thanks.",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T20:17:30Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }\n+    template <class T>\n+    Variant(T&& value)\n+    {\n+        m_var = std::move(value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370333299",
      "id" : 370333299,
      "in_reply_to_id" : 370314229,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMzMzI5OQ==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 44,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347579769,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370333299",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370335803"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370335803"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "seems that also here(like the constructor) boost adds both rlvaue and lvalue operators. i'll add just the rvalue like std::variant does. (although I don't quite understand why only that)",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T20:23:19Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }\n+    template <class T>\n+    Variant(T&& value)\n+    {\n+        m_var = std::move(value);\n+    }\n+\n+    int which() const\n+    {\n+        return m_var.which();\n+    }\n+\n+    template <class T>\n+    T* get_if()\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    const T* get_if() const\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    T& get()\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+    template <class T>\n+    const T& get() const\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+\n+    Variant& operator=(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+        return *this;\n+    }\n+    Variant& operator=(Variant&& other)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370335803",
      "id" : 370335803,
      "in_reply_to_id" : 370317262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMzNTgwMw==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 78,
      "path" : "src/variant.h",
      "position" : 71,
      "pull_request_review_id" : 347582964,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370335803",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370335877"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370335877"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Hmm seems that boost::variant implements this but std::variant doesn't.\r\n> doesn't this act as a copy constructor for a T?\r\n\r\nI think boost variant might implement this to deal with pre-c++11 compilers that don't support rvalue references. But the overload below `template <class T> Variant(T&& value)` should make this redundant with a c++11 compiler.",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T20:23:31Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370335877",
      "id" : 370335877,
      "in_reply_to_id" : 370313122,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMzNTg3Nw==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 40,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347583066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370335877",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370339048"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370339048"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> seems that also here(like the constructor) boost adds both rlvaue and lvalue operators. i'll add just the rvalue like std::variant does. (although I don't quite understand why only that)\r\n\r\nThe reason why only a `T&&` overload is needed is that when `T` is a template type, there are template deduction rules that let `T` be deduced to be an lvalue reference, so the function can be called with both lvalue and rvalue arguments. (This is needed for \"perfect forwarding\"). If `T` was a normal type and not a template type, you would need to have both `T&` and `T&&` overloads to accept lvalues and rvalues.",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T20:30:46Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }\n+    template <class T>\n+    Variant(T&& value)\n+    {\n+        m_var = std::move(value);\n+    }\n+\n+    int which() const\n+    {\n+        return m_var.which();\n+    }\n+\n+    template <class T>\n+    T* get_if()\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    const T* get_if() const\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    T& get()\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+    template <class T>\n+    const T& get() const\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+\n+    Variant& operator=(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+        return *this;\n+    }\n+    Variant& operator=(Variant&& other)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370339048",
      "id" : 370339048,
      "in_reply_to_id" : 370317262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMzOTA0OA==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 78,
      "path" : "src/variant.h",
      "position" : 71,
      "pull_request_review_id" : 347587112,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370339048",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370356157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370356157"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see now why I didn't drop it :)\r\nBecause then the following code won't compile:\r\n```\r\nVariant<int> var = 5;\r\nVariant<int> a = var;\r\n```\r\n\r\nBecause `Variant& operator=(T&& value)` signature can match it \"better\" then `Variant(const Variant& other)` so it will choose that and then it will try to handle it like a value instead of a variant  which will fail to compile (https://gcc.godbolt.org/z/BKzBkE) not quite sure how libstd makes it work (I think it can be done with `std::enable_if` but that's uglier than another constructor)",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T21:11:04Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370356157",
      "id" : 370356157,
      "in_reply_to_id" : 370312083,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM1NjE1Nw==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 31,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347609509,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370356157",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370360138"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370360138"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "argh This also introduces the same problem as in https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370356157\r\n",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T21:20:10Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }\n+    template <class T>\n+    Variant(T&& value)\n+    {\n+        m_var = std::move(value);\n+    }\n+\n+    int which() const\n+    {\n+        return m_var.which();\n+    }\n+\n+    template <class T>\n+    T* get_if()\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    const T* get_if() const\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    T& get()\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+    template <class T>\n+    const T& get() const\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+\n+    Variant& operator=(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+        return *this;\n+    }\n+    Variant& operator=(Variant&& other)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370360138",
      "id" : 370360138,
      "in_reply_to_id" : 370317262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2MDEzOA==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 78,
      "path" : "src/variant.h",
      "position" : 71,
      "pull_request_review_id" : 347614833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370360138",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370365347"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370365347"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I see now why I didn't drop it :)\r\n\r\nMakes sense, I see why it's there now",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T21:31:35Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370365347",
      "id" : 370365347,
      "in_reply_to_id" : 370312083,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2NTM0Nw==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 31,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347621548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370365347",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370367305"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370367305"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This seems consistent since our `optional` and `span` replacements are also at the top level. But I wonder if they should all move to `src/util/` or some place to keep the top level less crowded. Probably something to deal with in a different PR",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T21:35:50Z",
      "diff_hunk" : "@@ -231,6 +231,7 @@ BITCOIN_CORE_H = \\\n   util/vector.h \\\n   validation.h \\\n   validationinterface.h \\\n+  variant.h \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370367305",
      "id" : 370367305,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2NzMwNQ==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 4,
      "path" : "src/Makefile.am",
      "position" : 4,
      "pull_request_review_id" : 347621548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370367305",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370375763"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370375763"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See also #15732",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T21:55:43Z",
      "diff_hunk" : "@@ -231,6 +231,7 @@ BITCOIN_CORE_H = \\\n   util/vector.h \\\n   validation.h \\\n   validationinterface.h \\\n+  variant.h \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370375763",
      "id" : 370375763,
      "in_reply_to_id" : 370367305,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM3NTc2Mw==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 4,
      "path" : "src/Makefile.am",
      "position" : 4,
      "pull_request_review_id" : 347634845,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370375763",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370379615"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370379615"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "How would you feel about removing this and adding `enable_if` to all the templated versions that checks its not of type Variant? \n\nThe tradeoff here is more specialized constructors versus less readable templates ",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T22:05:03Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370379615",
      "id" : 370379615,
      "in_reply_to_id" : 370312083,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM3OTYxNQ==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 31,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347639810,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370379615",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370383805"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370383805"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> How would you feel about removing this and adding `enable_if` to all the templated versions that checks its not of type Variant?\r\n> \r\n> The tradeoff here is more specialized constructors versus less readable templates\r\n\r\nEither way seems good to me. You should choose which way you like best / hate least. I guess it's a choice between defining more repetitive constructors, or being more concise but using enable_if.",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-23T22:15:11Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370383805",
      "id" : 370383805,
      "in_reply_to_id" : 370312083,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM4MzgwNQ==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 31,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347645243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370383805",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370606016"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370606016"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-24T12:18:06Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }\n+    template <class T>\n+    Variant(T&& value)\n+    {\n+        m_var = std::move(value);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370606016",
      "id" : 370606016,
      "in_reply_to_id" : 370314229,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNjAxNg==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 44,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347917348,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370606016",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370606066"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370606066"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-24T12:18:15Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370606066",
      "id" : 370606066,
      "in_reply_to_id" : 370313122,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNjA2Ng==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 40,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347917409,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370606066",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370606096"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370606096"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-24T12:18:20Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370606096",
      "id" : 370606096,
      "in_reply_to_id" : 370312083,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNjA5Ng==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 31,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 347917450,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370606096",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370606268"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370606268"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-24T12:18:48Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    template <class T>\n+    Variant(const T& value)\n+    {\n+        m_var = value;\n+    }\n+    template <class T>\n+    Variant(T&& value)\n+    {\n+        m_var = std::move(value);\n+    }\n+\n+    int which() const\n+    {\n+        return m_var.which();\n+    }\n+\n+    template <class T>\n+    T* get_if()\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    const T* get_if() const\n+    {\n+        return boost::get<T>(&m_var);\n+    }\n+    template <class T>\n+    T& get()\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+    template <class T>\n+    const T& get() const\n+    {\n+        return boost::get<T>(m_var);\n+    }\n+\n+    Variant& operator=(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+        return *this;\n+    }\n+    Variant& operator=(Variant&& other)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370606268",
      "id" : 370606268,
      "in_reply_to_id" : 370317262,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNjI2OA==",
      "original_commit_id" : "85882c01d20add49f7b1f8b741e078968ec8080b",
      "original_position" : 78,
      "path" : "src/variant.h",
      "position" : 71,
      "pull_request_review_id" : 347917665,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370606268",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "~Not sure what's the problem in s390x, https://travis-ci.org/bitcoin/bitcoin/jobs/641327078 seems to be linker related.~ (Not happening anymore, CI related)",
      "created_at" : "2020-01-24T13:59:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#issuecomment-578141105",
      "id" : 578141105,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17953",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3ODE0MTEwNQ==",
      "updated_at" : "2020-01-26T11:14:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578141105",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370815185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370815185"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add a new Variant type\" (2eacf26ff61a63fce088600ced16ec2d4d5d771d)\r\n\r\nMight be a little better to replace `std::remove_reference` with `std::decay` to remove CV qualifiers as well",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-24T19:54:39Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+#include <type_traits>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    // Require that typeof(T) != Variant. to prevent wrong template instantiations\n+    template <class T, typename = typename std::enable_if<!std::is_same<typename std::remove_reference<T>::type, Variant>::value>::type>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370815185",
      "id" : 370815185,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxNTE4NQ==",
      "original_commit_id" : "2eacf26ff61a63fce088600ced16ec2d4d5d771d",
      "original_position" : 34,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 348189097,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370815185",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370990955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370990955"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ah ha! I looked for the closest thing to C++20's `std::remove_cvref` looks like `decay` is the better option",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-01-26T11:18:17Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+#include <type_traits>\n+\n+#include <boost/variant.hpp>\n+\n+//! Substitute for C++17 std::variant\n+template <class... Types>\n+class Variant\n+{\n+private:\n+    boost::variant<Types...> m_var;\n+\n+public:\n+    Variant()\n+    {\n+        m_var = {};\n+    }\n+    Variant(const Variant& other)\n+    {\n+        m_var = other.m_var;\n+    }\n+    Variant(Variant&& other)\n+    {\n+        m_var = std::move(other.m_var);\n+    }\n+    // Require that typeof(T) != Variant. to prevent wrong template instantiations\n+    template <class T, typename = typename std::enable_if<!std::is_same<typename std::remove_reference<T>::type, Variant>::value>::type>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r370990955",
      "id" : 370990955,
      "in_reply_to_id" : 370815185,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5MDk1NQ==",
      "original_commit_id" : "2eacf26ff61a63fce088600ced16ec2d4d5d771d",
      "original_position" : 34,
      "path" : "src/variant.h",
      "position" : null,
      "pull_request_review_id" : 348372728,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-01-26T11:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370990955",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Not sure what the point of this is, but aren't we going to switch to c++17 soon anyway? In that case we could just replace it once with the std::variant instead of first wrapping it and then switching it around in the wrapper.",
      "created_at" : "2020-01-31T08:55:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#issuecomment-580644056",
      "id" : 580644056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17953",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDY0NDA1Ng==",
      "updated_at" : "2020-01-31T08:55:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580644056",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Not sure what the point of this is, but aren't we going to switch to c++17 soon anyway? In that case we could just replace it once with the std::variant instead of first wrapping it and then switching it around in the wrapper.\r\n\r\nThe point is to lay the ground by not depending directly on boost everywhere, and also making it more obvious when `get` and `get_if` is used.\r\nthat way the actual removal of boost::variant is just 2-3 lines in this file.\r\n\r\nI think that's the same goal that `fs.h` and `optional.h` service.",
      "created_at" : "2020-01-31T12:29:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#issuecomment-580714576",
      "id" : 580714576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17953",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDcxNDU3Ng==",
      "updated_at" : "2020-01-31T12:29:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580714576",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r382943902"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382943902"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Alphabetical order of includes?",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-02-22T21:47:04Z",
      "diff_hunk" : "@@ -7,6 +7,7 @@\n \n #include <node/transaction.h>\n #include <outputtype.h>\n+#include <variant.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r382943902",
      "id" : 382943902,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0MzkwMg==",
      "original_commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "original_position" : 4,
      "path" : "src/rpc/util.h",
      "position" : 4,
      "pull_request_review_id" : 363052561,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-02-22T21:51:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382943902",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r382943946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382943946"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "2020?",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-02-22T21:47:54Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r382943946",
      "id" : 382943946,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0Mzk0Ng==",
      "original_commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "original_position" : 1,
      "path" : "src/variant.h",
      "position" : 1,
      "pull_request_review_id" : 363052561,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-02-22T21:51:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382943946",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r382944149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382944149"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Alphabetical order of includes?",
      "commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "created_at" : "2020-02-22T21:50:59Z",
      "diff_hunk" : "@@ -0,0 +1,153 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VARIANT_H\n+#define BITCOIN_VARIANT_H\n+\n+#include <utility>\n+#include <type_traits>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#discussion_r382944149",
      "id" : 382944149,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk0NDE0OQ==",
      "original_commit_id" : "86870ff053f58f9f0a3ca4ca7ba648c6b1572f49",
      "original_position" : 9,
      "path" : "src/variant.h",
      "position" : 9,
      "pull_request_review_id" : 363052561,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17953",
      "updated_at" : "2020-02-22T21:51:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382944149",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2020-02-25T11:18:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#issuecomment-590817246",
      "id" : 590817246,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17953",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MDgxNzI0Ng==",
      "updated_at" : "2020-02-25T11:18:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590817246",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Checking in on the value of going forward with this since C++17 is ~5 months away and there is still some work to be done to get this merged (rebase).",
      "created_at" : "2020-05-02T01:06:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#issuecomment-622646496",
      "id" : 622646496,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17953",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyMjY0NjQ5Ng==",
      "updated_at" : "2020-05-02T01:06:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622646496",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/755825?v=4",
         "events_url" : "https://api.github.com/users/adamjonas/events{/privacy}",
         "followers_url" : "https://api.github.com/users/adamjonas/followers",
         "following_url" : "https://api.github.com/users/adamjonas/following{/other_user}",
         "gists_url" : "https://api.github.com/users/adamjonas/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/adamjonas",
         "id" : 755825,
         "login" : "adamjonas",
         "node_id" : "MDQ6VXNlcjc1NTgyNQ==",
         "organizations_url" : "https://api.github.com/users/adamjonas/orgs",
         "received_events_url" : "https://api.github.com/users/adamjonas/received_events",
         "repos_url" : "https://api.github.com/users/adamjonas/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/adamjonas/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/adamjonas"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Checking in on the value of going forward with this since C++17 is ~5 months away and there is still some work to be done to get this merged (rebase).\r\n\r\nI guess other reviewers have to weight in, but I'm happy with the approach here and would re-ack if rebased. I think this PR still makes sense with even an upcoming transition to std::variant, because it brings existing variant code into alignment with the std::variant API so fewer changes to this code are needed later, even though some temporary util code is added now",
      "created_at" : "2020-05-13T20:48:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#issuecomment-628237762",
      "id" : 628237762,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17953",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyODIzNzc2Mg==",
      "updated_at" : "2020-05-13T20:48:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628237762",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  it brings existing variant code into alignment with the std::variant API\r\n\r\nIt does not. The boost::variant and std::variant APIs are not identical. The API variant that is introduced in this pull is identical to *neither* of the \"official\" ones. So if this is merged, we will end up with three APIs to keep in mind and maintain. I just don't see the value of spending time on review when the changes here can be done (in theory) with a trivial scripted diff. See https://github.com/MarcoFalke/bitcoin-core/pull/new/2005-StdVariantScriptedDiff\r\n\r\nThe changes here are already complicated and they even miss the most complicated part (boost visitor).\r\n\r\nFeel free to disagree, but going forward, I am hoping to see something like #18863 merged for 0.21, so that the diff in my branch is reduced for 0.22.\r\n\r\n\r\n",
      "created_at" : "2020-05-13T22:07:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#issuecomment-628270829",
      "id" : 628270829,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17953",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyODI3MDgyOQ==",
      "updated_at" : "2020-05-13T22:07:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628270829",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "To compare the two branches:\r\n\r\n* `2005-StdVariantScriptedDiff`:  107 additions and 127 deletions (removes boost completely in one go)\r\n* `2020-01-variant`: Adds a file with 155 lines + other changes (is only the first step to remove boost, needs follow-ups and eternal maintenance)",
      "created_at" : "2020-05-13T22:13:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#issuecomment-628273356",
      "id" : 628273356,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17953",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyODI3MzM1Ng==",
      "updated_at" : "2020-05-13T22:13:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628273356",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "That all makes sense. So it sounds like even though this PR has some merits, it conflicts with better alternatives and may not be worth effort to review and rebase now and update for future changes later.",
      "created_at" : "2020-05-13T22:24:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17953#issuecomment-628277352",
      "id" : 628277352,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17953",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYyODI3NzM1Mg==",
      "updated_at" : "2020-05-13T22:24:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628277352",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
