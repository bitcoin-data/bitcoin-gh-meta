[
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-01-17T22:54:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-575826218",
      "id" : 575826218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTgyNjIxOA==",
      "updated_at" : "2020-01-17T22:54:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575826218",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18601 (wallet: Refactor WalletRescanReserver to use wallet reference by promag)\n* #18600 ([wallet] Track conflicted transactions removed from mempool and fix UI notifications by ariard)\n* #18531 (rpc: Assert that RPCArg names are equal to CRPCCommand ones by MarcoFalke)\n* #16224 (gui: Bilingual GUI error messages by hebasto)\n* #9381 (Remove CWalletTx merging logic from AddToWallet by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-01-18T00:58:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-575848948",
      "id" : 575848948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTg0ODk0OA==",
      "updated_at" : "2020-04-13T01:16:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575848948",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369209911"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369209911"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "cfc9373\r\n\r\nIt just occurs to me than this assert and the one in GetLastBlockHeight (than I introduced in 5aacc3e) are unsafe if we don't have a Chain interface from which to query block height at wallet creation (CreateWalletFromFile) but that's something to keep in mind if in the future you can run the wallet without a chain.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-21T19:52:45Z",
      "diff_hunk" : "@@ -1145,6 +1145,12 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n         assert(m_last_block_processed_height >= 0);\n         return m_last_block_processed_height;\n     };\n+    uint256 GetLastBlockHash() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet)\n+    {\n+        AssertLockHeld(cs_wallet);\n+        assert(m_last_block_processed_height >= 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369209911",
      "id" : 369209911,
      "line" : 1206,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIwOTkxMQ==",
      "original_commit_id" : "cfc9373305eed32cd27eb436b555b06bc470dcbf",
      "original_line" : 1206,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 16,
      "pull_request_review_id" : 346148268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369209911",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369216493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369216493"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "cfc9373\r\n\r\nAs noted in commit, we may have asynchronicity between node and wallet w.r.t block processing. So returned block time may not be the one of last block height. To avoid this we may cache block time to fetch it when needed with `GetLastBlockTime`. It would also remove some `getBlockTime` (but not all last time I looked on).",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-21T20:06:18Z",
      "diff_hunk" : "@@ -330,13 +330,9 @@ class WalletImpl : public Wallet\n         if (mi == m_wallet->mapWallet.end()) {\n             return false;\n         }\n-        if (Optional<int> height = locked_chain->getHeight()) {\n-            num_blocks = *height;\n-            block_time = locked_chain->getBlockTime(*height);\n-        } else {\n-            num_blocks = -1;\n-            block_time = -1;\n-        }\n+        num_blocks = m_wallet->GetLastBlockHeight();\n+        block_time = -1;\n+        m_wallet->chain().findBlock(m_wallet->GetLastBlockHash(), nullptr, &block_time);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369216493",
      "id" : 369216493,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIxNjQ5Mw==",
      "original_commit_id" : "cfc9373305eed32cd27eb436b555b06bc470dcbf",
      "original_line" : 334,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/interfaces/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 346148268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369216493",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369228377"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369228377"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "e399fb4\r\n\r\nPreviously, `getBlockHeight` would have return nullopt if `merkleBlock` have been out of chain. With this change, a height can be returned and ancestry asserted while node and walle tip being unsynchronized, so `merkleBlock` have been reorged out. IMO that's fine if rpc caller is aware than processing have been done with best-wallet-knowledge. ",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-21T20:33:36Z",
      "diff_hunk" : "@@ -359,8 +359,9 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n     }\n \n     auto locked_chain = pwallet->chain().lock();\n-    Optional<int> height = locked_chain->getBlockHeight(merkleBlock.header.GetHash());\n-    if (height == nullopt) {\n+    LOCK(pwallet->cs_wallet);\n+    int height;\n+    if (!pwallet->chain().findAncestor(pwallet->GetLastBlockHash(), merkleBlock.header.GetHash(), &height)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369228377",
      "id" : 369228377,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIyODM3Nw==",
      "original_commit_id" : "e399fb49e81416267bb708075ab0a377cacf969d",
      "original_line" : 364,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 346148268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369228377",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369229559"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369229559"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "673e0b6\r\n\r\nAnother candidate for `GetLastBlockTime`",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-21T20:36:17Z",
      "diff_hunk" : "@@ -789,9 +788,10 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     // produce output\n     file << strprintf(\"# Wallet dump created by Bitcoin %s\\n\", CLIENT_BUILD);\n     file << strprintf(\"# * Created on %s\\n\", FormatISO8601DateTime(GetTime()));\n-    const Optional<int> tip_height = locked_chain->getHeight();\n-    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", tip_height.get_value_or(-1), tip_height ? locked_chain->getBlockHash(*tip_height).ToString() : \"(missing block hash)\");\n-    file << strprintf(\"#   mined on %s\\n\", tip_height ? FormatISO8601DateTime(locked_chain->getBlockTime(*tip_height)) : \"(missing block time)\");\n+    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", pwallet->GetLastBlockHeight(), pwallet->GetLastBlockHash().ToString());\n+    int64_t block_time = 0;\n+    pwallet->chain().findBlock(pwallet->GetLastBlockHash(), nullptr, &block_time);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369229559",
      "id" : 369229559,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIyOTU1OQ==",
      "original_commit_id" : "673e0b6e7c9f671096f4056f9db69ec43d5b4a3b",
      "original_line" : 792,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 346148268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369229559",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369234155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369234155"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "673e0b6\r\n\r\nI'm not sure about the commit message, IMO it's less accurate but on the whole make the rescan protection better by starting farther in the past. Anyway, being based on wallet tip or node tip should be safe given the range of TIMESTAMP_WINDOW",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-21T20:46:33Z",
      "diff_hunk" : "@@ -564,8 +564,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n-        nTimeBegin = tip_height ? locked_chain->getBlockTime(*tip_height) : 0;\n+        pwallet->chain().findBlock(pwallet->GetLastBlockHash(), nullptr, &nTimeBegin);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369234155",
      "id" : 369234155,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIzNDE1NQ==",
      "original_commit_id" : "673e0b6e7c9f671096f4056f9db69ec43d5b4a3b",
      "original_line" : 567,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 346148268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369234155",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369238043"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369238043"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "1f4b604\r\n\r\nIf #17443 gets first + `GetLastBlockTime`, you may avoid to call `findBlock` here.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-21T20:55:30Z",
      "diff_hunk" : "@@ -1364,20 +1364,13 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n         EnsureWalletIsUnlocked(pwallet);\n \n         // Verify all timestamps are present before importing any keys.\n-        const Optional<int> tip_height = locked_chain->getHeight();\n-        now = tip_height ? locked_chain->getBlockMedianTimePast(*tip_height) : 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369238043",
      "id" : 369238043,
      "line" : 1382,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIzODA0Mw==",
      "original_commit_id" : "1f4b60471730fb5961096fef286c1bd6ec2538b8",
      "original_line" : 1382,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 63,
      "pull_request_review_id" : 346148268,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369238043",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369262300"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369262300"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> [cfc9373](https://github.com/bitcoin/bitcoin/commit/cfc9373305eed32cd27eb436b555b06bc470dcbf)\r\n> \r\n> As noted in commit, we may have asynchronicity between node and wallet w.r.t block processing. So returned block time may not be the one of last block height. To avoid this we may cache block time to fetch it when needed with `GetLastBlockTime`. It would also remove some `getBlockTime` (but not all last time I looked on).\r\n\r\nJust to be clear, height and time here should be in sync due to cs_wallet being held above. Could still cache the time though. Commit description is saying how the GUI display should be more up to date after this commit, because the transaction data and num blocks value will be in sync, instead of a higher num blocks being returned with older transaction data",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-21T21:51:22Z",
      "diff_hunk" : "@@ -330,13 +330,9 @@ class WalletImpl : public Wallet\n         if (mi == m_wallet->mapWallet.end()) {\n             return false;\n         }\n-        if (Optional<int> height = locked_chain->getHeight()) {\n-            num_blocks = *height;\n-            block_time = locked_chain->getBlockTime(*height);\n-        } else {\n-            num_blocks = -1;\n-            block_time = -1;\n-        }\n+        num_blocks = m_wallet->GetLastBlockHeight();\n+        block_time = -1;\n+        m_wallet->chain().findBlock(m_wallet->GetLastBlockHash(), nullptr, &block_time);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369262300",
      "id" : 369262300,
      "in_reply_to_id" : 369216493,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2MjMwMA==",
      "original_commit_id" : "cfc9373305eed32cd27eb436b555b06bc470dcbf",
      "original_line" : 334,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/interfaces/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 346216892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369262300",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369262347"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369262347"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> [cfc9373](https://github.com/bitcoin/bitcoin/commit/cfc9373305eed32cd27eb436b555b06bc470dcbf)\r\n> \r\n> It just occurs to me than this assert and the one in GetLastBlockHeight (than I introduced in [5aacc3e](https://github.com/bitcoin/bitcoin/commit/5aacc3eff15b9b5bdc951f1e274f00d581f63bce)) are unsafe if we don't have a Chain interface from which to query block height at wallet creation (CreateWalletFromFile) but that's something to keep in mind if in the future you can run the wallet without a chain.\r\n\r\nYes, I think these cases would only be hit when running wallet code offline with the `bitcoin-wallet` tool or something similar. But if we add more offline features more code will have to change to be flexible about missing data",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-21T21:51:28Z",
      "diff_hunk" : "@@ -1145,6 +1145,12 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n         assert(m_last_block_processed_height >= 0);\n         return m_last_block_processed_height;\n     };\n+    uint256 GetLastBlockHash() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet)\n+    {\n+        AssertLockHeld(cs_wallet);\n+        assert(m_last_block_processed_height >= 0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369262347",
      "id" : 369262347,
      "in_reply_to_id" : 369209911,
      "line" : 1206,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2MjM0Nw==",
      "original_commit_id" : "cfc9373305eed32cd27eb436b555b06bc470dcbf",
      "original_line" : 1206,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 16,
      "pull_request_review_id" : 346216892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369262347",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369262624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369262624"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369228377\r\n\r\n> [e399fb4](https://github.com/bitcoin/bitcoin/commit/e399fb49e81416267bb708075ab0a377cacf969d)\r\n> \r\n> Previously, `getBlockHeight` would have return nullopt if `merkleBlock` have been out of chain. With this change, a height can be returned and ancestry asserted while node and walle tip being unsynchronized, so `merkleBlock` have been reorged out. IMO that's fine if rpc caller is aware than processing have been done with best-wallet-knowledge.\r\n\r\nThanks, will add these details to the commit description. I think \"best-wallet-knowledge\" can really be the only safe assumption for calling wallet rpcs if we're going to let the wallet act asynchronously from the node",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-21T21:52:05Z",
      "diff_hunk" : "@@ -359,8 +359,9 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n     }\n \n     auto locked_chain = pwallet->chain().lock();\n-    Optional<int> height = locked_chain->getBlockHeight(merkleBlock.header.GetHash());\n-    if (height == nullopt) {\n+    LOCK(pwallet->cs_wallet);\n+    int height;\n+    if (!pwallet->chain().findAncestor(pwallet->GetLastBlockHash(), merkleBlock.header.GetHash(), &height)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369262624",
      "id" : 369262624,
      "in_reply_to_id" : 369228377,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2MjYyNA==",
      "original_commit_id" : "e399fb49e81416267bb708075ab0a377cacf969d",
      "original_line" : 364,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 346216892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369262624",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369278492"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369278492"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> [673e0b6](https://github.com/bitcoin/bitcoin/commit/673e0b6e7c9f671096f4056f9db69ec43d5b4a3b)\r\n> \r\n> I'm not sure about the commit message, IMO it's less accurate but on the whole make the rescan protection better by starting farther in the past. Anyway, being based on wallet tip or node tip should be safe given the range of TIMESTAMP_WINDOW\r\n\r\nHmm, I'm not sure when it would be less accurate. Are you thinking of a case?",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-21T22:30:03Z",
      "diff_hunk" : "@@ -564,8 +564,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n-        nTimeBegin = tip_height ? locked_chain->getBlockTime(*tip_height) : 0;\n+        pwallet->chain().findBlock(pwallet->GetLastBlockHash(), nullptr, &nTimeBegin);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369278492",
      "id" : 369278492,
      "in_reply_to_id" : 369234155,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3ODQ5Mg==",
      "original_commit_id" : "673e0b6e7c9f671096f4056f9db69ec43d5b4a3b",
      "original_line" : 567,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 346216892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369278492",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Added 3 commits aeba8afaf5d12fd7b2552616f817712d4fc5062e -> 60e6595f5cfd266c14c48994b0bb4afb5bf7fcb3 ([`pr/unlock.2`](https://github.com/ryanofsky/bitcoin/commits/pr/unlock.2) -> [`pr/unlock.3`](https://github.com/ryanofsky/bitcoin/commits/pr/unlock.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/unlock.2...pr/unlock.3)) and removed PR draft status. \r\n\r\nI think this is basically done. Combined with #17443 it should remove all calls to `interfaces::Chain::Lock` methods after wallet loading (#15719 should clean up loading). I'm hoping this PR and #17443 can be merged before #16426 so #16426 can be a little smaller and change wallet behavior less.",
      "created_at" : "2020-01-22T22:32:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-577417495",
      "id" : 577417495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NzQxNzQ5NQ==",
      "updated_at" : "2020-01-22T22:32:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577417495",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r372726164"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372726164"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Even further than cs_wallet, we are still holding cs_main there through the chain lock. When we're going to remove locked_chain we may have asynchronicity due to to height being based on BlockConnected locked by cs_wallet and findBlock locked by cs_main ?",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-30T01:57:52Z",
      "diff_hunk" : "@@ -330,13 +330,9 @@ class WalletImpl : public Wallet\n         if (mi == m_wallet->mapWallet.end()) {\n             return false;\n         }\n-        if (Optional<int> height = locked_chain->getHeight()) {\n-            num_blocks = *height;\n-            block_time = locked_chain->getBlockTime(*height);\n-        } else {\n-            num_blocks = -1;\n-            block_time = -1;\n-        }\n+        num_blocks = m_wallet->GetLastBlockHeight();\n+        block_time = -1;\n+        m_wallet->chain().findBlock(m_wallet->GetLastBlockHash(), nullptr, &block_time);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r372726164",
      "id" : 372726164,
      "in_reply_to_id" : 369216493,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyNjE2NA==",
      "original_commit_id" : "cfc9373305eed32cd27eb436b555b06bc470dcbf",
      "original_line" : 334,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/interfaces/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 350542553,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372726164",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r372727093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372727093"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369234155\r\n\r\nI think I meaned because we rely now on wallet last block hash instead of main tip and we may be late from one block, so in my opinion we are _less_ accurate from one block but we agree on rescan being safer. Nit interpretation, doesn't matter.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-30T02:02:22Z",
      "diff_hunk" : "@@ -564,8 +564,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n-        nTimeBegin = tip_height ? locked_chain->getBlockTime(*tip_height) : 0;\n+        pwallet->chain().findBlock(pwallet->GetLastBlockHash(), nullptr, &nTimeBegin);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r372727093",
      "id" : 372727093,
      "in_reply_to_id" : 369234155,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyNzA5Mw==",
      "original_commit_id" : "673e0b6e7c9f671096f4056f9db69ec43d5b4a3b",
      "original_line" : 567,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 350543701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372727093",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks Russ, will review new changes soon.\r\n\r\n> I think it's probably a good idea. It would use some more memory though, and it's unclear if it the change would simplify this PR or not overlap much. I think it's probably something to try out separately.\r\n\r\nI've a branch doing it, I can try to rebase it on top of this one and squeeze a last one before #16426. ",
      "created_at" : "2020-01-30T02:06:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-580050909",
      "id" : 580050909,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDA1MDkwOQ==",
      "updated_at" : "2020-01-30T02:06:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580050909",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2020-01-30T06:07:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-580098152",
      "id" : 580098152,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDA5ODE1Mg==",
      "updated_at" : "2020-01-30T06:07:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580098152",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r373682174"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373682174"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369216493\r\n\r\n(Relevant commit is cfc9373305eed32cd27eb436b555b06bc470dcbf)\r\n\r\n> Even further than cs_wallet, we are still holding cs_main there through the chain lock. When we're going to remove locked_chain we may have asynchronicity due to to height being based on BlockConnected locked by cs_wallet and findBlock locked by cs_main ?\r\n\r\nThe GUI is asynchronous by design. It just needs to display internally consistent information within a transaction, and be able to determine if the information is fresh or out of date. The `num_blocks` height here returned to gui is used for that freshness check, so the new value set here should be better than the previous value for that. More ideally, though `num_blocks` will be replaced by a hash, which #17993 starts to do",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-31T20:58:03Z",
      "diff_hunk" : "@@ -330,13 +330,9 @@ class WalletImpl : public Wallet\n         if (mi == m_wallet->mapWallet.end()) {\n             return false;\n         }\n-        if (Optional<int> height = locked_chain->getHeight()) {\n-            num_blocks = *height;\n-            block_time = locked_chain->getBlockTime(*height);\n-        } else {\n-            num_blocks = -1;\n-            block_time = -1;\n-        }\n+        num_blocks = m_wallet->GetLastBlockHeight();\n+        block_time = -1;\n+        m_wallet->chain().findBlock(m_wallet->GetLastBlockHash(), nullptr, &block_time);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r373682174",
      "id" : 373682174,
      "in_reply_to_id" : 369216493,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MjE3NA==",
      "original_commit_id" : "cfc9373305eed32cd27eb436b555b06bc470dcbf",
      "original_line" : 334,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/interfaces/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 351773079,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373682174",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r373695152"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373695152"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r369234155\r\n\r\n> I think I meaned because we rely now on wallet last block hash instead of main tip and we may be late from one block, so in my opinion we are _less_ accurate from one block but we agree on rescan being safer. Nit interpretation, doesn't matter.\r\n\r\nI think in the case you are talking about the block height/hash/time values in the backup are now more accurate than before because cs_wallet is locked already. So the backup information make will be consistent with the wallet block tip, not the node block tip, in any cases where they are different",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-01-31T21:32:45Z",
      "diff_hunk" : "@@ -564,8 +564,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n-        nTimeBegin = tip_height ? locked_chain->getBlockTime(*tip_height) : 0;\n+        pwallet->chain().findBlock(pwallet->GetLastBlockHash(), nullptr, &nTimeBegin);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r373695152",
      "id" : 373695152,
      "in_reply_to_id" : 369234155,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5NTE1Mg==",
      "original_commit_id" : "673e0b6e7c9f671096f4056f9db69ec43d5b4a3b",
      "original_line" : 567,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : null,
      "pull_request_review_id" : 351773079,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373695152",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377880523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377880523"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think `num_blocks` is even used. There's only one place that this interface function is called and it doesn't use the result. Can you just remove it?",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-11T20:29:58Z",
      "diff_hunk" : "@@ -389,7 +385,7 @@ class WalletImpl : public Wallet\n             return false;\n         }\n         balances = getBalances();\n-        num_blocks = locked_chain->getHeight().get_value_or(-1);\n+        num_blocks = m_wallet->GetLastBlockHeight();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377880523",
      "id" : 377880523,
      "line" : 376,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg4MDUyMw==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_line" : 376,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/interfaces/wallet.cpp",
      "position" : 44,
      "pull_request_review_id" : 356971621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377880523",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377892009"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377892009"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree that caching the last block time would make some of these commits easier.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-11T20:53:53Z",
      "diff_hunk" : "@@ -1364,20 +1364,13 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n         EnsureWalletIsUnlocked(pwallet);\n \n         // Verify all timestamps are present before importing any keys.\n-        const Optional<int> tip_height = locked_chain->getHeight();\n-        now = tip_height ? locked_chain->getBlockMedianTimePast(*tip_height) : 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377892009",
      "id" : 377892009,
      "in_reply_to_id" : 369238043,
      "line" : 1382,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg5MjAwOQ==",
      "original_commit_id" : "1f4b60471730fb5961096fef286c1bd6ec2538b8",
      "original_line" : 1382,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 63,
      "pull_request_review_id" : 356971621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377892009",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377949561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377949561"
         }
      },
      "author_association" : "MEMBER",
      "body" : "'specified blocks' is a bit vague. Can you be more precise about what `block_hash` `min_height` and `max_height` mean?",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-11T22:56:35Z",
      "diff_hunk" : "@@ -145,6 +164,9 @@ class Chain\n     //! the specified block hash are verified.\n     virtual double guessVerificationProgress(const uint256& block_hash) = 0;\n \n+    //! Return true if data is available for the specified blocks.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377949561",
      "id" : 377949561,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0OTU2MQ==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_line" : 167,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 356971621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377949561",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377952195"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377952195"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`GetLastBlockHeight()` can't return a `tip_height` that's < 0, so I think you can just remove `|| tip_height < 0 `",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-11T23:03:36Z",
      "diff_hunk" : "@@ -3546,22 +3545,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n \n     int start_height = 0;\n-    uint256 start_block, stop_block;\n+    Optional<int> stop_height;\n+    uint256 start_block;\n     {\n         auto locked_chain = pwallet->chain().lock();\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        LOCK(pwallet->cs_wallet);\n+        int tip_height = pwallet->GetLastBlockHeight();\n \n         if (!request.params[0].isNull()) {\n             start_height = request.params[0].get_int();\n-            if (start_height < 0 || !tip_height || start_height > *tip_height) {\n+            if (start_height < 0 || tip_height < 0 || start_height > tip_height) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377952195",
      "id" : 377952195,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1MjE5NQ==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_line" : 3557,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 356971621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377952195",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377952847"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377952847"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Do you need to hold the wallet lock for this entire block? Does it make sense to call:\r\n\r\n```\r\nWITH_LOCK(pwallet->cs_wallet, pwallet->GetLastBlockHeight());\r\n```",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-11T23:05:16Z",
      "diff_hunk" : "@@ -3546,22 +3545,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n \n     int start_height = 0;\n-    uint256 start_block, stop_block;\n+    Optional<int> stop_height;\n+    uint256 start_block;\n     {\n         auto locked_chain = pwallet->chain().lock();\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        LOCK(pwallet->cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377952847",
      "id" : 377952847,
      "line" : 3543,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1Mjg0Nw==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_line" : 3543,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 71,
      "pull_request_review_id" : 356971621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377952847",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377953378"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377953378"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Again, I think this is always true, so you can remove this conditional.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-11T23:06:43Z",
      "diff_hunk" : "@@ -3570,25 +3570,17 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n \n         // We can't rescan beyond non-pruned blocks, stop and throw an error\n-        if (locked_chain->findPruned(start_height, stop_height)) {\n+        if (!pwallet->chain().hasBlocks(pwallet->GetLastBlockHash(), start_height, stop_height)) {\n             throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n         }\n \n-        if (tip_height) {\n-            start_block = locked_chain->getBlockHash(start_height);\n-            // If called with a stop_height, set the stop_height here to\n-            // trigger a rescan to that height.\n-            // If called without a stop height, leave stop_height as null here\n-            // so rescan continues to the tip (even if the tip advances during\n-            // rescan).\n-            if (stop_height) {\n-                stop_block = locked_chain->getBlockHash(*stop_height);\n-            }\n+        if (tip_height >= 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377953378",
      "id" : 377953378,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1MzM3OA==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_line" : 3577,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 356971621,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377953378",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513140"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377949561\r\n\r\n> 'specified blocks' is a bit vague. Can you be more precise about what `block_hash` `min_height` and `max_height` mean?\r\n\r\nAdded description, also made min_height not `Optional` since nullopt was equivalent to 0",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-12T21:08:31Z",
      "diff_hunk" : "@@ -145,6 +164,9 @@ class Chain\n     //! the specified block hash are verified.\n     virtual double guessVerificationProgress(const uint256& block_hash) = 0;\n \n+    //! Return true if data is available for the specified blocks.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513140",
      "id" : 378513140,
      "in_reply_to_id" : 377949561,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxMzE0MA==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_line" : 167,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 357788103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513140",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513213"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513213"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377880523\r\n\r\n> I don't think `num_blocks` is even used. There's only one place that this interface function is called and it doesn't use the result. Can you just remove it?\r\n\r\nGood catch, and thanks for bringing it up, it is fixed in #18123",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-12T21:08:39Z",
      "diff_hunk" : "@@ -389,7 +385,7 @@ class WalletImpl : public Wallet\n             return false;\n         }\n         balances = getBalances();\n-        num_blocks = locked_chain->getHeight().get_value_or(-1);\n+        num_blocks = m_wallet->GetLastBlockHeight();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513213",
      "id" : 378513213,
      "in_reply_to_id" : 377880523,
      "line" : 376,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxMzIxMw==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_line" : 376,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/interfaces/wallet.cpp",
      "position" : 44,
      "pull_request_review_id" : 357788103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513213",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513330"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513330"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377952847\r\n\r\n> Do you need to hold the wallet lock for this entire block? Does it make sense to call:\r\n> \r\n> ```\r\n> WITH_LOCK(pwallet->cs_wallet, pwallet->GetLastBlockHeight());\r\n> ```\r\n\r\nThe lock is also needed for the GetLastBlockHash call in the `findAncestorByHeight` line below. This could do something cleverer to reduce locking, and I'm happy to make changes if there are suggestions, but moving the lock seemed like simplest change that would work.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-12T21:08:55Z",
      "diff_hunk" : "@@ -3546,22 +3545,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n \n     int start_height = 0;\n-    uint256 start_block, stop_block;\n+    Optional<int> stop_height;\n+    uint256 start_block;\n     {\n         auto locked_chain = pwallet->chain().lock();\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        LOCK(pwallet->cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513330",
      "id" : 378513330,
      "in_reply_to_id" : 377952847,
      "line" : 3543,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxMzMzMA==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_line" : 3543,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 71,
      "pull_request_review_id" : 357788103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513330",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513684"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513684"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377952195\r\n\r\n> `GetLastBlockHeight()` can't return a `tip_height` that's < 0, so I think you can just remove `|| tip_height < 0 `\r\n\r\nThanks updated",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-12T21:09:39Z",
      "diff_hunk" : "@@ -3546,22 +3545,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n \n     int start_height = 0;\n-    uint256 start_block, stop_block;\n+    Optional<int> stop_height;\n+    uint256 start_block;\n     {\n         auto locked_chain = pwallet->chain().lock();\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        LOCK(pwallet->cs_wallet);\n+        int tip_height = pwallet->GetLastBlockHeight();\n \n         if (!request.params[0].isNull()) {\n             start_height = request.params[0].get_int();\n-            if (start_height < 0 || !tip_height || start_height > *tip_height) {\n+            if (start_height < 0 || tip_height < 0 || start_height > tip_height) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513684",
      "id" : 378513684,
      "in_reply_to_id" : 377952195,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxMzY4NA==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_line" : 3557,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 357788103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513684",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513892"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513892"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r377953378\r\n\r\n> Again, I think this is always true, so you can remove this conditional.\r\n\r\nThanks, removed",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-12T21:10:09Z",
      "diff_hunk" : "@@ -3570,25 +3570,17 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n \n         // We can't rescan beyond non-pruned blocks, stop and throw an error\n-        if (locked_chain->findPruned(start_height, stop_height)) {\n+        if (!pwallet->chain().hasBlocks(pwallet->GetLastBlockHash(), start_height, stop_height)) {\n             throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n         }\n \n-        if (tip_height) {\n-            start_block = locked_chain->getBlockHash(start_height);\n-            // If called with a stop_height, set the stop_height here to\n-            // trigger a rescan to that height.\n-            // If called without a stop height, leave stop_height as null here\n-            // so rescan continues to the tip (even if the tip advances during\n-            // rescan).\n-            if (stop_height) {\n-                stop_block = locked_chain->getBlockHash(*stop_height);\n-            }\n+        if (tip_height >= 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r378513892",
      "id" : 378513892,
      "in_reply_to_id" : 377953378,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxMzg5Mg==",
      "original_commit_id" : "d2f92a9f759d41b150fa702c8f83d1b05b11c943",
      "original_line" : 3577,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 357788103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378513892",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379042572"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379042572"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "e276b68\r\n\r\n\"If both blocks are on the same chain ancestor_height is the height of the oldest between them. Also return height of first block which may be the same than ancestor height.\"\r\n\r\nBut honestly would prefer parameterize `findFork` instead of yet-another-single use method like passing wallet tip hash to findFork (and if null, then use default chain tip).\r\n\r\nBy the way, is `findFork` still used after this change ?",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T18:32:30Z",
      "diff_hunk" : "@@ -133,12 +133,23 @@ class Chain\n         int64_t* max_time = nullptr,\n         int64_t* mtp_time = nullptr) = 0;\n \n+    //! Find ancestor of block at specified height and return its hash.\n+    virtual uint256 findAncestorByHeight(const uint256& block_hash, int ancestor_height) = 0;\n+\n     //! Return whether block descends from a specified ancestor, and\n     //! optionally return height of the ancestor.\n     virtual bool findAncestorByHash(const uint256& block_hash,\n         const uint256& ancestor_hash,\n         int* height = 0) = 0;\n \n+    //! Find most recent common ancestor between two blocks and optionally\n+    //! return its hash and/or height. Also return height of first block. Return\n+    //! nullopt if either block is unknown or there is no common ancestor.\n+    virtual Optional<int> findCommonAncestor(const uint256& block_hash1,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379042572",
      "id" : 379042572,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0MjU3Mg==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 148,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379042572",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379069325"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379069325"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "e276b68\r\n\r\nIf I understand issue linked in the commit message, let's say you call listsinceblock(genesis_hash, 100) with current_tip == 1100 (shouldn't matter referring to `chain_tip` or `wallet_tip`).\r\nTarget_confirm = 1100 + 1 - 100 = 1001.\r\nLastblock = blockhash(1001)\r\n\r\nNow while calling again listsinceblock(lastblock_hash, 100) with current_tip = 1100\r\ndepth = 1100 + 1 - 1001 = 100\r\nSo only transactions with depth < 100 are returned and not the ones with 100-conf as expected by `target_confirmations` (i.e transactions for block 1101, the \"100th\" from the main chain).\r\n\r\nIs this the behavior you're fixing by returning now the ancestor hash? Seems to me documentation is already marching code \"So you would generally use a target_confirmations of say 6, you will be continually re-notified of transactions until they've reached 6 confirmations plus any new ones\" but not sure if this what we really want..",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T19:24:13Z",
      "diff_hunk" : "@@ -1638,8 +1638,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n         --*altheight;\n     }\n \n-    int last_height = tip_height ? *tip_height + 1 - target_confirms : -1;\n-    uint256 lastblock = last_height >= 0 ? locked_chain->getBlockHash(last_height) : uint256();\n+    uint256 lastblock = pwallet->chain().findAncestorByHeight(pwallet->GetLastBlockHash(), pwallet->GetLastBlockHeight() + 1 - target_confirms);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379069325",
      "id" : 379069325,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2OTMyNQ==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 1641,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379069325",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379070527"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379070527"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "e276b68\r\n\r\nHeight of genesis block is 0 ? If so depth is -1 which I think isn't the behavior expected (already there before ?)",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T19:26:13Z",
      "diff_hunk" : "@@ -1605,8 +1606,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n \n     bool include_removed = (request.params[3].isNull() || request.params[3].get_bool());\n \n-    const Optional<int> tip_height = locked_chain->getHeight();\n-    int depth = tip_height && height ? (1 + *tip_height - *height) : -1;\n+    int depth = height ? pwallet->GetLastBlockHeight() + 1 - *height : -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379070527",
      "id" : 379070527,
      "line" : 1605,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3MDUyNw==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 1605,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 37,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379070527",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379075632"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379075632"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "e276b68\r\n\r\nWhy not modify `getBlockHash` a bit to do a `LookupBlockIndex` instead of querying `ChainActive()` ? Every block in ChainActive needs a BlockIndex so second should be a superset and it shouldn't be an issue.\r\n\r\nIf caller care about block being in the active chain, it should call `findFork` just after.\r\n\r\n(Long-term, IMO wallet shouldn't have to deal with fork and just have a _linear view_ of the chain, only when `BlockDisconnected` is called, state would be rewind. It's should be caller responsibility to enforce tips consistency between it's different components)",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T19:35:51Z",
      "diff_hunk" : "@@ -133,12 +133,23 @@ class Chain\n         int64_t* max_time = nullptr,\n         int64_t* mtp_time = nullptr) = 0;\n \n+    //! Find ancestor of block at specified height and return its hash.\n+    virtual uint256 findAncestorByHeight(const uint256& block_hash, int ancestor_height) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379075632",
      "id" : 379075632,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NTYzMg==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 137,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379075632",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379123410"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379123410"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "6067b74\r\n\r\nI think you can move the existing `findFirstBlockWithTimeAndHeight` method of `Chain::Lock` and just avoid adding a new one, it still returns both block height & hash ",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T21:17:37Z",
      "diff_hunk" : "@@ -133,6 +133,13 @@ class Chain\n         int64_t* max_time = nullptr,\n         int64_t* mtp_time = nullptr) = 0;\n \n+    //! Return hash of first block in the chain with timestamp >= the given time\n+    //! and height >= than the given height, or nullopt if there is no block\n+    //! with a high enough timestamp and height. Also return the block height as\n+    //! an optional output parameter (to avoid the cost of a second lookup in\n+    //! case this information is needed.)\n+    virtual Optional<uint256> findFirstBlockWithTimeAndHeight(int64_t min_time, int min_height, int* height = nullptr) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379123410",
      "id" : 379123410,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyMzQxMA==",
      "original_commit_id" : "6067b74431169d54e2c3fd9141021f8caaf04461",
      "original_line" : 141,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379123410",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379133763"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379133763"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "6067b74\r\n\r\nJust to be sure but is `FindEarliestAtLeast` working as intended ? By passing `min_height=0` std::lower_bound is returning an iterator to the first element for which the comparison object return false, thus with the current comparison being `pBlock->GetBlockTimeMax() < blockparams.first || pBlock->nHeight < blockparams.second` it would return just after the genesis block  ?",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T21:40:19Z",
      "diff_hunk" : "@@ -259,6 +259,16 @@ class ChainImpl : public Chain\n         }\n         return true;\n     }\n+    Optional<uint256> findFirstBlockWithTimeAndHeight(int64_t min_time, int min_height, int* height = nullptr) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive().FindEarliestAtLeast(min_time, min_height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379133763",
      "id" : 379133763,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEzMzc2Mw==",
      "original_commit_id" : "6067b74431169d54e2c3fd9141021f8caaf04461",
      "original_line" : 265,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379133763",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379150008"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379150008"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "9aa4b6b\r\n\r\nI find `findAncestorByHeight` unclear, here we may have `start_height` and `GetLastBlockHash` not pointing to same block. Behavior follows method documentation but why bother asking for the hash, query in ChainActive with the provided height ?\r\n\r\nHonestly here I would prefer to stick with `getBlockHash`, behavior is more straightforward.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T22:15:44Z",
      "diff_hunk" : "@@ -3569,25 +3570,15 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n \n         // We can't rescan beyond non-pruned blocks, stop and throw an error\n-        if (locked_chain->findPruned(start_height, stop_height)) {\n+        if (!pwallet->chain().hasBlocks(pwallet->GetLastBlockHash(), start_height, stop_height)) {\n             throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n         }\n \n-        if (tip_height) {\n-            start_block = locked_chain->getBlockHash(start_height);\n-            // If called with a stop_height, set the stop_height here to\n-            // trigger a rescan to that height.\n-            // If called without a stop height, leave stop_height as null here\n-            // so rescan continues to the tip (even if the tip advances during\n-            // rescan).\n-            if (stop_height) {\n-                stop_block = locked_chain->getBlockHash(*stop_height);\n-            }\n-        }\n+        start_block = pwallet->chain().findAncestorByHeight(pwallet->GetLastBlockHash(), start_height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379150008",
      "id" : 379150008,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1MDAwOA==",
      "original_commit_id" : "9aa4b6bb6fb5f44a943cd50cb46e0d80275060ce",
      "original_line" : 3577,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379150008",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379151718"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379151718"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "9aa4b6b\r\n\r\nSame here, why `ScanForWalletTransactions` function to then add a call to get previously furnished information ? I would prefer to keep removed `getBlockHash` calls in `rescanblockchain`",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T22:19:53Z",
      "diff_hunk" : "@@ -1649,7 +1649,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n         }\n         block_height = locked_chain->getBlockHeight(block_hash);\n         progress_begin = chain().guessVerificationProgress(block_hash);\n-        progress_end = chain().guessVerificationProgress(stop_block.IsNull() ? tip_hash : stop_block);\n+        progress_end = chain().guessVerificationProgress(max_height ? chain().findAncestorByHeight(tip_hash, *max_height) : tip_hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379151718",
      "id" : 379151718,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1MTcxOA==",
      "original_commit_id" : "9aa4b6bb6fb5f44a943cd50cb46e0d80275060ce",
      "original_line" : 1652,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 358453831,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379151718",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172203"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172203"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379133763\r\n\r\n> [6067b74](https://github.com/bitcoin/bitcoin/commit/6067b74431169d54e2c3fd9141021f8caaf04461)\r\n> \r\n> Just to be sure but is `FindEarliestAtLeast` working as intended ? By passing `min_height=0` std::lower_bound is returning an iterator to the first element for which the comparison object return false, thus with the current comparison being `pBlock->GetBlockTimeMax() < blockparams.first || pBlock->nHeight < blockparams.second` it would return just after the genesis block ?\r\n\r\nIt seems right because `pBlock->nHeight < 0` will be false for the genesis block so the lambda should be false, and lower_bound should stop there, returning the genesis block. This comes from #15670, by the way.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T23:15:42Z",
      "diff_hunk" : "@@ -259,6 +259,16 @@ class ChainImpl : public Chain\n         }\n         return true;\n     }\n+    Optional<uint256> findFirstBlockWithTimeAndHeight(int64_t min_time, int min_height, int* height = nullptr) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive().FindEarliestAtLeast(min_time, min_height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172203",
      "id" : 379172203,
      "in_reply_to_id" : 379133763,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MjIwMw==",
      "original_commit_id" : "6067b74431169d54e2c3fd9141021f8caaf04461",
      "original_line" : 265,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 358619512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172203",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172305"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172305"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379123410\r\n\r\n> [6067b74](https://github.com/bitcoin/bitcoin/commit/6067b74431169d54e2c3fd9141021f8caaf04461)\r\n> \r\n> I think you can move the existing `findFirstBlockWithTimeAndHeight` method of `Chain::Lock` and just avoid adding a new one, it still returns both block height & hash\r\n\r\nI'm removing the other `findFirstBlockWithTimeAndHeight` call later in 3f1b867a096ac24073c59ecd2c660e07cfc2be50 in #15719. I didn't remove it here, because I wanted to keep this PR a little smaller and more limited in scope. I also didn't want to add an extra change for reviewers in code just that's going to be deleted later.\r\n\r\nBut I think #16426 could make the change you're suggesting. I'm pretty sure we're going to merge #16426 before #15719 so it would make sense to have there",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T23:15:56Z",
      "diff_hunk" : "@@ -133,6 +133,13 @@ class Chain\n         int64_t* max_time = nullptr,\n         int64_t* mtp_time = nullptr) = 0;\n \n+    //! Return hash of first block in the chain with timestamp >= the given time\n+    //! and height >= than the given height, or nullopt if there is no block\n+    //! with a high enough timestamp and height. Also return the block height as\n+    //! an optional output parameter (to avoid the cost of a second lookup in\n+    //! case this information is needed.)\n+    virtual Optional<uint256> findFirstBlockWithTimeAndHeight(int64_t min_time, int min_height, int* height = nullptr) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172305",
      "id" : 379172305,
      "in_reply_to_id" : 379123410,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MjMwNQ==",
      "original_commit_id" : "6067b74431169d54e2c3fd9141021f8caaf04461",
      "original_line" : 141,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 358619512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172305",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172361"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172361"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379075632\r\n\r\n> [e276b68](https://github.com/bitcoin/bitcoin/commit/e276b6821430ec2c18aba55137daf98bae770054)\r\n> \r\n> Why not modify `getBlockHash` a bit to do a `LookupBlockIndex` instead of querying `ChainActive()` ? Every block in ChainActive needs a BlockIndex so second should be a superset and it shouldn't be an issue.\r\n> \r\n> If caller care about block being in the active chain, it should call `findFork` just after.\r\n> \r\n> (Long-term, IMO wallet shouldn't have to deal with fork and just have a _linear view_ of the chain, only when `BlockDisconnected` is called, state would be rewind. It's should be caller responsibility to enforce tips consistency between it's different components)\r\n\r\nI'm removing `getBlockHash` in 3f1b867a096ac24073c59ecd2c660e07cfc2be50 from #15719.\r\n\r\nI think of `findAncestorByHeight` as a more robust replacement for `getBlockHash` that returns the same thing reliably regardless of the chain tip. `findAncestorByHeight` is used in a few places. It's possible these could all go away in the future with your rescan branch, and by replacing `listsinceblock` and `GetKeyBirthTimes` code. The ugliest code is the rescan code. I'm not too worried about the other places, and I think none of the places involve wallet code that would be useful to run offline",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T23:16:07Z",
      "diff_hunk" : "@@ -133,12 +133,23 @@ class Chain\n         int64_t* max_time = nullptr,\n         int64_t* mtp_time = nullptr) = 0;\n \n+    //! Find ancestor of block at specified height and return its hash.\n+    virtual uint256 findAncestorByHeight(const uint256& block_hash, int ancestor_height) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172361",
      "id" : 379172361,
      "in_reply_to_id" : 379075632,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MjM2MQ==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 137,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 358619512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172361",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172401"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379042572\r\n\r\n> [e276b68](https://github.com/bitcoin/bitcoin/commit/e276b6821430ec2c18aba55137daf98bae770054)\r\n> \r\n> \"If both blocks are on the same chain ancestor_height is the height of the oldest between them. Also return height of first block which may be the same than ancestor height.\"\r\n> \r\n> But honestly would prefer parameterize `findFork` instead of yet-another-single use method like passing wallet tip hash to findFork (and if null, then use default chain tip).\r\n> \r\n> By the way, is `findFork` still used after this change ?\r\n\r\n`findFork` only used on startup after this change and is removed later in 3f1b867a096ac24073c59ecd2c660e07cfc2be50 from #15719.\r\n\r\nI think `findCommonAncestor` is a more robust and more general version of `findFork` that works on any two blocks always returning the same value regardless of the current tip, avoiding race conditions that would otherwise happen when the tip is changing.\r\n\r\n`findCommonAncestor` returns multiple values, so which of those values comes back in the return type, and which come back through output parameters is an aesthetic choice that isn't too important to me. Probably if we were using c++17 I would have this return a tuple. If you think it's bad to return block1 height, though, I could add a new `int* block1_height` output parameter, and change the return type from `Optional<int>` to `bool`.\r\n\r\n",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T23:16:15Z",
      "diff_hunk" : "@@ -133,12 +133,23 @@ class Chain\n         int64_t* max_time = nullptr,\n         int64_t* mtp_time = nullptr) = 0;\n \n+    //! Find ancestor of block at specified height and return its hash.\n+    virtual uint256 findAncestorByHeight(const uint256& block_hash, int ancestor_height) = 0;\n+\n     //! Return whether block descends from a specified ancestor, and\n     //! optionally return height of the ancestor.\n     virtual bool findAncestorByHash(const uint256& block_hash,\n         const uint256& ancestor_hash,\n         int* height = 0) = 0;\n \n+    //! Find most recent common ancestor between two blocks and optionally\n+    //! return its hash and/or height. Also return height of first block. Return\n+    //! nullopt if either block is unknown or there is no common ancestor.\n+    virtual Optional<int> findCommonAncestor(const uint256& block_hash1,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172401",
      "id" : 379172401,
      "in_reply_to_id" : 379042572,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MjQwMQ==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 148,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 358619512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172401",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172535"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172535"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379070527\r\n\r\n> [e276b68](https://github.com/bitcoin/bitcoin/commit/e276b6821430ec2c18aba55137daf98bae770054)\r\n> \r\n> Height of genesis block is 0 ? If so depth is -1 which I think isn't the behavior expected (already there before ?)\r\n\r\n`height` is an `Optional<int>` so `height ?` is just checking if the optional value is set. If `height` is `0` the condition will evaluate to true and the correct depth should be set.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T23:16:37Z",
      "diff_hunk" : "@@ -1605,8 +1606,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n \n     bool include_removed = (request.params[3].isNull() || request.params[3].get_bool());\n \n-    const Optional<int> tip_height = locked_chain->getHeight();\n-    int depth = tip_height && height ? (1 + *tip_height - *height) : -1;\n+    int depth = height ? pwallet->GetLastBlockHeight() + 1 - *height : -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172535",
      "id" : 379172535,
      "in_reply_to_id" : 379070527,
      "line" : 1605,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MjUzNQ==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 1605,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 37,
      "pull_request_review_id" : 358619512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172535",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172583"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379069325\r\n\r\n> [e276b68](https://github.com/bitcoin/bitcoin/commit/e276b6821430ec2c18aba55137daf98bae770054)\r\n> \r\n> If I understand issue linked in the commit message, let's say you call listsinceblock(genesis_hash, 100) with current_tip == 1100 (shouldn't matter referring to `chain_tip` or `wallet_tip`).\r\n> Target_confirm = 1100 + 1 - 100 = 1001.\r\n> Lastblock = blockhash(1001)\r\n> \r\n> Now while calling again listsinceblock(lastblock_hash, 100) with current_tip = 1100\r\n> depth = 1100 + 1 - 1001 = 100\r\n> So only transactions with depth < 100 are returned and not the ones with 100-conf as expected by `target_confirmations` (i.e transactions for block 1101, the \"100th\" from the main chain).\r\n> \r\n> Is this the behavior you're fixing by returning now the ancestor hash? Seems to me documentation is already marching code \"So you would generally use a target_confirmations of say 6, you will be continually re-notified of transactions until they've reached 6 confirmations plus any new ones\" but not sure if this what we really want..\r\n\r\nI think I need to reread your example more closely to give a better response, but the case which this commit should fix is specifically the case where `wallet_tip != chain_tip`. So if the wallet is behind and `wallet_tip=1100` while `chain_tip=1150`, I want the first `listsinceblock` call to return `lastblock=blockhash(1001)` instead of `blockhash(1051)` so transactions aren't missed in the second call",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T23:16:46Z",
      "diff_hunk" : "@@ -1638,8 +1638,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n         --*altheight;\n     }\n \n-    int last_height = tip_height ? *tip_height + 1 - target_confirms : -1;\n-    uint256 lastblock = last_height >= 0 ? locked_chain->getBlockHash(last_height) : uint256();\n+    uint256 lastblock = pwallet->chain().findAncestorByHeight(pwallet->GetLastBlockHash(), pwallet->GetLastBlockHeight() + 1 - target_confirms);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172583",
      "id" : 379172583,
      "in_reply_to_id" : 379069325,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MjU4Mw==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 1641,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 358619512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172583",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172637"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172637"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379150008\r\n\r\n> [9aa4b6b](https://github.com/bitcoin/bitcoin/commit/9aa4b6bb6fb5f44a943cd50cb46e0d80275060ce)\r\n> \r\n> I find `findAncestorByHeight` unclear, here we may have `start_height` and `GetLastBlockHash` not pointing to same block. Behavior follows method documentation but why bother asking for the hash, query in ChainActive with the provided height ?\r\n> \r\n> Honestly here I would prefer to stick with `getBlockHash`, behavior is more straightforward.\r\n\r\nMaybe `findAncestorByHeight` needs a better name, but it is supposed to be a direct replacement for `getBlockHash` that turns a block height into a block hash. The only difference is that `getBlockHash` will return different values depending on the current tip, while `findAncestorByHeight` is more stable and always returns the same values regardless of the tip.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T23:16:56Z",
      "diff_hunk" : "@@ -3569,25 +3570,15 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n \n         // We can't rescan beyond non-pruned blocks, stop and throw an error\n-        if (locked_chain->findPruned(start_height, stop_height)) {\n+        if (!pwallet->chain().hasBlocks(pwallet->GetLastBlockHash(), start_height, stop_height)) {\n             throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n         }\n \n-        if (tip_height) {\n-            start_block = locked_chain->getBlockHash(start_height);\n-            // If called with a stop_height, set the stop_height here to\n-            // trigger a rescan to that height.\n-            // If called without a stop height, leave stop_height as null here\n-            // so rescan continues to the tip (even if the tip advances during\n-            // rescan).\n-            if (stop_height) {\n-                stop_block = locked_chain->getBlockHash(*stop_height);\n-            }\n-        }\n+        start_block = pwallet->chain().findAncestorByHeight(pwallet->GetLastBlockHash(), start_height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379172637",
      "id" : 379172637,
      "in_reply_to_id" : 379150008,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MjYzNw==",
      "original_commit_id" : "9aa4b6bb6fb5f44a943cd50cb46e0d80275060ce",
      "original_line" : 3577,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : null,
      "pull_request_review_id" : 358619512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379172637",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379173550"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379173550"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> [9aa4b6b](https://github.com/bitcoin/bitcoin/commit/9aa4b6bb6fb5f44a943cd50cb46e0d80275060ce)\r\n> \r\n> Same here, why `ScanForWalletTransactions` function to then add a call to get previously furnished information ? I would prefer to keep removed `getBlockHash` calls in `rescanblockchain`\r\n\r\nI don't think that would be an improvement, or know what advantages you see there. \r\n\r\nThe problem with `getBlockHash` calls is that their behavior varies depending on the current node tip. Wallet code is simpler and easier to reason about it only has to deal the last block processed and not have to reconcile last processed information with the node tip. This is why `rescanblockchain` function gets shorter and simpler as a result of this change (and longer and more complicated in the current #16426)\r\n\r\nThis commit just tweaks 3 lines of code in `ScanForWalletTransactions`, and don't seem too significant. The next commit e1381908537267a937bbd3b83eb00f2fa562928e simplifies `ScanForWalletTransactions` a little more, though.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-13T23:19:44Z",
      "diff_hunk" : "@@ -1649,7 +1649,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n         }\n         block_height = locked_chain->getBlockHeight(block_hash);\n         progress_begin = chain().guessVerificationProgress(block_hash);\n-        progress_end = chain().guessVerificationProgress(stop_block.IsNull() ? tip_hash : stop_block);\n+        progress_end = chain().guessVerificationProgress(max_height ? chain().findAncestorByHeight(tip_hash, *max_height) : tip_hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379173550",
      "id" : 379173550,
      "in_reply_to_id" : 379151718,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MzU1MA==",
      "original_commit_id" : "9aa4b6bb6fb5f44a943cd50cb46e0d80275060ce",
      "original_line" : 1652,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 358619512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379173550",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379426137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379426137"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Here's a change that would make all the find block methods return block information same way 6f74c0a042b001283e1d7dd8a8ad8b46c75328e5 ([branch](https://github.com/ryanofsky/bitcoin/commits/pr/getblock)), if it helps\r\n\r\nEDIT: Newer version 25c1ae48204215622bc9fd3a8bc9677f15c32674",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-14T13:21:20Z",
      "diff_hunk" : "@@ -133,12 +133,23 @@ class Chain\n         int64_t* max_time = nullptr,\n         int64_t* mtp_time = nullptr) = 0;\n \n+    //! Find ancestor of block at specified height and return its hash.\n+    virtual uint256 findAncestorByHeight(const uint256& block_hash, int ancestor_height) = 0;\n+\n     //! Return whether block descends from a specified ancestor, and\n     //! optionally return height of the ancestor.\n     virtual bool findAncestorByHash(const uint256& block_hash,\n         const uint256& ancestor_hash,\n         int* height = 0) = 0;\n \n+    //! Find most recent common ancestor between two blocks and optionally\n+    //! return its hash and/or height. Also return height of first block. Return\n+    //! nullopt if either block is unknown or there is no common ancestor.\n+    virtual Optional<int> findCommonAncestor(const uint256& block_hash1,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379426137",
      "id" : 379426137,
      "in_reply_to_id" : 379042572,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyNjEzNw==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 148,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 358934804,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379426137",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379686531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379686531"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh right, it's an Optional, forget about it, forgive my C++ noobiness",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-14T23:20:42Z",
      "diff_hunk" : "@@ -1605,8 +1606,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n \n     bool include_removed = (request.params[3].isNull() || request.params[3].get_bool());\n \n-    const Optional<int> tip_height = locked_chain->getHeight();\n-    int depth = tip_height && height ? (1 + *tip_height - *height) : -1;\n+    int depth = height ? pwallet->GetLastBlockHeight() + 1 - *height : -1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379686531",
      "id" : 379686531,
      "in_reply_to_id" : 379070527,
      "line" : 1605,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY4NjUzMQ==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 1605,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 37,
      "pull_request_review_id" : 359270768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379686531",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379688216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379688216"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmmm if I understand `RescanFromTime` expected behavior is to find earliest block with _both_ nTime and height superior at the ones passed not _either_ so sounds like I broke it ?",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-14T23:28:51Z",
      "diff_hunk" : "@@ -259,6 +259,16 @@ class ChainImpl : public Chain\n         }\n         return true;\n     }\n+    Optional<uint256> findFirstBlockWithTimeAndHeight(int64_t min_time, int min_height, int* height = nullptr) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive().FindEarliestAtLeast(min_time, min_height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379688216",
      "id" : 379688216,
      "in_reply_to_id" : 379133763,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY4ODIxNg==",
      "original_commit_id" : "6067b74431169d54e2c3fd9141021f8caaf04461",
      "original_line" : 265,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 359272734,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379688216",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379693744"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379693744"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379688216\r\n\r\n#15670 seems right to me, at least at first glance. `a || b` can only be false if both a and b are false",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-14T23:51:57Z",
      "diff_hunk" : "@@ -259,6 +259,16 @@ class ChainImpl : public Chain\n         }\n         return true;\n     }\n+    Optional<uint256> findFirstBlockWithTimeAndHeight(int64_t min_time, int min_height, int* height = nullptr) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive().FindEarliestAtLeast(min_time, min_height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379693744",
      "id" : 379693744,
      "in_reply_to_id" : 379133763,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY5Mzc0NA==",
      "original_commit_id" : "6067b74431169d54e2c3fd9141021f8caaf04461",
      "original_line" : 265,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 359278778,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379693744",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Review club notes at https://bitcoincore.reviews/17954.html. Meeting in 2 hours if I'm time zoning correctly",
      "created_at" : "2020-02-19T16:04:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-588296819",
      "id" : 588296819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4ODI5NjgxOQ==",
      "updated_at" : "2020-02-19T16:04:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588296819",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r381473300"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381473300"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's confusing to return something unrelated to the common ancestor here...",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-19T18:48:23Z",
      "diff_hunk" : "@@ -133,12 +133,23 @@ class Chain\n         int64_t* max_time = nullptr,\n         int64_t* mtp_time = nullptr) = 0;\n \n+    //! Find ancestor of block at specified height and return its hash.\n+    virtual uint256 findAncestorByHeight(const uint256& block_hash, int ancestor_height) = 0;\n+\n     //! Return whether block descends from a specified ancestor, and\n     //! optionally return height of the ancestor.\n     virtual bool findAncestorByHash(const uint256& block_hash,\n         const uint256& ancestor_hash,\n         int* height = 0) = 0;\n \n+    //! Find most recent common ancestor between two blocks and optionally\n+    //! return its hash and/or height. Also return height of first block. Return",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r381473300",
      "id" : 381473300,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3MzMwMA==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 146,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 361345920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381473300",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r381508561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381508561"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r381473300\r\n\r\n> I think it's confusing to return something unrelated to the common ancestor here...\r\n\r\nAgreed, will backport 25c1ae48204215622bc9fd3a8bc9677f15c32674 ([branch](https://github.com/ryanofsky/bitcoin/commits/pr/getblock)) as soon as I get a chance",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-19T19:53:25Z",
      "diff_hunk" : "@@ -133,12 +133,23 @@ class Chain\n         int64_t* max_time = nullptr,\n         int64_t* mtp_time = nullptr) = 0;\n \n+    //! Find ancestor of block at specified height and return its hash.\n+    virtual uint256 findAncestorByHeight(const uint256& block_hash, int ancestor_height) = 0;\n+\n     //! Return whether block descends from a specified ancestor, and\n     //! optionally return height of the ancestor.\n     virtual bool findAncestorByHash(const uint256& block_hash,\n         const uint256& ancestor_hash,\n         int* height = 0) = 0;\n \n+    //! Find most recent common ancestor between two blocks and optionally\n+    //! return its hash and/or height. Also return height of first block. Return",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r381508561",
      "id" : 381508561,
      "in_reply_to_id" : 381473300,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUwODU2MQ==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 146,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 361391212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381508561",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r382500790"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382500790"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Maybe using `std::numeric_limits<int>::max()` would have been a tiny bit nicer because it would have allowed passing in a default initialized `height`.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-21T10:15:09Z",
      "diff_hunk" : "@@ -136,6 +136,12 @@ class Chain\n         int64_t* time = nullptr,\n         int64_t* max_time = nullptr) = 0;\n \n+    //! Return whether block descends from a specified ancestor, and\n+    //! optionally return height of the ancestor.\n+    virtual bool findAncestorByHash(const uint256& block_hash,\n+        const uint256& ancestor_hash,\n+        int* height = 0) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r382500790",
      "id" : 382500790,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUwMDc5MA==",
      "original_commit_id" : "c26215addfd12aac9f552ddf98164fd762bbe057",
      "original_line" : 143,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 362525933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382500790",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r382612052"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382612052"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think this means height will not be set within `findAncestorByHash()` and stay 0. Since it seems to not be needed it can probably be removed. Then passing an explicit 0 into the `Confirmation` constructor makes it more explicit that this value is not used/needed.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-21T14:32:29Z",
      "diff_hunk" : "@@ -359,8 +359,9 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n     }\n \n     auto locked_chain = pwallet->chain().lock();\n-    Optional<int> height = locked_chain->getBlockHeight(merkleBlock.header.GetHash());\n-    if (height == nullopt) {\n+    LOCK(pwallet->cs_wallet);\n+    int height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r382612052",
      "id" : 382612052,
      "line" : 365,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxMjA1Mg==",
      "original_commit_id" : "c26215addfd12aac9f552ddf98164fd762bbe057",
      "original_line" : 365,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 16,
      "pull_request_review_id" : 362525933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382612052",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r382628960"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382628960"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: The other functions around here follow a different style, returning a `bool`. I would have preferred to keep this consistent.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-21T15:01:51Z",
      "diff_hunk" : "@@ -259,6 +259,15 @@ class ChainImpl : public Chain\n         }\n         return true;\n     }\n+    uint256 findAncestorByHeight(const uint256& block_hash, int ancestor_height) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r382628960",
      "id" : 382628960,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYyODk2MA==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 262,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 362525933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382628960",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r382654842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382654842"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Style-wise I find the use of `Optional` here a bit weird because there are other, more common ways to make an argument optional.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-21T15:46:29Z",
      "diff_hunk" : "@@ -309,6 +295,17 @@ class ChainImpl : public Chain\n         LOCK(cs_main);\n         return GuessVerificationProgress(Params().TxData(), LookupBlockIndex(block_hash));\n     }\n+    bool hasBlocks(const uint256& block_hash, int min_height, Optional<int> max_height) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r382654842",
      "id" : 382654842,
      "line" : 286,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY1NDg0Mg==",
      "original_commit_id" : "9aa4b6bb6fb5f44a943cd50cb46e0d80275060ce",
      "original_line" : 286,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.cpp",
      "position" : 134,
      "pull_request_review_id" : 362525933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382654842",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r383429442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383429442"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r382628960\r\n\r\n> nit: The other functions around here follow a different style, returning a `bool`. I would have preferred to keep this consistent.\r\n\r\nYes, this is better. It returns a bool now.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-24T18:13:52Z",
      "diff_hunk" : "@@ -259,6 +259,15 @@ class ChainImpl : public Chain\n         }\n         return true;\n     }\n+    uint256 findAncestorByHeight(const uint256& block_hash, int ancestor_height) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r383429442",
      "id" : 383429442,
      "in_reply_to_id" : 382628960,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQyOTQ0Mg==",
      "original_commit_id" : "e276b6821430ec2c18aba55137daf98bae770054",
      "original_line" : 262,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 363595674,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383429442",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r383429505"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383429505"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r382654842\r\n\r\n> nit: Style-wise I find the use of `Optional` here a bit weird because there are other, more common ways to make an argument optional.\r\n\r\nProbably most common way we denote optional heights is to use `-1` as a magic unset height value. But I think using `Optional` and `nullopt` is nicer here because it is more explicit and also because the rest of the `interfaces/chain` code is currently using `Optional` instead of `-1`.\r\n\r\nSince this is a maximum height and the last function parameter, another approach would be to use a `std::numeric_limits<int>::max()` default argument value. But IMO, while default argument values are great for optional outputs, for optional inputs they can be confusing and lead to bugs, especially when there are multiple arguments of the same type and the compiler can't check when a value is passed as the wrong argument",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-24T18:14:01Z",
      "diff_hunk" : "@@ -309,6 +295,17 @@ class ChainImpl : public Chain\n         LOCK(cs_main);\n         return GuessVerificationProgress(Params().TxData(), LookupBlockIndex(block_hash));\n     }\n+    bool hasBlocks(const uint256& block_hash, int min_height, Optional<int> max_height) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r383429505",
      "id" : 383429505,
      "in_reply_to_id" : 382654842,
      "line" : 286,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQyOTUwNQ==",
      "original_commit_id" : "9aa4b6bb6fb5f44a943cd50cb46e0d80275060ce",
      "original_line" : 286,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.cpp",
      "position" : 134,
      "pull_request_review_id" : 363595674,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383429505",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r383429575"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383429575"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r382500790\r\n\r\n> nit: Maybe using `std::numeric_limits<int>::max()` would have been a tiny bit nicer because it would have allowed passing in a default initialized `height`.\r\n\r\nShould be resolved. Height was just a pointer because it was an output parameter. But now the `FoundBlock` class is used to return information instead of a height pointer",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-24T18:14:09Z",
      "diff_hunk" : "@@ -136,6 +136,12 @@ class Chain\n         int64_t* time = nullptr,\n         int64_t* max_time = nullptr) = 0;\n \n+    //! Return whether block descends from a specified ancestor, and\n+    //! optionally return height of the ancestor.\n+    virtual bool findAncestorByHash(const uint256& block_hash,\n+        const uint256& ancestor_hash,\n+        int* height = 0) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r383429575",
      "id" : 383429575,
      "in_reply_to_id" : 382500790,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQyOTU3NQ==",
      "original_commit_id" : "c26215addfd12aac9f552ddf98164fd762bbe057",
      "original_line" : 143,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 363595674,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383429575",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r383429632"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383429632"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r382612052\r\n\r\n> I think this means height will not be set within `findAncestorByHash()` and stay 0. Since it seems to not be needed it can probably be removed. Then passing an explicit 0 into the `Confirmation` constructor makes it more explicit that this value is not used/needed.\r\n\r\n`height` is passed as output argument to `findAncestorByHash` below, and initialized by that call. The height value does get used and shouldn't actually be 0",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-24T18:14:19Z",
      "diff_hunk" : "@@ -359,8 +359,9 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n     }\n \n     auto locked_chain = pwallet->chain().lock();\n-    Optional<int> height = locked_chain->getBlockHeight(merkleBlock.header.GetHash());\n-    if (height == nullopt) {\n+    LOCK(pwallet->cs_wallet);\n+    int height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r383429632",
      "id" : 383429632,
      "in_reply_to_id" : 382612052,
      "line" : 365,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQyOTYzMg==",
      "original_commit_id" : "c26215addfd12aac9f552ddf98164fd762bbe057",
      "original_line" : 365,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 16,
      "pull_request_review_id" : 363595674,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383429632",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385852029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385852029"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "3e64b9e\r\n\r\nI really like this new helper class, just what do you think here of enforching check with a boolean flag to `FillBlock` and upper level method instead of a attribute setup by FoundBlock constructor caller. E.g in `WalletTxToJSON`, `findBlock` is called and `FoundBlock` constructed with a check requirement, which then calls `LookupBlockIndex` and `FillBlock`, and only in this last function the check is going to be enforced.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-28T18:26:43Z",
      "diff_hunk" : "@@ -30,6 +30,30 @@ namespace interfaces {\n class Handler;\n class Wallet;\n \n+//! Helper for findBlock to selectively return pieces of block data.\n+class FoundBlock\n+{\n+public:\n+    FoundBlock& hash(uint256& hash) { m_hash = &hash; return *this; }\n+    FoundBlock& height(int& height) { m_height = &height; return *this; }\n+    FoundBlock& time(int64_t& time) { m_time = &time; return *this; }\n+    FoundBlock& maxTime(int64_t& max_time) { m_max_time = &max_time; return *this; }\n+    FoundBlock& mtpTime(int64_t& mtp_time) { m_mtp_time = &mtp_time; return *this; }\n+    //! Read block data from disk. If the block exists but doesn't have data\n+    //! (for example due to pruning), the CBlock variable will be set to null.\n+    FoundBlock& data(CBlock& data) { m_data = &data; return *this; }\n+    //! Require block, and check that it exists with CHECK_NONFATAL.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385852029",
      "id" : 385852029,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1MjAyOQ==",
      "original_commit_id" : "3e64b9e0d5ac289b525c083f5519d1cf0e5173ed",
      "original_line" : 45,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 366596882,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385852029",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385861975"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385861975"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "153f749\r\n\r\nAlso why not adding a `FoundBlock& ancestor(uint256& hash) { .. }` and let `FillBlock` check if ancestor exists ?\r\n(once you understand `FoundBlock` helper class, that's easier to reason on than adding one-use method IMO)",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-28T18:48:17Z",
      "diff_hunk" : "@@ -153,6 +153,12 @@ class Chain\n     //! or contents.\n     virtual bool findBlock(const uint256& hash, const FoundBlock& block={}) = 0;\n \n+    //! Return whether block descends from a specified ancestor, and\n+    //! optionally return block information.\n+    virtual bool findAncestorByHash(const uint256& block_hash,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385861975",
      "id" : 385861975,
      "line" : 159,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MTk3NQ==",
      "original_commit_id" : "153f74900e5241c6f31381902ee7f6cc5bf42e3a",
      "original_line" : 159,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : 84,
      "pull_request_review_id" : 366596882,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385861975",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385876138"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385876138"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "9da0e41\r\n\r\nSame here, I think you can make `findAncestorByHeight` and `findCommonAncestor` as `FoundBlock` methods (at least I've tried for `findAncestorByHeight ` it works well)",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-28T19:18:45Z",
      "diff_hunk" : "@@ -149,12 +149,24 @@ class Chain\n     //! or contents.\n     virtual bool findBlock(const uint256& hash, const FoundBlock& block={}) = 0;\n \n+    //! Find ancestor of block at specified height and optionally return\n+    //! ancestor information.\n+    virtual bool findAncestorByHeight(const uint256& block_hash, int ancestor_height, const FoundBlock& ancestor={}) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385876138",
      "id" : 385876138,
      "line" : 155,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3NjEzOA==",
      "original_commit_id" : "9da0e4121bf51b5cee6742fce7cec20dbbb9beb1",
      "original_line" : 155,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : 80,
      "pull_request_review_id" : 366596882,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385876138",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385895403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385895403"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "9701379\r\n\r\nWas a bit confused at first, would comment code, here \"If a `max_height` is provided, do a rescan from start_block to it. Otherwise use wallet tip hash as an ending point\"",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-28T19:59:18Z",
      "diff_hunk" : "@@ -1638,38 +1638,32 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n \n     fAbortRescan = false;\n     ShowProgress(strprintf(\"%s \" + _(\"Rescanning...\").translated, GetDisplayName()), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-    uint256 tip_hash;\n-    // The way the 'block_height' is initialized is just a workaround for the gcc bug #47679 since version 4.6.0.\n-    Optional<int> block_height = MakeOptional(false, int());\n-    double progress_begin;\n-    double progress_end;\n-    {\n-        auto locked_chain = chain().lock();\n-        if (Optional<int> tip_height = locked_chain->getHeight()) {\n-            tip_hash = locked_chain->getBlockHash(*tip_height);\n-        }\n-        block_height = locked_chain->getBlockHeight(block_hash);\n-        uint256 end_hash = tip_hash;\n-        if (max_height) chain().findAncestorByHeight(tip_hash, *max_height, FoundBlock().hash(end_hash));\n-        progress_begin = chain().guessVerificationProgress(block_hash);\n-        progress_end = chain().guessVerificationProgress(end_hash);\n-    }\n+    uint256 tip_hash = WITH_LOCK(cs_wallet, return GetLastBlockHash());\n+    uint256 end_hash = tip_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385895403",
      "id" : 385895403,
      "line" : 1647,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg5NTQwMw==",
      "original_commit_id" : "9701379d37c6307d8fcdcfbf57d1fe76e6cff060",
      "original_line" : 1647,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 87,
      "pull_request_review_id" : 366596882,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385895403",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385904359"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385904359"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "bfa71f8\r\n\r\nYou may keep the assert against `block_height` parameter?",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-28T20:20:33Z",
      "diff_hunk" : "@@ -2532,7 +2533,6 @@ static uint32_t GetLocktimeForNewTransaction(interfaces::Chain& chain, interface\n         // unique \"nLockTime fingerprint\", set nLockTime to a constant.\n         locktime = 0;\n     }\n-    assert(locktime <= height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385904359",
      "id" : 385904359,
      "line" : 2683,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkwNDM1OQ==",
      "original_commit_id" : "bfa71f856172dc941c844d4b60f15974e8579d61",
      "original_line" : 2683,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 224,
      "pull_request_review_id" : 366596882,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385904359",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385909767"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385909767"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "bfa71f8\r\n\r\nWe take another wallet lock just few lines behind, I think you can move the call to `GetLocktimeForNewTransaction` there, shouldn't change anything.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-28T20:34:41Z",
      "diff_hunk" : "@@ -2592,8 +2592,14 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n     }\n \n     CMutableTransaction txNew;\n-\n-    txNew.nLockTime = GetLocktimeForNewTransaction(chain(), locked_chain);\n+    uint256 tip_hash;\n+    int tip_height;\n+    {\n+        LOCK(cs_wallet);\n+        tip_hash = GetLastBlockHash();\n+        tip_height = GetLastBlockHeight();\n+    }\n+    txNew.nLockTime = GetLocktimeForNewTransaction(chain(), tip_hash, tip_height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385909767",
      "id" : 385909767,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkwOTc2Nw==",
      "original_commit_id" : "bfa71f856172dc941c844d4b60f15974e8579d61",
      "original_line" : 2602,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 366596882,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385909767",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385919298"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385919298"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r379693744\r\n\r\nAfter reading again semantics of std::lower_bound _comp_ I think you're right, while block timestamp is inferior at `min_time`, iterator is going to keep moving forward, whatever `min_height` in this case.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-02-28T20:59:07Z",
      "diff_hunk" : "@@ -260,6 +260,11 @@ class ChainImpl : public Chain\n         WAIT_LOCK(cs_main, lock);\n         return FillBlock(LookupBlockIndex(hash), block, lock);\n     }\n+    bool findFirstBlockWithTimeAndHeight(int64_t min_time, int min_height, const FoundBlock& block) override\n+    {\n+        WAIT_LOCK(cs_main, lock);\n+        return FillBlock(ChainActive().FindEarliestAtLeast(min_time, min_height), block, lock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385919298",
      "id" : 385919298,
      "line" : 245,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxOTI5OA==",
      "original_commit_id" : "06460d3c2d8fe320c8d81d7964305cd25beefd0f",
      "original_line" : 245,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.cpp",
      "position" : 89,
      "pull_request_review_id" : 366596882,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/385919298",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r386462262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386462262"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385852029\r\n\r\n> [3e64b9e](https://github.com/bitcoin/bitcoin/commit/3e64b9e0d5ac289b525c083f5519d1cf0e5173ed)\r\n> \r\n> what do you think here of enforching check with a boolean flag to `FillBlock` and upper level method instead of a attribute setup by FoundBlock constructor caller.\r\n\r\nI didn't really think about it, but looking again, the `.require()` method is pretty pointless. It's easier and clearer to just use CHECK_NONFATAL at the call sites directly. I updated the PR to do this and drop `require()`, but let me know if you think more changes still make sense.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-02T15:29:31Z",
      "diff_hunk" : "@@ -30,6 +30,30 @@ namespace interfaces {\n class Handler;\n class Wallet;\n \n+//! Helper for findBlock to selectively return pieces of block data.\n+class FoundBlock\n+{\n+public:\n+    FoundBlock& hash(uint256& hash) { m_hash = &hash; return *this; }\n+    FoundBlock& height(int& height) { m_height = &height; return *this; }\n+    FoundBlock& time(int64_t& time) { m_time = &time; return *this; }\n+    FoundBlock& maxTime(int64_t& max_time) { m_max_time = &max_time; return *this; }\n+    FoundBlock& mtpTime(int64_t& mtp_time) { m_mtp_time = &mtp_time; return *this; }\n+    //! Read block data from disk. If the block exists but doesn't have data\n+    //! (for example due to pruning), the CBlock variable will be set to null.\n+    FoundBlock& data(CBlock& data) { m_data = &data; return *this; }\n+    //! Require block, and check that it exists with CHECK_NONFATAL.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r386462262",
      "id" : 386462262,
      "in_reply_to_id" : 385852029,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MjI2Mg==",
      "original_commit_id" : "3e64b9e0d5ac289b525c083f5519d1cf0e5173ed",
      "original_line" : 45,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 367289136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386462262",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r386462351"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386462351"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385876138\r\n\r\n> [9da0e41](https://github.com/bitcoin/bitcoin/commit/9da0e4121bf51b5cee6742fce7cec20dbbb9beb1)\r\n> \r\n> Same here, I think you can make `findAncestorByHeight` and `findCommonAncestor` as `FoundBlock` methods (at least I've tried for `findAncestorByHeight ` it works well)\r\n\r\nIt's not clear when you would want a function to be a member of the chain class vs the block class. Having all functions side by side seems like the simplest starting point",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-02T15:29:38Z",
      "diff_hunk" : "@@ -149,12 +149,24 @@ class Chain\n     //! or contents.\n     virtual bool findBlock(const uint256& hash, const FoundBlock& block={}) = 0;\n \n+    //! Find ancestor of block at specified height and optionally return\n+    //! ancestor information.\n+    virtual bool findAncestorByHeight(const uint256& block_hash, int ancestor_height, const FoundBlock& ancestor={}) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r386462351",
      "id" : 386462351,
      "in_reply_to_id" : 385876138,
      "line" : 155,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MjM1MQ==",
      "original_commit_id" : "9da0e4121bf51b5cee6742fce7cec20dbbb9beb1",
      "original_line" : 155,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : 80,
      "pull_request_review_id" : 367289136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386462351",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r386462392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386462392"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385861975\r\n\r\n> [153f749](https://github.com/bitcoin/bitcoin/commit/153f74900e5241c6f31381902ee7f6cc5bf42e3a)\r\n> \r\n> Also why not adding a `FoundBlock& ancestor(uint256& hash) { .. }` and let `FillBlock` check if ancestor exists ?\r\n> (once you understand `FoundBlock` helper class, that's easier to reason on than adding one-use method IMO)\r\n\r\nFoundBlock is currently more of a struct with accessor methods than a real class with methods that execute code. If it became a real class wrapping a BlockIndex*, wallet code would no longer be able to construct it locally, instead it would have to make IPC calls to the node to create and destroy it. Also the new methods would have to be virtual and forward from the wallet to node process.\r\n\r\nThe interface would also seem less better organized. I think it's nice for `findBlock` `findFirstBlockWithTimeAndHeight` `findNextBlock` `findAncestorByHeight` `findAncestorByHash` `findCommonAncestor` to all be methods of the same class and all work the same way, than to be in different classes and follow different conventions.\r\n\r\nI do think a followup could unify these methods, something like:\r\n\r\n```c++\r\nchain.findBlock(hash, FoundBlock.height(out_height).time(out_time));                                // current\r\nchain.findBlock().hash(hash).getHeight(out_height).getTime(out_time);                               // new\r\n\r\nchain.findAncestorByHash(block, ancestor, FoundBlock.height(out_height).time(out_time));            // current\r\nchain.findBlock().hash(ancestor).descendant(block).getHeight(out_height).getTime(out_time);         // new\r\n\r\nchain.findAncestorByHeight(block, height, FoundBlock.height(out_height).time(out_time));            // current\r\nchain.findBlock().height(height).descendant(block).getHeight(out_height).getTime(out_time);         // new\r\n\r\nchain.findCommonAncestor(block1, block2, FoundBlock.height(out_height).time(out_time));             // current \r\nchain.findBlock().descendant(block1).descendant(block2).getHeight(out_height).getTime(out_time);    // new\r\n\r\nchain.findNextBlock(hash, height, FoundBlock.height(out_height).time(out_time));                    // current\r\nchain.findBlock().hash(hash).height(height).next(), FoundBlock.height(out_height).time(out_time));  // new\r\n\r\nchain.findFirstBlockWithTimeAndHeight(time, height, FoundBlock.height(out_height).time(out_time));  // current\r\nchain.findBlock().minTime(time).minHeight(height).getHeight(out_height).getTime(out_time));         // new\r\n```\r\n\r\nBut this is kind of baroque and I didn't want to attempt something like that here, even though it could be a followup\r\n",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-02T15:29:43Z",
      "diff_hunk" : "@@ -153,6 +153,12 @@ class Chain\n     //! or contents.\n     virtual bool findBlock(const uint256& hash, const FoundBlock& block={}) = 0;\n \n+    //! Return whether block descends from a specified ancestor, and\n+    //! optionally return block information.\n+    virtual bool findAncestorByHash(const uint256& block_hash,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r386462392",
      "id" : 386462392,
      "in_reply_to_id" : 385861975,
      "line" : 159,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MjM5Mg==",
      "original_commit_id" : "153f74900e5241c6f31381902ee7f6cc5bf42e3a",
      "original_line" : 159,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : 84,
      "pull_request_review_id" : 367289136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386462392",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r386464748"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386464748"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385895403\r\n\r\n> [9701379](https://github.com/bitcoin/bitcoin/commit/9701379d37c6307d8fcdcfbf57d1fe76e6cff060)\r\n> \r\n> Was a bit confused at first, would comment code, here \"If a `max_height` is provided, do a rescan from start_block to it. Otherwise use wallet tip hash as an ending point\"\r\n\r\nThanks, added a similar comment",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-02T15:33:17Z",
      "diff_hunk" : "@@ -1638,38 +1638,32 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n \n     fAbortRescan = false;\n     ShowProgress(strprintf(\"%s \" + _(\"Rescanning...\").translated, GetDisplayName()), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-    uint256 tip_hash;\n-    // The way the 'block_height' is initialized is just a workaround for the gcc bug #47679 since version 4.6.0.\n-    Optional<int> block_height = MakeOptional(false, int());\n-    double progress_begin;\n-    double progress_end;\n-    {\n-        auto locked_chain = chain().lock();\n-        if (Optional<int> tip_height = locked_chain->getHeight()) {\n-            tip_hash = locked_chain->getBlockHash(*tip_height);\n-        }\n-        block_height = locked_chain->getBlockHeight(block_hash);\n-        uint256 end_hash = tip_hash;\n-        if (max_height) chain().findAncestorByHeight(tip_hash, *max_height, FoundBlock().hash(end_hash));\n-        progress_begin = chain().guessVerificationProgress(block_hash);\n-        progress_end = chain().guessVerificationProgress(end_hash);\n-    }\n+    uint256 tip_hash = WITH_LOCK(cs_wallet, return GetLastBlockHash());\n+    uint256 end_hash = tip_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r386464748",
      "id" : 386464748,
      "in_reply_to_id" : 385895403,
      "line" : 1647,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2NDc0OA==",
      "original_commit_id" : "9701379d37c6307d8fcdcfbf57d1fe76e6cff060",
      "original_line" : 1647,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 87,
      "pull_request_review_id" : 367289136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386464748",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r386464899"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386464899"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385904359\r\n\r\n> [bfa71f8](https://github.com/bitcoin/bitcoin/commit/bfa71f856172dc941c844d4b60f15974e8579d61)\r\n> \r\n> You may keep the assert against `block_height` parameter?\r\n\r\nIf you think it helps, I can add this back, but I did remove it intentionally. It seemed pointless to assert locktime is less than the height just after setting it to the height, something like\r\n\r\n```c++\r\na = b + c;\r\nassert(a == b + c);\r\n```",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-02T15:33:32Z",
      "diff_hunk" : "@@ -2532,7 +2533,6 @@ static uint32_t GetLocktimeForNewTransaction(interfaces::Chain& chain, interface\n         // unique \"nLockTime fingerprint\", set nLockTime to a constant.\n         locktime = 0;\n     }\n-    assert(locktime <= height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r386464899",
      "id" : 386464899,
      "in_reply_to_id" : 385904359,
      "line" : 2683,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2NDg5OQ==",
      "original_commit_id" : "bfa71f856172dc941c844d4b60f15974e8579d61",
      "original_line" : 2683,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 224,
      "pull_request_review_id" : 367289136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386464899",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r386465101"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386465101"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r385909767\r\n\r\n> [bfa71f8](https://github.com/bitcoin/bitcoin/commit/bfa71f856172dc941c844d4b60f15974e8579d61)\r\n> \r\n> We take another wallet lock just few lines behind, I think you can move the call to `GetLocktimeForNewTransaction` there, shouldn't change anything.\r\n\r\nThanks, moved under the existing wallet lock\r\n\r\n",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-02T15:33:50Z",
      "diff_hunk" : "@@ -2592,8 +2592,14 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n     }\n \n     CMutableTransaction txNew;\n-\n-    txNew.nLockTime = GetLocktimeForNewTransaction(chain(), locked_chain);\n+    uint256 tip_hash;\n+    int tip_height;\n+    {\n+        LOCK(cs_wallet);\n+        tip_hash = GetLastBlockHash();\n+        tip_height = GetLastBlockHeight();\n+    }\n+    txNew.nLockTime = GetLocktimeForNewTransaction(chain(), tip_hash, tip_height);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r386465101",
      "id" : 386465101,
      "in_reply_to_id" : 385909767,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2NTEwMQ==",
      "original_commit_id" : "bfa71f856172dc941c844d4b60f15974e8579d61",
      "original_line" : 2602,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 367289136,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386465101",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r388487722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388487722"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Okay I get your point with struct-with-accessor-methods vs real-class-with-methods-that-execute-code wrt with IPC/memory separation. My assumption here was we should clean up completely these methods by storing more inside the wallet (like any block header tied to a transaction which matters for us), but that something we should discuss in future PRs/issues. I'm fine with Chain API right now, let's move forward",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-05T18:43:26Z",
      "diff_hunk" : "@@ -153,6 +153,12 @@ class Chain\n     //! or contents.\n     virtual bool findBlock(const uint256& hash, const FoundBlock& block={}) = 0;\n \n+    //! Return whether block descends from a specified ancestor, and\n+    //! optionally return block information.\n+    virtual bool findAncestorByHash(const uint256& block_hash,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r388487722",
      "id" : 388487722,
      "in_reply_to_id" : 385861975,
      "line" : 159,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4NzcyMg==",
      "original_commit_id" : "153f74900e5241c6f31381902ee7f6cc5bf42e3a",
      "original_line" : 159,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : 84,
      "pull_request_review_id" : 369820311,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388487722",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 4c7ae7319e5796e4aa7011d26b2dfd6bca4ebe45\r\n\r\nReviewed code, built and ran tests locally. It took me a moment to get used to the `FoundBlock` abstraction but I agree that it's an improvement.",
      "created_at" : "2020-03-11T14:42:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-597674785",
      "id" : 597674785,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NzY3NDc4NQ==",
      "updated_at" : "2020-03-11T14:42:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597674785",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2020-03-11T16:35:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-597737957",
      "id" : 597737957,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NzczNzk1Nw==",
      "updated_at" : "2020-03-11T16:35:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597737957",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395695797"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395695797"
         }
      },
      "author_association" : "MEMBER",
      "body" : "g++ compiler `-Wmaybe-uninitialized` warning:\r\n```\r\nwallet/rpcwallet.cpp: In function âUniValue rescanblockchain(const JSONRPCRequest&)â:\r\nwallet/rpcwallet.cpp:3550:19: warning: â*((void*)& stop_height +4)â may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n     Optional<int> stop_height;\r\n                   ^~~~~~~~~~~\r\n```\r\n\r\nCould be\r\n```suggestion\r\n#include <optional.h>\r\n    Optional<int> stop_height = MakeOptional(false, int());\r\n```\r\n?",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-20T15:01:37Z",
      "diff_hunk" : "@@ -3546,22 +3547,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n \n     int start_height = 0;\n-    uint256 start_block, stop_block;\n+    Optional<int> stop_height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395695797",
      "id" : 395695797,
      "line" : 3539,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY5NTc5Nw==",
      "original_commit_id" : "4c7ae7319e5796e4aa7011d26b2dfd6bca4ebe45",
      "original_line" : 3539,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 66,
      "pull_request_review_id" : 378560021,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395695797",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395737849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395737849"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why `auto locked_chain = wallet->chain().lock();` is still needed?",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-20T16:05:07Z",
      "diff_hunk" : "@@ -156,7 +156,7 @@ void TestGUI(interfaces::Node& node)\n \n         WalletRescanReserver reserver(wallet.get());\n         reserver.reserve();\n-        CWallet::ScanResult result = wallet->ScanForWalletTransactions(locked_chain->getBlockHash(0), {} /* stop_block */, reserver, true /* fUpdate */);\n+        CWallet::ScanResult result = wallet->ScanForWalletTransactions(Params().GetConsensus().hashGenesisBlock, 0 /* block height */, {} /* max height */, reserver, true /* fUpdate */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395737849",
      "id" : 395737849,
      "line" : 156,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTczNzg0OQ==",
      "original_commit_id" : "4c7ae7319e5796e4aa7011d26b2dfd6bca4ebe45",
      "original_line" : 156,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/qt/test/wallettests.cpp",
      "position" : 10,
      "pull_request_review_id" : 378615154,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395737849",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395809541"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395809541"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395737849\r\n\r\n> Why `auto locked_chain = wallet->chain().lock();` is still needed?\r\n\r\nGood catch, simplified this code",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-20T18:08:55Z",
      "diff_hunk" : "@@ -156,7 +156,7 @@ void TestGUI(interfaces::Node& node)\n \n         WalletRescanReserver reserver(wallet.get());\n         reserver.reserve();\n-        CWallet::ScanResult result = wallet->ScanForWalletTransactions(locked_chain->getBlockHash(0), {} /* stop_block */, reserver, true /* fUpdate */);\n+        CWallet::ScanResult result = wallet->ScanForWalletTransactions(Params().GetConsensus().hashGenesisBlock, 0 /* block height */, {} /* max height */, reserver, true /* fUpdate */);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395809541",
      "id" : 395809541,
      "in_reply_to_id" : 395737849,
      "line" : 156,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwOTU0MQ==",
      "original_commit_id" : "4c7ae7319e5796e4aa7011d26b2dfd6bca4ebe45",
      "original_line" : 156,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/qt/test/wallettests.cpp",
      "position" : 10,
      "pull_request_review_id" : 378707682,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395809541",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395810294"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395810294"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395695797\r\n\r\n> g++ compiler `-Wmaybe-uninitialized` warning:\r\n\r\nThis is a known false positive with no side effects from an old compiler. https://www.boost.org/doc/libs/1_72_0/libs/optional/doc/html/boost_optional/tutorial/gotchas/false_positive_with__wmaybe_uninitialized.html\r\n\r\nI don't think making code less readable to silence these is a good tradeoff. But if silencing them is actually important, we should at least have an automated check, like a linter or an old gcc running on travis and failing so there doesn't have to be a manual reporting, update, and review cycle each time a new instance turns up.\r\n",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-20T18:10:26Z",
      "diff_hunk" : "@@ -3546,22 +3547,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n \n     int start_height = 0;\n-    uint256 start_block, stop_block;\n+    Optional<int> stop_height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395810294",
      "id" : 395810294,
      "in_reply_to_id" : 395695797,
      "line" : 3539,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMDI5NA==",
      "original_commit_id" : "4c7ae7319e5796e4aa7011d26b2dfd6bca4ebe45",
      "original_line" : 3539,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 66,
      "pull_request_review_id" : 378707682,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395810294",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky It seem CI fails due to the conflict between 80468a97cba27faa9297b86eb901221701d8b13b and #18234.",
      "created_at" : "2020-03-20T19:20:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-601871454",
      "id" : 601871454,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMTg3MTQ1NA==",
      "updated_at" : "2020-03-20T19:54:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/601871454",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395866090"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395866090"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I don't think making code less readable to silence these is a good tradeoff.\r\n\r\nLet me add some context: https://github.com/bitcoin/bitcoin/pull/14711#pullrequestreview-193702611, #15292, #18052\r\n\r\n> But if silencing them is actually important, we should at least have an automated check, like a linter or an old gcc running on travis and failing so there doesn't have to be a manual reporting, update, and review cycle each time a new instance turns up.\r\n\r\nDo you mean adding of the `-Werror=maybe-uninitialized` option to a compiler on Travis?",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-20T20:08:06Z",
      "diff_hunk" : "@@ -3546,22 +3547,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n \n     int start_height = 0;\n-    uint256 start_block, stop_block;\n+    Optional<int> stop_height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395866090",
      "id" : 395866090,
      "in_reply_to_id" : 395695797,
      "line" : 3539,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2NjA5MA==",
      "original_commit_id" : "4c7ae7319e5796e4aa7011d26b2dfd6bca4ebe45",
      "original_line" : 3539,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 66,
      "pull_request_review_id" : 378780951,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395866090",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395876846"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395876846"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit:\r\n```suggestion\r\n            const CBlockIndex* ancestor = block->GetAncestor(ancestor_height);\r\n            return FillBlock(ancestor, ancestor_out, lock);\r\n```",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-20T20:33:51Z",
      "diff_hunk" : "@@ -256,6 +256,16 @@ class ChainImpl : public Chain\n         WAIT_LOCK(cs_main, lock);\n         return FillBlock(LookupBlockIndex(hash), block, lock);\n     }\n+    bool findAncestorByHeight(const uint256& block_hash, int ancestor_height, const FoundBlock& ancestor_out) override\n+    {\n+        WAIT_LOCK(cs_main, lock);\n+        if (const CBlockIndex* block = LookupBlockIndex(block_hash)) {\n+            if (const CBlockIndex* ancestor = block->GetAncestor(ancestor_height)) {\n+                return FillBlock(ancestor, ancestor_out, lock);\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395876846",
      "id" : 395876846,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg3Njg0Ng==",
      "original_commit_id" : "7e870974e69c8873b817912ced998f14b235e14c",
      "original_line" : 260,
      "original_position" : 10,
      "original_start_line" : 263,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 378794913,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395876846",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395881801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395881801"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395866090\r\n\r\n> Do you mean adding of the `-Werror=maybe-uninitialized` option to a compiler on Travis?\r\n\r\nI don't want to make code less readable and I don't want to spend time on an going basis in every PR that uses `Optional` to have a back and forth discussion and extra review cycles just because an old compiler prints a harmless, nonsensical warning. \r\n\r\nIf you disagree and care about these false positive warnings, adding an automated check that catches them on travis should save all of us effort as we continue to use `Optional` variables more places. Maybe that automated check would be a linter, maybe it would be a changed operating system setting or -Werror flag on travis. Again I don't really want these checks, but they would probably work and save some time if we have to spend time this way.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-20T20:45:57Z",
      "diff_hunk" : "@@ -3546,22 +3547,23 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n \n     int start_height = 0;\n-    uint256 start_block, stop_block;\n+    Optional<int> stop_height;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395881801",
      "id" : 395881801,
      "in_reply_to_id" : 395695797,
      "line" : 3539,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg4MTgwMQ==",
      "original_commit_id" : "4c7ae7319e5796e4aa7011d26b2dfd6bca4ebe45",
      "original_line" : 3539,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 66,
      "pull_request_review_id" : 378801398,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395881801",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395892467"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395892467"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why the second check `!block->pprev` is needed?",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-20T21:13:45Z",
      "diff_hunk" : "@@ -290,6 +276,17 @@ class ChainImpl : public Chain\n         LOCK(cs_main);\n         return GuessVerificationProgress(Params().TxData(), LookupBlockIndex(block_hash));\n     }\n+    bool hasBlocks(const uint256& block_hash, int min_height, Optional<int> max_height) override\n+    {\n+        LOCK(::cs_main);\n+        if (CBlockIndex* block = LookupBlockIndex(block_hash)) {\n+            if (max_height && block->nHeight >= *max_height) block = block->GetAncestor(*max_height);\n+            for (; block->nStatus & BLOCK_HAVE_DATA; block = block->pprev) {\n+                if (block->nHeight < min_height || !block->pprev) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395892467",
      "id" : 395892467,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5MjQ2Nw==",
      "original_commit_id" : "f6c729977ab4b94acadda6bc8e95bdde097409d6",
      "original_line" : 285,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 378815453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395892467",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395897426"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395897426"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: parameter names in the function declaration differ from ones in the function definition:\r\n- `FoundBlock& next` vs `FoundBlock& block_out`\r\n- `bool* reorg` vs `bool* reorg_out`",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-20T21:26:40Z",
      "diff_hunk" : "@@ -148,6 +148,11 @@ class Chain\n     //! information.\n     virtual bool findFirstBlockWithTimeAndHeight(int64_t min_time, int min_height, const FoundBlock& block={}) = 0;\n \n+    //! Find next block if block is part of current chain. Also flag if\n+    //! there was a reorg and the specified block hash is no longer in the\n+    //! current chain, and optionally return block information.\n+    virtual bool findNextBlock(const uint256& block_hash, int block_height, const FoundBlock& next={}, bool* reorg=nullptr) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395897426",
      "id" : 395897426,
      "line" : 151,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5NzQyNg==",
      "original_commit_id" : "3989c851c3e4d15811da1e6bcd75b6f00f3176cf",
      "original_line" : 151,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : 76,
      "pull_request_review_id" : 378821566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395897426",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395903022"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395903022"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this comment still relevant? And the mention of `stop_block` in `@pre` comment?",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-20T21:43:21Z",
      "diff_hunk" : "@@ -1619,6 +1619,8 @@ int64_t CWallet::RescanFromTime(int64_t startTime, const WalletRescanReserver& r\n  * @param[in] stop_block  Scan ending block. If block is not on the active\n  *                        chain, the scan will continue until it reaches the\n  *                        chain tip.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395903022",
      "id" : 395903022,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMzAyMg==",
      "original_commit_id" : "3989c851c3e4d15811da1e6bcd75b6f00f3176cf",
      "original_line" : 1621,
      "original_position" : 12,
      "original_start_line" : 1619,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 378828538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395903022",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395909697"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395909697"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`tip_hash` and `tip_height` could be `const`:\r\n```suggestion\r\n    CMutableTransaction txNew;\r\n    FeeCalculation feeCalc;\r\n    CAmount nFeeNeeded;\r\n    int nBytes;\r\n    {\r\n        std::set<CInputCoin> setCoins;\r\n        auto locked_chain = chain().lock();\r\n        LOCK(cs_wallet);\r\n        const uint256 tip_hash = GetLastBlockHash();\r\n        const int tip_height = GetLastBlockHeight();\r\n```",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-20T22:04:06Z",
      "diff_hunk" : "@@ -2737,17 +2737,19 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n         return false;\n     }\n \n+    uint256 tip_hash;\n+    int tip_height;\n     CMutableTransaction txNew;\n-\n-    txNew.nLockTime = GetLocktimeForNewTransaction(chain(), locked_chain);\n-\n     FeeCalculation feeCalc;\n     CAmount nFeeNeeded;\n     int nBytes;\n     {\n         std::set<CInputCoin> setCoins;\n         auto locked_chain = chain().lock();\n         LOCK(cs_wallet);\n+        tip_hash = GetLastBlockHash();\n+        tip_height = GetLastBlockHeight();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395909697",
      "id" : 395909697,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwOTY5Nw==",
      "original_commit_id" : "56dd499eae7f99103665811da4bcb46e3bee73e1",
      "original_line" : 2751,
      "original_position" : 66,
      "original_start_line" : 2740,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 378836749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395909697",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code Review ACK 40a8796, changes since last ACK is removing a useless lock tacking in qt test.\r\n\r\n(stale Travis?)",
      "created_at" : "2020-03-22T03:03:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-602140701",
      "id" : 602140701,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjE0MDcwMQ==",
      "updated_at" : "2020-03-22T03:03:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602140701",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r396561567"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396561567"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395876846\r\n\r\n> nit:\r\n\r\nI don't see any advantage in this, it is just making the function less consistent internally. It would help to state what perceived advantages are with suggestions like this.",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-23T15:58:34Z",
      "diff_hunk" : "@@ -256,6 +256,16 @@ class ChainImpl : public Chain\n         WAIT_LOCK(cs_main, lock);\n         return FillBlock(LookupBlockIndex(hash), block, lock);\n     }\n+    bool findAncestorByHeight(const uint256& block_hash, int ancestor_height, const FoundBlock& ancestor_out) override\n+    {\n+        WAIT_LOCK(cs_main, lock);\n+        if (const CBlockIndex* block = LookupBlockIndex(block_hash)) {\n+            if (const CBlockIndex* ancestor = block->GetAncestor(ancestor_height)) {\n+                return FillBlock(ancestor, ancestor_out, lock);\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r396561567",
      "id" : 396561567,
      "in_reply_to_id" : 395876846,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU2MTU2Nw==",
      "original_commit_id" : "7e870974e69c8873b817912ced998f14b235e14c",
      "original_line" : 260,
      "original_position" : 10,
      "original_start_line" : 263,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 379571499,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396561567",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r396562125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396562125"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395892467\r\n\r\n> Why the second check `!block->pprev` is needed?\r\n\r\nSemantics of what hasBlocks should return when blocks don't exist is arbitrary, but I wrote it to consistently return false if any blocks that exist in the specified range are missing data, and true otherwise. There are test cases to ensure this works consistently for min_height and max_height\r\n\r\n`<` earlier on this line should have been `<=` though, so I fixed this and added some more test cases for edge conditions,",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-23T15:59:19Z",
      "diff_hunk" : "@@ -290,6 +276,17 @@ class ChainImpl : public Chain\n         LOCK(cs_main);\n         return GuessVerificationProgress(Params().TxData(), LookupBlockIndex(block_hash));\n     }\n+    bool hasBlocks(const uint256& block_hash, int min_height, Optional<int> max_height) override\n+    {\n+        LOCK(::cs_main);\n+        if (CBlockIndex* block = LookupBlockIndex(block_hash)) {\n+            if (max_height && block->nHeight >= *max_height) block = block->GetAncestor(*max_height);\n+            for (; block->nStatus & BLOCK_HAVE_DATA; block = block->pprev) {\n+                if (block->nHeight < min_height || !block->pprev) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r396562125",
      "id" : 396562125,
      "in_reply_to_id" : 395892467,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU2MjEyNQ==",
      "original_commit_id" : "f6c729977ab4b94acadda6bc8e95bdde097409d6",
      "original_line" : 285,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 379571499,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396562125",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r396562560"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396562560"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395903022\r\n\r\n> Is this comment still relevant? And the mention of `stop_block` in `@pre` comment?\r\n\r\nThanks, removed",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-23T15:59:52Z",
      "diff_hunk" : "@@ -1619,6 +1619,8 @@ int64_t CWallet::RescanFromTime(int64_t startTime, const WalletRescanReserver& r\n  * @param[in] stop_block  Scan ending block. If block is not on the active\n  *                        chain, the scan will continue until it reaches the\n  *                        chain tip.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r396562560",
      "id" : 396562560,
      "in_reply_to_id" : 395903022,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU2MjU2MA==",
      "original_commit_id" : "3989c851c3e4d15811da1e6bcd75b6f00f3176cf",
      "original_line" : 1621,
      "original_position" : 12,
      "original_start_line" : 1619,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 379571499,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396562560",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r396562743"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396562743"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395897426\r\n\r\n> nit: parameter names in the function declaration differ from ones in the function definition:\r\n> \r\n> * `FoundBlock& next` vs `FoundBlock& block_out`\r\n> * `bool* reorg` vs `bool* reorg_out`\r\n\r\nThanks, switched to names from declaration",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-23T16:00:09Z",
      "diff_hunk" : "@@ -148,6 +148,11 @@ class Chain\n     //! information.\n     virtual bool findFirstBlockWithTimeAndHeight(int64_t min_time, int min_height, const FoundBlock& block={}) = 0;\n \n+    //! Find next block if block is part of current chain. Also flag if\n+    //! there was a reorg and the specified block hash is no longer in the\n+    //! current chain, and optionally return block information.\n+    virtual bool findNextBlock(const uint256& block_hash, int block_height, const FoundBlock& next={}, bool* reorg=nullptr) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r396562743",
      "id" : 396562743,
      "in_reply_to_id" : 395897426,
      "line" : 151,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU2Mjc0Mw==",
      "original_commit_id" : "3989c851c3e4d15811da1e6bcd75b6f00f3176cf",
      "original_line" : 151,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : 76,
      "pull_request_review_id" : 379571499,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396562743",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r396563292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396563292"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/17954#discussion_r395909697\r\n\r\n> `tip_hash` and `tip_height` could be `const`:\r\n\r\nThanks, removed these variables that were left over from an earlier version of this commit",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-03-23T16:00:48Z",
      "diff_hunk" : "@@ -2737,17 +2737,19 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n         return false;\n     }\n \n+    uint256 tip_hash;\n+    int tip_height;\n     CMutableTransaction txNew;\n-\n-    txNew.nLockTime = GetLocktimeForNewTransaction(chain(), locked_chain);\n-\n     FeeCalculation feeCalc;\n     CAmount nFeeNeeded;\n     int nBytes;\n     {\n         std::set<CInputCoin> setCoins;\n         auto locked_chain = chain().lock();\n         LOCK(cs_wallet);\n+        tip_hash = GetLastBlockHash();\n+        tip_height = GetLastBlockHeight();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r396563292",
      "id" : 396563292,
      "in_reply_to_id" : 395909697,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU2MzI5Mg==",
      "original_commit_id" : "56dd499eae7f99103665811da4bcb46e3bee73e1",
      "original_line" : 2751,
      "original_position" : 66,
      "original_start_line" : 2740,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 379571499,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2020-03-31T15:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396563292",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-03-23T22:02:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-602880270",
      "id" : 602880270,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMjg4MDI3MA==",
      "updated_at" : "2020-03-23T22:02:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602880270",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code Review ACK 19e1db7\r\n\r\nChanges since last time are better documentation, `hasBlock` fix for the lower bound, `findNextBlock` internal simplification.\r\n\r\nI agree with @hebasto, `block->pprev` is quite confusing, would be happy to reack a `hasBlock` documentation change to lay out this.",
      "created_at" : "2020-03-25T03:39:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-603622770",
      "id" : 603622770,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMzYyMjc3MA==",
      "updated_at" : "2020-03-25T03:39:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/603622770",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for review!\r\n\r\nUpdated 19e1db77cbc08f451a3508bb113f2f7cf5a13616 -> cdea18ae2dad4a198df65d0043e10c45a22994e3 ([`pr/unlock.14`](https://github.com/ryanofsky/bitcoin/commits/pr/unlock.14) -> [`pr/unlock.15`](https://github.com/ryanofsky/bitcoin/commits/pr/unlock.15), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/unlock.14..pr/unlock.15)) adding suggested comment\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-603622770\r\n\r\n> I agree with @hebasto, `block->pprev` is quite confusing, would be happy to reack a `hasBlock` documentation change to lay out this.\r\n\r\nAdded comments, but I am surprised this null check is surprising, range cases are exhaustively checked in the unit test and this just makes results stable and not crashy.",
      "created_at" : "2020-03-25T13:01:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-603825588",
      "id" : 603825588,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMzgyNTU4OA==",
      "updated_at" : "2020-03-25T13:01:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/603825588",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code Review ACK cdea18a\r\n\r\nWhat confusing here isn't the null check but the decision to return true in this case, because you may have a void block is the given ranged and still return true.",
      "created_at" : "2020-03-25T18:05:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-603997498",
      "id" : 603997498,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwMzk5NzQ5OA==",
      "updated_at" : "2020-03-25T18:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/603997498",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK cdea18ae2dad4a198df65d0043e10c45a22994e3",
      "created_at" : "2020-03-28T14:04:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-605451635",
      "id" : 605451635,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNTQ1MTYzNQ==",
      "updated_at" : "2020-03-28T14:04:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605451635",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Core review ACK cdea18ae2dad4a198df65d0043e10c45a22994e3.",
      "created_at" : "2020-03-30T00:11:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-605724033",
      "id" : 605724033,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNTcyNDAzMw==",
      "updated_at" : "2020-03-30T00:11:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605724033",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).",
      "created_at" : "2020-03-31T13:16:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-606620154",
      "id" : 606620154,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjYyMDE1NA==",
      "updated_at" : "2020-03-31T13:16:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606620154",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased cdea18ae2dad4a198df65d0043e10c45a22994e3 -> 710b077f9c0d57a40073ceb9e5568ce37d8cdfe2 ([`pr/unlock.15`](https://github.com/ryanofsky/bitcoin/commits/pr/unlock.15) -> [`pr/unlock.16`](https://github.com/ryanofsky/bitcoin/commits/pr/unlock.16), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/unlock.15-rebase..pr/unlock.16)) due to conflict with #18160\r\n",
      "created_at" : "2020-03-31T15:35:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-606702994",
      "id" : 606702994,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNjcwMjk5NA==",
      "updated_at" : "2020-03-31T15:35:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606702994",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Reviewed recent [rebase](https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-606702994):\r\n\r\nin `interfaces/wallet.cpp` #18160 moved `if (!force && num_blocks == cached_num_blocks) return false;` up, but in f6da44ccce4cfff53433e665305a6fe0a01364e4 it moved back. Could this break behavior introduced by #18160?\r\n",
      "created_at" : "2020-04-02T13:41:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-607854093",
      "id" : 607854093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNzg1NDA5Mw==",
      "updated_at" : "2020-04-02T13:41:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607854093",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Reviewed recent [rebase](https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-606702994):\r\n> \r\n> in `interfaces/wallet.cpp` #18160 moved `if (!force && num_blocks == cached_num_blocks) return false;` up, but in [f6da44c](https://github.com/bitcoin/bitcoin/commit/f6da44ccce4cfff53433e665305a6fe0a01364e4) it moved back. Could this break behavior introduced by #18160?\r\n\r\nNo, the point of #18160 is to skip recomputing balances when not forced by a transaction update or tip change. Commit f6da44ccce4cfff53433e665305a6fe0a01364e4 is making the tip change detection a little more accurate. An extra lock is required to do this, but GetBalances is still not called. The extra lock is also removed in #16426.\r\n",
      "created_at" : "2020-04-02T13:55:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-607862102",
      "id" : 607862102,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNzg2MjEwMg==",
      "updated_at" : "2020-04-02T13:55:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607862102",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-04-02T14:01:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-607865406",
      "id" : 607865406,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwNzg2NTQwNg==",
      "updated_at" : "2020-04-02T14:01:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607865406",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code Review ACK 710b077",
      "created_at" : "2020-04-03T01:36:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-608180917",
      "id" : 608180917,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYwODE4MDkxNw==",
      "updated_at" : "2020-04-03T01:36:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608180917",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r406887223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/406887223"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit e0b02c8cb3\r\n\r\n```suggestion\r\n        const FoundBlock& ancestor_out={}) = 0;\r\n```",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-04-10T18:34:43Z",
      "diff_hunk" : "@@ -150,6 +150,12 @@ class Chain\n     //! or contents.\n     virtual bool findBlock(const uint256& hash, const FoundBlock& block={}) = 0;\n \n+    //! Return whether block descends from a specified ancestor, and\n+    //! optionally return block information.\n+    virtual bool findAncestorByHash(const uint256& block_hash,\n+        const uint256& ancestor_hash,\n+        const FoundBlock& block={}) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r406887223",
      "id" : 406887223,
      "line" : 161,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg4NzIyMw==",
      "original_commit_id" : "e0b02c8cb3e6f3bb079c4bed278003fd69b6d5b3",
      "original_line" : 157,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : 86,
      "pull_request_review_id" : 391595669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-10T20:53:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/406887223",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r406891999"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/406891999"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in commit d83fd92520\r\n\r\nThis is no longer human readable. Idk why the tests don't fail we used to have at least one parser in the python functional test suite :shrug: ",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-04-10T18:46:34Z",
      "diff_hunk" : "@@ -791,9 +790,10 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     // produce output\n     file << strprintf(\"# Wallet dump created by Bitcoin %s\\n\", CLIENT_BUILD);\n     file << strprintf(\"# * Created on %s\\n\", FormatISO8601DateTime(GetTime()));\n-    const Optional<int> tip_height = locked_chain->getHeight();\n-    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", tip_height.get_value_or(-1), tip_height ? locked_chain->getBlockHash(*tip_height).ToString() : \"(missing block hash)\");\n-    file << strprintf(\"#   mined on %s\\n\", tip_height ? FormatISO8601DateTime(locked_chain->getBlockTime(*tip_height)) : \"(missing block time)\");\n+    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", pwallet->GetLastBlockHeight(), pwallet->GetLastBlockHash().ToString());\n+    int64_t block_time = 0;\n+    CHECK_NONFATAL(pwallet->chain().findBlock(pwallet->GetLastBlockHash(), FoundBlock().time(block_time)));\n+    file << strprintf(\"#   mined on %s\\n\", block_time);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r406891999",
      "id" : 406891999,
      "line" : 796,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg5MTk5OQ==",
      "original_commit_id" : "d83fd9252050b0c44a3d18f23b99bac41aec3865",
      "original_line" : 796,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 54,
      "pull_request_review_id" : 391595669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-10T20:53:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/406891999",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r406896059"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/406896059"
         }
      },
      "author_association" : "MEMBER",
      "body" : "08211e640f\r\n\r\n```suggestion\r\n    virtual bool findAncestorByHeight(const uint256& block_hash, int ancestor_height, const FoundBlock& ancestor_out={}) = 0;\r\n```",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-04-10T18:56:54Z",
      "diff_hunk" : "@@ -146,12 +146,24 @@ class Chain\n     //! or contents.\n     virtual bool findBlock(const uint256& hash, const FoundBlock& block={}) = 0;\n \n+    //! Find ancestor of block at specified height and optionally return\n+    //! ancestor information.\n+    virtual bool findAncestorByHeight(const uint256& block_hash, int ancestor_height, const FoundBlock& ancestor={}) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r406896059",
      "id" : 406896059,
      "line" : 155,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg5NjA1OQ==",
      "original_commit_id" : "08211e640f4432af4a3d67c804ef4a9d0a94edb4",
      "original_line" : 151,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : 80,
      "pull_request_review_id" : 391595669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-10T20:53:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/406896059",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r406896254"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/406896254"
         }
      },
      "author_association" : "MEMBER",
      "body" : "08211e640f\r\n\r\n```suggestion\r\n        const FoundBlock& block2_out={}) = 0;\r\n```\r\n\r\nSame for other args",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-04-10T18:57:25Z",
      "diff_hunk" : "@@ -146,12 +146,24 @@ class Chain\n     //! or contents.\n     virtual bool findBlock(const uint256& hash, const FoundBlock& block={}) = 0;\n \n+    //! Find ancestor of block at specified height and optionally return\n+    //! ancestor information.\n+    virtual bool findAncestorByHeight(const uint256& block_hash, int ancestor_height, const FoundBlock& ancestor={}) = 0;\n+\n     //! Return whether block descends from a specified ancestor, and\n     //! optionally return block information.\n     virtual bool findAncestorByHash(const uint256& block_hash,\n         const uint256& ancestor_hash,\n         const FoundBlock& block={}) = 0;\n \n+    //! Find most recent common ancestor between two blocks and optionally\n+    //! return block information.\n+    virtual bool findCommonAncestor(const uint256& block_hash1,\n+        const uint256& block_hash2,\n+        const FoundBlock& ancestor={},\n+        const FoundBlock& block1={},\n+        const FoundBlock& block2={}) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r406896254",
      "id" : 406896254,
      "line" : 169,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg5NjI1NA==",
      "original_commit_id" : "08211e640f4432af4a3d67c804ef4a9d0a94edb4",
      "original_line" : 165,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "src/interfaces/chain.h",
      "position" : 94,
      "pull_request_review_id" : 391595669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-10T20:53:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/406896254",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r406905419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/406905419"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        if (!pwallet->chain().findCommonAncestor(blockId, pwallet->GetLastBlockHash(), /* ancestor_out */ FoundBlock().height(*height), /* blockId out */ FoundBlock().height(*altheight))) {\r\n```",
      "commit_id" : "710b077f9c0d57a40073ceb9e5568ce37d8cdfe2",
      "created_at" : "2020-04-10T19:22:27Z",
      "diff_hunk" : "@@ -1581,8 +1581,9 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n     uint256 blockId;\n     if (!request.params[0].isNull() && !request.params[0].get_str().empty()) {\n         blockId = ParseHashV(request.params[0], \"blockhash\");\n-        height = locked_chain->findFork(blockId, &altheight);\n-        if (!height) {\n+        height.emplace();\n+        altheight.emplace();\n+        if (!pwallet->chain().findCommonAncestor(blockId, pwallet->GetLastBlockHash(), FoundBlock().height(*height), FoundBlock().height(*altheight))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#discussion_r406905419",
      "id" : 406905419,
      "line" : 1586,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkwNTQxOQ==",
      "original_commit_id" : "08211e640f4432af4a3d67c804ef4a9d0a94edb4",
      "original_line" : 1586,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/rpcwallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 391595669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17954",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-04-10T20:53:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/406905419",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Current review status:\r\n\r\n- [ariard ack](https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-608180917)\r\n- [hebasto ack](https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-607865406)\r\n- [promag pre-rebase ack](https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-605724033)\r\n- [fjahr pre-rebase ack](https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-597674785) \r\n- [luke review](https://github.com/bitcoin/bitcoin/pull/17954#pullrequestreview-361345920)\r\n- [jonatack review](https://github.com/bitcoin/bitcoin/pull/17954#pullrequestreview-361307966)\r\n- [jnewbery review](https://github.com/bitcoin/bitcoin/pull/17954#pullrequestreview-356971621)\r\n",
      "created_at" : "2020-04-10T20:33:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-612204843",
      "id" : 612204843,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMjIwNDg0Mw==",
      "updated_at" : "2020-04-10T20:33:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612204843",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Current review status:\r\n\r\nAcks don't help if the changes introduce a bug :red_circle: :dagger: \r\n\r\n\r\nACK 710b077f9c, except the introduced bug ð¤º\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK 710b077f9c, except the introduced bugs ð¤º\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUitNQv/QXsc/TXCoGbszrOL5HQSrTpPCe9uPGwCUAwd6MCY8ZDmj7JcMRdBeLJ2\r\niuCPgSMmF1d/GxJbMxTr1J4gVp+dVKkMgneTnPauwgoh537JHEmplmROC8vIixot\r\nRxnW6na6vXfj0aEvSoFbhLBvopXdz5HZVUCjS74/o0YZL2tTvlOlAujHjfJqoFh/\r\nn3XkrCSNtcXyIioJUhgnnH1wFaYPPm8LVgqrgclm03R4kW4hW+Zq6ibLMtZdP+9L\r\ngLWVlMGfDu+C6XGp8Nw/Znd9TgKEIMLY0Yf2FUGk5jMMTlqtoAcjoMVXHYo59QVX\r\nU/YAFl15jnTjoGQsZEuB8Ln1KrvkrkOITS8tPVxjFCGQ8niNY+n1FX+hyA4LDitm\r\njpUry9hlMswzBP5EFS6SNZ09bho8mHQP/+rnsJ5s3gF2tj+cZN790H8asy+Ml6sG\r\nrtOT/PLGVV7NezB4YSwcW1uJiKDellWOQrA99b/kjwUHkYr01BIILL6XpBMNELfy\r\n4Qv4y0/D\r\n=u2+w\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `d8d68feef8d9815d83b13f49567f9148ee13f92ef1f16677d1e9c1c98efcf014  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108d8d68feef8d9815d83b13f49567f9148ee13f92ef1f16677d1e9c1c98efcf014f0103452024aa339a93ed75cc1a905cc338b08fff010647cb3242ecc60f413b4d2d3764e668708f1045e90dc5af008f84a96db441942220083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff0106f5ffbbd30e43bc209ef5229adaf01d308f1045e90dc5bf0083f6a6fd17340877f0083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010c4183f36e10cf8ae3e437538ca28775b08f1045e90dc5bf008ac14dfeeff14084f0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6df010ff6c1f9254e0a4195f0941a6833af99708f1045e90dc5cf00808200b863f171ed90083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6d)\r\n\r\n</details>\r\n",
      "created_at" : "2020-04-10T20:53:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-612211962",
      "id" : 612211962,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMjIxMTk2Mg==",
      "updated_at" : "2020-04-10T20:54:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612211962",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Going to merge, so that the ACKs don't go down the drain",
      "created_at" : "2020-04-10T20:55:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-612213041",
      "id" : 612213041,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMjIxMzA0MQ==",
      "updated_at" : "2020-04-10T20:55:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612213041",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "actually there are only two acks for the current state of the pr, so I won't merge for now",
      "created_at" : "2020-04-10T20:57:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-612213643",
      "id" : 612213643,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMjIxMzY0Mw==",
      "updated_at" : "2020-04-10T20:57:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612213643",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 48973402d8, only change is fixing bug ð\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nre-ACK 48973402d8, only change is fixing bug ð\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUg7CAwAgLetCNTTZ3j5/d54CEHvjQSQCdU0xAxJZfq2LvcRgphElGFiWjqAnNYM\r\nQCt734Dk5fMXjqj6PtDz7Py0GO0wiinIXbR+bXdVvPY9v251H/zeXkSkDcC+yLr3\r\n2J40jb1Ec/uYMBay7nmXjOmmNJwq4FATKNEBZonLVAqL7z4K7dbJVqyWksVnaR8O\r\nCEUIsEFLjYQ5oTGzuNDL4mLh59lzi/GpSgnManIyLTCn/eEfcDeyTusTIXGnoOG+\r\n6aCYUjLkFTRlkkmUvD3Ife1gGaM5V5/sJ7KsJbrfz5xrrQfJEUN5NXi2m5CL9vJn\r\n0deZmTC3fpbbplW2VJ8gwT7yOwZ4EJPNlvctWFbDapFDov9hSZHb3IlL73XY8d+K\r\n2zpraFjfiiOA/svrngKAd4Jzuj4ZjMHNNNKzLYr0S/0DNmJTfYVYVtGJ+9l/Itl6\r\nuPbFH1au0xdhAgS36e4FtXx1W3CHx60+thQTHe8z1eQo1Jq0R0Y4qhywF2cDfeHC\r\npR94jjdH\r\n=est8\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `059943689472c2b5db5fc3c5f99636fdd7a6eb8ce233f24227b7d283f6c3d208  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108059943689472c2b5db5fc3c5f99636fdd7a6eb8ce233f24227b7d283f6c3d208f0104ecbf92ac1d6680c592c321ab09c9c0a08fff010227588a3b3e3e70dc03503ca2c667a3c08f1045e9470c1f0080949959e0903259a0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff0108d95b86c500bfa3fe0bebd4d9c95a79108f1045e9470c0f008ff8b31da9ffd03060083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010d1097ca21205877267960b7d3d870c1808f1045e9470c1f008b87e94178b9b0f630083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6df010e70ac66cf6fe75fd7280a01e4810db7108f1045e9470c1f0083ac8d78efe563e260083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n\r\n",
      "created_at" : "2020-04-13T14:01:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-612911124",
      "id" : 612911124,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMjkxMTEyNA==",
      "updated_at" : "2020-04-13T14:01:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612911124",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK 48973402d8bccb673eaeb68b7aa86faa39d3cb8a, reviewed rebase and changes since last review, built and ran tests locally",
      "created_at" : "2020-04-13T15:59:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-612961727",
      "id" : 612961727,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMjk2MTcyNw==",
      "updated_at" : "2020-04-13T15:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612961727",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Coce Review ACK 4897340, only changes are one suggested by last review on more accurate variable naming, human-readable output, args comments in `findCommonAncestor`",
      "created_at" : "2020-04-14T07:42:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-613279605",
      "id" : 613279605,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxMzI3OTYwNQ==",
      "updated_at" : "2020-04-14T07:42:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/613279605",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky \r\n\r\nPost-merge review comment:\r\n\r\n```c++\r\n    bool findCommonAncestor(const uint256& block_hash1, const uint256& block_hash2, const FoundBlock& ancestor_out, const FoundBlock& block1_out, const FoundBlock& block2_out) override\r\n    {\r\n        WAIT_LOCK(cs_main, lock);\r\n        const CBlockIndex* block1 = LookupBlockIndex(block_hash1);\r\n        const CBlockIndex* block2 = LookupBlockIndex(block_hash2);\r\n        const CBlockIndex* ancestor = block1 && block2 ? LastCommonAncestor(block1, block2) : nullptr;\r\n        return FillBlock(ancestor, ancestor_out, lock) & FillBlock(block1, block1_out, lock) & FillBlock(block2, block2_out, lock);\r\n    }\r\n```\r\n\r\nIs the use of `&` instead of `&&` intentional on the `return` line?",
      "created_at" : "2020-04-15T13:54:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-614054884",
      "id" : 614054884,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNDA1NDg4NA==",
      "updated_at" : "2020-04-15T13:54:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614054884",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @ryanofsky\r\n> \r\n> Post-merge review comment:\r\n> \r\n> ```c++\r\n>     bool findCommonAncestor(const uint256& block_hash1, const uint256& block_hash2, const FoundBlock& ancestor_out, const FoundBlock& block1_out, const FoundBlock& block2_out) override\r\n>     {\r\n>         WAIT_LOCK(cs_main, lock);\r\n>         const CBlockIndex* block1 = LookupBlockIndex(block_hash1);\r\n>         const CBlockIndex* block2 = LookupBlockIndex(block_hash2);\r\n>         const CBlockIndex* ancestor = block1 && block2 ? LastCommonAncestor(block1, block2) : nullptr;\r\n>         return FillBlock(ancestor, ancestor_out, lock) & FillBlock(block1, block1_out, lock) & FillBlock(block2, block2_out, lock);\r\n>     }\r\n> ```\r\n> \r\n> Is the use of `&` instead of `&&` intentional on the `return` line?\r\n\r\nYes, because `&&` could short circuit and leave block1_out or block2_out data unfilled",
      "created_at" : "2020-04-15T14:04:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-614060576",
      "id" : 614060576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNDA2MDU3Ng==",
      "updated_at" : "2020-04-15T14:04:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614060576",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky \r\n\r\nYes, I was thinking something along the lines of:\r\n\r\n```c++\r\n    bool findCommonAncestor(const uint256& block_hash1, const uint256& block_hash2, const FoundBlock& ancestor_out, const FoundBlock& block1_out, const FoundBlock& block2_out) override\r\n    {\r\n        WAIT_LOCK(cs_main, lock);\r\n        const CBlockIndex* block1 = LookupBlockIndex(block_hash1);\r\n        const CBlockIndex* block2 = LookupBlockIndex(block_hash2);\r\n        const CBlockIndex* ancestor = block1 && block2 ? LastCommonAncestor(block1, block2) : nullptr;\r\n        const bool fill1 = FillBlock(ancestor, ancestor_out, lock);\r\n        const bool fill2 = FillBlock(block1, block1_out, lock);\r\n        const bool fill3 = FillBlock(block2, block2_out, lock);\r\n        return fill1 && fill2 && fill3;\r\n    }\r\n```\r\n\r\nPerhaps a comment could clarify that this is intentional and not a typo?\r\n\r\nThe current formulation fires off static analyser warnings for all static analysers checking the AutoSAR rules (\"Guidelines for the use of the C++14 language in critical and safety-related systems\") or MISRA C++.\r\n\r\nAutoSAR (\"Guidelines for the use of the C++14 language in critical and safety-related systems\"):\r\n\r\n> Rule M4-5-1 (required, implementation, automated): Expressions with type bool shall not be used as operands to built-in operators other than the assignment operator =, the logical operators &&, ||, !, the equality operators == and ! =, the unary & operator, and the\r\nconditional operator.",
      "created_at" : "2020-04-15T14:16:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-614067097",
      "id" : 614067097,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNDA2NzA5Nw==",
      "updated_at" : "2020-04-15T14:18:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614067097",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Feel free to submit a PR. I'd also encourage writing documentation on how to run these static analysers with bitcoin, or maybe run them automatically on travis",
      "created_at" : "2020-04-15T14:19:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-614068392",
      "id" : 614068392,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNDA2ODM5Mg==",
      "updated_at" : "2020-04-15T14:19:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614068392",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Oh, I didn't see this during review. I read the method as nothing is filled when the ancestor is not found. I.e. I read the `&` as `&&`. Is there any caller that depends on this edge case?\r\n\r\nAbsent any data, I'd slightly prefer the `&&` version.",
      "created_at" : "2020-04-15T14:28:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-614073173",
      "id" : 614073173,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNDA3MzE3Mw==",
      "updated_at" : "2020-04-15T14:28:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614073173",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Pretty sure nothing requires information about other blocks to be filled when a block isn't found in this case. It just seemed nicer for the API to return information than not return it, and trivial to implement with no additional code, so I implemented it.",
      "created_at" : "2020-04-15T14:34:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-614076994",
      "id" : 614076994,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNDA3Njk5NA==",
      "updated_at" : "2020-04-15T14:35:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614076994",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Which one is preferred of these three? :)\r\n\r\nContender 1.\r\n\r\n```diff\r\ndiff --git a/src/interfaces/chain.cpp b/src/interfaces/chain.cpp\r\nindex c8311b298..cd825f870 100644\r\n--- a/src/interfaces/chain.cpp\r\n+++ b/src/interfaces/chain.cpp\r\n@@ -275,7 +275,7 @@ public:\r\n         const CBlockIndex* block1 = LookupBlockIndex(block_hash1);\r\n         const CBlockIndex* block2 = LookupBlockIndex(block_hash2);\r\n         const CBlockIndex* ancestor = block1 && block2 ? LastCommonAncestor(block1, block2) : nullptr;\r\n-        return FillBlock(ancestor, ancestor_out, lock) & FillBlock(block1, block1_out, lock) & FillBlock(block2, block2_out, lock);\r\n+        return FillBlock(ancestor, ancestor_out, lock) && FillBlock(block1, block1_out, lock) && FillBlock(block2, block2_out, lock);\r\n     }\r\n     void findCoins(std::map<COutPoint, Coin>& coins) override { return FindCoins(m_node, coins); }\r\n     double guessVerificationProgress(const uint256& block_hash) override\r\n```\r\n\r\nContender 2.\r\n\r\n```diff\r\ndiff --git a/src/interfaces/chain.cpp b/src/interfaces/chain.cpp\r\nindex c8311b298..ed2142884 100644\r\n--- a/src/interfaces/chain.cpp\r\n+++ b/src/interfaces/chain.cpp\r\n@@ -275,7 +275,10 @@ public:\r\n         const CBlockIndex* block1 = LookupBlockIndex(block_hash1);\r\n         const CBlockIndex* block2 = LookupBlockIndex(block_hash2);\r\n         const CBlockIndex* ancestor = block1 && block2 ? LastCommonAncestor(block1, block2) : nullptr;\r\n-        return FillBlock(ancestor, ancestor_out, lock) & FillBlock(block1, block1_out, lock) & FillBlock(block2, block2_out, lock);\r\n+        const bool ancestor_filled = FillBlock(ancestor, ancestor_out, lock);\r\n+        const bool block1_filled = FillBlock(block1, block1_out, lock);\r\n+        const bool block2_filled = FillBlock(block2, block2_out, lock);\r\n+        return ancestor_filled && block1_filled && block2_filled;\r\n     }\r\n     void findCoins(std::map<COutPoint, Coin>& coins) override { return FindCoins(m_node, coins); }\r\n     double guessVerificationProgress(const uint256& block_hash) override\r\n```\r\n\r\nContender 3.\r\n\r\n```diff\r\n(empty diff)\r\n```",
      "created_at" : "2020-04-15T14:41:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-614081056",
      "id" : 614081056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNDA4MTA1Ng==",
      "updated_at" : "2020-04-15T14:41:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614081056",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "My vote:\r\n\r\n1) 51%\r\n2) 49%\r\n3) 0%",
      "created_at" : "2020-04-15T14:42:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-614081567",
      "id" : 614081567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNDA4MTU2Nw==",
      "updated_at" : "2020-04-15T14:42:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614081567",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I prefer the current code but again please open a separate PR, I don't think it matters very much",
      "created_at" : "2020-04-15T14:43:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-614081789",
      "id" : 614081789,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNDA4MTc4OQ==",
      "updated_at" : "2020-04-15T14:43:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614081789",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "In commit f6da44ccce : \r\n\r\nThe following comment no longer applies and should be fixed up:\r\n\r\n```cpp\r\n            // Get required locks upfront. This avoids the GUI from getting\r\n            // stuck if the core is holding the locks for a longer time - for\r\n            // example, during a wallet rescan.\r\n            //\r\n```",
      "created_at" : "2020-04-19T13:13:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-616131540",
      "id" : 616131540,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNjEzMTU0MA==",
      "updated_at" : "2020-04-19T13:13:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/616131540",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(somehow GitHub didn't submit my review comment in time ^)",
      "created_at" : "2020-04-19T13:14:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17954#issuecomment-616131656",
      "id" : 616131656,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17954",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYxNjEzMTY1Ng==",
      "updated_at" : "2020-04-19T13:14:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/616131656",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
