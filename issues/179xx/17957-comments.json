[
   {
      "author_association" : "MEMBER",
      "body" : "Ping @ryanofsky, as you volunteered to review further PRs in this series. I've made an additional change compared to the old big PR, namely the introduction of FORMATTER_METHODS (and then rewriting SERIALIZE_METHODS in function of FORMATTER_METHODS, which follows pretty naturally).",
      "created_at" : "2020-01-18T15:47:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17957#issuecomment-575910591",
      "id" : 575910591,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17957",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTkxMDU5MQ==",
      "updated_at" : "2020-01-18T15:47:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575910591",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/blob/fd691da3b032e439936672e084b7c49086ec9ebc/src/coins.h#L59-L65\r\n\r\nA signed integer overflow will take place on L62 in case of serialising a coin with a very large `nHeight` value.\r\n\r\nIt wasn't introduced in this PR, but since you're making changes to the coin serialization/deserialization functions here it might be worth fixing in the same go :)\r\n\r\nAlso the `Unserialize` function should probably be adjusted to not accept `block_height`s above `(std::numeric_limits<uint32_t>::max() - 1) / 2`.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/fd691da3b032e439936672e084b7c49086ec9ebc/src/coins.h#L67-L74",
      "created_at" : "2020-01-18T17:27:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17957#issuecomment-575920740",
      "id" : 575920740,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17957",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTkyMDc0MA==",
      "updated_at" : "2020-01-18T17:29:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575920740",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift How about we address that when coins.h itself is updated to the new serialization framework (here it's just adjusting for changes in compression.h)?",
      "created_at" : "2020-01-18T17:37:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17957#issuecomment-575921551",
      "id" : 575921551,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17957",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NTkyMTU1MQ==",
      "updated_at" : "2020-01-18T17:37:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575921551",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369155232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369155232"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Convert compression.h to new serialization framework\" (fd691da3b032e439936672e084b7c49086ec9ebc)\r\n\r\nCan you drop uses of `REF` macro here and below?",
      "commit_id" : "4de934b9b5b4be1bac8fe205f4ee9a79e772dc34",
      "created_at" : "2020-01-21T18:00:16Z",
      "diff_hunk" : "@@ -32,7 +32,7 @@ class TxInUndoSerializer\n             // Required to maintain compatibility with older undo format.\n             ::Serialize(s, (unsigned char)0);\n         }\n-        ::Serialize(s, CTxOutCompressor(REF(txout->out)));\n+        ::Serialize(s, Using<TxOutCompression>(REF(txout->out)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369155232",
      "id" : 369155232,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE1NTIzMg==",
      "original_commit_id" : "fd691da3b032e439936672e084b7c49086ec9ebc",
      "original_position" : 5,
      "path" : "src/undo.h",
      "position" : 5,
      "pull_request_review_id" : 346078349,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957",
      "updated_at" : "2020-01-22T04:30:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369155232",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369160059"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369160059"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"Add FORMATTER_METHODS, similar to SERIALIZE_METHODS, but for formatters\" (ca34c5cba5fbb9b046b074a234f06ecf6ed5d610)\r\n\r\nIt's a little surprising to see SERIALIZE_METHODS depend on FORMATTER_METHODS, but I guess it saves some repetition, and it seems reasonable",
      "commit_id" : "4de934b9b5b4be1bac8fe205f4ee9a79e772dc34",
      "created_at" : "2020-01-21T18:10:45Z",
      "diff_hunk" : "@@ -211,17 +235,15 @@ template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n     void Serialize(Stream& s) const                                                 \\\n     {                                                                               \\\n         static_assert(std::is_same<const cls&, decltype(*this)>::value, \"Serialize type mismatch\"); \\\n-        SerializationOps(*this, s, CSerActionSerialize());                          \\\n+        Ser(s, *this);                                                              \\\n     }                                                                               \\\n     template<typename Stream>                                                       \\\n     void Unserialize(Stream& s)                                                     \\\n     {                                                                               \\\n         static_assert(std::is_same<cls&, decltype(*this)>::value, \"Unserialize type mismatch\"); \\\n-        SerializationOps(*this, s, CSerActionUnserialize());                        \\\n+        Unser(s, *this);                                                            \\\n     }                                                                               \\\n-    template<typename Stream, typename Type, typename Operation>                    \\\n-    static inline void SerializationOps(Type& obj, Stream& s, Operation ser_action) \\\n-\n+    FORMATTER_METHODS(cls, obj)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369160059",
      "id" : 369160059,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE2MDA1OQ==",
      "original_commit_id" : "ca34c5cba5fbb9b046b074a234f06ecf6ed5d610",
      "original_position" : 48,
      "path" : "src/serialize.h",
      "position" : 48,
      "pull_request_review_id" : 346078349,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957",
      "updated_at" : "2020-01-22T04:30:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369160059",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369365864"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369365864"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Indeed, done.",
      "commit_id" : "4de934b9b5b4be1bac8fe205f4ee9a79e772dc34",
      "created_at" : "2020-01-22T04:30:51Z",
      "diff_hunk" : "@@ -32,7 +32,7 @@ class TxInUndoSerializer\n             // Required to maintain compatibility with older undo format.\n             ::Serialize(s, (unsigned char)0);\n         }\n-        ::Serialize(s, CTxOutCompressor(REF(txout->out)));\n+        ::Serialize(s, Using<TxOutCompression>(REF(txout->out)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369365864",
      "id" : 369365864,
      "in_reply_to_id" : 369155232,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM2NTg2NA==",
      "original_commit_id" : "fd691da3b032e439936672e084b7c49086ec9ebc",
      "original_position" : 5,
      "path" : "src/undo.h",
      "position" : 5,
      "pull_request_review_id" : 346340394,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957",
      "updated_at" : "2020-01-22T04:30:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369365864",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369366273"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369366273"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it makes sense: every class gets the ability to function as a formatter. Both FORMATTER_METHODS and SERIALIZE_METHODS help do that; with the first it's for an arbitrary type, with the latter it's for objects of the class it's being defined it. The latter then also hooks up the Serialize/Unserialize functions to the self-formatter.\r\n\r\nDo you suggest documenting this better, or have some other suggestion?",
      "commit_id" : "4de934b9b5b4be1bac8fe205f4ee9a79e772dc34",
      "created_at" : "2020-01-22T04:33:18Z",
      "diff_hunk" : "@@ -211,17 +235,15 @@ template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n     void Serialize(Stream& s) const                                                 \\\n     {                                                                               \\\n         static_assert(std::is_same<const cls&, decltype(*this)>::value, \"Serialize type mismatch\"); \\\n-        SerializationOps(*this, s, CSerActionSerialize());                          \\\n+        Ser(s, *this);                                                              \\\n     }                                                                               \\\n     template<typename Stream>                                                       \\\n     void Unserialize(Stream& s)                                                     \\\n     {                                                                               \\\n         static_assert(std::is_same<cls&, decltype(*this)>::value, \"Unserialize type mismatch\"); \\\n-        SerializationOps(*this, s, CSerActionUnserialize());                        \\\n+        Unser(s, *this);                                                            \\\n     }                                                                               \\\n-    template<typename Stream, typename Type, typename Operation>                    \\\n-    static inline void SerializationOps(Type& obj, Stream& s, Operation ser_action) \\\n-\n+    FORMATTER_METHODS(cls, obj)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369366273",
      "id" : 369366273,
      "in_reply_to_id" : 369160059,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM2NjI3Mw==",
      "original_commit_id" : "ca34c5cba5fbb9b046b074a234f06ecf6ed5d610",
      "original_position" : 48,
      "path" : "src/serialize.h",
      "position" : 48,
      "pull_request_review_id" : 346340872,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957",
      "updated_at" : "2020-01-22T04:33:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369366273",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369612363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369612363"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> > It's a little surprising to see SERIALIZE_METHODS depend on FORMATTER_METHODS, but I guess it saves some repetition, and it seems reasonable\r\n\r\n> I think it makes sense: every class gets the ability to function as a formatter. Both FORMATTER_METHODS and SERIALIZE_METHODS help do that; with the first it's for an arbitrary type, with the latter it's for objects of the class it's being defined it. The latter then also hooks up the Serialize/Unserialize functions to the self-formatter.\r\n\r\nI think it's fine. A formatter class with a formatter methods is a class that can serialize and deserialize objects in a particular format. A serializable type with serialize methods is a class whose instances can serialize and deserialize themselves. I wasn't expecting serializeable objects to now be able to format other objects of the same type, and I couldn't think of a use for that, but I think it's harmless.\r\n\r\n> Do you suggest documenting this better, or have some other suggestion?\r\n\r\nI guess the suggestion would be to keep the new FORMATTER_METHODS macro exactly like you have it here, but revert the changes to the SERIALIZE_METHODS macro, so it isn't affected by this PR. But only if you want to have a stronger distinction between formatter classes and serializable types. I'm fine either way.\r\n",
      "commit_id" : "4de934b9b5b4be1bac8fe205f4ee9a79e772dc34",
      "created_at" : "2020-01-22T15:03:02Z",
      "diff_hunk" : "@@ -211,17 +235,15 @@ template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n     void Serialize(Stream& s) const                                                 \\\n     {                                                                               \\\n         static_assert(std::is_same<const cls&, decltype(*this)>::value, \"Serialize type mismatch\"); \\\n-        SerializationOps(*this, s, CSerActionSerialize());                          \\\n+        Ser(s, *this);                                                              \\\n     }                                                                               \\\n     template<typename Stream>                                                       \\\n     void Unserialize(Stream& s)                                                     \\\n     {                                                                               \\\n         static_assert(std::is_same<cls&, decltype(*this)>::value, \"Unserialize type mismatch\"); \\\n-        SerializationOps(*this, s, CSerActionUnserialize());                        \\\n+        Unser(s, *this);                                                            \\\n     }                                                                               \\\n-    template<typename Stream, typename Type, typename Operation>                    \\\n-    static inline void SerializationOps(Type& obj, Stream& s, Operation ser_action) \\\n-\n+    FORMATTER_METHODS(cls, obj)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17957#discussion_r369612363",
      "id" : 369612363,
      "in_reply_to_id" : 369160059,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxMjM2Mw==",
      "original_commit_id" : "ca34c5cba5fbb9b046b074a234f06ecf6ed5d610",
      "original_position" : 48,
      "path" : "src/serialize.h",
      "position" : 48,
      "pull_request_review_id" : 346655796,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17957",
      "updated_at" : "2020-01-22T15:23:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369612363",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "code review ACK 4de934b9b5b4be1bac8fe205f4ee9a79e772dc34",
      "created_at" : "2020-01-23T15:45:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17957#issuecomment-577739397",
      "id" : 577739397,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17957",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NzczOTM5Nw==",
      "updated_at" : "2020-01-23T15:45:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577739397",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
