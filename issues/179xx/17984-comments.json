[
   {
      "author_association" : "MEMBER",
      "body" : "Rebased, fixed travis, and made the commit hash start with `aaaa` to represent the pain I endured when writing the test.",
      "created_at" : "2020-01-23T14:09:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17984#issuecomment-577697064",
      "id" : 577697064,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17984",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NzY5NzA2NA==",
      "updated_at" : "2020-01-23T14:09:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577697064",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r370386949"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370386949"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this what we really want? If the tx is already in node 0's mempool, wouldn't this always return right away?",
      "commit_id" : "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
      "created_at" : "2020-01-23T22:23:24Z",
      "diff_hunk" : "@@ -83,6 +97,41 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error([\"-whitelist=noban@127.0.0.1:230\"], \"Invalid netmask specified in\", match=ErrorMatch.PARTIAL_REGEX)\n         self.nodes[1].assert_start_raises_init_error([\"-whitebind=noban@127.0.0.1/10\"], \"Cannot resolve -whitebind address\", match=ErrorMatch.PARTIAL_REGEX)\n \n+    def check_tx_relay(self):\n+        block_op_true = self.nodes[0].getblock(self.nodes[0].generatetoaddress(100, ADDRESS_BCRT1_P2WSH_OP_TRUE)[0])\n+        self.sync_all()\n+\n+        self.log.debug(\"Create a connection from a whitelisted wallet that rebroadcasts raw txs\")\n+        # A python mininode is needed to send the raw transaction directly. If a full node was used, it could only\n+        # rebroadcast via the inv-getdata mechanism. However, even for whitelisted connections, a full node would\n+        # currently not request a txid that is already in the mempool.\n+        self.restart_node(1, extra_args=[\"-whitelist=forcerelay@127.0.0.1\"])\n+        p2p_rebroadcast_wallet = self.nodes[1].add_p2p_connection(P2PDataStore())\n+\n+        self.log.debug(\"Send a tx from the wallet initially\")\n+        tx = FromHex(\n+            CTransaction(),\n+            self.nodes[0].createrawtransaction(\n+                inputs=[{\n+                    'txid': block_op_true['tx'][0],\n+                    'vout': 0,\n+                }], outputs=[{\n+                    ADDRESS_BCRT1_P2WSH_OP_TRUE: 5,\n+                }]),\n+        )\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        txid = tx.rehash()\n+\n+        self.log.debug(\"Wait until tx is in node[1]'s mempool\")\n+        p2p_rebroadcast_wallet.send_txs_and_test([tx], self.nodes[1])\n+\n+        self.log.debug(\"Check that node[1] will send the tx to node[0] even though it is already in the mempool\")\n+        connect_nodes(self.nodes[1], 0)\n+        with self.nodes[1].assert_debug_log([\"Force relaying tx {} from whitelisted peer=0\".format(txid)]):\n+            p2p_rebroadcast_wallet.send_txs_and_test([tx], self.nodes[1])\n+            wait_until(lambda: txid in self.nodes[0].getrawmempool())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r370386949",
      "id" : 370386949,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM4Njk0OQ==",
      "original_commit_id" : "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
      "original_position" : 74,
      "path" : "test/functional/p2p_permissions.py",
      "position" : 86,
      "pull_request_review_id" : 347649178,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984",
      "updated_at" : "2020-01-23T22:24:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370386949",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/524761?v=4",
         "events_url" : "https://api.github.com/users/jimmysong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimmysong/followers",
         "following_url" : "https://api.github.com/users/jimmysong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimmysong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimmysong",
         "id" : 524761,
         "login" : "jimmysong",
         "node_id" : "MDQ6VXNlcjUyNDc2MQ==",
         "organizations_url" : "https://api.github.com/users/jimmysong/orgs",
         "received_events_url" : "https://api.github.com/users/jimmysong/received_events",
         "repos_url" : "https://api.github.com/users/jimmysong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimmysong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimmysong"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r370402576"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370402576"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, I think my comment is unclear. It refers to node[1]'s mempool.\r\n\r\nSo node[1] will rebroadcast the tx from the wallet even though it is already in node[1]'s mempool",
      "commit_id" : "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
      "created_at" : "2020-01-23T23:08:02Z",
      "diff_hunk" : "@@ -83,6 +97,41 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error([\"-whitelist=noban@127.0.0.1:230\"], \"Invalid netmask specified in\", match=ErrorMatch.PARTIAL_REGEX)\n         self.nodes[1].assert_start_raises_init_error([\"-whitebind=noban@127.0.0.1/10\"], \"Cannot resolve -whitebind address\", match=ErrorMatch.PARTIAL_REGEX)\n \n+    def check_tx_relay(self):\n+        block_op_true = self.nodes[0].getblock(self.nodes[0].generatetoaddress(100, ADDRESS_BCRT1_P2WSH_OP_TRUE)[0])\n+        self.sync_all()\n+\n+        self.log.debug(\"Create a connection from a whitelisted wallet that rebroadcasts raw txs\")\n+        # A python mininode is needed to send the raw transaction directly. If a full node was used, it could only\n+        # rebroadcast via the inv-getdata mechanism. However, even for whitelisted connections, a full node would\n+        # currently not request a txid that is already in the mempool.\n+        self.restart_node(1, extra_args=[\"-whitelist=forcerelay@127.0.0.1\"])\n+        p2p_rebroadcast_wallet = self.nodes[1].add_p2p_connection(P2PDataStore())\n+\n+        self.log.debug(\"Send a tx from the wallet initially\")\n+        tx = FromHex(\n+            CTransaction(),\n+            self.nodes[0].createrawtransaction(\n+                inputs=[{\n+                    'txid': block_op_true['tx'][0],\n+                    'vout': 0,\n+                }], outputs=[{\n+                    ADDRESS_BCRT1_P2WSH_OP_TRUE: 5,\n+                }]),\n+        )\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        txid = tx.rehash()\n+\n+        self.log.debug(\"Wait until tx is in node[1]'s mempool\")\n+        p2p_rebroadcast_wallet.send_txs_and_test([tx], self.nodes[1])\n+\n+        self.log.debug(\"Check that node[1] will send the tx to node[0] even though it is already in the mempool\")\n+        connect_nodes(self.nodes[1], 0)\n+        with self.nodes[1].assert_debug_log([\"Force relaying tx {} from whitelisted peer=0\".format(txid)]):\n+            p2p_rebroadcast_wallet.send_txs_and_test([tx], self.nodes[1])\n+            wait_until(lambda: txid in self.nodes[0].getrawmempool())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r370402576",
      "id" : 370402576,
      "in_reply_to_id" : 370386949,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQwMjU3Ng==",
      "original_commit_id" : "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
      "original_position" : 74,
      "path" : "test/functional/p2p_permissions.py",
      "position" : 86,
      "pull_request_review_id" : 347668184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984",
      "updated_at" : "2020-01-23T23:08:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370402576",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r370403445"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370403445"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ah! that makes a lot more sense.",
      "commit_id" : "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
      "created_at" : "2020-01-23T23:10:50Z",
      "diff_hunk" : "@@ -83,6 +97,41 @@ def run_test(self):\n         self.nodes[1].assert_start_raises_init_error([\"-whitelist=noban@127.0.0.1:230\"], \"Invalid netmask specified in\", match=ErrorMatch.PARTIAL_REGEX)\n         self.nodes[1].assert_start_raises_init_error([\"-whitebind=noban@127.0.0.1/10\"], \"Cannot resolve -whitebind address\", match=ErrorMatch.PARTIAL_REGEX)\n \n+    def check_tx_relay(self):\n+        block_op_true = self.nodes[0].getblock(self.nodes[0].generatetoaddress(100, ADDRESS_BCRT1_P2WSH_OP_TRUE)[0])\n+        self.sync_all()\n+\n+        self.log.debug(\"Create a connection from a whitelisted wallet that rebroadcasts raw txs\")\n+        # A python mininode is needed to send the raw transaction directly. If a full node was used, it could only\n+        # rebroadcast via the inv-getdata mechanism. However, even for whitelisted connections, a full node would\n+        # currently not request a txid that is already in the mempool.\n+        self.restart_node(1, extra_args=[\"-whitelist=forcerelay@127.0.0.1\"])\n+        p2p_rebroadcast_wallet = self.nodes[1].add_p2p_connection(P2PDataStore())\n+\n+        self.log.debug(\"Send a tx from the wallet initially\")\n+        tx = FromHex(\n+            CTransaction(),\n+            self.nodes[0].createrawtransaction(\n+                inputs=[{\n+                    'txid': block_op_true['tx'][0],\n+                    'vout': 0,\n+                }], outputs=[{\n+                    ADDRESS_BCRT1_P2WSH_OP_TRUE: 5,\n+                }]),\n+        )\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        txid = tx.rehash()\n+\n+        self.log.debug(\"Wait until tx is in node[1]'s mempool\")\n+        p2p_rebroadcast_wallet.send_txs_and_test([tx], self.nodes[1])\n+\n+        self.log.debug(\"Check that node[1] will send the tx to node[0] even though it is already in the mempool\")\n+        connect_nodes(self.nodes[1], 0)\n+        with self.nodes[1].assert_debug_log([\"Force relaying tx {} from whitelisted peer=0\".format(txid)]):\n+            p2p_rebroadcast_wallet.send_txs_and_test([tx], self.nodes[1])\n+            wait_until(lambda: txid in self.nodes[0].getrawmempool())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r370403445",
      "id" : 370403445,
      "in_reply_to_id" : 370386949,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQwMzQ0NQ==",
      "original_commit_id" : "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
      "original_position" : 74,
      "path" : "test/functional/p2p_permissions.py",
      "position" : 86,
      "pull_request_review_id" : 347669251,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984",
      "updated_at" : "2020-01-23T23:10:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370403445",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/524761?v=4",
         "events_url" : "https://api.github.com/users/jimmysong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimmysong/followers",
         "following_url" : "https://api.github.com/users/jimmysong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimmysong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimmysong",
         "id" : 524761,
         "login" : "jimmysong",
         "node_id" : "MDQ6VXNlcjUyNDc2MQ==",
         "organizations_url" : "https://api.github.com/users/jimmysong/orgs",
         "received_events_url" : "https://api.github.com/users/jimmysong/received_events",
         "repos_url" : "https://api.github.com/users/jimmysong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimmysong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimmysong"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r511004321"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511004321"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "how did you create this address? just curios :smile: ",
      "commit_id" : "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
      "created_at" : "2020-10-23T16:33:54Z",
      "diff_hunk" : "@@ -13,6 +13,8 @@\n \n ADDRESS_BCRT1_UNSPENDABLE = 'bcrt1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3xueyj'\n ADDRESS_BCRT1_UNSPENDABLE_DESCRIPTOR = 'addr(bcrt1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3xueyj)#juyq9d97'\n+# Coins sent to this address can be spent with a witness stack of just OP_TRUE\n+ADDRESS_BCRT1_P2WSH_OP_TRUE = 'bcrt1qft5p2uhsdcdc3l2ua4ap5qqfg4pjaqlp250x7us7a8qqhrxrxfsqseac85'",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17984#discussion_r511004321",
      "id" : 511004321,
      "line" : 17,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAwNDMyMQ==",
      "original_commit_id" : "aaaae4d0ebd5ef34d81997a73ab9839ba7b4b9e4",
      "original_line" : 17,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/address.py",
      "position" : 5,
      "pull_request_review_id" : 515829607,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17984",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-10-23T16:33:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511004321",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/60179867?v=4",
         "events_url" : "https://api.github.com/users/decryp2kanon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/decryp2kanon/followers",
         "following_url" : "https://api.github.com/users/decryp2kanon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/decryp2kanon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/decryp2kanon",
         "id" : 60179867,
         "login" : "decryp2kanon",
         "node_id" : "MDQ6VXNlcjYwMTc5ODY3",
         "organizations_url" : "https://api.github.com/users/decryp2kanon/orgs",
         "received_events_url" : "https://api.github.com/users/decryp2kanon/received_events",
         "repos_url" : "https://api.github.com/users/decryp2kanon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/decryp2kanon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/decryp2kanon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/decryp2kanon"
      }
   }
]
