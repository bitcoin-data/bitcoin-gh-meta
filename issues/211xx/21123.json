{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "### Motivation\r\n\r\nDevelopers are supposed to follow [Coding style](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-general). However, [from time to time](https://github.com/bitcoin/bitcoin/pull/21075#discussion_r570125634) a PR is created and then its author is asked to change tabs to spaces, for example.\r\n\r\nIntroducing an `.editorconfig` file can mitigate these formatting issues.\r\n\r\n### User story\r\n\r\nA contributor wants to create a new PR. She clones Bitcoin Core repo, opens her editor, the editor loads `.editorconfig` rules and writes her patch with correct formatting rules. Less Coding Style issues is then discovered in the PR review process and thus less CI runs are needed.\r\n\r\n### What is EditorConfig file?\r\n\r\nhttps://editorconfig.org provides very well and concise explanation:\r\n\r\n> What is EditorConfig?\r\n\r\n> EditorConfig helps maintain consistent coding styles for multiple developers working on the same project across various editors and IDEs. The EditorConfig project consists of a file format for defining coding styles and a collection of text editor plugins that enable editors to read the file format and adhere to defined styles. EditorConfig files are easily readable and they work nicely with version control systems.\r\n\r\n### Support\r\n\r\n`.editorconfig` is supported by many IDEs and text editors. Sometimes, the support is out of the box and sometimes a plugin is needed. However, for example, VS Code detects `.editorconfig` presence and automatically offers you to install the missing plugin.\r\n\r\nSee https://editorconfig.org/#pre-installed for details on support. To name a few:\r\n\r\n* Visual Studio (out of the box) \r\n* VS Code (plugin)\r\n* JetBrains IDEs (IntelliJ IDEA, PyCharm, etc.) (out of the box)\r\n* Sublime Text (plugin)\r\n* Emacs (plugin)\r\n* Vim (plugin)\r\n\r\nNot supported (AFAIK):\r\n\r\n* [mcedit](https://github.com/MidnightCommander/mc)\r\n\r\n### My editor does not support `.editorconfig`\r\n\r\nThen nothing really changes for you.\r\n\r\n### `.editorconfig` vs `.clang-format`\r\n\r\nAs explained [here](https://devblogs.microsoft.com/cppblog/clangformat-support-in-visual-studio-2017-15-7-preview-1/):\r\n\r\n> Note that Visual Studio also supports EditorConfig, which works in a similar way. ClangFormat, however, has a [much larger variety of style options](https://clang.llvm.org/docs/ClangFormatStyleOptions.html) than EditorConfig, including some very C++ specific rules that can be set, and it is already used by C++ developers today.\r\n\r\nHaving both `.editorconfig` and `.clang-format` in a project, may not always work correctly though, I think. As some editors may have a plugin for `.editorconfig` and a plugin for `clang-formatter` which may not work correctly in unison. In VS Code & Visual Studio EditorConfig [takes precedence over other settings](https://github.com/MicrosoftDocs/visualstudio-docs/blob/master/docs/ide/cpp-editorconfig-properties.md#c-editorconfig-formatting-conventions).\r\n\r\n### Possible issues\r\n\r\nYour editor may change formatting for some 3rd party library if you edit the code. A solution for this would be to make EditorConfig rules more specific (include only certain paths). I'm not sure if it is an issue in practice.\r\n\r\n### Testing\r\n\r\nAdd some trailing whitespace to a Python file and save the file. You should see that the trailing whitespace is removed.\r\n\r\n### Possible future work\r\n\r\nIt would be great to define rules for Makefiles. This would be good start:\r\n\r\n```\r\n# Makefiles\r\n[Makefile,*.am]\r\nindent_style = tab\r\ntrim_trailing_whitespace = true\r\n```\r\n\r\nI don't know makefiles in this project good enough to propose something reasonable. If this PR is well received, it would be great to add it in this PR.\r\n\r\nAlso, there are actually many different file extensions and so the proposed `.editorconfig` file can be probably improved very much:\r\n\r\n```powershell\r\nGet-ChildItem -Recurse | % {$_.Extension.ToLower()} | sort | unique\r\n```\r\n\r\n<details><summary>Click to see the output</summary>\r\n\r\n\r\n```\r\n.1\r\n.ac\r\n.adoc\r\n.am\r\n.bash-completion\r\n.bat\r\n.bmp\r\n.c\r\n.cc\r\n.cert\r\n.cfg\r\n.clang_complete\r\n.clang-format\r\n.cmake\r\n.cmd\r\n.cnf\r\n.com\r\n.conf\r\n.cpp\r\n.css\r\n.csv\r\n.doxyfile\r\n.dtd\r\n.empty\r\n.exe\r\n.exp\r\n.gci\r\n.gitattributes\r\n.github\r\n.gitignore\r\n.gitmodules\r\n.guess\r\n.h\r\n.hex\r\n.hpp\r\n.html\r\n.icns\r\n.ico\r\n.idb\r\n.ilk\r\n.in\r\n.include\r\n.ini\r\n.init\r\n.ipp\r\n.jam\r\n.js\r\n.json\r\n.lastbuildstate\r\n.lib\r\n.list\r\n.log\r\n.m\r\n.m4\r\n.md\r\n.mk\r\n.mm\r\n.moc\r\n.obj\r\n.openrc\r\n.openrcconf\r\n.patch\r\n.pc\r\n.pdb\r\n.pl\r\n.plist\r\n.png\r\n.po\r\n.pro\r\n.py\r\n.python-version\r\n.qbk\r\n.qm\r\n.qml\r\n.qrc\r\n.raw\r\n.rb\r\n.rc\r\n.recipe\r\n.res\r\n.s\r\n.sage\r\n.sass\r\n.scm\r\n.scss\r\n.service\r\n.sgml\r\n.sh\r\n.sln\r\n.spec\r\n.sub\r\n.supp\r\n.svg\r\n.targets\r\n.td\r\n.tlog\r\n.ts\r\n.tx\r\n.txt\r\n.ui\r\n.user\r\n.v2\r\n.vcxproj\r\n.verbatim\r\n.vscode\r\n.xml\r\n.xpm\r\n.xsl\r\n.y\r\n.yapf\r\n.yml\r\n.yy\r\n```\r\n\r\n</details>\r\n\r\nFixes #21092",
   "closed_at" : "2021-02-10T13:31:14Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
      "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
      "followers_url" : "https://api.github.com/users/laanwj/followers",
      "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/laanwj",
      "id" : 126646,
      "login" : "laanwj",
      "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
      "organizations_url" : "https://api.github.com/users/laanwj/orgs",
      "received_events_url" : "https://api.github.com/users/laanwj/received_events",
      "repos_url" : "https://api.github.com/users/laanwj/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/laanwj"
   },
   "comments" : 8,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21123/comments",
   "created_at" : "2021-02-09T08:07:53Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21123/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/21123",
   "id" : 804315193,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21123/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0NTcwMTA0ODE4",
   "number" : 21123,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/21123.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/21123",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/21123.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/21123"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "code style: Add EditorConfig file",
   "updated_at" : "2021-02-10T13:48:30Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/21123",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/58662979?v=4",
      "events_url" : "https://api.github.com/users/kiminuo/events{/privacy}",
      "followers_url" : "https://api.github.com/users/kiminuo/followers",
      "following_url" : "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url" : "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/kiminuo",
      "id" : 58662979,
      "login" : "kiminuo",
      "node_id" : "MDQ6VXNlcjU4NjYyOTc5",
      "organizations_url" : "https://api.github.com/users/kiminuo/orgs",
      "received_events_url" : "https://api.github.com/users/kiminuo/received_events",
      "repos_url" : "https://api.github.com/users/kiminuo/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/kiminuo/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/kiminuo"
   }
}
