[
   {
      "author_association" : "NONE",
      "body" : "@dkrupp @gyorb",
      "created_at" : "2019-11-12T15:58:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17454#issuecomment-552957339",
      "id" : 552957339,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17454",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1Mjk1NzMzOQ==",
      "updated_at" : "2019-11-12T15:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552957339",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5887427?v=4",
         "events_url" : "https://api.github.com/users/martong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martong/followers",
         "following_url" : "https://api.github.com/users/martong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martong",
         "id" : 5887427,
         "login" : "martong",
         "node_id" : "MDQ6VXNlcjU4ODc0Mjc=",
         "organizations_url" : "https://api.github.com/users/martong/orgs",
         "received_events_url" : "https://api.github.com/users/martong/received_events",
         "repos_url" : "https://api.github.com/users/martong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martong"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Oh, interesting!",
      "created_at" : "2019-11-12T16:19:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17454#issuecomment-552967192",
      "id" : 552967192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17454",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1Mjk2NzE5Mg==",
      "updated_at" : "2019-11-12T16:19:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552967192",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@martong That is some excellent news! Very happy to hear this!\r\n\r\nCan you post the 0.18.1 warnings here or in a gist too? :)",
      "created_at" : "2019-11-12T16:24:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17454#issuecomment-552969583",
      "id" : 552969583,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17454",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1Mjk2OTU4Mw==",
      "updated_at" : "2019-11-12T16:24:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552969583",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ignoring the warnings in third party libraries, just some notes about the remaining ones in our code:\r\n\r\n* `chainActive.Tip()` is generally assumed to be not null (at the very least it should point to the genesis block). The genesis block initialization happens in init.cpp, but might be hard for CTU to pick up.\r\n* `nMinerConfirmationWindow` is never assigned a value of zero, so divide by zero can't really happen. (See `$ git grep 'nMinerConfirmationWindow ='`)\r\n* Haven't looked at the `pBestIndex` null dereference in net processing.",
      "created_at" : "2019-11-12T16:50:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17454#issuecomment-552981674",
      "id" : 552981674,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17454",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1Mjk4MTY3NA==",
      "updated_at" : "2019-11-12T16:50:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552981674",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> @martong That is some excellent news! Very happy to hear this!\r\n> \r\n> Can you post the 0.18.1 warnings here or in a gist too? :)\r\n\r\nYes, I hope this table is readable. However, to understand the path sensitive warning, one must take a look at the path in the web browser anyway.\r\n\r\n```\r\nFile                                                                                                                      | Checker                            | Severity | Message                                                                                                                 | Bug path length | Review status | Detection status\r\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n/usr/include/boost/date_time/int_adapter.hpp @ 347                                                                        | core.DivideZero                    | HIGH     | Division by zero                                                                                                        |              15 | UNREVIEWED    | NEW\r\n/usr/include/boost/concept/detail/general.hpp @ 39                                                                        | core.CallAndMessage                | HIGH     | Called C++ object pointer is null                                                                                       |               1 | UNREVIEWED    | NEW\r\n/usr/include/boost/concept/detail/general.hpp @ 47                                                                        | core.CallAndMessage                | HIGH     | Called C++ object pointer is null                                                                                       |               1 | UNREVIEWED    | NEW\r\n/usr/include/boost/concept/usage.hpp @ 16                                                                                 | core.CallAndMessage                | HIGH     | Called C++ object pointer is null                                                                                       |               1 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/net_processing.cpp @ 3480             | core.CallAndMessage                | HIGH     | Called C++ object pointer is null                                                                                       |              55 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/leveldb/db/memtable.cc @ 18           | core.CallAndMessage                | HIGH     | 2nd function call argument is an uninitialized value                                                                    |              20 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/validation.cpp @ 4075                 | core.NullDereference               | HIGH     | Access to field 'nHeight' results in a dereference of a null pointer (loaded from variable 'pindex')                    |              17 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/versionbits.cpp @ 109                 | core.DivideZero                    | HIGH     | Division by zero                                                                                                        |              44 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/crypto/common.h @ 66                  | core.NonNullParamChecker           | HIGH     | Null pointer passed to 2nd parameter expecting 'nonnull'                                                                |              15 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/secp256k1/src/util.h @ 24             | core.NullDereference               | HIGH     | Access to field 'fn' results in a dereference of a null pointer (loaded from variable 'cb')                             |               6 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/secp256k1/src/ecmult_impl.h @ 217     | core.NullDereference               | HIGH     | Access to field 'pre_g' results in a dereference of a null pointer (loaded from variable 'ctx')                         |               5 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/secp256k1/src/ecmult_gen_impl.h @ 95  | core.NullDereference               | HIGH     | Access to field 'prec' results in a dereference of a null pointer (loaded from variable 'ctx')                          |               5 | UNREVIEWED    | NEW\r\n/usr/include/boost/multi_index/detail/ord_index_node.hpp @ 306                                                            | core.CallAndMessage                | HIGH     | Called C++ object pointer is null                                                                                       |              16 | UNREVIEWED    | NEW\r\n/usr/include/boost/multi_index/detail/ord_index_node.hpp @ 312                                                            | core.CallAndMessage                | HIGH     | Called C++ object pointer is null                                                                                       |              17 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/validation.cpp @ 4075                 | core.NullDereference               | HIGH     | Access to field 'nHeight' results in a dereference of a null pointer (loaded from variable 'pindex')                    |              13 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/leveldb/db/memtable.cc @ 18           | core.CallAndMessage                | HIGH     | 2nd function call argument is an uninitialized value                                                                    |              15 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/leveldb/util/crc32c.cc @ 333          | core.UndefinedBinaryOperatorResult | MEDIUM   | The right operand of '^' is a garbage value                                                                             |              30 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/secp256k1/src/util.h @ 72             | optin.portability.UnixAPI          | MEDIUM   | Call to 'malloc' has an allocation size of 0 bytes                                                                      |               6 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/secp256k1/src/field_5x52_impl.h @ 377 | core.UndefinedBinaryOperatorResult | MEDIUM   | The right operand of '-' is a garbage value                                                                             |              11 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/secp256k1/src/field_5x52_impl.h @ 390 | core.uninitialized.Assign          | MEDIUM   | The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage       |              16 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/secp256k1/src/field_5x52_impl.h @ 406 | core.uninitialized.Assign          | MEDIUM   | Assigned value is garbage or undefined                                                                                  |              11 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/secp256k1/src/field_5x52_impl.h @ 406 | core.uninitialized.Assign          | MEDIUM   | The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage       |              25 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/secp256k1/src/scalar_4x64_impl.h @ 60 | core.UndefinedBinaryOperatorResult | MEDIUM   | The left operand of '<' is a garbage value                                                                              |               7 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/leveldb/util/crc32c.cc @ 333          | core.UndefinedBinaryOperatorResult | MEDIUM   | The right operand of '^' is a garbage value                                                                             |              27 | UNREVIEWED    | NEW\r\n/usr/include/c++/6/bits/atomic_base.h @ 188                                                                               | deadcode.DeadStores                | LOW      | Value stored to '__b' during its initialization is never read                                                           |               1 | UNREVIEWED    | NEW\r\n/usr/include/c++/6/bits/atomic_base.h @ 199                                                                               | deadcode.DeadStores                | LOW      | Value stored to '__b' during its initialization is never read                                                           |               1 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/netbase.cpp @ 350                     | deadcode.DeadStores                | LOW      | Although the value stored to 'recvr' is used in the enclosing expression, the value is never actually read from 'recvr' |               1 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/netbase.cpp @ 373                     | deadcode.DeadStores                | LOW      | Although the value stored to 'recvr' is used in the enclosing expression, the value is never actually read from 'recvr' |               1 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/netbase.cpp @ 439                     | deadcode.DeadStores                | LOW      | Although the value stored to 'recvr' is used in the enclosing expression, the value is never actually read from 'recvr' |               1 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/secp256k1/src/ecmult_gen_impl.h @ 153 | deadcode.DeadStores                | LOW      | Value stored to 'bits' is never read                                                                                    |               1 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/crypto/sha256.cpp @ 598               | deadcode.DeadStores                | LOW      | Value stored to 'enabled_avx' is never read                                                                             |               1 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/crypto/sha256.cpp @ 602               | deadcode.DeadStores                | LOW      | Value stored to 'have_avx2' is never read                                                                               |               1 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/crypto/sha256.cpp @ 603               | deadcode.DeadStores                | LOW      | Value stored to 'have_shani' is never read                                                                              |               1 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/leveldb/db/log_reader.cc @ 42         | deadcode.DeadStores                | LOW      | Value stored to 'offset_in_block' is never read                                                                         |               1 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/leveldb/db/log_reader.cc @ 103        | deadcode.DeadStores                | LOW      | Value stored to 'in_fragmented_record' is never read                                                                    |               1 | UNREVIEWED    | NEW\r\n/var/jenkins_home/workspace/ctu_pipeline_clang-master-monorepo/projects/Bitcoin/src/leveldb/db/log_reader.cc @ 121        | deadcode.DeadStores                | LOW      | Value stored to 'in_fragmented_record' is never read                                                                    |               1 | UNREVIEWED    | NEW\r\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n```\r\n",
      "created_at" : "2019-11-12T17:11:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17454#issuecomment-552991857",
      "id" : 552991857,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17454",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1Mjk5MTg1Nw==",
      "updated_at" : "2019-11-12T17:11:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552991857",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5887427?v=4",
         "events_url" : "https://api.github.com/users/martong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martong/followers",
         "following_url" : "https://api.github.com/users/martong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martong",
         "id" : 5887427,
         "login" : "martong",
         "node_id" : "MDQ6VXNlcjU4ODc0Mjc=",
         "organizations_url" : "https://api.github.com/users/martong/orgs",
         "received_events_url" : "https://api.github.com/users/martong/received_events",
         "repos_url" : "https://api.github.com/users/martong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martong"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Ignoring the warnings in third party libraries, just some notes about the remaining ones in our code:\r\n> \r\n> * `chainActive.Tip()` is generally assumed to be not null (at the very least it should point to the genesis block). The genesis block initialization happens in init.cpp, but might be hard for CTU to pick up.\r\n> * `nMinerConfirmationWindow` is never assigned a value of zero, so divide by zero can't really happen. (See `$ git grep 'nMinerConfirmationWindow ='`)\r\n> * Haven't looked at the `pBestIndex` null dereference in net processing.\r\n\r\nThank you for your feedback. We are going to investigate the false positive results and we are going to find out if we can improve the analyzer to avoid similar false positives in the future.",
      "created_at" : "2019-11-12T19:34:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17454#issuecomment-553078651",
      "id" : 553078651,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17454",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MzA3ODY1MQ==",
      "updated_at" : "2019-11-12T19:34:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/553078651",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5887427?v=4",
         "events_url" : "https://api.github.com/users/martong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martong/followers",
         "following_url" : "https://api.github.com/users/martong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martong",
         "id" : 5887427,
         "login" : "martong",
         "node_id" : "MDQ6VXNlcjU4ODc0Mjc=",
         "organizations_url" : "https://api.github.com/users/martong/orgs",
         "received_events_url" : "https://api.github.com/users/martong/received_events",
         "repos_url" : "https://api.github.com/users/martong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martong"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "For reference, the check that the tip is never nullptr (aka at least the genesis block) in init is:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/6d4b97cb1c21f9534b01fad037837b7966b82190/src/init.cpp#L1690-L1697\r\n\r\nI'd be surprised if CTU could be taught to understand that, as it requires understanding our threading model.",
      "created_at" : "2019-11-12T19:43:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17454#issuecomment-553082207",
      "id" : 553082207,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17454",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MzA4MjIwNw==",
      "updated_at" : "2019-11-12T19:43:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/553082207",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@martong Thanks for sharing the results! Would you be able re-run the analysis with the following patch applied to see if any warnings remain (ignoring third party libraries)? :)\r\n\r\nNote that the diff is against current `master` and not `0.18.1`.\r\n\r\n```diff\r\ndiff --git a/src/crypto/common.h b/src/crypto/common.h\r\nindex e7bb020a1..a5d45b4eb 100644\r\n--- a/src/crypto/common.h\r\n+++ b/src/crypto/common.h\r\n@@ -9,6 +9,7 @@\r\n #include <config/bitcoin-config.h>\r\n #endif\r\n \r\n+#include <cassert>\r\n #include <stdint.h>\r\n #include <string.h>\r\n \r\n@@ -63,6 +64,7 @@ uint32_t static inline ReadBE32(const unsigned char* ptr)\r\n uint64_t static inline ReadBE64(const unsigned char* ptr)\r\n {\r\n     uint64_t x;\r\n+    assert(ptr);\r\n     memcpy((char*)&x, ptr, 8);\r\n     return be64toh(x);\r\n }\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex f42a26ca3..fb16b96e9 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -3715,6 +3715,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\r\n                     bool fGotBlockFromCache = false;\r\n                     {\r\n                         LOCK(cs_most_recent_block);\r\n+                        assert(pBestIndex);\r\n                         if (most_recent_block_hash == pBestIndex->GetBlockHash()) {\r\n                             if (state.fWantsCmpctWitness || !fWitnessesPresentInMostRecentCompactBlock)\r\n                                 connman->PushMessage(pto, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, *most_recent_compact_block));\r\ndiff --git a/src/netbase.cpp b/src/netbase.cpp\r\nindex d1cde8c40..6d1f3a097 100644\r\n--- a/src/netbase.cpp\r\n+++ b/src/netbase.cpp\r\n@@ -422,7 +422,6 @@ static std::string Socks5ErrorString(uint8_t err)\r\n  */\r\n static bool Socks5(const std::string& strDest, int port, const ProxyCredentials *auth, const SOCKET& hSocket)\r\n {\r\n-    IntrRecvError recvr;\r\n     LogPrint(BCLog::NET, \"SOCKS5 connecting %s\\n\", strDest);\r\n     if (strDest.size() > 255) {\r\n         return error(\"Hostname too long\");\r\n@@ -443,7 +442,7 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\r\n         return error(\"Error sending to proxy\");\r\n     }\r\n     uint8_t pchRet1[2];\r\n-    if ((recvr = InterruptibleRecv(pchRet1, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\r\n+    if (InterruptibleRecv(pchRet1, 2, SOCKS5_RECV_TIMEOUT, hSocket) != IntrRecvError::OK) {\r\n         LogPrintf(\"Socks5() connect to %s:%d failed: InterruptibleRecv() timeout or other failure\\n\", strDest, port);\r\n         return false;\r\n     }\r\n@@ -466,7 +465,7 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\r\n         }\r\n         LogPrint(BCLog::PROXY, \"SOCKS5 sending proxy authentication %s:%s\\n\", auth->username, auth->password);\r\n         uint8_t pchRetA[2];\r\n-        if ((recvr = InterruptibleRecv(pchRetA, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\r\n+        if (InterruptibleRecv(pchRetA, 2, SOCKS5_RECV_TIMEOUT, hSocket) != IntrRecvError::OK) {\r\n             return error(\"Error reading proxy authentication response\");\r\n         }\r\n         if (pchRetA[0] != 0x01 || pchRetA[1] != 0x00) {\r\n@@ -491,6 +490,7 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\r\n         return error(\"Error sending to proxy\");\r\n     }\r\n     uint8_t pchRet2[4];\r\n+    IntrRecvError recvr;\r\n     if ((recvr = InterruptibleRecv(pchRet2, 4, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\r\n         if (recvr == IntrRecvError::Timeout) {\r\n             /* If a timeout happens here, this effectively means we timed out while connecting\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex cc7687ae0..31f433202 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -4259,6 +4259,7 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\r\n         return error(\"VerifyDB(): *** coin database inconsistencies found (last %i blocks, %i good transactions before that)\\n\", ::ChainActive().Height() - pindexFailure->nHeight + 1, nGoodTransactions);\r\n \r\n     // store block count as we move pindex at check level >= 4\r\n+    assert(pindex);\r\n     int block_count = ::ChainActive().Height() - pindex->nHeight;\r\n \r\n     // check level 4: try reconnecting blocks\r\ndiff --git a/src/versionbits.cpp b/src/versionbits.cpp\r\nindex 2285579cd..d2b9cb240 100644\r\n--- a/src/versionbits.cpp\r\n+++ b/src/versionbits.cpp\r\n@@ -105,6 +105,7 @@ BIP9Stats AbstractThresholdConditionChecker::GetStateStatisticsFor(const CBlockI\r\n         return stats;\r\n \r\n     // Find beginning of period\r\n+    assert(stats.period != 0);\r\n     const CBlockIndex* pindexEndOfPrevPeriod = pindex->GetAncestor(pindex->nHeight - ((pindex->nHeight + 1) % stats.period));\r\n     stats.elapsed = pindex->nHeight - pindexEndOfPrevPeriod->nHeight;\r\n```",
      "created_at" : "2019-11-12T20:30:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17454#issuecomment-553100712",
      "id" : 553100712,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17454",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MzEwMDcxMg==",
      "updated_at" : "2019-11-12T20:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/553100712",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@practicalswift \r\nI have applied your patch on v0.18.1 and it solves some of the warnings.\r\nI've uploaded the results into a [new run](http://codechecker-demo.eastus.cloudapp.azure.com/Default/#run=Bitcoin_v0.18.1_CTU.patched&review-status=Unreviewed&review-status=Confirmed&detection-status=New&detection-status=Reopened&detection-status=Unresolved&tab=Bitcoin_v0.18.1_CTU.patched).\r\nYou can diff the old and the patched results in the gui, here is the [direct link of the diff view](http://codechecker-demo.eastus.cloudapp.azure.com/Default/#run=Bitcoin_v0.18.1_CTU.patched&newcheck=Bitcoin_v0.18.1_CTU&review-status=Unreviewed&review-status=Confirmed&detection-status=New&detection-status=Reopened&detection-status=Unresolved&tab=Bitcoin_v0.18.1_CTU.patched_diff_Bitcoin_v0.18.1_CTU) which shows the fixed warnings.\r\n(Actually, I could have uploaded the results of the patched code to the same old run, then we'd seen that the bugs had changed status to solved.)",
      "created_at" : "2019-11-14T15:52:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17454#issuecomment-553949803",
      "id" : 553949803,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17454",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1Mzk0OTgwMw==",
      "updated_at" : "2019-11-14T15:52:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/553949803",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5887427?v=4",
         "events_url" : "https://api.github.com/users/martong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martong/followers",
         "following_url" : "https://api.github.com/users/martong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martong",
         "id" : 5887427,
         "login" : "martong",
         "node_id" : "MDQ6VXNlcjU4ODc0Mjc=",
         "organizations_url" : "https://api.github.com/users/martong/orgs",
         "received_events_url" : "https://api.github.com/users/martong/received_events",
         "repos_url" : "https://api.github.com/users/martong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martong"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Bonus:\r\nI've made an [analysis with the \"sensitive\" checkers turned on](http://codechecker-demo.eastus.cloudapp.azure.com/Default/#run=Bitcoin_v0.18.1_CTU_sensitive&review-status=Unreviewed&review-status=Confirmed&detection-status=New&detection-status=Reopened&detection-status=Unresolved&tab=Bitcoin_v0.18.1_CTU_sensitive).\r\nThese checkers are \"alpha\" checkers, meaning the false positive ratio can be higher.\r\n\r\nAnyway, I encourage you guys to experiment with [CodeChecker](https://github.com/Ericsson/codechecker) and with [CTU Clang static analyzer](https://clang.llvm.org/docs/analyzer/user-docs/CrossTranslationUnit.html), both are free and open software. You could try the different checker profiles, you could mark warnings as false positives if you had your own CodeChecker server running. \r\nAnd the false positive markups would be good feedback for us static analyzer devs (also note that assertions can very well guide the analyzer to avoid false assumptions).",
      "created_at" : "2019-11-14T16:01:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17454#issuecomment-553954016",
      "id" : 553954016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17454",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1Mzk1NDAxNg==",
      "updated_at" : "2019-11-14T16:01:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/553954016",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5887427?v=4",
         "events_url" : "https://api.github.com/users/martong/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martong/followers",
         "following_url" : "https://api.github.com/users/martong/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martong/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martong",
         "id" : 5887427,
         "login" : "martong",
         "node_id" : "MDQ6VXNlcjU4ODc0Mjc=",
         "organizations_url" : "https://api.github.com/users/martong/orgs",
         "received_events_url" : "https://api.github.com/users/martong/received_events",
         "repos_url" : "https://api.github.com/users/martong/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martong/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martong/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martong"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@martong I'm very much interested in collaborating! I'll drop you an e-mail :)",
      "created_at" : "2019-11-14T16:26:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17454#issuecomment-553965363",
      "id" : 553965363,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17454",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1Mzk2NTM2Mw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/553965363/reactions"
      },
      "updated_at" : "2019-11-14T16:26:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/553965363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing for now.",
      "created_at" : "2022-08-08T13:46:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17454#issuecomment-1208153092",
      "id" : 1208153092,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17454",
      "node_id" : "IC_kwDOABII585IAvQE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1208153092/reactions"
      },
      "updated_at" : "2022-08-08T13:46:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1208153092",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
