[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Of course, the name of the RPC call is up for discussion - maybe \"getchaintips\" is better, or \"getblockchainheads\" or something like that.  For now, I just used the original name.  This command has been included (and tested) so far in Huntercoin, Namecoin and Motocoin.\n",
      "created_at" : "2014-07-15T15:52:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49052524",
      "id" : 49052524,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDUyNTI0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49052524/reactions"
      },
      "updated_at" : "2014-07-15T15:52:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49052524",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\"getchaintips\" seems more intuitive to me; I've wanted this feature before myself.\n",
      "created_at" : "2014-07-15T16:38:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49058944",
      "id" : 49058944,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDU4OTQ0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49058944/reactions"
      },
      "updated_at" : "2014-07-15T16:38:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49058944",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Just iterate over the mapBlockIndex entries, removing the ones that are the pprev of another mapBlockIndex entry.\n",
      "created_at" : "2014-07-15T17:20:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49064432",
      "id" : 49064432,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDY0NDMy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49064432/reactions"
      },
      "updated_at" : "2014-07-15T17:20:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49064432",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK concept + @sipa suggestion\n",
      "created_at" : "2014-07-15T17:28:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49065331",
      "id" : 49065331,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDY1MzMx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49065331/reactions"
      },
      "updated_at" : "2014-07-15T17:28:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49065331",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r14950166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950166"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"Returns status\" is not very helpful. More detail on what information is returned, please.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-15T17:34:26Z",
      "diff_hunk" : "@@ -461,3 +461,116 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchains heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchains (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchains\\n\"\n+            \"Return status of all known chains.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r14950166",
      "id" : 14950166,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTUwMTY2",
      "original_commit_id" : "0d12743c48b25f51da81cb5ebcce45e0d3c81f85",
      "original_line" : null,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950166/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r14950340"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950340"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This was just meant as a \"place-holder\" for now.  I will extend the help text, also including example output (similar to other help texts).\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-15T17:37:32Z",
      "diff_hunk" : "@@ -461,3 +461,116 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchains heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchains (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchains\\n\"\n+            \"Return status of all known chains.\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r14950340",
      "id" : 14950340,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTUwMzQw",
      "original_commit_id" : "0d12743c48b25f51da81cb5ebcce45e0d3c81f85",
      "original_line" : null,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950340/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950340",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the input - I'll try to incorporate everything and update the pull request.  I wanted to know if there's interest in this feature at all first, and I'm glad that there is. :)\n",
      "created_at" : "2014-07-15T17:38:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49066562",
      "id" : 49066562,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDY2NTYy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49066562/reactions"
      },
      "updated_at" : "2014-07-15T17:38:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49066562",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes, no problem with such an RPC.\n",
      "created_at" : "2014-07-15T17:39:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49066721",
      "id" : 49066721,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDY2NzIx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49066721/reactions"
      },
      "updated_at" : "2014-07-15T17:39:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49066721",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r14950608"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950608"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "branch_len should be branchlength to be consistent with other RPC results (e.g. see getblockchaininfo or getblocktemplate).\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-15T17:41:43Z",
      "diff_hunk" : "@@ -461,3 +461,116 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchains heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchains (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchains\\n\"\n+            \"Return status of all known chains.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli (\"getchains\", \"\")\n+            + HelpExampleRpc (\"getchains\", \"\")\n+        );\n+\n+    /* Lock everything.  Not sure if this is needed for the whole duration\n+       of the call, but better be safe than sorry.  */\n+    LOCK(cs_main);\n+\n+    /* For each block known, keep track if there are follow-ups (which have\n+       the block as pprev) so that we find the chain heads.  */\n+\n+    std::map<uint256, bool> blockIsHead;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+        blockIsHead.insert (std::make_pair (i->first, true));\n+\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;\n+        if (!pprev)\n+            continue;\n+\n+        const uint256 prevHash = *pprev->phashBlock;\n+        const std::map<uint256, bool>::iterator j = blockIsHead.find (prevHash);\n+        assert (j != blockIsHead.end ());\n+        j->second = false;\n+    }\n+\n+    /* Get chain heads and sort them by height.  */\n+\n+    std::vector<uint256> heads;\n+    for (std::map<uint256, bool>::const_iterator j = blockIsHead.begin ();\n+         j != blockIsHead.end (); ++j)\n+    {\n+        if (j->second)\n+            heads.push_back (j->first);\n+    }\n+\n+    std::sort (heads.begin (), heads.end (), &compareBlocksByHeight);\n+\n+    /* Construct the output array.  */\n+\n+    Array res;\n+    for (std::vector<uint256>::const_iterator j = heads.begin ();\n+         j != heads.end (); ++j)\n+    {\n+        i = mapBlockIndex.find (*j);\n+        assert (i != mapBlockIndex.end ());\n+\n+        const CBlockIndex& block = *i->second;\n+        assert (*j == *block.phashBlock);\n+\n+        Object obj;\n+        obj.push_back (Pair (\"height\", block.nHeight));\n+        obj.push_back (Pair (\"hash\", block.phashBlock->GetHex ()));\n+\n+        const bool isMain = chainActive.Contains (&block);\n+        obj.push_back (Pair (\"is_best\", isMain));\n+\n+        /* If the block is not the main head, construct the branch that\n+           connects it to the main chain.  */\n+        if (!isMain)\n+        {\n+            Array branch;\n+            int len = 0;\n+\n+            const CBlockIndex* pcur = &block;\n+            while (true)\n+            {\n+                assert (pcur->pprev);\n+                pcur = pcur->pprev;\n+\n+                branch.push_back (pcur->phashBlock->GetHex ());\n+                ++len;\n+\n+                /* We are on the main chain if there's a next pointer.  */\n+                if (chainActive.Contains (pcur))\n+                    break;\n+            }\n+\n+            obj.push_back (Pair (\"branch_len\", len));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r14950608",
      "id" : 14950608,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTUwNjA4",
      "original_commit_id" : "0d12743c48b25f51da81cb5ebcce45e0d3c81f85",
      "original_line" : null,
      "original_position" : 106,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950608/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950608",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r14950763"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950763"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Convention for RPC results is to not sometimes return a field and sometimes not.\n\nSo returning an empty branch Array here would be better.\n\nIs branch_len always the length of the branch array? If yes, then it is redundant and should be removed.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-15T17:43:57Z",
      "diff_hunk" : "@@ -461,3 +461,116 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchains heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchains (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchains\\n\"\n+            \"Return status of all known chains.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli (\"getchains\", \"\")\n+            + HelpExampleRpc (\"getchains\", \"\")\n+        );\n+\n+    /* Lock everything.  Not sure if this is needed for the whole duration\n+       of the call, but better be safe than sorry.  */\n+    LOCK(cs_main);\n+\n+    /* For each block known, keep track if there are follow-ups (which have\n+       the block as pprev) so that we find the chain heads.  */\n+\n+    std::map<uint256, bool> blockIsHead;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+        blockIsHead.insert (std::make_pair (i->first, true));\n+\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;\n+        if (!pprev)\n+            continue;\n+\n+        const uint256 prevHash = *pprev->phashBlock;\n+        const std::map<uint256, bool>::iterator j = blockIsHead.find (prevHash);\n+        assert (j != blockIsHead.end ());\n+        j->second = false;\n+    }\n+\n+    /* Get chain heads and sort them by height.  */\n+\n+    std::vector<uint256> heads;\n+    for (std::map<uint256, bool>::const_iterator j = blockIsHead.begin ();\n+         j != blockIsHead.end (); ++j)\n+    {\n+        if (j->second)\n+            heads.push_back (j->first);\n+    }\n+\n+    std::sort (heads.begin (), heads.end (), &compareBlocksByHeight);\n+\n+    /* Construct the output array.  */\n+\n+    Array res;\n+    for (std::vector<uint256>::const_iterator j = heads.begin ();\n+         j != heads.end (); ++j)\n+    {\n+        i = mapBlockIndex.find (*j);\n+        assert (i != mapBlockIndex.end ());\n+\n+        const CBlockIndex& block = *i->second;\n+        assert (*j == *block.phashBlock);\n+\n+        Object obj;\n+        obj.push_back (Pair (\"height\", block.nHeight));\n+        obj.push_back (Pair (\"hash\", block.phashBlock->GetHex ()));\n+\n+        const bool isMain = chainActive.Contains (&block);\n+        obj.push_back (Pair (\"is_best\", isMain));\n+\n+        /* If the block is not the main head, construct the branch that\n+           connects it to the main chain.  */\n+        if (!isMain)\n+        {\n+            Array branch;\n+            int len = 0;\n+\n+            const CBlockIndex* pcur = &block;\n+            while (true)\n+            {\n+                assert (pcur->pprev);\n+                pcur = pcur->pprev;\n+\n+                branch.push_back (pcur->phashBlock->GetHex ());\n+                ++len;\n+\n+                /* We are on the main chain if there's a next pointer.  */\n+                if (chainActive.Contains (pcur))\n+                    break;\n+            }\n+\n+            obj.push_back (Pair (\"branch_len\", len));\n+            obj.push_back (Pair (\"branch\", branch));\n+        }\n+        else\n+            obj.push_back (Pair (\"branch_len\", 0));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r14950763",
      "id" : 14950763,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTUwNzYz",
      "original_commit_id" : "0d12743c48b25f51da81cb5ebcce45e0d3c81f85",
      "original_line" : null,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950763/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950763",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Also: a regression test that exercises this new RPC call would be spiffy (see qa/rpc-tests/ for examples).\n",
      "created_at" : "2014-07-15T17:46:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49067638",
      "id" : 49067638,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDY3NjM4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49067638/reactions"
      },
      "updated_at" : "2014-07-15T17:46:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49067638",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r14950996"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950996"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok.  Yes, it is always the length - I included it originally for convenience when reading the data manually in a terminal or something.  But I can remove it, as it is indeed redundant.  I realise there are in general a lot of rough edges in the patch, I'll update it tomorrow to a hopefully cleaner one.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-15T17:47:23Z",
      "diff_hunk" : "@@ -461,3 +461,116 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchains heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchains (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchains\\n\"\n+            \"Return status of all known chains.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli (\"getchains\", \"\")\n+            + HelpExampleRpc (\"getchains\", \"\")\n+        );\n+\n+    /* Lock everything.  Not sure if this is needed for the whole duration\n+       of the call, but better be safe than sorry.  */\n+    LOCK(cs_main);\n+\n+    /* For each block known, keep track if there are follow-ups (which have\n+       the block as pprev) so that we find the chain heads.  */\n+\n+    std::map<uint256, bool> blockIsHead;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+        blockIsHead.insert (std::make_pair (i->first, true));\n+\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;\n+        if (!pprev)\n+            continue;\n+\n+        const uint256 prevHash = *pprev->phashBlock;\n+        const std::map<uint256, bool>::iterator j = blockIsHead.find (prevHash);\n+        assert (j != blockIsHead.end ());\n+        j->second = false;\n+    }\n+\n+    /* Get chain heads and sort them by height.  */\n+\n+    std::vector<uint256> heads;\n+    for (std::map<uint256, bool>::const_iterator j = blockIsHead.begin ();\n+         j != blockIsHead.end (); ++j)\n+    {\n+        if (j->second)\n+            heads.push_back (j->first);\n+    }\n+\n+    std::sort (heads.begin (), heads.end (), &compareBlocksByHeight);\n+\n+    /* Construct the output array.  */\n+\n+    Array res;\n+    for (std::vector<uint256>::const_iterator j = heads.begin ();\n+         j != heads.end (); ++j)\n+    {\n+        i = mapBlockIndex.find (*j);\n+        assert (i != mapBlockIndex.end ());\n+\n+        const CBlockIndex& block = *i->second;\n+        assert (*j == *block.phashBlock);\n+\n+        Object obj;\n+        obj.push_back (Pair (\"height\", block.nHeight));\n+        obj.push_back (Pair (\"hash\", block.phashBlock->GetHex ()));\n+\n+        const bool isMain = chainActive.Contains (&block);\n+        obj.push_back (Pair (\"is_best\", isMain));\n+\n+        /* If the block is not the main head, construct the branch that\n+           connects it to the main chain.  */\n+        if (!isMain)\n+        {\n+            Array branch;\n+            int len = 0;\n+\n+            const CBlockIndex* pcur = &block;\n+            while (true)\n+            {\n+                assert (pcur->pprev);\n+                pcur = pcur->pprev;\n+\n+                branch.push_back (pcur->phashBlock->GetHex ());\n+                ++len;\n+\n+                /* We are on the main chain if there's a next pointer.  */\n+                if (chainActive.Contains (pcur))\n+                    break;\n+            }\n+\n+            obj.push_back (Pair (\"branch_len\", len));\n+            obj.push_back (Pair (\"branch\", branch));\n+        }\n+        else\n+            obj.push_back (Pair (\"branch_len\", 0));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r14950996",
      "id" : 14950996,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTUwOTk2",
      "original_commit_id" : "0d12743c48b25f51da81cb5ebcce45e0d3c81f85",
      "original_line" : null,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950996/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14950996",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've now updated the code and help text.  What do you think about it?  @sipa, is this the algorithm you had in mind?  I'll also build a new unit test for the call, possibly tomorrow.\n",
      "created_at" : "2014-07-16T19:46:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49216784",
      "id" : 49216784,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MjE2Nzg0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49216784/reactions"
      },
      "updated_at" : "2014-07-16T19:46:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49216784",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@TheBlueMatt: Not sure why the test failed - the log shows no conclusive error message (but I haven't got any experience with your script so far), and it builds perfectly fine for me on GNU/Linux (after a `make distclean`).  Also `make check` works fine.  Any hints?\n",
      "created_at" : "2014-07-17T05:34:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49260115",
      "id" : 49260115,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MjYwMTE1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49260115/reactions"
      },
      "updated_at" : "2014-07-17T05:34:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49260115",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Currently pulltester is broken.\n",
      "created_at" : "2014-07-17T06:04:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49261542",
      "id" : 49261542,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MjYxNTQy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49261542/reactions"
      },
      "updated_at" : "2014-07-17T06:04:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49261542",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Basic regtest added.  Since the test framework chain doesn't contain orphans, it only checks that the \"isbest:true\" result is as expected.  Ok?\n",
      "created_at" : "2014-07-18T08:46:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49408556",
      "id" : 49408556,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5NDA4NTU2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49408556/reactions"
      },
      "updated_at" : "2014-07-18T08:46:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49408556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15102172"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15102172"
         }
      },
      "author_association" : "MEMBER",
      "body" : "As the command is not marked as `threadSafe` in the RPC command table, acquiring any locks is redundant.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-18T09:10:15Z",
      "diff_hunk" : "@@ -461,3 +461,112 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchaintips (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branch\\\": []            (array) empty for the main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branch\\\": [             (array) blocks connecting the tip to the main chain\\n\"\n+            \"      \\\"xxxx\\\"                (string) hashes of the connecting blocks\\n\"\n+            \"    ]\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli (\"getchaintips\", \"\")\n+            + HelpExampleRpc (\"getchaintips\", \"\")\n+        );\n+\n+    /* Lock everything.  Not sure if this is needed for the whole duration\n+       of the call, but better be safe than sorry.  */\n+    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15102172",
      "id" : 15102172,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTAyMTcy",
      "original_commit_id" : "dc290df1cb5a1aba6ef66211cddd17a7a48c100e",
      "original_line" : null,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15102172/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15102172",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15102297"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15102297"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd prefer throwing a JSONRPCError when unexpected things happen in this function instead of asserting.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-18T09:14:45Z",
      "diff_hunk" : "@@ -461,3 +461,112 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchaintips (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branch\\\": []            (array) empty for the main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branch\\\": [             (array) blocks connecting the tip to the main chain\\n\"\n+            \"      \\\"xxxx\\\"                (string) hashes of the connecting blocks\\n\"\n+            \"    ]\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli (\"getchaintips\", \"\")\n+            + HelpExampleRpc (\"getchaintips\", \"\")\n+        );\n+\n+    /* Lock everything.  Not sure if this is needed for the whole duration\n+       of the call, but better be safe than sorry.  */\n+    LOCK(cs_main);\n+\n+    /* Build up a list of chain tips.  We start with the list of all\n+       known blocks, and successively remove blocks that appear as pprev\n+       of another block.  */\n+    std::set<uint256> setTips;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+        setTips.insert (i->first);\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;\n+        if (pprev)\n+        {\n+            const uint256 prevHash = *pprev->phashBlock;\n+            const std::set<uint256>::iterator j = setTips.find (prevHash);\n+            if (j != setTips.end ())\n+                setTips.erase (j);\n+        }\n+    }\n+\n+    /* Get chain heads and sort them by height.  */\n+    std::vector<uint256> vTips(setTips.begin (), setTips.end ());\n+    std::sort (vTips.begin (), vTips.end (), &compareBlocksByHeight);\n+\n+    /* Construct the output array.  */\n+    Array res;\n+    for (std::vector<uint256>::const_iterator j = vTips.begin ();\n+         j != vTips.end (); ++j)\n+    {\n+        i = mapBlockIndex.find (*j);\n+        assert (i != mapBlockIndex.end ());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15102297",
      "id" : 15102297,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTAyMjk3",
      "original_commit_id" : "dc290df1cb5a1aba6ef66211cddd17a7a48c100e",
      "original_line" : null,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15102297/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15102297",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Useful information, ACK on concept.\n",
      "created_at" : "2014-07-18T09:15:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49411017",
      "id" : 49411017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5NDExMDE3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49411017/reactions"
      },
      "updated_at" : "2014-07-18T09:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49411017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15102425"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15102425"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see.  So just removing the LOCK in the call is fine?\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-18T09:18:23Z",
      "diff_hunk" : "@@ -461,3 +461,112 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchaintips (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branch\\\": []            (array) empty for the main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branch\\\": [             (array) blocks connecting the tip to the main chain\\n\"\n+            \"      \\\"xxxx\\\"                (string) hashes of the connecting blocks\\n\"\n+            \"    ]\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli (\"getchaintips\", \"\")\n+            + HelpExampleRpc (\"getchaintips\", \"\")\n+        );\n+\n+    /* Lock everything.  Not sure if this is needed for the whole duration\n+       of the call, but better be safe than sorry.  */\n+    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15102425",
      "id" : 15102425,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTAyNDI1",
      "original_commit_id" : "dc290df1cb5a1aba6ef66211cddd17a7a48c100e",
      "original_line" : null,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15102425/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15102425",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15102465"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15102465"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This assert should never really happen, and it shouldn't be possible to trigger it by invalid user input or something like that.  For me, this is precisely a situation where one wants to assert().  But if it is more in line with Bitcoin Core philosophy to throw a JSONRPCError, I can, of course, do that.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-18T09:19:29Z",
      "diff_hunk" : "@@ -461,3 +461,112 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchaintips (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branch\\\": []            (array) empty for the main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branch\\\": [             (array) blocks connecting the tip to the main chain\\n\"\n+            \"      \\\"xxxx\\\"                (string) hashes of the connecting blocks\\n\"\n+            \"    ]\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli (\"getchaintips\", \"\")\n+            + HelpExampleRpc (\"getchaintips\", \"\")\n+        );\n+\n+    /* Lock everything.  Not sure if this is needed for the whole duration\n+       of the call, but better be safe than sorry.  */\n+    LOCK(cs_main);\n+\n+    /* Build up a list of chain tips.  We start with the list of all\n+       known blocks, and successively remove blocks that appear as pprev\n+       of another block.  */\n+    std::set<uint256> setTips;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+        setTips.insert (i->first);\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;\n+        if (pprev)\n+        {\n+            const uint256 prevHash = *pprev->phashBlock;\n+            const std::set<uint256>::iterator j = setTips.find (prevHash);\n+            if (j != setTips.end ())\n+                setTips.erase (j);\n+        }\n+    }\n+\n+    /* Get chain heads and sort them by height.  */\n+    std::vector<uint256> vTips(setTips.begin (), setTips.end ());\n+    std::sort (vTips.begin (), vTips.end (), &compareBlocksByHeight);\n+\n+    /* Construct the output array.  */\n+    Array res;\n+    for (std::vector<uint256>::const_iterator j = vTips.begin ();\n+         j != vTips.end (); ++j)\n+    {\n+        i = mapBlockIndex.find (*j);\n+        assert (i != mapBlockIndex.end ());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15102465",
      "id" : 15102465,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTAyNDY1",
      "original_commit_id" : "dc290df1cb5a1aba6ef66211cddd17a7a48c100e",
      "original_line" : null,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15102465/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15102465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15103016"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15103016"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes. The calling code acquires the cs_main lock and cs_wallet locks if that bit is not set.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-18T09:33:25Z",
      "diff_hunk" : "@@ -461,3 +461,112 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchaintips (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branch\\\": []            (array) empty for the main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branch\\\": [             (array) blocks connecting the tip to the main chain\\n\"\n+            \"      \\\"xxxx\\\"                (string) hashes of the connecting blocks\\n\"\n+            \"    ]\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli (\"getchaintips\", \"\")\n+            + HelpExampleRpc (\"getchaintips\", \"\")\n+        );\n+\n+    /* Lock everything.  Not sure if this is needed for the whole duration\n+       of the call, but better be safe than sorry.  */\n+    LOCK(cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15103016",
      "id" : 15103016,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTAzMDE2",
      "original_commit_id" : "dc290df1cb5a1aba6ef66211cddd17a7a48c100e",
      "original_line" : null,
      "original_position" : 49,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15103016/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15103016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15103153"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15103153"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well - fine with me to keep it as assert in that case.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-18T09:37:19Z",
      "diff_hunk" : "@@ -461,3 +461,112 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchaintips (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branch\\\": []            (array) empty for the main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branch\\\": [             (array) blocks connecting the tip to the main chain\\n\"\n+            \"      \\\"xxxx\\\"                (string) hashes of the connecting blocks\\n\"\n+            \"    ]\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli (\"getchaintips\", \"\")\n+            + HelpExampleRpc (\"getchaintips\", \"\")\n+        );\n+\n+    /* Lock everything.  Not sure if this is needed for the whole duration\n+       of the call, but better be safe than sorry.  */\n+    LOCK(cs_main);\n+\n+    /* Build up a list of chain tips.  We start with the list of all\n+       known blocks, and successively remove blocks that appear as pprev\n+       of another block.  */\n+    std::set<uint256> setTips;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+        setTips.insert (i->first);\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;\n+        if (pprev)\n+        {\n+            const uint256 prevHash = *pprev->phashBlock;\n+            const std::set<uint256>::iterator j = setTips.find (prevHash);\n+            if (j != setTips.end ())\n+                setTips.erase (j);\n+        }\n+    }\n+\n+    /* Get chain heads and sort them by height.  */\n+    std::vector<uint256> vTips(setTips.begin (), setTips.end ());\n+    std::sort (vTips.begin (), vTips.end (), &compareBlocksByHeight);\n+\n+    /* Construct the output array.  */\n+    Array res;\n+    for (std::vector<uint256>::const_iterator j = vTips.begin ();\n+         j != vTips.end (); ++j)\n+    {\n+        i = mapBlockIndex.find (*j);\n+        assert (i != mapBlockIndex.end ());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15103153",
      "id" : 15103153,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTAzMTUz",
      "original_commit_id" : "dc290df1cb5a1aba6ef66211cddd17a7a48c100e",
      "original_line" : null,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15103153/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15103153",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15130818"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15130818"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Coding style nit: no space before ()\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-18T20:04:42Z",
      "diff_hunk" : "@@ -461,3 +461,108 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15130818",
      "id" : 15130818,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTMwODE4",
      "original_commit_id" : "fa69eaa41ba1cf5c62352aefb4dfefef25a4ff4f",
      "original_line" : null,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15130818/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15130818",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15130878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15130878"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree on using an assert.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-18T20:06:01Z",
      "diff_hunk" : "@@ -461,3 +461,112 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchaintips (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branch\\\": []            (array) empty for the main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branch\\\": [             (array) blocks connecting the tip to the main chain\\n\"\n+            \"      \\\"xxxx\\\"                (string) hashes of the connecting blocks\\n\"\n+            \"    ]\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli (\"getchaintips\", \"\")\n+            + HelpExampleRpc (\"getchaintips\", \"\")\n+        );\n+\n+    /* Lock everything.  Not sure if this is needed for the whole duration\n+       of the call, but better be safe than sorry.  */\n+    LOCK(cs_main);\n+\n+    /* Build up a list of chain tips.  We start with the list of all\n+       known blocks, and successively remove blocks that appear as pprev\n+       of another block.  */\n+    std::set<uint256> setTips;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+        setTips.insert (i->first);\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;\n+        if (pprev)\n+        {\n+            const uint256 prevHash = *pprev->phashBlock;\n+            const std::set<uint256>::iterator j = setTips.find (prevHash);\n+            if (j != setTips.end ())\n+                setTips.erase (j);\n+        }\n+    }\n+\n+    /* Get chain heads and sort them by height.  */\n+    std::vector<uint256> vTips(setTips.begin (), setTips.end ());\n+    std::sort (vTips.begin (), vTips.end (), &compareBlocksByHeight);\n+\n+    /* Construct the output array.  */\n+    Array res;\n+    for (std::vector<uint256>::const_iterator j = vTips.begin ();\n+         j != vTips.end (); ++j)\n+    {\n+        i = mapBlockIndex.find (*j);\n+        assert (i != mapBlockIndex.end ());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15130878",
      "id" : 15130878,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTMwODc4",
      "original_commit_id" : "dc290df1cb5a1aba6ef66211cddd17a7a48c100e",
      "original_line" : null,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15130878/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15130878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15131001"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15131001"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This wasn't clear to me from the documentation. How about just include the length of the branch (how many blocks are not in the main chain)? You can always find the actual chain through getblock -> prev.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-18T20:08:35Z",
      "diff_hunk" : "@@ -461,3 +461,108 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchaintips (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branch\\\": []            (array) empty for the main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branch\\\": [             (array) blocks connecting the tip to the main chain\\n\"\n+            \"      \\\"xxxx\\\"                (string) hashes of the connecting blocks\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15131001",
      "id" : 15131001,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTMxMDAx",
      "original_commit_id" : "fa69eaa41ba1cf5c62352aefb4dfefef25a4ff4f",
      "original_line" : null,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15131001/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15131001",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15143250"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15143250"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see.  I'm used to GNU projects and tried to adapt my style to the surrounding code, but it seemed not to have worked 100%.  I can, of course, change this if it matters.  Should I?\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-19T11:36:33Z",
      "diff_hunk" : "@@ -461,3 +461,108 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15143250",
      "id" : 15143250,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTQzMjUw",
      "original_commit_id" : "fa69eaa41ba1cf5c62352aefb4dfefef25a4ff4f",
      "original_line" : null,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15143250/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15143250",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15143256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15143256"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That's true, but my original motivation was to include the information already here because it makes life easier.  If you want the branch, you don't have to use repeated \"getblock\" calls.  It doesn't hurt much to have that here instead of the length, IMHO.  But if you prefer the length, I will change it of course.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-19T11:37:53Z",
      "diff_hunk" : "@@ -461,3 +461,108 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchaintips (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branch\\\": []            (array) empty for the main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branch\\\": [             (array) blocks connecting the tip to the main chain\\n\"\n+            \"      \\\"xxxx\\\"                (string) hashes of the connecting blocks\\n\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15143256",
      "id" : 15143256,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTQzMjU2",
      "original_commit_id" : "fa69eaa41ba1cf5c62352aefb4dfefef25a4ff4f",
      "original_line" : null,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15143256/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15143256",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've now updated the whitespace and replaced the \"branch\" output in the JSON result with \"branchlen\", according to the last feedback.  Should I provide a quashed commit, or is the series of commits also fine?\n",
      "created_at" : "2014-07-21T09:54:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49588339",
      "id" : 49588339,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5NTg4MzM5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49588339/reactions"
      },
      "updated_at" : "2014-07-21T09:54:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49588339",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "A series of commits is fine if the commits are distinct changes, or a logical sequence of changes.\n\nIn this case I'd suggest squashing as all of the changes apply to the same code.\n",
      "created_at" : "2014-07-21T09:56:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49588558",
      "id" : 49588558,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5NTg4NTU4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49588558/reactions"
      },
      "updated_at" : "2014-07-21T10:08:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49588558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Squashed commit of the last version.\n",
      "created_at" : "2014-07-21T11:02:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-49593111",
      "id" : 49593111,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5NTkzMTEx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49593111/reactions"
      },
      "updated_at" : "2014-07-21T11:02:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/49593111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15167431"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15167431"
         }
      },
      "author_association" : "NONE",
      "body" : "If it should not happen in any way, why is it there ;)?\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-21T13:16:21Z",
      "diff_hunk" : "@@ -461,3 +461,112 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight (const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find (a);\n+    ib = mapBlockIndex.find (b);\n+\n+    assert (ia != mapBlockIndex.end () && ib != mapBlockIndex.end ());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchaintips (const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size () != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branch\\\": []            (array) empty for the main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branch\\\": [             (array) blocks connecting the tip to the main chain\\n\"\n+            \"      \\\"xxxx\\\"                (string) hashes of the connecting blocks\\n\"\n+            \"    ]\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli (\"getchaintips\", \"\")\n+            + HelpExampleRpc (\"getchaintips\", \"\")\n+        );\n+\n+    /* Lock everything.  Not sure if this is needed for the whole duration\n+       of the call, but better be safe than sorry.  */\n+    LOCK(cs_main);\n+\n+    /* Build up a list of chain tips.  We start with the list of all\n+       known blocks, and successively remove blocks that appear as pprev\n+       of another block.  */\n+    std::set<uint256> setTips;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+        setTips.insert (i->first);\n+    for (i = mapBlockIndex.begin (); i != mapBlockIndex.end (); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;\n+        if (pprev)\n+        {\n+            const uint256 prevHash = *pprev->phashBlock;\n+            const std::set<uint256>::iterator j = setTips.find (prevHash);\n+            if (j != setTips.end ())\n+                setTips.erase (j);\n+        }\n+    }\n+\n+    /* Get chain heads and sort them by height.  */\n+    std::vector<uint256> vTips(setTips.begin (), setTips.end ());\n+    std::sort (vTips.begin (), vTips.end (), &compareBlocksByHeight);\n+\n+    /* Construct the output array.  */\n+    Array res;\n+    for (std::vector<uint256>::const_iterator j = vTips.begin ();\n+         j != vTips.end (); ++j)\n+    {\n+        i = mapBlockIndex.find (*j);\n+        assert (i != mapBlockIndex.end ());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15167431",
      "id" : 15167431,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTY3NDMx",
      "original_commit_id" : "dc290df1cb5a1aba6ef66211cddd17a7a48c100e",
      "original_line" : null,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15167431/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15167431",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think the implementation can be made more efficient by using sets/maps of CBlockIndex\\* entries rather than uint256's. (it means you don't need a find in the comparator, and the data structures are 4 or 8 times smaller).\n",
      "created_at" : "2014-07-27T14:51:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-50266328",
      "id" : 50266328,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwMjY2MzI4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50266328/reactions"
      },
      "updated_at" : "2014-07-27T14:54:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50266328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15439651"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15439651"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can use pcur->nHeight - chainActive.FindFork(pcur)->nHeight; instead of this loop (which uses the recently added CBlockIndex\\* skiplist).\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-27T14:53:08Z",
      "diff_hunk" : "@@ -461,3 +461,106 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight(const uint256& a, const uint256& b)\n+{\n+    std::map<uint256, CBlockIndex*>::const_iterator ia, ib;\n+\n+    ia = mapBlockIndex.find(a);\n+    ib = mapBlockIndex.find(b);\n+\n+    assert (ia != mapBlockIndex.end() && ib != mapBlockIndex.end());\n+\n+    return (ia->second->nHeight > ib->second->nHeight);\n+}\n+\n+Value getchaintips(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branchlen\\\": 0          (numeric) zero for main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branchlen\\\": 1          (numeric) length of branch connecting the tip to the main chain\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getchaintips\", \"\")\n+            + HelpExampleRpc(\"getchaintips\", \"\")\n+        );\n+\n+    /* Build up a list of chain tips.  We start with the list of all\n+       known blocks, and successively remove blocks that appear as pprev\n+       of another block.  */\n+    std::set<uint256> setTips;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+    for (i = mapBlockIndex.begin(); i != mapBlockIndex.end(); ++i)\n+        setTips.insert(i->first);\n+    for (i = mapBlockIndex.begin(); i != mapBlockIndex.end(); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;\n+        if (pprev)\n+        {\n+            const uint256 prevHash = *pprev->phashBlock;\n+            const std::set<uint256>::iterator j = setTips.find(prevHash);\n+            if (j != setTips.end())\n+                setTips.erase(j);\n+        }\n+    }\n+\n+    /* Get chain heads and sort them by height.  */\n+    std::vector<uint256> vTips(setTips.begin(), setTips.end());\n+    std::sort(vTips.begin(), vTips.end(), &compareBlocksByHeight);\n+\n+    /* Construct the output array.  */\n+    Array res;\n+    for (std::vector<uint256>::const_iterator j = vTips.begin();\n+         j != vTips.end(); ++j)\n+    {\n+        i = mapBlockIndex.find(*j);\n+        assert (i != mapBlockIndex.end());\n+\n+        const CBlockIndex& block = *i->second;\n+        assert (*j == *block.phashBlock);\n+\n+        Object obj;\n+        obj.push_back(Pair(\"height\", block.nHeight));\n+        obj.push_back(Pair(\"hash\", block.phashBlock->GetHex()));\n+\n+        const bool isMain = chainActive.Contains(&block);\n+        obj.push_back(Pair(\"isbest\", isMain));\n+\n+        /* If the block is not the main head, construct the branch that\n+           connects it to the main chain.  Find its length.  */\n+        int branchLen = 0;\n+        if (!isMain)\n+        {\n+            const CBlockIndex* pcur = &block;\n+            do\n+            {\n+                assert (pcur->pprev);\n+                pcur = pcur->pprev;\n+                ++branchLen;\n+            }\n+            while (!chainActive.Contains(pcur));\n+        }\n+        obj.push_back(Pair(\"branchlen\", branchLen));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15439651",
      "id" : 15439651,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDM5NjUx",
      "original_commit_id" : "3e1af92c1b63a28aae40261ed57d4fc227ff97b7",
      "original_line" : null,
      "original_position" : 100,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15439651/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15439651",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Indeed, very good observations!  I've updated the patch now.  Let me know if it is ok like this, then I will again provide a squashed commit instead.\n",
      "created_at" : "2014-07-29T17:05:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-50506289",
      "id" : 50506289,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwNTA2Mjg5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50506289/reactions"
      },
      "updated_at" : "2014-07-29T17:05:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50506289",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15560335"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15560335"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No need for the find/erase. Just `setTips.erase(pprev)`.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-29T23:54:33Z",
      "diff_hunk" : "@@ -461,3 +461,81 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight(const CBlockIndex* a, const CBlockIndex* b)\n+{\n+    return (a->nHeight > b->nHeight);\n+}\n+\n+Value getchaintips(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branchlen\\\": 0          (numeric) zero for main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branchlen\\\": 1          (numeric) length of branch connecting the tip to the main chain\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getchaintips\", \"\")\n+            + HelpExampleRpc(\"getchaintips\", \"\")\n+        );\n+\n+    /* Build up a list of chain tips.  We start with the list of all\n+       known blocks, and successively remove blocks that appear as pprev\n+       of another block.  */\n+    std::set<const CBlockIndex*> setTips;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+    for (i = mapBlockIndex.begin(); i != mapBlockIndex.end(); ++i)\n+        setTips.insert(i->second);\n+    for (i = mapBlockIndex.begin(); i != mapBlockIndex.end(); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15560335",
      "id" : 15560335,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTYwMzM1",
      "original_commit_id" : "b92da981fe4f4609ae442cb92b4eca7a50f3c52d",
      "original_line" : null,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15560335/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15560335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15560369"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15560369"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Does this work? This will compare two blocks equal if they're of equal height. I'm not sure how std::sort behaves when the comparator and the equality operator are inconsistent.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-29T23:55:49Z",
      "diff_hunk" : "@@ -461,3 +461,81 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight(const CBlockIndex* a, const CBlockIndex* b)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15560369",
      "id" : 15560369,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTYwMzY5",
      "original_commit_id" : "b92da981fe4f4609ae442cb92b4eca7a50f3c52d",
      "original_line" : null,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15560369/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15560369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15560427"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15560427"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you make the comparator support multiple blocks at the same height, you could just use that comparator directly as internal sort for setTips, so you don't need the vector or the explicity sort, and can just iterate through setTips (use BOOST_FOREACH, btw).\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-29T23:57:32Z",
      "diff_hunk" : "@@ -461,3 +461,81 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight(const CBlockIndex* a, const CBlockIndex* b)\n+{\n+    return (a->nHeight > b->nHeight);\n+}\n+\n+Value getchaintips(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branchlen\\\": 0          (numeric) zero for main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branchlen\\\": 1          (numeric) length of branch connecting the tip to the main chain\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getchaintips\", \"\")\n+            + HelpExampleRpc(\"getchaintips\", \"\")\n+        );\n+\n+    /* Build up a list of chain tips.  We start with the list of all\n+       known blocks, and successively remove blocks that appear as pprev\n+       of another block.  */\n+    std::set<const CBlockIndex*> setTips;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+    for (i = mapBlockIndex.begin(); i != mapBlockIndex.end(); ++i)\n+        setTips.insert(i->second);\n+    for (i = mapBlockIndex.begin(); i != mapBlockIndex.end(); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;\n+        if (pprev)\n+        {\n+            const std::set<const CBlockIndex*>::iterator j = setTips.find(pprev);\n+            if (j != setTips.end())\n+                setTips.erase(j);\n+        }\n+    }\n+\n+    /* Get chain heads and sort them by height.  */\n+    std::vector<const CBlockIndex*> vTips(setTips.begin(), setTips.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15560427",
      "id" : 15560427,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTYwNDI3",
      "original_commit_id" : "b92da981fe4f4609ae442cb92b4eca7a50f3c52d",
      "original_line" : null,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15560427/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15560427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15560597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15560597"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The name 'isbest' may be obvious now, but if #4468 would get merged, we may end up with multiple header tips that all descend from the current chainActive (while we're catching up).\n\nI'm not sure how to deal with this, but something branchlen essentially conveys this information already (maybe a better name is 'reorg_distance' or 'fork_distance', or replace it with 'fork_height'?) - if it's 0, it extends our main branch.\n\nEDIT: ah, not really; fork_distance would be chainActive.Height() - chainActive.FindFork(&block)->nHeight. 'isbest' would be equal to fork_distance == 0 then.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-30T00:02:59Z",
      "diff_hunk" : "@@ -461,3 +461,81 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight(const CBlockIndex* a, const CBlockIndex* b)\n+{\n+    return (a->nHeight > b->nHeight);\n+}\n+\n+Value getchaintips(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branchlen\\\": 0          (numeric) zero for main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branchlen\\\": 1          (numeric) length of branch connecting the tip to the main chain\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getchaintips\", \"\")\n+            + HelpExampleRpc(\"getchaintips\", \"\")\n+        );\n+\n+    /* Build up a list of chain tips.  We start with the list of all\n+       known blocks, and successively remove blocks that appear as pprev\n+       of another block.  */\n+    std::set<const CBlockIndex*> setTips;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+    for (i = mapBlockIndex.begin(); i != mapBlockIndex.end(); ++i)\n+        setTips.insert(i->second);\n+    for (i = mapBlockIndex.begin(); i != mapBlockIndex.end(); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;\n+        if (pprev)\n+        {\n+            const std::set<const CBlockIndex*>::iterator j = setTips.find(pprev);\n+            if (j != setTips.end())\n+                setTips.erase(j);\n+        }\n+    }\n+\n+    /* Get chain heads and sort them by height.  */\n+    std::vector<const CBlockIndex*> vTips(setTips.begin(), setTips.end());\n+    std::sort(vTips.begin(), vTips.end(), &compareBlocksByHeight);\n+\n+    /* Construct the output array.  */\n+    Array res;\n+    for (std::vector<const CBlockIndex*>::const_iterator j = vTips.begin();\n+         j != vTips.end(); ++j)\n+    {\n+        const CBlockIndex& block = **j;\n+\n+        Object obj;\n+        obj.push_back(Pair(\"height\", block.nHeight));\n+        obj.push_back(Pair(\"hash\", block.phashBlock->GetHex()));\n+\n+        const bool isMain = chainActive.Contains(&block);\n+        obj.push_back(Pair(\"isbest\", isMain));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15560597",
      "id" : 15560597,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTYwNTk3",
      "original_commit_id" : "b92da981fe4f4609ae442cb92b4eca7a50f3c52d",
      "original_line" : null,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15560597/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15560597",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15566598"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15566598"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that the STL doesn't use the '==' at all in sort, it considers elements to be the same if neither \"a < b\" nor \"b < a\".  But I can't guarantee that it keeps two \"equal\" elements by themselves, rather than copying one of them two times - I believe not, but I'll change the code to include ordering of the pointers as a secondary criterion to be safe.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-30T04:56:50Z",
      "diff_hunk" : "@@ -461,3 +461,81 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight(const CBlockIndex* a, const CBlockIndex* b)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15566598",
      "id" : 15566598,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTY2NTk4",
      "original_commit_id" : "b92da981fe4f4609ae442cb92b4eca7a50f3c52d",
      "original_line" : null,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15566598/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15566598",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15566624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15566624"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, that is a good idea!\n\nI don't really like BOOST_FOREACH personally, but I guess this is how the existing code does it - so I'll change this, too.\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-30T04:58:57Z",
      "diff_hunk" : "@@ -461,3 +461,81 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight(const CBlockIndex* a, const CBlockIndex* b)\n+{\n+    return (a->nHeight > b->nHeight);\n+}\n+\n+Value getchaintips(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branchlen\\\": 0          (numeric) zero for main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branchlen\\\": 1          (numeric) length of branch connecting the tip to the main chain\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getchaintips\", \"\")\n+            + HelpExampleRpc(\"getchaintips\", \"\")\n+        );\n+\n+    /* Build up a list of chain tips.  We start with the list of all\n+       known blocks, and successively remove blocks that appear as pprev\n+       of another block.  */\n+    std::set<const CBlockIndex*> setTips;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+    for (i = mapBlockIndex.begin(); i != mapBlockIndex.end(); ++i)\n+        setTips.insert(i->second);\n+    for (i = mapBlockIndex.begin(); i != mapBlockIndex.end(); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;\n+        if (pprev)\n+        {\n+            const std::set<const CBlockIndex*>::iterator j = setTips.find(pprev);\n+            if (j != setTips.end())\n+                setTips.erase(j);\n+        }\n+    }\n+\n+    /* Get chain heads and sort them by height.  */\n+    std::vector<const CBlockIndex*> vTips(setTips.begin(), setTips.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15566624",
      "id" : 15566624,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTY2NjI0",
      "original_commit_id" : "b92da981fe4f4609ae442cb92b4eca7a50f3c52d",
      "original_line" : null,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15566624/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15566624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15566646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15566646"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, branchlen==0 is equivalent to isbest.  So if you prefer, we can drop the \"isbest\" field and just have \"branchlen\".  The name was suggested by Gavin, IIRC, but I can change it to \"fork_distance\" if that is clearer?\n",
      "commit_id" : "b33bd7a3be1cbcc8d255178307976b7762125b18",
      "created_at" : "2014-07-30T05:01:16Z",
      "diff_hunk" : "@@ -461,3 +461,81 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }\n+\n+/* Comparison function for sorting the getchaintips heads.  */\n+static bool compareBlocksByHeight(const CBlockIndex* a, const CBlockIndex* b)\n+{\n+    return (a->nHeight > b->nHeight);\n+}\n+\n+Value getchaintips(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getchaintips\\n\"\n+            \"Return information about all known tips in the block tree,\"\n+            \" including the main chain as well as orphaned branches.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,         (numeric) height of the chain tip\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",         (string) block hash of the tip\\n\"\n+            \"    \\\"isbest\\\": true,         (boolean) whether this is the main chain\\n\"\n+            \"    \\\"branchlen\\\": 0          (numeric) zero for main chain\\n\"\n+            \"  },\\n\"\n+            \"  {\\n\"\n+            \"    \\\"height\\\": xxxx,\\n\"\n+            \"    \\\"hash\\\": \\\"xxxx\\\",\\n\"\n+            \"    \\\"isbest\\\": false,\\n\"\n+            \"    \\\"branchlen\\\": 1          (numeric) length of branch connecting the tip to the main chain\\n\"\n+            \"  }\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getchaintips\", \"\")\n+            + HelpExampleRpc(\"getchaintips\", \"\")\n+        );\n+\n+    /* Build up a list of chain tips.  We start with the list of all\n+       known blocks, and successively remove blocks that appear as pprev\n+       of another block.  */\n+    std::set<const CBlockIndex*> setTips;\n+    std::map<uint256, CBlockIndex*>::const_iterator i;\n+    for (i = mapBlockIndex.begin(); i != mapBlockIndex.end(); ++i)\n+        setTips.insert(i->second);\n+    for (i = mapBlockIndex.begin(); i != mapBlockIndex.end(); ++i)\n+    {\n+        const CBlockIndex* pprev = i->second->pprev;\n+        if (pprev)\n+        {\n+            const std::set<const CBlockIndex*>::iterator j = setTips.find(pprev);\n+            if (j != setTips.end())\n+                setTips.erase(j);\n+        }\n+    }\n+\n+    /* Get chain heads and sort them by height.  */\n+    std::vector<const CBlockIndex*> vTips(setTips.begin(), setTips.end());\n+    std::sort(vTips.begin(), vTips.end(), &compareBlocksByHeight);\n+\n+    /* Construct the output array.  */\n+    Array res;\n+    for (std::vector<const CBlockIndex*>::const_iterator j = vTips.begin();\n+         j != vTips.end(); ++j)\n+    {\n+        const CBlockIndex& block = **j;\n+\n+        Object obj;\n+        obj.push_back(Pair(\"height\", block.nHeight));\n+        obj.push_back(Pair(\"hash\", block.phashBlock->GetHex()));\n+\n+        const bool isMain = chainActive.Contains(&block);\n+        obj.push_back(Pair(\"isbest\", isMain));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#discussion_r15566646",
      "id" : 15566646,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTY2NjQ2",
      "original_commit_id" : "b92da981fe4f4609ae442cb92b4eca7a50f3c52d",
      "original_line" : null,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "src/rpcblockchain.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4536",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15566646/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-08-03T16:13:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/15566646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested ACK. Works nicely.\n",
      "created_at" : "2014-08-03T10:40:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-50987210",
      "id" : 50987210,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwOTg3MjEw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50987210/reactions"
      },
      "updated_at" : "2014-08-03T10:40:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50987210",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Please squash you commits, though.\n",
      "created_at" : "2014-08-03T10:40:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-50987217",
      "id" : 50987217,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwOTg3MjE3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50987217/reactions"
      },
      "updated_at" : "2014-08-03T10:40:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50987217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Another tested ACK (after squashing commits)\n",
      "created_at" : "2014-08-03T12:09:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-50988877",
      "id" : 50988877,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwOTg4ODc3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50988877/reactions"
      },
      "updated_at" : "2014-08-03T12:09:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50988877",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the review - I've updated the branch to a single squashed commit.\n",
      "created_at" : "2014-08-03T16:14:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-50994589",
      "id" : 50994589,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwOTk0NTg5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50994589/reactions"
      },
      "updated_at" : "2014-08-03T16:14:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50994589",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4943644?v=4",
         "events_url" : "https://api.github.com/users/domob1812/events{/privacy}",
         "followers_url" : "https://api.github.com/users/domob1812/followers",
         "following_url" : "https://api.github.com/users/domob1812/following{/other_user}",
         "gists_url" : "https://api.github.com/users/domob1812/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/domob1812",
         "id" : 4943644,
         "login" : "domob1812",
         "node_id" : "MDQ6VXNlcjQ5NDM2NDQ=",
         "organizations_url" : "https://api.github.com/users/domob1812/orgs",
         "received_events_url" : "https://api.github.com/users/domob1812/received_events",
         "repos_url" : "https://api.github.com/users/domob1812/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/domob1812/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/domob1812"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4536_b33bd7a3be1cbcc8d255178307976b7762125b18/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
      "created_at" : "2014-08-03T16:27:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4536#issuecomment-50994976",
      "id" : 50994976,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4536",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwOTk0OTc2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50994976/reactions"
      },
      "updated_at" : "2014-08-03T16:27:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/50994976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=4",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "node_id" : "MDQ6VXNlcjIxMTA5MDc=",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   }
]
