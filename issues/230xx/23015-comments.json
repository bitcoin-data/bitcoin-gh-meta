[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Adding multiprocess fuzz coverage would be similar to adding fuzz coverage for the RPC server, which I don't think we have, so I don't know what would be ideal here.\r\n\r\nYou could approach it by opening IPC connection, writing arbitrary bytes to the socket, and make sure IPC implementation on the other end is memory safe (doesn't segfault or cause ASAN/MSAN) errors.\r\n\r\nYou could also call specific IPC methods and check for postconditions.\r\n\r\n~A complication here is that IPC interface similar to the RPC interface, and pretty privileged, so it might be able to do things like read/write files on disk depending on how you call it.~ (EDIT: nvm)",
      "created_at" : "2021-09-17T12:14:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/23015#issuecomment-921749595",
      "id" : 921749595,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23015",
      "node_id" : "IC_kwDOABII58428Mhb",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-17T12:16:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921749595",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> A complication here is that IPC interface similar to the RPC interface, and pretty privileged, so it might be able to do things like read/write files on disk depending on how you call it.\r\n\r\nActually, this is not really a concern, because you could stub out all the server methods and just make sure they are being invoked correctly by the IPC and IPC serialization code.",
      "created_at" : "2021-09-17T12:16:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/23015#issuecomment-921750884",
      "id" : 921750884,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23015",
      "node_id" : "IC_kwDOABII58428M1k",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-17T12:16:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921750884",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "While the server part of the RPC server isn't fuzzed, the RPC methods are fuzzed in the `rpc` target.\r\n\r\nI guess fuzzing multiprocess is hard to fuzz because there is no logic to fuzz, it is just an interface for other logic.",
      "created_at" : "2021-09-17T12:24:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/23015#issuecomment-921755677",
      "id" : 921755677,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23015",
      "node_id" : "IC_kwDOABII58428OAd",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-17T12:24:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921755677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> While the server part of the RPC server isn't fuzzed, the RPC methods are fuzzed in the `rpc` target.\r\n\r\nWow, the [RPC fuzz target](https://github.com/bitcoin/bitcoin/blob/e69cbac628bfdca4a8e4ead821190eaf5b6b3d07/src/test/fuzz/rpc.cpp) is very interesting! It is just calling whitelisted RPC methods with random arguments. It wouldn't be hard to write the same test for a list of whitelisted IPC methods, since capnp does provide enough introspection to query method arguments and fill them with random values. So given a list of whitelisted methods,, the IPC fuzz test could randomly call whitelisted methods with random argument values, and even randomly fill recursive data structures.\r\n\r\nSince a test like this would be calling capnp methods directly, it would not provide fuzz coverage for the C++ wrapper methods which call the corresponding capnp methods. These wrapper methods don't do very much, but are responsible for things like converting `CFeeRate` objects to and from streams of bytes, converting C++ vectors and maps to and from capnp lists. Separate fuzz tests could be written for this type conversion code, although from discussion https://github.com/bitcoin/bitcoin/pull/22962#issuecomment-921744922 it sounds like neither of us thinks this coverage would be very useful? There is no equivalent of this fuzzing for our RPC code just because we only provide an RPC server, not an RPC client (we don't have C++ methods that help call corresponding RPC methods remotely).\r\n\r\n> I guess fuzzing multiprocess is hard to fuzz because there is no logic to fuzz, it is just an interface for other logic.\r\n\r\nThe same thing is true for the RPC server. There should be little difference between IPC and RPC from a fuzzer's point of view. If you wanted to tweak the RPC fuzz test to only fuzz test the RPC server and skip actual execution of the RPC methods, you could do that. Equivalently, you can test the IPC server with IPC method execution, or the IPC server without IPC method execution.\r\n\r\nI will say overall I don't have good intuition for what type of fuzzing is useful, and what type of fuzzing is not useful, and what the costs and benefits are for different kinds of fuzzing. I would love to read a simple guide that told me what fuzzing best practices are (and maybe told me how fuzzing works, because that is also largely a black box to me). But before that happens, I am happy to write whatever fuzzing test someone tells me to write.",
      "created_at" : "2021-09-17T13:33:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/23015#issuecomment-921800922",
      "id" : 921800922,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23015",
      "node_id" : "IC_kwDOABII58428ZDa",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-17T13:34:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921800922",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "One idea to to provide fuzz coverage of the IPC code could be to write an interface specifically meant for fuzz testing.\r\n\r\n```c++\r\nnamespace interfaces {\r\nclass FuzzTest\r\n{\r\n  virtual ~FuzzTest() = default;\r\n  virtual void fuzzInt32(int32_t&) = 0;\r\n  virtual void fuzzString(std::string&) = 0;\r\n  virtual void fuzzFeeRate(CFeeRate&) = 0;\r\n  virtual void fuzzArgsManager(ArgsManager&) = 0;\r\n  virtual void fuzzMapVectorFeeRates(std::map<std::string, std::vector<CFeeRate>>&) = 0;\r\n  virtual std::vector<int> fuzzInputArgumentsAndReturnValue(int a, int b, int& c, int& d) = 0;\r\n  virtual void fuzzCallbackFunction(std::function<int(int)> callback) = 0;\r\n  virtual void fuzzCallbackInterface(std::unique_ptr<FuzzTest> callback) = 0;\r\n  virtual std::unique_ptr<FuzzTest> fuzzReturnInterface() = 0;\r\n};\r\n} // namespace interfaces\r\n```\r\n\r\nEach method could transform arguments and return values (do modulo arithmetic on integer values, transform, reverse, or shift string values) in some way that the fuzz test code could check. The fuzz test code could call the methods randomly across a socket process boundary. \r\n\r\nThis type of test could probably provide more meaningful coverage of IPC code than the IPC executing test described previously above that actually executes real whitelisted IPC methods with random arguments. Both types of test could complement each other though.",
      "created_at" : "2021-09-17T14:49:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/23015#issuecomment-921858874",
      "id" : 921858874,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23015",
      "node_id" : "IC_kwDOABII58428nM6",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-17T14:53:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921858874",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
