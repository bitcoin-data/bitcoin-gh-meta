{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Related: https://github.com/bitcoin-core/bitcoincore.org/issues/793\r\n\r\nThis changeset improves the `contrib/verifybinaries/verify.py` script to account for the new binary verification procedure introduced in the 22.0 release; for details on this new process, see the note in https://github.com/bitcoin/bitcoin/issues/22634.\r\n\r\nIn short, instead of relying on a single signature from the lead maintainer attesting to the expected hashes of binary releases, this verify script now supports validating that a minimum threshold of trusted identities have signed the checksum file. \r\n\r\n![image](https://user-images.githubusercontent.com/73197/133840032-227240c1-ad12-498f-863d-5e2261f928bf.png)\r\n\r\n\r\nBoth the threshold and identities to trust are configurable by the end user, but sensible defaults are provided: identities are inferred from local GPG trust and the builder-keys file and a minimum threshold of 4 trusted signatures is configured by default. There are options for overriding these.\r\n\r\nVarious improvements have been made to the script for allow for easier programmatic use; a `--json` option is introduced and logging output is now directed to stderr. \r\n\r\n### Automatic pubkey import\r\n\r\nPubkeys that are referenced in checksum signature files can now be automatically downloaded based on a user prompt. This behavior can be disabled with the `--noninteractive` flag to support CI use.\r\n\r\nI have built in functionality for elevating local GPG trust of the imported keys, but it isn't quite working yet; I think instead of manually modifying the GPG trust database I have to use the `--sign-key` command. But this is optional functionality and fixing the broken process is the priority here, so I can enable this nicety in a follow-up.\r\n\r\n### Builder-key diffing\r\n\r\nBuilder keys (as listed in ./contrib/builder-keys/keys.txt) are used by default to establish trust in a pubkey signature. This can be disabled with `--no-builder-keys`. \r\n\r\nIf builder keys are locally supplied (by running this command from the root of the repository), they are diffed with the remote version obtained over HTTPS from Github. A diff is reported if it exists, e.g.\r\n\r\n![image](https://user-images.githubusercontent.com/73197/133835761-5fad32fd-4126-448e-bc54-f638b8b87e90.png)\r\n\r\n### Granular JSON output\r\n\r\nBecause binary verification is now a gradient on the basis of an end user's trust in a set of pubkeys, users of this script may want a granular report on which signatures were used. Stderr logging can be parsed for this information, but a convenient JSON blob is also accessible using the `--json` flag:\r\n\r\n```sh\r\n% ./contrib/verifybinaries/verify.py 22.0-x86 --noninteractive --json 2>/dev/null\r\n\r\n{\r\n  \"good_trusted_sigs\": [\r\n    \"SigData('9D3CC86A72F8494342EA5FD10A41BDC3F4FAFF1C', 'Aaron Clauson (sipsorcery) <aaron@sipsorcery.com>', trusted=False, status='unknown')\",\r\n    \"SigData('637DB1E23370F84AFF88CCE03152347D07DA627C', 'Stephan Oeste (it) <it@oeste.de>', trusted=True, status='unknown')\",\r\n    \"SigData('9DEAE0DC7063249FB05474681E4AED62986CD25D', 'Wladimir J. van der Laan <laanwj@visucore.com>', trusted=True, status='unknown')\",\r\n    \"SigData('0AD83877C1F0CD1EE9BD660AD7CC770B81FD22A8', 'Ben Carman <benthecarman@live.com>', trusted=False, status='unknown')\",\r\n    \"SigData('152812300785C96444D3334D17565732E08E5E41', 'Andrew Chow (Official New Key) <achow101@gmail.com>', trusted=True, status='expired')\",\r\n    \"SigData('D1DBF2C4B96F2DEBF4C16654410108112E7EA81F', 'Hennadii Stepanov (GitHub key) <32963518+hebasto@users.noreply.github.com>', trusted=True, status='unknown')\",\r\n    \"SigData('590B7292695AFFA5B672CBB2E13FC145CD3F4304', 'Antoine Poinsot <darosior@protonmail.com>', trusted=True, status='unknown')\"\r\n  ],\r\n  \"good_untrusted_sigs\": [\r\n    \"SigData('0CCBAAFD76A2ECE2CCD3141DE2FFD5B1D88CA97D', '.0xB10C <0xb10c@gmail.com>', trusted=False, status='unknown')\",\r\n    \"SigData('28F5900B1BB5D1A4B6B6D1A9ED357015286A333D', 'Duncan Dean <duncangleeddean@gmail.com>', trusted=False, status='unknown')\",\r\n    \"SigData('CFB16E21C950F67FA95E558F2EEB9F5CC09526C1', 'Michael Ford (bitcoin-otc) <fanquake@gmail.com>', trusted=False, status='unknown')\",\r\n    \"SigData('6E01EEC9656903B0542B8F1003DB6322267C373B', 'Oliver Gugger <gugger@gmail.com>', trusted=False, status='unknown')\",\r\n    \"SigData('74E2DEF5D77260B98BC19438099BAD163C70FBFA', 'Will Clark <will8clark@gmail.com>', trusted=False, status='unknown')\"\r\n  ],\r\n  \"unknown_sigs\": [\r\n    \"SigData('82921A4B88FD454B7EB8CE3C796C4109063D4EAF', '', trusted=False, status='')\"\r\n  ],\r\n  \"bad_sigs\": [],\r\n  \"verified_binaries\": [\r\n    \"bitcoin-22.0-x86_64-linux-gnu.tar.gz\"\r\n  ]\r\n}\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/73197/133836066-251cc628-709f-4489-8f22-7beee6d9e72e.png)\r\n\r\n\r\n### Backwards incompatibility\r\n\r\nNote that I have broken the interface; the script is no longer invoked in the same way and output differs. I initially tried to retain the old format, but I found it made less and less sense for the new signature scheme, and was not easily parsed sensibly. If there are users that rely on the old output structure, they can copy the script from an old version of the source tree.\r\n\r\n### Examples\r\n\r\nValidate releases with default settings:\r\n```sh\r\n./contrib/verifybinaries/verify.py 22.0\r\n./contrib/verifybinaries/verify.py 22.0-rc2-x86_64\r\n./contrib/verifybinaries/verify.py bitcoin-core-0.13.0-rc3\r\n```\r\n\r\nGet JSON output and don't prompt for user input (no auto key import):\r\n\r\n```sh\r\n./contrib/verifybinaries/verify.py 22.0-x86 --json --noninteractive\r\n```\r\n\r\nDon't trust builder-keys by default, and rely only on local GPG state and manually\r\nspecified keys, while requiring a threshold of at least 10 trusted signatures:\r\n```sh\r\n./contrib/verifybinaries/verify.py 22.0 \\\r\n    --no-builder-keys \\\r\n    --trusted-keys 74E2DEF5D77260B98BC19438099BAD163C70FBFA,9D3CC86A72F8494342EA5FD10A41BDC3F4FAFF1C \\\r\n    --min-trusted-sigs 10\r\n```\r\n\r\n\r\n### Followups\r\n\r\n- [x] update https://github.com/bitcoin-core/bitcoincore.org with new verification instructions\r\n    - https://github.com/bitcoin-core/bitcoincore.org/pull/803\r\n- [ ] fix local GPG trust elevation during pubkey import\r\n- [x] use `logging` facility instead of `print_*` functions\r\n- [x] write small `test.sh` exercising basic functionality with `--noninteractive`\r\n\r\n\r\n### New CLI interface\r\n\r\n```\r\n% ./contrib/verifybinaries/verify.py --help\r\n\r\nusage: verify.py [-h] [--verbose] [--cleanup] [--noninteractive]\r\n                 [--require-all-hosts] [--bitcoin-src-path [BITCOIN_SRC_PATH]]\r\n                 [--skip-import-builders]\r\n                 [--min-trusted-sigs [MIN_TRUSTED_SIGS]]\r\n                 [--keyserver [KEYSERVER]] [--trusted-keys [TRUSTED_KEYS]]\r\n                 [--no-builder-keys] [--json]\r\n                 version\r\n\r\nScript for verifying Bitcoin Core release binaries. This script attempts to\r\ndownload the sum file SHA256SUMS and corresponding signature file\r\nSHA256SUMS.asc from bitcoincore.org and bitcoin.org and compares them. The\r\nsum-signature file is signed by a number of builder keys. This script ensures\r\nthat there is a minimum threshold of signatures from pubkeys that we trust.\r\nThis trust is articulated on the basis of configuration options here, but by\r\ndefault is based upon a unionof (i) local GPG trust settings, and (ii) keys\r\nwhich appear in the builder-keys/keys.txt file. If a minimum good, trusted\r\nsignature threshold is met on the sum file, we then download the files\r\nspecified in SHA256SUMS, and check if the hashes of these files match those\r\nthat are specified. The script returns 0 if everything passes the checks. It\r\nreturns 1 if either the signature check or the hash check doesn't pass. If an\r\nerror occurs the return value is >= 2. Logging output goes to stderr and final\r\nbinary verification data goes to stdout. JSON output can by obtained by\r\nsetting env BINVERIFY_JSON=1.\r\n\r\npositional arguments:\r\n  version               version of the bitcoin release to download; of the\r\n                        format <major>.<minor>[.<patch>][-rc[0-9]][-platform].\r\n                        Example: 22.0-x86_64 or 0.21.0-rc2-osx\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n  --verbose\r\n  --cleanup             if specified, clean up files afterwards\r\n  --noninteractive      if specified, do not block for user input\r\n  --require-all-hosts   If set, require all hosts (https://bitcoincore.org,\r\n                        https://bitcoin.org) to provide signatures. (Sometimes\r\n                        bitcoin.org lags behind bitcoincore.org.)\r\n  --bitcoin-src-path [BITCOIN_SRC_PATH]\r\n                        specify path to bitcoin repository. Used to find\r\n                        builder keys.\r\n  --skip-import-builders\r\n                        If set, do not prompt to import builder pubkeys\r\n  --min-trusted-sigs [MIN_TRUSTED_SIGS]\r\n                        The minimum number of good signatures from recognized\r\n                        keys to require successful termination.\r\n  --keyserver [KEYSERVER]\r\n                        which keyserver to use\r\n  --trusted-keys [TRUSTED_KEYS]\r\n                        A list of trusted builder GPG keys, specified as CSV\r\n  --no-builder-keys     If set, do not trust the builder-keys from the bitcoin\r\n                        repo by default\r\n  --json                If set, output the result as JSON\r\n```",
   "closed_at" : "2023-03-29T06:30:53Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 44,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23020/comments",
   "created_at" : "2021-09-17T18:57:50Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23020/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/23020",
   "id" : 999636873,
   "labels" : [
      {
         "color" : "ffffee",
         "default" : false,
         "description" : null,
         "id" : 231994551,
         "name" : "Scripts and tools",
         "node_id" : "MDU6TGFiZWwyMzE5OTQ1NTE=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Scripts%20and%20tools"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23020/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII584r57km",
   "number" : 23020,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/23020.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23020",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/23020.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23020"
   },
   "reactions" : {
      "+1" : 3,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 2,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 5,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23020/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23020/timeline",
   "title" : "fix: contrib: allow multi-sig binary verification",
   "updated_at" : "2023-03-29T06:31:07Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23020",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
      "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jamesob/followers",
      "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jamesob",
      "id" : 73197,
      "login" : "jamesob",
      "node_id" : "MDQ6VXNlcjczMTk3",
      "organizations_url" : "https://api.github.com/users/jamesob/orgs",
      "received_events_url" : "https://api.github.com/users/jamesob/received_events",
      "repos_url" : "https://api.github.com/users/jamesob/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jamesob"
   }
}
