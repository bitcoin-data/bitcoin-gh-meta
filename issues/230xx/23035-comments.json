[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23053](https://github.com/bitcoin/bitcoin/pull/23053) ([fuzz] Use public methods in addrman fuzz tests by jnewbery)\n* [#22950](https://github.com/bitcoin/bitcoin/pull/22950) ([p2p] Pimpl AddrMan to abstract implementation details by amitiuttarwar)\n* [#22872](https://github.com/bitcoin/bitcoin/pull/22872) (log: improve checkaddrman logging with duration in milliseconds by jonatack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2021-09-19T15:22:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-922491047",
      "id" : 922491047,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5842_Bin",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922491047/reactions"
      },
      "updated_at" : "2021-10-04T17:34:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922491047",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, approach NACK. I don't think it makes sense to add this addrman-specific data into the `CAddress` class, which is used by many different components.\r\n\r\n> Two ways to expose them are (1) move them from CAddrInfo to CAddress or (2) use CAddrInfo instead of CAddress for the GetAddr_(), GetAddr() and GetAddresses() functions and callers.\r\n\r\nI don't think we want to do (2) either. In general, we're trying to encapsulate addrman more. `CAddrInfo` is an addrman implementation-specific class, so ideally it wouldn't be exposed at all in the header. That's done in #22950, which introduces a very clear compilation firewall between implementation and public interface.\r\n\r\nI think the best way to do this is update `CAddrMan::GetAddr()` to return a vector of tuples, `std::vector<std::tuple<CAddress, /* tried */ bool, /* refcount*/ int>>`, similar to how `Select()` is updated to return a `std::pair<>` in https://github.com/bitcoin/bitcoin/pull/22950/files#diff-164bd9e2e30f54d0a79eb7cc372309e2f2155edc6c3f051290ab078f03f6a771R89. That means that the public method is returning only what the caller needs, minimizing the coupling between implementation and client code.",
      "created_at" : "2021-09-19T15:56:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-922495928",
      "id" : 922495928,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5842_Cu4",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-19T15:56:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922495928",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @jnewbery. I agree the two approaches aren't ideal. Will have a look at your suggested approach.",
      "created_at" : "2021-09-19T16:01:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-922496560",
      "id" : 922496560,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5842_C4w",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-19T16:01:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922496560",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think the best way to do this is update `CAddrMan::GetAddr()` to return a vector of tuples, `std::vector<std::tuple<CAddress, /* tried */ bool, /* refcount*/ int>>`\r\n\r\nA vector of `std::pair` might be sufficient, because `nRefCount==0` means it's in Tried.",
      "created_at" : "2021-09-20T11:24:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-922841444",
      "id" : 922841444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843AXFk",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-20T11:24:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922841444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> A vector of `std::pair` might be sufficient, because `nRefCount==0` means it's in Tried.\r\n\r\nGood point, though I'm not sure we want to depend on that coupling.\r\n\r\n(Ideally I'll try to use a struct as it's nicer to work with.)",
      "created_at" : "2021-09-20T11:37:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-922849038",
      "id" : 922849038,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843AY8O",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-20T11:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922849038",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Ideally I'll try to use a struct as it's nicer to work with.\r\n\r\nI'm curious why that is. I would have thought that using structured bindings to unpack a returned tuple would be just as easy: https://en.cppreference.com/w/cpp/language/structured_binding#Case_2:_binding_a_tuple-like_type.\r\n\r\nAnother possible approach would be to add a new public method `GetAddressesWithRefcounts()` that could be used by the RPC code. That would avoid the need to update the `CConnman` and `PeerManager` code.",
      "created_at" : "2021-09-20T17:07:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-923114340",
      "id" : 923114340,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843BZtk",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-20T17:07:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923114340",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Pushed an update that doesn't touch CAddress or CAddrInfo while attempting to be clear and simple.",
      "created_at" : "2021-09-20T17:32:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-923133482",
      "id" : 923133482,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843BeYq",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-20T17:32:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923133482",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">> A vector of std::pair might be sufficient, because nRefCount==0 means it's in Tried.\r\n\r\n> Good point, though I'm not sure we want to depend on that coupling.\r\n\r\nI don't think there would be much logic coupling with a clearly documented function that returns pairs of < `CAddress`, `multiplicity_on_new` > with `0` for the second field indicating that the address is on the tried table. \r\n\r\n> Another possible approach would be to add a new public method GetAddressesWithRefcounts() that could be used by the RPC code. That would avoid the need to update the CConnman and PeerManager code.\r\n\r\nI like the idea of minimizing impact to the p2p code paths for this test-only functionality.",
      "created_at" : "2021-09-20T17:32:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-923133672",
      "id" : 923133672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843Bebo",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-20T17:32:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923133672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Hm, this isn't urgent, so it might be an idea to try the new public method variant based on/built on #22950 to be sure it's compatible.",
      "created_at" : "2021-09-20T18:02:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-923153690",
      "id" : 923153690,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843BjUa",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-20T18:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923153690",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs rebase?",
      "created_at" : "2021-09-21T07:35:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-923718525",
      "id" : 923718525,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843DtN9",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-21T07:35:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923718525",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Hm, this isn't urgent, so it might be an idea to try the new public method variant based on/built on #22950 to be sure it's compatible.\r\n\r\nAs long as you're just adding a new public method, it's compatible. @amitiuttarwar will need to update the header file to include that public method in the interface class declaration if this gets merged first, but I don't think that's any more/less work than merging the pimpl refactor first and then adding the public method.\r\n\r\nI'm happy to have a first attempt at implementing my suggestion if that'd be helpful to you.",
      "created_at" : "2021-09-21T08:39:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-923764309",
      "id" : 923764309,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843D4ZV",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-21T08:39:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923764309",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased after merge of #22831.\r\n\r\nStructs/classes:  I guess I like the friendly, readable built-in access to members via named methods, and their flexibility and adaptability to changing future requirements, like adding/removing members.\r\n\r\n> I'm happy to have a first attempt at implementing my suggestion if that'd be helpful to you.\r\n\r\nSGTM! can pull it in. With that alternative, maybe we could also remove the std::optional network arg from the existing GetAddr/GetAddresses functions.\r\n\r\n",
      "created_at" : "2021-09-21T12:31:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-923939903",
      "id" : 923939903,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843EjQ_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923939903/reactions"
      },
      "updated_at" : "2021-10-02T23:02:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923939903",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> SGTM! can pull it in.\r\n\r\nHere you go: https://github.com/jnewbery/bitcoin/tree/2021-09-getaddrwithrefcount. The first two commits add the new `GetAddrWithRefcount()` method. Let me know what you think!\r\n\r\n> With that alternative, maybe we could also remove the std::optional network arg from the existing GetAddr/GetAddresses functions.\r\n\r\nGreat idea! I added that as the final commit in the branch above.",
      "created_at" : "2021-09-21T13:08:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-923971357",
      "id" : 923971357,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843Eq8d",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-21T13:08:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923971357",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks! That is helpful. I see that I was misreading the previous suggestion.",
      "created_at" : "2021-09-21T13:41:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-924001229",
      "id" : 924001229,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843EyPN",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-21T13:42:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924001229",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-09-23T10:40:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-925696199",
      "id" : 925696199,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843LQDH",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-23T10:40:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/925696199",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm uncertain about this concept (adding table & refcount in `getnodeaddresses`), I don't currently have a strong opinion, so am just sharing some thoughts & tradeoffs:\r\n- From the POV of a user, I can see how this additional information could be interesting. Since the `getnodeaddresses` endpoint is already essentially for super users or clients utilizing addrman, it seems reasonable to add this implementation-specific information.\r\n- For functional tests, I don't think it makes sense to regularly test the internal storage mechanism of addrman. That seems better suited for unit tests. So, I'm not sure this is adding much value. If the root issue is expectations around what is on new vs tried because of collisions, adding a way to construct a deterministic addrman (eg. as suggested in https://github.com/bitcoin/bitcoin/pull/22831#discussion_r710894714) seems like a more robust solution.\r\n- For the unit tests, simply returning the address table & multiplicity if on new seems insufficient to support the current tests with a smaller interface, because several of the tests require the specific bucket & position of the address.\r\n- For the fuzz tests, specifically `addrman_serdeser`, this more informational endpoint could potentially be used to replace the `operator==()` functionality. That would be nice to simplify the interface, but reduce the thoroughness of the check, and require multiplicity + collisions to detect any inconsistencies in bucket hashing logic. Since the majority of the time in the fuzz test is spent filling an addrman, I think more thorough checks would be preferable. \r\n\r\nSo overall, I think the biggest benefit to this added functionality would be for superusers or clients using the RPC interface to observe or build on addrman. Additionally, there seems to be some marginal benefit for the functional tests. I am uncertain if these benefits outweigh the maintenance costs of the code.\r\n\r\nMany thanks to @mzumsande for collaborating to form these thoughts :) ",
      "created_at" : "2021-09-24T00:11:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-926251838",
      "id" : 926251838,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843NXs-",
      "performed_via_github_app" : null,
      "updated_at" : "2021-09-24T00:11:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926251838",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It may also be handy for `getnodeaddresses` to return all addresses, including IsTerrible() ones, along with a boolean field indicating whether the address is terrible or not.  Along with the other feedback here, it may be a good idea for `getnodeaddresses` to have its own GetAddr-like function that is separate from the one used by internal components.",
      "created_at" : "2021-10-05T11:02:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-934302975",
      "id" : 934302975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5843sFT_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934302975/reactions"
      },
      "updated_at" : "2021-10-05T11:02:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934302975",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This overlaps with https://github.com/bitcoin/bitcoin/pull/23826. It's not completely redundant, since that PR doesn't expose the tried/new and multiplicity through a public API, but it does add a method to fetch that data that can be used by the unit tests. I think that's probably enough, since addrman is now well-contained enough that it can be fully tested through the unit tests. WDYT @jonatack?",
      "created_at" : "2021-12-22T10:31:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-999466086",
      "id" : 999466086,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII5847kqRm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/999466086/reactions"
      },
      "updated_at" : "2021-12-22T10:31:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/999466086",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "What is the state of this change? It seems like it could have been (at least somewhat) obsoleted by other now-merged changes.",
      "created_at" : "2022-04-20T09:51:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-1103727375",
      "id" : 1103727375,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII585ByYsP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103727375/reactions"
      },
      "updated_at" : "2022-04-20T09:51:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103727375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Will update or close after reviewing the changes.",
      "created_at" : "2022-04-20T11:34:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-1103828611",
      "id" : 1103828611,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII585ByxaD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103828611/reactions"
      },
      "updated_at" : "2022-04-20T11:34:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103828611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Feel free to reopen once you've gotten a chance to look at this again.",
      "created_at" : "2022-05-04T09:05:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23035#issuecomment-1117083202",
      "id" : 1117083202,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23035",
      "node_id" : "IC_kwDOABII585ClVZC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117083202/reactions"
      },
      "updated_at" : "2022-05-04T09:05:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1117083202",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
