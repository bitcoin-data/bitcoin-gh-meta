{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Rationale\r\n- maintainability: no need to change further as these classes evolve\r\n- clarity for developers reading the code and this description\r\n- performance in some cases\r\n\r\nExcerpts from Scott Meyers' \"Effective C++, Third Edition\" (2005), Item 20, pages 86-94, and \"Effective Modern C++\" (2015), Item 41, pages 281-292:\r\n\r\n- Avoid passing objects of user-defined types by value.\r\n\r\n- One might conclude that all small types are good candidates for pass-by-value, even if they're user-defined. However, just because an object is small doesn't mean that calling its copy constructor is inexpensive.  Many objects--most STL containers among them--contain little more than a pointer, but copying such objects entails copying everything they point to. That can be very expensive.\r\n\r\n- Even when small objects have inexpensive copy constructors, there can be performance issues. Some compilers treat built-in and user-defined types differently, even if they have the same underlying representation. When that type of thing happens, you can be better off passing such objects by reference, because compilers will certainly put pointers (the implementation of references) into registers.\r\n\r\n- Another reason why small user-defined types are not necessarily good pass-by-value candidates is that, being user-defined, their size is subject to change. A type that's small now may be bigger in the future if its internal implementation changes.  Things can even change when switching to a different C++ implementation.\r\n\r\n- In general, the only types for which you can reasonably assume that pass-by-value is inexpensive are built-in types and STL iterator and function object types. For everything else, prefer pass-by-reference-to-const over pass-by-value.\r\n\r\n- Exception: possibly consider pass-by-value of user-defined types for copyable parameters that are cheap to move, if they are always copied anyway in their implementation.\r\n\r\n- When there are chains of function calls, each of which passes-by-value, the cost for the entire chain of calls accumulates and may not be something you can tolerate. With by-reference passing, chains of calls don't incur this kind of accumulated overhead.\r\n\r\n- The most practical approach may be to adopt a \"guilty until proven innocent\" policy for pass-by-value of user-defined types.\r\n",
   "closed_at" : "2022-07-30T16:02:23Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
      "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jonatack/followers",
      "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jonatack",
      "id" : 2415484,
      "login" : "jonatack",
      "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
      "organizations_url" : "https://api.github.com/users/jonatack/orgs",
      "received_events_url" : "https://api.github.com/users/jonatack/received_events",
      "repos_url" : "https://api.github.com/users/jonatack/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jonatack"
   },
   "comments" : 13,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23076/comments",
   "created_at" : "2021-09-23T14:51:40Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23076/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/23076",
   "id" : 1005529426,
   "labels" : [
      {
         "color" : "E6F6D6",
         "default" : false,
         "description" : null,
         "id" : 135961,
         "name" : "Refactoring",
         "node_id" : "MDU6TGFiZWwxMzU5NjE=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23076/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII584sMe9j",
   "number" : 23076,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/23076.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/23076",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/23076.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/23076"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23076/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23076/timeline",
   "title" : "refactor: pass CTxMemPool and CFeeRate in-param objects by const reference",
   "updated_at" : "2022-07-30T16:06:03Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/23076",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
      "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jonatack/followers",
      "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jonatack",
      "id" : 2415484,
      "login" : "jonatack",
      "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
      "organizations_url" : "https://api.github.com/users/jonatack/orgs",
      "received_events_url" : "https://api.github.com/users/jonatack/received_events",
      "repos_url" : "https://api.github.com/users/jonatack/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jonatack"
   }
}
