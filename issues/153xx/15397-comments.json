[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Related: https://github.com/bitcoin/bitcoin/pull/15282/files",
      "created_at" : "2019-02-13T15:12:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15397#issuecomment-463235404",
      "id" : 463235404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15397",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MzIzNTQwNA==",
      "updated_at" : "2019-02-13T15:12:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463235404",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/853468?v=4",
         "events_url" : "https://api.github.com/users/stevenroose/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stevenroose/followers",
         "following_url" : "https://api.github.com/users/stevenroose/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stevenroose/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stevenroose",
         "id" : 853468,
         "login" : "stevenroose",
         "node_id" : "MDQ6VXNlcjg1MzQ2OA==",
         "organizations_url" : "https://api.github.com/users/stevenroose/orgs",
         "received_events_url" : "https://api.github.com/users/stevenroose/received_events",
         "repos_url" : "https://api.github.com/users/stevenroose/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stevenroose/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stevenroose/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stevenroose"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256458391"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256458391"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Assigned 0.19.0, because this is python3.5 only",
      "commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "created_at" : "2019-02-13T15:51:44Z",
      "diff_hunk" : "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])\n \n         # Use a different signature hash type to sign.  This creates an equivalent but malleated clone.\n         # Don't send the clone anywhere yet\n-        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_raw, None, \"ALL|ANYONECANPAY\")\n+        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_tx.serialize().hex(), None, \"ALL|ANYONECANPAY\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256458391",
      "id" : 256458391,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjQ1ODM5MQ==",
      "original_commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "original_position" : 37,
      "path" : "test/functional/wallet_txn_clone.py",
      "position" : 37,
      "pull_request_review_id" : 203288792,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
      "updated_at" : "2019-02-13T15:52:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256458391",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256458622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256458622"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nice swap",
      "commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "created_at" : "2019-02-13T15:52:13Z",
      "diff_hunk" : "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256458622",
      "id" : 256458622,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjQ1ODYyMg==",
      "original_commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "original_position" : 32,
      "path" : "test/functional/wallet_txn_clone.py",
      "position" : 32,
      "pull_request_review_id" : 203288792,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
      "updated_at" : "2019-02-13T15:52:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256458622",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256462264"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256462264"
         }
      },
      "author_association" : "MEMBER",
      "body" : "SGTM, I like the syntax way more. So should I ping once 0.18 is branched?",
      "commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "created_at" : "2019-02-13T15:59:18Z",
      "diff_hunk" : "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])\n \n         # Use a different signature hash type to sign.  This creates an equivalent but malleated clone.\n         # Don't send the clone anywhere yet\n-        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_raw, None, \"ALL|ANYONECANPAY\")\n+        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_tx.serialize().hex(), None, \"ALL|ANYONECANPAY\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256462264",
      "id" : 256462264,
      "in_reply_to_id" : 256458391,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjQ2MjI2NA==",
      "original_commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "original_position" : 37,
      "path" : "test/functional/wallet_txn_clone.py",
      "position" : 37,
      "pull_request_review_id" : 203293720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
      "updated_at" : "2019-02-13T15:59:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256462264",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256467480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256467480"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Remind me #14954",
      "commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "created_at" : "2019-02-13T16:09:36Z",
      "diff_hunk" : "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])\n \n         # Use a different signature hash type to sign.  This creates an equivalent but malleated clone.\n         # Don't send the clone anywhere yet\n-        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_raw, None, \"ALL|ANYONECANPAY\")\n+        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_tx.serialize().hex(), None, \"ALL|ANYONECANPAY\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256467480",
      "id" : 256467480,
      "in_reply_to_id" : 256458391,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjQ2NzQ4MA==",
      "original_commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "original_position" : 37,
      "path" : "test/functional/wallet_txn_clone.py",
      "position" : 37,
      "pull_request_review_id" : 203300135,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
      "updated_at" : "2019-02-13T16:09:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256467480",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256512965"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256512965"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Parantheses redundant :-)",
      "commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "created_at" : "2019-02-13T17:49:31Z",
      "diff_hunk" : "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256512965",
      "id" : 256512965,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjUxMjk2NQ==",
      "original_commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "original_position" : 32,
      "path" : "test/functional/wallet_txn_clone.py",
      "position" : 32,
      "pull_request_review_id" : 203355921,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
      "updated_at" : "2019-02-13T17:49:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256512965",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256512983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256512983"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Parantheses redundant :-)",
      "commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "created_at" : "2019-02-13T17:49:34Z",
      "diff_hunk" : "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r256512983",
      "id" : 256512983,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjUxMjk4Mw==",
      "original_commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "original_position" : 31,
      "path" : "test/functional/wallet_txn_clone.py",
      "position" : 31,
      "pull_request_review_id" : 203355949,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
      "updated_at" : "2019-02-13T17:49:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256512983",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Oh yes. Thanks for doing this.\r\nutACK 6aaa0abc1241ad26f5895760701e77c9c8e93924 once 0.18 is branched off.",
      "created_at" : "2019-02-14T01:55:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15397#issuecomment-463453673",
      "id" : 463453673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15397",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MzQ1MzY3Mw==",
      "updated_at" : "2019-02-14T01:55:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/463453673",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r257713875"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257713875"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Already broken in `master`, so just going to merge this as well :woman_shrugging: \r\n\r\n```sh\r\n$ git grep -l '\\.hex()' test/\r\ntest/functional/mining_basic.py\r\ntest/functional/test_framework/wallet_util.py\r\ntest/functional/wallet_txn_clone.py\r\n",
      "commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "created_at" : "2019-02-18T14:20:43Z",
      "diff_hunk" : "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])\n \n         # Use a different signature hash type to sign.  This creates an equivalent but malleated clone.\n         # Don't send the clone anywhere yet\n-        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_raw, None, \"ALL|ANYONECANPAY\")\n+        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_tx.serialize().hex(), None, \"ALL|ANYONECANPAY\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r257713875",
      "id" : 257713875,
      "in_reply_to_id" : 256458391,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzcxMzg3NQ==",
      "original_commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "original_position" : 37,
      "path" : "test/functional/wallet_txn_clone.py",
      "position" : 37,
      "pull_request_review_id" : 204810972,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
      "updated_at" : "2019-02-18T14:20:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257713875",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r257714879"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257714879"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah at least partially my bad :1st_place_medal: ",
      "commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "created_at" : "2019-02-18T14:23:28Z",
      "diff_hunk" : "@@ -72,19 +74,14 @@ def run_test(self):\n         clone_raw = self.nodes[0].createrawtransaction(clone_inputs, clone_outputs, clone_locktime)\n \n         # createrawtransaction randomizes the order of its outputs, so swap them if necessary.\n-        # output 0 is at version+#inputs+input+sigstub+sequence+#outputs\n-        # 40 BTC serialized is 00286bee00000000\n-        pos0 = 2 * (4 + 1 + 36 + 1 + 4 + 1)\n-        hex40 = \"00286bee00000000\"\n-        output_len = 16 + 2 + 2 * int(\"0x\" + clone_raw[pos0 + 16:pos0 + 16 + 2], 0)\n-        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_raw[pos0:pos0 + 16] != hex40 or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_raw[pos0:pos0 + 16] == hex40):\n-            output0 = clone_raw[pos0:pos0 + output_len]\n-            output1 = clone_raw[pos0 + output_len:pos0 + 2 * output_len]\n-            clone_raw = clone_raw[:pos0] + output1 + output0 + clone_raw[pos0 + 2 * output_len:]\n+        clone_tx = CTransaction()\n+        clone_tx.deserialize(io.BytesIO(bytes.fromhex(clone_raw)))\n+        if (rawtx1[\"vout\"][0][\"value\"] == 40 and clone_tx.vout[0].nValue != 40*COIN or rawtx1[\"vout\"][0][\"value\"] != 40 and clone_tx.vout[0].nValue == 40*COIN):\n+            (clone_tx.vout[0], clone_tx.vout[1]) = (clone_tx.vout[1], clone_tx.vout[0])\n \n         # Use a different signature hash type to sign.  This creates an equivalent but malleated clone.\n         # Don't send the clone anywhere yet\n-        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_raw, None, \"ALL|ANYONECANPAY\")\n+        tx1_clone = self.nodes[0].signrawtransactionwithwallet(clone_tx.serialize().hex(), None, \"ALL|ANYONECANPAY\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15397#discussion_r257714879",
      "id" : 257714879,
      "in_reply_to_id" : 256458391,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzcxNDg3OQ==",
      "original_commit_id" : "6aaa0abc1241ad26f5895760701e77c9c8e93924",
      "original_position" : 37,
      "path" : "test/functional/wallet_txn_clone.py",
      "position" : 37,
      "pull_request_review_id" : 204812258,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15397",
      "updated_at" : "2019-02-18T14:23:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/257714879",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   }
]
