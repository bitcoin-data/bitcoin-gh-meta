{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "I was issuing the command 'verifyblock 4 0', that is, highest level, all blocks, and then after level 3 verification, when core is performing level 4 verification, it crashes:\r\n\r\n```\r\nbitcoin-qt: [...]/src/validation.cpp:1838: bool CChainState::ConnectBlock(const CBlock&, CValidationState&, CBlockIndex*, CCoinsViewCache&, const CChainParams&, bool): Assertion `hashPrevBlock == view.GetBestBlock()' failed.\r\nAborted (core dumped)\r\n```\r\n\r\nI did trace the code, and I found out that actually, verifychain (level 4) with any block count higher than the coin cache will result in assertion failure.\r\n\r\nIf you take a look at CVerifyDB::VerifyDB() in validation.cpp, there's an issue, as follow:\r\n\r\nWhen you specify level 3 or 4, the level 3 verification process will try to disconnect all the blocks, from the tip, down to the depth you specified.  It does this on a copy of the coinsview, that is, on a cached view:\r\n\r\nCCoinsViewCache coins(coinsview);\r\n\r\nAlso, the level 3 verification will only disconnect blocks from this cached view that are in memory\r\n\r\n```\r\n        // check level 3: check for inconsistencies during memory-only disconnect of tip blocks\r\n        if (nCheckLevel >= 3 && (coins.DynamicMemoryUsage() + pcoinsTip->DynamicMemoryUsage()) <= nCoinCacheUsage) {\r\n            assert(coins.GetBestBlock() == pindex->GetBlockHash());\r\n            DisconnectResult res = g_chainstate.DisconnectBlock(block, pindex, coins);\r\n            [...]\r\n        }\r\n```\r\n\r\nOn my system, with approx 405MB left for coin cache (value I get in nCoinCacheUsage), this gives about 1600 blocks worth of chainstate data.\r\n\r\nSo, if you specify for example a depth of 2000 blocks, and the coin cache only have 1600 blocks worth of chainstate data, then this inner loop will effectively disconnect only 1600 blocks.  The main outer loop will continue to perform level 1 and 2 verification, and just skip verifying undo data on the coin cache (since we do not wish to modify on-disk chainstate data).\r\n\r\nMoving out of the main loop (which verify 2000 blocks in the example above), the pindex will have stepped back 2000 blocks.\r\n\r\nHowever, at level 4 verification, the level 4 loop will try to re-connect all the 2000 blocks.  It will call ConnectBlock() successively with index (active chain height - 1999) up to (active chain height), providing the coin cache view on which to reconnect the blocks.\r\n\r\nHowever, there is now a de-synchronization, between the block to reconnect (pindex is 2000 blocks away from tip), and the coin cached view (1600 blocks from tip).\r\n\r\nSo, when ConnectBlock() verify that the provided block's previous block hash is the coin view best block hash, poof!\r\n\r\nEric",
   "closed_at" : "2020-04-26T15:28:07Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15316/comments",
   "created_at" : "2019-02-01T15:03:36Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15316/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/15316",
   "id" : 405738553,
   "labels" : [
      {
         "color" : "6060aa",
         "default" : false,
         "description" : null,
         "id" : 118379652,
         "name" : "Validation",
         "node_id" : "MDU6TGFiZWwxMTgzNzk2NTI=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15316/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU0MDU3Mzg1NTM=",
   "number" : 15316,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "'verifychain 4 0' result in \"const CChainParams&, bool): Assertion `hashPrevBlock == view.GetBestBlock()' failed\"",
   "updated_at" : "2020-04-26T15:28:07Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15316",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/10502243?v=4",
      "events_url" : "https://api.github.com/users/ehoffman2/events{/privacy}",
      "followers_url" : "https://api.github.com/users/ehoffman2/followers",
      "following_url" : "https://api.github.com/users/ehoffman2/following{/other_user}",
      "gists_url" : "https://api.github.com/users/ehoffman2/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/ehoffman2",
      "id" : 10502243,
      "login" : "ehoffman2",
      "node_id" : "MDQ6VXNlcjEwNTAyMjQz",
      "organizations_url" : "https://api.github.com/users/ehoffman2/orgs",
      "received_events_url" : "https://api.github.com/users/ehoffman2/received_events",
      "repos_url" : "https://api.github.com/users/ehoffman2/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/ehoffman2/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/ehoffman2/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/ehoffman2"
   }
}
