{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "<!-- This issue tracker is only for technical issues related to Bitcoin Core.\r\n\r\nGeneral bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\r\n\r\nFor reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\r\n\r\nIf the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\r\n\r\n<!-- Describe the issue -->\r\n### [Setup]\r\nI was trying the opt-in rbf feature by preparing the follow setup:\r\n```\r\nAvailable UTXO:\r\nU1: 1BTC\r\nU2: 2BTC\r\nU3: 3BTC\r\n```\r\n\r\n```\r\nTX1:\r\nvin: [U1, U2]\r\nvout: [Alice: 2.9999BTC]\r\n```\r\n\r\n```\r\nTX2:\r\nvin: [U1, U2, U3]\r\nvout: [Alice: 2.9999BTC, Change: 2.9995BTC]\r\n```\r\n\r\nBoth TX1 and TX2 have their input already marked as replaceable (I used `nSequence`: `0xffffff00`), \r\n\r\n<!--- What behavior did you expect? -->\r\n### [Expected Behaviour]\r\nI expect the second transaction will replace the first one.\r\n\r\n<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\r\n### [Actual Behaviour]\r\nbitcoind sendrawtransaciton CLI returns error when trying to broadcast the second transaction:\r\n```\r\nreplacement-adds-unconfirmed, replacement f67ddaf7df71c376c5ac2c0d802b19334f9bb9d07e4ab88bf0f98b057797d8a3 adds unconfirmed input, idx 2 (code 64)\r\n```\r\n\r\n<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\r\n\r\n<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\r\n### [Version]\r\n\r\nbitcoind: 0.17.0.1\r\n\r\n<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\r\n\r\n<!-- For the GUI-related issue on Linux provide names and versions of a distro, a desktop environment and a graphical shell (if relevant). -->\r\n\r\n<!-- Any extra information that might be useful in the debugging process. -->\r\n### [Investigation]\r\n\r\nAfter some investigation, I found that in the code\r\nhttps://github.com/bitcoin/bitcoin/blob/5cdb82111cc128d68ba5268eb94787110ce1fe6e/src/validation.cpp#L859\r\nIt checks that the vins have to be one of the previous vins used in the pool (If I understand the comment correctly).\r\n\r\nIs this an expected behaviour? Because with this design, reusing the above setup, since the first setup I have already used up all the amount in U1 and U2, 2.9999BTC + 0.0001BTC fee. If I want to increase the fee, I must include another UTXO or I have to reduce the amount to spent in output to leave space for the relay fee.\r\n\r\n<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->\r\n",
   "closed_at" : "2020-04-28T12:43:02Z",
   "closed_by" : {
      "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
      "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
      "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/MarcoFalke",
      "id" : 6399679,
      "login" : "MarcoFalke",
      "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
      "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
      "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
      "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/MarcoFalke"
   },
   "comments" : 6,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15369/comments",
   "created_at" : "2019-02-08T08:41:35Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15369/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/15369",
   "id" : 408054346,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15369/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU0MDgwNTQzNDY=",
   "number" : 15369,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Why can't I append an UTXO unseen in the mempool in a replacement transaction?",
   "updated_at" : "2020-04-28T12:43:03Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15369",
   "user" : {
      "avatar_url" : "https://avatars1.githubusercontent.com/u/16665951?v=4",
      "events_url" : "https://api.github.com/users/calvinlauco/events{/privacy}",
      "followers_url" : "https://api.github.com/users/calvinlauco/followers",
      "following_url" : "https://api.github.com/users/calvinlauco/following{/other_user}",
      "gists_url" : "https://api.github.com/users/calvinlauco/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/calvinlauco",
      "id" : 16665951,
      "login" : "calvinlauco",
      "node_id" : "MDQ6VXNlcjE2NjY1OTUx",
      "organizations_url" : "https://api.github.com/users/calvinlauco/orgs",
      "received_events_url" : "https://api.github.com/users/calvinlauco/received_events",
      "repos_url" : "https://api.github.com/users/calvinlauco/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/calvinlauco/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/calvinlauco/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/calvinlauco"
   }
}
