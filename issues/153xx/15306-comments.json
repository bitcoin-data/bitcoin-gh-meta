[
   {
      "author_association" : "MEMBER",
      "body" : "Requesting @jonasschnelli and @ryanofsky input, since they were the last to look at `nTimeFirstKey` in #9034 and #9108. Also @MeshCollider since he touched `nTimeFirstKey` in #15032.",
      "created_at" : "2019-01-31T21:49:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15306#issuecomment-459519434",
      "id" : 459519434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1OTUxOTQzNA==",
      "updated_at" : "2019-01-31T21:49:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459519434",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think nTimeFirstKey is only read when the wallet is being loaded from file\r\n\r\nNo, `UpdateTimeFirstKey` reads it to keep track of the minimum.\r\n\r\nEdit: ok, there is no use case for the always updated `nTimeFirstKey`.\r\n\r\n> there should be a function `GetWalletBirthday()` to iterate through the wallet keys\r\n\r\nHonestly the tradeoff looks worst - keep track of the minimum timestamp vs iterate over all keys..\r\n\r\nEdit: if it turns to be used then I think it's preferable to keep track of `nTimeFirstKey`.\r\n\r\n> I think `-rescan` as a wallet command-line argument can also be removed.\r\n\r\nÃ°ÂÂÂ",
      "created_at" : "2019-02-04T19:34:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15306#issuecomment-460381384",
      "id" : 460381384,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MDM4MTM4NA==",
      "updated_at" : "2019-02-04T23:27:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/460381384",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> the tradeoff looks worst - keep track of the minimum timestamp vs iterate over all keys..\r\n\r\nI expect the 'iterate over all keys in memory' operation is very short compared to the other events that are happening at wallet load/startup, such as parsing all key-values from the wallet file.\r\n\r\nThe reason that I prefer this to storing a wallet member variable is that the current `nTimeFirstKey` is confusing. People think that it needs to be updated when any key is updated in the wallet. I spent quite a long time digging into the use of `nTimeFirstKey` in my review of #15032, and you believed that it needed to be updated even when reviewing this issue, after I told you that it doesn't need to be updated! The fact that we were both tripped up by this tells me that it's confusing and should be changed :slightly_smiling_face: ",
      "created_at" : "2019-02-05T16:10:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15306#issuecomment-460697456",
      "id" : 460697456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2MDY5NzQ1Ng==",
      "updated_at" : "2019-02-05T16:10:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/460697456",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Right, it's not clear. I just think it's preferable constant time getter than a linear search, and in that case it could have better comments explaining it.",
      "created_at" : "2019-02-15T16:06:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15306#issuecomment-464104205",
      "id" : 464104205,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ2NDEwNDIwNQ==",
      "updated_at" : "2019-02-15T16:06:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/464104205",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I just think it's preferable constant time getter than a linear search\r\n\r\nFWIW, I agree with jnewbery here. The nTimeFirstKey logic seems fragile and difficult to understand. I wouldn't think its worth keeping around to avoid a linear search in hypothetical future code, so personally I'd be happy to see a PR removing it.",
      "created_at" : "2019-07-17T21:19:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15306#issuecomment-512572794",
      "id" : 512572794,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxMjU3Mjc5NA==",
      "updated_at" : "2019-07-17T21:19:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512572794",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. This seems to be triggering a rescan on a fresh wallet, which makes no sense. On an existing wallet, we should have a proper locator, so overwriting the block height of the locator with nTimeFirstKey seems fragile and unnecessary. Question: Would we unnecessarily rescan the whole chain when loading an existing wallet that has one of the key's `metadata.nTime == 1`? I hope not.",
      "created_at" : "2019-07-23T20:10:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15306#issuecomment-514365144",
      "id" : 514365144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDM2NTE0NA==",
      "updated_at" : "2019-07-23T20:10:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514365144",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> On an existing wallet, we should have a proper locator, so overwriting the block height of the locator with nTimeFirstKey seems fragile and unnecessary\r\n\r\nI figure it's supposed to be an optimization in case the locator gets zapped or something. But in the normal case agree it should be unnecessary. I think the proposal here is only to get rid of `nTimeFirstKey` without changing this behavior, though.\r\n\r\n> Question: Would we unnecessarily rescan the whole chain when loading an existing wallet that has one of the key's metadata.nTime == 1?\r\n\r\nNot unless the locator forked at the beginning of the chain. The `findFirstBlockWithTimeAndHeight` call treats `rescan_height` as a minimum block height.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/e6e99d4f757f2e5052f0cc68951c75e91e4753e3/src/wallet/wallet.cpp#L4511-L4513\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/e6e99d4f757f2e5052f0cc68951c75e91e4753e3/src/interfaces/chain.cpp#L96\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/e6e99d4f757f2e5052f0cc68951c75e91e4753e3/src/chain.h#L468-L469",
      "created_at" : "2019-07-23T20:31:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15306#issuecomment-514372096",
      "id" : 514372096,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15306",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDM3MjA5Ng==",
      "updated_at" : "2019-07-23T20:31:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514372096",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
