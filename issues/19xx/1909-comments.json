[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1909#discussion_r1766996"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1909"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1766996"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What if OutputDebugStringF is being called twice simultaneously? This doesn't solve anything, unless you have a guaranteed call of this function while still in single-thread modus. That's almost certainly the case, but if it is, why not make it obvious, and have an InitLogging() function, called in init?\n\nI'm nitpicking. ACK.\n",
      "commit_id" : "cac6b389d101999d98c3137b17812cce062f924d",
      "created_at" : "2012-10-04T21:02:38Z",
      "diff_hunk" : "@@ -220,8 +220,14 @@ inline int OutputDebugStringF(const char* pszFormat, ...)\n         if (fileout)\n         {\n             static bool fStartedNewLine = true;\n-            static boost::mutex mutexDebugLog;\n-            boost::mutex::scoped_lock scoped_lock(mutexDebugLog);\n+\n+            // This routine may be called by global destructors during shutdown.\n+            // Since the order of destruction of static/global objects is undefined,\n+            // allocate mutexDebugLog on the heap the first time this routine\n+            // is called to avoid crashes during shutdown.\n+            static boost::mutex* mutexDebugLog = NULL;\n+            if (mutexDebugLog == NULL) mutexDebugLog = new boost::mutex();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1909#discussion_r1766996",
      "id" : 1766996,
      "line" : 229,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjY5OTY=",
      "original_commit_id" : "cac6b389d101999d98c3137b17812cce062f924d",
      "original_line" : null,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/util.cpp",
      "position" : 12,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1909",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1766996/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-10-04T21:02:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1766996",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/1909#discussion_r1769855"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1909"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1769855"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@sipa I also proposed that in #1832. I'm for explicitly constructing and destructing the global objects, such as logging and db, enforced by assertions. This makes thiings more predictable and maintainable than armoring against all possible non-determinism (which is pretty much impossible, you will forget something).\n\nThen again, it's good to have a fix in for 0.7.1. ACK.\n",
      "commit_id" : "cac6b389d101999d98c3137b17812cce062f924d",
      "created_at" : "2012-10-05T05:27:37Z",
      "diff_hunk" : "@@ -220,8 +220,14 @@ inline int OutputDebugStringF(const char* pszFormat, ...)\n         if (fileout)\n         {\n             static bool fStartedNewLine = true;\n-            static boost::mutex mutexDebugLog;\n-            boost::mutex::scoped_lock scoped_lock(mutexDebugLog);\n+\n+            // This routine may be called by global destructors during shutdown.\n+            // Since the order of destruction of static/global objects is undefined,\n+            // allocate mutexDebugLog on the heap the first time this routine\n+            // is called to avoid crashes during shutdown.\n+            static boost::mutex* mutexDebugLog = NULL;\n+            if (mutexDebugLog == NULL) mutexDebugLog = new boost::mutex();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1909#discussion_r1769855",
      "id" : 1769855,
      "line" : 229,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk4NTU=",
      "original_commit_id" : "cac6b389d101999d98c3137b17812cce062f924d",
      "original_line" : null,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/util.cpp",
      "position" : 12,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/1909",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1769855/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2012-10-05T05:27:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1769855",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/cac6b389d101999d98c3137b17812cce062f924d for binaries and test log.\n",
      "created_at" : "2012-10-05T12:14:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1909#issuecomment-9173452",
      "id" : 9173452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1909",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDkxNzM0NTI=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9173452/reactions"
      },
      "updated_at" : "2012-10-05T12:14:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9173452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=4",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "node_id" : "MDQ6VXNlcjIxMTA5MDc=",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, it just seems terribly odd and possibly error-prone to allocate a lock... in a racy fashion.\n\nJust make the lock global and put it early in main, to make sure it is instantiated/initialized before anything else in the program.\n\nAs it stands now, either this your change or without, the first-use occurs very late in the program, and that seems like a root cause (or at least contributing factor).\n",
      "created_at" : "2012-10-08T22:09:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1909#issuecomment-9242045",
      "id" : 9242045,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1909",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDkyNDIwNDU=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9242045/reactions"
      },
      "updated_at" : "2012-10-08T22:09:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9242045",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jgarzik making it global and putting it early in main won't fix the problem; the order of global destructors is undefined in C++.\n\nAs long as there is a printf/OutputDebugStringF before we start creating threads (and there is, early in AppInit2()) there is no race.\n\nReworking logging should be done... someday...  For now, I think this little change is the right thing to do.\n",
      "created_at" : "2012-10-08T23:09:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1909#issuecomment-9243705",
      "id" : 9243705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1909",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDkyNDM3MDU=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9243705/reactions"
      },
      "updated_at" : "2012-10-08T23:09:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9243705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "gcc has long followed the now defined C++0x order described here: http://cpp0x.centaur.ath.cx/basic.start.term.html\n\n_\"If the completion of the constructor or dynamic initialization of an object with static storage duration is sequenced before that of another, the completion of the destructor of the second is sequenced before the initiation of the destructor of the first. If an object is initialized statically, the object is destroyed in the same order as if the object was dynamically initialized\"_\n",
      "created_at" : "2012-10-08T23:41:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1909#issuecomment-9244380",
      "id" : 9244380,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1909",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDkyNDQzODA=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9244380/reactions"
      },
      "updated_at" : "2012-10-08T23:41:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9244380",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I already acked this for 0.7.1 (assuming we want this out of the door soon), but it does need more thinking.\n\nIf you make the pointer global (i.s.o static) and explicitly initialize it in an InitLogging() (called directly at the beginning of AppInit2) function you avoid the destructor trouble, plus you don't make the safety of initialization dependent on who-calls-first. Then add an assert() to printf that the lock is allocated, just in case. Another plus is that you can use the same lock in `#ifdef WIN32 if(fPrintToDebugger)`, where the issue still exists.\n\nAfter all, printf _does_ have some prerequisite requirements: it needs the arguments to be parsed and DataDir to be set correctly, which is only guaranteed when entering AppInit2. What if someone accidentally adds a printf before this is done? (ie, in GUI initialization, after all a printf looks reaaallly harmless):\n- It logs to the wrong datadir (the default one). Not that big of an issue for a few log messages to end up in the wrong log. However,\n- It _caches_ this datadir in cachedPath, and will return it every time GetDataDir is called. Uh oh!\n\nAn explicit InitLogging() call would solve this, and trap all accidental calls to printf before everything is in order. \n\nTalking of GetDataDir, it has the same issue. Though we jump the shark as it will never enter the lock when the path is cached, which you expect by the time it reaches destructors :-) But I can see another subtle initialization race, I think.\n",
      "created_at" : "2012-10-09T06:01:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1909#issuecomment-9249891",
      "id" : 9249891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1909",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDkyNDk4OTE=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9249891/reactions"
      },
      "updated_at" : "2012-10-09T06:02:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9249891",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok.  I pinky-swear promise I'll rewrite this The Right Way for 0.8.\n",
      "created_at" : "2012-10-09T16:10:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1909#issuecomment-9267676",
      "id" : 9267676,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1909",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDkyNjc2NzY=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9267676/reactions"
      },
      "updated_at" : "2012-10-09T16:10:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9267676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Maybe The Right Way means using http://www.boost.org/doc/libs/1_32_0/doc/html/call_once.html ?\n",
      "created_at" : "2012-10-10T16:12:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/1909#issuecomment-9309099",
      "id" : 9309099,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/1909",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDkzMDkwOTk=",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9309099/reactions"
      },
      "updated_at" : "2012-10-10T16:12:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9309099",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   }
]
