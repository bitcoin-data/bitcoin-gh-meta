[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4415#discussion_r14225922"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14225922"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This removes the fAllowNull check. Not that I think that's critical, the server will validate the arguments.\n",
      "commit_id" : "e35b37b1b8252c3d3f66001ba1efccd263307add",
      "created_at" : "2014-06-26T05:34:31Z",
      "diff_hunk" : "@@ -15,92 +16,117 @@\n using namespace std;\n using namespace json_spirit;\n \n-template<typename T>\n-void ConvertTo(Value& value, bool fAllowNull=false)\n+class CRPCConvertParam\n {\n-    if (fAllowNull && value.type() == null_type)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4415#discussion_r14225922",
      "id" : 14225922,
      "line" : 21,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjI1OTIy",
      "original_commit_id" : "fbed7aa680fe56e124c9954a7bd3b328e7aad926",
      "original_line" : null,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/rpcclient.cpp",
      "position" : 16,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14225922/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-27T02:38:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14225922",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4415#discussion_r14226057"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14226057"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Either don't add an empty line before the else, or surround the first part with braces as well, it looks like there is no else clause and the `if(...) ...;` is separate while reading this code quickly.\n",
      "commit_id" : "e35b37b1b8252c3d3f66001ba1efccd263307add",
      "created_at" : "2014-06-26T05:43:11Z",
      "diff_hunk" : "@@ -15,92 +16,117 @@\n using namespace std;\n using namespace json_spirit;\n \n-template<typename T>\n-void ConvertTo(Value& value, bool fAllowNull=false)\n+class CRPCConvertParam\n {\n-    if (fAllowNull && value.type() == null_type)\n-        return;\n-    if (value.type() == str_type)\n-    {\n-        // reinterpret string as unquoted json value\n-        Value value2;\n-        string strJSON = value.get_str();\n-        if (!read_string(strJSON, value2))\n-            throw runtime_error(string(\"Error parsing JSON:\")+strJSON);\n-        ConvertTo<T>(value2, fAllowNull);\n-        value = value2;\n+public:\n+    std::string methodName;            // method whose params want conversion\n+    int paramIdx;                      // 0-based idx of param to convert\n+};\n+\n+static const CRPCConvertParam vRPCConvertParams[] =\n+{\n+    { \"stop\", 0 },\n+    { \"getaddednodeinfo\", 0 },\n+    { \"setgenerate\", 0 },\n+    { \"setgenerate\", 1 },\n+    { \"getnetworkhashps\", 0 },\n+    { \"getnetworkhashps\", 1 },\n+    { \"sendtoaddress\", 1 },\n+    { \"settxfee\", 0 },\n+    { \"getreceivedbyaddress\", 1 },\n+    { \"getreceivedbyaccount\", 1 },\n+    { \"listreceivedbyaddress\", 0 },\n+    { \"listreceivedbyaddress\", 1 },\n+    { \"listreceivedbyaccount\", 0 },\n+    { \"listreceivedbyaccount\", 1 },\n+    { \"getbalance\", 1 },\n+    { \"getblockhash\", 0 },\n+    { \"move\", 2 },\n+    { \"move\", 3 },\n+    { \"sendfrom\", 2 },\n+    { \"sendfrom\", 3 },\n+    { \"listtransactions\", 1 },\n+    { \"listtransactions\", 2 },\n+    { \"listaccounts\", 0 },\n+    { \"walletpassphrase\", 1 },\n+    { \"getblocktemplate\", 0 },\n+    { \"listsinceblock\", 1 },\n+    { \"sendmany\", 1 },\n+    { \"sendmany\", 2 },\n+    { \"addmultisigaddress\", 0 },\n+    { \"addmultisigaddress\", 1 },\n+    { \"createmultisig\", 0 },\n+    { \"createmultisig\", 1 },\n+    { \"listunspent\", 0 },\n+    { \"listunspent\", 1 },\n+    { \"listunspent\", 2 },\n+    { \"getblock\", 1 },\n+    { \"getrawtransaction\", 1 },\n+    { \"createrawtransaction\", 0 },\n+    { \"createrawtransaction\", 1 },\n+    { \"signrawtransaction\", 1 },\n+    { \"signrawtransaction\", 2 },\n+    { \"sendrawtransaction\", 1 },\n+    { \"gettxout\", 1 },\n+    { \"gettxout\", 2 },\n+    { \"lockunspent\", 0 },\n+    { \"lockunspent\", 1 },\n+    { \"importprivkey\", 2 },\n+    { \"verifychain\", 0 },\n+    { \"verifychain\", 1 },\n+    { \"keypoolrefill\", 0 },\n+    { \"getrawmempool\", 0 },\n+    { \"estimatefee\", 0 },\n+    { \"estimatepriority\", 0 },\n+};\n+\n+class CRPCConvertTable\n+{\n+private:\n+    std::set<std::pair<std::string, int> > members;\n+\n+public:\n+    CRPCConvertTable();\n+\n+    bool convert(const std::string& method, int idx) {\n+        return (members.count(std::make_pair(method, idx)) > 0);\n     }\n-    else\n-    {\n-        value = value.get_value<T>();\n+};\n+\n+CRPCConvertTable::CRPCConvertTable()\n+{\n+    const unsigned int n_elem =\n+        (sizeof(vRPCConvertParams) / sizeof(vRPCConvertParams[0]));\n+\n+    for (unsigned int i = 0; i < n_elem; i++) {\n+        members.insert(std::make_pair(vRPCConvertParams[i].methodName,\n+                                      vRPCConvertParams[i].paramIdx));\n     }\n }\n \n+static CRPCConvertTable rpcCvtTable;\n+\n // Convert strings to command-specific RPC representation\n Array RPCConvertValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n {\n     Array params;\n-    BOOST_FOREACH(const std::string &param, strParams)\n-        params.push_back(param);\n-\n-    int n = params.size();\n-\n-    //\n-    // Special case non-string parameter types\n-    //\n-    if (strMethod == \"stop\"                   && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"getaddednodeinfo\"       && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"setgenerate\"            && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getnetworkhashps\"       && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"getnetworkhashps\"       && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"sendtoaddress\"          && n > 1) ConvertTo<double>(params[1]);\n-    if (strMethod == \"settxfee\"               && n > 0) ConvertTo<double>(params[0]);\n-    if (strMethod == \"getreceivedbyaddress\"   && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getreceivedbyaccount\"   && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"listreceivedbyaddress\"  && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"listreceivedbyaddress\"  && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"listreceivedbyaccount\"  && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"listreceivedbyaccount\"  && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"getbalance\"             && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getblockhash\"           && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"move\"                   && n > 2) ConvertTo<double>(params[2]);\n-    if (strMethod == \"move\"                   && n > 3) ConvertTo<int64_t>(params[3]);\n-    if (strMethod == \"sendfrom\"               && n > 2) ConvertTo<double>(params[2]);\n-    if (strMethod == \"sendfrom\"               && n > 3) ConvertTo<int64_t>(params[3]);\n-    if (strMethod == \"listtransactions\"       && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"listtransactions\"       && n > 2) ConvertTo<int64_t>(params[2]);\n-    if (strMethod == \"listaccounts\"           && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"walletpassphrase\"       && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getblocktemplate\"       && n > 0) ConvertTo<Object>(params[0]);\n-    if (strMethod == \"listsinceblock\"         && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"sendmany\"               && n > 1) ConvertTo<Object>(params[1]);\n-    if (strMethod == \"sendmany\"               && n > 2) ConvertTo<int64_t>(params[2]);\n-    if (strMethod == \"addmultisigaddress\"     && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"addmultisigaddress\"     && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"createmultisig\"         && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"createmultisig\"         && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"listunspent\"            && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"listunspent\"            && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"listunspent\"            && n > 2) ConvertTo<Array>(params[2]);\n-    if (strMethod == \"getblock\"               && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"getrawtransaction\"      && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"createrawtransaction\"   && n > 0) ConvertTo<Array>(params[0]);\n-    if (strMethod == \"createrawtransaction\"   && n > 1) ConvertTo<Object>(params[1]);\n-    if (strMethod == \"signrawtransaction\"     && n > 1) ConvertTo<Array>(params[1], true);\n-    if (strMethod == \"signrawtransaction\"     && n > 2) ConvertTo<Array>(params[2], true);\n-    if (strMethod == \"sendrawtransaction\"     && n > 1) ConvertTo<bool>(params[1], true);\n-    if (strMethod == \"gettxout\"               && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"gettxout\"               && n > 2) ConvertTo<bool>(params[2]);\n-    if (strMethod == \"lockunspent\"            && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"lockunspent\"            && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"importprivkey\"          && n > 2) ConvertTo<bool>(params[2]);\n-    if (strMethod == \"verifychain\"            && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"verifychain\"            && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"keypoolrefill\"          && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"getrawmempool\"          && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"estimatefee\"            && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"estimatepriority\"       && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+\n+    for (unsigned int idx = 0; idx < strParams.size(); idx++) {\n+        const std::string& strVal = strParams[idx];\n+\n+        // insert string value directly\n+        if (!rpcCvtTable.convert(strMethod, idx))\n+            params.push_back(strVal);\n+\n+        // parse string as JSON, insert bool/number/object/etc. value\n+        else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4415#discussion_r14226057",
      "id" : 14226057,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjI2MDU3",
      "original_commit_id" : "fbed7aa680fe56e124c9954a7bd3b328e7aad926",
      "original_line" : null,
      "original_position" : 192,
      "original_start_line" : null,
      "path" : "src/rpcclient.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14226057/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-27T02:38:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14226057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4415#discussion_r14236694"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14236694"
         }
      },
      "author_association" : "NONE",
      "body" : "Agreed, this is pretty ugly that way...\n",
      "commit_id" : "e35b37b1b8252c3d3f66001ba1efccd263307add",
      "created_at" : "2014-06-26T12:12:40Z",
      "diff_hunk" : "@@ -15,92 +16,117 @@\n using namespace std;\n using namespace json_spirit;\n \n-template<typename T>\n-void ConvertTo(Value& value, bool fAllowNull=false)\n+class CRPCConvertParam\n {\n-    if (fAllowNull && value.type() == null_type)\n-        return;\n-    if (value.type() == str_type)\n-    {\n-        // reinterpret string as unquoted json value\n-        Value value2;\n-        string strJSON = value.get_str();\n-        if (!read_string(strJSON, value2))\n-            throw runtime_error(string(\"Error parsing JSON:\")+strJSON);\n-        ConvertTo<T>(value2, fAllowNull);\n-        value = value2;\n+public:\n+    std::string methodName;            // method whose params want conversion\n+    int paramIdx;                      // 0-based idx of param to convert\n+};\n+\n+static const CRPCConvertParam vRPCConvertParams[] =\n+{\n+    { \"stop\", 0 },\n+    { \"getaddednodeinfo\", 0 },\n+    { \"setgenerate\", 0 },\n+    { \"setgenerate\", 1 },\n+    { \"getnetworkhashps\", 0 },\n+    { \"getnetworkhashps\", 1 },\n+    { \"sendtoaddress\", 1 },\n+    { \"settxfee\", 0 },\n+    { \"getreceivedbyaddress\", 1 },\n+    { \"getreceivedbyaccount\", 1 },\n+    { \"listreceivedbyaddress\", 0 },\n+    { \"listreceivedbyaddress\", 1 },\n+    { \"listreceivedbyaccount\", 0 },\n+    { \"listreceivedbyaccount\", 1 },\n+    { \"getbalance\", 1 },\n+    { \"getblockhash\", 0 },\n+    { \"move\", 2 },\n+    { \"move\", 3 },\n+    { \"sendfrom\", 2 },\n+    { \"sendfrom\", 3 },\n+    { \"listtransactions\", 1 },\n+    { \"listtransactions\", 2 },\n+    { \"listaccounts\", 0 },\n+    { \"walletpassphrase\", 1 },\n+    { \"getblocktemplate\", 0 },\n+    { \"listsinceblock\", 1 },\n+    { \"sendmany\", 1 },\n+    { \"sendmany\", 2 },\n+    { \"addmultisigaddress\", 0 },\n+    { \"addmultisigaddress\", 1 },\n+    { \"createmultisig\", 0 },\n+    { \"createmultisig\", 1 },\n+    { \"listunspent\", 0 },\n+    { \"listunspent\", 1 },\n+    { \"listunspent\", 2 },\n+    { \"getblock\", 1 },\n+    { \"getrawtransaction\", 1 },\n+    { \"createrawtransaction\", 0 },\n+    { \"createrawtransaction\", 1 },\n+    { \"signrawtransaction\", 1 },\n+    { \"signrawtransaction\", 2 },\n+    { \"sendrawtransaction\", 1 },\n+    { \"gettxout\", 1 },\n+    { \"gettxout\", 2 },\n+    { \"lockunspent\", 0 },\n+    { \"lockunspent\", 1 },\n+    { \"importprivkey\", 2 },\n+    { \"verifychain\", 0 },\n+    { \"verifychain\", 1 },\n+    { \"keypoolrefill\", 0 },\n+    { \"getrawmempool\", 0 },\n+    { \"estimatefee\", 0 },\n+    { \"estimatepriority\", 0 },\n+};\n+\n+class CRPCConvertTable\n+{\n+private:\n+    std::set<std::pair<std::string, int> > members;\n+\n+public:\n+    CRPCConvertTable();\n+\n+    bool convert(const std::string& method, int idx) {\n+        return (members.count(std::make_pair(method, idx)) > 0);\n     }\n-    else\n-    {\n-        value = value.get_value<T>();\n+};\n+\n+CRPCConvertTable::CRPCConvertTable()\n+{\n+    const unsigned int n_elem =\n+        (sizeof(vRPCConvertParams) / sizeof(vRPCConvertParams[0]));\n+\n+    for (unsigned int i = 0; i < n_elem; i++) {\n+        members.insert(std::make_pair(vRPCConvertParams[i].methodName,\n+                                      vRPCConvertParams[i].paramIdx));\n     }\n }\n \n+static CRPCConvertTable rpcCvtTable;\n+\n // Convert strings to command-specific RPC representation\n Array RPCConvertValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n {\n     Array params;\n-    BOOST_FOREACH(const std::string &param, strParams)\n-        params.push_back(param);\n-\n-    int n = params.size();\n-\n-    //\n-    // Special case non-string parameter types\n-    //\n-    if (strMethod == \"stop\"                   && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"getaddednodeinfo\"       && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"setgenerate\"            && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getnetworkhashps\"       && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"getnetworkhashps\"       && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"sendtoaddress\"          && n > 1) ConvertTo<double>(params[1]);\n-    if (strMethod == \"settxfee\"               && n > 0) ConvertTo<double>(params[0]);\n-    if (strMethod == \"getreceivedbyaddress\"   && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getreceivedbyaccount\"   && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"listreceivedbyaddress\"  && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"listreceivedbyaddress\"  && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"listreceivedbyaccount\"  && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"listreceivedbyaccount\"  && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"getbalance\"             && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getblockhash\"           && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"move\"                   && n > 2) ConvertTo<double>(params[2]);\n-    if (strMethod == \"move\"                   && n > 3) ConvertTo<int64_t>(params[3]);\n-    if (strMethod == \"sendfrom\"               && n > 2) ConvertTo<double>(params[2]);\n-    if (strMethod == \"sendfrom\"               && n > 3) ConvertTo<int64_t>(params[3]);\n-    if (strMethod == \"listtransactions\"       && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"listtransactions\"       && n > 2) ConvertTo<int64_t>(params[2]);\n-    if (strMethod == \"listaccounts\"           && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"walletpassphrase\"       && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getblocktemplate\"       && n > 0) ConvertTo<Object>(params[0]);\n-    if (strMethod == \"listsinceblock\"         && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"sendmany\"               && n > 1) ConvertTo<Object>(params[1]);\n-    if (strMethod == \"sendmany\"               && n > 2) ConvertTo<int64_t>(params[2]);\n-    if (strMethod == \"addmultisigaddress\"     && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"addmultisigaddress\"     && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"createmultisig\"         && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"createmultisig\"         && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"listunspent\"            && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"listunspent\"            && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"listunspent\"            && n > 2) ConvertTo<Array>(params[2]);\n-    if (strMethod == \"getblock\"               && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"getrawtransaction\"      && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"createrawtransaction\"   && n > 0) ConvertTo<Array>(params[0]);\n-    if (strMethod == \"createrawtransaction\"   && n > 1) ConvertTo<Object>(params[1]);\n-    if (strMethod == \"signrawtransaction\"     && n > 1) ConvertTo<Array>(params[1], true);\n-    if (strMethod == \"signrawtransaction\"     && n > 2) ConvertTo<Array>(params[2], true);\n-    if (strMethod == \"sendrawtransaction\"     && n > 1) ConvertTo<bool>(params[1], true);\n-    if (strMethod == \"gettxout\"               && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"gettxout\"               && n > 2) ConvertTo<bool>(params[2]);\n-    if (strMethod == \"lockunspent\"            && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"lockunspent\"            && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"importprivkey\"          && n > 2) ConvertTo<bool>(params[2]);\n-    if (strMethod == \"verifychain\"            && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"verifychain\"            && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"keypoolrefill\"          && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"getrawmempool\"          && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"estimatefee\"            && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"estimatepriority\"       && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+\n+    for (unsigned int idx = 0; idx < strParams.size(); idx++) {\n+        const std::string& strVal = strParams[idx];\n+\n+        // insert string value directly\n+        if (!rpcCvtTable.convert(strMethod, idx))\n+            params.push_back(strVal);\n+\n+        // parse string as JSON, insert bool/number/object/etc. value\n+        else {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4415#discussion_r14236694",
      "id" : 14236694,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjM2Njk0",
      "original_commit_id" : "fbed7aa680fe56e124c9954a7bd3b328e7aad926",
      "original_line" : null,
      "original_position" : 192,
      "original_start_line" : null,
      "path" : "src/rpcclient.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14236694/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-27T02:38:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14236694",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4415#discussion_r14236879"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14236879"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, that's intentional.  It's not needed and adds no value.\n",
      "commit_id" : "e35b37b1b8252c3d3f66001ba1efccd263307add",
      "created_at" : "2014-06-26T12:19:05Z",
      "diff_hunk" : "@@ -15,92 +16,117 @@\n using namespace std;\n using namespace json_spirit;\n \n-template<typename T>\n-void ConvertTo(Value& value, bool fAllowNull=false)\n+class CRPCConvertParam\n {\n-    if (fAllowNull && value.type() == null_type)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4415#discussion_r14236879",
      "id" : 14236879,
      "line" : 21,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjM2ODc5",
      "original_commit_id" : "fbed7aa680fe56e124c9954a7bd3b328e7aad926",
      "original_line" : null,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/rpcclient.cpp",
      "position" : 16,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14236879/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-27T02:38:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14236879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK because 'better is better.'\n\nNit: this could probably be even simpler using boost::assign::insert and assigning into a multimap<string method, int paramIdx>.  See http://www.boost.org/doc/libs/1_55_0b1/libs/assign/doc/index.html \n",
      "created_at" : "2014-06-26T15:51:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4415#issuecomment-47243543",
      "id" : 47243543,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4415",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MjQzNTQz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/47243543/reactions"
      },
      "updated_at" : "2014-06-26T15:51:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/47243543",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/331997?v=4",
         "events_url" : "https://api.github.com/users/gavinandresen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gavinandresen/followers",
         "following_url" : "https://api.github.com/users/gavinandresen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gavinandresen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gavinandresen",
         "id" : 331997,
         "login" : "gavinandresen",
         "node_id" : "MDQ6VXNlcjMzMTk5Nw==",
         "organizations_url" : "https://api.github.com/users/gavinandresen/orgs",
         "received_events_url" : "https://api.github.com/users/gavinandresen/received_events",
         "repos_url" : "https://api.github.com/users/gavinandresen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gavinandresen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gavinandresen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yes, ACK after code formatting nit.\n",
      "created_at" : "2014-06-26T16:04:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4415#issuecomment-47245147",
      "id" : 47245147,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4415",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MjQ1MTQ3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/47245147/reactions"
      },
      "updated_at" : "2014-06-26T16:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/47245147",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased + Updated to add braces.\n",
      "created_at" : "2014-06-27T02:42:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4415#issuecomment-47302727",
      "id" : 47302727,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4415",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzAyNzI3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/47302727/reactions"
      },
      "updated_at" : "2014-06-27T02:42:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/47302727",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4415_e35b37b1b8252c3d3f66001ba1efccd263307add/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
      "created_at" : "2014-06-27T02:53:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4415#issuecomment-47303218",
      "id" : 47303218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/4415",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3MzAzMjE4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/47303218/reactions"
      },
      "updated_at" : "2014-06-27T02:53:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/47303218",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2110907?v=4",
         "events_url" : "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinPullTester/followers",
         "following_url" : "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinPullTester",
         "id" : 2110907,
         "login" : "BitcoinPullTester",
         "node_id" : "MDQ6VXNlcjIxMTA5MDc=",
         "organizations_url" : "https://api.github.com/users/BitcoinPullTester/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinPullTester/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinPullTester/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinPullTester/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinPullTester"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4415#discussion_r14352217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14352217"
         }
      },
      "author_association" : "NONE",
      "body" : "@jgarzik Let me ask this time :), is there still an open pull, which changes this to something more readable in the near future?\n",
      "commit_id" : "e35b37b1b8252c3d3f66001ba1efccd263307add",
      "created_at" : "2014-06-30T14:24:25Z",
      "diff_hunk" : "@@ -15,94 +16,118 @@\n using namespace std;\n using namespace json_spirit;\n \n-template<typename T>\n-void ConvertTo(Value& value, bool fAllowNull=false)\n+class CRPCConvertParam\n {\n-    if (fAllowNull && value.type() == null_type)\n-        return;\n-    if (value.type() == str_type)\n-    {\n-        // reinterpret string as unquoted json value\n-        Value value2;\n-        string strJSON = value.get_str();\n-        if (!read_string(strJSON, value2))\n-            throw runtime_error(string(\"Error parsing JSON:\")+strJSON);\n-        ConvertTo<T>(value2, fAllowNull);\n-        value = value2;\n+public:\n+    std::string methodName;            // method whose params want conversion\n+    int paramIdx;                      // 0-based idx of param to convert\n+};\n+\n+static const CRPCConvertParam vRPCConvertParams[] =\n+{\n+    { \"stop\", 0 },\n+    { \"getaddednodeinfo\", 0 },\n+    { \"setgenerate\", 0 },\n+    { \"setgenerate\", 1 },\n+    { \"getnetworkhashps\", 0 },\n+    { \"getnetworkhashps\", 1 },\n+    { \"sendtoaddress\", 1 },\n+    { \"settxfee\", 0 },\n+    { \"getreceivedbyaddress\", 1 },\n+    { \"getreceivedbyaccount\", 1 },\n+    { \"listreceivedbyaddress\", 0 },\n+    { \"listreceivedbyaddress\", 1 },\n+    { \"listreceivedbyaccount\", 0 },\n+    { \"listreceivedbyaccount\", 1 },\n+    { \"getbalance\", 1 },\n+    { \"getblockhash\", 0 },\n+    { \"move\", 2 },\n+    { \"move\", 3 },\n+    { \"sendfrom\", 2 },\n+    { \"sendfrom\", 3 },\n+    { \"listtransactions\", 1 },\n+    { \"listtransactions\", 2 },\n+    { \"listaccounts\", 0 },\n+    { \"walletpassphrase\", 1 },\n+    { \"getblocktemplate\", 0 },\n+    { \"listsinceblock\", 1 },\n+    { \"sendmany\", 1 },\n+    { \"sendmany\", 2 },\n+    { \"addmultisigaddress\", 0 },\n+    { \"addmultisigaddress\", 1 },\n+    { \"createmultisig\", 0 },\n+    { \"createmultisig\", 1 },\n+    { \"listunspent\", 0 },\n+    { \"listunspent\", 1 },\n+    { \"listunspent\", 2 },\n+    { \"getblock\", 1 },\n+    { \"getrawtransaction\", 1 },\n+    { \"createrawtransaction\", 0 },\n+    { \"createrawtransaction\", 1 },\n+    { \"signrawtransaction\", 1 },\n+    { \"signrawtransaction\", 2 },\n+    { \"sendrawtransaction\", 1 },\n+    { \"gettxout\", 1 },\n+    { \"gettxout\", 2 },\n+    { \"lockunspent\", 0 },\n+    { \"lockunspent\", 1 },\n+    { \"importprivkey\", 2 },\n+    { \"verifychain\", 0 },\n+    { \"verifychain\", 1 },\n+    { \"keypoolrefill\", 0 },\n+    { \"getrawmempool\", 0 },\n+    { \"estimatefee\", 0 },\n+    { \"estimatepriority\", 0 },\n+};\n+\n+class CRPCConvertTable\n+{\n+private:\n+    std::set<std::pair<std::string, int> > members;\n+\n+public:\n+    CRPCConvertTable();\n+\n+    bool convert(const std::string& method, int idx) {\n+        return (members.count(std::make_pair(method, idx)) > 0);\n     }\n-    else\n-    {\n-        value = value.get_value<T>();\n+};\n+\n+CRPCConvertTable::CRPCConvertTable()\n+{\n+    const unsigned int n_elem =\n+        (sizeof(vRPCConvertParams) / sizeof(vRPCConvertParams[0]));\n+\n+    for (unsigned int i = 0; i < n_elem; i++) {\n+        members.insert(std::make_pair(vRPCConvertParams[i].methodName,\n+                                      vRPCConvertParams[i].paramIdx));\n     }\n }\n \n+static CRPCConvertTable rpcCvtTable;\n+\n // Convert strings to command-specific RPC representation\n Array RPCConvertValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n {\n     Array params;\n-    BOOST_FOREACH(const std::string &param, strParams)\n-        params.push_back(param);\n-\n-    int n = params.size();\n-\n-    //\n-    // Special case non-string parameter types\n-    //\n-    if (strMethod == \"stop\"                   && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"getaddednodeinfo\"       && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"setgenerate\"            && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getnetworkhashps\"       && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"getnetworkhashps\"       && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"sendtoaddress\"          && n > 1) ConvertTo<double>(params[1]);\n-    if (strMethod == \"settxfee\"               && n > 0) ConvertTo<double>(params[0]);\n-    if (strMethod == \"getreceivedbyaddress\"   && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getreceivedbyaccount\"   && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"listreceivedbyaddress\"  && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"listreceivedbyaddress\"  && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"listreceivedbyaccount\"  && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"listreceivedbyaccount\"  && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"getbalance\"             && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getblockhash\"           && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"move\"                   && n > 2) ConvertTo<double>(params[2]);\n-    if (strMethod == \"move\"                   && n > 3) ConvertTo<int64_t>(params[3]);\n-    if (strMethod == \"sendfrom\"               && n > 2) ConvertTo<double>(params[2]);\n-    if (strMethod == \"sendfrom\"               && n > 3) ConvertTo<int64_t>(params[3]);\n-    if (strMethod == \"listtransactions\"       && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"listtransactions\"       && n > 2) ConvertTo<int64_t>(params[2]);\n-    if (strMethod == \"listaccounts\"           && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"walletpassphrase\"       && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"prioritisetransaction\"  && n > 1) ConvertTo<double>(params[1]);\n-    if (strMethod == \"prioritisetransaction\"  && n > 2) ConvertTo<int64_t>(params[2]);\n-    if (strMethod == \"getblocktemplate\"       && n > 0) ConvertTo<Object>(params[0]);\n-    if (strMethod == \"listsinceblock\"         && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"sendmany\"               && n > 1) ConvertTo<Object>(params[1]);\n-    if (strMethod == \"sendmany\"               && n > 2) ConvertTo<int64_t>(params[2]);\n-    if (strMethod == \"addmultisigaddress\"     && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"addmultisigaddress\"     && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"createmultisig\"         && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"createmultisig\"         && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"listunspent\"            && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"listunspent\"            && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"listunspent\"            && n > 2) ConvertTo<Array>(params[2]);\n-    if (strMethod == \"getblock\"               && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"getrawtransaction\"      && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"createrawtransaction\"   && n > 0) ConvertTo<Array>(params[0]);\n-    if (strMethod == \"createrawtransaction\"   && n > 1) ConvertTo<Object>(params[1]);\n-    if (strMethod == \"signrawtransaction\"     && n > 1) ConvertTo<Array>(params[1], true);\n-    if (strMethod == \"signrawtransaction\"     && n > 2) ConvertTo<Array>(params[2], true);\n-    if (strMethod == \"sendrawtransaction\"     && n > 1) ConvertTo<bool>(params[1], true);\n-    if (strMethod == \"gettxout\"               && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"gettxout\"               && n > 2) ConvertTo<bool>(params[2]);\n-    if (strMethod == \"lockunspent\"            && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"lockunspent\"            && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"importprivkey\"          && n > 2) ConvertTo<bool>(params[2]);\n-    if (strMethod == \"verifychain\"            && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"verifychain\"            && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"keypoolrefill\"          && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"getrawmempool\"          && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"estimatefee\"            && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"estimatepriority\"       && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+\n+    for (unsigned int idx = 0; idx < strParams.size(); idx++) {\n+        const std::string& strVal = strParams[idx];\n+\n+        // insert string value directly\n+        if (!rpcCvtTable.convert(strMethod, idx)) {\n+            params.push_back(strVal);\n+        }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4415#discussion_r14352217",
      "id" : 14352217,
      "line" : 121,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzUyMjE3",
      "original_commit_id" : "e35b37b1b8252c3d3f66001ba1efccd263307add",
      "original_line" : null,
      "original_position" : 193,
      "original_start_line" : null,
      "path" : "src/rpcclient.cpp",
      "position" : 193,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14352217/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-06-30T14:24:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14352217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1419649?v=4",
         "events_url" : "https://api.github.com/users/Diapolo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Diapolo/followers",
         "following_url" : "https://api.github.com/users/Diapolo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Diapolo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Diapolo",
         "id" : 1419649,
         "login" : "Diapolo",
         "node_id" : "MDQ6VXNlcjE0MTk2NDk=",
         "organizations_url" : "https://api.github.com/users/Diapolo/orgs",
         "received_events_url" : "https://api.github.com/users/Diapolo/received_events",
         "repos_url" : "https://api.github.com/users/Diapolo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Diapolo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Diapolo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/4415#discussion_r14860949"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4415"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14860949"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@Diapolo Feel free to submit a cleanup PR if you desire!  Thanks for asking.\n",
      "commit_id" : "e35b37b1b8252c3d3f66001ba1efccd263307add",
      "created_at" : "2014-07-13T23:41:10Z",
      "diff_hunk" : "@@ -15,94 +16,118 @@\n using namespace std;\n using namespace json_spirit;\n \n-template<typename T>\n-void ConvertTo(Value& value, bool fAllowNull=false)\n+class CRPCConvertParam\n {\n-    if (fAllowNull && value.type() == null_type)\n-        return;\n-    if (value.type() == str_type)\n-    {\n-        // reinterpret string as unquoted json value\n-        Value value2;\n-        string strJSON = value.get_str();\n-        if (!read_string(strJSON, value2))\n-            throw runtime_error(string(\"Error parsing JSON:\")+strJSON);\n-        ConvertTo<T>(value2, fAllowNull);\n-        value = value2;\n+public:\n+    std::string methodName;            // method whose params want conversion\n+    int paramIdx;                      // 0-based idx of param to convert\n+};\n+\n+static const CRPCConvertParam vRPCConvertParams[] =\n+{\n+    { \"stop\", 0 },\n+    { \"getaddednodeinfo\", 0 },\n+    { \"setgenerate\", 0 },\n+    { \"setgenerate\", 1 },\n+    { \"getnetworkhashps\", 0 },\n+    { \"getnetworkhashps\", 1 },\n+    { \"sendtoaddress\", 1 },\n+    { \"settxfee\", 0 },\n+    { \"getreceivedbyaddress\", 1 },\n+    { \"getreceivedbyaccount\", 1 },\n+    { \"listreceivedbyaddress\", 0 },\n+    { \"listreceivedbyaddress\", 1 },\n+    { \"listreceivedbyaccount\", 0 },\n+    { \"listreceivedbyaccount\", 1 },\n+    { \"getbalance\", 1 },\n+    { \"getblockhash\", 0 },\n+    { \"move\", 2 },\n+    { \"move\", 3 },\n+    { \"sendfrom\", 2 },\n+    { \"sendfrom\", 3 },\n+    { \"listtransactions\", 1 },\n+    { \"listtransactions\", 2 },\n+    { \"listaccounts\", 0 },\n+    { \"walletpassphrase\", 1 },\n+    { \"getblocktemplate\", 0 },\n+    { \"listsinceblock\", 1 },\n+    { \"sendmany\", 1 },\n+    { \"sendmany\", 2 },\n+    { \"addmultisigaddress\", 0 },\n+    { \"addmultisigaddress\", 1 },\n+    { \"createmultisig\", 0 },\n+    { \"createmultisig\", 1 },\n+    { \"listunspent\", 0 },\n+    { \"listunspent\", 1 },\n+    { \"listunspent\", 2 },\n+    { \"getblock\", 1 },\n+    { \"getrawtransaction\", 1 },\n+    { \"createrawtransaction\", 0 },\n+    { \"createrawtransaction\", 1 },\n+    { \"signrawtransaction\", 1 },\n+    { \"signrawtransaction\", 2 },\n+    { \"sendrawtransaction\", 1 },\n+    { \"gettxout\", 1 },\n+    { \"gettxout\", 2 },\n+    { \"lockunspent\", 0 },\n+    { \"lockunspent\", 1 },\n+    { \"importprivkey\", 2 },\n+    { \"verifychain\", 0 },\n+    { \"verifychain\", 1 },\n+    { \"keypoolrefill\", 0 },\n+    { \"getrawmempool\", 0 },\n+    { \"estimatefee\", 0 },\n+    { \"estimatepriority\", 0 },\n+};\n+\n+class CRPCConvertTable\n+{\n+private:\n+    std::set<std::pair<std::string, int> > members;\n+\n+public:\n+    CRPCConvertTable();\n+\n+    bool convert(const std::string& method, int idx) {\n+        return (members.count(std::make_pair(method, idx)) > 0);\n     }\n-    else\n-    {\n-        value = value.get_value<T>();\n+};\n+\n+CRPCConvertTable::CRPCConvertTable()\n+{\n+    const unsigned int n_elem =\n+        (sizeof(vRPCConvertParams) / sizeof(vRPCConvertParams[0]));\n+\n+    for (unsigned int i = 0; i < n_elem; i++) {\n+        members.insert(std::make_pair(vRPCConvertParams[i].methodName,\n+                                      vRPCConvertParams[i].paramIdx));\n     }\n }\n \n+static CRPCConvertTable rpcCvtTable;\n+\n // Convert strings to command-specific RPC representation\n Array RPCConvertValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n {\n     Array params;\n-    BOOST_FOREACH(const std::string &param, strParams)\n-        params.push_back(param);\n-\n-    int n = params.size();\n-\n-    //\n-    // Special case non-string parameter types\n-    //\n-    if (strMethod == \"stop\"                   && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"getaddednodeinfo\"       && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"setgenerate\"            && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getnetworkhashps\"       && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"getnetworkhashps\"       && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"sendtoaddress\"          && n > 1) ConvertTo<double>(params[1]);\n-    if (strMethod == \"settxfee\"               && n > 0) ConvertTo<double>(params[0]);\n-    if (strMethod == \"getreceivedbyaddress\"   && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getreceivedbyaccount\"   && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"listreceivedbyaddress\"  && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"listreceivedbyaddress\"  && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"listreceivedbyaccount\"  && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"listreceivedbyaccount\"  && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"getbalance\"             && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"getblockhash\"           && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"move\"                   && n > 2) ConvertTo<double>(params[2]);\n-    if (strMethod == \"move\"                   && n > 3) ConvertTo<int64_t>(params[3]);\n-    if (strMethod == \"sendfrom\"               && n > 2) ConvertTo<double>(params[2]);\n-    if (strMethod == \"sendfrom\"               && n > 3) ConvertTo<int64_t>(params[3]);\n-    if (strMethod == \"listtransactions\"       && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"listtransactions\"       && n > 2) ConvertTo<int64_t>(params[2]);\n-    if (strMethod == \"listaccounts\"           && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"walletpassphrase\"       && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"prioritisetransaction\"  && n > 1) ConvertTo<double>(params[1]);\n-    if (strMethod == \"prioritisetransaction\"  && n > 2) ConvertTo<int64_t>(params[2]);\n-    if (strMethod == \"getblocktemplate\"       && n > 0) ConvertTo<Object>(params[0]);\n-    if (strMethod == \"listsinceblock\"         && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"sendmany\"               && n > 1) ConvertTo<Object>(params[1]);\n-    if (strMethod == \"sendmany\"               && n > 2) ConvertTo<int64_t>(params[2]);\n-    if (strMethod == \"addmultisigaddress\"     && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"addmultisigaddress\"     && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"createmultisig\"         && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"createmultisig\"         && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"listunspent\"            && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"listunspent\"            && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"listunspent\"            && n > 2) ConvertTo<Array>(params[2]);\n-    if (strMethod == \"getblock\"               && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"getrawtransaction\"      && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"createrawtransaction\"   && n > 0) ConvertTo<Array>(params[0]);\n-    if (strMethod == \"createrawtransaction\"   && n > 1) ConvertTo<Object>(params[1]);\n-    if (strMethod == \"signrawtransaction\"     && n > 1) ConvertTo<Array>(params[1], true);\n-    if (strMethod == \"signrawtransaction\"     && n > 2) ConvertTo<Array>(params[2], true);\n-    if (strMethod == \"sendrawtransaction\"     && n > 1) ConvertTo<bool>(params[1], true);\n-    if (strMethod == \"gettxout\"               && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"gettxout\"               && n > 2) ConvertTo<bool>(params[2]);\n-    if (strMethod == \"lockunspent\"            && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"lockunspent\"            && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"importprivkey\"          && n > 2) ConvertTo<bool>(params[2]);\n-    if (strMethod == \"verifychain\"            && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"verifychain\"            && n > 1) ConvertTo<int64_t>(params[1]);\n-    if (strMethod == \"keypoolrefill\"          && n > 0) ConvertTo<int64_t>(params[0]);\n-    if (strMethod == \"getrawmempool\"          && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"estimatefee\"            && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"estimatepriority\"       && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+\n+    for (unsigned int idx = 0; idx < strParams.size(); idx++) {\n+        const std::string& strVal = strParams[idx];\n+\n+        // insert string value directly\n+        if (!rpcCvtTable.convert(strMethod, idx)) {\n+            params.push_back(strVal);\n+        }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/4415#discussion_r14860949",
      "id" : 14860949,
      "line" : 121,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODYwOTQ5",
      "original_commit_id" : "e35b37b1b8252c3d3f66001ba1efccd263307add",
      "original_line" : null,
      "original_position" : 193,
      "original_start_line" : null,
      "path" : "src/rpcclient.cpp",
      "position" : 193,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/4415",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14860949/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2014-07-13T23:41:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/14860949",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/494411?v=4",
         "events_url" : "https://api.github.com/users/jgarzik/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jgarzik/followers",
         "following_url" : "https://api.github.com/users/jgarzik/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jgarzik/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jgarzik",
         "id" : 494411,
         "login" : "jgarzik",
         "node_id" : "MDQ6VXNlcjQ5NDQxMQ==",
         "organizations_url" : "https://api.github.com/users/jgarzik/orgs",
         "received_events_url" : "https://api.github.com/users/jgarzik/received_events",
         "repos_url" : "https://api.github.com/users/jgarzik/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jgarzik/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jgarzik"
      }
   }
]
