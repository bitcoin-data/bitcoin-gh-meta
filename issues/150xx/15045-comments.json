[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15045#discussion_r244213973"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15045"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244213973"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think there is something wrong with this test, but I am not sure about its intention",
      "commit_id" : "447d292c9b54572d4def577e28d0429a3abfb3d3",
      "created_at" : "2018-12-27T19:35:32Z",
      "diff_hunk" : "@@ -82,174 +82,174 @@\n [\"The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63\"],\n [\"It is an OP_CHECKMULTISIG with the dummy value missing\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n-\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004847304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH\"],\n+\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004847304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"NONE\"],\n \n \n [\"CHECKMULTISIG SCRIPT_VERIFY_NULLDUMMY tests:\"],\n \n [\"The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63\"],\n [\"It is an OP_CHECKMULTISIG with the dummy value set to something other than an empty string\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n-\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004a010047304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH,NULLDUMMY\"],\n+\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004a010047304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"NULLDUMMY\"],\n \n [\"As above, but using an OP_1\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n-\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000495147304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH,NULLDUMMY\"],\n+\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000495147304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"NULLDUMMY\"],\n \n [\"As above, but using an OP_1NEGATE\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n-\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000494f47304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH,NULLDUMMY\"],\n+\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000494f47304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"NULLDUMMY\"],\n \n [\"As above, but with the dummy byte missing\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n-\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004847304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH,NULLDUMMY\"],\n+\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004847304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"NONE\"],\n \n \n [\"Empty stack when we try to run CHECKSIG\"],\n [[[\"ad503f72c18df5801ee64d76090afe4c607fb2b822e9b7b63c5826c50e22fc3b\", 0, \"0x21 0x027c3a97665bf283a102a587a62a30a0c102d4d3b141015e2cae6f64e2543113e5 CHECKSIG NOT\"]],\n-\"01000000013bfc220ec526583cb6b7e922b8b27f604cfe0a09764de61e80f58dc1723f50ad0000000000ffffffff0101000000000000002321027c3a97665bf283a102a587a62a30a0c102d4d3b141015e2cae6f64e2543113e5ac00000000\", \"P2SH\"],\n+\"01000000013bfc220ec526583cb6b7e922b8b27f604cfe0a09764de61e80f58dc1723f50ad0000000000ffffffff0101000000000000002321027c3a97665bf283a102a587a62a30a0c102d4d3b141015e2cae6f64e2543113e5ac00000000\", \"NONE\"],\n \n \n [\"Inverted versions of tx_valid CODESEPARATOR IF block tests\"],\n \n [\"CODESEPARATOR in an unexecuted IF block does not change what is hashed\"],\n [[[\"a955032f4d6b0c9bfe8cad8f00a8933790b9c1dc28c82e0f48e75b35da0e4944\", 0, \"IF CODESEPARATOR ENDIF 0x21 0x0378d430274f8c5ec1321338151e9f27f4c676a008bdf8638d07c0b6be9ab35c71 CHECKSIGVERIFY CODESEPARATOR 1\"]],\n-\"010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a9000000004a48304502207a6974a77c591fa13dff60cabbb85a0de9e025c09c65a4b2285e47ce8e22f761022100f0efaac9ff8ac36b10721e0aae1fb975c90500b50c56e8a0cc52b0403f0425dd0151ffffffff010000000000000000016a00000000\", \"P2SH\"],\n+\"010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a9000000004a48304502207a6974a77c591fa13dff60cabbb85a0de9e025c09c65a4b2285e47ce8e22f761022100f0efaac9ff8ac36b10721e0aae1fb975c90500b50c56e8a0cc52b0403f0425dd0151ffffffff010000000000000000016a00000000\", \"NONE\"],\n \n [\"As above, with the IF block executed\"],\n [[[\"a955032f4d6b0c9bfe8cad8f00a8933790b9c1dc28c82e0f48e75b35da0e4944\", 0, \"IF CODESEPARATOR ENDIF 0x21 0x0378d430274f8c5ec1321338151e9f27f4c676a008bdf8638d07c0b6be9ab35c71 CHECKSIGVERIFY CODESEPARATOR 1\"]],\n-\"010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a9000000004a483045022100fa4a74ba9fd59c59f46c3960cf90cbe0d2b743c471d24a3d5d6db6002af5eebb02204d70ec490fd0f7055a7c45f86514336e3a7f03503dacecabb247fc23f15c83510100ffffffff010000000000000000016a00000000\", \"P2SH\"],\n+\"010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a9000000004a483045022100fa4a74ba9fd59c59f46c3960cf90cbe0d2b743c471d24a3d5d6db6002af5eebb02204d70ec490fd0f7055a7c45f86514336e3a7f03503dacecabb247fc23f15c83510100ffffffff010000000000000000016a00000000\", \"NONE\"],\n \n [\"CHECKLOCKTIMEVERIFY tests\"],\n \n [\"By-height locks, with argument just beyond tx nLockTime\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"1 CHECKLOCKTIMEVERIFY 1\"]],\n-\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\", \"CHECKLOCKTIMEVERIFY\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"499999999 CHECKLOCKTIMEVERIFY 1\"]],\n-\"0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000fe64cd1d\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000fe64cd1d\", \"CHECKLOCKTIMEVERIFY\"],\n \n [\"By-time locks, with argument just beyond tx nLockTime (but within numerical boundaries)\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"500000001 CHECKLOCKTIMEVERIFY 1\"]],\n-\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d\", \"CHECKLOCKTIMEVERIFY\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"4294967295 CHECKLOCKTIMEVERIFY 1\"]],\n-\"0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000feffffff\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000feffffff\", \"CHECKLOCKTIMEVERIFY\"],\n \n [\"Argument missing\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"CHECKLOCKTIMEVERIFY 1\"]],\n-\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\", \"CHECKLOCKTIMEVERIFY\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"1\"]],\n-\"010000000100010000000000000000000000000000000000000000000000000000000000000000000001b1010000000100000000000000000000000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"010000000100010000000000000000000000000000000000000000000000000000000000000000000001b1010000000100000000000000000000000000\", \"CHECKLOCKTIMEVERIFY\"],\n \n [\"Argument negative with by-blockheight nLockTime=0\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"-1 CHECKLOCKTIMEVERIFY 1\"]],\n-\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\", \"CHECKLOCKTIMEVERIFY\"],\n \n [\"Argument negative with by-blocktime nLockTime=500,000,000\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"-1 CHECKLOCKTIMEVERIFY 1\"]],\n-\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d\", \"CHECKLOCKTIMEVERIFY\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"1\"]],\n-\"010000000100010000000000000000000000000000000000000000000000000000000000000000000004005194b1010000000100000000000000000002000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"010000000100010000000000000000000000000000000000000000000000000000000000000000000004005194b1010000000100000000000000000002000000\", \"CHECKLOCKTIMEVERIFY\"],\n \n [\"Input locked\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0 CHECKLOCKTIMEVERIFY 1\"]],\n-\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff0100000000000000000000000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff0100000000000000000000000000\", \"CHECKLOCKTIMEVERIFY\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0\"]],\n-\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000251b1ffffffff0100000000000000000002000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000251b1ffffffff0100000000000000000002000000\", \"NONE\"],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15045#discussion_r244213973",
      "id" : 244213973,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDIxMzk3Mw==",
      "original_commit_id" : "c1b81104289e40a819314b605f7b4e3f9424a254",
      "original_position" : 180,
      "path" : "src/test/data/tx_invalid.json",
      "position" : 180,
      "pull_request_review_id" : 188162195,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15045",
      "updated_at" : "2019-01-16T14:47:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244213973",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8403418?v=4",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "node_id" : "MDQ6VXNlcjg0MDM0MTg=",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15045#discussion_r244214096"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15045"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244214096"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Another problematic test with unclear intention",
      "commit_id" : "447d292c9b54572d4def577e28d0429a3abfb3d3",
      "created_at" : "2018-12-27T19:36:25Z",
      "diff_hunk" : "@@ -82,174 +82,174 @@\n [\"The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63\"],\n [\"It is an OP_CHECKMULTISIG with the dummy value missing\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n-\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004847304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH\"],\n+\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004847304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"NONE\"],\n \n \n [\"CHECKMULTISIG SCRIPT_VERIFY_NULLDUMMY tests:\"],\n \n [\"The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63\"],\n [\"It is an OP_CHECKMULTISIG with the dummy value set to something other than an empty string\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n-\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004a010047304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH,NULLDUMMY\"],\n+\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004a010047304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"NULLDUMMY\"],\n \n [\"As above, but using an OP_1\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n-\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000495147304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH,NULLDUMMY\"],\n+\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000495147304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"NULLDUMMY\"],\n \n [\"As above, but using an OP_1NEGATE\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n-\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000494f47304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH,NULLDUMMY\"],\n+\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000494f47304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"NULLDUMMY\"],\n \n [\"As above, but with the dummy byte missing\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n-\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004847304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH,NULLDUMMY\"],\n+\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004847304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"NONE\"],\n \n \n [\"Empty stack when we try to run CHECKSIG\"],\n [[[\"ad503f72c18df5801ee64d76090afe4c607fb2b822e9b7b63c5826c50e22fc3b\", 0, \"0x21 0x027c3a97665bf283a102a587a62a30a0c102d4d3b141015e2cae6f64e2543113e5 CHECKSIG NOT\"]],\n-\"01000000013bfc220ec526583cb6b7e922b8b27f604cfe0a09764de61e80f58dc1723f50ad0000000000ffffffff0101000000000000002321027c3a97665bf283a102a587a62a30a0c102d4d3b141015e2cae6f64e2543113e5ac00000000\", \"P2SH\"],\n+\"01000000013bfc220ec526583cb6b7e922b8b27f604cfe0a09764de61e80f58dc1723f50ad0000000000ffffffff0101000000000000002321027c3a97665bf283a102a587a62a30a0c102d4d3b141015e2cae6f64e2543113e5ac00000000\", \"NONE\"],\n \n \n [\"Inverted versions of tx_valid CODESEPARATOR IF block tests\"],\n \n [\"CODESEPARATOR in an unexecuted IF block does not change what is hashed\"],\n [[[\"a955032f4d6b0c9bfe8cad8f00a8933790b9c1dc28c82e0f48e75b35da0e4944\", 0, \"IF CODESEPARATOR ENDIF 0x21 0x0378d430274f8c5ec1321338151e9f27f4c676a008bdf8638d07c0b6be9ab35c71 CHECKSIGVERIFY CODESEPARATOR 1\"]],\n-\"010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a9000000004a48304502207a6974a77c591fa13dff60cabbb85a0de9e025c09c65a4b2285e47ce8e22f761022100f0efaac9ff8ac36b10721e0aae1fb975c90500b50c56e8a0cc52b0403f0425dd0151ffffffff010000000000000000016a00000000\", \"P2SH\"],\n+\"010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a9000000004a48304502207a6974a77c591fa13dff60cabbb85a0de9e025c09c65a4b2285e47ce8e22f761022100f0efaac9ff8ac36b10721e0aae1fb975c90500b50c56e8a0cc52b0403f0425dd0151ffffffff010000000000000000016a00000000\", \"NONE\"],\n \n [\"As above, with the IF block executed\"],\n [[[\"a955032f4d6b0c9bfe8cad8f00a8933790b9c1dc28c82e0f48e75b35da0e4944\", 0, \"IF CODESEPARATOR ENDIF 0x21 0x0378d430274f8c5ec1321338151e9f27f4c676a008bdf8638d07c0b6be9ab35c71 CHECKSIGVERIFY CODESEPARATOR 1\"]],\n-\"010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a9000000004a483045022100fa4a74ba9fd59c59f46c3960cf90cbe0d2b743c471d24a3d5d6db6002af5eebb02204d70ec490fd0f7055a7c45f86514336e3a7f03503dacecabb247fc23f15c83510100ffffffff010000000000000000016a00000000\", \"P2SH\"],\n+\"010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a9000000004a483045022100fa4a74ba9fd59c59f46c3960cf90cbe0d2b743c471d24a3d5d6db6002af5eebb02204d70ec490fd0f7055a7c45f86514336e3a7f03503dacecabb247fc23f15c83510100ffffffff010000000000000000016a00000000\", \"NONE\"],\n \n [\"CHECKLOCKTIMEVERIFY tests\"],\n \n [\"By-height locks, with argument just beyond tx nLockTime\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"1 CHECKLOCKTIMEVERIFY 1\"]],\n-\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\", \"CHECKLOCKTIMEVERIFY\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"499999999 CHECKLOCKTIMEVERIFY 1\"]],\n-\"0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000fe64cd1d\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000fe64cd1d\", \"CHECKLOCKTIMEVERIFY\"],\n \n [\"By-time locks, with argument just beyond tx nLockTime (but within numerical boundaries)\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"500000001 CHECKLOCKTIMEVERIFY 1\"]],\n-\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d\", \"CHECKLOCKTIMEVERIFY\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"4294967295 CHECKLOCKTIMEVERIFY 1\"]],\n-\"0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000feffffff\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000feffffff\", \"CHECKLOCKTIMEVERIFY\"],\n \n [\"Argument missing\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"CHECKLOCKTIMEVERIFY 1\"]],\n-\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\", \"CHECKLOCKTIMEVERIFY\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"1\"]],\n-\"010000000100010000000000000000000000000000000000000000000000000000000000000000000001b1010000000100000000000000000000000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"010000000100010000000000000000000000000000000000000000000000000000000000000000000001b1010000000100000000000000000000000000\", \"CHECKLOCKTIMEVERIFY\"],\n \n [\"Argument negative with by-blockheight nLockTime=0\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"-1 CHECKLOCKTIMEVERIFY 1\"]],\n-\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\", \"CHECKLOCKTIMEVERIFY\"],\n \n [\"Argument negative with by-blocktime nLockTime=500,000,000\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"-1 CHECKLOCKTIMEVERIFY 1\"]],\n-\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d\", \"CHECKLOCKTIMEVERIFY\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"1\"]],\n-\"010000000100010000000000000000000000000000000000000000000000000000000000000000000004005194b1010000000100000000000000000002000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"010000000100010000000000000000000000000000000000000000000000000000000000000000000004005194b1010000000100000000000000000002000000\", \"CHECKLOCKTIMEVERIFY\"],\n \n [\"Input locked\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0 CHECKLOCKTIMEVERIFY 1\"]],\n-\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff0100000000000000000000000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"010000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff0100000000000000000000000000\", \"CHECKLOCKTIMEVERIFY\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0\"]],\n-\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000251b1ffffffff0100000000000000000002000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000251b1ffffffff0100000000000000000002000000\", \"NONE\"],\n \n [\"Another input being unlocked isn't sufficient; the CHECKLOCKTIMEVERIFY-using input must be unlocked\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0 CHECKLOCKTIMEVERIFY 1\"] ,\n   [\"0000000000000000000000000000000000000000000000000000000000000200\", 1, \"1\"]],\n-\"010000000200010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00020000000000000000000000000000000000000000000000000000000000000100000000000000000100000000000000000000000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"010000000200010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00020000000000000000000000000000000000000000000000000000000000000100000000000000000100000000000000000000000000\", \"CHECKLOCKTIMEVERIFY\"],\n \n [\"Argument/tx height/time mismatch, both versions\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0 CHECKLOCKTIMEVERIFY 1\"]],\n-\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d\", \"CHECKLOCKTIMEVERIFY\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0\"]],\n-\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000251b100000000010000000000000000000065cd1d\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n+\"01000000010001000000000000000000000000000000000000000000000000000000000000000000000251b100000000010000000000000000000065cd1d\", \"NONE\"],",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15045#discussion_r244214096",
      "id" : 244214096,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDIxNDA5Ng==",
      "original_commit_id" : "c1b81104289e40a819314b605f7b4e3f9424a254",
      "original_position" : 194,
      "path" : "src/test/data/tx_invalid.json",
      "position" : 194,
      "pull_request_review_id" : 188162356,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15045",
      "updated_at" : "2019-01-16T14:47:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244214096",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8403418?v=4",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "node_id" : "MDQ6VXNlcjg0MDM0MTg=",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15045#discussion_r244299027"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15045"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244299027"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should the implicit conversion from negative to unsigned be made explicit here?",
      "commit_id" : "447d292c9b54572d4def577e28d0429a3abfb3d3",
      "created_at" : "2018-12-28T10:42:04Z",
      "diff_hunk" : "@@ -238,28 +267,27 @@ BOOST_AUTO_TEST_CASE(tx_invalid)\n             CTransaction tx(deserialize, stream);\n \n             CValidationState state;\n-            fValid = CheckTransaction(tx, state) && state.IsValid();\n+            if (!CheckTransaction(tx, state) || !state.IsValid()) {\n+                BOOST_CHECK_MESSAGE(test[2].get_str() == \"BADTX\", strTest);\n+                continue;\n+            }\n \n             PrecomputedTransactionData txdata(tx);\n-            for (unsigned int i = 0; i < tx.vin.size() && fValid; i++)\n-            {\n-                if (!mapprevOutScriptPubKeys.count(tx.vin[i].prevout))\n-                {\n-                    BOOST_ERROR(\"Bad test: \" << strTest);\n-                    break;\n+            std::vector<unsigned int> verify_flags = ParseScriptFlags(test[2].get_str());\n+            if (!CheckTx(tx, mapprevOutScriptPubKeys, mapprevOutValues, verify_flags[0], txdata, strTest, false))\n+                BOOST_ERROR(\"Tx unexpectedly passed: \" << strTest);\n+            for (size_t f = 1; f < verify_flags.size(); f++) {\n+                unsigned int flags = verify_flags[f];\n+                if (!(flags & SCRIPT_VERIFY_CLEANSTACK)) {\n+                    flags &= ~SCRIPT_VERIFY_WITNESS;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15045#discussion_r244299027",
      "id" : 244299027,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDI5OTAyNw==",
      "original_commit_id" : "fc19bc13b6c64021ebbf9afd06d6d771d084d6c0",
      "original_position" : 185,
      "path" : "src/test/transaction_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 188265211,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15045",
      "updated_at" : "2019-01-16T14:47:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244299027",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16881](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16881.html) (consensus: Improve CScriptNum error reporting by fanquake)\n* [#14696](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14696.html) (qa: Add explicit references to related CVE's in p2p_invalid_block test. by lucash-dev)\n* [#13360](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13360.html) ([Policy] Reject SIGHASH_SINGLE with output out of bound by jl2012)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-12-28T11:56:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15045#issuecomment-450348122",
      "id" : 450348122,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MDM0ODEyMg==",
      "updated_at" : "2019-09-16T17:23:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450348122",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15045#discussion_r244342397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15045"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244342397"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done. Also fixed a bug as I swapped SCRIPT_VERIFY_CLEANSTACK and SCRIPT_VERIFY_WITNESS here",
      "commit_id" : "447d292c9b54572d4def577e28d0429a3abfb3d3",
      "created_at" : "2018-12-28T15:16:36Z",
      "diff_hunk" : "@@ -238,28 +267,27 @@ BOOST_AUTO_TEST_CASE(tx_invalid)\n             CTransaction tx(deserialize, stream);\n \n             CValidationState state;\n-            fValid = CheckTransaction(tx, state) && state.IsValid();\n+            if (!CheckTransaction(tx, state) || !state.IsValid()) {\n+                BOOST_CHECK_MESSAGE(test[2].get_str() == \"BADTX\", strTest);\n+                continue;\n+            }\n \n             PrecomputedTransactionData txdata(tx);\n-            for (unsigned int i = 0; i < tx.vin.size() && fValid; i++)\n-            {\n-                if (!mapprevOutScriptPubKeys.count(tx.vin[i].prevout))\n-                {\n-                    BOOST_ERROR(\"Bad test: \" << strTest);\n-                    break;\n+            std::vector<unsigned int> verify_flags = ParseScriptFlags(test[2].get_str());\n+            if (!CheckTx(tx, mapprevOutScriptPubKeys, mapprevOutValues, verify_flags[0], txdata, strTest, false))\n+                BOOST_ERROR(\"Tx unexpectedly passed: \" << strTest);\n+            for (size_t f = 1; f < verify_flags.size(); f++) {\n+                unsigned int flags = verify_flags[f];\n+                if (!(flags & SCRIPT_VERIFY_CLEANSTACK)) {\n+                    flags &= ~SCRIPT_VERIFY_WITNESS;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15045#discussion_r244342397",
      "id" : 244342397,
      "in_reply_to_id" : 244299027,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDM0MjM5Nw==",
      "original_commit_id" : "fc19bc13b6c64021ebbf9afd06d6d771d084d6c0",
      "original_position" : 185,
      "path" : "src/test/transaction_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 188310160,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15045",
      "updated_at" : "2019-01-16T14:47:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244342397",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8403418?v=4",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "node_id" : "MDQ6VXNlcjg0MDM0MTg=",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a commit to verify all validation flags are backward compatible (softfork), like #10699",
      "created_at" : "2018-12-28T19:53:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15045#issuecomment-450417666",
      "id" : 450417666,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MDQxNzY2Ng==",
      "updated_at" : "2018-12-28T19:53:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450417666",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8403418?v=4",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "node_id" : "MDQ6VXNlcjg0MDM0MTg=",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a commit to do the same in script_tests",
      "created_at" : "2018-12-30T19:23:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15045#issuecomment-450581241",
      "id" : 450581241,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MDU4MTI0MQ==",
      "updated_at" : "2018-12-30T19:23:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450581241",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8403418?v=4",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "node_id" : "MDQ6VXNlcjg0MDM0MTg=",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2019-01-02T14:29:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15045#issuecomment-450876964",
      "id" : 450876964,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ1MDg3Njk2NA==",
      "updated_at" : "2019-01-02T14:29:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450876964",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15045#discussion_r248372069"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15045"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248372069"
         }
      },
      "author_association" : "MEMBER",
      "body" : "rebased and fixed a bug here. Without `expect ||`, all valid script tests were skipped due to the use of standardness flags. If a script is valid with standardness flags, removing these flags shouldn't make it invalid.\r\n\r\nThis also fixed an existing bug that many tests containing standardness flags (mostly STRICTENC) are unnecessarily skipped.",
      "commit_id" : "447d292c9b54572d4def577e28d0429a3abfb3d3",
      "created_at" : "2019-01-16T17:12:08Z",
      "diff_hunk" : "@@ -155,37 +159,59 @@ CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CSc\n     return txSpend;\n }\n \n-void DoTest(const CScript& scriptPubKey, const CScript& scriptSig, const CScriptWitness& scriptWitness, int flags, const std::string& message, int scriptError, CAmount nValue = 0)\n+void DoTest(const CScript& scriptPubKey, const CScript& scriptSig, const CScriptWitness& scriptWitness, const std::vector<unsigned int>& scriptflags, const std::string& message, int scriptError, CAmount nValue = 0, bool skip_flag_removal_test = false)\n {\n     bool expect = (scriptError == SCRIPT_ERR_OK);\n-    if (flags & SCRIPT_VERIFY_CLEANSTACK) {\n-        flags |= SCRIPT_VERIFY_P2SH;\n-        flags |= SCRIPT_VERIFY_WITNESS;\n-    }\n+    unsigned int main_flags = expect ? ~scriptflags[0] : scriptflags[0];\n     ScriptError err;\n     const CTransaction txCredit{BuildCreditingTransaction(scriptPubKey, nValue)};\n     CMutableTransaction tx = BuildSpendingTransaction(scriptSig, scriptWitness, txCredit);\n     CMutableTransaction tx2 = tx;\n-    BOOST_CHECK_MESSAGE(VerifyScript(scriptSig, scriptPubKey, &scriptWitness, flags, MutableTransactionSignatureChecker(&tx, 0, txCredit.vout[0].nValue), &err) == expect, message);\n+    BOOST_CHECK_MESSAGE(VerifyScript(scriptSig, scriptPubKey, &scriptWitness, main_flags, MutableTransactionSignatureChecker(&tx, 0, txCredit.vout[0].nValue), &err) == expect, message);\n     BOOST_CHECK_MESSAGE(err == scriptError, std::string(FormatScriptError(err)) + \" where \" + std::string(FormatScriptError((ScriptError_t)scriptError)) + \" expected: \" + message);\n \n-    // Verify that removing flags from a passing test or adding flags to a failing test does not change the result.\n-    for (int i = 0; i < 16; ++i) {\n-        int extra_flags = InsecureRandBits(16);\n-        int combined_flags = expect ? (flags & ~extra_flags) : (flags | extra_flags);\n-        // Weed out some invalid flag combinations.\n-        if (combined_flags & SCRIPT_VERIFY_CLEANSTACK && ~combined_flags & (SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_WITNESS)) continue;\n-        if (combined_flags & SCRIPT_VERIFY_WITNESS && ~combined_flags & SCRIPT_VERIFY_P2SH) continue;\n-        BOOST_CHECK_MESSAGE(VerifyScript(scriptSig, scriptPubKey, &scriptWitness, combined_flags, MutableTransactionSignatureChecker(&tx, 0, txCredit.vout[0].nValue), &err) == expect, message + strprintf(\" (with flags %x)\", combined_flags));\n+    if (expect) {\n+        for (size_t i = 0; i < FLAG_MAP_SIZE; i++)\n+        {\n+            // Removing a flag should not invalidate a valid script\n+            unsigned int flags = TrimFlags(~(scriptflags[0] | (1U << i)));\n+            BOOST_CHECK_MESSAGE(VerifyScript(scriptSig, scriptPubKey, &scriptWitness, flags, MutableTransactionSignatureChecker(&tx, 0, txCredit.vout[0].nValue), &err), \"Script unexpectedly failed with flag \" << std::to_string(i) << \" unset: \" << message);\n+            // Removing some random flags should not invalidate a valid script\n+            flags = TrimFlags(~(scriptflags[0] | InsecureRandBits(FLAG_MAP_SIZE)));\n+            BOOST_CHECK_MESSAGE(VerifyScript(scriptSig, scriptPubKey, &scriptWitness, flags, MutableTransactionSignatureChecker(&tx, 0, txCredit.vout[0].nValue), &err), \"Script unexpectedly failed with random flags \" << std::to_string(flags) << \": \" << message);\n+        }\n+        for (size_t i = 1; i < scriptflags.size(); i++)\n+        {\n+            // If the flags removed are minimal, adding a flag back should make the transaction invalid\n+            BOOST_CHECK_MESSAGE(!VerifyScript(scriptSig, scriptPubKey, &scriptWitness, FillFlags(~scriptflags[i]), MutableTransactionSignatureChecker(&tx, 0, txCredit.vout[0].nValue), &err), \"Too many flags unset: \" << message);\n+        }\n+    }\n+    else {\n+        for (size_t i = 0; i < FLAG_MAP_SIZE; i++)\n+        {\n+            // Adding a flag should not validate an invalid script\n+            unsigned int flags = FillFlags(scriptflags[0] | (1U << i));\n+            BOOST_CHECK_MESSAGE(!VerifyScript(scriptSig, scriptPubKey, &scriptWitness, flags, MutableTransactionSignatureChecker(&tx, 0, txCredit.vout[0].nValue), &err), \"Script unexpectedly passed with flag \" << std::to_string(i) << \" set: \" << message);\n+            // Adding some random flags should not validate an invalid script\n+            flags = FillFlags(scriptflags[0] | InsecureRandBits(FLAG_MAP_SIZE));\n+            BOOST_CHECK_MESSAGE(!VerifyScript(scriptSig, scriptPubKey, &scriptWitness, flags, MutableTransactionSignatureChecker(&tx, 0, txCredit.vout[0].nValue), &err), \"Script unexpectedly passed with random flags \" << std::to_string(flags) << \": \" << message);\n+        }\n+        for (size_t i = 1; i < scriptflags.size(); i++)\n+        {\n+            // If the flags used are minimal, removing a flag should make the transaction valid\n+            // This test is skipped for certain CHECKSIG tests, so it is possible to demonstrate how a DERSIG or\n+            // STRICTENC flag would terminate the script validation.\n+            BOOST_CHECK_MESSAGE(VerifyScript(scriptSig, scriptPubKey, &scriptWitness, TrimFlags(scriptflags[i]), MutableTransactionSignatureChecker(&tx, 0, txCredit.vout[0].nValue), &err) || (skip_flag_removal_test && err == SCRIPT_ERR_EVAL_FALSE), \"Too many flags set: \" << message);\n+        }\n     }\n \n #if defined(HAVE_CONSENSUS_LIB)\n     CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n     stream << tx2;\n-    int libconsensus_flags = flags & bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL;\n-    if (libconsensus_flags == flags) {\n+    int libconsensus_flags = main_flags & bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL;\n+    if (expect || libconsensus_flags == (int)main_flags) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15045#discussion_r248372069",
      "id" : 248372069,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODM3MjA2OQ==",
      "original_commit_id" : "447d292c9b54572d4def577e28d0429a3abfb3d3",
      "original_position" : 84,
      "path" : "src/test/script_tests.cpp",
      "position" : 84,
      "pull_request_review_id" : 193251697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15045",
      "updated_at" : "2019-01-16T17:12:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248372069",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8403418?v=4",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "node_id" : "MDQ6VXNlcjg0MDM0MTg=",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jl2012 Could you rebase this PR on `master` and push to have Travis test the rebased version? I think there might be some UBSan runtime errors that needs to be addressed.",
      "created_at" : "2019-05-07T16:26:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15045#issuecomment-490152173",
      "id" : 490152173,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDE1MjE3Mw==",
      "updated_at" : "2019-05-07T16:26:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490152173",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-09-18T15:14:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15045#issuecomment-532731366",
      "id" : 532731366,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUzMjczMTM2Ng==",
      "updated_at" : "2019-09-18T15:14:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/532731366",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "No activity for a year. Closing for now, let me know when you want to work on this again",
      "created_at" : "2020-08-07T08:04:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15045#issuecomment-670388954",
      "id" : 670388954,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDM4ODk1NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-07T08:04:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670388954",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "(last commit hasn't been picked up yet)",
      "created_at" : "2021-02-23T16:20:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15045#issuecomment-784322782",
      "id" : 784322782,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15045",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc4NDMyMjc4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-23T16:20:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/784322782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
