[
   {
      "author_association" : "MEMBER",
      "body" : "Which GCC version should I use to get those warnings?",
      "created_at" : "2020-06-12T07:57:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19256#issuecomment-643131478",
      "id" : 643131478,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19256",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzEzMTQ3OA==",
      "updated_at" : "2020-06-12T07:57:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643131478",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Which GCC version should I use to get those warnings?\r\n\r\nI'd assume any recent GCC will produce them. I was testing with 8.3.0:\r\n```bash\r\ngcc --version               \r\ngcc (Debian 8.3.0-6) 8.3.0\r\n\r\n./autogen.sh\r\n./configure --prefix=/bitcoin/depends/x86_64-pc-linux-gnu/ CXXFLAGS=\"-Wuninitialized\" \r\n...\r\n  CXX           = g++ -m64 -std=c++11\r\n  CXXFLAGS      =   -fstack-reuse=none -Wstack-protector -fstack-protector-all     -pipe -O2 -Wuninitialized -fno-extended-identifiers\r\n...\r\nmake src/bitcoind -j6\r\n...\r\n  CXX      libbitcoin_common_a-core_write.o\r\nIn file included from ui_interface.cpp:9:\r\n/bitcoin/depends/x86_64-pc-linux-gnu/share/../include/boost/signals2/last_value.hpp: In member function 'boost::signals2::detail::signal_impl<R(Args ...), Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type boost::signals2::detail::signal_impl<R(Args ...), Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::operator()(Args ...) [with Combiner = boost::signals2::last_value<bool>; Group = int; GroupCompare = std::less<int>; SlotFunction = boost::function<bool(const bilingual_str&, const std::__cxx11::basic_string<char>&, unsigned int)>; ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, const bilingual_str&, const std::__cxx11::basic_string<char>&, unsigned int)>; Mutex = boost::signals2::mutex; R = bool; Args = {const bilingual_str&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int}]':\r\n/bitcoin/depends/x86_64-pc-linux-gnu/share/../include/boost/signals2/last_value.hpp:54:36: warning: '*((void*)& value +1)' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n         if(value) return value.get();\r\n                                    ^\r\n/bitcoin/depends/x86_64-pc-linux-gnu/share/../include/boost/signals2/last_value.hpp:43:21: note: '*((void*)& value +1)' was declared here\r\n         optional<T> value;\r\n                     ^~~~~\r\n/bitcoin/depends/x86_64-pc-linux-gnu/share/../include/boost/signals2/last_value.hpp: In member function 'boost::signals2::detail::signal_impl<R(Args ...), Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::result_type boost::signals2::detail::signal_impl<R(Args ...), Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::operator()(Args ...) [with Combiner = boost::signals2::last_value<bool>; Group = int; GroupCompare = std::less<int>; SlotFunction = boost::function<bool(const bilingual_str&, const std::__cxx11::basic_string<char>&, const std::__cxx11::basic_string<char>&, unsigned int)>; ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, const bilingual_str&, const std::__cxx11::basic_string<char>&, const std::__cxx11::basic_string<char>&, unsigned int)>; Mutex = boost::signals2::mutex; R = bool; Args = {const bilingual_str&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int}]':\r\n/bitcoin/depends/x86_64-pc-linux-gnu/share/../include/boost/signals2/last_value.hpp:54:36: warning: '*((void*)& value +1)' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n         if(value) return value.get();\r\n                                    ^\r\n/bitcoin/depends/x86_64-pc-linux-gnu/share/../include/boost/signals2/last_value.hpp:43:21: note: '*((void*)& value +1)' was declared here\r\n         optional<T> value;\r\n                     ^~~~~\r\n  CXX      libbitcoin_common_a-key.o\r\n```",
      "created_at" : "2020-06-12T08:12:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19256#issuecomment-643138548",
      "id" : 643138548,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19256",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzEzODU0OA==",
      "updated_at" : "2020-06-12T08:12:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643138548",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think this change is fine. I'd prefer to call it what it is though \"Change combiner for GUI signals to optional_last_value\". This does have a subtle change of functionality: namely that not registering any GUI signals is no longer a run-time error and message boxes could potentially end up ignored when no one registers a handler. Fixing the warning is only a by-effect.",
      "created_at" : "2020-06-12T10:42:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19256#issuecomment-643204975",
      "id" : 643204975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19256",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzIwNDk3NQ==",
      "updated_at" : "2020-06-12T10:42:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643204975",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I'd prefer to call it what it is though\r\n\r\nI've updated the commit message.",
      "created_at" : "2020-06-12T12:25:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19256#issuecomment-643243434",
      "id" : 643243434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19256",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzI0MzQzNA==",
      "updated_at" : "2020-06-12T12:25:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643243434",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK f1a0314c537791f202dfb7c1209f0e04ba7988c3",
      "created_at" : "2020-07-01T14:04:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19256#issuecomment-652438282",
      "id" : 652438282,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19256",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY1MjQzODI4Mg==",
      "updated_at" : "2020-07-01T14:04:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652438282",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19256#discussion_r453840068"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19256"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453840068"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\nnode/ui_interface.cpp: In member function âbool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str&, const string&, unsigned int)â:\r\nnode/ui_interface.cpp:45:193: error: âboost::signals2::signal<bool(const bilingual_str&, const std::basic_string<char>&, unsigned int), boost::signals2::optional_last_value<bool> >::result_typeâ has no member named âvalue_orâ\r\n bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str& message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeMessageBox(message, caption, style).value_or(false);}\r\n                                                                                                                                                                                                 ^\r\nnode/ui_interface.cpp: In member function âbool CClientUIInterface::ThreadSafeQuestion(const bilingual_str&, const string&, const string&, unsigned int)â:\r\nnode/ui_interface.cpp:46:258: error: âboost::signals2::signal<bool(const bilingual_str&, const std::basic_string<char>&, const std::basic_string<char>&, unsigned int), boost::signals2::optional_last_value<bool> >::result_typeâ has no member named âvalue_orâ",
      "commit_id" : "f1a0314c537791f202dfb7c1209f0e04ba7988c3",
      "created_at" : "2020-07-13T18:16:47Z",
      "diff_hunk" : "@@ -42,8 +42,8 @@ ADD_SIGNALS_IMPL_WRAPPER(NotifyBlockTip);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyHeaderTip);\n ADD_SIGNALS_IMPL_WRAPPER(BannedListChanged);\n \n-bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str& message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeMessageBox(message, caption, style); }\n-bool CClientUIInterface::ThreadSafeQuestion(const bilingual_str& message, const std::string& non_interactive_message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeQuestion(message, non_interactive_message, caption, style); }\n+bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str& message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeMessageBox(message, caption, style).value_or(false);}\n+bool CClientUIInterface::ThreadSafeQuestion(const bilingual_str& message, const std::string& non_interactive_message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeQuestion(message, non_interactive_message, caption, style).value_or(false);}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19256#discussion_r453840068",
      "id" : 453840068,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MDA2OA==",
      "original_commit_id" : "f1a0314c537791f202dfb7c1209f0e04ba7988c3",
      "original_line" : 46,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/node/ui_interface.cpp",
      "position" : 25,
      "pull_request_review_id" : 447488938,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19256",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-13T18:16:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453840068",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19256#discussion_r453840140"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19256"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453840140"
         }
      },
      "author_association" : "MEMBER",
      "body" : "boost 1.53",
      "commit_id" : "f1a0314c537791f202dfb7c1209f0e04ba7988c3",
      "created_at" : "2020-07-13T18:16:55Z",
      "diff_hunk" : "@@ -42,8 +42,8 @@ ADD_SIGNALS_IMPL_WRAPPER(NotifyBlockTip);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyHeaderTip);\n ADD_SIGNALS_IMPL_WRAPPER(BannedListChanged);\n \n-bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str& message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeMessageBox(message, caption, style); }\n-bool CClientUIInterface::ThreadSafeQuestion(const bilingual_str& message, const std::string& non_interactive_message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeQuestion(message, non_interactive_message, caption, style); }\n+bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str& message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeMessageBox(message, caption, style).value_or(false);}\n+bool CClientUIInterface::ThreadSafeQuestion(const bilingual_str& message, const std::string& non_interactive_message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeQuestion(message, non_interactive_message, caption, style).value_or(false);}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19256#discussion_r453840140",
      "id" : 453840140,
      "in_reply_to_id" : 453840068,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MDE0MA==",
      "original_commit_id" : "f1a0314c537791f202dfb7c1209f0e04ba7988c3",
      "original_line" : 46,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/node/ui_interface.cpp",
      "position" : 25,
      "pull_request_review_id" : 447489019,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19256",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-13T18:16:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453840140",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19256#discussion_r453850241"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19256"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453850241"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same with boost 1.55\r\n\r\n```\r\n#  make \r\nMaking all in src\r\nmake[1]: Entering directory '/bitcoin/src'\r\nmake[2]: Entering directory '/bitcoin/src'\r\nmake[3]: Entering directory '/bitcoin'\r\nmake[3]: Leaving directory '/bitcoin'\r\n  CXXLD    libbitcoinconsensus.la\r\n  CXX      node/libbitcoin_server_a-ui_interface.o\r\nnode/ui_interface.cpp: In member function 'bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str&, const string&, unsigned int)':\r\nnode/ui_interface.cpp:45:193: error: 'boost::signals2::signal<bool(const bilingual_str&, const std::basic_string<char>&, unsigned int), boost::signals2::optional_last_value<bool> >::result_type' has no member named 'value_or'\r\n bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str& message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeMessageBox(message, caption, style).value_or(false);}\r\n                                                                                                                                                                                                 ^\r\nnode/ui_interface.cpp: In member function 'bool CClientUIInterface::ThreadSafeQuestion(const bilingual_str&, const string&, const string&, unsigned int)':\r\nnode/ui_interface.cpp:46:258: error: 'boost::signals2::signal<bool(const bilingual_str&, const std::basic_string<char>&, const std::basic_string<char>&, unsigned int), boost::signals2::optional_last_value<bool> >::result_type' has no member named 'value_or'\r\n bool CClientUIInterface::ThreadSafeQuestion(const bilingual_str& message, const std::string& non_interactive_message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeQuestion(message, non_interactive_message, caption, style).value_or(false);}\r\n                                                                                                                                                                                                                                                                  ^\r\nnode/ui_interface.cpp: In member function 'bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str&, const string&, unsigned int)':\r\nnode/ui_interface.cpp:45:209: warning: control reaches end of non-void function [-Wreturn-type]\r\n bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str& message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeMessageBox(message, caption, style).value_or(false);}\r\n                                                                                                                                                                                                                 ^\r\nnode/ui_interface.cpp: In member function 'bool CClientUIInterface::ThreadSafeQuestion(const bilingual_str&, const string&, const string&, unsigned int)':\r\nnode/ui_interface.cpp:46:274: warning: control reaches end of non-void function [-Wreturn-type]\r\n bool CClientUIInterface::ThreadSafeQuestion(const bilingual_str& message, const std::string& non_interactive_message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeQuestion(message, non_interactive_message, caption, style).value_or(false);}\r\n                                                                                                                                                                                                                                                                                  ^\r\nMakefile:10774: recipe for target 'node/libbitcoin_server_a-ui_interface.o' failed\r\nmake[2]: *** [node/libbitcoin_server_a-ui_interface.o] Error 1\r\nmake[2]: Leaving directory '/bitcoin/src'\r\nMakefile:17685: recipe for target 'all-recursive' failed\r\nmake[1]: *** [all-recursive] Error 1\r\nmake[1]: Leaving directory '/bitcoin/src'\r\nMakefile:775: recipe for target 'all-recursive' failed\r\nmake: *** [all-recursive] Error 1\r\n",
      "commit_id" : "f1a0314c537791f202dfb7c1209f0e04ba7988c3",
      "created_at" : "2020-07-13T18:33:40Z",
      "diff_hunk" : "@@ -42,8 +42,8 @@ ADD_SIGNALS_IMPL_WRAPPER(NotifyBlockTip);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyHeaderTip);\n ADD_SIGNALS_IMPL_WRAPPER(BannedListChanged);\n \n-bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str& message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeMessageBox(message, caption, style); }\n-bool CClientUIInterface::ThreadSafeQuestion(const bilingual_str& message, const std::string& non_interactive_message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeQuestion(message, non_interactive_message, caption, style); }\n+bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str& message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeMessageBox(message, caption, style).value_or(false);}\n+bool CClientUIInterface::ThreadSafeQuestion(const bilingual_str& message, const std::string& non_interactive_message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeQuestion(message, non_interactive_message, caption, style).value_or(false);}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19256#discussion_r453850241",
      "id" : 453850241,
      "in_reply_to_id" : 453840068,
      "line" : 46,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg1MDI0MQ==",
      "original_commit_id" : "f1a0314c537791f202dfb7c1209f0e04ba7988c3",
      "original_line" : 46,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/node/ui_interface.cpp",
      "position" : 25,
      "pull_request_review_id" : 447500899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19256",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-13T18:33:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/453850241",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
