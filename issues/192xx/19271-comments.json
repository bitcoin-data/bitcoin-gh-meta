[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Big thanks to @JeremyRubin for [giving me this idea](https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-638553680).",
      "created_at" : "2020-06-14T01:40:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643705576",
      "id" : 643705576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzcwNTU3Ng==",
      "updated_at" : "2020-06-14T01:40:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643705576",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK and lite CR-ACK, the approach seems to make sense.\r\n\r\nVery nice work! Did this help with the variance from before?\r\n\r\nI don't want to go overkill but I wonder if there's a nicer way to communicate the start warming/stop warming instructions (e.g. not just tweaking flags so there's some sort of interface). I also wonder if it makes sense to just always completely finish warming the cache or not? Aborting warming early still means the work has to happen in serial (at some point) with the main thread. Is there ever a circumstance where the warmer gets the cache full that it evicts its own warmed entries? Can we detect this and just stop then?\r\n\r\n",
      "created_at" : "2020-06-14T02:20:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643708078",
      "id" : 643708078,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzcwODA3OA==",
      "updated_at" : "2020-06-14T02:20:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643708078",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19604 (Pass mempool pointer to UnloadBlockIndex/GetCoinsCacheSizeState by MarcoFalke)\n* #19306 (refactor: Replace RecursiveMutex with Mutex in CTxMemPool by hebasto)\n* #18766 (Disable fee estimation in blocksonly mode by darosior)\n* #18731 (refactor: Make CCheckQueue RAII-styled by hebasto)\n* #17479 (Return BlockValidationState from ProcessNewBlock if CheckBlock/AcceptBlock fails by jnewbery)\n* #15545 ([doc] explain why CheckBlock() is called before AcceptBlock by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-06-14T04:15:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643716037",
      "id" : 643716037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzcxNjAzNw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-30T01:36:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643716037",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\nI think speeding up connecting blocks is always a good idea.\r\n\r\nI see you introducing a new thread. That might be an issue. Last time I tried that it didn't work out well: see discussion [here](https://github.com/bitcoin/bitcoin/pull/18421) and an issue I created [here](https://github.com/bitcoin/bitcoin/issues/18488).\r\nMaybe you want to express your opinion there or during the IRC meeting, as it's likely that you'll face the same issue with this PR",
      "created_at" : "2020-06-14T08:23:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643735060",
      "id" : 643735060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzczNTA2MA==",
      "updated_at" : "2020-06-14T08:23:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643735060",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19271#discussion_r439827394"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19271"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439827394"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    const CCoinsViewCache& cache = *WITH_LOCK(cs_main, return &CoinsTip());\r\n```",
      "commit_id" : "548e17302b907cc255b1b3413dcd9e9058ec6729",
      "created_at" : "2020-06-14T12:56:02Z",
      "diff_hunk" : "@@ -3847,6 +3850,82 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n     return true;\n }\n \n+void CChainState::ThreadWarmCoinsCache()\n+{\n+    util::ThreadRename(\"warmcoins\");\n+    ScheduleBatchPriority();\n+\n+    CCoinsViewCache* cache;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#discussion_r439827394",
      "id" : 439827394,
      "line" : 3858,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgyNzM5NA==",
      "original_commit_id" : "548e17302b907cc255b1b3413dcd9e9058ec6729",
      "original_line" : 3858,
      "original_position" : 72,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 72,
      "pull_request_review_id" : 430217098,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19271",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-06-14T14:03:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439827394",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">Did this help with the variance from before?\r\n\r\n@JeremyRubin my personal benchmarking bandwidth is rather limited. I'm trying to get another machine set up to do more extensive benchmarking on this. My numbers were done on a 12 virtual core CPU with internal SSD. I think this might have a wide variance of performance increase depending on CPU and disk types. However, the results I had were very promising so I submitted this for concept approval. I will come back with some more numbers soon(ish).\r\n\r\n>I don't want to go overkill but I wonder if there's a nicer way to communicate the start warming/stop warming instructions (e.g. not just tweaking flags so there's some sort of interface).\r\n\r\nI thought I had done a pretty good job of this by wrapping it in `WarmBlock`/`CancelWarmingBlock` methods. I'll think some more on this. I'm open to suggestions.\r\n\r\n>I also wonder if it makes sense to just always completely finish warming the cache or not? Aborting warming early still means the work has to happen in serial (at some point) with the main thread.\r\n\r\nMy benchmarks showed this to have consistently negative performance. I also tried locking/unlocking inside `ConnectBlock` only where the coins were actually accessed, but it was also less performant and would have also made this diff a lot more complex.\r\n\r\n>Is there ever a circumstance where the warmer gets the cache full that it evicts its own warmed entries? Can we detect this and just stop then?\r\n\r\nI don't think this can occur. The cache is flushed only after `ConnectBlock` in `ConnectTip`, so the effect will be the same when warming coins in `ConnectBlock` or right before.",
      "created_at" : "2020-06-14T13:43:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643768536",
      "id" : 643768536,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0Mzc2ODUzNg==",
      "updated_at" : "2020-06-14T13:43:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643768536",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@naumenkogs I don't think your issue applies here. The work this thread needs to do is on the order of milliseconds, but it also needs to be immediately available for there to be any benefit. If it had to wait some milliseconds for scheduling it would be useless.",
      "created_at" : "2020-06-14T13:46:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643768821",
      "id" : 643768821,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0Mzc2ODgyMQ==",
      "updated_at" : "2020-06-14T13:46:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643768821",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19271#discussion_r439849665"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19271"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439849665"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Are we always guaranteed to have checked the pow by this point? I *think* so, because of AcceptBlockHeader?\r\n\r\nWorth documenting that this is expected or putting the WarmBlock call inside CheckBlock after the PoW check.",
      "commit_id" : "0580245dd8274fc601857bfa4305c77ff5349739",
      "created_at" : "2020-06-14T17:11:00Z",
      "diff_hunk" : "@@ -3860,6 +3939,9 @@ bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const s\n         // Therefore, the following critical section must include the CheckBlock() call as well.\n         LOCK(cs_main);\n \n+        // Before doing any checks, begin warming the cache to process this block\n+        ::ChainstateActive().WarmBlock(pblock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#discussion_r439849665",
      "id" : 439849665,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0OTY2NQ==",
      "original_commit_id" : "548e17302b907cc255b1b3413dcd9e9058ec6729",
      "original_line" : 3937,
      "original_position" : 151,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 430236123,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19271",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-18T22:17:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439849665",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2020-06-14T23:40:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-643838365",
      "id" : 643838365,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MzgzODM2NQ==",
      "updated_at" : "2020-06-14T23:40:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643838365",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is the kind of change that immediately scares me. It's adding complexity in a consensus-critical area, without great benefit to the critical metrics:\r\n\r\n- IBD: 2.3% speedup for is nice, but not worth the complexity/risk\r\n- Block propagation: I doubt this will have any impact since we relay compact blocks before calling `ActivateBestChain()`, which is where the coins are needed.\r\n\r\nSo I'd tend to concept NACK this kind of change. It seems to go in the opposite direction from what we'd want, which is to make validation-critical code as simple as possible.",
      "created_at" : "2020-06-17T00:03:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-645071074",
      "id" : 645071074,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTA3MTA3NA==",
      "updated_at" : "2020-06-17T00:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645071074",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@jnewbery I can definitely appreciate that perspective! However, I think concentrating on the 2.3% speedup is a pessimistic take on this patch. It has a 7.1% increase in speed for recent blocks, which are what we are likely to continue to experience in the future. While a user only has to perform IBD from genesis once, they will have to sync recent blocks every time they turn on the node. I think optimizing the common user flow of using the node, then turning off for days/weeks/months until it's used again will prove to be a big benefit. I also think I can find a way to increase IBD from genesis somewhat, but am still experimenting and will get more concrete numbers together. As I said in the description, this will only become more beneficial as the block chain grows.\r\n\r\nI also don't think this is that invasive of a patch. It's not changing any logic with any of the actual validation code. It is just looping through the inputs of a block before the actual validation occurs. This seems like an easy win for a bump of 7%.\r\n\r\nYou are correct that this doesn't improve block propagation. I didn't claim that it did. However, block propagation is only the first step for a block to be useful to a user; it still has to be connected after it is propagated. Increasing propagation to miners isn't as useful if it still takes a long time to validate the block afterwards. Miners (and all users, really) want to have the block connected as soon as possible. This can reduce forks by allowing miners to start mining on top of the block faster, and improve miner revenue by more quickly determining the optimal block template to mine on.",
      "created_at" : "2020-06-17T14:45:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-645419395",
      "id" : 645419395,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTQxOTM5NQ==",
      "updated_at" : "2020-06-17T17:10:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645419395",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  think optimizing the common user flow of using the node, then turning off for days/weeks/months until it's used again will prove to be a big benefit.\r\n\r\nThis isn't a usage pattern that we should be optimizing for:\r\n\r\n- it happens very infrequently (at most once every few days/weeks/months if the user really does stop-start their node frequently)\r\n- I'd argue that for this scenario, a 7.1% increase isn't that meaningful. If instead of a node taking one hour to resync from cold with this PR, I'm probably ok waiting one hour and four minutes without this PR.\r\n\r\nI've had a quick read through the implementation and I don't see how this can work. Your ThreadWarmCoinsCache thread is taking cs_main, grabbing a pointer to the coins tip, then dropping cs_main and continuing to write to the cache object. Meanwhile, the message handler thread or any other thread could also be accessing that same cache and reading/writing to it. Surely cs_main needs to be held for as long as you have the coins view cache?",
      "created_at" : "2020-06-17T15:23:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-645442815",
      "id" : 645442815,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTQ0MjgxNQ==",
      "updated_at" : "2020-06-17T15:23:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645442815",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">Meanwhile, the message handler thread or any other thread could also be accessing that same cache and reading/writing to it. Surely cs_main needs to be held for as long as you have the coins view cache?\r\n\r\n@jnewbery any other thread accessing `CoinsTip` requires `cs_main` to be held before accessing. Calling `CoinsTip` will cancel the current block warming and acquire the warming lock, and it can't start warming another block until it takes `cs_main` again. I can make this more clear with refactoring as per the comment [here](https://github.com/bitcoin/bitcoin/pull/19271#pullrequestreview-430236123).",
      "created_at" : "2020-06-17T16:18:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-645473879",
      "id" : 645473879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTQ3Mzg3OQ==",
      "updated_at" : "2020-06-17T16:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645473879",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the approach can be made clearly safe. While out of the propagation path for compact blocks, this is still in path for mining so there is a motivating factor IMO.\r\n\r\nRepeated uncontended locking is sufficiently cheap that I'd be curious to see the performance difference if the warming thread just tries to grab the lock before every read/write and receives an atomic flag from the main thread to quit warming at a certain point. This would make the algorithm more 'obviously correct' and I think would have negligible performance impact as the lock won't be contended. \r\n\r\nI'd also be curious if we can start the warming even earlier. E.g., when we receive a compact block we can immediately warm coins we can reconstruct. But that's a lot of complexity for a marginal gain over the current approach.",
      "created_at" : "2020-06-17T17:46:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-645523558",
      "id" : 645523558,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NTUyMzU1OA==",
      "updated_at" : "2020-06-17T17:46:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645523558",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I had originally been benchmarking by connecting to a single peer in the local network, which processes the new block and connects each block serially. When connecting to multiple remote peers the node will process new blocks in parallel and then connect them all later. When benchmarking a true IBD with multiple remote peers, the node gets a *lot* more time to warm the blocks as they come in.\r\n\r\nDoing a full IBD with `-prune=10000 -stopatheight=635000` on the same machine as before, I get an increase in speed of 39% (548 minutes in master, 337 minutes in this branch) and total block connect time speed increase of 7% (`14563.66s (22.93ms/blk)` in master, `13571.83s (21.37ms/blk)` in this branch). Total time warming coins was `4294.83s`.\r\n\r\nDoing a full IBD to block 635000 with no pruning on an older quad core machine with SSD, I get a speed increase in total time of 12% (28 hours in master, 24.75 hours in this branch) and total connect time speed increase of 16% (`67425.83s (106.18ms/blk)` in master, `56600.08s (89.13ms/blk)` in this branch). Total time warming coins was `22229.61s`.\r\n\r\nOf course there is a lot of variance due to network latency and quality of peers, and I will continue benchmarking with different configurations. However, I think these numbers warrant adding some more complexity to the validation logic as well as a new dedicated thread.\r\n\r\nThis also means what I said about warmed coins being evicted before block connection is not true. The cache can be filled and the coins evicted before the block is connected. I'll work on updating this so it won't happen.\r\n\r\nI'm still working on refactoring the locking interface, but I wanted to share my findings. I also pushed a small update to cancel warming a block when a new block is processed before the previous one is connected, so it will work efficiently with multiple remote peers in case anyone else wants to try benchmarking this.",
      "created_at" : "2020-06-22T00:49:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-647207823",
      "id" : 647207823,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0NzIwNzgyMw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-06-22T02:57:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647207823",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@andrewtoth I wanted to check in here and see how your progress is going? Anything in particular you feel stuck on?",
      "created_at" : "2020-07-18T17:00:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-660511068",
      "id" : 660511068,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MDUxMTA2OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-18T17:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/660511068",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@JeremyRubin Thanks for checking in, as well as for all your help and encouragement!\r\n\r\nI've pushed my latest. I've taken your suggestion and moved the thread handling to a new class `BlockWarmer`, and added an instance of it as a member variable of `CChainState`. Also added locking annotations. I think it makes it a lot more clear what is being changed with the validation logic. I can also write unit tests for it now.\r\n\r\nAs for what I'm felling stuck on, it's difficult to get a consistent benchmark on this. It's also very time consuming since I don't have a bunch of machines to keep running this on. It's consistently faster doing IBD, but the speedup varies widely, to above 20% to low single digits. I think I might have to setup something in the local network to pretend to be multiple peers. I'm also thinking I should write a benchmark for time to connect after receiving a block in `ProcessNewBlock`. I think I need to demonstrate objectively that there is a speedup here worth the added complexity.\r\n\r\nAlso, since we are downloading blocks out of order, I'm not sure if we could warm a block but it won't be processed until after the next flush. Not sure if it's possible to detect that.",
      "created_at" : "2020-07-18T22:17:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-660550416",
      "id" : 660550416,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MDU1MDQxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-18T22:17:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/660550416",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/19271#discussion_r456834062"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19271"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456834062"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated to explicitly check PoW here if we haven't already.",
      "commit_id" : "0580245dd8274fc601857bfa4305c77ff5349739",
      "created_at" : "2020-07-18T22:28:11Z",
      "diff_hunk" : "@@ -3860,6 +3939,9 @@ bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const s\n         // Therefore, the following critical section must include the CheckBlock() call as well.\n         LOCK(cs_main);\n \n+        // Before doing any checks, begin warming the cache to process this block\n+        ::ChainstateActive().WarmBlock(pblock);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#discussion_r456834062",
      "id" : 456834062,
      "in_reply_to_id" : 439849665,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzNDA2Mg==",
      "original_commit_id" : "548e17302b907cc255b1b3413dcd9e9058ec6729",
      "original_line" : 3937,
      "original_position" : 151,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 451085843,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/19271",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2020-07-18T22:28:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/456834062",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Looks like I have to figure out some locking issues as well.",
      "created_at" : "2020-07-18T23:06:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-660555155",
      "id" : 660555155,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MDU1NTE1NQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-18T23:06:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/660555155",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Converted to draft until I figure out all the issues.",
      "created_at" : "2020-07-18T23:08:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-660555335",
      "id" : 660555335,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY2MDU1NTMzNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-07-18T23:08:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/660555335",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Unfortunately I don't think I'll be able to keep working on this for the near future. Going to close for now.",
      "created_at" : "2020-08-07T02:30:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/19271#issuecomment-670286843",
      "id" : 670286843,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY3MDI4Njg0Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-08-07T02:30:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670286843",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   }
]
