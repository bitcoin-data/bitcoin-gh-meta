[
   {
      "author_association" : "MEMBER",
      "body" : "Does this still happen with #19228 ?",
      "created_at" : "2020-06-10T11:35:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19235#issuecomment-641943524",
      "id" : 641943524,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19235",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MTk0MzUyNA==",
      "updated_at" : "2020-06-10T11:35:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/641943524",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke I would assume so: AFAICT the problem isn't in `libsecp256k1` but in `CPubKey::Unserialize`. More specifically I think the problem is that `CPubKey::Unserialize` isn't throwing the expected serialization error: we wan't  `std::ios_base::failure` to be thrown when deserializating an invalid object :)\r\n\r\nOr alternatively I guess `Invalidate()` could be called from `CPubKey::Unserialize` to invalidate the object. That would make `GetLen(â¦)` return a size of zero which avoids the issue.",
      "created_at" : "2020-06-10T12:58:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19235#issuecomment-641989378",
      "id" : 641989378,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19235",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MTk4OTM3OA==",
      "updated_at" : "2020-06-10T13:19:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/641989378",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`CPubKey::Unserialize` Doesn't validate anything (except a max size)\r\nhttps://github.com/bitcoin/bitcoin/blob/bc933aeaf04420218b46318e316ee5eaa772823c/src/pubkey.h#L144\r\nAnd then when you call `IsFullyValid()` it will get the length via `GetLen` which will check the first byte and return a size accordingly, so in you example the first byte is `4` so it will return `65`.\r\nhttps://github.com/bitcoin/bitcoin/blob/bc933aeaf04420218b46318e316ee5eaa772823c/src/pubkey.h#L57-L64.\r\n\r\nI believe one solution can be calling `CPubKey::Set` from `CPubKey::Unserialize` OR check after reading `if(len != GetLen(vch[0])) Invalidate();` ",
      "created_at" : "2020-06-10T13:30:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19235#issuecomment-642010549",
      "id" : 642010549,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19235",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MjAxMDU0OQ==",
      "updated_at" : "2020-06-10T13:34:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/642010549",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2167860?v=4",
         "events_url" : "https://api.github.com/users/elichai/events{/privacy}",
         "followers_url" : "https://api.github.com/users/elichai/followers",
         "following_url" : "https://api.github.com/users/elichai/following{/other_user}",
         "gists_url" : "https://api.github.com/users/elichai/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/elichai",
         "id" : 2167860,
         "login" : "elichai",
         "node_id" : "MDQ6VXNlcjIxNjc4NjA=",
         "organizations_url" : "https://api.github.com/users/elichai/orgs",
         "received_events_url" : "https://api.github.com/users/elichai/received_events",
         "repos_url" : "https://api.github.com/users/elichai/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/elichai/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/elichai/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/elichai"
      }
   }
]
