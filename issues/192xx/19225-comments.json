[
   {
      "author_association" : "MEMBER",
      "body" : "cc @sipa, @fjahr, @jonasschnelli",
      "created_at" : "2020-06-09T14:39:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19225#issuecomment-641341207",
      "id" : 641341207,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MTM0MTIwNw==",
      "updated_at" : "2020-06-09T14:39:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/641341207",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> For example the nonce changed from 64-bit to 96-bit:\r\n> I have no idea if any of the changes are really material.\r\n\r\nAFAIK not for our use case. We can fairly control the sequence numbers and can make sure that nonce-reuses under the same key will not happen.\r\n\r\nReading RFC 8439, it looks like they have reduced the block counter from 64 to 32 bits and use now word 13 (which before was the upper 32bit of the 64bit counter) to extend the nonce from 64 to 96 bits.\r\n\r\n> Given that we plan to use ChaCha20 in MuHash3072 (#19055), if we ever want to write an RFC for that, we should probably use the new version of ChaCha20.\r\n\r\nAFAIK, #19055 uses only the keystream part (CPRNG) of ChaCha20 (similar to our FastRandomContext). Shouldn't be a problem at all (it keeps the counter/nonce always 0).\r\n\r\n> This is also relevant for the BIP-151 followup, which appears also to based on RFC 7539. Since the original BIP151 is withdrawn and its replacement hasn't been proposed, it's not too late to change that. RFC 8439 also defines ChaCha20-Poly1305, at minimum the test vectors seem different.\r\n\r\nFor BIP324, I don't think RFC 8439 matters. In BIP324, it's mandatory to not crypt more than 1GB of data under the same key which should be far enough to never hit a nonce reuse (with 64bit nonces).\r\n\r\nAs for the AEAD construction (ChaCha20-Poly1305), BIP324 uses a slightly modified and for our use-case optimised AEAD (ChaCha20-Poly1305@Bitcoin) which is almost identical to the openSSH version ChaCha20-Poly1305@OpenSSH (which is widely used since a while). The test vectors of RFC8439 won't match therefore.\r\n\r\nHowever, the code implementation should be very carefully reviewed so that nonce/key reuse is not possible (regardless of its 64 or 96bit).\r\n\r\nMaybe ideally @sipa or @real-or-random could drop a comment here.",
      "created_at" : "2020-06-09T20:00:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19225#issuecomment-641538667",
      "id" : 641538667,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MTUzODY2Nw==",
      "updated_at" : "2020-06-09T20:00:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/641538667",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Our implementation of ChaCha20 is based on [RFC 7539](https://tools.ietf.org/html/rfc7539) which has been declared obsolete by [RFC 8439](https://tools.ietf.org/html/rfc8439).\r\n> \r\n> For example the nonce changed from 64-bit to 96-bit:\r\n\r\n*This is not true*, ChaCha20 as specified in RFC 7539 already had a 96-bit nonce and a 32-bit counter. It's however true that ChaCha20-IETF (as in the RFCs) differs from the ChaCha20 proposal by Bernstein. All of this has already created confusion in the past, see https://en.wikipedia.org/wiki/Salsa20#ChaCha20_adoption .\r\n\r\nIn the end, all of this does not really matter as long as the counter does not overflow. It matters mostly for interoperability. But I think the reasoning given in the RFCs in not very relevant for us. They want 96-bit nonces for compabitility: RFC5116, which defines a generic AEAD API, recommends 96-bit nonces. \r\n\r\n> AFAIK, #19055 uses only the keystream part (CPRNG) of ChaCha20 (similar to our FastRandomContext). Shouldn't be a problem at all (it keeps the counter/nonce always 0).\r\n\r\nMaybe there's a misconception here. ChaCha20 is basically just a CPRNG, there are no parts other than the keystream part (=stream of pseudorandom bytes, internally created in blocks of 64 bytes). You can use ChaCha20 as a stream cipher then, to encrypt and decrypt but this operation is then simply XORing the stream of pseudorandom bytes to the message. I have no idea about MuHash, but one of (counter, nonce) those should change if you derive more than 64 pseudorandom bytes (= more than one block but as I said, this is internally handled by ChaCha20).",
      "created_at" : "2020-06-10T09:00:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19225#issuecomment-641858578",
      "id" : 641858578,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19225",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY0MTg1ODU3OA==",
      "updated_at" : "2020-06-10T09:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/641858578",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/1071625?v=4",
         "events_url" : "https://api.github.com/users/real-or-random/events{/privacy}",
         "followers_url" : "https://api.github.com/users/real-or-random/followers",
         "following_url" : "https://api.github.com/users/real-or-random/following{/other_user}",
         "gists_url" : "https://api.github.com/users/real-or-random/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/real-or-random",
         "id" : 1071625,
         "login" : "real-or-random",
         "node_id" : "MDQ6VXNlcjEwNzE2MjU=",
         "organizations_url" : "https://api.github.com/users/real-or-random/orgs",
         "received_events_url" : "https://api.github.com/users/real-or-random/received_events",
         "repos_url" : "https://api.github.com/users/real-or-random/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/real-or-random/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/real-or-random/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/real-or-random"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The new BIP324 working draft (pending release) uses RFC8439 and https://github.com/bitcoin/bitcoin/pull/25361 adds that support into our implementation. https://github.com/bitcoin/bitcoin/pull/25354 also fixes a bug (inefficiency, not correctness) in our ChaCha20 implementation. I _think_ we can close this issue?",
      "created_at" : "2022-08-05T20:30:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19225#issuecomment-1206841278",
      "id" : 1206841278,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19225",
      "node_id" : "IC_kwDOABII585H7u--",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206841278/reactions"
      },
      "updated_at" : "2022-08-05T20:30:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206841278",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/856960?v=4",
         "events_url" : "https://api.github.com/users/dhruv/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dhruv/followers",
         "following_url" : "https://api.github.com/users/dhruv/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dhruv/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dhruv",
         "id" : 856960,
         "login" : "dhruv",
         "node_id" : "MDQ6VXNlcjg1Njk2MA==",
         "organizations_url" : "https://api.github.com/users/dhruv/orgs",
         "received_events_url" : "https://api.github.com/users/dhruv/received_events",
         "repos_url" : "https://api.github.com/users/dhruv/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dhruv/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dhruv"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I _think_ we can close this issue?\r\n\r\nYes, it can be closed, independently of the two mentioned PRs. There are no algorithmic changes between  RFC 7540 and RFC 8439. Quoting the latter: \r\n> [RFC 7539](https://www.rfc-editor.org/rfc/rfc7539), the predecessor of this document, was meant to serve as a\r\n   stable reference and an implementation guide.  It was a product of\r\n   the Crypto Forum Research Group (CFRG).  This document merges the\r\n   errata filed against [RFC 7539](https://www.rfc-editor.org/rfc/rfc7539) and adds a little text to the Security\r\n   Considerations section.",
      "created_at" : "2022-08-05T21:54:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/19225#issuecomment-1206935411",
      "id" : 1206935411,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/19225",
      "node_id" : "IC_kwDOABII585H8F9z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206935411/reactions"
      },
      "updated_at" : "2022-08-05T21:54:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206935411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1071625?v=4",
         "events_url" : "https://api.github.com/users/real-or-random/events{/privacy}",
         "followers_url" : "https://api.github.com/users/real-or-random/followers",
         "following_url" : "https://api.github.com/users/real-or-random/following{/other_user}",
         "gists_url" : "https://api.github.com/users/real-or-random/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/real-or-random",
         "id" : 1071625,
         "login" : "real-or-random",
         "node_id" : "MDQ6VXNlcjEwNzE2MjU=",
         "organizations_url" : "https://api.github.com/users/real-or-random/orgs",
         "received_events_url" : "https://api.github.com/users/real-or-random/received_events",
         "repos_url" : "https://api.github.com/users/real-or-random/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/real-or-random/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/real-or-random/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/real-or-random"
      }
   }
]
