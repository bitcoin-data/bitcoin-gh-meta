[
   {
      "author_association" : "NONE",
      "body" : "HWI supplies descriptors that include the non-canonical descriptor with the h for hardened and are converted when ran through getdescriptorinfo\r\n\r\nIt would be nice if getdescriptorinfo would not change what is provided to it and provides a checksum for what was the input",
      "created_at" : "2019-05-06T17:15:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-489699710",
      "id" : 489699710,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTY5OTcxMA==",
      "updated_at" : "2019-05-06T17:15:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489699710",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/12241959?v=4",
         "events_url" : "https://api.github.com/users/myveryown/events{/privacy}",
         "followers_url" : "https://api.github.com/users/myveryown/followers",
         "following_url" : "https://api.github.com/users/myveryown/following{/other_user}",
         "gists_url" : "https://api.github.com/users/myveryown/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/myveryown",
         "id" : 12241959,
         "login" : "myveryown",
         "node_id" : "MDQ6VXNlcjEyMjQxOTU5",
         "organizations_url" : "https://api.github.com/users/myveryown/orgs",
         "received_events_url" : "https://api.github.com/users/myveryown/received_events",
         "repos_url" : "https://api.github.com/users/myveryown/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/myveryown/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/myveryown/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/myveryown"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I was working with @myveryown earlier today on debugging a difficulty using descriptors and I found it very unintuitive that this command returns not just an obvious checksum (which is appreciated) but also converts `h` to `'` in origin info in a way that's not immediately obvious:\r\n\r\n```bash\r\n$ bitcoin-cli getdescriptorinfo \"wpkh([f6bb4c63/0h/0h/30h]028429a37c3f09c8c5cc1fab58df32d1a7da7616c748a40eeb1aae1d64acb9c5cc)\" | jq -r .descriptor\r\nwpkh([f6bb4c63/0'/0'/30']028429a37c3f09c8c5cc1fab58df32d1a7da7616c748a40eeb1aae1d64acb9c5cc)#5wdxpxcx\r\n```\r\n\r\nIt wasn't until @gwillen pointed out this substitution of `h` with `'` that I realized what was going wrong with my attempts to troubleshoot @myveryown's problem.  I'm in agreement with the OP on both points:\r\n\r\n1. getdescriptorinfo should provide a way to get the checksum for a non-canonical descriptor\r\n2. Paths using hardened derivation should preferentially be indicated by an `h` rather than a `'`\r\n\r\nI think the output should probably look something like this:\r\n\r\n```text\r\n$ bitcoin-cli getdescriptorinfo \"wpkh([f6bb4c63/0h/0h/30h]028429a37c3f09c8c5cc1fab58df32d1a7da7616c748a40eeb1aae1d64acb9c5cc)\"\r\n{\r\n  \"descriptor\": \"wpkh([f6bb4c63/0h/0h/30h]028429a37c3f09c8c5cc1fab58df32d1a7da7616c748a40eeb1aae1d64acb9c5cc)#vk9vfu0h\"\r\n  \"normalized\": \"wpkh([f6bb4c63/0'/0'/30']028429a37c3f09c8c5cc1fab58df32d1a7da7616c748a40eeb1aae1d64acb9c5cc)#5wdxpxcx\",\r\n  \"isrange\": false,\r\n  \"issolvable\": true,\r\n  \"hasprivatekeys\": false\r\n}\r\n```\r\n\r\n(Instead of \"canonical\", I use \"normalized\" because it has the same number of letters as \"descriptor\" and so aligns well in fixed-width displays.  Also canonical seems more ambiguous than normalized in this context.)",
      "created_at" : "2019-05-06T17:57:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-489714275",
      "id" : 489714275,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTcxNDI3NQ==",
      "updated_at" : "2019-05-06T17:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489714275",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm going to take a crack at this today -- I'm going to both switch the default marker to \"h\", and have getaddressinfo return the same descriptor provided, rather than alter it. Then people can bikeshed the result. ;-)\r\n\r\n(EDIT: Oh, I like @harding 's suggestion of providing both the as-given descriptor and the normalized descriptor, will do.)",
      "created_at" : "2019-05-06T18:26:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-489724528",
      "id" : 489724528,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4OTcyNDUyOA==",
      "updated_at" : "2019-05-06T18:27:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489724528",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on making descriptor checksum based on `h` or `'` given by the user, rather than canonical form. But let's add an error for mixed usage.\r\n\r\nI don't think the `normalized` field is useful.\r\n\r\nI'm fine with switching the default to `h`. In addition to RPC usage, it's probably also less susceptible to graphical operating systems messing with quote marks.\r\n\r\nI'm on the fence regarding private keys. At least our RPC should not echo private keys, so it would have to return the checksum without the rest of the descriptor. There could be a separate checksum_private return field for this case.\r\n\r\nCan you update the PR description to say `getdescriptorinfo` instead of `getaddressinfo` (assuming that's what you meant)?",
      "created_at" : "2019-05-07T10:17:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-490022807",
      "id" : 490022807,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDAyMjgwNw==",
      "updated_at" : "2019-05-07T10:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490022807",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Sorry yes, that is what I meant, fixed.",
      "created_at" : "2019-05-07T20:35:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-490245206",
      "id" : 490245206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDI0NTIwNg==",
      "updated_at" : "2019-05-07T20:35:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490245206",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok, it seems like changing the default character from \"'\" to \"h\" is a one-line change, whereas preserving the user's original usage BUT still stripping private keys is going to be a hugely-invasive change to descriptor parsing (since we parse and deparse completely in order to print right now, and do not track which spelling was used), and giving a sensible error message for mixed usage is a different hugely-invasive change (since we do not currently have any way of returning error codes from parsing, so they would have to be added.)\r\n\r\nSo I'm going to PR the one-line change as \"hopefully the best use of time right now\", since I'm not aware of anybody clamoring to use \"'\" instead of \"h\", and everyone seems to prefer the opposite.",
      "created_at" : "2019-05-08T01:45:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-490315299",
      "id" : 490315299,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDMxNTI5OQ==",
      "updated_at" : "2019-05-08T01:45:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490315299",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The original reason to make ' the default was because of consistency with decodepsbt (which uses the ' in derivation paths).\n\nIt's not too hard to make the parsing/serializing just roundtrip what was provided, if that's desirable.",
      "created_at" : "2019-05-08T02:08:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-490319535",
      "id" : 490319535,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDMxOTUzNQ==",
      "updated_at" : "2019-05-08T02:08:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490319535",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hmm, can we get away with changing decodepsbt also? Otherwise we end up with two inconsistent \"canonical\" forms, which isn't great either. ",
      "created_at" : "2019-05-08T03:00:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-490328423",
      "id" : 490328423,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDMyODQyMw==",
      "updated_at" : "2019-05-08T03:00:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490328423",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Paging PSBT-guy: @achow101 ",
      "created_at" : "2019-05-08T15:01:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-490522522",
      "id" : 490522522,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDUyMjUyMg==",
      "updated_at" : "2019-05-08T15:01:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490522522",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Hmm, can we get away with changing decodepsbt also?\r\n\r\nYes.\r\n\r\nIMO we should change this everywhere, including its use in wallet metadata (but that may not be possible/necessary). The only reason `'` was being used was because that was the the derivation path that the wallet stored for each key. However since derivation paths are now stored as integer values, it should be fine and safe to change everywhere it is displayed to use `h`. Note that we still may need to have the wallet continue to write out `'` in the derivation path string in `CKeyMetaData` for backwards compatibility reasons, but that string shouldn't be displayed anymore so it doesn't really matter.",
      "created_at" : "2019-05-08T17:46:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-490583378",
      "id" : 490583378,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDU4MzM3OA==",
      "updated_at" : "2019-05-08T17:46:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490583378",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I would be in favor of changing the default to \"h\" everywhere (pieter's PR, which I just linked, doesn't change the default but only makes it possible to get the original descriptor echoed back unmodified with checksum.)\r\n\r\nNote that the easiest way to change the default in getdescriptorinfo requires changing it in bip32.cpp in FormatHDKeypath, which (if I'm not mistaken) also changes it in CKeyMetaData. But as long as ParseHDKeypath is changed to accept both, there's no back-compat issue, so I don't expect it should be a problem. I'm happy to continue with that PR if people are comfortable with that.",
      "created_at" : "2019-05-08T21:29:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-490657801",
      "id" : 490657801,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDY1NzgwMQ==",
      "updated_at" : "2019-05-08T21:29:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490657801",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> which (if I'm not mistaken) also changes it in CKeyMetaData.\r\n\r\nOnly for imported keys.\r\n\r\nI don't think there's actually a backwards compatibility issue since it's just a string that's only used to be displayed to users.\r\n\r\n> I'm happy to continue with that PR if people are comfortable with that.\r\n\r\nACK.\r\n\r\nAlso, there's a redundant `WriteHDKeypath` function in `rpc/rawtransaction.cpp` which can be removed and the thing that uses it can use the `WriteHDKeypath` in `utils/bip32.cpp`.",
      "created_at" : "2019-05-08T22:41:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-490676651",
      "id" : 490676651,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDY3NjY1MQ==",
      "updated_at" : "2019-05-08T22:41:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490676651",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess I let this drop after we started echoing the checksum for the original version, without going all the way to switching the default to \"h\"?\r\n\r\nThe user ghost43 on IRC just hit a shell-quoting issue related to this, reported in ##hwi on Freenode: https://gist.github.com/SomberNight/8d7b065e74449a8716da9a98cac3cae2\r\n\r\nIf you wrap the descriptor in single-quotes in the shell, and it happens to have an even number of ' in it (and the contents of the descriptor happens to not actually need quoting), the shell will just silently remove them as valid-but-useless quotes. This transforms the descriptor into one with public derivation everywhere, which is scary.\r\n\r\nSo I guess this should be a vote in favor of reviving the idea to just force everything to be 'h' instead of ' by default.",
      "created_at" : "2020-09-09T18:12:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-689730779",
      "id" : 689730779,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY4OTczMDc3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-09T18:12:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/689730779",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I would very much prefer to have `h` everywhere by default.  I don't work with descriptors often, but dealing with the quoting issues annoys me every time.",
      "created_at" : "2020-09-20T16:10:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-695804716",
      "id" : 695804716,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTgwNDcxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-20T16:10:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695804716",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "No strong opinion here. Descriptors can also contain `[` and `]`. Can't those pose problems in shells as well?",
      "created_at" : "2020-09-20T16:55:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-695809512",
      "id" : 695809512,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTgwOTUxMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-20T16:55:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695809512",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa certainly `[]()/*'` all have special meaning in bash, but only one of them can't be made literal by encapsulating it in single quotes and can't even be escaped by simply prefixing it with a backslash within single quotes.\r\n\r\nThe challenge I often have is that I need to use one set of quotes to escape a string from the shell and a different set of quotes to indicate a string to the JSON parser; this is most easily done using double quotes for one string and single quotes for the other string, e.g. I want to do something like this:\r\n\r\n    bitcoin-cli scantxoutset start '[{\"desc\": \"pkh([d34db33f/44'/0'/0']xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL/1/*)\"}]'\r\n\r\nBut instead I have to add three escape characters per single quote in the BIP32 path:\r\n\r\n    bitcoin-cli scantxoutset start '[{\"desc\": \"pkh([d34db33f/44'\\''/0'\\''/0'\\'']xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL/1/*)\"}]'\r\n\r\nThe extra effort is annoying, but I think it's also a challenging problem for users who are less experienced at the shell.  If you run the first command above, the error you get is:\r\n\r\n    bash: syntax error near unexpected token `)'\r\n\r\nThat's not very useful to an inexperienced user---they may think they need to escape the parens at the end of the string rather than noticing the problem with the single quotes near the beginning of the string.  And, as @gwillen noted, it's easy for a user to get the escaping wrong and not notice the shell submitted a different descriptor than they expected, e.g.:\r\n\r\n    $ set -x\r\n    $ bitcoin-cli scantxoutset start '[{\"desc\": \"pkh([d34db33f/44'/0'/0]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL/1/*)\"}]'\r\n    + bitcoin-cli scantxoutset start '[{\"desc\": \"pkh([d34db33f/44/0/0]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL/1/*)\"}]'\r\n\r\nI think users are a lot less likely to encounter problems with the other special characters, since those characters will probably be escaped normally and so interpreted literally.",
      "created_at" : "2020-09-20T17:48:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-695815432",
      "id" : 695815432,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTgxNTQzMg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-20T17:48:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695815432",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/61096?v=4",
         "events_url" : "https://api.github.com/users/harding/events{/privacy}",
         "followers_url" : "https://api.github.com/users/harding/followers",
         "following_url" : "https://api.github.com/users/harding/following{/other_user}",
         "gists_url" : "https://api.github.com/users/harding/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/harding",
         "id" : 61096,
         "login" : "harding",
         "node_id" : "MDQ6VXNlcjYxMDk2",
         "organizations_url" : "https://api.github.com/users/harding/orgs",
         "received_events_url" : "https://api.github.com/users/harding/received_events",
         "repos_url" : "https://api.github.com/users/harding/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/harding/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/harding/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/harding"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@harding Yeah, that sounds reasonable. Concept ACK",
      "created_at" : "2020-09-20T18:03:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-695816966",
      "id" : 695816966,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NTgxNjk2Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-20T19:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695816966",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "As an inexperienced user I just came up against this issue. \r\n\r\nIs there a way to force the use of h? \r\n\r\n_Background\r\n\r\nMy wallet provided me with a descriptor (including checksum) using h in indicate hardened address derivation (rather than '). \r\n\r\nWhen I compared this to the descriptor I built (using bitcoin-cli getdescriptorinfo) I noticed that the checksums did not match, and that regardless of whether I set the hardened path with ' or h in my code, getdescriptorinfo is always sanitised this to '._",
      "created_at" : "2020-11-17T20:03:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-729169852",
      "id" : 729169852,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyOTE2OTg1Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-17T20:03:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729169852",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/42300012?v=4",
         "events_url" : "https://api.github.com/users/6102bitcoin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/6102bitcoin/followers",
         "following_url" : "https://api.github.com/users/6102bitcoin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/6102bitcoin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/6102bitcoin",
         "id" : 42300012,
         "login" : "6102bitcoin",
         "node_id" : "MDQ6VXNlcjQyMzAwMDEy",
         "organizations_url" : "https://api.github.com/users/6102bitcoin/orgs",
         "received_events_url" : "https://api.github.com/users/6102bitcoin/received_events",
         "repos_url" : "https://api.github.com/users/6102bitcoin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/6102bitcoin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/6102bitcoin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/6102bitcoin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@6102bitcoin I believe that, when you run getdescriptorinfo, it should now show you TWO checksums -- one corresponding to the exact descriptor you provided, and one as part of the \"sanitized\" version with the ' characters. Does that seem to be the case?",
      "created_at" : "2020-11-17T20:13:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-729174715",
      "id" : 729174715,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyOTE3NDcxNQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-17T20:13:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729174715",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Only 1 checksum is provided in the checksum field. (perhaps) confusingly the checksum provided in the checksum field does not match that at the end of the end of the descriptor field.\r\n\r\nbitcoin-cli getdescriptorinfo \"wpkh([fingerprint/84h/0h/0h]xpub/0/*)\"\r\n{\r\n  \"descriptor\": \"wpkh([fingerprint/84'/0'/0']xpub/0/*)#**checksum1**\",\r\n  \"checksum\": \"**checksum2**\",\r\n  \"isrange\": true,\r\n  \"issolvable\": true,\r\n  \"hasprivatekeys\": false\r\n}\r\n\r\nWhere checksum1 corresponds to the checksum using ' & checksum2 corresponds to the checksum using h",
      "created_at" : "2020-11-17T21:32:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-729226753",
      "id" : 729226753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyOTIyNjc1Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-17T21:39:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729226753",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/42300012?v=4",
         "events_url" : "https://api.github.com/users/6102bitcoin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/6102bitcoin/followers",
         "following_url" : "https://api.github.com/users/6102bitcoin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/6102bitcoin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/6102bitcoin",
         "id" : 42300012,
         "login" : "6102bitcoin",
         "node_id" : "MDQ6VXNlcjQyMzAwMDEy",
         "organizations_url" : "https://api.github.com/users/6102bitcoin/orgs",
         "received_events_url" : "https://api.github.com/users/6102bitcoin/received_events",
         "repos_url" : "https://api.github.com/users/6102bitcoin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/6102bitcoin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/6102bitcoin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/6102bitcoin"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "On further reading of the [pull](https://github.com/bitcoin/bitcoin/pull/15986) linked above this appears to be the expected behaviour. ",
      "created_at" : "2020-11-18T07:41:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-729497470",
      "id" : 729497470,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDcyOTQ5NzQ3MA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-18T07:41:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729497470",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/42300012?v=4",
         "events_url" : "https://api.github.com/users/6102bitcoin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/6102bitcoin/followers",
         "following_url" : "https://api.github.com/users/6102bitcoin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/6102bitcoin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/6102bitcoin",
         "id" : 42300012,
         "login" : "6102bitcoin",
         "node_id" : "MDQ6VXNlcjQyMzAwMDEy",
         "organizations_url" : "https://api.github.com/users/6102bitcoin/orgs",
         "received_events_url" : "https://api.github.com/users/6102bitcoin/received_events",
         "repos_url" : "https://api.github.com/users/6102bitcoin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/6102bitcoin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/6102bitcoin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/6102bitcoin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I took a quick look at what it would take to change the default from `'` to `h`. (Considering in particular whether it makes more sense to try to change it only at the interface, or also internally.) Here's what I found:\r\n\r\n* 10 functional tests (plus `psbt_wallet_tests.cpp`) have `'` hardcoded in various places that I could find. (Generally found by grepping for roughly `44'|49'|84'|/0'|/1'`). The functional tests would need to be changed no matter what, insofar as they are parsing RPC output and looking for `'` and not `h`.\r\n* In `descriptor.cpp`:\r\n  * `BIP32PubkeyProvider::ToString` and `::ToPrivateString` emit `'`.\r\n  * `ParseKeyPath` accepts either `'` or `h`, so that's no problem. \r\n* In `bip32.cpp`:\r\n  * `FormatHDKeypath` emits `'`.\r\n  * `ParseHDKeypath` does a string search for `'`. I think this would be safe to change to `h` because it only operates on path components, which otherwise are purely numeric (and it checks this.)\r\n* In `scriptpubkeyman.cpp`:\r\n  * `LegacyScriptPubKeyMan::DeriveNewChildKey` and `DescriptorScriptPubKeyMan::SetupDescriptorGeneration` both have a bunch of hardcoded keypath fragments with apostrophes in them.\r\n* In `descriptor_tests.cpp`:\r\n  * There is a function `UseHInsteadOfApostrophe` which is used to turn descriptors with `'` into descriptors with `h` to ensure that both formats are tested. Since that direction is easily done with a character substitution, but the reverse is not, it would seem necessary to keep these testcases formatted with an apostrophe to easily test parsing of both styles.\r\n\r\nI get the impression that internally, descriptors are stored at least sometimes as strings with `'`, and `ParseHDKeyPath` is used for parsing these (and only accepts `'`, never `h`). However, it seems that (outside of tests), this is only used:\r\n* When the key origin (with pre-parsed path) is missing (`walletdb.cpp:463`); or\r\n* When upgrading a wallet without the flag `WALLET_FLAG_KEY_ORIGIN_METADATA` (`scriptpubkeyman.cpp:392`).\r\n\r\nSo I assume a newly-created wallet will store a non-string key origin, and this codepath will not be used. All other parsing of keypaths appears(?) to go through `descriptor.cpp`'s `ParseKeyPath` function, which accepts both.\r\n\r\nSo with all that out of the way:\r\n\r\n* Which of these functions are used for stuff we get from / write to the walletdb, and which for RPCs and other UI uses? Is it strictly split between `bip32.cpp` for the former, and everything else is the latter?\r\n* Is it okay to just let `ParseHDKeyPath` accept both formats, or is this undesirable?\r\n* Is it okay for descriptors stored in the wallet to switch from `'` to `h` going forward? Does this break compatibility in a way that requires some kind of flag or version bump? (I'm not super familiar with wallet versioning stuff, but keep in mind that the wallet -- at least the CURRENT wallet -- does not APPEAR to ever parse this unless the key origin metadata is missing. If it is the case that NO version of Core (which is willing to read a modern wallet file) will do so, then this may be compatible.)\r\n* Have I gone too far, and should I just be looking at doing this for descriptors that are presented to the user (e.g. via RPC)? This is tricky because `'` and `h` give different checksums, so this change has to happen before the checksum is added. (Are descriptors in the wallet stored with checksums, or without?)",
      "created_at" : "2020-11-24T23:19:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/15740#issuecomment-733288758",
      "id" : 733288758,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15740",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczMzI4ODc1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-11-24T23:21:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/733288758",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/458997?v=4",
         "events_url" : "https://api.github.com/users/gwillen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gwillen/followers",
         "following_url" : "https://api.github.com/users/gwillen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gwillen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gwillen",
         "id" : 458997,
         "login" : "gwillen",
         "node_id" : "MDQ6VXNlcjQ1ODk5Nw==",
         "organizations_url" : "https://api.github.com/users/gwillen/orgs",
         "received_events_url" : "https://api.github.com/users/gwillen/received_events",
         "repos_url" : "https://api.github.com/users/gwillen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gwillen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gwillen"
      }
   }
]
