[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15890](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15890.html) (Doc: remove text about txes always relayed from -whitelist by harding)\n* [#15704](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15704.html) (Move Win32 defines to configure.ac to ensure they are globally defined by luke-jr)\n* [#15529](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15529.html) (Add Qt programs to msvc build by sipsorcery)\n* [#14856](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14856.html) (net: remove more CConnman globals (theuni) by dongcarl)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-04-01T19:19:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-478710368",
      "id" : 478710368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3ODcxMDM2OA==",
      "updated_at" : "2019-04-25T13:50:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478710368",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MishraShivendra I would love to review this, would you be able to do the following:\r\n1. Remove the copyright notices (we're licensed MIT)\r\n2. Break the changes up into smaller, more digestible commits?",
      "created_at" : "2019-04-01T19:36:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-478716148",
      "id" : 478716148,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3ODcxNjE0OA==",
      "updated_at" : "2019-04-01T19:36:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478716148",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@dongcarl\r\nThanks.\r\nSure. Let me close this pull request and do three separate commits for those bullet points.",
      "created_at" : "2019-04-02T02:13:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-478816157",
      "id" : 478816157,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3ODgxNjE1Nw==",
      "updated_at" : "2019-04-02T02:14:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478816157",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8533116?v=4",
         "events_url" : "https://api.github.com/users/MishraShivendra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MishraShivendra/followers",
         "following_url" : "https://api.github.com/users/MishraShivendra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MishraShivendra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MishraShivendra",
         "id" : 8533116,
         "login" : "MishraShivendra",
         "node_id" : "MDQ6VXNlcjg1MzMxMTY=",
         "organizations_url" : "https://api.github.com/users/MishraShivendra/orgs",
         "received_events_url" : "https://api.github.com/users/MishraShivendra/received_events",
         "repos_url" : "https://api.github.com/users/MishraShivendra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MishraShivendra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MishraShivendra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MishraShivendra"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "No need to close the PR; you can overwrite it by force pushing.",
      "created_at" : "2019-04-02T02:20:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-478817460",
      "id" : 478817460,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3ODgxNzQ2MA==",
      "updated_at" : "2019-04-02T02:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478817460",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r271172008"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271172008"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This looks a bit dangerous: should be `;` and not `,` right? :-)",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-02T07:51:29Z",
      "diff_hunk" : "@@ -0,0 +1,102 @@\n+#include \"natmap_wrapper.h\"\n+\n+NatMap::NatMap(in_addr_t* alternateGWAddr)\n+{\n+\tin_addr_t gateway = {0};\n+\tif(alternateGWAddr) {\n+\t\tmemcpy(&gateway, alternateGWAddr, sizeof(gateway));\n+\t}\n+\tm_State = InitNatPmp( &m_NatPmpObj, \n+\t\t\t      alternateGWAddr?1:0, \n+\t\t\t      gateway);\n+}\n+\n+int NatMap::IsGood(void) const\n+{\n+\treturn m_State;\n+}\n+\n+NatMap::~NatMap()\n+{\n+\tint returnCode = CloseNatPmp(&m_NatPmpObj);\n+\tLogPrint( BCLog::NET, \"NAT-PMP: Closed Connection to gateway [%s]\",GetErrMsg(returnCode));\t\n+}\n+\n+int NatMap::GetPublicAddress(std::string& publicAddressOut)\n+{\n+\tint returnCode = SendPublicAddressRequest(&m_NatPmpObj);\n+\tif(returnCode<0) {\n+\t\treturn returnCode;\n+\t}\n+\n+\n+\tfd_set fds;\n+\tnatpmpresp_t response;\n+\tTimeValType timeout;\n+\tshort retryCount = 0;\n+\tdo {\n+\t\tFD_ZERO(&fds);\n+\t\tFD_SET(m_NatPmpObj.s, &fds);\n+\t\tGetNatPmpRequestTimeout(&m_NatPmpObj, &timeout);\n+\t\treturnCode = select(FD_SETSIZE, &fds, NULL, NULL, &timeout);\n+\t\tif(returnCode<0) {\n+\t\t\treturn returnCode;\n+\t\t}\n+\t\treturnCode = ReadNatPmpResponseOrRetry(&m_NatPmpObj, &response);\n+\t\tretryCount++;\n+\t} while(returnCode==NATPMP_TRYAGAIN);\n+\t\n+\tif(returnCode<0) {\n+\t\treturn returnCode;\n+\t}\n+\tpublicAddressOut = std::string(inet_ntoa(response.pnu.publicaddress.addr));\n+\treturn 0;\n+}\n+\n+int NatMap::SendMapReq(int protocol, uint16_t privatePort, \n+\t\t       uint16_t& publicPortOut, uint32_t& lifeTimeOut)\n+{\n+\tint returnCode = SendNewPortMappingRequest(&m_NatPmpObj, protocol,\n+\t\t\t\t\t\t   privatePort, publicPortOut,\n+\t\t\t\t\t\t   lifeTimeOut);\n+\tif(returnCode < 0) {\n+\t\treturn returnCode;\n+\t}\n+\n+\tfd_set fds;\n+\tTimeValType timeout;\n+\tnatpmpresp_t response;\n+\tshort retryCount = 0;\n+\tdo {\n+\t\tFD_ZERO(&fds);\n+\t\tFD_SET(m_NatPmpObj.s, &fds);\n+\t\tGetNatPmpRequestTimeout(&m_NatPmpObj, &timeout);\n+\t\treturnCode = select(FD_SETSIZE, &fds, NULL, NULL, &timeout);\n+\t\tif(returnCode<0) {\n+\t\t\treturn NATMAP_ERR_SELECT;\n+\t\t}\n+\t\treturnCode = ReadNatPmpResponseOrRetry(&m_NatPmpObj, &response);\n+\t\tretryCount++;\n+\t}while(returnCode==NATPMP_TRYAGAIN);\n+\t\n+\tif(returnCode<0) {\n+\t\treturn returnCode;\n+\t}\n+\n+\tpublicPortOut = response.pnu.newportmapping.mappedpublicport,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r271172008",
      "id" : 271172008,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTE3MjAwOA==",
      "original_commit_id" : "37a4b3c5ddcb986326364cf7042814cd15c8c486",
      "original_position" : 86,
      "path" : "src/natpmp/natmap_wrapper.cpp",
      "position" : null,
      "pull_request_review_id" : 221496163,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-19T17:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271172008",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift This is code copied from another project; unless we're going to submit improvements upstream, nits here are pointless.",
      "created_at" : "2019-04-02T08:09:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-478890599",
      "id" : 478890599,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3ODg5MDU5OQ==",
      "updated_at" : "2019-04-02T08:09:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478890599",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MishraShivendra Can you clarify which files/directories that are meant to be left as-is (with flaws reported upstream) and which files/directories that are not? :-)",
      "created_at" : "2019-04-02T08:16:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-478892784",
      "id" : 478892784,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3ODg5Mjc4NA==",
      "updated_at" : "2019-04-02T08:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478892784",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift It's literally in the PR description, and also obvious from the code (it's copyright someone else...)",
      "created_at" : "2019-04-02T08:20:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-478894087",
      "id" : 478894087,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3ODg5NDA4Nw==",
      "updated_at" : "2019-04-02T08:24:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478894087",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa The reason that I'm asking explicitly is that I noticed that some files added to this repo were not identical to the corresponding files in the repo that appears to be the upstream.\r\n\r\n@MishraShivendra What is the correct upstream repo the files were copied from?",
      "created_at" : "2019-04-02T08:47:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-478903368",
      "id" : 478903368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3ODkwMzM2OA==",
      "updated_at" : "2019-04-02T08:51:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478903368",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@practicalswift Thanks for reviewing the changes. Those files were taken from [here]( https://github.com/getlantern/libnatpmp). I've taken just the files needed. A few headers were merged together and useless code was removed. A few other error codes were also added. Please see diff between corresponding .c and .h files. Would push suggested changes in a while.\r\n\r\n> @practicalswift This is code copied from another project; unless we're going to submit improvements upstream, nits here are pointless.\r\n\r\n@sipa I think we can fix/modify based on our need. Those files are already way too customized for upstream.\r\n\r\n@dongcarl Removing license headers will lead to writing implementation of our own. Not sure if that would be a good idea. Any input? ",
      "created_at" : "2019-04-02T15:35:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-479055317",
      "id" : 479055317,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTA1NTMxNw==",
      "updated_at" : "2019-04-02T16:37:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479055317",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8533116?v=4",
         "events_url" : "https://api.github.com/users/MishraShivendra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MishraShivendra/followers",
         "following_url" : "https://api.github.com/users/MishraShivendra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MishraShivendra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MishraShivendra",
         "id" : 8533116,
         "login" : "MishraShivendra",
         "node_id" : "MDQ6VXNlcjg1MzMxMTY=",
         "organizations_url" : "https://api.github.com/users/MishraShivendra/orgs",
         "received_events_url" : "https://api.github.com/users/MishraShivendra/received_events",
         "repos_url" : "https://api.github.com/users/MishraShivendra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MishraShivendra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MishraShivendra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MishraShivendra"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "travis linter complains; either this needs the expected include guards, or to be excluded from the lints\r\n```\r\nsrc/natpmp/gateway.h seems to be missing the expected include guard:\r\n  #ifndef BITCOIN_NATPMP_GATEWAY_H\r\n  #define BITCOIN_NATPMP_GATEWAY_H\r\n  ...\r\n  #endif // BITCOIN_NATPMP_GATEWAY_H\r\nsrc/natpmp/natmap_wrapper.h seems to be missing the expected include guard:\r\n  #ifndef BITCOIN_NATPMP_NATMAP_WRAPPER_H\r\n  #define BITCOIN_NATPMP_NATMAP_WRAPPER_H\r\n  ...\r\n  #endif // BITCOIN_NATPMP_NATMAP_WRAPPER_H\r\nsrc/natpmp/natpmp.h seems to be missing the expected include guard:\r\n  #ifndef BITCOIN_NATPMP_NATPMP_H\r\n  #define BITCOIN_NATPMP_NATPMP_H\r\n  ...\r\n  #endif // BITCOIN_NATPMP_NATPMP_H\r\n^---- failure generated from test/lint/lint-include-guards.sh\r\n```\r\n\r\n> Remove the copyright notices (we're licensed MIT)\r\n\r\nI don't think this is allowed, at least the 3-clause BSD license has more restrictions than the MIT one.",
      "created_at" : "2019-04-02T16:54:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-479092169",
      "id" : 479092169,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTA5MjE2OQ==",
      "updated_at" : "2019-04-02T16:54:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479092169",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok, we discussed the license issue on IRC.\r\n\r\nThe conclusion was that it's probably best to mention the differing license for the files in `contrib/debian/copyright` (per file), so that people can see this in one glance without having to view the individual source files, but apart from that it's acceptable to include them. 3BSD versus MIT is close enough, and is not expected to cause problems.",
      "created_at" : "2019-04-02T17:07:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-479098246",
      "id" : 479098246,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTA5ODI0Ng==",
      "updated_at" : "2019-04-02T17:07:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479098246",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "~~Also, I believe the upstream is really [here](http://miniupnp.free.fr/files/), I'm not sure if there's a diff between what you copied and what's available upstream, so checking would be great!~~\r\n\r\nI was wrong, see comment here: https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-479113678",
      "created_at" : "2019-04-02T17:09:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-479099057",
      "id" : 479099057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTA5OTA1Nw==",
      "updated_at" : "2019-04-02T17:42:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479099057",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  I believe the upstream is really here\r\n\r\nThey link to https://github.com/miniupnp/miniupnp in their footer",
      "created_at" : "2019-04-02T17:23:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-479105453",
      "id" : 479105453,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTEwNTQ1Mw==",
      "updated_at" : "2019-04-02T17:23:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479105453",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm sorry about the confusion, https://github.com/miniupnp/libnatpmp is indeed the repo that's being updated.",
      "created_at" : "2019-04-02T17:41:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-479113678",
      "id" : 479113678,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTExMzY3OA==",
      "updated_at" : "2019-04-02T17:41:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479113678",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@MishraShivendra It seems that Travis is failing. Could you take a look at the errors there?\r\n\r\nAside from that, please rearrange your commits so they look something like this:\r\n1. A commit copying in the newest libnatpmp code\r\n2. A commit integrating libnatpmp with bitcoin's build system\r\n3. One or more commits integrating libnatpmp with bitcoin's codebase\r\n\r\nObviously there might be some mixing of 2 and 3, but at the very least 1 should be a separate commit.",
      "created_at" : "2019-04-09T18:32:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-481376732",
      "id" : 481376732,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTM3NjczMg==",
      "updated_at" : "2019-04-09T18:32:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481376732",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "There's no excuse to subtree this. It should be a normal shared library dependency.",
      "created_at" : "2019-04-09T19:02:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-481393239",
      "id" : 481393239,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTM5MzIzOQ==",
      "updated_at" : "2019-04-09T19:02:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481393239",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK in any case, thanks for picking this up.",
      "created_at" : "2019-04-10T14:03:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-481704481",
      "id" : 481704481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTcwNDQ4MQ==",
      "updated_at" : "2019-04-10T14:03:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481704481",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@dongcarl @laanwj Thanks for those input and clarification. \r\n\r\n> It seems that Travis is failing. Could you take a look at the errors there?\r\n\r\nChanges already in progress on a private branch. I'll push them shortly.\r\n\r\n> There's no excuse to subtree this. It should be a normal shared library dependency.\r\n\r\n@luke-jr \r\nI believe it was already discussed in #12288 . Not sure if we need a separate shared library for these changes.?  I'm including 2 files from libnatpmp though. \r\n",
      "created_at" : "2019-04-10T15:27:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-481738585",
      "id" : 481738585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTczODU4NQ==",
      "updated_at" : "2019-04-10T15:27:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481738585",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8533116?v=4",
         "events_url" : "https://api.github.com/users/MishraShivendra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MishraShivendra/followers",
         "following_url" : "https://api.github.com/users/MishraShivendra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MishraShivendra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MishraShivendra",
         "id" : 8533116,
         "login" : "MishraShivendra",
         "node_id" : "MDQ6VXNlcjg1MzMxMTY=",
         "organizations_url" : "https://api.github.com/users/MishraShivendra/orgs",
         "received_events_url" : "https://api.github.com/users/MishraShivendra/received_events",
         "repos_url" : "https://api.github.com/users/MishraShivendra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MishraShivendra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MishraShivendra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MishraShivendra"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "There is already a separate shared library.",
      "created_at" : "2019-04-10T15:55:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-481750400",
      "id" : 481750400,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTc1MDQwMA==",
      "updated_at" : "2019-04-10T15:55:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481750400",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@dongcarl \r\nTravis-ci build seems to be inconsistent. The above PR build seems to fail but mainline of my forked repo passes: [Travis-Ci-Master-Build](https://travis-ci.org/MishraShivendra/bitcoin/builds/519644709).\r\nCan someone please restart the PR build?\r\n\r\n@practicalswift The current commit includes most of the changes you suggested. Can you please take a look?\r\n\r\n@luke-jr Can you please point me to it. I couldn't find any place where we already build one. Did you mean upnp shared lib?",
      "created_at" : "2019-04-14T05:48:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-482921942",
      "id" : 482921942,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MjkyMTk0Mg==",
      "updated_at" : "2019-04-14T06:50:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482921942",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8533116?v=4",
         "events_url" : "https://api.github.com/users/MishraShivendra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MishraShivendra/followers",
         "following_url" : "https://api.github.com/users/MishraShivendra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MishraShivendra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MishraShivendra",
         "id" : 8533116,
         "login" : "MishraShivendra",
         "node_id" : "MDQ6VXNlcjg1MzMxMTY=",
         "organizations_url" : "https://api.github.com/users/MishraShivendra/orgs",
         "received_events_url" : "https://api.github.com/users/MishraShivendra/received_events",
         "repos_url" : "https://api.github.com/users/MishraShivendra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MishraShivendra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MishraShivendra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MishraShivendra"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MishraShivendra Sure! In light of previous comments -- do you want me to review all the files or just a subset? In the latter case, what subset? :-)",
      "created_at" : "2019-04-14T13:21:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-482975043",
      "id" : 482975043,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4Mjk3NTA0Mw==",
      "updated_at" : "2019-04-14T13:49:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482975043",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@practicalswift \r\nA quick look at everything, please.  \r\nTo shed some light on the changes:\r\n[These (first commit)](https://github.com/bitcoin/bitcoin/pull/15717/commits/5293339e4dddc84ca5a219e9b8ca4130b00ef1d8) are the file belong to libnatpmp and [this diff](https://gist.github.com/MishraShivendra/472143f3829cea1026e9fc1714586a85) shows the changes I've introduced in upstream. \r\n[Second commit](https://github.com/bitcoin/bitcoin/pull/15717/commits/0667cfc11b7c32e48f361d61031e1d53f121e119) introduces integration changes. [net.cpp](https://github.com/bitcoin/bitcoin/pull/15717/files#diff-9a82240fe7dfe86564178691cc57f2f1) includes changes to start/stop/renew the port mapping. RenewPortMapping() is a detached thread to periodically renew the port mapping. Feel free to raise any questions :)",
      "created_at" : "2019-04-14T15:38:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-483001218",
      "id" : 483001218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MzAwMTIxOA==",
      "updated_at" : "2019-04-16T13:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483001218",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8533116?v=4",
         "events_url" : "https://api.github.com/users/MishraShivendra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MishraShivendra/followers",
         "following_url" : "https://api.github.com/users/MishraShivendra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MishraShivendra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MishraShivendra",
         "id" : 8533116,
         "login" : "MishraShivendra",
         "node_id" : "MDQ6VXNlcjg1MzMxMTY=",
         "organizations_url" : "https://api.github.com/users/MishraShivendra/orgs",
         "received_events_url" : "https://api.github.com/users/MishraShivendra/received_events",
         "repos_url" : "https://api.github.com/users/MishraShivendra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MishraShivendra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MishraShivendra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MishraShivendra"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MishaShivendra It's installed with the user's OS.",
      "created_at" : "2019-04-14T19:40:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-483048670",
      "id" : 483048670,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MzA0ODY3MA==",
      "updated_at" : "2019-04-14T19:40:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483048670",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Can someone please take a look at these changes?",
      "created_at" : "2019-04-16T13:44:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-483665027",
      "id" : 483665027,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MzY2NTAyNw==",
      "updated_at" : "2019-04-16T13:44:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483665027",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8533116?v=4",
         "events_url" : "https://api.github.com/users/MishraShivendra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MishraShivendra/followers",
         "following_url" : "https://api.github.com/users/MishraShivendra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MishraShivendra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MishraShivendra",
         "id" : 8533116,
         "login" : "MishraShivendra",
         "node_id" : "MDQ6VXNlcjg1MzMxMTY=",
         "organizations_url" : "https://api.github.com/users/MishraShivendra/orgs",
         "received_events_url" : "https://api.github.com/users/MishraShivendra/received_events",
         "repos_url" : "https://api.github.com/users/MishraShivendra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MishraShivendra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MishraShivendra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MishraShivendra"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276089083"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276089083"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Consider using `using` instead of `typedef`.",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-17T05:58:55Z",
      "diff_hunk" : "@@ -66,6 +71,18 @@ enum BindFlags {\n     BF_WHITELIST    = (1U << 2),\n };\n \n+// NAT-PMP State\n+enum class NatPmpState {\n+    NONE,\n+    INITIALIZED,\n+    RECEIVED_PUBLIC_IP,\n+    MAPPED_PORT\n+};\n+typedef enum NatPmpState NatPmpStateType;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276089083",
      "id" : 276089083,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA4OTA4Mw==",
      "original_commit_id" : "0667cfc11b7c32e48f361d61031e1d53f121e119",
      "original_position" : 39,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 227561822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-19T17:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276089083",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276089880"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276089880"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Consider initialising `m_NatPmpObj` here or in the constructor. As the code is currently formulated `m_NatPmpObj` will remain uninitialised if the `InitNatPmp` call in the constructor fails.",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-17T06:03:04Z",
      "diff_hunk" : "@@ -0,0 +1,88 @@\n+#ifndef BITCOIN_NATPMP_INCLUDE_NATMAP_WRAPPER_H\n+#define BITCOIN_NATPMP_INCLUDE_NATMAP_WRAPPER_H\n+\n+#include <stdio.h>\n+#include <errno.h>\n+#include <string.h>\n+#if !defined(_MSC_VER)\n+#include <unistd.h>\n+#endif\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#include <arpa/inet.h>\n+#endif\n+#include <natpmp.h>\n+#include <string>\n+#include <iostream>\n+#include <logging.h>\n+typedef struct timeval TimeValType;\n+#if defined(_WIN32) || defined(_WIN64)\n+#include <ws2ipdef.h>\n+#include <ws2tcpip.h>\n+#endif\n+#include <array>\n+\n+enum class Protocol {\n+    UDP = 1,\n+    TCP\n+};\n+typedef enum Protocol ProtocolType;\n+\n+/// @brief Wrapper over libnatpmp functions\n+class NatMap\n+{\n+\n+private:\n+    natpmp_t m_NatPmpObj;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276089880",
      "id" : 276089880,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA4OTg4MA==",
      "original_commit_id" : "0667cfc11b7c32e48f361d61031e1d53f121e119",
      "original_position" : 38,
      "path" : "src/natpmp/include/natmap_wrapper.h",
      "position" : 36,
      "pull_request_review_id" : 227561822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-19T17:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276089880",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276089993"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276089993"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: `void` redundant.",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-17T06:03:33Z",
      "diff_hunk" : "@@ -0,0 +1,107 @@\n+#include <natmap_wrapper.h>\n+\n+NatMap::NatMap(in_addr_t* alternateGWAddr)\n+{\n+    in_addr_t gateway = {0};\n+    if(alternateGWAddr) {\n+        memcpy(&gateway, alternateGWAddr, sizeof(gateway));\n+    }\n+    m_State = InitNatPmp(&m_NatPmpObj,\n+                         alternateGWAddr?1:0,\n+                         gateway);\n+}\n+\n+int NatMap::IsGood(void) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276089993",
      "id" : 276089993,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA4OTk5Mw==",
      "original_commit_id" : "0667cfc11b7c32e48f361d61031e1d53f121e119",
      "original_position" : 14,
      "path" : "src/natpmp/natmap_wrapper.cpp",
      "position" : null,
      "pull_request_review_id" : 227561822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-19T17:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276089993",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276090632"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276090632"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Make sure parameter names match between definition and declaration.",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-17T06:06:50Z",
      "diff_hunk" : "@@ -0,0 +1,364 @@\n+#ifdef __linux__\n+#define _BSD_SOURCE 1\n+#endif\n+#include <string.h>\n+\n+#include <errno.h>\n+\n+#ifdef WIN32\n+#include <winsock2.h>\n+#include <ws2tcpip.h>\n+#include <io.h>\n+#ifndef EWOULDBLOCK\n+#define EWOULDBLOCK WSAEWOULDBLOCK\n+#endif\n+#ifndef ECONNREFUSED\n+#define ECONNREFUSED WSAECONNREFUSED\n+#endif\n+#ifdef WIN32\n+#if defined(_MSC_VER)\n+#include <time.h>\n+#else\n+#include <sys/time.h>\n+#endif\n+int gettimeofday(struct timeval* p, void* tz /* IGNORED */);\n+#endif\n+#else\n+#include <unistd.h>\n+#include <fcntl.h>\n+#include <sys/types.h>\n+#include <sys/socket.h>\n+#define closesocket close\n+#endif\n+#include <natpmp.h>\n+#include <gateway.h>\n+#include <stdio.h>\n+\n+#ifdef _MSC_VER\n+int gettimeofday(struct timeval* p, void* tz)\n+{\n+    union {\n+        long long ns100; /*time since 1 Jan 1601 in 100ns units */\n+        FILETIME ft;\n+    } _now;\n+\n+    if(!p)\n+        return -1;\n+    GetSystemTimeAsFileTime( &(_now.ft) );\n+    p->tv_usec =(long)((_now.ns100 / 10LL) % 1000000LL );\n+    p->tv_sec = (long)((_now.ns100-(116444736000000000LL))/10000000LL);\n+    return 0;\n+}\n+#endif\n+\n+int InitNatPmp(natpmp_t * p, int forcegw, in_addr_t forcedgw)\n+{\n+#ifdef WIN32\n+    u_long ioctlArg = 1;\n+#else\n+    int flags;\n+#endif\n+    if(!p)\n+        return NATPMP_ERR_INVALIDARGS;\n+    struct sockaddr_in addr;\n+    memset(p, 0, sizeof(natpmp_t));\n+    p->s = socket(PF_INET, SOCK_DGRAM, 0);\n+    if(p->s < 0)\n+        return NATPMP_ERR_SOCKETERROR;\n+#ifdef WIN32\n+    if(ioctlsocket(p->s, FIONBIO, &ioctlArg) == SOCKET_ERROR)\n+        return NATPMP_ERR_FCNTLERROR;\n+#else\n+    if((flags = fcntl(p->s, F_GETFL, 0)) < 0)\n+        return NATPMP_ERR_FCNTLERROR;\n+    if(fcntl(p->s, F_SETFL, flags | O_NONBLOCK) < 0)\n+        return NATPMP_ERR_FCNTLERROR;\n+#endif\n+\n+    if(forcegw) {\n+        p->gateway = forcedgw;\n+    } else {\n+        if(GetDefaultGateway(&(p->gateway)) < 0)\n+            return NATPMP_ERR_CANNOTGETGATEWAY;\n+    }\n+\n+    memset(&addr, 0, sizeof(addr));\n+    addr.sin_family = AF_INET;\n+    addr.sin_port = htons(NATPMP_PORT);\n+    addr.sin_addr.s_addr = p->gateway;\n+    if(connect(p->s, (struct sockaddr *)&addr, sizeof(addr)) < 0)\n+        return NATPMP_ERR_CONNECTERR;\n+    return 0;\n+}\n+\n+int CloseNatPmp(natpmp_t * p)\n+{\n+    if(!p)\n+        return NATPMP_ERR_INVALIDARGS;\n+    if(closesocket(p->s) < 0)\n+        return NATPMP_ERR_CLOSEERR;\n+    return 0;\n+}\n+\n+int sendpendingrequest(natpmp_t * p)\n+{\n+    if(!p)\n+        return NATPMP_ERR_INVALIDARGS;\n+#ifdef __linux__\n+    int r = (int)send(p->s, p->pending_request, p->pending_request_len, 0);\n+#else\n+    int r = (int)send(p->s, (const char*)p->pending_request, p->pending_request_len, 0);\n+#endif\n+\n+    return (r<0) ? NATPMP_ERR_SENDERR : r;\n+}\n+\n+int SendNatPmpRequest(natpmp_t * p)\n+{\n+    if(!p)\n+        return NATPMP_ERR_INVALIDARGS;\n+    p->has_pending_request = 1;\n+    p->try_number = 1;\n+    int n = sendpendingrequest(p);\n+    gettimeofday(&p->retry_time, nullptr);\n+    p->retry_time.tv_usec += 250000;\n+    if(p->retry_time.tv_usec >= 1000000) {\n+        p->retry_time.tv_usec -= 1000000;\n+        p->retry_time.tv_sec++;\n+    }\n+    return n;\n+}\n+\n+int GetNatPmpRequestTimeout(natpmp_t * p, struct timeval * timeout)\n+{\n+    if(!p || !timeout)\n+        return NATPMP_ERR_INVALIDARGS;\n+    if(!p->has_pending_request)\n+        return NATPMP_ERR_NOPENDINGREQ;\n+    struct timeval now;\n+    memset(&now, 0, sizeof(now));\n+    if(gettimeofday(&now, nullptr) < 0)\n+        return NATPMP_ERR_GETTIMEOFDAYERR;\n+    timeout->tv_sec = p->retry_time.tv_sec - now.tv_sec;\n+    timeout->tv_usec = p->retry_time.tv_usec - now.tv_usec;\n+    if(timeout->tv_usec < 0) {\n+        timeout->tv_usec += 1000000;\n+        timeout->tv_sec--;\n+    }\n+    return 0;\n+}\n+\n+int SendPublicAddressRequest(natpmp_t * p)\n+{\n+    if(!p)\n+        return NATPMP_ERR_INVALIDARGS;\n+    p->pending_request[0] = 0;\n+    p->pending_request[1] = 0;\n+    p->pending_request_len = 2;\n+    return SendNatPmpRequest(p);\n+}\n+\n+int SendNewPortMappingRequest(natpmp_t * p, int protocol, int16_t privateport,\n+                  int16_t publicport, int64_t lifetime)\n+{\n+    if(!p || (protocol!=NATPMP_PROTOCOL_TCP && protocol!=NATPMP_PROTOCOL_UDP))\n+        return NATPMP_ERR_INVALIDARGS;\n+    p->pending_request[0] = 0;\n+    p->pending_request[1] = protocol;\n+    p->pending_request[2] = 0;\n+    p->pending_request[3] = 0;\n+    p->pending_request[4] = (privateport >> 8) & 0xff;\n+    p->pending_request[5] = privateport & 0xff;\n+    p->pending_request[6] = (publicport >> 8) & 0xff;\n+    p->pending_request[7] = publicport & 0xff;\n+    p->pending_request[8] = (lifetime >> 24) & 0xff;\n+    p->pending_request[9] = (lifetime >> 16) & 0xff;\n+    p->pending_request[10] = (lifetime >> 8) & 0xff;\n+    p->pending_request[11] = lifetime & 0xff;\n+    p->pending_request_len = 12;\n+    return SendNatPmpRequest(p);\n+}\n+\n+int ReadNatPmpResponse(natpmp_t * p, natpmpresp_t * response)\n+{\n+    unsigned char buf[16] = {0};\n+    struct sockaddr_in addr;\n+    memset(&addr, 0, sizeof(addr));\n+    socklen_t addrlen = sizeof(addr);\n+    int n;\n+    if(!p)\n+        return NATPMP_ERR_INVALIDARGS;\n+#ifdef __linux__\n+    n = recvfrom(p->s, buf, sizeof(buf), 0,\n+                 (struct sockaddr *)&addr, &addrlen);\n+#else\n+    n = recvfrom(p->s, (char*)buf, sizeof(buf), 0,\n+                 (struct sockaddr *)&addr, &addrlen);\n+#endif\n+\n+    if(n<0) {\n+#ifdef WIN32\n+        switch(WSAGetLastError()) {\n+#else\n+        switch(errno) {\n+#endif\n+            /*case EAGAIN:*/\n+            case EWOULDBLOCK:\n+                n = NATPMP_TRYAGAIN;\n+                break;\n+            case ECONNREFUSED:\n+                n = NATPMP_ERR_NOGATEWAYSUPPORT;\n+                break;\n+            default:\n+                n = NATPMP_ERR_RECVFROM;\n+        }\n+    /* check that addr is correct (= gateway) */\n+    }else if(addr.sin_addr.s_addr != p->gateway) {\n+        n = NATPMP_ERR_WRONGPACKETSOURCE;\n+    }else {\n+        response->resultcode = ntohs(*((int16_t *)(buf + 2)));\n+        response->epoch = ntohl(*((int64_t *)(buf + 4)));\n+        if(buf[0] != 0)\n+            n = NATPMP_ERR_UNSUPPORTEDVERSION;\n+        else if(buf[1] < 128 || buf[1] > 130)\n+            n = NATPMP_ERR_UNSUPPORTEDOPCODE;\n+        else if(response->resultcode != 0) {\n+            switch(response->resultcode) {\n+            case 1:\n+                n = NATPMP_ERR_UNSUPPORTEDVERSION;\n+                break;\n+            case 2:\n+                n = NATPMP_ERR_NOTAUTHORIZED;\n+                break;\n+            case 3:\n+                n = NATPMP_ERR_NETWORKFAILURE;\n+                break;\n+            case 4:\n+                n = NATPMP_ERR_OUTOFRESOURCES;\n+                break;\n+            case 5:\n+                n = NATPMP_ERR_UNSUPPORTEDOPCODE;\n+                break;\n+            default:\n+                n = NATPMP_ERR_UNDEFINEDERROR;\n+            }\n+        } else {\n+            response->type = buf[1] & 0x7f;\n+            if(buf[1] == 128) {\n+                response->pnu.publicaddress.addr.s_addr = *((int64_t *)(buf + 8));\n+            }else {\n+                response->pnu.newportmapping.privateport = ntohs(*((int16_t *)(buf + 8)));\n+                response->pnu.newportmapping.mappedpublicport = ntohs(*((int16_t *)(buf + 10)));\n+                response->pnu.newportmapping.lifetime = ntohl(*((int64_t *)(buf + 12)));\n+            }\n+            n = 0;\n+        }\n+    }\n+    return n;\n+}\n+\n+int ReadNatPmpResponseOrRetry(natpmp_t * p, natpmpresp_t * response)\n+{\n+    if(!p || !response)\n+        return NATPMP_ERR_INVALIDARGS;\n+    if(!p->has_pending_request)\n+        return NATPMP_ERR_NOPENDINGREQ;\n+    int n = ReadNatPmpResponse(p, response);\n+    if(n<0) {\n+        if(n==NATPMP_TRYAGAIN) {\n+            struct timeval now;\n+            gettimeofday(&now, nullptr);\n+            if(timercmp(&now, &p->retry_time, >=)) {\n+                int delay, r;\n+                if(p->try_number >= 9) {\n+                    return NATPMP_ERR_NOGATEWAYSUPPORT;\n+                }\n+                delay = 250 * (1<<p->try_number);\n+                p->retry_time.tv_sec += (delay / 1000);\n+                p->retry_time.tv_usec += (delay % 1000) * 1000;\n+                if(p->retry_time.tv_usec >= 1000000) {\n+                    p->retry_time.tv_usec -= 1000000;\n+                    p->retry_time.tv_sec++;\n+                }\n+                p->try_number++;\n+                r = sendpendingrequest(p);\n+                if(r<0)\n+                    return r;\n+            }\n+        }\n+    } else {\n+        p->has_pending_request = 0;\n+    }\n+    return n;\n+}\n+\n+const char * StrNatPmpErr(int r)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276090632",
      "id" : 276090632,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA5MDYzMg==",
      "original_commit_id" : "0667cfc11b7c32e48f361d61031e1d53f121e119",
      "original_position" : 295,
      "path" : "src/natpmp/natpmp.cpp",
      "position" : null,
      "pull_request_review_id" : 227561822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-19T17:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276090632",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276091039"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276091039"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Move this down to first use to make it clear that it is zeroed before use?",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-17T06:09:00Z",
      "diff_hunk" : "@@ -0,0 +1,364 @@\n+#ifdef __linux__\n+#define _BSD_SOURCE 1\n+#endif\n+#include <string.h>\n+\n+#include <errno.h>\n+\n+#ifdef WIN32\n+#include <winsock2.h>\n+#include <ws2tcpip.h>\n+#include <io.h>\n+#ifndef EWOULDBLOCK\n+#define EWOULDBLOCK WSAEWOULDBLOCK\n+#endif\n+#ifndef ECONNREFUSED\n+#define ECONNREFUSED WSAECONNREFUSED\n+#endif\n+#ifdef WIN32\n+#if defined(_MSC_VER)\n+#include <time.h>\n+#else\n+#include <sys/time.h>\n+#endif\n+int gettimeofday(struct timeval* p, void* tz /* IGNORED */);\n+#endif\n+#else\n+#include <unistd.h>\n+#include <fcntl.h>\n+#include <sys/types.h>\n+#include <sys/socket.h>\n+#define closesocket close\n+#endif\n+#include <natpmp.h>\n+#include <gateway.h>\n+#include <stdio.h>\n+\n+#ifdef _MSC_VER\n+int gettimeofday(struct timeval* p, void* tz)\n+{\n+    union {\n+        long long ns100; /*time since 1 Jan 1601 in 100ns units */\n+        FILETIME ft;\n+    } _now;\n+\n+    if(!p)\n+        return -1;\n+    GetSystemTimeAsFileTime( &(_now.ft) );\n+    p->tv_usec =(long)((_now.ns100 / 10LL) % 1000000LL );\n+    p->tv_sec = (long)((_now.ns100-(116444736000000000LL))/10000000LL);\n+    return 0;\n+}\n+#endif\n+\n+int InitNatPmp(natpmp_t * p, int forcegw, in_addr_t forcedgw)\n+{\n+#ifdef WIN32\n+    u_long ioctlArg = 1;\n+#else\n+    int flags;\n+#endif\n+    if(!p)\n+        return NATPMP_ERR_INVALIDARGS;\n+    struct sockaddr_in addr;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276091039",
      "id" : 276091039,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA5MTAzOQ==",
      "original_commit_id" : "0667cfc11b7c32e48f361d61031e1d53f121e119",
      "original_position" : 63,
      "path" : "src/natpmp/natpmp.cpp",
      "position" : null,
      "pull_request_review_id" : 227561822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-19T17:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276091039",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276093339"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276093339"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Constructor should be `explicit` :-)",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-17T06:21:11Z",
      "diff_hunk" : "@@ -0,0 +1,88 @@\n+#ifndef BITCOIN_NATPMP_INCLUDE_NATMAP_WRAPPER_H\n+#define BITCOIN_NATPMP_INCLUDE_NATMAP_WRAPPER_H\n+\n+#include <stdio.h>\n+#include <errno.h>\n+#include <string.h>\n+#if !defined(_MSC_VER)\n+#include <unistd.h>\n+#endif\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#include <arpa/inet.h>\n+#endif\n+#include <natpmp.h>\n+#include <string>\n+#include <iostream>\n+#include <logging.h>\n+typedef struct timeval TimeValType;\n+#if defined(_WIN32) || defined(_WIN64)\n+#include <ws2ipdef.h>\n+#include <ws2tcpip.h>\n+#endif\n+#include <array>\n+\n+enum class Protocol {\n+    UDP = 1,\n+    TCP\n+};\n+typedef enum Protocol ProtocolType;\n+\n+/// @brief Wrapper over libnatpmp functions\n+class NatMap\n+{\n+\n+private:\n+    natpmp_t m_NatPmpObj;\n+    int m_State;\n+\n+public:\n+    /// @brief Constructor\n+    ///\n+    /// @param alternateGWAddr Pass a known gateway if default not to be used.\n+    NatMap(in_addr_t* alternateGWAddr = nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276093339",
      "id" : 276093339,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA5MzMzOQ==",
      "original_commit_id" : "0667cfc11b7c32e48f361d61031e1d53f121e119",
      "original_position" : 45,
      "path" : "src/natpmp/include/natmap_wrapper.h",
      "position" : null,
      "pull_request_review_id" : 227561822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-19T17:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276093339",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276095085"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276095085"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be \"DhcpDefaultGateway\" :-)",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-17T06:28:42Z",
      "diff_hunk" : "@@ -0,0 +1,548 @@\n+#include <stdio.h>\n+#include <ctype.h>\n+#ifndef WIN32\n+#include <netinet/in.h>\n+#endif\n+#if !defined(_MSC_VER)\n+#include <sys/param.h>\n+#endif\n+#ifdef __linux__\n+#define USE_PROC_NET_ROUTE\n+#undef USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+#endif\n+\n+#if defined(BSD) || defined(__FreeBSD_kernel__)\n+#undef USE_PROC_NET_ROUTE\n+#define USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+#endif\n+\n+#ifdef __APPLE__\n+#undef USE_PROC_NET_ROUTE\n+#undef USE_SOCKET_ROUTE\n+#define USE_SYSCTL_NET_ROUTE\n+#endif\n+\n+#if (defined(sun) && defined(__SVR4))\n+#undef USE_PROC_NET_ROUTE\n+#define USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+#endif\n+\n+#ifdef WIN32\n+#undef USE_PROC_NET_ROUTE\n+#undef USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+//#define USE_WIN32_CODE\n+#define USE_WIN32_CODE_2\n+#endif\n+\n+#ifdef __CYGWIN__\n+#undef USE_PROC_NET_ROUTE\n+#undef USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+#define USE_WIN32_CODE\n+#include <stdarg.h>\n+#include <w32api/windef.h>\n+#include <w32api/winbase.h>\n+#include <w32api/winreg.h>\n+#endif\n+\n+#ifdef __HAIKU__\n+#include <sys/sockio.h>\n+#define USE_HAIKU_CODE\n+#endif\n+\n+#ifdef USE_SYSCTL_NET_ROUTE\n+#include <sys/sysctl.h>\n+#endif\n+\n+#ifdef USE_SOCKET_ROUTE\n+#include <string.h>\n+#endif\n+\n+#if defined(USE_SOCKET_ROUTE) || defined(__HAIKU__)\n+#include <unistd.h>\n+#include <net/if.h>\n+#endif\n+\n+#if defined(USE_SYSCTL_NET_ROUTE) || defined(__HAIKU__)\n+#include <stdlib.h>\n+#endif\n+\n+#if defined(USE_SOCKET_ROUTE) || defined(USE_SYSCTL_NET_ROUTE)\n+#include <sys/socket.h>\n+#include <net/route.h>\n+#endif\n+\n+#ifdef USE_WIN32_CODE\n+#include <unknwn.h>\n+#include <winreg.h>\n+#define MAX_KEY_LENGTH 255\n+#define MAX_VALUE_LENGTH 16383\n+#endif\n+\n+#ifdef USE_WIN32_CODE_2\n+#include <windows.h>\n+#include <iphlpapi.h>\n+#endif\n+#include <gateway.h>\n+#ifndef WIN32\n+#define SUCCESS (0)\n+#define FAILED  (-1)\n+#endif\n+#ifdef USE_PROC_NET_ROUTE\n+#include <sstream>\n+#include <list>\n+#include <algorithm>\n+/*\n+ * There is no portable method to get the default route gateway.\n+ * So below are four (or five ?) different functions implementing this.\n+ * Parsing /proc/net/route is for Linux.\n+ * sysctl is the way to access such information on BSD systems.\n+ * Many systems should provide route information through raw PF_ROUTE\n+ * sockets.\n+ * In MS Windows, default gateway is found by looking into the registry\n+ * or by using GetBestRoute().\n+ *\n+ */\n+\n+/*\n+ parse /proc/net/route which is as follow :\n+\n+Iface   Destination     Gateway         Flags   RefCnt  Use     Metric  Mask            MTU     Window  IRTT\n+wlan0   0001A8C0        00000000        0001    0       0       0       00FFFFFF        0       0       0\n+eth0    0000FEA9        00000000        0001    0       0       0       0000FFFF        0       0       0\n+wlan0   00000000        0101A8C0        0003    0       0       0       00000000        0       0       0\n+eth0    00000000        00000000        0001    0       0       1000    00000000        0       0       0\n+\n+ One header line, and then one line by route by route table entry.\n+*/\n+\n+int TestIfWhiteSpace(char character)\n+{\n+    std::list<char> whiteSpaces = {'\\f', '\\n', '\\r', '\\t', '\\v'};\n+    return std::count(whiteSpaces.begin(), whiteSpaces.end(), character);\n+}\n+\n+int GetDefaultGateway(in_addr_t * addr)\n+{\n+        int64_t d = 0;\n+        int64_t g = 0;\n+        char buf[256] = {0};\n+        int line = 0;\n+        char * p = nullptr;\n+        FILE* f = fopen(\"/proc/net/route\", \"r\");\n+        if(!f)\n+                return FAILED;\n+        while(fgets(buf, sizeof(buf), f)) {\n+                if(line > 0) {  /* skip the first line */\n+                        p = buf;\n+                        /* skip the interface name */\n+                        while(*p && !TestIfWhiteSpace(*p))\n+                                p++;\n+                        while(*p && TestIfWhiteSpace(*p))\n+                                p++;\n+            // Want just the gateway column\n+                        std::string data(p);\n+            data = data.substr(data.find('\\t')+1);\n+            data = data.substr(0, data.find('\\t'));\n+\n+                        std::stringstream dataParser;\n+            dataParser<<std::hex<<data;\n+                        dataParser >> g >> d;\n+            if(d == 0 && g != 0) {\n+                                *addr = (in_addr_t)g;\n+                                fclose(f);\n+                                return SUCCESS;\n+                        }\n+                }\n+                line++;\n+        }\n+        /* default route not found ! */\n+        if(f)\n+                fclose(f);\n+        return FAILED;\n+}\n+#endif /* #ifdef USE_PROC_NET_ROUTE */\n+\n+\n+#ifdef USE_SYSCTL_NET_ROUTE\n+\n+#define ROUNDUP(a) \\\n+    ((a) > 0 ? (1 + (((a) - 1) | (sizeof(long) - 1))) : sizeof(long))\n+\n+int GetDefaultGateway(in_addr_t * addr)\n+{\n+    /* net.route.0.inet.flags.gateway */\n+    int mib[] = {CTL_NET, PF_ROUTE, 0, AF_INET,\n+                 NET_RT_FLAGS, RTF_GATEWAY};\n+    size_t l = 0;\n+    char* buf = nullptr;\n+    char* p = nullptr;\n+    struct rt_msghdr * rt = {0};\n+    struct sockaddr * sa = {0};\n+    struct sockaddr * sa_tab[RTAX_MAX];\n+    int i = 0;\n+    int r = FAILED;\n+    if(sysctl(mib, sizeof(mib)/sizeof(int), 0, &l, 0, 0) < 0) {\n+        return FAILED;\n+    }\n+    if(l>0) {\n+        buf = (char*)malloc(l);\n+        if(sysctl(mib, sizeof(mib)/sizeof(int), buf, &l, 0, 0) < 0) {\n+            free(buf);\n+            return FAILED;\n+        }\n+        for(p=buf; p<buf+l; p+=rt->rtm_msglen) {\n+            rt = (struct rt_msghdr *)p;\n+            sa = (struct sockaddr *)(rt + 1);\n+            for(i=0; i<RTAX_MAX; i++) {\n+                if(rt->rtm_addrs & (1 << i)) {\n+                    sa_tab[i] = sa;\n+                    sa = (struct sockaddr *)((char *)sa + ROUNDUP(sa->sa_len));\n+                } else {\n+                    sa_tab[i] = nullptr;\n+                }\n+            }\n+            if( ((rt->rtm_addrs & (RTA_DST|RTA_GATEWAY)) == (RTA_DST|RTA_GATEWAY))\n+              && sa_tab[RTAX_DST]->sa_family == AF_INET\n+              && sa_tab[RTAX_GATEWAY]->sa_family == AF_INET) {\n+                if(((struct sockaddr_in *)sa_tab[RTAX_DST])->sin_addr.s_addr == 0) {\n+                    *addr = ((struct sockaddr_in *)(sa_tab[RTAX_GATEWAY]))->sin_addr.s_addr;\n+                    r = SUCCESS;\n+                }\n+            }\n+        }\n+        free(buf);\n+    }\n+    return r;\n+}\n+#endif\n+\n+\n+#ifdef USE_SOCKET_ROUTE\n+/* Thanks to Darren Kenny for this code */\n+#define NEXTADDR(w, u) \\\n+        if (rtm_addrs & (w)) {\\\n+            l = sizeof(struct sockaddr); memmove(cp, &(u), l); cp += l;\\\n+        }\n+\n+#define rtm m_rtmsg.m_rtm\n+\n+struct {\n+  struct rt_msghdr m_rtm;\n+  char       m_space[512];\n+} m_rtmsg;\n+\n+int GetDefaultGateway(in_addr_t *addr)\n+{\n+  int s = 0, seq = 0, l = 0, rtm_addrs = 0, i = 0;\n+  pid_t pid = {0};\n+  struct sockaddr so_dst = {0}, so_mask = {0};\n+  char *cp = m_rtmsg.m_space;\n+  struct sockaddr *gate = nullptr, *sa = nullptr;\n+  struct rt_msghdr *msg_hdr = nullptr;\n+\n+  pid = getpid();\n+  seq = 0;\n+  rtm_addrs = RTA_DST | RTA_NETMASK;\n+\n+  memset(&so_dst, 0, sizeof(so_dst));\n+  memset(&so_mask, 0, sizeof(so_mask));\n+  memset(&rtm, 0, sizeof(struct rt_msghdr));\n+\n+  rtm.rtm_type = RTM_GET;\n+  rtm.rtm_flags = RTF_UP | RTF_GATEWAY;\n+  rtm.rtm_version = RTM_VERSION;\n+  rtm.rtm_seq = ++seq;\n+  rtm.rtm_addrs = rtm_addrs;\n+\n+  so_dst.sa_family = AF_INET;\n+  so_mask.sa_family = AF_INET;\n+\n+  NEXTADDR(RTA_DST, so_dst);\n+  NEXTADDR(RTA_NETMASK, so_mask);\n+\n+  rtm.rtm_msglen = l = cp - (char *)&m_rtmsg;\n+\n+  s = socket(PF_ROUTE, SOCK_RAW, 0);\n+\n+  if (write(s, (char *)&m_rtmsg, l) < 0) {\n+      close(s);\n+      return FAILED;\n+  }\n+\n+  do {\n+    l = read(s, (char *)&m_rtmsg, sizeof(m_rtmsg));\n+  } while (l > 0 && (rtm.rtm_seq != seq || rtm.rtm_pid != pid));\n+\n+  close(s);\n+\n+  msg_hdr = &rtm;\n+\n+  cp = ((char *)(msg_hdr + 1));\n+  if (msg_hdr->rtm_addrs) {\n+    for (i = 1; i; i <<= 1)\n+      if (i & msg_hdr->rtm_addrs) {\n+        sa = (struct sockaddr *)cp;\n+        if (i == RTA_GATEWAY )\n+          gate = sa;\n+\n+        cp += sizeof(struct sockaddr);\n+      }\n+  } else {\n+      return FAILED;\n+  }\n+\n+\n+  if (gate != nullptr ) {\n+      *addr = ((struct sockaddr_in *)gate)->sin_addr.s_addr;\n+      return SUCCESS;\n+  } else {\n+      return FAILED;\n+  }\n+}\n+#endif /* #ifdef USE_SOCKET_ROUTE */\n+\n+#ifdef USE_WIN32_CODE\n+LIBSPEC int GetDefaultGateway(in_addr_t * addr)\n+{\n+    HKEY networkCardsKey;\n+    HKEY networkCardKey;\n+    HKEY interfacesKey;\n+    HKEY interfaceKey;\n+    DWORD i = 0;\n+    DWORD numSubKeys = 0;\n+    TCHAR keyName[MAX_KEY_LENGTH];\n+    DWORD keyNameLength = MAX_KEY_LENGTH;\n+    TCHAR keyValue[MAX_VALUE_LENGTH];\n+    DWORD keyValueLength = MAX_VALUE_LENGTH;\n+    DWORD keyValueType = REG_SZ;\n+    TCHAR gatewayValue[MAX_VALUE_LENGTH];\n+    DWORD gatewayValueLength = MAX_VALUE_LENGTH;\n+    DWORD gatewayValueType = REG_MULTI_SZ;\n+    int done = 0;\n+\n+#ifdef UNICODE\n+    LPCTSTR networkCardsPath = L\"SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\NetworkCards\";\n+    LPCTSTR interfacesPath = L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip\\\\Parameters\\\\Interfaces\";\n+#define STR_SERVICENAME     L\"ServiceName\"\n+#define STR_DHCPDEFAULTGATEWAY L\"DhcpDefaultGateway\"\n+#define STR_DEFAULTGATEWAY    L\"DefaultGateway\"\n+#else\n+    LPCTSTR networkCardsPath = \"SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\NetworkCards\";\n+    LPCTSTR interfacesPath = \"SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip\\\\Parameters\\\\Interfaces\";\n+#define STR_SERVICENAME     \"ServiceName\"\n+#define STR_DHCPDEFAULTGATEWAY \"DhcpDefaultGateway\"\n+#define STR_DEFAULTGATEWAY    \"DefaultGateway\"\n+#endif\n+    // The windows registry lists its primary network devices in the following location:\n+    // HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\NetworkCards\n+    //\n+    // Each network device has its own subfolder, named with an index, with various properties:\n+    // -NetworkCards\n+    //   -5\n+    //     -Description = Broadcom 802.11n Network Adapter\n+    //     -ServiceName = {E35A72F8-5065-4097-8DFE-C7790774EE4D}\n+    //   -8\n+    //     -Description = Marvell Yukon 88E8058 PCI-E Gigabit Ethernet Controller\n+    //     -ServiceName = {86226414-5545-4335-A9D1-5BD7120119AD}\n+    //\n+    // The above service name is the name of a subfolder within:\n+    // HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters\\Interfaces\n+    //\n+    // There may be more subfolders in this interfaces path than listed in the network cards path above:\n+    // -Interfaces\n+    //   -{3a539854-6a70-11db-887c-806e6f6e6963}\n+    //     -DhcpIPAddress = 0.0.0.0\n+    //     -[more]\n+    //   -{E35A72F8-5065-4097-8DFE-C7790774EE4D}\n+    //     -DhcpIPAddress = 10.0.1.4\n+    //     -DhcpDefaultGateway = 10.0.1.1\n+    //     -[more]\n+    //   -{86226414-5545-4335-A9D1-5BD7120119AD}\n+    //     -DhcpIpAddress = 10.0.1.5\n+    //     -DhcpDefaultGateay = 10.0.1.1",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276095085",
      "id" : 276095085,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA5NTA4NQ==",
      "original_commit_id" : "0667cfc11b7c32e48f361d61031e1d53f121e119",
      "original_position" : 367,
      "path" : "src/natpmp/gateway.cpp",
      "position" : null,
      "pull_request_review_id" : 227561822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-19T17:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276095085",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276095957"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276095957"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In parts of this PR the return value of `gettimeofday` is checked and in some parts it is not. Consider doing it consistently throughout this PR: either the assumption is that it can fail or the assumption is that it cannot :-)",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-17T06:32:25Z",
      "diff_hunk" : "@@ -0,0 +1,364 @@\n+#ifdef __linux__\n+#define _BSD_SOURCE 1\n+#endif\n+#include <string.h>\n+\n+#include <errno.h>\n+\n+#ifdef WIN32\n+#include <winsock2.h>\n+#include <ws2tcpip.h>\n+#include <io.h>\n+#ifndef EWOULDBLOCK\n+#define EWOULDBLOCK WSAEWOULDBLOCK\n+#endif\n+#ifndef ECONNREFUSED\n+#define ECONNREFUSED WSAECONNREFUSED\n+#endif\n+#ifdef WIN32\n+#if defined(_MSC_VER)\n+#include <time.h>\n+#else\n+#include <sys/time.h>\n+#endif\n+int gettimeofday(struct timeval* p, void* tz /* IGNORED */);\n+#endif\n+#else\n+#include <unistd.h>\n+#include <fcntl.h>\n+#include <sys/types.h>\n+#include <sys/socket.h>\n+#define closesocket close\n+#endif\n+#include <natpmp.h>\n+#include <gateway.h>\n+#include <stdio.h>\n+\n+#ifdef _MSC_VER\n+int gettimeofday(struct timeval* p, void* tz)\n+{\n+    union {\n+        long long ns100; /*time since 1 Jan 1601 in 100ns units */\n+        FILETIME ft;\n+    } _now;\n+\n+    if(!p)\n+        return -1;\n+    GetSystemTimeAsFileTime( &(_now.ft) );\n+    p->tv_usec =(long)((_now.ns100 / 10LL) % 1000000LL );\n+    p->tv_sec = (long)((_now.ns100-(116444736000000000LL))/10000000LL);\n+    return 0;\n+}\n+#endif\n+\n+int InitNatPmp(natpmp_t * p, int forcegw, in_addr_t forcedgw)\n+{\n+#ifdef WIN32\n+    u_long ioctlArg = 1;\n+#else\n+    int flags;\n+#endif\n+    if(!p)\n+        return NATPMP_ERR_INVALIDARGS;\n+    struct sockaddr_in addr;\n+    memset(p, 0, sizeof(natpmp_t));\n+    p->s = socket(PF_INET, SOCK_DGRAM, 0);\n+    if(p->s < 0)\n+        return NATPMP_ERR_SOCKETERROR;\n+#ifdef WIN32\n+    if(ioctlsocket(p->s, FIONBIO, &ioctlArg) == SOCKET_ERROR)\n+        return NATPMP_ERR_FCNTLERROR;\n+#else\n+    if((flags = fcntl(p->s, F_GETFL, 0)) < 0)\n+        return NATPMP_ERR_FCNTLERROR;\n+    if(fcntl(p->s, F_SETFL, flags | O_NONBLOCK) < 0)\n+        return NATPMP_ERR_FCNTLERROR;\n+#endif\n+\n+    if(forcegw) {\n+        p->gateway = forcedgw;\n+    } else {\n+        if(GetDefaultGateway(&(p->gateway)) < 0)\n+            return NATPMP_ERR_CANNOTGETGATEWAY;\n+    }\n+\n+    memset(&addr, 0, sizeof(addr));\n+    addr.sin_family = AF_INET;\n+    addr.sin_port = htons(NATPMP_PORT);\n+    addr.sin_addr.s_addr = p->gateway;\n+    if(connect(p->s, (struct sockaddr *)&addr, sizeof(addr)) < 0)\n+        return NATPMP_ERR_CONNECTERR;\n+    return 0;\n+}\n+\n+int CloseNatPmp(natpmp_t * p)\n+{\n+    if(!p)\n+        return NATPMP_ERR_INVALIDARGS;\n+    if(closesocket(p->s) < 0)\n+        return NATPMP_ERR_CLOSEERR;\n+    return 0;\n+}\n+\n+int sendpendingrequest(natpmp_t * p)\n+{\n+    if(!p)\n+        return NATPMP_ERR_INVALIDARGS;\n+#ifdef __linux__\n+    int r = (int)send(p->s, p->pending_request, p->pending_request_len, 0);\n+#else\n+    int r = (int)send(p->s, (const char*)p->pending_request, p->pending_request_len, 0);\n+#endif\n+\n+    return (r<0) ? NATPMP_ERR_SENDERR : r;\n+}\n+\n+int SendNatPmpRequest(natpmp_t * p)\n+{\n+    if(!p)\n+        return NATPMP_ERR_INVALIDARGS;\n+    p->has_pending_request = 1;\n+    p->try_number = 1;\n+    int n = sendpendingrequest(p);\n+    gettimeofday(&p->retry_time, nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276095957",
      "id" : 276095957,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjA5NTk1Nw==",
      "original_commit_id" : "0667cfc11b7c32e48f361d61031e1d53f121e119",
      "original_position" : 123,
      "path" : "src/natpmp/natpmp.cpp",
      "position" : null,
      "pull_request_review_id" : 227561822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-19T17:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276095957",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276105622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276105622"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Take a look at how this is handled in `IsSpace(char c)` (`strencodings.h`).",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-17T07:10:15Z",
      "diff_hunk" : "@@ -0,0 +1,548 @@\n+#include <stdio.h>\n+#include <ctype.h>\n+#ifndef WIN32\n+#include <netinet/in.h>\n+#endif\n+#if !defined(_MSC_VER)\n+#include <sys/param.h>\n+#endif\n+#ifdef __linux__\n+#define USE_PROC_NET_ROUTE\n+#undef USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+#endif\n+\n+#if defined(BSD) || defined(__FreeBSD_kernel__)\n+#undef USE_PROC_NET_ROUTE\n+#define USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+#endif\n+\n+#ifdef __APPLE__\n+#undef USE_PROC_NET_ROUTE\n+#undef USE_SOCKET_ROUTE\n+#define USE_SYSCTL_NET_ROUTE\n+#endif\n+\n+#if (defined(sun) && defined(__SVR4))\n+#undef USE_PROC_NET_ROUTE\n+#define USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+#endif\n+\n+#ifdef WIN32\n+#undef USE_PROC_NET_ROUTE\n+#undef USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+//#define USE_WIN32_CODE\n+#define USE_WIN32_CODE_2\n+#endif\n+\n+#ifdef __CYGWIN__\n+#undef USE_PROC_NET_ROUTE\n+#undef USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+#define USE_WIN32_CODE\n+#include <stdarg.h>\n+#include <w32api/windef.h>\n+#include <w32api/winbase.h>\n+#include <w32api/winreg.h>\n+#endif\n+\n+#ifdef __HAIKU__\n+#include <sys/sockio.h>\n+#define USE_HAIKU_CODE\n+#endif\n+\n+#ifdef USE_SYSCTL_NET_ROUTE\n+#include <sys/sysctl.h>\n+#endif\n+\n+#ifdef USE_SOCKET_ROUTE\n+#include <string.h>\n+#endif\n+\n+#if defined(USE_SOCKET_ROUTE) || defined(__HAIKU__)\n+#include <unistd.h>\n+#include <net/if.h>\n+#endif\n+\n+#if defined(USE_SYSCTL_NET_ROUTE) || defined(__HAIKU__)\n+#include <stdlib.h>\n+#endif\n+\n+#if defined(USE_SOCKET_ROUTE) || defined(USE_SYSCTL_NET_ROUTE)\n+#include <sys/socket.h>\n+#include <net/route.h>\n+#endif\n+\n+#ifdef USE_WIN32_CODE\n+#include <unknwn.h>\n+#include <winreg.h>\n+#define MAX_KEY_LENGTH 255\n+#define MAX_VALUE_LENGTH 16383\n+#endif\n+\n+#ifdef USE_WIN32_CODE_2\n+#include <windows.h>\n+#include <iphlpapi.h>\n+#endif\n+#include <gateway.h>\n+#ifndef WIN32\n+#define SUCCESS (0)\n+#define FAILED  (-1)\n+#endif\n+#ifdef USE_PROC_NET_ROUTE\n+#include <sstream>\n+#include <list>\n+#include <algorithm>\n+/*\n+ * There is no portable method to get the default route gateway.\n+ * So below are four (or five ?) different functions implementing this.\n+ * Parsing /proc/net/route is for Linux.\n+ * sysctl is the way to access such information on BSD systems.\n+ * Many systems should provide route information through raw PF_ROUTE\n+ * sockets.\n+ * In MS Windows, default gateway is found by looking into the registry\n+ * or by using GetBestRoute().\n+ *\n+ */\n+\n+/*\n+ parse /proc/net/route which is as follow :\n+\n+Iface   Destination     Gateway         Flags   RefCnt  Use     Metric  Mask            MTU     Window  IRTT\n+wlan0   0001A8C0        00000000        0001    0       0       0       00FFFFFF        0       0       0\n+eth0    0000FEA9        00000000        0001    0       0       0       0000FFFF        0       0       0\n+wlan0   00000000        0101A8C0        0003    0       0       0       00000000        0       0       0\n+eth0    00000000        00000000        0001    0       0       1000    00000000        0       0       0\n+\n+ One header line, and then one line by route by route table entry.\n+*/\n+\n+int TestIfWhiteSpace(char character)\n+{\n+    std::list<char> whiteSpaces = {'\\f', '\\n', '\\r', '\\t', '\\v'};\n+    return std::count(whiteSpaces.begin(), whiteSpaces.end(), character);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276105622",
      "id" : 276105622,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjEwNTYyMg==",
      "original_commit_id" : "0667cfc11b7c32e48f361d61031e1d53f121e119",
      "original_position" : 126,
      "path" : "src/natpmp/gateway.cpp",
      "position" : null,
      "pull_request_review_id" : 227561822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-19T17:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276105622",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276106557"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276106557"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Consider running `clang-tidy` on all new files. For changes to existing files: use https://github.com/bitcoin/bitcoin/blob/master/contrib/devtools/clang-format-diff.py",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-17T07:13:16Z",
      "diff_hunk" : "@@ -0,0 +1,548 @@\n+#include <stdio.h>\n+#include <ctype.h>\n+#ifndef WIN32\n+#include <netinet/in.h>\n+#endif\n+#if !defined(_MSC_VER)\n+#include <sys/param.h>\n+#endif\n+#ifdef __linux__\n+#define USE_PROC_NET_ROUTE\n+#undef USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+#endif\n+\n+#if defined(BSD) || defined(__FreeBSD_kernel__)\n+#undef USE_PROC_NET_ROUTE\n+#define USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+#endif\n+\n+#ifdef __APPLE__\n+#undef USE_PROC_NET_ROUTE\n+#undef USE_SOCKET_ROUTE\n+#define USE_SYSCTL_NET_ROUTE\n+#endif\n+\n+#if (defined(sun) && defined(__SVR4))\n+#undef USE_PROC_NET_ROUTE\n+#define USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+#endif\n+\n+#ifdef WIN32\n+#undef USE_PROC_NET_ROUTE\n+#undef USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+//#define USE_WIN32_CODE\n+#define USE_WIN32_CODE_2\n+#endif\n+\n+#ifdef __CYGWIN__\n+#undef USE_PROC_NET_ROUTE\n+#undef USE_SOCKET_ROUTE\n+#undef USE_SYSCTL_NET_ROUTE\n+#define USE_WIN32_CODE\n+#include <stdarg.h>\n+#include <w32api/windef.h>\n+#include <w32api/winbase.h>\n+#include <w32api/winreg.h>\n+#endif\n+\n+#ifdef __HAIKU__\n+#include <sys/sockio.h>\n+#define USE_HAIKU_CODE\n+#endif\n+\n+#ifdef USE_SYSCTL_NET_ROUTE\n+#include <sys/sysctl.h>\n+#endif\n+\n+#ifdef USE_SOCKET_ROUTE\n+#include <string.h>\n+#endif\n+\n+#if defined(USE_SOCKET_ROUTE) || defined(__HAIKU__)\n+#include <unistd.h>\n+#include <net/if.h>\n+#endif\n+\n+#if defined(USE_SYSCTL_NET_ROUTE) || defined(__HAIKU__)\n+#include <stdlib.h>\n+#endif\n+\n+#if defined(USE_SOCKET_ROUTE) || defined(USE_SYSCTL_NET_ROUTE)\n+#include <sys/socket.h>\n+#include <net/route.h>\n+#endif\n+\n+#ifdef USE_WIN32_CODE\n+#include <unknwn.h>\n+#include <winreg.h>\n+#define MAX_KEY_LENGTH 255\n+#define MAX_VALUE_LENGTH 16383\n+#endif\n+\n+#ifdef USE_WIN32_CODE_2\n+#include <windows.h>\n+#include <iphlpapi.h>\n+#endif\n+#include <gateway.h>\n+#ifndef WIN32\n+#define SUCCESS (0)\n+#define FAILED  (-1)\n+#endif\n+#ifdef USE_PROC_NET_ROUTE\n+#include <sstream>\n+#include <list>\n+#include <algorithm>\n+/*\n+ * There is no portable method to get the default route gateway.\n+ * So below are four (or five ?) different functions implementing this.\n+ * Parsing /proc/net/route is for Linux.\n+ * sysctl is the way to access such information on BSD systems.\n+ * Many systems should provide route information through raw PF_ROUTE\n+ * sockets.\n+ * In MS Windows, default gateway is found by looking into the registry\n+ * or by using GetBestRoute().\n+ *\n+ */\n+\n+/*\n+ parse /proc/net/route which is as follow :\n+\n+Iface   Destination     Gateway         Flags   RefCnt  Use     Metric  Mask            MTU     Window  IRTT\n+wlan0   0001A8C0        00000000        0001    0       0       0       00FFFFFF        0       0       0\n+eth0    0000FEA9        00000000        0001    0       0       0       0000FFFF        0       0       0\n+wlan0   00000000        0101A8C0        0003    0       0       0       00000000        0       0       0\n+eth0    00000000        00000000        0001    0       0       1000    00000000        0       0       0\n+\n+ One header line, and then one line by route by route table entry.\n+*/\n+\n+int TestIfWhiteSpace(char character)\n+{\n+    std::list<char> whiteSpaces = {'\\f', '\\n', '\\r', '\\t', '\\v'};\n+    return std::count(whiteSpaces.begin(), whiteSpaces.end(), character);\n+}\n+\n+int GetDefaultGateway(in_addr_t * addr)\n+{\n+        int64_t d = 0;\n+        int64_t g = 0;\n+        char buf[256] = {0};\n+        int line = 0;\n+        char * p = nullptr;\n+        FILE* f = fopen(\"/proc/net/route\", \"r\");\n+        if(!f)\n+                return FAILED;\n+        while(fgets(buf, sizeof(buf), f)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r276106557",
      "id" : 276106557,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjEwNjU1Nw==",
      "original_commit_id" : "0667cfc11b7c32e48f361d61031e1d53f121e119",
      "original_position" : 139,
      "path" : "src/natpmp/gateway.cpp",
      "position" : null,
      "pull_request_review_id" : 227561822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-19T17:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/276106557",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Pushed suggested changes.",
      "created_at" : "2019-04-19T18:46:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-484983859",
      "id" : 484983859,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDk4Mzg1OQ==",
      "updated_at" : "2019-04-19T18:46:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484983859",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8533116?v=4",
         "events_url" : "https://api.github.com/users/MishraShivendra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MishraShivendra/followers",
         "following_url" : "https://api.github.com/users/MishraShivendra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MishraShivendra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MishraShivendra",
         "id" : 8533116,
         "login" : "MishraShivendra",
         "node_id" : "MDQ6VXNlcjg1MzMxMTY=",
         "organizations_url" : "https://api.github.com/users/MishraShivendra/orgs",
         "received_events_url" : "https://api.github.com/users/MishraShivendra/received_events",
         "repos_url" : "https://api.github.com/users/MishraShivendra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MishraShivendra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MishraShivendra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MishraShivendra"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r277142619"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277142619"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Both should be supported...",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-20T18:25:27Z",
      "diff_hunk" : "@@ -437,16 +437,17 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", false, OptionsCategory::CONNECTION);\n #ifdef USE_UPNP\n #if USE_UPNP\n-    gArgs.AddArg(\"-upnp\", \"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\", false, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-portmap\", \"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\", false, OptionsCategory::CONNECTION);\n #else\n-    gArgs.AddArg(\"-upnp\", strprintf(\"Use UPnP to map the listening port (default: %u)\", 0), false, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-portmap\", strprintf(\"Use NAT-PMP to map the listening port (default: %u)\", 0), false, OptionsCategory::CONNECTION);\n #endif",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r277142619",
      "id" : 277142619,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzE0MjYxOQ==",
      "original_commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "original_position" : 9,
      "path" : "src/init.cpp",
      "position" : 9,
      "pull_request_review_id" : 228886874,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-20T18:25:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277142619",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r277162402"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277162402"
         }
      },
      "author_association" : "NONE",
      "body" : "@luke-jr \r\nI meant to use same switch \"-portmap\" for upnp as well as NAT-PMP. And the particular implementation is picked based on \"USE_UPNP\" flag (In this file as well as net.cpp). So I believe both are supported but picked based on USE_UPNP flag. Do you see any problem here?",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-21T10:35:35Z",
      "diff_hunk" : "@@ -437,16 +437,17 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", false, OptionsCategory::CONNECTION);\n #ifdef USE_UPNP\n #if USE_UPNP\n-    gArgs.AddArg(\"-upnp\", \"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\", false, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-portmap\", \"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\", false, OptionsCategory::CONNECTION);\n #else\n-    gArgs.AddArg(\"-upnp\", strprintf(\"Use UPnP to map the listening port (default: %u)\", 0), false, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-portmap\", strprintf(\"Use NAT-PMP to map the listening port (default: %u)\", 0), false, OptionsCategory::CONNECTION);\n #endif",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r277162402",
      "id" : 277162402,
      "in_reply_to_id" : 277142619,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzE2MjQwMg==",
      "original_commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "original_position" : 9,
      "path" : "src/init.cpp",
      "position" : 9,
      "pull_request_review_id" : 228907289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-21T10:39:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277162402",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8533116?v=4",
         "events_url" : "https://api.github.com/users/MishraShivendra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MishraShivendra/followers",
         "following_url" : "https://api.github.com/users/MishraShivendra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MishraShivendra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MishraShivendra",
         "id" : 8533116,
         "login" : "MishraShivendra",
         "node_id" : "MDQ6VXNlcjg1MzMxMTY=",
         "organizations_url" : "https://api.github.com/users/MishraShivendra/orgs",
         "received_events_url" : "https://api.github.com/users/MishraShivendra/received_events",
         "repos_url" : "https://api.github.com/users/MishraShivendra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MishraShivendra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MishraShivendra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MishraShivendra"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r277177752"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277177752"
         }
      },
      "author_association" : "MEMBER",
      "body" : "USE_UPNP is a compile-time option, not run-time.\r\n\r\nUPnP and NAT-PMP are two completely different protocols. They don't do the same thing. Some routers may support only one or the other.",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-21T18:40:24Z",
      "diff_hunk" : "@@ -437,16 +437,17 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", false, OptionsCategory::CONNECTION);\n #ifdef USE_UPNP\n #if USE_UPNP\n-    gArgs.AddArg(\"-upnp\", \"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\", false, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-portmap\", \"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\", false, OptionsCategory::CONNECTION);\n #else\n-    gArgs.AddArg(\"-upnp\", strprintf(\"Use UPnP to map the listening port (default: %u)\", 0), false, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-portmap\", strprintf(\"Use NAT-PMP to map the listening port (default: %u)\", 0), false, OptionsCategory::CONNECTION);\n #endif",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r277177752",
      "id" : 277177752,
      "in_reply_to_id" : 277142619,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzE3Nzc1Mg==",
      "original_commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "original_position" : 9,
      "path" : "src/init.cpp",
      "position" : 9,
      "pull_request_review_id" : 228922633,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-21T18:40:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277177752",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r277229640"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277229640"
         }
      },
      "author_association" : "NONE",
      "body" : "@laanwj @luke-jr Do you think we should introduce a separate switch for this? \r\nOr fall back to upnp?\r\n#11902",
      "commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "created_at" : "2019-04-22T07:48:18Z",
      "diff_hunk" : "@@ -437,16 +437,17 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", false, OptionsCategory::CONNECTION);\n #ifdef USE_UPNP\n #if USE_UPNP\n-    gArgs.AddArg(\"-upnp\", \"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\", false, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-portmap\", \"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\", false, OptionsCategory::CONNECTION);\n #else\n-    gArgs.AddArg(\"-upnp\", strprintf(\"Use UPnP to map the listening port (default: %u)\", 0), false, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-portmap\", strprintf(\"Use NAT-PMP to map the listening port (default: %u)\", 0), false, OptionsCategory::CONNECTION);\n #endif",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#discussion_r277229640",
      "id" : 277229640,
      "in_reply_to_id" : 277142619,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzIyOTY0MA==",
      "original_commit_id" : "ce1ef8a9fd77b6e716bf58f56cb3ad0bcd5fee26",
      "original_position" : 9,
      "path" : "src/init.cpp",
      "position" : 9,
      "pull_request_review_id" : 228985948,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15717",
      "updated_at" : "2019-04-23T02:18:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277229640",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8533116?v=4",
         "events_url" : "https://api.github.com/users/MishraShivendra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MishraShivendra/followers",
         "following_url" : "https://api.github.com/users/MishraShivendra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MishraShivendra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MishraShivendra",
         "id" : 8533116,
         "login" : "MishraShivendra",
         "node_id" : "MDQ6VXNlcjg1MzMxMTY=",
         "organizations_url" : "https://api.github.com/users/MishraShivendra/orgs",
         "received_events_url" : "https://api.github.com/users/MishraShivendra/received_events",
         "repos_url" : "https://api.github.com/users/MishraShivendra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MishraShivendra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MishraShivendra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MishraShivendra"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Can someone please give input in the above?",
      "created_at" : "2019-04-24T17:35:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-486346201",
      "id" : 486346201,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjM0NjIwMQ==",
      "updated_at" : "2019-04-24T17:35:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486346201",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8533116?v=4",
         "events_url" : "https://api.github.com/users/MishraShivendra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MishraShivendra/followers",
         "following_url" : "https://api.github.com/users/MishraShivendra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MishraShivendra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MishraShivendra",
         "id" : 8533116,
         "login" : "MishraShivendra",
         "node_id" : "MDQ6VXNlcjg1MzMxMTY=",
         "organizations_url" : "https://api.github.com/users/MishraShivendra/orgs",
         "received_events_url" : "https://api.github.com/users/MishraShivendra/received_events",
         "repos_url" : "https://api.github.com/users/MishraShivendra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MishraShivendra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MishraShivendra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MishraShivendra"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "You should leave UPnP stuff alone for this. Just add NAT-PMP support as a separate feature.",
      "created_at" : "2019-04-24T21:26:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-486433276",
      "id" : 486433276,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjQzMzI3Ng==",
      "updated_at" : "2019-04-24T21:26:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486433276",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "There was some discussion about this in IRC yesterday:\r\n\r\nhttp://www.erisian.com.au/bitcoin-core-dev/log-2019-04-24.html#l-255\r\n\r\nI did want to throw out as a suggestion that instead of running this code inside bitcoind or even adding it to the project we could consider calling out to a command line client with boost::process like: https://superuser.com/questions/192132/how-to-automatically-forward-a-port-from-the-router-to-a-mac-upnp/192487#192487. This could potentially be a very small code change after #15382 which adds boost::process. But this is just a thought which doesn't need to affect the current effort.",
      "created_at" : "2019-04-25T16:26:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-486743647",
      "id" : 486743647,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4Njc0MzY0Nw==",
      "updated_at" : "2019-04-25T16:50:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486743647",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> There was some discussion about this in IRC yesterday:\r\n> \r\n> http://www.erisian.com.au/bitcoin-core-dev/log-2019-04-24.html#l-255\r\n\r\nYes that discussion resulted in a few conclusions:\r\n\r\n1. NAT-PMP should be enabled by default\r\n~~2. Let's not submit more reviews of the subtree'd code, as we might make it a dependency under `depends`~~\r\n2. Updated: We are going to make NAT-PMP part of the `bitcoind` codebase, exactly like you've done here ([IRC conversation](http://www.erisian.com.au/bitcoin-core-dev/log-2019-04-25.html#l-312))\r\n\r\n~~w/re how we're going to depend on `libnatpmp`, my naive thinking is that it should be a dependency under `depends` that we statically link into our binaries, since it needs to be on by default. Maybe this doesn't make sense, and others can advise.~~\r\n",
      "created_at" : "2019-04-25T16:56:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-486754072",
      "id" : 486754072,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4Njc1NDA3Mg==",
      "updated_at" : "2019-04-25T18:28:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486754072",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3445290?v=4",
         "events_url" : "https://api.github.com/users/dongcarl/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dongcarl/followers",
         "following_url" : "https://api.github.com/users/dongcarl/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dongcarl/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dongcarl",
         "id" : 3445290,
         "login" : "dongcarl",
         "node_id" : "MDQ6VXNlcjM0NDUyOTA=",
         "organizations_url" : "https://api.github.com/users/dongcarl/orgs",
         "received_events_url" : "https://api.github.com/users/dongcarl/received_events",
         "repos_url" : "https://api.github.com/users/dongcarl/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dongcarl/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dongcarl"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I did want to throw out as a suggestion that instead of running this code inside bitcoind or even adding it to the project we could consider calling out to a command line client with boost::process like: \r\n\r\nPlease, no scope creep here. This can always be done later but there's no need to complicate this effort even further with a requirement that it should run outside the process.",
      "created_at" : "2019-04-25T18:25:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-486785716",
      "id" : 486785716,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4Njc4NTcxNg==",
      "updated_at" : "2019-04-25T18:25:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486785716",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Updated: We are going to make NAT-PMP part of the bitcoind codebase, exactly like you've done here\r\n\r\nNACK. There is no excuse for this. It is universally held to be a bad practice in the open source community, and for very good reasons. We have an excuse to bundle consensus-critical stuff because upstream doesn't generally consider the ramifications of some bugfixes, but that does not apply to NAT-PMP at all.",
      "created_at" : "2019-04-25T18:34:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-486789256",
      "id" : 486789256,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4Njc4OTI1Ng==",
      "updated_at" : "2019-04-25T18:34:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486789256",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Please, no scope creep here. \r\n\r\nJust in case there is a misunderstanding, the change I was referring to is potentially a very small change after #15382. Something like:\r\n\r\n```c++\r\ngArgs.AddArg(\"-upnpc_bin\", \"Path to port forwarding client binary.\");\r\n...\r\nif (gArgs.IsArgSet(\"-upnp_bin\")) {\r\n   bp::system(strprintf(\"%s %i %i\", gArgs.GetArg(\"-upnp_bin\"), internal_port, external_port));\r\n}\r\n```\r\n\r\nBut I mostly just wanted to suggest it an alternative to the approaches discussed above (which all seem perfectly fine to me).",
      "created_at" : "2019-04-25T18:48:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-486793888",
      "id" : 486793888,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4Njc5Mzg4OA==",
      "updated_at" : "2019-04-25T18:48:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486793888",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. I'm OK with compiling this by default\r\n\r\nI don't think we should turn this on by default until the GUI is updated: that's better done in a followup.\r\n\r\nI'm reluctant to strip UPnP compilation by default. The GUI currently has a \"map port using UPnP\" (off by default). Although it's tempting to just change the text and meaning of that textbox, that's a can of worms by itself. It seems better to just add a checkbox for this new setting, and mention in the tooltip which one is recommended. \r\n\r\nI tend to agree with @luke-jr on avoiding pulling in code. The Depends system seems more appropriate. From IRC in favor of subtree'ing:\r\n\r\n> the main reason for not using it as a library was because the upstream library looked to be unmaintained, or at least have no new releases for years\r\n\r\nThe last [Homebrew release](https://formulae.brew.sh/formula/libnatpmp) is from 2015. Ditto for Ubuntu [Bionic](https://packages.ubuntu.com/bionic/natpmpc). I haven't tested those releases. If they have problems then we could encourage the author to issue a new release. Also, a slight lazy argument of why fresh releases aren't super important, is that anyone who can compile from source can learn how to forward a port; this library primarily benefits users of the binary distribution.\r\n\r\nThere is still is some [modest commit activity](https://github.com/miniupnp/libnatpmp/commits/master), so we shouldn't declare it dead upstream. Even if it was, I would prefer forking the repo in the bitcoin-core org. The act us of using it could also bring new life to the project. In fact I think we should encourage that, since a lot projects stand to benefit from this library.\r\n\r\nFor a followup I like the idea of using `boost::process`, but as @laanwj says let's not complicate this PR. It could be a while before #15382 is merged too.",
      "created_at" : "2019-04-26T19:08:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-487168407",
      "id" : 487168407,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzE2ODQwNw==",
      "updated_at" : "2019-04-26T19:13:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487168407",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> I did want to throw out as a suggestion that instead of running this code inside bitcoind or even adding it to the project we could consider calling out to a command line client with boost::process like:\r\n\r\nI don't seem to agree. It could be difficult to find [these errors](https://github.com/bitcoin/bitcoin/pull/15717/files#diff-7ca56436e371c665a570c330956889caR297) through running the binary with the help of boost::process.\r\n\r\nI happen to agree with @luke-jr idea to sub-tree libnatpmp related changes.\r\n\r\nJust to sum it up:\r\n\r\n1. Leave UPnP as is and keep nat-pmp as a separate feature: Would introduce \"-natpmp\" switch to enable, and absense of this switch would disable nat-pmp port mapping\r\n2. Sub-tree libnatpmp changes: Would sub-tree libnatpmp. I would remove all unused files and maintain the same gateway/natpmp (.cpp/.h) files introduced already in this PR.\r\n3. Anything else.\r\n\r\nLet me know if you all agree with the aforementioned.",
      "created_at" : "2019-04-27T05:46:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-487257580",
      "id" : 487257580,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzI1NzU4MA==",
      "updated_at" : "2019-04-27T19:14:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487257580",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8533116?v=4",
         "events_url" : "https://api.github.com/users/MishraShivendra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MishraShivendra/followers",
         "following_url" : "https://api.github.com/users/MishraShivendra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MishraShivendra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MishraShivendra",
         "id" : 8533116,
         "login" : "MishraShivendra",
         "node_id" : "MDQ6VXNlcjg1MzMxMTY=",
         "organizations_url" : "https://api.github.com/users/MishraShivendra/orgs",
         "received_events_url" : "https://api.github.com/users/MishraShivendra/received_events",
         "repos_url" : "https://api.github.com/users/MishraShivendra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MishraShivendra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MishraShivendra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MishraShivendra"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "That's not what I meant. Just use standard `pkg-config` for libnatpmp. Every major distro has it already.",
      "created_at" : "2019-04-27T06:48:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-487260998",
      "id" : 487260998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzI2MDk5OA==",
      "updated_at" : "2019-04-27T06:48:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487260998",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "1. Yes\r\n2. What Luke says, plus adding to depends because we need that for distribution builds (though that can wait for a followup if if the feature is off by default)",
      "created_at" : "2019-04-27T07:22:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-487263071",
      "id" : 487263071,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzI2MzA3MQ==",
      "updated_at" : "2019-04-27T07:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487263071",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@luke-jr @Sjors \r\nSo you mean to say #2 should be:\r\n2. Sub-tree libnatpmp changes: Would sub-tree libnatpmp. I would remove all unused files and maintain the same gateway/natpmp (.cpp/.h) files introduced already in this PR. Use package-config for libnatpmp and add depends.\r\n",
      "created_at" : "2019-04-27T19:13:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-487312106",
      "id" : 487312106,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzMxMjEwNg==",
      "updated_at" : "2019-04-27T19:13:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487312106",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/8533116?v=4",
         "events_url" : "https://api.github.com/users/MishraShivendra/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MishraShivendra/followers",
         "following_url" : "https://api.github.com/users/MishraShivendra/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MishraShivendra/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MishraShivendra",
         "id" : 8533116,
         "login" : "MishraShivendra",
         "node_id" : "MDQ6VXNlcjg1MzMxMTY=",
         "organizations_url" : "https://api.github.com/users/MishraShivendra/orgs",
         "received_events_url" : "https://api.github.com/users/MishraShivendra/received_events",
         "repos_url" : "https://api.github.com/users/MishraShivendra/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MishraShivendra/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MishraShivendra/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MishraShivendra"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "No, I would not sub-tree libnatpmp. Just rely on `pkg-config` to find `libnatpmp` on the system (during `./configure`). The wrapper you created can go in `src/util` or some similar place. Don't worry about depends: that can wait for a future commit.",
      "created_at" : "2019-04-27T19:38:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-487313850",
      "id" : 487313850,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzMxMzg1MA==",
      "updated_at" : "2019-04-27T19:38:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487313850",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-05-08T20:34:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-490640682",
      "id" : 490640682,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MDY0MDY4Mg==",
      "updated_at" : "2019-05-08T20:34:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490640682",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--5fd3d806e98f4a0ca80977bb178665a0-->There hasn't been much activity lately and the patch still needs rebase, so I am closing this for now. Please let me know when you want to continue working on this, so the pull request can be re-opened.",
      "created_at" : "2019-08-16T14:02:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-522019564",
      "id" : 522019564,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUyMjAxOTU2NA==",
      "updated_at" : "2019-08-16T14:02:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522019564",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hi,\r\n\r\nFirst, I'm not sure if this task is still \"up for grabs\", because it's closed now. However, the icon is still there, so it should be. Anyway, I'm working on it out of curiosity, because I only know about UPnPC, so I thought it would be nice to learn how NAT-PMP works. :)\r\n\r\nThe [commit in my forked repo](https://github.com/brakmic/bitcoin/commit/df0f5ccb532565d325fad2004f83069dc52f1cc3) contains following changes:\r\n\r\n* Integrated **libnatpmp** source directory (similar to secp256k1 and univalue)\r\n\r\n* Created *autogen.sh*, *configure.ac* and *Makefile.am* for **libnatpmp**, because the [original repo](https://github.com/miniupnp/libnatpmp) doesn't have them. Instead, they offer a Makefile which makes it non-portable (no .la-files generation available). \r\n\r\n* Added a few **build-aux/m4** macros to search for pthreads, compiler & linker flags, and other stuff.\r\n\r\n* Bitcoin's [configure.ac](https://github.com/brakmic/bitcoin/blob/natpmp/configure.ac#L1383) was changed to allow for **searching of system libnatpmp** or **to build it from source**. However, as **libnatpmp** has no pkg-config, the search is not the same as with univalue. Instead, it simply tries to find natpmp.h include file. Not sure, if this is enough for every OS, but we could maybe test it.\r\n\r\n* Adapted [src/Makefile.am](https://github.com/brakmic/bitcoin/blob/natpmp/src/Makefile.am#L22) to build and link **libnatpmp**. Also adapted: Makefile.qt.include and Makefile.test.include\r\n\r\n* Added [src/natmap.cpp](https://github.com/brakmic/bitcoin/blob/natpmp/src/natmap.cpp) and [src/natmap.h](https://github.com/brakmic/bitcoin/blob/natpmp/src/natmap.cpp) where we access the **libnatpmp** API. The code in these two files is partially based on the example code from [libnatpmp webpage](https://miniupnp.tuxfamily.org/libnatpmp.html) as well as the code from the initial poster of this PR. However, I have removed the whole C-to-C++ mapping stuff, because the C code from libnatpmp is so horrible that there is practically no good way to abstract it away. Instead, I've simply taken all the ugly [only-lowercase](https://github.com/brakmic/bitcoin/blob/natpmp/src/natmap.cpp#L43)-[because-I-hate-humans](https://github.com/brakmic/bitcoin/blob/natpmp/src/natmap.cpp#L59)-Functions and put them directly into NatMap class. [YOLO!](https://github.com/brakmic/bitcoin/blob/natpmp/src/natmap.cpp#L74) Anyway, all kudos go to libnatpmp developer!\r\n\r\nWell, that's it. I don't know the current state of this task, but in any case, it was fun writing configure scripts, trying out various Makefile settings,...and reading through ugly C code.\r\n\r\nRegards,\r\n\r\n\r\n\r\n",
      "created_at" : "2019-11-28T22:30:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-559613107",
      "id" : 559613107,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1OTYxMzEwNw==",
      "updated_at" : "2019-11-28T22:30:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559613107",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/56779?v=4",
         "events_url" : "https://api.github.com/users/brakmic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brakmic/followers",
         "following_url" : "https://api.github.com/users/brakmic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brakmic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brakmic",
         "id" : 56779,
         "login" : "brakmic",
         "node_id" : "MDQ6VXNlcjU2Nzc5",
         "organizations_url" : "https://api.github.com/users/brakmic/orgs",
         "received_events_url" : "https://api.github.com/users/brakmic/received_events",
         "repos_url" : "https://api.github.com/users/brakmic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brakmic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brakmic"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Integrated libnatpmp source directory (similar to secp256k1 and univalue)\r\n\r\nDon't do this.\r\n\r\n> non-portable (no .la-files generation available).\r\n\r\n.la files are generally considered obsolete...\r\n",
      "created_at" : "2019-11-29T00:13:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-559622743",
      "id" : 559622743,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1OTYyMjc0Mw==",
      "updated_at" : "2019-11-29T00:13:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559622743",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@luke-jr\nI know that la-files are obsolete, but as libnatpmp has no pkg-config, there was no other option. Maybe there is one that I don't know about?\n\nAnyway, I consider this task as obsolete then.\n\nThanks.",
      "created_at" : "2019-11-29T05:37:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-559665457",
      "id" : 559665457,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1OTY2NTQ1Nw==",
      "updated_at" : "2019-11-29T05:37:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559665457",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/56779?v=4",
         "events_url" : "https://api.github.com/users/brakmic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brakmic/followers",
         "following_url" : "https://api.github.com/users/brakmic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brakmic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brakmic",
         "id" : 56779,
         "login" : "brakmic",
         "node_id" : "MDQ6VXNlcjU2Nzc5",
         "organizations_url" : "https://api.github.com/users/brakmic/orgs",
         "received_events_url" : "https://api.github.com/users/brakmic/received_events",
         "repos_url" : "https://api.github.com/users/brakmic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brakmic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brakmic"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Adding. NAT-PMP support is not obsolete, see #11902. The question is just how.\r\n\r\nI think @luke-jr's point about integrating the source directory is that this practice should be avoided, especially for projects that are still being (somewhat) maintained. It's better to make a PR upstream to add pkg-config support.\r\n\r\nMeanwhile you could add it to https://github.com/bitcoin/bitcoin/tree/master/depends, which works by fetching the code from its original source, and has room for patches. The only problem there is that afaik you can't build 1 depends package and get the rest via pkg-config (but I could be wrong).",
      "created_at" : "2019-11-29T08:00:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15717#issuecomment-559696715",
      "id" : 559696715,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15717",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1OTY5NjcxNQ==",
      "updated_at" : "2019-11-29T08:01:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/559696715",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]
