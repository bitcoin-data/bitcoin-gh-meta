[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15986](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15986.html) (Add unmodified-descriptor-with-checksum to getdescriptorinfo by sipa)\n* [#15845](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15845.html) (wallet: Fast rescan with BIP157 block filters by MarcoFalke)\n* [#15450](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15450.html) ([GUI] Create wallet menu option by achow101)\n* [#15024](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15024.html) (Allow specific private keys to be derived from descriptor by meshcollider)\n* [#13756](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13756.html) (wallet: \"avoid_reuse\" wallet flag for improved privacy by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-04-06T23:07:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-480544524",
      "id" : 480544524,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MDU0NDUyNA==",
      "updated_at" : "2019-06-05T14:47:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/480544524",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\n> Unfortunately importmulti is pretty much incompatible with importdescriptors, so tests that use importmulti are either removed (e.g. wallet_importmulti.py) or changed to use importdescriptors.\r\n\r\nWe'll need to support non-descriptor based wallets for some time to come. I don't think these tests should be removed.",
      "created_at" : "2019-04-08T15:40:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-480885644",
      "id" : 480885644,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MDg4NTY0NA==",
      "updated_at" : "2019-04-08T15:40:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/480885644",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> We'll need to support non-descriptor based wallets for some time to come. I don't think these tests should be removed.\r\n\r\nThere's currently no way to create a wallet with older wallet versions. Since descriptor wallets are used by default, the tests won't work with `importmulti`. However if we do add test functionality for testing old wallet files, the commit that removes `wallet_importmulti.py` can be reverted.",
      "created_at" : "2019-04-08T16:56:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-480914087",
      "id" : 480914087,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MDkxNDA4Nw==",
      "updated_at" : "2019-04-08T16:56:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/480914087",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> if we do add test functionality for testing old wallet files, the commit that removes wallet_importmulti.py can be reverted.\r\n\r\nI think that's a hard requirement. Native descriptor wallet is such a large change that we need to maintain full test coverage of the old wallet version.",
      "created_at" : "2019-04-08T17:01:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-480915843",
      "id" : 480915843,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MDkxNTg0Mw==",
      "updated_at" : "2019-04-08T17:01:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/480915843",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-04-09T12:41:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-481234474",
      "id" : 481234474,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTIzNDQ3NA==",
      "updated_at" : "2019-04-09T12:41:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481234474",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I had a look over the PR and it's surprisingly clean and simple. But while I understand the impulse to want to replace old code with new code and drop support for things like creating wallets in the current format, I think the PR could be actually simpler, and users would be better off if this took a more conservative approach and just added descriptor functionality as a new optional feature alongside existing functionality, rather than trying to:\r\n\r\n1. add new descriptor support\r\n2. add an upgrade function\r\n3. replace old code and tests\r\n\r\nall in a single PR. It seems to me if this PR just stuck to (1) and saved (2) and (3) for later followup this would be easier to review, and we would have more opportunity to iterate and hammer out any problems with the new descriptor code and design while leaving existing functionality intact.\r\n\r\nAndrew could correct me if I'm wrong, but I think in practice doing what I'm suggesting wouldn't involve big changes to the PR. Mostly just restoring removed code, and maybe copying and updating existing python tests instead of updating them in place. Or adding --descriptor options to the python tests and running both variants.",
      "created_at" : "2019-04-09T13:59:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-481263962",
      "id" : 481263962,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTI2Mzk2Mg==",
      "updated_at" : "2019-04-09T13:59:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481263962",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Really the only reason 2 and 3 were needed is because descriptor wallets bumped the wallet version number. I could instead make it a wallet flag and make descriptors something that users can choose to enable or disable in createwallet. However I felt it would be more sensible to make this a new wallet version since it does fundamentally change the definitions of ismine and watchonly.",
      "created_at" : "2019-04-09T14:33:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-481277608",
      "id" : 481277608,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTI3NzYwOA==",
      "updated_at" : "2019-04-09T14:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481277608",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15764#discussion_r273524632"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15764"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273524632"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think copy elision is prevented by this `std::move`? No need for `std::move` here AFAICT.",
      "commit_id" : "ef2236ae2b8e5c4ef545d7655f88abaa8f83642a",
      "created_at" : "2019-04-09T14:36:09Z",
      "diff_hunk" : "@@ -621,6 +624,40 @@ class CWalletKey\n     }\n };\n \n+/** Descriptor with some wallet metadata */\n+class WalletDescriptor\n+{\n+public:\n+    std::shared_ptr<Descriptor> descriptor;\n+    uint64_t creation_time;\n+    int32_t range_start; // First item in range; start of range, inclusive, i.e. [range_start, range_end)\n+    int32_t range_end; // Item after the last; end of range, exclusive, i.e. [range_start, range_end)\n+    int32_t next_index; // Position of the next item to generate\n+    std::vector<std::vector<unsigned char>> cache;\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {\n+        if (ser_action.ForRead()) {\n+            std::string desc;\n+            READWRITE(desc);\n+            FlatSigningProvider keys;\n+            descriptor = std::move(Parse(desc, keys, true));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#discussion_r273524632",
      "id" : 273524632,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzUyNDYzMg==",
      "original_commit_id" : "ef2236ae2b8e5c4ef545d7655f88abaa8f83642a",
      "original_position" : 42,
      "path" : "src/wallet/wallet.h",
      "position" : 42,
      "pull_request_review_id" : 224446995,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15764",
      "updated_at" : "2019-04-09T15:18:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273524632",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15764#discussion_r273528595"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15764"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273528595"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here.",
      "commit_id" : "ef2236ae2b8e5c4ef545d7655f88abaa8f83642a",
      "created_at" : "2019-04-09T14:44:05Z",
      "diff_hunk" : "@@ -492,6 +492,224 @@ bool CWallet::LoadWatchOnly(const CScript &dest)\n     return CCryptoKeyStore::AddWatchOnly(dest);\n }\n \n+bool CWallet::LoadDescriptor(const WalletDescriptor& desc)\n+{\n+    LOCK(cs_wallet);\n+    DescriptorID id(*desc.descriptor);\n+    for (int32_t i = desc.range_start; i < desc.range_end; ++i) {\n+        FlatSigningProvider out_keys;\n+        std::vector<CScript> scripts_temp;\n+        desc.descriptor->ExpandFromCache(i, desc.cache[i - desc.range_start], scripts_temp, out_keys);\n+        // Add all of the scriptPubKeys to the scriptPubKey set\n+        for (const auto& script : scripts_temp) {\n+            AddScriptPubKey(script, id, i);\n+        }\n+        // Add the scripts to in memory\n+        for (const auto& script : out_keys.scripts) {\n+            CBasicKeyStore::AddCScript(script.second);\n+        }\n+    }\n+\n+    // Add to the descriptor map\n+    m_map_descriptors[id] = desc;\n+\n+    return true;\n+}\n+\n+bool CWallet::AddDescriptorForKey(const CKeyID& id, const CKeyMetadata* meta)\n+{\n+    // Get the private key for this id\n+    CKey key;\n+    if (!GetKey(id, key)) {\n+        return false;\n+    }\n+\n+    // Get the key origin info string if there is one\n+    std::string origin_str = \"\";\n+    if (meta && meta->has_key_origin) {\n+        origin_str = \"[\" + HexStr(std::begin(meta->key_origin.fingerprint), std::end(meta->key_origin.fingerprint)) + FormatHDKeypath(meta->key_origin.path) + \"]\";\n+    }\n+\n+    // make the descriptor\n+    CPubKey pubkey = key.GetPubKey();\n+    std::string desc_str = \"combo(\" + origin_str + HexStr(pubkey.begin(), pubkey.end()) + \")\";\n+    FlatSigningProvider keys;\n+    std::unique_ptr<Descriptor> desc = Parse(desc_str, keys, false);\n+    WalletDescriptor wallet_desc(std::move(desc), meta? meta->nCreateTime : 0, 0, 1, 0);\n+\n+    // Build the cache\n+    std::vector<unsigned char> cache;\n+    std::vector<CScript> scripts_temp;\n+    assert(wallet_desc.descriptor->Expand(0, keys, scripts_temp, keys, &cache));\n+    wallet_desc.cache.push_back(cache);\n+\n+    // Add the descriptor to the wallet\n+    AddWalletDescriptor(wallet_desc);\n+    return true;\n+}\n+\n+std::vector<WalletDescriptor> CWallet::ConvertWatchOnlyToDescriptor()\n+{\n+    AssertLockHeld(cs_wallet);\n+    LOCK(cs_KeyStore);\n+\n+    std::vector<WalletDescriptor> out;\n+    for (const CScript& script : setWatchOnly) {\n+        std::shared_ptr<Descriptor> desc = std::move(InferDescriptor(script, *this));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#discussion_r273528595",
      "id" : 273528595,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzUyODU5NQ==",
      "original_commit_id" : "ef2236ae2b8e5c4ef545d7655f88abaa8f83642a",
      "original_position" : 142,
      "path" : "src/wallet/wallet.cpp",
      "position" : 142,
      "pull_request_review_id" : 224452355,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15764",
      "updated_at" : "2019-04-09T15:18:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273528595",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15764#discussion_r273528696"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15764"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273528696"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here.",
      "commit_id" : "ef2236ae2b8e5c4ef545d7655f88abaa8f83642a",
      "created_at" : "2019-04-09T14:44:18Z",
      "diff_hunk" : "@@ -492,6 +492,224 @@ bool CWallet::LoadWatchOnly(const CScript &dest)\n     return CCryptoKeyStore::AddWatchOnly(dest);\n }\n \n+bool CWallet::LoadDescriptor(const WalletDescriptor& desc)\n+{\n+    LOCK(cs_wallet);\n+    DescriptorID id(*desc.descriptor);\n+    for (int32_t i = desc.range_start; i < desc.range_end; ++i) {\n+        FlatSigningProvider out_keys;\n+        std::vector<CScript> scripts_temp;\n+        desc.descriptor->ExpandFromCache(i, desc.cache[i - desc.range_start], scripts_temp, out_keys);\n+        // Add all of the scriptPubKeys to the scriptPubKey set\n+        for (const auto& script : scripts_temp) {\n+            AddScriptPubKey(script, id, i);\n+        }\n+        // Add the scripts to in memory\n+        for (const auto& script : out_keys.scripts) {\n+            CBasicKeyStore::AddCScript(script.second);\n+        }\n+    }\n+\n+    // Add to the descriptor map\n+    m_map_descriptors[id] = desc;\n+\n+    return true;\n+}\n+\n+bool CWallet::AddDescriptorForKey(const CKeyID& id, const CKeyMetadata* meta)\n+{\n+    // Get the private key for this id\n+    CKey key;\n+    if (!GetKey(id, key)) {\n+        return false;\n+    }\n+\n+    // Get the key origin info string if there is one\n+    std::string origin_str = \"\";\n+    if (meta && meta->has_key_origin) {\n+        origin_str = \"[\" + HexStr(std::begin(meta->key_origin.fingerprint), std::end(meta->key_origin.fingerprint)) + FormatHDKeypath(meta->key_origin.path) + \"]\";\n+    }\n+\n+    // make the descriptor\n+    CPubKey pubkey = key.GetPubKey();\n+    std::string desc_str = \"combo(\" + origin_str + HexStr(pubkey.begin(), pubkey.end()) + \")\";\n+    FlatSigningProvider keys;\n+    std::unique_ptr<Descriptor> desc = Parse(desc_str, keys, false);\n+    WalletDescriptor wallet_desc(std::move(desc), meta? meta->nCreateTime : 0, 0, 1, 0);\n+\n+    // Build the cache\n+    std::vector<unsigned char> cache;\n+    std::vector<CScript> scripts_temp;\n+    assert(wallet_desc.descriptor->Expand(0, keys, scripts_temp, keys, &cache));\n+    wallet_desc.cache.push_back(cache);\n+\n+    // Add the descriptor to the wallet\n+    AddWalletDescriptor(wallet_desc);\n+    return true;\n+}\n+\n+std::vector<WalletDescriptor> CWallet::ConvertWatchOnlyToDescriptor()\n+{\n+    AssertLockHeld(cs_wallet);\n+    LOCK(cs_KeyStore);\n+\n+    std::vector<WalletDescriptor> out;\n+    for (const CScript& script : setWatchOnly) {\n+        std::shared_ptr<Descriptor> desc = std::move(InferDescriptor(script, *this));\n+        WalletDescriptor wallet_desc(desc, m_script_metadata[CScriptID(script)].nCreateTime, 0, 1, 0);\n+\n+        // Build the cache\n+        std::vector<unsigned char> cache;\n+        std::vector<CScript> scripts_temp;\n+        FlatSigningProvider keys;\n+        assert(wallet_desc.descriptor->Expand(0, keys, scripts_temp, keys, &cache));\n+        wallet_desc.cache.push_back(cache);\n+\n+        out.push_back(wallet_desc);\n+    }\n+    return out;\n+}\n+\n+void CWallet::ConvertScriptsToDescriptor(std::vector<WalletDescriptor>& watchonly_out, std::vector<WalletDescriptor>& spendable_out)\n+{\n+    AssertLockHeld(cs_wallet);\n+    LOCK(cs_KeyStore);\n+\n+    // Must do this before loading descriptors because we use IsMine()\n+    assert(!HaveScriptPubKeys());\n+\n+    for (const auto& script_pair : mapScripts) {\n+        const CScript& script = script_pair.second;\n+        std::shared_ptr<Descriptor> desc = std::move(InferDescriptor(script, *this));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#discussion_r273528696",
      "id" : 273528696,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzUyODY5Ng==",
      "original_commit_id" : "ef2236ae2b8e5c4ef545d7655f88abaa8f83642a",
      "original_position" : 167,
      "path" : "src/wallet/wallet.cpp",
      "position" : 167,
      "pull_request_review_id" : 224452510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15764",
      "updated_at" : "2019-04-09T15:18:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273528696",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift - it's too early to be adding nit code style comments when the concept and approach is still being discussed. Please hold back until concept discussion is over.",
      "created_at" : "2019-04-09T14:48:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-481284150",
      "id" : 481284150,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTI4NDE1MA==",
      "updated_at" : "2019-04-09T14:48:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481284150",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15764#discussion_r273533538"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15764"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273533538"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be \"descriptor\" instead of \"desccriptor\" :-)",
      "commit_id" : "ef2236ae2b8e5c4ef545d7655f88abaa8f83642a",
      "created_at" : "2019-04-09T14:53:09Z",
      "diff_hunk" : "@@ -1521,3 +1551,332 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+static UniValue ProcessDescriptorImport(CWallet * const pwallet, const UniValue& data, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n+{\n+    UniValue warnings(UniValue::VARR);\n+    UniValue result(UniValue::VOBJ);\n+\n+    try {\n+        const bool internal = data.exists(\"internal\") ? data[\"internal\"].get_bool() : false;\n+        // Internal addresses should not have a label\n+        if (internal && data.exists(\"label\")) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Internal addresses should not have a label\");\n+        }\n+        const std::string& label = data.exists(\"label\") ? data[\"label\"].get_str() : \"\";\n+        const bool add_keypool = data.exists(\"keypool\") ? data[\"keypool\"].get_bool() : false;\n+\n+        if (!data.exists(\"desc\")) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Either a descriptor or scriptPubKey must be provided.\");\n+        }\n+\n+        const std::string& descriptor = data[\"desc\"].get_str();\n+        FlatSigningProvider keys;\n+        auto parsed_desc = Parse(descriptor, keys, /* require_checksum = */ true);\n+        if (!parsed_desc) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Descriptor is invalid\");\n+        }\n+\n+        int64_t range_start = 0, range_end = 1;\n+        if (!parsed_desc->IsRange() && data.exists(\"range\")) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range should not be specified for an un-ranged descriptor\");\n+        } else if (parsed_desc->IsRange()) {\n+            if (!data.exists(\"range\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Descriptor is ranged, please specify the range\");\n+            }\n+            auto range = ParseRange(data[\"range\"]);\n+            range_start = range.first;\n+            range_end = range.second;\n+            if (range_start < 0 || (range_end >> 31) != 0 || range_end - range_start >= 1000000) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid descriptor range specified\");\n+            }\n+        }\n+\n+        // If private keys are disabled, abort if private keys are being imported\n+        if (pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) && !keys.keys.empty()) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot import private keys to a wallet with private keys disabled\");\n+        }\n+\n+        // Check whether we have any work to do\n+        DescriptorID id(*parsed_desc);\n+        if (pwallet->HaveWalletDescriptor(id)) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"The wallet already contains the descriptor\");\n+        }\n+\n+        // Build the expansion cache\n+        WalletDescriptor wallet_desc(std::move(parsed_desc), timestamp, range_start, range_end, range_start);\n+        std::vector<CScript> scripts_temp;\n+        for (int32_t i = range_start; i < range_end; ++i) {\n+            std::vector<unsigned char> cache;\n+            if (!wallet_desc.descriptor->Expand(i, keys, scripts_temp, keys, &cache)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Descriptor missing keys and cannot be expanded\");\n+            }\n+            wallet_desc.cache.push_back(cache);\n+        }\n+\n+        // Check if all private keys are either provided or in the wallet already\n+        bool have_privkeys = true;\n+        for (const auto& entry : keys.pubkeys) {\n+            const CKeyID& key_id = entry.first;\n+            CKey key;\n+            if (!keys.GetKey(key_id, key) && !pwallet->HaveKey(key_id)) {\n+                have_privkeys = false;\n+            }\n+        }\n+\n+        // If private keys are enabled, abort if private keys are not provided and not in the wallet\n+        if (!pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) && !have_privkeys) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot import descriptor without private keys to a wallet with private keys enabled that does not already have the private keys\");\n+        }\n+\n+        // Add the descriptor\n+        if (!pwallet->AddWalletDescriptor(wallet_desc)) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Unable to add the descriptor to the wallet\");\n+        }\n+\n+        // Add the privkeys from the descriptor\n+        for (const auto& entry : keys.keys) {\n+            const CKey& key = entry.second;\n+            CPubKey pubkey = key.GetPubKey();\n+            const CKeyID& id = entry.first;\n+            assert(key.VerifyPubKey(pubkey));\n+            pwallet->mapKeyMetadata[id].nCreateTime = timestamp;\n+            // If the private key is not present in the wallet, insert it.\n+            if (!pwallet->HaveKey(id) && !pwallet->AddKeyPubKey(key, pubkey)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            }\n+            pwallet->UpdateTimeFirstKey(timestamp);\n+        }\n+\n+        // Add the pubkeys as watch only\n+        for (const auto& entry : keys.pubkeys) {\n+            const CKeyID& key_id = entry.first;\n+            const CPubKey& pubkey = entry.second;\n+            CKey key;\n+            if (!keys.GetKey(key_id, key)) {\n+                if (!pwallet->AddWatchOnly(GetScriptForRawPubKey(pubkey), timestamp)) {\n+                    throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding pubkey to wallet\");\n+                }\n+            }\n+        }\n+\n+        // Set label for scriptPubKeys\n+        for (const CScript& script : scripts_temp) {\n+            CTxDestination dest;\n+            ExtractDestination(script, dest);\n+            if (!internal && IsValidDestination(dest) && (data.exists(\"label\") || pwallet->mapAddressBook.count(dest) == 0)) {\n+                pwallet->SetAddressBook(dest, label, \"receive\");\n+            }\n+        }\n+\n+        // Set as main descriptors\n+        if (add_keypool) {\n+            if (!wallet_desc.descriptor->IsRange()) {\n+                warnings.push_back(\"Non-ranged descriptor cannot be used as a keypool descriptor\");\n+            } else if (descriptor.rfind(\"combo(\", 0) == 0) {\n+                warnings.push_back(\"Combo descriptor cannot be used as a keypool descriptor\");\n+            } else {\n+                // Get the output type\n+                OutputType type = OutputType::CHANGE_AUTO;\n+                if (descriptor.rfind(\"wpkh(\", 0) == 0 || descriptor.rfind(\"wsh(\", 0) == 0) {\n+                    type = OutputType::BECH32;\n+                } else if (descriptor.rfind(\"sh(wpkh(\", 0) == 0) {\n+                    type = OutputType::P2SH_SEGWIT;\n+                } else if (descriptor.rfind(\"pkh(\", 0) == 0 || descriptor.rfind(\"sh(\", 0) == 0) {\n+                    type = OutputType::LEGACY;\n+                } else {\n+                    warnings.push_back(\"Descriptor describes unknown address type, cannot be used as a keypool descriptor\");\n+                }\n+                // Set the descriptors\n+                if (type != OutputType::CHANGE_AUTO) {\n+                    if (internal) {\n+                        pwallet->SetChangeDescriptor(id, false, type);\n+                    } else {\n+                        pwallet->SetPrimaryDescriptor(id, false, type);\n+                    }\n+                }\n+            }\n+        }\n+\n+        result.pushKV(\"success\", UniValue(true));\n+    } catch (const UniValue& e) {\n+        result.pushKV(\"success\", UniValue(false));\n+        result.pushKV(\"error\", e);\n+    } catch (...) {\n+        result.pushKV(\"success\", UniValue(false));\n+\n+        result.pushKV(\"error\", JSONRPCError(RPC_MISC_ERROR, \"Missing required fields\"));\n+    }\n+    if (warnings.size()) result.pushKV(\"warnings\", warnings);\n+    return result;\n+}\n+\n+UniValue importdescriptors(const JSONRPCRequest& main_equest)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(main_equest);\n+    CWallet* const pwallet = wallet.get();\n+    if (!EnsureWalletIsAvailable(pwallet, main_equest.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (main_equest.fHelp || main_equest.params.size() < 1 || main_equest.params.size() > 2)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"importdescriptors\",\n+                \"\\nImport descriptors, optionally rescanning the blockchain from the earliest creation time of the imported scripts. Requires a new wallet backup.\\n\"\n+            \"\\nNote: This call can take over an hour to complete if rescan is true, during that time, other rpc calls\\n\"\n+            \"may report that the imported keys, addresses or scripts exists but related transactions are still missing.\\n\",\n+                {\n+                    {\"requests\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"Data to be imported\",\n+                        {\n+                            {\"\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED, \"\",\n+                                {\n+                                    {\"desc\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"Descriptor to import. If using descriptor, do not also provide address/scriptPubKey, scripts, or pubkeys\"},\n+                                    {\"timestamp\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"Creation time of the key in seconds since epoch (Jan 1 1970 GMT),\\n\"\n+        \"                                                              or the string \\\"now\\\" to substitute the current synced blockchain time. The timestamp of the oldest\\n\"\n+        \"                                                              key will determine how far back blockchain rescans need to begin for missing wallet transactions.\\n\"\n+        \"                                                              \\\"now\\\" can be specified to bypass scanning, for keys which are known to never have been used, and\\n\"\n+        \"                                                              0 can be specified to scan the entire blockchain. Blocks up to 2 hours before the earliest key\\n\"\n+        \"                                                              creation time of all keys being imported by the importmulti call will be scanned.\",\n+                                        /* oneline_description */ \"\", {\"timestamp | \\\"now\\\"\", \"integer / string\"}\n+                                    },\n+                                    {\"range\", RPCArg::Type::RANGE, RPCArg::Optional::OMITTED, \"If a ranged descriptor is used, this specifies the end or the range (in the form [begin,end]) to import\"},\n+                                    {\"internal\", RPCArg::Type::BOOL, /* default */ \"false\", \"Stating whether matching outputs should be treated as not incoming payments (also known as change)\"},\n+                                    {\"label\", RPCArg::Type::STR, /* default */ \"''\", \"Label to assign to the address, only allowed with internal=false\"},\n+                                    {\"keypool\", RPCArg::Type::BOOL, /* default */ \"false\", \"Stating whether the imported descriptor should be used for address generation.\"},\n+                                },\n+                            },\n+                        },\n+                        \"\\\"requests\\\"\"},\n+                    {\"options\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED_NAMED_ARG, \"\",\n+                        {\n+                            {\"rescan\", RPCArg::Type::BOOL, /* default */ \"true\", \"Stating if should rescan the blockchain after all imports\"},\n+                        },\n+                        \"\\\"options\\\"\"},\n+                },\n+                RPCResult{\n+            \"\\nResponse is an array with the same size as the input that has the execution result :\\n\"\n+            \"  [{\\\"success\\\": true}, {\\\"success\\\": true, \\\"warnings\\\": [\\\"Ignoring irrelevant private key\\\"]}, {\\\"success\\\": false, \\\"error\\\": {\\\"code\\\": -1, \\\"message\\\": \\\"Internal Server Error\\\"}}, ...]\\n\"\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"importdescriptors\", \"'[{ \\\"desc\\\": \\\"<my descriptor>\\\", \\\"timestamp\\\":1455191478 }, \"\n+                                          \"{ \\\"desc\\\": \\\"<my desccriptor 2>\\\", \\\"label\\\": \\\"example 2\\\", \\\"timestamp\\\": 1455191480 }]'\") +",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#discussion_r273533538",
      "id" : 273533538,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzUzMzUzOA==",
      "original_commit_id" : "ef2236ae2b8e5c4ef545d7655f88abaa8f83642a",
      "original_position" : 429,
      "path" : "src/wallet/rpcdump.cpp",
      "position" : 429,
      "pull_request_review_id" : 224458672,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15764",
      "updated_at" : "2019-04-09T15:17:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273533538",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15764#discussion_r273533720"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15764"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273533720"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be \"descriptor\" :-)",
      "commit_id" : "ef2236ae2b8e5c4ef545d7655f88abaa8f83642a",
      "created_at" : "2019-04-09T14:53:27Z",
      "diff_hunk" : "@@ -1510,11 +1833,80 @@ void CWallet::SetHDChain(const CHDChain& chain, bool memonly)\n     hdChain = chain;\n }\n \n+void CWallet::SetPrimaryDescriptor(const DescriptorID& id, bool memonly, OutputType type)\n+{\n+    LOCK(cs_wallet);\n+    if (!memonly && !WalletBatch(*database).WritePrimaryDescriptor(id, type))\n+        throw std::runtime_error(std::string(__func__) + \": writing primary descriptor failed\");\n+\n+    m_primary_descriptors[type] = id;\n+}\n+\n+void CWallet::SetChangeDescriptor(const DescriptorID& id, bool memonly, OutputType type)\n+{\n+    LOCK(cs_wallet);\n+    if (!memonly && !WalletBatch(*database).WriteChangeDescriptor(id,  type))\n+        throw std::runtime_error(std::string(__func__) + \": writing change descriptor failed\");\n+\n+    m_change_descriptors[type] = id;\n+}\n+\n+bool CWallet::HaveWalletDescriptor(const DescriptorID& id) const\n+{\n+    LOCK(cs_wallet);\n+    return m_map_descriptors.count(id) > 0;\n+}\n+\n+bool CWallet::AddWalletDescriptor(const WalletDescriptor& wallet_desc)\n+{\n+    // Save the dsecriptor",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#discussion_r273533720",
      "id" : 273533720,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzUzMzcyMA==",
      "original_commit_id" : "ef2236ae2b8e5c4ef545d7655f88abaa8f83642a",
      "original_position" : 465,
      "path" : "src/wallet/wallet.cpp",
      "position" : 465,
      "pull_request_review_id" : 224458887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15764",
      "updated_at" : "2019-04-09T15:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273533720",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@jnewbery OK! @achow101 Let me know if/when you want me to review this PR :-)",
      "created_at" : "2019-04-09T15:07:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-481292231",
      "id" : 481292231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTI5MjIzMQ==",
      "updated_at" : "2019-04-09T15:07:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481292231",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Impressive work. Concept ACK.",
      "created_at" : "2019-04-10T08:56:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-481603591",
      "id" : 481603591,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTYwMzU5MQ==",
      "updated_at" : "2019-04-10T08:56:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481603591",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Obvious concept ACK. See also my (partial) attempt at #15487. We discussed some differences in todays wallet meeting on IRC. Will study this PR in more detail later.",
      "created_at" : "2019-04-12T19:37:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-482697665",
      "id" : 482697665,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MjY5NzY2NQ==",
      "updated_at" : "2019-04-12T19:37:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482697665",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Lots of discussion on this in today's IRC meeting: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2019/bitcoin-core-dev.2019-04-12-19.00.log.html#l-46\r\n\r\nConclusion is that @achow101 will rework this PR to use feature flags, restore the tests and remove the upgrade code.",
      "created_at" : "2019-04-12T20:17:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-482708609",
      "id" : 482708609,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MjcwODYwOQ==",
      "updated_at" : "2019-04-12T20:17:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482708609",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Obvious concept ACK",
      "created_at" : "2019-04-16T07:50:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-483550852",
      "id" : 483550852,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MzU1MDg1Mg==",
      "updated_at" : "2019-04-16T07:50:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483550852",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on:\r\n* adding a descriptor id (sha256 of the string); alternatively we could also the ID wallet based, in which case a simple auto-increment int could suffice\r\n* the WalletDescriptor class, but:\r\n  * I would drop `range_start` and `range_end` unless there's a good reason for them\r\n  * serialization needs versioning (`CURRENT_VERSION=VERSION_BASIC`)\r\n* a new `importdescriptors` RPC method (as opposed to overloading `importmulti`)\r\n* dumpwallet dumps descriptors\r\n  * individual (labeled) addresses should refer to their descriptor id (or just printed directly after their descriptor)\r\n* `std::map<OutputType, DescriptorID> m_..._descriptors` to track descriptors by output type\r\n   * #15590 (or some variation thereof) would let you check the type upon import\r\n\r\nWe need to track if a descriptor is change / receive, and whether it's active (like the keypool) or archived. This PR handles that with `SetPrimaryDescriptor`, etc. My approach was to add a purpose int to each descriptor `DESCRIPTOR_PURPOSE_[RECEIVE,CHANGE]_[CURRENT,ARCHIVE]`. No strong preference. I would probably rename `Primary` to `Receive` though.\r\n\r\nOne thing I'm not a fan of:\r\n* LoadDescriptor expands a descriptor and then throws keys and script into the global wallet (e.g. `AddScriptPubKey`); I prefer if descriptor objects handle their own IsMine stuff.\r\n\r\nTo keep this PR small I suggest, in additon to what @jnewbery summarizes:\r\n* don't add private key support (I do think we should have a WIP PR that adds private key support, to get a rough feel for what needs to happen)",
      "created_at" : "2019-04-16T13:31:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-483660440",
      "id" : 483660440,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MzY2MDQ0MA==",
      "updated_at" : "2019-04-16T13:32:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483660440",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've made the changes that were discussed last Friday. I've also split up some of the commits so that they are smaller and easier to review.\r\n\r\nI'll be working on adding tests for all of this.",
      "created_at" : "2019-04-16T14:48:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-483693896",
      "id" : 483693896,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MzY5Mzg5Ng==",
      "updated_at" : "2019-04-16T14:48:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483693896",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-04-17T19:23:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-484227070",
      "id" : 484227070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDIyNzA3MA==",
      "updated_at" : "2019-04-17T19:23:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484227070",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased, fixed a couple of bugs, and added some tests. I'll be adding more tests soon, particularly for `importdescriptors`.\r\n\r\n***\r\n\r\n> don't add private key support (I do think we should have a WIP PR that adds private key support, to get a rough feel for what needs to happen)\r\n\r\nNo. That wouldn't make this any smaller, and I think that having private key support is an important part of descriptor wallets.\r\n\r\n> LoadDescriptor expands a descriptor and then throws keys and script into the global wallet (e.g. `AddScriptPubKey`); I prefer if descriptor objects handle their own IsMine stuff.\r\n\r\nExpanding the descriptors and adding scripts and keys to the global wallet allows us to have `CKeystore` not have to know about descriptors (and I don't think that it should know what a descriptor is).",
      "created_at" : "2019-04-22T03:32:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-485314343",
      "id" : 485314343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NTMxNDM0Mw==",
      "updated_at" : "2019-04-22T03:40:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485314343",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "If each descriptor has its own `CKeystore` then `CKeystore` also doesn't have to know about descriptors.  Descriptor wallets give us an opportunity to rethink IsMine and watch-only behavior. I suspect that using a global wallet keys and scripts makes changing that more difficult because it requires more backwards compatibly. But I could be wrong.",
      "created_at" : "2019-04-24T10:35:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-486168726",
      "id" : 486168726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NjE2ODcyNg==",
      "updated_at" : "2019-04-24T10:35:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486168726",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-04-27T13:35:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-487286727",
      "id" : 487286727,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzI4NjcyNw==",
      "updated_at" : "2019-04-27T13:35:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487286727",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2019-06-05T10:34:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-499030431",
      "id" : 499030431,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5OTAzMDQzMQ==",
      "updated_at" : "2019-06-05T10:34:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499030431",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "A lot of this will be restructured and changed in the near future. However a lot of the new descriptor specific functions will probably stay the same. So for now, ignore the following commits:\r\n\r\n* 7453e3e5f312b1b32d677451ae8064745a848b41\r\n* 60a93ae61913e5ca9f04a0f16e75dca6b1f96975\r\n* 95fe8337b270e2457b13b8a9b72e08b30417e2d5\r\n* 8e61da11161751f30abc757e6a14af714ebc6a29\r\n* 4fe18b9b7c6502fbafc83289aac7a55d897bbd94\r\n* 795608e51666769596493d1ea527e286b23db468",
      "created_at" : "2019-06-05T14:56:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-499119109",
      "id" : 499119109,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5OTExOTEwOQ==",
      "updated_at" : "2019-06-05T14:56:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499119109",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-06-07T14:39:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-499910987",
      "id" : 499910987,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5OTkxMDk4Nw==",
      "updated_at" : "2019-06-07T14:39:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499910987",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing this for now while the wallet restructure takes place.",
      "created_at" : "2019-06-18T21:41:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-503323151",
      "id" : 503323151,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15764",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUwMzMyMzE1MQ==",
      "updated_at" : "2019-06-18T21:41:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/503323151",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]
