[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16528](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16528.html) ([WIP] Native Descriptor Wallets (take 2) by achow101)\n* [#16521](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16521.html) (wallet/rpc: Use the default maxfeerate value as BTC/kB by Remagpie)\n* [#16503](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16503.html) (Remove p2pEnabled from Chain interface by ariard)\n* [#16341](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16341.html) (Introduce ScriptPubKeyMan interface and use it for key and script management (aka wallet boxes) by achow101)\n* [#15169](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15169.html) (Parallelize CheckInputs() in AcceptToMemoryPool() by sdaftuar)\n* [#14920](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14920.html) (Build: enable -Wdocumentation via isystem by Empact)\n* [#9381](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9381.html) (Remove CWalletTx merging logic from AddToWallet by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-04-01T02:38:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-478415987",
      "id" : 478415987,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3ODQxNTk4Nw==",
      "updated_at" : "2019-08-02T04:13:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478415987",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-04-01T20:13:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-478729279",
      "id" : 478729279,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3ODcyOTI3OQ==",
      "updated_at" : "2019-04-01T20:13:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478729279",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271524444"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271524444"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for consolidating the code from `relayTransaction` and `submitToMemoryPool` in `interfaces/chain.cpp` and from `BroadcastTransaction` in `node/transaction.cpp`.\r\n\r\nI do think the right place for all this code to live is in `node/transaction.cpp`, though. `interfaces/chain.cpp` is really just meant to be a simple glue file with lines like:\r\n\r\n```c++\r\nbool broadcastTransaction(...) override { return BroadcastTransaction(...); }\r\n```\r\n\r\nAlso, I didn't look closely yet, but it seems like this refactoring might be changing wallet behavior (this could explain travis test failures). It would probably be better if this PR avoided changing behavior to the extent possible. This might require adding some extra options to the existing `BroadcastTransaction` function in `node/transaction.cpp`, or adding a second broadcast function there that can hopefully share some code with the current one.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-02T22:47:36Z",
      "diff_hunk" : "@@ -306,10 +301,58 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, const uint256& txid, CValidationState& state, const CAmount& absurdfee, bool relay) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271524444",
      "id" : 271524444,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTUyNDQ0NA==",
      "original_commit_id" : "abae70356f288277618b2848a7bb659aff7d6200",
      "original_position" : 40,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 221937992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271524444",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271564894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271564894"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Okay was thinking than ```node/transaction.cpp``` was temporary and long term goal was to aggregate it to ```interfaces/node.cpp```.\r\nDidn't want to change wallet behavior, fixed it by adding options in the existing BroadcastTransaction (but still not sure of ReacceptWalletTransactions, should we broadcast txn there ?), functional tests should be good now. Also rebased",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-03T03:04:24Z",
      "diff_hunk" : "@@ -306,10 +301,58 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, const uint256& txid, CValidationState& state, const CAmount& absurdfee, bool relay) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271564894",
      "id" : 271564894,
      "in_reply_to_id" : 271524444,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTU2NDg5NA==",
      "original_commit_id" : "abae70356f288277618b2848a7bb659aff7d6200",
      "original_position" : 40,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 221987898,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271564894",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271569776"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271569776"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271524444\r\n\r\nThanks! This looks good and now net removes code (+63/-83).\r\n\r\n> Okay was thinking than node/transaction.cpp was temporary\r\n\r\nYeah, that may have been the original thought. But I think it could be a reasonable long term location if more things are moved around it. In any case it's where the BroadcastTransaction function currently lives, so it's easier not to move in this PR, which is more about simplifying wallet code.\r\n\r\n> and long term goal was to aggregate it to interfaces/node.cpp\r\n\r\nEverything in interfaces/, including interfaces/node.cpp is just supposed to be very short glue code (the files would be huge otherwise). The interfaces are a way of letting wallet, node, and gui code run in different processes, and a way of preventing them from accessing each others internal state.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-03T03:43:00Z",
      "diff_hunk" : "@@ -306,10 +301,58 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, const uint256& txid, CValidationState& state, const CAmount& absurdfee, bool relay) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271569776",
      "id" : 271569776,
      "in_reply_to_id" : 271524444,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTU2OTc3Ng==",
      "original_commit_id" : "abae70356f288277618b2848a7bb659aff7d6200",
      "original_position" : 40,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 221993941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271569776",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271570034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271570034"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can drop this whole comment since assumeLocked call is removed.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-03T03:44:48Z",
      "diff_hunk" : "@@ -210,8 +205,7 @@ class NotificationsHandlerImpl : public Handler, CValidationInterface\n         // should be able to be removed entirely if `ResendWalletTransactions`\n         // is replaced by a wallet timer as suggested in\n         // https://github.com/bitcoin/bitcoin/issues/15619",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271570034",
      "id" : 271570034,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTU3MDAzNA==",
      "original_commit_id" : "322638ca7bd5859cc49be694e9f8f9c7923572dc",
      "original_position" : 24,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 221994261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271570034",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271571388"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271571388"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should be no need to lock again because locked_chain is passed as an argument above. Guessing this is a rebase issue after 0440481c6bf5683eff669c789bdf6a306d99adc5 (#15652)",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-03T03:55:13Z",
      "diff_hunk" : "@@ -1867,43 +1867,44 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     if (!fBroadcastTransactions)\n         return;\n     std::map<int64_t, CWalletTx*> mapSorted;\n-\n-    // Sort pending wallet transactions based on their initial wallet insertion order\n-    for (std::pair<const uint256, CWalletTx>& item : mapWallet)\n     {\n-        const uint256& wtxid = item.first;\n-        CWalletTx& wtx = item.second;\n-        assert(wtx.GetHash() == wtxid);\n+        auto locked_chain = chain().lock();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271571388",
      "id" : 271571388,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTU3MTM4OA==",
      "original_commit_id" : "322638ca7bd5859cc49be694e9f8f9c7923572dc",
      "original_position" : 11,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 221994261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271571388",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for looking at this @ariard. My view is different from @ryanofsky's. I think rather than trying to maintain existing behaviour, we should use this interface tidyup to better define the relationship between the wallet and the node, ie to answer the question \"What services should the node offer to the wallet?\" Currently, the node exposes two methods to the wallet for sending a transaction:\r\n\r\n1. `submitToMemoryPool(const CTransactionRef& tx, CAmount absurd_fee, CValidationState& state)`: Add transaction to memory pool if the transaction fee is below the amount specified by absurd_fee. Returns false if the transaction could not be added due to the fee or for another reason. This is only called in `CWalletTx::AcceptToMemoryPool()`\r\n2. `relayTransaction(const uint256& txid)`: adds the txid to the INV queue for each peer. This is only called in `CWalletTx::RelayWalletTransaction()` (which also calls `CWalletTx::AcceptToMemoryPool()`)\r\n\r\nNote that to relay an INV for the transaction to peers (2), the transaction must already be in the mempool. See:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/ba54342c9dd3f2e5cdeed9ac57f1924f0d885cc6/src/net_processing.cpp#L3804\r\n\r\n`relayTransaction()` is only ever called if `InMempool() || AcceptToMemoryPool()` is true.\r\n\r\nThe wallet currently calls `CWalletTx::AcceptToMemoryPool()` in the following places:\r\n\r\n1a. In `CWallet::ReacceptWalletTransactions()`, called after the wallet has started up to make sure that its transactions are added to the mempool at start.\r\n2a. In `CWalletTx::RelayWalletTransaction()`, mentioned above.\r\n3a. In `CWallet::CommitTransaction()`, when a transaction is to be broadcast to the network for the first time.\r\n\r\nThe wallet currently calls `CWalletTx::RelayWalletTransaction()` in the following places:\r\n\r\n2a. In `CWallet::ResendWalletTransactions()`, called on a timer to rebroadcast unconfirmed transactions.\r\n2b. In `CWallet::CommitTransaction()`, but only if the transaction is successfully added to the mempool.\r\n\r\nI've been thinking about this in the context of the wallet rebroadcasting transactions (see discussion here: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2019/bitcoin-core-dev.2019-03-29-19.10.log.html#l-9). My view now is that the wallet should not have any access to relay functionality. It should be able to submit transactions to the node's mempool, and it should then be the mempool's responsibility to broadcast/rebroadcast the transaction (see comment here: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2019/bitcoin-core-dev.2019-03-29-19.10.log.html#l-92). That seems like a much cleaner divide of responsibility.\r\n\r\nThis PR seems like a simplification in terms of combining `submitToMemoryPool()` and `relayTransaction()` into a single method, but I don't think that it moves us towards a point where the node<->wallet interface is simpler to understand.",
      "created_at" : "2019-04-03T20:32:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-479647663",
      "id" : 479647663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTY0NzY2Mw==",
      "updated_at" : "2019-04-03T20:32:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479647663",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "John are you just saying that this PR does not go far enough, or that it does something bad or makes things more complicated?\r\n\r\nI haven't looked closely enough at this yet but if it exposes one node method node instead of two, and reduces the amount of code without changing behavior, it would seem like a strict improvement. Is your rebroadcast proposal harder to implement after this PR?",
      "created_at" : "2019-04-03T20:45:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-479652022",
      "id" : 479652022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTY1MjAyMg==",
      "updated_at" : "2019-04-03T20:45:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479652022",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I haven't looked closely enough at this yet but if it exposes one node method node instead of two, and reduces the amount of code without changing behavior, it would seem like a strict improvement.\r\n\r\nIt does reduce the number of node methods exposed, but does so by adding a flag to one of them which toggles the behaviour. I'm not sure if that counts as a simplification, or it's just moving the complexity around. I'm also not sure if this maintains existing behaviour. For example, the `GetDepthInMainChain(locked_chain) == 0` in `RelayWalletTransaction()` seems to have gone and not been replaced by anything.",
      "created_at" : "2019-04-03T21:24:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-479664520",
      "id" : 479664520,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTY2NDUyMA==",
      "updated_at" : "2019-04-03T21:24:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479664520",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271969421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271969421"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-03T23:22:35Z",
      "diff_hunk" : "@@ -210,8 +205,7 @@ class NotificationsHandlerImpl : public Handler, CValidationInterface\n         // should be able to be removed entirely if `ResendWalletTransactions`\n         // is replaced by a wallet timer as suggested in\n         // https://github.com/bitcoin/bitcoin/issues/15619",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271969421",
      "id" : 271969421,
      "in_reply_to_id" : 271570034,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTk2OTQyMQ==",
      "original_commit_id" : "322638ca7bd5859cc49be694e9f8f9c7923572dc",
      "original_position" : 24,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 222499264,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271969421",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I kinda agree with @jnewbery here, wallet shouldn't have access to relay, because if so it may add complexity of proper tx rebroadcasting tracking, notably in privacy-enhancing context in referenced discussions ?\r\nHave taken GetDepthInMainChain and IsCoinbase out, because seems it's cleaner to let the mempool do the checks, in AcceptToMemoryPoolWorker if I understand it well. And not multiply spurious wallet accesses to chain state.\r\nSorry scope of PR wasn't clear, would happily change it to underline the real issue I guess.",
      "created_at" : "2019-04-03T23:55:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-479699376",
      "id" : 479699376,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ3OTY5OTM3Ng==",
      "updated_at" : "2019-04-03T23:57:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479699376",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271980722"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271980722"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes on my own, should be corrected!",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-04T00:24:54Z",
      "diff_hunk" : "@@ -1867,43 +1867,44 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     if (!fBroadcastTransactions)\n         return;\n     std::map<int64_t, CWalletTx*> mapSorted;\n-\n-    // Sort pending wallet transactions based on their initial wallet insertion order\n-    for (std::pair<const uint256, CWalletTx>& item : mapWallet)\n     {\n-        const uint256& wtxid = item.first;\n-        CWalletTx& wtx = item.second;\n-        assert(wtx.GetHash() == wtxid);\n+        auto locked_chain = chain().lock();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r271980722",
      "id" : 271980722,
      "in_reply_to_id" : 271571388,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTk4MDcyMg==",
      "original_commit_id" : "322638ca7bd5859cc49be694e9f8f9c7923572dc",
      "original_position" : 11,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 222512751,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271980722",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-04-09T12:41:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-481234548",
      "id" : 481234548,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTIzNDU0OA==",
      "updated_at" : "2019-04-09T12:41:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481234548",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ariard or John, what are next steps? Should this PR be closed and revisited in the future if rebroadcasting is improved? Should the current code comment about this be removed or clarified?\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/f3ecf3025f82f84d42ec463990ff787647cc7bf5/src/interfaces/chain.h#L52-L54",
      "created_at" : "2019-04-09T14:48:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-481283974",
      "id" : 481283974,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTI4Mzk3NA==",
      "updated_at" : "2019-04-09T14:48:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481283974",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't want to discourage @ariard from making this change if you both think it's an improvement over the existing code. It certainly doesn't preclude us from makeing the changes that I proposed in https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-479647663 at a later time. @ariard - if you think this should still go in, can you perhaps break up the PR into commits and justify any changes (eg why remove `GetDepthInMainChain` and `IsCoinbase` from `RelayWalletTransaction()`.\r\n\r\nNote that this conflicts with my #15728 which I think is a useful tidy-up in itself.",
      "created_at" : "2019-04-09T15:06:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-481291686",
      "id" : 481291686,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTI5MTY4Ng==",
      "updated_at" : "2019-04-09T15:06:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481291686",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Okay will keep working on it by breaking up the PR and justify changes. Had a look on #15728, IMO conflicts should be solved smoothly once yours get into it.\r\n@jnewbery  I've taken notes of your proposed changes of preventing wallet access to relay functionality but as far as I understand it would need first implementation of relay responsibility  in mempool, something not submit yet ? Once that done, removing relay from this code path seems really straightforward changes.",
      "created_at" : "2019-04-09T22:30:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-481464427",
      "id" : 481464427,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MTQ2NDQyNw==",
      "updated_at" : "2019-04-09T22:30:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481464427",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased, splitted the commits, added justifications. Note that I removed relay flag in BroadcastTransaction, if I get John opinion submitting tx to memory pool should imply relay if it's a valid one.",
      "created_at" : "2019-04-11T16:22:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-482185015",
      "id" : 482185015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MjE4NTAxNQ==",
      "updated_at" : "2019-04-11T16:22:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482185015",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274531705"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274531705"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This interface function doesn't need to expose the `wait_callback` bool since it's only ever called with `wait_callback` set to `false`.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-11T17:08:47Z",
      "diff_hunk" : "@@ -301,10 +296,13 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, uint256& txid, std::string& err_string, const CAmount& absurdfee, bool wait_callback) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274531705",
      "id" : 274531705,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDUzMTcwNQ==",
      "original_commit_id" : "56286233ab8dbb67eafba495d62ef0cd20043a2e",
      "original_position" : 26,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 225670184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274531705",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274532313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274532313"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: `return TransactionError::OK == err;`",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-11T17:09:23Z",
      "diff_hunk" : "@@ -301,10 +296,13 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, uint256& txid, std::string& err_string, const CAmount& absurdfee, bool wait_callback) override\n     {\n-        CInv inv(MSG_TX, txid);\n-        g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+        const TransactionError err = BroadcastTransaction(tx, txid, err_string, absurdfee, wait_callback);\n+        if (TransactionError::OK == err) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274532313",
      "id" : 274532313,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDUzMjMxMw==",
      "original_commit_id" : "56286233ab8dbb67eafba495d62ef0cd20043a2e",
      "original_position" : 31,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 225670184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274532313",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274543462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274543462"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I still have a doubt on BroadcastTransaction HaveChain check behavior. ```HaveChain = !existingCoin.IsSpent()``` doesn't mean if tx is in chain, but all of its outputs has been spent, we accept it again to mempool/relay ?",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-11T17:28:15Z",
      "diff_hunk" : "@@ -1892,30 +1891,27 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string err_string;\n+        wtx.SubmitMemoryPoolAndRelay(err_string);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274543462",
      "id" : 274543462,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDU0MzQ2Mg==",
      "original_commit_id" : "56286233ab8dbb67eafba495d62ef0cd20043a2e",
      "original_position" : 31,
      "path" : "src/wallet/wallet.cpp",
      "position" : 31,
      "pull_request_review_id" : 225679355,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274543462",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274545185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274545185"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think you can make this slightly clearer by adding a local variable `callback_set{false}`, setting it to `true` in the first `else if (wait_callback)` block, removing the second `else if (wait_callback)` block, and then testing for it here.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-11T17:32:52Z",
      "diff_hunk" : "@@ -55,15 +55,17 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n         }\n     } else if (fHaveChain) {\n         return TransactionError::ALREADY_IN_CHAIN;\n-    } else {\n+    } else if (wait_callback) {\n         // Make sure we don't block forever if re-sending\n         // a transaction already in mempool.\n         promise.set_value();\n     }\n \n     } // cs_main\n \n-    promise.get_future().wait();\n+    if (wait_callback) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274545185",
      "id" : 274545185,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDU0NTE4NQ==",
      "original_commit_id" : "56286233ab8dbb67eafba495d62ef0cd20043a2e",
      "original_position" : 32,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 225670184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274545185",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274545864"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274545864"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I'd prefer to standardise on the name `max_tx_fee` (rather than `max_tx_fee`, `highfee`, `absurdfee`, etc)",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-11T17:34:37Z",
      "diff_hunk" : "@@ -189,8 +180,10 @@ class Chain\n     //! Check if transaction has descendants in mempool.\n     virtual bool hasDescendantsInMempool(const uint256& txid) = 0;\n \n-    //! Relay transaction.\n-    virtual void relayTransaction(const uint256& txid) = 0;\n+    //! Transaction is added to memory pool, if the transdaction fee is below the\n+    //! amount specified by absurdfee, and broadcast to all nodes.\n+    //! Return false if the transaction could not be added due to the fee or for another reason.\n+    virtual bool broadcastTransaction(const CTransactionRef& tx, uint256& txid, std::string& err_string, const CAmount& absurdfee, bool wait_callback) = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274545864",
      "id" : 274545864,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDU0NTg2NA==",
      "original_commit_id" : "56286233ab8dbb67eafba495d62ef0cd20043a2e",
      "original_position" : 32,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 225670184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274545864",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274915099"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274915099"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah yes, thanks done",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T13:52:40Z",
      "diff_hunk" : "@@ -301,10 +296,13 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, uint256& txid, std::string& err_string, const CAmount& absurdfee, bool wait_callback) override",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274915099",
      "id" : 274915099,
      "in_reply_to_id" : 274531705,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDkxNTA5OQ==",
      "original_commit_id" : "56286233ab8dbb67eafba495d62ef0cd20043a2e",
      "original_position" : 26,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 226092323,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274915099",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274915158"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274915158"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T13:52:49Z",
      "diff_hunk" : "@@ -301,10 +296,13 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, uint256& txid, std::string& err_string, const CAmount& absurdfee, bool wait_callback) override\n     {\n-        CInv inv(MSG_TX, txid);\n-        g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+        const TransactionError err = BroadcastTransaction(tx, txid, err_string, absurdfee, wait_callback);\n+        if (TransactionError::OK == err) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274915158",
      "id" : 274915158,
      "in_reply_to_id" : 274532313,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDkxNTE1OA==",
      "original_commit_id" : "56286233ab8dbb67eafba495d62ef0cd20043a2e",
      "original_position" : 31,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 226092412,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274915158",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274915414"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274915414"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Okay, also add params comments on it in.h",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T13:53:25Z",
      "diff_hunk" : "@@ -55,15 +55,17 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n         }\n     } else if (fHaveChain) {\n         return TransactionError::ALREADY_IN_CHAIN;\n-    } else {\n+    } else if (wait_callback) {\n         // Make sure we don't block forever if re-sending\n         // a transaction already in mempool.\n         promise.set_value();\n     }\n \n     } // cs_main\n \n-    promise.get_future().wait();\n+    if (wait_callback) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274915414",
      "id" : 274915414,
      "in_reply_to_id" : 274545185,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDkxNTQxNA==",
      "original_commit_id" : "56286233ab8dbb67eafba495d62ef0cd20043a2e",
      "original_position" : 32,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 226092745,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274915414",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274949378"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274949378"
         }
      },
      "author_association" : "MEMBER",
      "body" : "no tabs please :)",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T15:09:53Z",
      "diff_hunk" : "@@ -301,10 +296,10 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, uint256& txid, std::string& err_string, const CAmount& max_tx_fee, bool relay) override\n     {\n-        CInv inv(MSG_TX, txid);\n-        g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+        const TransactionError err = BroadcastTransaction(tx, txid, err_string, max_tx_fee, relay, false);\n+\treturn TransactionError::OK == err;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274949378",
      "id" : 274949378,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk0OTM3OA==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 31,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274949378",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274949818"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274949818"
         }
      },
      "author_association" : "MEMBER",
      "body" : "s/broadcast to all nodes/broadcast to all peers if relay is set to true/",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T15:10:42Z",
      "diff_hunk" : "@@ -189,8 +180,10 @@ class Chain\n     //! Check if transaction has descendants in mempool.\n     virtual bool hasDescendantsInMempool(const uint256& txid) = 0;\n \n-    //! Relay transaction.\n-    virtual void relayTransaction(const uint256& txid) = 0;\n+    //! Transaction is added to memory pool, if the transdaction fee is below the\n+    //! amount specified by max_tx_fee, and broadcast to all nodes.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274949818",
      "id" : 274949818,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk0OTgxOA==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 30,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274949818",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274950390"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274950390"
         }
      },
      "author_association" : "MEMBER",
      "body" : "tab",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T15:12:01Z",
      "diff_hunk" : "@@ -52,6 +53,7 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n             CallFunctionInValidationInterfaceQueue([&promise] {\n                 promise.set_value();\n             });\n+\t    callback_set = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274950390",
      "id" : 274950390,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk1MDM5MA==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 35,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274950390",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274950634"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274950634"
         }
      },
      "author_association" : "MEMBER",
      "body" : "you can remove the `else` block in LL60-64",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T15:12:34Z",
      "diff_hunk" : "@@ -63,7 +65,9 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n \n     } // cs_main\n \n-    promise.get_future().wait();\n+    if (callback_set) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274950634",
      "id" : 274950634,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk1MDYzNA==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 44,
      "path" : "src/node/transaction.cpp",
      "position" : 82,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274950634",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274950864"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274950864"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: two spaces",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T15:13:09Z",
      "diff_hunk" : "@@ -16,9 +16,11 @@\n  * @param[in]  tx the transaction to broadcast\n  * @param[out] &txid the txid of the transaction, if successfully broadcast\n  * @param[out] &err_string reference to std::string to fill with error string if available\n- * @param[in]  highfee Reject txs with fees higher than this (if 0, accept any fee)\n+ * @param[in]  max_tx_fee reject txs with fees higher than this (if 0, accept any fee)\n+ * @param[in]  relay flag if both mempool insertion and p2p relay  are requested",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274950864",
      "id" : 274950864,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk1MDg2NA==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 6,
      "path" : "src/node/transaction.h",
      "position" : null,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274950864",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274951244"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274951244"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: don't include unnecessary whitespace changes",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T15:14:01Z",
      "diff_hunk" : "@@ -36,7 +36,6 @@\n #include <validation.h>\n #include <validationinterface.h>\n \n-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274951244",
      "id" : 274951244,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk1MTI0NA==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 4,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274951244",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274951887"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274951887"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You've added the `relay` bool but you're not using it.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T15:15:32Z",
      "diff_hunk" : "@@ -13,10 +13,11 @@\n \n #include <future>\n \n-TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx, std::string& err_string, const CAmount& highfee)\n+TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx, std::string& err_string, const CAmount& max_tx_fee, bool relay, bool wait_callback)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274951887",
      "id" : 274951887,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk1MTg4Nw==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 5,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274951887",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274952597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274952597"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This comment is incorrect. The function will just return immediately if `fBroadcastTransactions` is set to false.\r\n\r\n(I think this is from a bad rebase. The comment was changed to `Pass this transaction to the node to relay to its peers` in a more recent version.)",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T15:17:05Z",
      "diff_hunk" : "@@ -515,11 +515,8 @@ class CWalletTx : public CMerkleTx\n \n     int64_t GetTxTime() const;\n \n-    // Pass this transaction to the node to relay to its peers\n-    bool RelayWalletTransaction(interfaces::Chain::Lock& locked_chain);\n-\n-    /** Pass this transaction to the mempool. Fails if absolute fee exceeds absurd fee. */\n-    bool AcceptToMemoryPool(interfaces::Chain::Lock& locked_chain, CValidationState& state);\n+    // SubmitMemoryPoolAndRelay may only be called if fBroadcastTransactions!",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274952597",
      "id" : 274952597,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk1MjU5Nw==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 9,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274952597",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274953029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274953029"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is a behaviour change. You're relaying the transaction instead of just adding it to the mempool.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T15:18:17Z",
      "diff_hunk" : "@@ -1892,30 +1891,27 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string err_string;\n+        wtx.SubmitMemoryPoolAndRelay(err_string);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274953029",
      "id" : 274953029,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk1MzAyOQ==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 17,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274953029",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274955618"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274955618"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Review note: This is a minor behaviour change. `chain().broadcastTransaction()` could return false if `BroadcastTransaction()` returned `TransactionError::P2P_DISABLED` (ie the transaction is added to the mempool but not relayed).",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T15:24:40Z",
      "diff_hunk" : "@@ -1892,30 +1891,27 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string err_string;\n+        wtx.SubmitMemoryPoolAndRelay(err_string);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;\n-    // Don't relay transactions that aren't accepted to the mempool\n-    CValidationState unused_state;\n-    if (!InMempool() && !AcceptToMemoryPool(locked_chain, unused_state)) return false;\n-    // Don't try to relay if the node is not connected to the p2p network\n-    if (!pwallet->chain().p2pEnabled()) return false;\n-\n-    // Try to relay the transaction\n-    pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n-    pwallet->chain().relayTransaction(GetHash());\n+\n+    // Submit transaction to mempool for relay\n+    pwallet->WalletLogPrintf(\"Submitting wtx %s to mempool for relay\\n\", GetHash().ToString());\n+    uint256 txid;\n+    // We must set fInMempool here - while it will be re-set to true by the\n+    // entered-mempool callback, if we did not there would be a race where a\n+    // user could call sendmoney in a loop and hit spurious out of funds errors\n+    // because we think that this newly generated transaction's change is\n+    // unavailable as we're not yet aware that it is in the mempool.\n+    if (!(fInMempool |= pwallet->chain().broadcastTransaction(tx, txid, err_string, pwallet->chain().maxTxFee(), false))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274955618",
      "id" : 274955618,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk1NTYxOA==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274955618",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274956702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274956702"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Consider naming thuis `unused_err_string` to indicate that we throw it away without using it.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T15:27:08Z",
      "diff_hunk" : "@@ -1892,30 +1891,27 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string err_string;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274956702",
      "id" : 274956702,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk1NjcwMg==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 16,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274956702",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274956745"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274956745"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Consider naming thuis `unused_err_string` to indicate that we throw it away without using it.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T15:27:15Z",
      "diff_hunk" : "@@ -2160,9 +2155,10 @@ void CWallet::ResendWalletTransactions()\n             // only rebroadcast unconfirmed txes older than 5 minutes before the\n             // last block was found\n             if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n-            if (wtx.RelayWalletTransaction(*locked_chain)) ++relayed_tx_count;\n+            std::string err_string;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274956745",
      "id" : 274956745,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk1Njc0NQ==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 69,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274956745",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274989316"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274989316"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is also a behaviour change because previously, `AcceptToMemoryPool()` would return `false` if `submitToMemoryPool()` returned `false`. Now, if `fInMempool` is set to `true` but `broadcastTransaction()` returns `false`, then it'll return `true`.\r\n\r\nI think it makes sense to stick with the structure of the old `AcceptToMemoryPool()` function.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T17:01:25Z",
      "diff_hunk" : "@@ -1892,30 +1891,27 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string err_string;\n+        wtx.SubmitMemoryPoolAndRelay(err_string);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;\n-    // Don't relay transactions that aren't accepted to the mempool\n-    CValidationState unused_state;\n-    if (!InMempool() && !AcceptToMemoryPool(locked_chain, unused_state)) return false;\n-    // Don't try to relay if the node is not connected to the p2p network\n-    if (!pwallet->chain().p2pEnabled()) return false;\n-\n-    // Try to relay the transaction\n-    pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n-    pwallet->chain().relayTransaction(GetHash());\n+\n+    // Submit transaction to mempool for relay\n+    pwallet->WalletLogPrintf(\"Submitting wtx %s to mempool for relay\\n\", GetHash().ToString());\n+    uint256 txid;\n+    // We must set fInMempool here - while it will be re-set to true by the\n+    // entered-mempool callback, if we did not there would be a race where a\n+    // user could call sendmoney in a loop and hit spurious out of funds errors\n+    // because we think that this newly generated transaction's change is\n+    // unavailable as we're not yet aware that it is in the mempool.\n+    if (!(fInMempool |= pwallet->chain().broadcastTransaction(tx, txid, err_string, pwallet->chain().maxTxFee(), false))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274989316",
      "id" : 274989316,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk4OTMxNg==",
      "original_commit_id" : "94623bd79106bc2e614f5c5a79e7495fbb843576",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274989316",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274991614"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274991614"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks for adding comments. I'd add to the description of the `wait_callback` param that this **must not** be set while cs_main, cs_mempool or cs_wallet is being held or there'll be a deadlock.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-12T17:08:51Z",
      "diff_hunk" : "@@ -16,9 +16,11 @@\n  * @param[in]  tx the transaction to broadcast\n  * @param[out] &txid the txid of the transaction, if successfully broadcast\n  * @param[out] &err_string reference to std::string to fill with error string if available\n- * @param[in]  highfee Reject txs with fees higher than this (if 0, accept any fee)\n+ * @param[in]  max_tx_fee reject txs with fees higher than this (if 0, accept any fee)\n+ * @param[in]  relay flag if both mempool insertion and p2p relay  are requested\n+ * @param[in]  wait_callback, wait until callbacks have been processed to avoid stale result due to a sequentially RPC",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274991614",
      "id" : 274991614,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDk5MTYxNA==",
      "original_commit_id" : "94623bd79106bc2e614f5c5a79e7495fbb843576",
      "original_position" : 7,
      "path" : "src/node/transaction.h",
      "position" : null,
      "pull_request_review_id" : 226137291,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274991614",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275122038"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275122038"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, configured my editor accordingly!",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-13T15:26:08Z",
      "diff_hunk" : "@@ -301,10 +296,10 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, uint256& txid, std::string& err_string, const CAmount& max_tx_fee, bool relay) override\n     {\n-        CInv inv(MSG_TX, txid);\n-        g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+        const TransactionError err = BroadcastTransaction(tx, txid, err_string, max_tx_fee, relay, false);\n+\treturn TransactionError::OK == err;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275122038",
      "id" : 275122038,
      "in_reply_to_id" : 274949378,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTEyMjAzOA==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 31,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 226357237,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275122038",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275122126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275122126"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Corrected but was to align with other descriptions?",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-13T15:28:45Z",
      "diff_hunk" : "@@ -16,9 +16,11 @@\n  * @param[in]  tx the transaction to broadcast\n  * @param[out] &txid the txid of the transaction, if successfully broadcast\n  * @param[out] &err_string reference to std::string to fill with error string if available\n- * @param[in]  highfee Reject txs with fees higher than this (if 0, accept any fee)\n+ * @param[in]  max_tx_fee reject txs with fees higher than this (if 0, accept any fee)\n+ * @param[in]  relay flag if both mempool insertion and p2p relay  are requested",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275122126",
      "id" : 275122126,
      "in_reply_to_id" : 274950864,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTEyMjEyNg==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 6,
      "path" : "src/node/transaction.h",
      "position" : null,
      "pull_request_review_id" : 226357320,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275122126",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275122154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275122154"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What's your take on returning a pair of boolean from chain().broadcastTransaction() to encode both mempool/relay results ?",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-13T15:30:01Z",
      "diff_hunk" : "@@ -1892,30 +1891,27 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string err_string;\n+        wtx.SubmitMemoryPoolAndRelay(err_string);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;\n-    // Don't relay transactions that aren't accepted to the mempool\n-    CValidationState unused_state;\n-    if (!InMempool() && !AcceptToMemoryPool(locked_chain, unused_state)) return false;\n-    // Don't try to relay if the node is not connected to the p2p network\n-    if (!pwallet->chain().p2pEnabled()) return false;\n-\n-    // Try to relay the transaction\n-    pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n-    pwallet->chain().relayTransaction(GetHash());\n+\n+    // Submit transaction to mempool for relay\n+    pwallet->WalletLogPrintf(\"Submitting wtx %s to mempool for relay\\n\", GetHash().ToString());\n+    uint256 txid;\n+    // We must set fInMempool here - while it will be re-set to true by the\n+    // entered-mempool callback, if we did not there would be a race where a\n+    // user could call sendmoney in a loop and hit spurious out of funds errors\n+    // because we think that this newly generated transaction's change is\n+    // unavailable as we're not yet aware that it is in the mempool.\n+    if (!(fInMempool |= pwallet->chain().broadcastTransaction(tx, txid, err_string, pwallet->chain().maxTxFee(), false))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275122154",
      "id" : 275122154,
      "in_reply_to_id" : 274955618,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTEyMjE1NA==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 226357358,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275122154",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275122174"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275122174"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Okay back to AcceptToMemoryPool structure",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-13T15:30:33Z",
      "diff_hunk" : "@@ -1892,30 +1891,27 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string err_string;\n+        wtx.SubmitMemoryPoolAndRelay(err_string);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;\n-    // Don't relay transactions that aren't accepted to the mempool\n-    CValidationState unused_state;\n-    if (!InMempool() && !AcceptToMemoryPool(locked_chain, unused_state)) return false;\n-    // Don't try to relay if the node is not connected to the p2p network\n-    if (!pwallet->chain().p2pEnabled()) return false;\n-\n-    // Try to relay the transaction\n-    pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n-    pwallet->chain().relayTransaction(GetHash());\n+\n+    // Submit transaction to mempool for relay\n+    pwallet->WalletLogPrintf(\"Submitting wtx %s to mempool for relay\\n\", GetHash().ToString());\n+    uint256 txid;\n+    // We must set fInMempool here - while it will be re-set to true by the\n+    // entered-mempool callback, if we did not there would be a race where a\n+    // user could call sendmoney in a loop and hit spurious out of funds errors\n+    // because we think that this newly generated transaction's change is\n+    // unavailable as we're not yet aware that it is in the mempool.\n+    if (!(fInMempool |= pwallet->chain().broadcastTransaction(tx, txid, err_string, pwallet->chain().maxTxFee(), false))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275122174",
      "id" : 275122174,
      "in_reply_to_id" : 274989316,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTEyMjE3NA==",
      "original_commit_id" : "94623bd79106bc2e614f5c5a79e7495fbb843576",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 226357378,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275122174",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @jnewbery for the review and sorry for the ugly commit split. I think I've addressed all your points except this one : https://github.com/bitcoin/bitcoin/pull/15713#discussion_r274955618 ?",
      "created_at" : "2019-04-13T15:32:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-482822062",
      "id" : 482822062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MjgyMjA2Mg==",
      "updated_at" : "2019-04-13T15:32:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482822062",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275374247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275374247"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: Should be \"transaction\" :-)",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-15T14:00:17Z",
      "diff_hunk" : "@@ -189,8 +180,10 @@ class Chain\n     //! Check if transaction has descendants in mempool.\n     virtual bool hasDescendantsInMempool(const uint256& txid) = 0;\n \n-    //! Relay transaction.\n-    virtual void relayTransaction(const uint256& txid) = 0;\n+    //! Transaction is added to memory pool, if the transdaction fee is below the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275374247",
      "id" : 275374247,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTM3NDI0Nw==",
      "original_commit_id" : "602e38d0a79c3e7cf72740fb92261e3d66642ce3",
      "original_position" : 29,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 226662919,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275374247",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275378505"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275378505"
         }
      },
      "author_association" : "MEMBER",
      "body" : "sorry, I meant the two spaces between `relay` and `are`. I think two spaces at the front to align with the other params is fine.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-15T14:09:18Z",
      "diff_hunk" : "@@ -16,9 +16,11 @@\n  * @param[in]  tx the transaction to broadcast\n  * @param[out] &txid the txid of the transaction, if successfully broadcast\n  * @param[out] &err_string reference to std::string to fill with error string if available\n- * @param[in]  highfee Reject txs with fees higher than this (if 0, accept any fee)\n+ * @param[in]  max_tx_fee reject txs with fees higher than this (if 0, accept any fee)\n+ * @param[in]  relay flag if both mempool insertion and p2p relay  are requested",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275378505",
      "id" : 275378505,
      "in_reply_to_id" : 274950864,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTM3ODUwNQ==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 6,
      "path" : "src/node/transaction.h",
      "position" : null,
      "pull_request_review_id" : 226668418,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275378505",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275381581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275381581"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In the existing code there's not a return code for `chain::relayTransaction()`. I think it's fine for the new `broadcastTransaction` interface method to only return `false` if the transaction failed to get into the mempool, and treat `TransactionError::P2P_DISABLED` as success. That way, `fInMempool` will get updated in exactly the same way as the existing code.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-15T14:15:42Z",
      "diff_hunk" : "@@ -1892,30 +1891,27 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string err_string;\n+        wtx.SubmitMemoryPoolAndRelay(err_string);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;\n-    // Don't relay transactions that aren't accepted to the mempool\n-    CValidationState unused_state;\n-    if (!InMempool() && !AcceptToMemoryPool(locked_chain, unused_state)) return false;\n-    // Don't try to relay if the node is not connected to the p2p network\n-    if (!pwallet->chain().p2pEnabled()) return false;\n-\n-    // Try to relay the transaction\n-    pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n-    pwallet->chain().relayTransaction(GetHash());\n+\n+    // Submit transaction to mempool for relay\n+    pwallet->WalletLogPrintf(\"Submitting wtx %s to mempool for relay\\n\", GetHash().ToString());\n+    uint256 txid;\n+    // We must set fInMempool here - while it will be re-set to true by the\n+    // entered-mempool callback, if we did not there would be a race where a\n+    // user could call sendmoney in a loop and hit spurious out of funds errors\n+    // because we think that this newly generated transaction's change is\n+    // unavailable as we're not yet aware that it is in the mempool.\n+    if (!(fInMempool |= pwallet->chain().broadcastTransaction(tx, txid, err_string, pwallet->chain().maxTxFee(), false))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275381581",
      "id" : 275381581,
      "in_reply_to_id" : 274955618,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTM4MTU4MQ==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 226672473,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275381581",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275381858"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275381858"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You now have `locked_chain` as a parameter, even though it's unused in this function in the final commit.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-15T14:16:23Z",
      "diff_hunk" : "@@ -1892,32 +1891,29 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string unused_err_string;\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false, locked_chain);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay, interfaces::Chain::Lock& locked_chain)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275381858",
      "id" : 275381858,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTM4MTg1OA==",
      "original_commit_id" : "602e38d0a79c3e7cf72740fb92261e3d66642ce3",
      "original_position" : 22,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 226672846,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275381858",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Still a couple of minor issues to fix up.",
      "created_at" : "2019-04-15T14:17:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-483270158",
      "id" : 483270158,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4MzI3MDE1OA==",
      "updated_at" : "2019-04-15T14:17:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483270158",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275797359"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275797359"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good, added ```TransactionError::P2P_DISABLED == err``` check in broadcastTransaction interface",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-16T13:30:34Z",
      "diff_hunk" : "@@ -1892,30 +1891,27 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string err_string;\n+        wtx.SubmitMemoryPoolAndRelay(err_string);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;\n-    // Don't relay transactions that aren't accepted to the mempool\n-    CValidationState unused_state;\n-    if (!InMempool() && !AcceptToMemoryPool(locked_chain, unused_state)) return false;\n-    // Don't try to relay if the node is not connected to the p2p network\n-    if (!pwallet->chain().p2pEnabled()) return false;\n-\n-    // Try to relay the transaction\n-    pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n-    pwallet->chain().relayTransaction(GetHash());\n+\n+    // Submit transaction to mempool for relay\n+    pwallet->WalletLogPrintf(\"Submitting wtx %s to mempool for relay\\n\", GetHash().ToString());\n+    uint256 txid;\n+    // We must set fInMempool here - while it will be re-set to true by the\n+    // entered-mempool callback, if we did not there would be a race where a\n+    // user could call sendmoney in a loop and hit spurious out of funds errors\n+    // because we think that this newly generated transaction's change is\n+    // unavailable as we're not yet aware that it is in the mempool.\n+    if (!(fInMempool |= pwallet->chain().broadcastTransaction(tx, txid, err_string, pwallet->chain().maxTxFee(), false))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275797359",
      "id" : 275797359,
      "in_reply_to_id" : 274955618,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTc5NzM1OQ==",
      "original_commit_id" : "bcbc316b6bc5b0e4ce427ab93e604497705e2aaf",
      "original_position" : 50,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 227194054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275797359",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275797481"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275797481"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, good catch!",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-16T13:30:49Z",
      "diff_hunk" : "@@ -189,8 +180,10 @@ class Chain\n     //! Check if transaction has descendants in mempool.\n     virtual bool hasDescendantsInMempool(const uint256& txid) = 0;\n \n-    //! Relay transaction.\n-    virtual void relayTransaction(const uint256& txid) = 0;\n+    //! Transaction is added to memory pool, if the transdaction fee is below the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275797481",
      "id" : 275797481,
      "in_reply_to_id" : 275374247,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTc5NzQ4MQ==",
      "original_commit_id" : "602e38d0a79c3e7cf72740fb92261e3d66642ce3",
      "original_position" : 29,
      "path" : "src/interfaces/chain.h",
      "position" : null,
      "pull_request_review_id" : 227194209,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275797481",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275797688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275797688"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes rebase issue, should be solved",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-16T13:31:14Z",
      "diff_hunk" : "@@ -1892,32 +1891,29 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string unused_err_string;\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false, locked_chain);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay, interfaces::Chain::Lock& locked_chain)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275797688",
      "id" : 275797688,
      "in_reply_to_id" : 275381858,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTc5NzY4OA==",
      "original_commit_id" : "602e38d0a79c3e7cf72740fb92261e3d66642ce3",
      "original_position" : 22,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 227194462,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275797688",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275864733"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275864733"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: sort includes",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-16T15:40:51Z",
      "diff_hunk" : "@@ -30,6 +30,7 @@\n #include <util/system.h>\n #include <validation.h>\n #include <validationinterface.h>\n+#include <node/transaction.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275864733",
      "id" : 275864733,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTg2NDczMw==",
      "original_commit_id" : "b857c21ffd093142aab983491c97ac5a37861405",
      "original_position" : 4,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 227280903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275864733",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275865799"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275865799"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: could include an inline comment for the last parameter:\r\n\r\n```c++\r\nconst TransactionError err = BroadcastTransaction(tx, txid, err_string, max_tx_fee, relay, /*wait_callback*/ false);\r\n```",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-16T15:42:52Z",
      "diff_hunk" : "@@ -301,10 +296,10 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, uint256& txid, std::string& err_string, const CAmount& max_tx_fee, bool relay) override\n     {\n-        CInv inv(MSG_TX, txid);\n-        g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+        const TransactionError err = BroadcastTransaction(tx, txid, err_string, max_tx_fee, relay, false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275865799",
      "id" : 275865799,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTg2NTc5OQ==",
      "original_commit_id" : "b857c21ffd093142aab983491c97ac5a37861405",
      "original_position" : 30,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 227280903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275865799",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275866879"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275866879"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should this also be within the `if (relay)` block? Returning a `TransactionError::P2P_DISABLED` error when the caller hasn't asked for the transaction to be relayed seems wrong.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-16T15:45:02Z",
      "diff_hunk" : "@@ -52,27 +53,28 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n             CallFunctionInValidationInterfaceQueue([&promise] {\n                 promise.set_value();\n             });\n+            callback_set = true;\n         }\n     } else if (fHaveChain) {\n         return TransactionError::ALREADY_IN_CHAIN;\n-    } else {\n-        // Make sure we don't block forever if re-sending\n-        // a transaction already in mempool.\n-        promise.set_value();\n     }\n \n     } // cs_main\n \n-    promise.get_future().wait();\n+    if (callback_set) {\n+        promise.get_future().wait();\n+    }\n \n     if (!g_connman) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275866879",
      "id" : 275866879,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTg2Njg3OQ==",
      "original_commit_id" : "b857c21ffd093142aab983491c97ac5a37861405",
      "original_position" : 52,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 227280903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275866879",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275870210"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275870210"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See comment in interface/chain.h. I recommend you remove the unused uint256 from the interface method.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-16T15:51:40Z",
      "diff_hunk" : "@@ -1892,32 +1891,29 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string unused_err_string;\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;\n-    // Don't relay transactions that aren't accepted to the mempool\n-    CValidationState unused_state;\n-    if (!InMempool() && !AcceptToMemoryPool(locked_chain, unused_state)) return false;\n-    // Don't try to relay if the node is not connected to the p2p network\n-    if (!pwallet->chain().p2pEnabled()) return false;\n-\n-    // Try to relay the transaction\n-    pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n-    pwallet->chain().relayTransaction(GetHash());\n \n-    return true;\n+    // Submit transaction to mempool for relay\n+    pwallet->WalletLogPrintf(\"Submitting wtx %s to mempool for relay\\n\", GetHash().ToString());\n+    uint256 txid;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275870210",
      "id" : 275870210,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTg3MDIxMA==",
      "original_commit_id" : "b857c21ffd093142aab983491c97ac5a37861405",
      "original_position" : 45,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 227280903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275870210",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275871197"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275871197"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You could remove the `hashTx` parameter from this interface method. The only caller of the method supplies an unused uint256 and then throws it away.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-16T15:53:37Z",
      "diff_hunk" : "@@ -13,10 +13,11 @@\n \n #include <future>\n \n-TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx, std::string& err_string, const CAmount& highfee)\n+TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx, std::string& err_string, const CAmount& max_tx_fee, bool relay, bool wait_callback)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275871197",
      "id" : 275871197,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTg3MTE5Nw==",
      "original_commit_id" : "b857c21ffd093142aab983491c97ac5a37861405",
      "original_position" : 5,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 227280903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275871197",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275872607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275872607"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is exactly right, but I think it could do with a comment. Something like:\r\n\r\n```\r\n// Chain clients only care about failures to accept the tx to the mempool. Disregard non-mempool related failures\r\n// Note: this will need to be updated if BroadcastTransaction() is updated to return other non-mempool failures\r\n// that Chain clients do not need to know about.\r\n```",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-04-16T15:56:36Z",
      "diff_hunk" : "@@ -301,10 +296,10 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, uint256& txid, std::string& err_string, const CAmount& max_tx_fee, bool relay) override\n     {\n-        CInv inv(MSG_TX, txid);\n-        g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+        const TransactionError err = BroadcastTransaction(tx, txid, err_string, max_tx_fee, relay, false);\n+        return TransactionError::OK == err || TransactionError::P2P_DISABLED == err;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r275872607",
      "id" : 275872607,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTg3MjYwNw==",
      "original_commit_id" : "b857c21ffd093142aab983491c97ac5a37861405",
      "original_position" : 31,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 227280903,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275872607",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "a00303c updated with @jnewbery last review comments, specially removing unused uint256 from BroadcastTransaction interface\r\n\r\nAnd \"Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved.\"",
      "created_at" : "2019-04-17T13:11:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-484077995",
      "id" : 484077995,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDA3Nzk5NQ==",
      "updated_at" : "2019-04-17T14:09:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484077995",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Looks like this might also help a little bit with #14912, since right now it's adding another broadcastTransaction method (a7678372bd8b4ef4ce33a406559a0ea860ce1abf).",
      "created_at" : "2019-04-17T16:48:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-484171393",
      "id" : 484171393,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDE3MTM5Mw==",
      "updated_at" : "2019-04-17T16:48:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484171393",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Looks good. utACK e5b0fe904a9c6186b8273c61e93ee1538418b245\r\n\r\n(I was only suggesting to remove the uint256 from the interface `broadcastTransaction()` method, not the `BroadcastTransaction()` function in node/transaction, but removing it there is also fine I think.)",
      "created_at" : "2019-04-17T17:10:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-484179422",
      "id" : 484179422,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NDE3OTQyMg==",
      "updated_at" : "2019-04-17T17:10:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484179422",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-04-27T13:35:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-487286730",
      "id" : 487286730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4NzI4NjczMA==",
      "updated_at" : "2019-04-27T13:35:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487286730",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@Sjors you mean erasing errors which seems to be used by no one right now (like TransactionError::MEMPOOL_ERROR) and just return a generic error for these cases ? Or returning errors from `broadcastTransactions` instead of a boolean and let caller to filter ?",
      "created_at" : "2019-05-02T15:58:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-488730104",
      "id" : 488730104,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4ODczMDEwNA==",
      "updated_at" : "2019-05-02T15:58:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/488730104",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ariard I think it should return a `TransactionError`. You can filter it before returning, based on what you don't want callers to see. But not based on what's \"used by no one right now\".",
      "created_at" : "2019-05-12T13:11:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-491594719",
      "id" : 491594719,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MTU5NDcxOQ==",
      "updated_at" : "2019-05-12T13:11:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/491594719",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> You can filter it before returning, based on what you don't want callers to see. But not based on what's \"used by no one right now\".\r\n\r\nI think it's fine to have the `broadcastTransaction` interface return what's most useful to our wallet right now. This interface is meant to be private, so having it customized to our needs is ok, and if future changes to the wallet require the interface method to be changed to return more information, that's also fine.",
      "created_at" : "2019-05-16T15:35:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-493118627",
      "id" : 493118627,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MzExODYyNw==",
      "updated_at" : "2019-05-16T15:35:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493118627",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Okay, well let it as of `0a1f4d9` with `broadcastTransaction` returning a boolean. But I checked failures, and seems like #15696 is causing functional test failures even locally..",
      "created_at" : "2019-05-17T04:03:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-493311594",
      "id" : 493311594,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MzMxMTU5NA==",
      "updated_at" : "2019-05-17T04:03:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493311594",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Boolean is fine for my purposes as well.",
      "created_at" : "2019-05-17T14:46:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-493480749",
      "id" : 493480749,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MzQ4MDc0OQ==",
      "updated_at" : "2019-05-17T14:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493480749",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2019-05-17T15:49:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-493503140",
      "id" : 493503140,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MzUwMzE0MA==",
      "updated_at" : "2019-05-17T15:49:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493503140",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased.",
      "created_at" : "2019-05-18T01:29:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-493638023",
      "id" : 493638023,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ5MzYzODAyMw==",
      "updated_at" : "2019-05-18T01:29:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493638023",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r306122680"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306122680"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Might be better to do:\r\n\r\n```\r\nswitch(err) {\r\n    case TransactionError::OK:\r\n    case TransactionError::P2P_DISABLED:\r\n        return true;\r\n    case TransactionError::MISSING_INPUTS:\r\n    case TransactionError::ALREADY_IN_CHAIN:\r\n    case TransactionError::MEMPOOL_REJECTED:\r\n    case TransactionError::MEMPOOL_ERROR:\r\n    case TransactionError::INVALID_PSBT:\r\n    case TransactionError::PSBT_MISMATCH:\r\n    case TransactionError::SIGHASH_MISMATCH:\r\n    case TransactionError::MAX_FEE_EXCEEDED:\r\n        return false;\r\n}\r\n```\r\n\r\nThat way you get a warning if there's other values added that you haven't handled.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-23T04:20:06Z",
      "diff_hunk" : "@@ -295,6 +296,14 @@ class ChainImpl : public Chain\n         CInv inv(MSG_TX, txid);\n         g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n     }\n+    bool broadcastTransaction(const CTransactionRef& tx, std::string& err_string, const CAmount& max_tx_fee, bool relay) override\n+    {\n+        const TransactionError err = BroadcastTransaction(tx, err_string, max_tx_fee, relay, /*wait_callback*/ false);\n+        // Chain clients only care about failures to accept the tx to the mempool. Disregard non-mempool related failures.\n+        // Note: this will need to be updated if BroadcastTransactions() is updated to return other non-mempool failures\n+        // that Chain clients do not need to know about.\n+        return TransactionError::OK == err || TransactionError::P2P_DISABLED == err;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r306122680",
      "id" : 306122680,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjEyMjY4MA==",
      "original_commit_id" : "f2da7210c8e3f9ab5a5dac7b3c39bf9f0252faf7",
      "original_position" : 18,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 265164523,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306122680",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r306398323"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306398323"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think it really matters too much. If new TransactionError values are added that the wallet needs to handle, this interface can be updated.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-23T15:52:28Z",
      "diff_hunk" : "@@ -295,6 +296,14 @@ class ChainImpl : public Chain\n         CInv inv(MSG_TX, txid);\n         g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n     }\n+    bool broadcastTransaction(const CTransactionRef& tx, std::string& err_string, const CAmount& max_tx_fee, bool relay) override\n+    {\n+        const TransactionError err = BroadcastTransaction(tx, err_string, max_tx_fee, relay, /*wait_callback*/ false);\n+        // Chain clients only care about failures to accept the tx to the mempool. Disregard non-mempool related failures.\n+        // Note: this will need to be updated if BroadcastTransactions() is updated to return other non-mempool failures\n+        // that Chain clients do not need to know about.\n+        return TransactionError::OK == err || TransactionError::P2P_DISABLED == err;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r306398323",
      "id" : 306398323,
      "in_reply_to_id" : 306122680,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjM5ODMyMw==",
      "original_commit_id" : "f2da7210c8e3f9ab5a5dac7b3c39bf9f0252faf7",
      "original_position" : 18,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 265509328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306398323",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 67c7db7a22e18cee5364652b9a1ab102c9fb1858",
      "created_at" : "2019-07-23T23:01:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-514414547",
      "id" : 514414547,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDQxNDU0Nw==",
      "updated_at" : "2019-07-23T23:01:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514414547",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r306571420"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306571420"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "could this use the relay txn method in [net_processing](https://github.com/bitcoin/bitcoin/blob/master/src/net_processing.cpp#L1308)? ",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-23T23:14:37Z",
      "diff_hunk" : "@@ -52,27 +53,27 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n             CallFunctionInValidationInterfaceQueue([&promise] {\n                 promise.set_value();\n             });\n+            callback_set = true;\n         }\n     } else if (fHaveChain) {\n         return TransactionError::ALREADY_IN_CHAIN;\n-    } else {\n-        // Make sure we don't block forever if re-sending\n-        // a transaction already in mempool.\n-        promise.set_value();\n     }\n \n     } // cs_main\n \n-    promise.get_future().wait();\n-\n-    if (!g_connman) {\n-        return TransactionError::P2P_DISABLED;\n+    if (callback_set) {\n+        promise.get_future().wait();\n     }\n \n-    CInv inv(MSG_TX, hashTx);\n-    g_connman->ForEachNode([&inv](CNode* pnode) {\n-        pnode->PushInventory(inv);\n-    });\n+    if (relay) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r306571420",
      "id" : 306571420,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjU3MTQyMA==",
      "original_commit_id" : "67c7db7a22e18cee5364652b9a1ab102c9fb1858",
      "original_position" : 60,
      "path" : "src/node/transaction.cpp",
      "position" : 89,
      "pull_request_review_id" : 265724227,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306571420",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r306934366"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306934366"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "why not, see #16452 because it can go on its own",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-24T17:35:47Z",
      "diff_hunk" : "@@ -52,27 +53,27 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n             CallFunctionInValidationInterfaceQueue([&promise] {\n                 promise.set_value();\n             });\n+            callback_set = true;\n         }\n     } else if (fHaveChain) {\n         return TransactionError::ALREADY_IN_CHAIN;\n-    } else {\n-        // Make sure we don't block forever if re-sending\n-        // a transaction already in mempool.\n-        promise.set_value();\n     }\n \n     } // cs_main\n \n-    promise.get_future().wait();\n-\n-    if (!g_connman) {\n-        return TransactionError::P2P_DISABLED;\n+    if (callback_set) {\n+        promise.get_future().wait();\n     }\n \n-    CInv inv(MSG_TX, hashTx);\n-    g_connman->ForEachNode([&inv](CNode* pnode) {\n-        pnode->PushInventory(inv);\n-    });\n+    if (relay) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r306934366",
      "id" : 306934366,
      "in_reply_to_id" : 306571420,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjkzNDM2Ng==",
      "original_commit_id" : "67c7db7a22e18cee5364652b9a1ab102c9fb1858",
      "original_position" : 60,
      "path" : "src/node/transaction.cpp",
      "position" : 89,
      "pull_request_review_id" : 266176167,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306934366",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK 67c7db7a22e18cee5364652b9a1ab102c9fb1858. Carefully read the code, built & ran all tests.",
      "created_at" : "2019-07-24T19:08:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-514761226",
      "id" : 514761226,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDc2MTIyNg==",
      "updated_at" : "2019-07-24T19:08:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514761226",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "New tip at c1351e2 with @jnewbery BroadcastTransaction cleaning commit",
      "created_at" : "2019-07-24T20:21:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-514785253",
      "id" : 514785253,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDc4NTI1Mw==",
      "updated_at" : "2019-07-24T20:21:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514785253",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK c1351e28fd2e38a928b322456038198aa0e847bd\r\n\r\n(but I don't think it's necessary to take that commit and invalidate @amitiuttarwar and @jonatack reviews)",
      "created_at" : "2019-07-24T20:27:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-514787009",
      "id" : 514787009,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNDc4NzAwOQ==",
      "updated_at" : "2019-07-24T20:27:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514787009",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 976d1e4858df00c031ef2c07790862948dbc04cf, all tests pass, local git range-diff shows no change in previously-ACKed commits.\r\n\r\nNew commit makes doc-only changes in `src/node/transaction.h` and cleans up the BroadcastTransaction logic in `src/node/transaction.cpp` + improves code documentation.\r\n\r\nI found https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307917040 helpful in reviewing the last commit -- this info could be added to the code documentation.\r\n\r\nIIUC the logic changes in 976d1e4858 are\r\n\r\nbefore\r\n```\r\nif txn not in mempool and coin does not exist in the current UTXO set\r\n  submit txn\r\nelse if coin exists in the current UTXO set\r\n  return \"already in chain\" txn error\r\nelse\r\n  ensure we don't block if re-sending a transaction already in mempool\r\nend\r\n```\r\n\r\nnow\r\n```\r\nexit loop and return \"already in chain\" txn error if coin exists in the current UTXO set\r\n\r\nif txn not in mempool\r\n  submit txn\r\nend\r\n```\r\n\r\nEDIT: upgraded from partial ACK to ACK after re-review based on https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307917040.",
      "created_at" : "2019-07-25T15:10:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-515083797",
      "id" : 515083797,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNTA4Mzc5Nw==",
      "updated_at" : "2019-07-27T10:13:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515083797",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 976d1e485",
      "created_at" : "2019-07-25T15:32:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-515092624",
      "id" : 515092624,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNTA5MjYyNA==",
      "updated_at" : "2019-07-25T15:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515092624",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307813745"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307813745"
         }
      },
      "author_association" : "MEMBER",
      "body" : "87cca293d5b127e43e35d866167893454658eacd\r\n\r\nnit, could add a comment on the last 2 args.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-26T16:15:24Z",
      "diff_hunk" : "@@ -807,14 +807,13 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n         max_raw_tx_fee = fr.GetFee((weight+3)/4);\n     }\n \n-    uint256 txid;\n     std::string err_string;\n-    const TransactionError err = BroadcastTransaction(tx, txid, err_string, max_raw_tx_fee);\n+    const TransactionError err = BroadcastTransaction(tx, err_string, max_raw_tx_fee, true, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307813745",
      "id" : 307813745,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzgxMzc0NQ==",
      "original_commit_id" : "87cca293d5b127e43e35d866167893454658eacd",
      "original_position" : 7,
      "path" : "src/rpc/rawtransaction.cpp",
      "position" : null,
      "pull_request_review_id" : 267279496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307813745",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307814364"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307814364"
         }
      },
      "author_association" : "MEMBER",
      "body" : "87cca293d5b127e43e35d866167893454658eacd\r\n\r\njust noting that this must be changed in #16452 to `RelayTransaction`.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-26T16:17:07Z",
      "diff_hunk" : "@@ -52,27 +53,27 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n             CallFunctionInValidationInterfaceQueue([&promise] {\n                 promise.set_value();\n             });\n+            callback_set = true;\n         }\n     } else if (fHaveChain) {\n         return TransactionError::ALREADY_IN_CHAIN;\n-    } else {\n-        // Make sure we don't block forever if re-sending\n-        // a transaction already in mempool.\n-        promise.set_value();\n     }\n \n     } // cs_main\n \n-    promise.get_future().wait();\n-\n-    if (!g_connman) {\n-        return TransactionError::P2P_DISABLED;\n+    if (callback_set) {\n+        promise.get_future().wait();\n     }\n \n-    CInv inv(MSG_TX, hashTx);\n-    g_connman->ForEachNode([&inv](CNode* pnode) {\n-        pnode->PushInventory(inv);\n-    });\n+    if (relay) {\n+        if (!g_connman) {\n+            return TransactionError::P2P_DISABLED;\n+        }\n+        CInv inv(MSG_TX, hashTx);\n+        g_connman->ForEachNode([&inv](CNode* pnode) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307814364",
      "id" : 307814364,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzgxNDM2NA==",
      "original_commit_id" : "87cca293d5b127e43e35d866167893454658eacd",
      "original_position" : 65,
      "path" : "src/node/transaction.cpp",
      "position" : null,
      "pull_request_review_id" : 267279496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307814364",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307814764"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307814764"
         }
      },
      "author_association" : "MEMBER",
      "body" : "87cca293d5b127e43e35d866167893454658eacd\r\n\r\nI think a better description/use-case is needed here.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-26T16:18:14Z",
      "diff_hunk" : "@@ -14,11 +14,13 @@\n  * Broadcast a transaction\n  *\n  * @param[in]  tx the transaction to broadcast\n- * @param[out] &txid the txid of the transaction, if successfully broadcast\n  * @param[out] &err_string reference to std::string to fill with error string if available\n- * @param[in]  highfee Reject txs with fees higher than this (if 0, accept any fee)\n+ * @param[in]  max_tx_fee reject txs with fees higher than this (if 0, accept any fee)\n+ * @param[in]  relay flag if both mempool insertion and p2p relay are requested\n+ * @param[in]  wait_callback, wait until callbacks have been processed to avoid stale result due to a sequentially RPC.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307814764",
      "id" : 307814764,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzgxNDc2NA==",
      "original_commit_id" : "87cca293d5b127e43e35d866167893454658eacd",
      "original_position" : 9,
      "path" : "src/node/transaction.h",
      "position" : 19,
      "pull_request_review_id" : 267279496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307814764",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307830440"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307830440"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@ariard wrote:\r\n\r\n> I still have a doubt on BroadcastTransaction HaveChain check behavior. `HaveChain = !existingCoin.IsSpent()` doesn't mean if tx is in chain, but all of its outputs has been spent, we accept it again to mempool/relay ?\r\n\r\n`IsSpent()` is \"misleadingly\" named. Because we use `AccessCoin`: `Return a reference to Coin in the cache, or a pruned one if not found.`. Pruned in this case means all its `CTxOut` are `IsNull()`, and `IsSpent()` just calls `IsNull()`.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-26T17:03:11Z",
      "diff_hunk" : "@@ -1892,30 +1891,27 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string err_string;\n+        wtx.SubmitMemoryPoolAndRelay(err_string);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307830440",
      "id" : 307830440,
      "in_reply_to_id" : 274543462,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzgzMDQ0MA==",
      "original_commit_id" : "56286233ab8dbb67eafba495d62ef0cd20043a2e",
      "original_position" : 31,
      "path" : "src/wallet/wallet.cpp",
      "position" : 31,
      "pull_request_review_id" : 267301039,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307830440",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307831700"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307831700"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: add comment explaining `IsSpent()` doesn't mean the coin is spent; it means the output doesn't exist. So if the output does exist, then this transaction exists in the chain, i.e. it's already confirmed.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-26T17:07:09Z",
      "diff_hunk" : "@@ -21,15 +21,15 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, std::string& err\n \n     { // cs_main scope\n     LOCK(cs_main);\n+    // If the transaction is already confirmed in the chain, don't do anything\n+    // and return early.\n     CCoinsViewCache &view = *pcoinsTip;\n-    bool fHaveChain = false;\n-    for (size_t o = 0; !fHaveChain && o < tx->vout.size(); o++) {\n+    for (size_t o = 0; o < tx->vout.size(); o++) {\n         const Coin& existingCoin = view.AccessCoin(COutPoint(hashTx, o));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307831700",
      "id" : 307831700,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzgzMTcwMA==",
      "original_commit_id" : "976d1e4858df00c031ef2c07790862948dbc04cf",
      "original_position" : 10,
      "path" : "src/node/transaction.cpp",
      "position" : 21,
      "pull_request_review_id" : 267301039,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307831700",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307837903"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307837903"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think that the comments here: https://github.com/bitcoin/bitcoin/pull/15713/files#diff-3f841b5d557d579ef74c43ff582b16ebR16 and here: https://github.com/bitcoin/bitcoin/pull/15713/files#diff-bf669d26afe05f397f3f01bad0c1ff0eR52 are sufficient.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-26T17:24:52Z",
      "diff_hunk" : "@@ -14,11 +14,13 @@\n  * Broadcast a transaction\n  *\n  * @param[in]  tx the transaction to broadcast\n- * @param[out] &txid the txid of the transaction, if successfully broadcast\n  * @param[out] &err_string reference to std::string to fill with error string if available\n- * @param[in]  highfee Reject txs with fees higher than this (if 0, accept any fee)\n+ * @param[in]  max_tx_fee reject txs with fees higher than this (if 0, accept any fee)\n+ * @param[in]  relay flag if both mempool insertion and p2p relay are requested\n+ * @param[in]  wait_callback, wait until callbacks have been processed to avoid stale result due to a sequentially RPC.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307837903",
      "id" : 307837903,
      "in_reply_to_id" : 307814764,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzgzNzkwMw==",
      "original_commit_id" : "87cca293d5b127e43e35d866167893454658eacd",
      "original_position" : 9,
      "path" : "src/node/transaction.h",
      "position" : 19,
      "pull_request_review_id" : 267310416,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307837903",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I'm not sure if `broadcastTransaction` should suppress `TransactionError::P2P_DISABLED`. \r\nFrom the old discussion with @jnewbery above I gather that this is the case because the old `relayTransaction()` didn't have a return code, and so that we can update `fInMempool` conveniently.\r\n\r\nHowever, the old `CWalletTx::RelayWalletTransaction()`  had an explicite check for P2P (`if (!pwallet->chain().p2pEnabled()) return false;`) so if the node was not connected to the p2p network it would not call `relayTransaction()` and return false.  Its replacement function SubmitMemoryPoolAndRelay doesn't have this check and will return true in this case, so this looks like a change in behavior ( minor because its return value is only used for log messages as far as I can see).\r\n",
      "created_at" : "2019-07-26T20:31:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-515589990",
      "id" : 515589990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNTU4OTk5MA==",
      "updated_at" : "2019-07-26T20:31:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515589990",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307917040"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307917040"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks @Sjors . I agree with you that `IsSpent()` is a misleading name. A more accurate name would be `DoesNotExist()`. Negating the function here determines whether the coin exists in the current UTXO set.\r\n\r\nThe check in `BroadcastTransaction()` is an optimization: if any of the outputs from the tx still exist in the UTXO set then the tx must be confirmed. If the coin has been confirmed but it's outputs don't exist, then it'll fail later (because its inputs can't exist if it has already been spent).\r\n\r\nThis check in `RelayWalletTransaction()` is also an optimization. If the transaction has been confirmed (or a conflicting transaction has been confirmed), then the block hash will be recorded in the `CMerkleTx`, and we can check in the chain whether that block exists.\r\n\r\nAn alternative to removing this call to `GetDepthInMainChain()` would be to merge https://github.com/bitcoin/bitcoin/pull/15931 first, which removes `GetDepthInMainChain`'s requirement on locking the chain.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-26T21:34:21Z",
      "diff_hunk" : "@@ -1892,30 +1891,27 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string err_string;\n+        wtx.SubmitMemoryPoolAndRelay(err_string);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307917040",
      "id" : 307917040,
      "in_reply_to_id" : 274543462,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzkxNzA0MA==",
      "original_commit_id" : "56286233ab8dbb67eafba495d62ef0cd20043a2e",
      "original_position" : 31,
      "path" : "src/wallet/wallet.cpp",
      "position" : 31,
      "pull_request_review_id" : 267413328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307917040",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307917133"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307917133"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree that a comment here would be helpful in a follow-up commit.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-26T21:34:45Z",
      "diff_hunk" : "@@ -21,15 +21,15 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, std::string& err\n \n     { // cs_main scope\n     LOCK(cs_main);\n+    // If the transaction is already confirmed in the chain, don't do anything\n+    // and return early.\n     CCoinsViewCache &view = *pcoinsTip;\n-    bool fHaveChain = false;\n-    for (size_t o = 0; !fHaveChain && o < tx->vout.size(); o++) {\n+    for (size_t o = 0; o < tx->vout.size(); o++) {\n         const Coin& existingCoin = view.AccessCoin(COutPoint(hashTx, o));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307917133",
      "id" : 307917133,
      "in_reply_to_id" : 307831700,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzkxNzEzMw==",
      "original_commit_id" : "976d1e4858df00c031ef2c07790862948dbc04cf",
      "original_position" : 10,
      "path" : "src/node/transaction.cpp",
      "position" : 21,
      "pull_request_review_id" : 267413448,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307917133",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for review @mzumsande, I agree that's a light change in behavior even it was only logs. IMO `p2pEnabled` is just there when wallet is init before `g_connman`, and a quick look at `init.cpp` I'm not even sure that's something possible. In future works, I'm thinking to remove `p2pEnabled` once we have the wallet registering its current height with Chain interface at `handleNotifications`. Wallet will only submit tx to the mempool and shouldn't be aware of P2P state. ",
      "created_at" : "2019-07-26T23:41:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-515629909",
      "id" : 515629909,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNTYyOTkwOQ==",
      "updated_at" : "2019-07-26T23:41:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515629909",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307941112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307941112"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes agree better documentation and refactoring of BroadcastTransaction can be pushed further in latter work.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-26T23:49:46Z",
      "diff_hunk" : "@@ -21,15 +21,15 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, std::string& err\n \n     { // cs_main scope\n     LOCK(cs_main);\n+    // If the transaction is already confirmed in the chain, don't do anything\n+    // and return early.\n     CCoinsViewCache &view = *pcoinsTip;\n-    bool fHaveChain = false;\n-    for (size_t o = 0; !fHaveChain && o < tx->vout.size(); o++) {\n+    for (size_t o = 0; o < tx->vout.size(); o++) {\n         const Coin& existingCoin = view.AccessCoin(COutPoint(hashTx, o));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307941112",
      "id" : 307941112,
      "in_reply_to_id" : 307831700,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzk0MTExMg==",
      "original_commit_id" : "976d1e4858df00c031ef2c07790862948dbc04cf",
      "original_position" : 10,
      "path" : "src/node/transaction.cpp",
      "position" : 21,
      "pull_request_review_id" : 267441732,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307941112",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307960658"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307960658"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Thanks @Sjors . I agree with you that `IsSpent()` is a misleading name. A more accurate name would be `DoesNotExist()`. Negating the function here determines whether the coin exists in the current UTXO set.\r\n> \r\n> The check in `BroadcastTransaction()` is an optimization: if any of the outputs from the tx still exist in the UTXO set then the tx must be confirmed. If the coin has been confirmed but it's outputs don't exist, then it'll fail later (because its inputs can't exist if it has already been spent).\r\n\r\nIt might be useful to enhance the code documentation added in 976d1e485 with this information (if it isn't expected to change soon). I found it v helpful to understanding the `!existingCoin.IsSpent())` optimisation.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-27T10:09:21Z",
      "diff_hunk" : "@@ -1892,30 +1891,27 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string err_string;\n+        wtx.SubmitMemoryPoolAndRelay(err_string);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307960658",
      "id" : 307960658,
      "in_reply_to_id" : 274543462,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzk2MDY1OA==",
      "original_commit_id" : "56286233ab8dbb67eafba495d62ef0cd20043a2e",
      "original_position" : 31,
      "path" : "src/wallet/wallet.cpp",
      "position" : 31,
      "pull_request_review_id" : 267463969,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307960658",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308697103"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308697103"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why not assert this with an `AssertLockNotHeld`?",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T12:41:51Z",
      "diff_hunk" : "@@ -11,14 +11,21 @@\n #include <util/error.h>\n \n /**\n- * Broadcast a transaction\n+ * Submit a transaction to the mempool and (optionally) relay it to all P2P peers.\n+ *\n+ * Mempool submission can be synchronous (will await mempool entry notification\n+ * over the CValidationInterface) or asynchronous (will submit and not wait for\n+ * notification), depending on the value of wait_callback. wait_callback MUST\n+ * NOT be set while cs_main, cs_mempool or cs_wallet are held to avoid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308697103",
      "id" : 308697103,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODY5NzEwMw==",
      "original_commit_id" : "976d1e4858df00c031ef2c07790862948dbc04cf",
      "original_position" : 10,
      "path" : "src/node/transaction.h",
      "position" : 10,
      "pull_request_review_id" : 268361386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308697103",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308796603"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308796603"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This counts txs even if p2p is disabled? Previously we wouldn't.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T15:39:40Z",
      "diff_hunk" : "@@ -2353,7 +2352,8 @@ void CWallet::ResendWalletTransactions()\n             // only rebroadcast unconfirmed txes older than 5 minutes before the\n             // last block was found\n             if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n-            if (wtx.RelayWalletTransaction(*locked_chain)) ++relayed_tx_count;\n+            std::string unused_err_string;\n+            if (wtx.SubmitMemoryPoolAndRelay(unused_err_string, true, *locked_chain)) ++relayed_tx_count;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308796603",
      "id" : 308796603,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODc5NjYwMw==",
      "original_commit_id" : "655170a3bde17fe3c990d4392d29f33847bbb5fe",
      "original_position" : 60,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 268361386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308796603",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308798753"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308798753"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would be nice to update the comment here. This has been forgotten in 6ef86c92e7fcba866160d7a346fb260d7e4ab5bb\r\n\r\nI guess you can just copy the commit body or something.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T15:43:51Z",
      "diff_hunk" : "@@ -2140,17 +2139,17 @@ bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n     if (isAbandoned()) return false;\n     // Don't relay conflicted or already confirmed transactions\n     if (GetDepthInMainChain(locked_chain) != 0) return false;\n-    // Don't relay transactions that aren't accepted to the mempool\n-    CValidationState unused_state;\n-    if (!InMempool() && !AcceptToMemoryPool(locked_chain, unused_state)) return false;\n-    // Don't try to relay if the node is not connected to the p2p network\n-    if (!pwallet->chain().p2pEnabled()) return false;\n-\n-    // Try to relay the transaction\n-    pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n-    pwallet->chain().relayTransaction(GetHash());\n \n-    return true;\n+    // Submit transaction to mempool for relay\n+    pwallet->WalletLogPrintf(\"Submitting wtx %s to mempool for relay\\n\", GetHash().ToString());\n+    // We must set fInMempool here - while it will be re-set to true by the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308798753",
      "id" : 308798753,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODc5ODc1Mw==",
      "original_commit_id" : "655170a3bde17fe3c990d4392d29f33847bbb5fe",
      "original_position" : 43,
      "path" : "src/wallet/wallet.cpp",
      "position" : 45,
      "pull_request_review_id" : 268361386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308798753",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308801356"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308801356"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is this trivial check removed? It avoids a lookup in the utxo database, no?",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T15:48:48Z",
      "diff_hunk" : "@@ -2125,20 +2125,16 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         std::string unused_err_string;\n-        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false, locked_chain);\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false);\n     }\n }\n \n-bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay, interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308801356",
      "id" : 308801356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODgwMTM1Ng==",
      "original_commit_id" : "06519838e0d11a348a442dec4cb131650162b78d",
      "original_position" : 15,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 268361386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308801356",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308805488"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308805488"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Looks like you are replacing a map lookup (`LookupBlockIndex`) with an utxo lookup. So going from memory to disk. Is this going to have a performance penalty?",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T15:56:04Z",
      "diff_hunk" : "@@ -2125,32 +2124,28 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string unused_err_string;\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308805488",
      "id" : 308805488,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODgwNTQ4OA==",
      "original_commit_id" : "976d1e4858df00c031ef2c07790862948dbc04cf",
      "original_position" : 31,
      "path" : "src/wallet/wallet.cpp",
      "position" : 31,
      "pull_request_review_id" : 268361386,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308805488",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308930876"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308930876"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, we should do that in `sendrawtransaction`, which is out of scope for this PR (but glad to address it in another PR if you think that's relevant)",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T20:37:31Z",
      "diff_hunk" : "@@ -11,14 +11,21 @@\n #include <util/error.h>\n \n /**\n- * Broadcast a transaction\n+ * Submit a transaction to the mempool and (optionally) relay it to all P2P peers.\n+ *\n+ * Mempool submission can be synchronous (will await mempool entry notification\n+ * over the CValidationInterface) or asynchronous (will submit and not wait for\n+ * notification), depending on the value of wait_callback. wait_callback MUST\n+ * NOT be set while cs_main, cs_mempool or cs_wallet are held to avoid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308930876",
      "id" : 308930876,
      "in_reply_to_id" : 308697103,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODkzMDg3Ng==",
      "original_commit_id" : "976d1e4858df00c031ef2c07790862948dbc04cf",
      "original_position" : 10,
      "path" : "src/node/transaction.h",
      "position" : 10,
      "pull_request_review_id" : 268652920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308930876",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308935636"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308935636"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess we should recall it `submitted_count`  ? Wallet is just submitting to mempool and that's mempool job to pass it to P2P. We don't dissociate errors here anyways",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T20:48:56Z",
      "diff_hunk" : "@@ -2353,7 +2352,8 @@ void CWallet::ResendWalletTransactions()\n             // only rebroadcast unconfirmed txes older than 5 minutes before the\n             // last block was found\n             if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n-            if (wtx.RelayWalletTransaction(*locked_chain)) ++relayed_tx_count;\n+            std::string unused_err_string;\n+            if (wtx.SubmitMemoryPoolAndRelay(unused_err_string, true, *locked_chain)) ++relayed_tx_count;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308935636",
      "id" : 308935636,
      "in_reply_to_id" : 308796603,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODkzNTYzNg==",
      "original_commit_id" : "655170a3bde17fe3c990d4392d29f33847bbb5fe",
      "original_position" : 60,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 268659074,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308935636",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308939116"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308939116"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You mean compare to the one at beginning of ATMP ?",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T20:57:11Z",
      "diff_hunk" : "@@ -2125,20 +2125,16 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         std::string unused_err_string;\n-        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false, locked_chain);\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false);\n     }\n }\n \n-bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay, interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308939116",
      "id" : 308939116,
      "in_reply_to_id" : 308801356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODkzOTExNg==",
      "original_commit_id" : "06519838e0d11a348a442dec4cb131650162b78d",
      "original_position" : 15,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 268663608,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308939116",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308940852"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308940852"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Noted if I have to rebase, or if I can throw it in one of my other PR touching this code",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T21:01:20Z",
      "diff_hunk" : "@@ -2140,17 +2139,17 @@ bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n     if (isAbandoned()) return false;\n     // Don't relay conflicted or already confirmed transactions\n     if (GetDepthInMainChain(locked_chain) != 0) return false;\n-    // Don't relay transactions that aren't accepted to the mempool\n-    CValidationState unused_state;\n-    if (!InMempool() && !AcceptToMemoryPool(locked_chain, unused_state)) return false;\n-    // Don't try to relay if the node is not connected to the p2p network\n-    if (!pwallet->chain().p2pEnabled()) return false;\n-\n-    // Try to relay the transaction\n-    pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n-    pwallet->chain().relayTransaction(GetHash());\n \n-    return true;\n+    // Submit transaction to mempool for relay\n+    pwallet->WalletLogPrintf(\"Submitting wtx %s to mempool for relay\\n\", GetHash().ToString());\n+    // We must set fInMempool here - while it will be re-set to true by the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308940852",
      "id" : 308940852,
      "in_reply_to_id" : 308798753,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODk0MDg1Mg==",
      "original_commit_id" : "655170a3bde17fe3c990d4392d29f33847bbb5fe",
      "original_position" : 43,
      "path" : "src/wallet/wallet.cpp",
      "position" : 45,
      "pull_request_review_id" : 268665830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308940852",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308944420"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308944420"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`BroadcastTransaction` does a convenience check that is only used in the sendrawtransaction (to notify a user of a transaction that is already confirmed). This is done by looking up if at least one of the outputs is in the utxo set. For the purpose of the wallet, this check is completely useless. Previously we wouldn't call it and now we do (even for coinbase txs), where it can be trivially avoided.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T21:10:36Z",
      "diff_hunk" : "@@ -2125,20 +2125,16 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         std::string unused_err_string;\n-        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false, locked_chain);\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false);\n     }\n }\n \n-bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay, interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308944420",
      "id" : 308944420,
      "in_reply_to_id" : 308801356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODk0NDQyMA==",
      "original_commit_id" : "06519838e0d11a348a442dec4cb131650162b78d",
      "original_position" : 15,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 268670550,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308944420",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308944940"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308944940"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You mean relying on `AccessCoin` in `BroadcastTransaction`. Isn't `CCoinsViewCache` a in-memory cache? Is the wallet broadcasting that much transactions so it can be a performance penalty ? `GetDepthInMainChain` is also currently locking the chain via `getBlockHeight`",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T21:11:57Z",
      "diff_hunk" : "@@ -2125,32 +2124,28 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string unused_err_string;\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308944940",
      "id" : 308944940,
      "in_reply_to_id" : 308805488,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODk0NDk0MA==",
      "original_commit_id" : "976d1e4858df00c031ef2c07790862948dbc04cf",
      "original_position" : 31,
      "path" : "src/wallet/wallet.cpp",
      "position" : 31,
      "pull_request_review_id" : 268671214,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308944940",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308944970"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308944970"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't care. It is only a log print, so can be done later. Though, I wanted to point out the change in behavior, since you tagged this with \"refactor\".",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T21:12:03Z",
      "diff_hunk" : "@@ -2353,7 +2352,8 @@ void CWallet::ResendWalletTransactions()\n             // only rebroadcast unconfirmed txes older than 5 minutes before the\n             // last block was found\n             if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n-            if (wtx.RelayWalletTransaction(*locked_chain)) ++relayed_tx_count;\n+            std::string unused_err_string;\n+            if (wtx.SubmitMemoryPoolAndRelay(unused_err_string, true, *locked_chain)) ++relayed_tx_count;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308944970",
      "id" : 308944970,
      "in_reply_to_id" : 308796603,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODk0NDk3MA==",
      "original_commit_id" : "655170a3bde17fe3c990d4392d29f33847bbb5fe",
      "original_position" : 60,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 268671262,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308944970",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308975881"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308975881"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes sorry for that, I modified the PR a bit since opening, so it's no more a refactor I guess..",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T22:47:44Z",
      "diff_hunk" : "@@ -2353,7 +2352,8 @@ void CWallet::ResendWalletTransactions()\n             // only rebroadcast unconfirmed txes older than 5 minutes before the\n             // last block was found\n             if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n-            if (wtx.RelayWalletTransaction(*locked_chain)) ++relayed_tx_count;\n+            std::string unused_err_string;\n+            if (wtx.SubmitMemoryPoolAndRelay(unused_err_string, true, *locked_chain)) ++relayed_tx_count;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308975881",
      "id" : 308975881,
      "in_reply_to_id" : 308796603,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODk3NTg4MQ==",
      "original_commit_id" : "655170a3bde17fe3c990d4392d29f33847bbb5fe",
      "original_position" : 60,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 268708431,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308975881",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308977611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308977611"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah yes, should the wallet try to check as much as confirmation rules it can, like the coinbase one ? It's a layer violation, but that's trivial as you said. ",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-30T22:54:11Z",
      "diff_hunk" : "@@ -2125,20 +2125,16 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         std::string unused_err_string;\n-        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false, locked_chain);\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false);\n     }\n }\n \n-bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay, interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308977611",
      "id" : 308977611,
      "in_reply_to_id" : 308801356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODk3NzYxMQ==",
      "original_commit_id" : "06519838e0d11a348a442dec4cb131650162b78d",
      "original_position" : 15,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 268710500,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308977611",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309003567"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309003567"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why is it a layer violation of the wallet to call a [pure method](https://en.wikipedia.org/wiki/Pure_function) on one of it's txs?",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-31T01:06:39Z",
      "diff_hunk" : "@@ -2125,20 +2125,16 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         std::string unused_err_string;\n-        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false, locked_chain);\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false);\n     }\n }\n \n-bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay, interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309003567",
      "id" : 309003567,
      "in_reply_to_id" : 308801356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTAwMzU2Nw==",
      "original_commit_id" : "06519838e0d11a348a442dec4cb131650162b78d",
      "original_position" : 15,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 268741119,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309003567",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309008274"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309008274"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Really IMO, it's a layer violation because the wallet is doing the job of the node to check consensus rules instead of relying on what the node says.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-31T01:36:18Z",
      "diff_hunk" : "@@ -2125,20 +2125,16 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         std::string unused_err_string;\n-        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false, locked_chain);\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false);\n     }\n }\n \n-bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay, interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309008274",
      "id" : 309008274,
      "in_reply_to_id" : 308801356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTAwODI3NA==",
      "original_commit_id" : "06519838e0d11a348a442dec4cb131650162b78d",
      "original_position" : 15,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 268746837,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309008274",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309008529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309008529"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Do you want I update to get back the check ? Wallet are not going to broadcast thousands of coinbase transactions to this be real performance issue.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-31T01:37:53Z",
      "diff_hunk" : "@@ -2125,20 +2125,16 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         std::string unused_err_string;\n-        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false, locked_chain);\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false);\n     }\n }\n \n-bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay, interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309008529",
      "id" : 309008529,
      "in_reply_to_id" : 308801356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTAwODUyOQ==",
      "original_commit_id" : "06519838e0d11a348a442dec4cb131650162b78d",
      "original_position" : 15,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 268747133,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309008529",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "See a patch (on top of master and this pull) for what I was thinking:\r\n\r\n[0001-Check-utxo-db-early-only-when-requested-in-Broadcast.patch.txt](https://github.com/bitcoin/bitcoin/files/3451955/0001-Check-utxo-db-early-only-when-requested-in-Broadcast.patch.txt)\r\n",
      "created_at" : "2019-07-31T13:10:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-516842095",
      "id" : 516842095,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNjg0MjA5NQ==",
      "updated_at" : "2019-07-31T13:10:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516842095",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309244186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309244186"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree with Marco that this isn't a layer violation. `IsCoinBase()` is a pure utility function and can be called anywhere.\r\n\r\nBut I also agree with ariard that this isn't a big deal. Calling `IsCoinBase()` here is an optimization that affects a tiny number of transactions for a tiny number of users.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-31T14:14:41Z",
      "diff_hunk" : "@@ -2125,20 +2125,16 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         std::string unused_err_string;\n-        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false, locked_chain);\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false);\n     }\n }\n \n-bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay, interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309244186",
      "id" : 309244186,
      "in_reply_to_id" : 308801356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTI0NDE4Ng==",
      "original_commit_id" : "06519838e0d11a348a442dec4cb131650162b78d",
      "original_position" : 15,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 269042437,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309244186",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309260746"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309260746"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sorry, I think I got this wrong in my patch\r\n\r\n```suggestion\r\n        const TransactionError err = BroadcastTransaction(tx, err_string, max_tx_fee, relay, /*check_chain*/ false, /*wait_callback*/ false);\r\n```",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-31T14:43:27Z",
      "diff_hunk" : "@@ -290,10 +285,13 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, std::string& err_string, const CAmount& max_tx_fee, bool relay) override\n     {\n-        CInv inv(MSG_TX, txid);\n-        g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+        const TransactionError err = BroadcastTransaction(tx, err_string, max_tx_fee, relay, /*wait_callback*/ false, /*check_chain*/ false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309260746",
      "id" : 309260746,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTI2MDc0Ng==",
      "original_commit_id" : "eda13b8679f8c766ec6da94a578a89bfed59dc6b",
      "original_position" : 30,
      "path" : "src/interfaces/chain.cpp",
      "position" : null,
      "pull_request_review_id" : 269063565,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309260746",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309261871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309261871"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ok, lets do this in a follow-up",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-31T14:45:24Z",
      "diff_hunk" : "@@ -11,14 +11,21 @@\n #include <util/error.h>\n \n /**\n- * Broadcast a transaction\n+ * Submit a transaction to the mempool and (optionally) relay it to all P2P peers.\n+ *\n+ * Mempool submission can be synchronous (will await mempool entry notification\n+ * over the CValidationInterface) or asynchronous (will submit and not wait for\n+ * notification), depending on the value of wait_callback. wait_callback MUST\n+ * NOT be set while cs_main, cs_mempool or cs_wallet are held to avoid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309261871",
      "id" : 309261871,
      "in_reply_to_id" : 308697103,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTI2MTg3MQ==",
      "original_commit_id" : "976d1e4858df00c031ef2c07790862948dbc04cf",
      "original_position" : 10,
      "path" : "src/node/transaction.h",
      "position" : 10,
      "pull_request_review_id" : 269065082,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309261871",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309262153"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309262153"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Lets do this in a follow-up, if important enough",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-31T14:45:54Z",
      "diff_hunk" : "@@ -2353,7 +2352,8 @@ void CWallet::ResendWalletTransactions()\n             // only rebroadcast unconfirmed txes older than 5 minutes before the\n             // last block was found\n             if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n-            if (wtx.RelayWalletTransaction(*locked_chain)) ++relayed_tx_count;\n+            std::string unused_err_string;\n+            if (wtx.SubmitMemoryPoolAndRelay(unused_err_string, true, *locked_chain)) ++relayed_tx_count;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309262153",
      "id" : 309262153,
      "in_reply_to_id" : 308796603,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTI2MjE1Mw==",
      "original_commit_id" : "655170a3bde17fe3c990d4392d29f33847bbb5fe",
      "original_position" : 60,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 269065454,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309262153",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309262310"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309262310"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Lets do this in a follow up",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-31T14:46:09Z",
      "diff_hunk" : "@@ -2140,17 +2139,17 @@ bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n     if (isAbandoned()) return false;\n     // Don't relay conflicted or already confirmed transactions\n     if (GetDepthInMainChain(locked_chain) != 0) return false;\n-    // Don't relay transactions that aren't accepted to the mempool\n-    CValidationState unused_state;\n-    if (!InMempool() && !AcceptToMemoryPool(locked_chain, unused_state)) return false;\n-    // Don't try to relay if the node is not connected to the p2p network\n-    if (!pwallet->chain().p2pEnabled()) return false;\n-\n-    // Try to relay the transaction\n-    pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n-    pwallet->chain().relayTransaction(GetHash());\n \n-    return true;\n+    // Submit transaction to mempool for relay\n+    pwallet->WalletLogPrintf(\"Submitting wtx %s to mempool for relay\\n\", GetHash().ToString());\n+    // We must set fInMempool here - while it will be re-set to true by the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309262310",
      "id" : 309262310,
      "in_reply_to_id" : 308798753,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTI2MjMxMA==",
      "original_commit_id" : "655170a3bde17fe3c990d4392d29f33847bbb5fe",
      "original_position" : 43,
      "path" : "src/wallet/wallet.cpp",
      "position" : 45,
      "pull_request_review_id" : 269065661,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309262310",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Okay pushed with your patch amended to invert comment on 4441ba6c. \r\n\r\nMore I looking at `BroadcastTransaction`, more I think it needs a PR of its own, maybe I can take your commit here and try to simplify more things?",
      "created_at" : "2019-07-31T14:50:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-516883030",
      "id" : 516883030,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNjg4MzAzMA==",
      "updated_at" : "2019-07-31T14:50:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516883030",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I don't like Marco's suggested change. It's leaking implementation detail to the caller and complicating the function interface. I also don't understand the problem it's supposed to be solving - is it just a performance optimization so that we don't do the UTXO check for wallet-submitted transactions?\r\n\r\nThis PR had a bunch of ACKs without that change. Does it need to be included before this PR can be merged?",
      "created_at" : "2019-07-31T14:53:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-516884570",
      "id" : 516884570,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNjg4NDU3MA==",
      "updated_at" : "2019-07-31T14:53:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516884570",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This PR had a bunch of ACKs without that change. Does it need to be included before this PR can be merged?\r\n\r\nNo, but I'd like to hear other's opinion on it.\r\n\r\nAlso, you have just requested the conflicting pull to be merged, so this needs re-ACK anyway:\r\n\r\n* https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-516871453",
      "created_at" : "2019-07-31T14:57:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-516886341",
      "id" : 516886341,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNjg4NjM0MQ==",
      "updated_at" : "2019-07-31T14:57:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516886341",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309299431"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309299431"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@MarcoFalke should I include headers for mempool and wallet to `AssertLockNotHeld` these locks too ?",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-07-31T15:53:39Z",
      "diff_hunk" : "@@ -11,14 +11,21 @@\n #include <util/error.h>\n \n /**\n- * Broadcast a transaction\n+ * Submit a transaction to the mempool and (optionally) relay it to all P2P peers.\n+ *\n+ * Mempool submission can be synchronous (will await mempool entry notification\n+ * over the CValidationInterface) or asynchronous (will submit and not wait for\n+ * notification), depending on the value of wait_callback. wait_callback MUST\n+ * NOT be set while cs_main, cs_mempool or cs_wallet are held to avoid",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309299431",
      "id" : 309299431,
      "in_reply_to_id" : 308697103,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTI5OTQzMQ==",
      "original_commit_id" : "976d1e4858df00c031ef2c07790862948dbc04cf",
      "original_position" : 10,
      "path" : "src/node/transaction.h",
      "position" : 10,
      "pull_request_review_id" : 269113342,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-01T17:44:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309299431",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased at  5922315 with https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308697103, https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308796603, https://github.com/bitcoin/bitcoin/pull/15713#discussion_r308798753, https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307831700, https://github.com/bitcoin/bitcoin/pull/15713#discussion_r307813745 addressed. Shouldn't have functional changes since 976d1e4.\r\n\r\nPlease review again, and let give your opinion on Marco patch : https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-516842095.",
      "created_at" : "2019-07-31T16:55:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-516932537",
      "id" : 516932537,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNjkzMjUzNw==",
      "updated_at" : "2019-07-31T18:03:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516932537",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "You seem to have lost the `if (relay)` conditional in `BroadcastTransaction()`. I think that's a rebase error.\r\n\r\nYou've also lost the `g_connman` error checking block:\r\n\r\n```\r\n        if (!g_connman) {\r\n            return TransactionError::P2P_DISABLED;\r\n        }\r\n```\r\n\r\nAlternatively, you could assert that `g_connman` is non-null at the top of this function. It's only called by RPCs and the wallet scheduler, both of which are initialized after `g_connman` is assigned and stopped before `g_connman` is reset.",
      "created_at" : "2019-08-01T16:07:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-517353407",
      "id" : 517353407,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNzM1MzQwNw==",
      "updated_at" : "2019-08-01T16:07:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517353407",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Oooops, thanks to pointing me the error, remove the check to be replaced by an assertion as it's less checks in BroadcastTransaction at fb62f12.\r\n\r\nNote : currently P2P_DISABLED error is still there even if it's not used. It can be clean in a later commit if we agree that disabling P2P is not a thing.",
      "created_at" : "2019-08-01T17:47:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-517390401",
      "id" : 517390401,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNzM5MDQwMQ==",
      "updated_at" : "2019-08-01T17:47:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517390401",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK fb62f128bbfd8c6cd72ea8e23331a4bae23883ab\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nre-ACK fb62f128bbfd8c6cd72ea8e23331a4bae23883ab\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUgBCAv/bnyyRCCqUH8PSxg2lces1K5Z5M/Nb+eT5O2JQhQb1EfY+NckIcAqPmZz\r\nffhn6qmibcfEUWVnhBdGD/8xZOdUM37IPs1xCVFt7kYdTIDkLGKKZqg9z9R14CZd\r\naivpQia09e6zURD6a/d7qB8isfRCTNe3a29dcZv43oW2+WIStQGRBGswymI17k7C\r\nfYPsfWkAIru83VnoPCeziwXR85mRTXmKfVSQbgM/Qned2NDGGqZRZ6YH8KdtyPpP\r\ne3p0EAYMB+6aXum3Ky+u5gu9yRbx5pjBebBzQKbHHFHMLXxIBKAHml6qK7zqiO87\r\nSg5fSDEQ/NC2DFfarRVWNT36UAhUqxpKwQptpWzMvgLXc2HYOR6MQrKM+eg/x84M\r\nYN5b9zlKXGySUWVZWqk+mL9ELUPDxZu6zRtzEK1TI8WXQi+bqqQrjV6rp8ZqGj+s\r\nM11E+efGRFL1qYOMEs0lHHcdqODkUoOJP1csVAGTDvFNJSDvbHMuqGUuObCHU8V1\r\nuqYjCCQV\r\n=XQET\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `9cd92754a615d69deebd843e2a0522965f52b1cf18a0916f147bb00a450d5790  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e8929401089cd92754a615d69deebd843e2a0522965f52b1cf18a0916f147bb00a450d5790f0109414c84155f97676e56ab1908863926808fff0107fd1fefd33857ac615713e5ded92b7a508f1045d432706f0089eea0e4fbf0bbe6e0083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff0109168bac465e85f73ba3c118b4dcef2dd08f1045d432705f008d0be8a4720a55d4c0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff010ad8d8db57fd4036e0e615c9f7d967bda08f1045d432706f0089036534856f553e30083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6df010eaf159045992815a83a18f4aecce73b008f1045d432706f008f4e5d172ca8b65ab0083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "created_at" : "2019-08-01T17:53:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-517392513",
      "id" : 517392513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNzM5MjUxMw==",
      "updated_at" : "2019-08-01T17:53:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517392513",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r310067101"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310067101"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`CCoinsViewCache` hits disk if the in memory cache doesn't contain the coin we're looking for. I doubt the performance matters for the wallet, unlike e.g. peer to peer mempool relay.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-08-02T10:04:48Z",
      "diff_hunk" : "@@ -2125,32 +2124,28 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     // Try to add wallet transactions to memory pool\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n-        CValidationState state;\n-        wtx.AcceptToMemoryPool(locked_chain, state);\n+        std::string unused_err_string;\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false);\n     }\n }\n \n-bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;\n     // Don't relay abandoned transactions\n     if (isAbandoned()) return false;\n-    // Don't relay conflicted or already confirmed transactions\n-    if (GetDepthInMainChain(locked_chain) != 0) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r310067101",
      "id" : 310067101,
      "in_reply_to_id" : 308805488,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDA2NzEwMQ==",
      "original_commit_id" : "976d1e4858df00c031ef2c07790862948dbc04cf",
      "original_position" : 31,
      "path" : "src/wallet/wallet.cpp",
      "position" : 31,
      "pull_request_review_id" : 270093617,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-02T10:04:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310067101",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r310072067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310072067"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This check was added by @theuni in 53347f0cb99e514815e44a56439a4a10012238f8. Why wasn't this an assert in the first place?\r\n\r\nNit: this change could use its own commit.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-08-02T10:19:57Z",
      "diff_hunk" : "@@ -53,24 +55,21 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n             CallFunctionInValidationInterfaceQueue([&promise] {\n                 promise.set_value();\n             });\n+            callback_set = true;\n         }\n     } else if (fHaveChain) {\n         return TransactionError::ALREADY_IN_CHAIN;\n-    } else {\n-        // Make sure we don't block forever if re-sending\n-        // a transaction already in mempool.\n-        promise.set_value();\n     }\n \n     } // cs_main\n \n-    promise.get_future().wait();\n-\n-    if (!g_connman) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r310072067",
      "id" : 310072067,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDA3MjA2Nw==",
      "original_commit_id" : "8c8aa19b4b4fa56cd359092ef099bcfc7b26c334",
      "original_position" : 51,
      "path" : "src/node/transaction.cpp",
      "position" : 80,
      "pull_request_review_id" : 270099975,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-02T10:32:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310072067",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r310073491"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310073491"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: misspelled `doesn't` twice.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-08-02T10:24:47Z",
      "diff_hunk" : "@@ -14,26 +14,30 @@\n \n #include <future>\n \n-TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx, std::string& err_string, const CAmount& highfee)\n+TransactionError BroadcastTransaction(const CTransactionRef tx, std::string& err_string, const CAmount& max_tx_fee, bool relay, bool wait_callback)\n {\n+    assert(g_connman);\n     std::promise<void> promise;\n-    hashTx = tx->GetHash();\n+    uint256 hashTx = tx->GetHash();\n+    bool callback_set = false;\n \n     { // cs_main scope\n     LOCK(cs_main);\n+    // If the transaction is already confirmed in the chain, don't do anything\n+    // and return early.\n     CCoinsViewCache &view = *pcoinsTip;\n-    bool fHaveChain = false;\n-    for (size_t o = 0; !fHaveChain && o < tx->vout.size(); o++) {\n+    for (size_t o = 0; o < tx->vout.size(); o++) {\n         const Coin& existingCoin = view.AccessCoin(COutPoint(hashTx, o));\n-        fHaveChain = !existingCoin.IsSpent();\n+        // IsSpent doesnt mean the coin is spent, it means the output doesnt' exist.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r310073491",
      "id" : 310073491,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDA3MzQ5MQ==",
      "original_commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "original_position" : 23,
      "path" : "src/node/transaction.cpp",
      "position" : 23,
      "pull_request_review_id" : 270099975,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-02T10:32:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310073491",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This (seemingly simple) change has already 132 comments. I am going to merge it now, because I believe it is a step in the right direction. We can fix up typos and other stuff later, if needed.\r\n\r\n",
      "created_at" : "2019-08-02T13:12:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-517695513",
      "id" : 517695513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxNzY5NTUxMw==",
      "updated_at" : "2019-08-02T13:12:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517695513",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r310136775"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310136775"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this line can be removed now. The only failures that `BroadcastTransaction()` can return are mempool-related failures.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-08-02T13:42:21Z",
      "diff_hunk" : "@@ -291,9 +286,13 @@ class ChainImpl : public Chain\n         auto it = ::mempool.GetIter(txid);\n         return it && (*it)->GetCountWithDescendants() > 1;\n     }\n-    void relayTransaction(const uint256& txid) override\n+    bool broadcastTransaction(const CTransactionRef& tx, std::string& err_string, const CAmount& max_tx_fee, bool relay) override\n     {\n-        RelayTransaction(txid, *g_connman);\n+        const TransactionError err = BroadcastTransaction(tx, err_string, max_tx_fee, relay, /*wait_callback*/ false);\n+        // Chain clients only care about failures to accept the tx to the mempool. Disregard non-mempool related failures.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r310136775",
      "id" : 310136775,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDEzNjc3NQ==",
      "original_commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "original_position" : 30,
      "path" : "src/interfaces/chain.cpp",
      "position" : 30,
      "pull_request_review_id" : 270184874,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-02T13:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310136775",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r310137209"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310137209"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: I'd prefer to see a comment next to this assert to explain why `g_connman` must always be assigned here.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-08-02T13:43:25Z",
      "diff_hunk" : "@@ -14,26 +14,30 @@\n \n #include <future>\n \n-TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx, std::string& err_string, const CAmount& highfee)\n+TransactionError BroadcastTransaction(const CTransactionRef tx, std::string& err_string, const CAmount& max_tx_fee, bool relay, bool wait_callback)\n {\n+    assert(g_connman);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r310137209",
      "id" : 310137209,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDEzNzIwOQ==",
      "original_commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "original_position" : 7,
      "path" : "src/node/transaction.cpp",
      "position" : 7,
      "pull_request_review_id" : 270184874,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-02T13:44:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310137209",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r310139306"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310139306"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be part of #16503, maybe",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-08-02T13:48:29Z",
      "diff_hunk" : "@@ -14,26 +14,30 @@\n \n #include <future>\n \n-TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx, std::string& err_string, const CAmount& highfee)\n+TransactionError BroadcastTransaction(const CTransactionRef tx, std::string& err_string, const CAmount& max_tx_fee, bool relay, bool wait_callback)\n {\n+    assert(g_connman);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r310139306",
      "id" : 310139306,
      "in_reply_to_id" : 310137209,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDEzOTMwNg==",
      "original_commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "original_position" : 7,
      "path" : "src/node/transaction.cpp",
      "position" : 7,
      "pull_request_review_id" : 270188311,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-02T13:48:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310139306",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I was wrong about this: https://github.com/bitcoin/bitcoin/pull/15713#discussion_r309244186. Apparently removing that check causes log spam, particularly for test nodes.",
      "created_at" : "2019-08-06T17:09:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-518760150",
      "id" : 518760150,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15713",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDUxODc2MDE1MA==",
      "updated_at" : "2019-08-06T17:09:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/518760150",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r311328647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311328647"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Reverted in #16557.",
      "commit_id" : "fb62f128bbfd8c6cd72ea8e23331a4bae23883ab",
      "created_at" : "2019-08-07T00:37:00Z",
      "diff_hunk" : "@@ -2125,20 +2125,16 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         std::string unused_err_string;\n-        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false, locked_chain);\n+        wtx.SubmitMemoryPoolAndRelay(unused_err_string, false);\n     }\n }\n \n-bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay, interfaces::Chain::Lock& locked_chain)\n+bool CWalletTx::SubmitMemoryPoolAndRelay(std::string& err_string, bool relay)\n {\n     // Can't relay if wallet is not broadcasting\n     if (!pwallet->GetBroadcastTransactions()) return false;\n-    // Don't relay coinbase transactions outside blocks\n-    if (IsCoinBase()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/15713#discussion_r311328647",
      "id" : 311328647,
      "in_reply_to_id" : 308801356,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTMyODY0Nw==",
      "original_commit_id" : "06519838e0d11a348a442dec4cb131650162b78d",
      "original_position" : 15,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 271680548,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/15713",
      "updated_at" : "2019-08-07T00:37:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/311328647",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "node_id" : "MDQ6VXNlcjM1MzQ1MjQ=",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   }
]
