{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Originally posted as a comment here: https://github.com/bitcoin/bitcoin/pull/15713#issuecomment-479647663\r\n\r\nWe should better define the relationship between the wallet and the node, ie answer the question \"What services should the node offer to the wallet?\" Currently, the node exposes two methods to the wallet for sending a transaction:\r\n\r\n1. `submitToMemoryPool(const CTransactionRef& tx, CAmount absurd_fee, CValidationState& state)`: Add transaction to memory pool if the transaction fee is below the amount specified by absurd_fee. Returns false if the transaction could not be added due to the fee or for another reason. This is only called in `CWalletTx::AcceptToMemoryPool()`\r\n2. `relayTransaction(const uint256& txid)`: adds the txid to the INV queue for each peer. This is only called in `CWalletTx::RelayWalletTransaction()` (which also calls `CWalletTx::AcceptToMemoryPool()`)\r\n\r\nNote that to relay an INV for the transaction to peers (2), the transaction must already be in the mempool. See:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/ba54342c9dd3f2e5cdeed9ac57f1924f0d885cc6/src/net_processing.cpp#L3804\r\n\r\n`relayTransaction()` is only ever called if `InMempool() || AcceptToMemoryPool()` is true.\r\n\r\nThe wallet currently calls `CWalletTx::AcceptToMemoryPool()` in the following places:\r\n\r\n1a. In `CWallet::ReacceptWalletTransactions()`, called after the wallet has started up to make sure that its transactions are added to the mempool at start.\r\n2a. In `CWalletTx::RelayWalletTransaction()`, mentioned above.\r\n3a. In `CWallet::CommitTransaction()`, when a transaction is to be broadcast to the network for the first time.\r\n\r\nThe wallet currently calls `CWalletTx::RelayWalletTransaction()` in the following places:\r\n\r\n2a. In `CWallet::ResendWalletTransactions()`, called on a timer to rebroadcast unconfirmed transactions.\r\n2b. In `CWallet::CommitTransaction()`, but only if the transaction is successfully added to the mempool.\r\n\r\nI've been thinking about this in the context of the wallet rebroadcasting transactions (see discussion here: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2019/bitcoin-core-dev.2019-03-29-19.10.log.html#l-9). My view now is that the wallet should not have any access to relay functionality. It should be able to submit transactions to the node's mempool, and it should then be the mempool's responsibility to broadcast/rebroadcast the transaction (see comment here: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2019/bitcoin-core-dev.2019-03-29-19.10.log.html#l-92). That seems like a much cleaner divide of responsibility.",
   "closed_at" : "2020-11-04T22:11:29Z",
   "closed_by" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
      "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jnewbery/followers",
      "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jnewbery",
      "id" : 1063656,
      "login" : "jnewbery",
      "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
      "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
      "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
      "repos_url" : "https://api.github.com/users/jnewbery/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jnewbery"
   },
   "comments" : 8,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15734/comments",
   "created_at" : "2019-04-03T21:08:06Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15734/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/15734",
   "id" : 428975757,
   "labels" : [
      {
         "color" : "ebd775",
         "default" : false,
         "description" : null,
         "id" : 64584,
         "name" : "Brainstorming",
         "node_id" : "MDU6TGFiZWw2NDU4NA==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming"
      },
      {
         "color" : "006b75",
         "default" : false,
         "description" : null,
         "id" : 98298007,
         "name" : "P2P",
         "node_id" : "MDU6TGFiZWw5ODI5ODAwNw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P"
      },
      {
         "color" : "08a781",
         "default" : false,
         "description" : null,
         "id" : 149424,
         "name" : "Wallet",
         "node_id" : "MDU6TGFiZWwxNDk0MjQ=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15734/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDU6SXNzdWU0Mjg5NzU3NTc=",
   "number" : 15734,
   "performed_via_github_app" : null,
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Remove wallet `relayTransaction`",
   "updated_at" : "2020-11-04T22:11:30Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/15734",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
      "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
      "followers_url" : "https://api.github.com/users/jnewbery/followers",
      "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/jnewbery",
      "id" : 1063656,
      "login" : "jnewbery",
      "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
      "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
      "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
      "repos_url" : "https://api.github.com/users/jnewbery/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/jnewbery"
   }
}
