[
   {
      "author_association" : "MEMBER",
      "body" : "Please see\r\nhttps://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017354.html\r\nfor additional background on memory attacks possible using low-work headers\r\nchains. Currently, checkpoints are our only defense against memory attacks on\r\nour algorithm for storing headers, and the cost of attack (as described in that\r\nmailing list post) is not very high. Notably, the cost of an attack does not\r\nincrease as the consensus chain accumulates work, because attacking our\r\nalgorithm now relies on just being able to ramp down difficulty on a chain that\r\nforks from the last checkpointed block header.\r\n\r\nMy goal with this patch is to demonstrate that it should be possible to\r\ndrastically increase the cost of this type of attack with changes only at our\r\np2p application layer.\r\n\r\nThe algorithm is described a bit in the OP and further in comments in\r\nnet_processing.cpp. This patchset is complex and difficult to reason about, I\r\nthink for two reasons:\r\n\r\n(a) We reuse the \"headers\" message in many contexts (it can be a response to a\r\ngetheaders, which can be sent either for an initial chain sync or in response\r\nto a block announcement; or it can be a newly announced block).  The different\r\ncontexts that might be in play when processing a headers message makes\r\nreasoning about our state machine fairly difficult.\r\n\r\n(b) Because our p2p protocol does not support downloading headers in reverse,\r\nwhich is a functionality needed by the algorithm I tried to use here, I had to\r\napproximate that by doing something fairly complicated (storing 1 block hash\r\nfrom each headers message, so that when I got to the point where I'd want to\r\ndownload headers in reverse, I instead download them forwards a second time and\r\nensure I'm getting the same chain on the second try). This in turn means that\r\nthe algorithm uses much more peer memory than desirable in the face of an\r\nattacker chain, which in turn requires additional complexity around limiting\r\nthe number of simultaneously syncing peers, and preventing a sync peer from\r\nstarving other peers whose chains need to sync.\r\n\r\nIn the absence of an attacker giving a node a \"fake\" chain, this code would\r\nonly have one effect: it changes initial headers sync to not fully process\r\nheaders until we've downloaded the chain up to our nMinimumChainWork, at which\r\npoint all the headers are processed in one go. After that, headers processing\r\nshould be essentially unchanged from how it operates today.\r\n\r\nThat said, this patch is very complex, and I am not sure it's worth the review\r\neffort that would be required to merge this change in. It may be interesting as\r\na proof-of-concept however, so that we have a defense on standby in the event\r\nof a memory attack on the network using low-work headers, and so that we have a\r\ngood answer to any mistaken notions that checkpoints are somehow required to\r\nmaintain Bitcoin's security model (they are not).\r\n\r\nOne alternate idea for increasing the cost of attack, which would be vastly\r\nsimpler to deploy, is to raise the minimum difficulty of blocks (eg after the\r\nlast checkpoint height). If we make an arbitrary chain cost at least, say, $1/block to\r\ncreate (assuming current mining hardware capabilities), then mining 100M blocks\r\nto create 8GB of memory usage would be quite expensive! I think this is a\r\nreasonable approach, but has two downsides:\r\n\r\n(a) The cost of an attack still does not go up as the chain work goes up (so in\r\nparticular, if the cost of an attack were to come down as hardware gets more\r\nefficient in the future, we could become vulnerable again).\r\n\r\n(b) Changing the consensus rules we enforce comes with a higher bar for\r\njustification. Even though in this case I think someone could make a coherent\r\nargument for why this is not a meaningful consensus change (and, debatably,\r\nshouldn't even require community consensus!), this may not be well-understood\r\nwithout significant discussion and education. I think it's probably not worth\r\nthe social effort of changing the consensus rules, just to solve what is\r\nfundamentally a problem at the p2p layer. But perhaps I'm overly pessimistic\r\nhere.\r\n\r\nIf this high level approach (of having peers prove that their headers chains\r\nhave sufficient work in order to permanently store them) seems like something\r\nwe might want to include, but if this patch is indeed not worth the effort to\r\ntry to merge, then another option would be to consider a p2p protocol upgrade\r\nthat would make this logic easier to implement, such as a set of new headers\r\nsync messages that support the underlying functionality, while giving other\r\nimprovements as well, such as compression or parallel-download features\r\ndescribed by Jim Posen\r\n(https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-March/015851.html).\r\nThe advantage to that should be much simpler logic; the downside is that we run\r\ninto issues with syncing headers chains from unupgraded peers who do not\r\nsupport the new message types.\r\n",
      "created_at" : "2019-10-31T19:04:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17332#issuecomment-548524127",
      "id" : 548524127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17332",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODUyNDEyNw==",
      "updated_at" : "2019-10-31T19:04:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548524127",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17127](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17127.html) (util: Correct permissions for datadir and wallets subdir by hebasto)\n* [#16762](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16762.html) (Rust-based Backup over-REST block downloader by TheBlueMatt)\n* [#16748](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16748.html) ([WIP] Add support for addrv2 (BIP155) by dongcarl)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2019-10-31T19:21:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17332#issuecomment-548530294",
      "id" : 548530294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17332",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODUzMDI5NA==",
      "updated_at" : "2019-10-31T19:21:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548530294",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "this would be so much cleaner and simpler if the p2p protocol had explicit measures for reverse fetching...  ( https://en.bitcoin.it/w/index.php?title=User:Gmaxwell/Reverse_header-fetching_sync&action=history )",
      "created_at" : "2019-10-31T20:36:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17332#issuecomment-548558030",
      "id" : 548558030,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17332",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODU1ODAzMA==",
      "updated_at" : "2019-10-31T20:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548558030",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Cool, I had heard of the mitigation a long time ago but hadn't seen it written anywhere(hadn't seen bitcointalk thread either). ",
      "created_at" : "2019-11-01T13:57:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17332#issuecomment-548796841",
      "id" : 548796841,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17332",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODc5Njg0MQ==",
      "updated_at" : "2019-11-01T13:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548796841",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Too bad that this requires so much additional code and modifications to inner critical logic. Also, it doesn't compile on any of the ci builds.",
      "created_at" : "2019-11-01T14:36:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17332#issuecomment-548811143",
      "id" : 548811143,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17332",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODgxMTE0Mw==",
      "updated_at" : "2019-11-01T14:36:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548811143",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
