[
   {
      "author_association" : "MEMBER",
      "body" : "Do numbers of warnings include warnings in subtrees (e.g., `leveldb`, `secp256k1`)?",
      "created_at" : "2019-11-02T07:28:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-549019013",
      "id" : 549019013,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTAxOTAxMw==",
      "updated_at" : "2019-11-02T07:28:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549019013",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@hebasto \r\n\r\nYes! :)\r\n\r\nMore specifically the warnings were recorded using:\r\n\r\n```\r\n$ git diff\r\ndiff --git a/configure.ac b/configure.ac\r\nindex 9f2942dc9..20ef11346 100644\r\n--- a/configure.ac\r\n+++ b/configure.ac\r\n@@ -334,7 +334,7 @@ fi\r\n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\r\n   AX_CHECK_COMPILE_FLAG([-Wall],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wextra],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\r\n-  AX_CHECK_COMPILE_FLAG([-Wformat],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wformat=2],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat=2\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wswitch],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wswitch\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wformat-security],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\r\n@@ -342,6 +342,19 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\r\n   AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\r\n\r\n+  AX_CHECK_COMPILE_FLAG([-Wconditional-uninitialized],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wconditional-uninitialized\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wdouble-promotion],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdouble-promotion\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wduplicated-branches],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wduplicated-branches\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wduplicated-cond],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wduplicated-cond\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wfloat-equal],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wfloat-equal\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wlogical-op],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wlogical-op\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wnon-virtual-dtor],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wnon-virtual-dtor\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wnull-dereference],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wnull-dereference\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Woverloaded-virtual],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Woverloaded-virtual\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wunreachable-code-loop-increment],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wunused-member-function],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-member-function\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wunused-template],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-template\"],,[[$CXXFLAG_WERROR]])\r\n+\r\n   ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\r\n   ## unknown options if any other warning is produced. Test the -Wfoo case, and\r\n   ## set the -Wno-foo case if it works.\r\n$ ./autogen.sh\r\n$ CC=gcc CXX=g++ ./configure --with-incompatible-bdb\r\n$ make 2>&1 > warnings-gcc.txt\r\n$ make clean\r\n$ CC=clang CXX=clang++ ./configure --with-incompatible-bdb\r\n$ make 2>&1 > warnings-clang.txt\r\n```",
      "created_at" : "2019-11-02T11:17:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-549034194",
      "id" : 549034194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTAzNDE5NA==",
      "updated_at" : "2019-11-02T11:17:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549034194",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Wformat=2: Warn on security issues around functions that format output (ie printf). We are currently using -Wformat=1 which doesn't enable -Wformat-security (part of -Wformat=2).\r\n\r\nSeems useless as we disallow all printf family functions because of locale dependency.\r\n",
      "created_at" : "2019-11-02T11:22:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-549034620",
      "id" : 549034620,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTAzNDYyMA==",
      "updated_at" : "2019-11-02T11:22:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549034620",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Also `-Wsuggest-override` would be kind of nice (#16710).",
      "created_at" : "2019-11-02T12:04:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-549037705",
      "id" : 549037705,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTAzNzcwNQ==",
      "updated_at" : "2019-11-02T12:04:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549037705",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj \r\n\r\n> Seems useless as we disallow all printf family functions because of locale dependency.\r\n\r\nI was hoping that we could apply `__attribute__ ((format (printf, 1, 2)))` style annotations to `LogPrintf` and our other functions of that style to get proper compile-time string formatting checking, but after some tinkering I'm afraid that route is not possible.\r\n\r\nOTOH, no harm in bumping from `-Wformat=1` to `-Wformat=2` to get the stricter checking for the few `printf`-style standard functions we actually use (`vsnprintf`, `fprintf`, etc.).\r\n\r\n> Also -Wsuggest-override would be kind of nice (#16710).\r\n\r\nGood point! I've added `-Wsuggest-override` to the list.\r\n\r\nUnfortunately `src/leveldb/` produces 192 (!) `override` warnings - so we'll have to suppress that :)",
      "created_at" : "2019-11-03T17:42:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-549160964",
      "id" : 549160964,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTE2MDk2NA==",
      "updated_at" : "2019-11-03T17:42:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549160964",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift \r\n> Unfortunately `src/leveldb/` produces 192 (!) `override` warnings - so we'll have to suppress that :)\r\n\r\nEven on top of #16722 ?\r\n;)\r\n",
      "created_at" : "2019-11-03T17:50:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-549161634",
      "id" : 549161634,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTE2MTYzNA==",
      "updated_at" : "2019-11-03T17:50:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549161634",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@hebasto \r\n\r\nNo #16722 would solve that. I hope it gets merged soon :)",
      "created_at" : "2019-11-03T18:41:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-549166098",
      "id" : 549166098,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTE2NjA5OA==",
      "updated_at" : "2019-11-03T18:41:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549166098",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I was hoping that we could apply __attribute__ ((format (printf, 1, 2))) style annotations to LogPrintf and our other functions of that style to get proper compile-time string formatting checking, but after some tinkering I'm afraid that route is not possible.\r\n\r\nIt's indeed not possible. But also this would be undesirable as that checks a few things that are irrelevant in tinyformat due to type-safety:\r\n- size modifiers don't matter (llx, â¦), they would only create noise\r\n- you can use `%s` in place of everything\r\n- `std::string` can (and should) be passed in as-is\r\n- dangerous format characters such as `%n` doesn't exist\r\n\r\nWe also already have `test/lint/lint-format-strings.py` to do custom checks attuned to our way of formatting. It doesn't seem to happen often but this is an old, solved problem.\r\n",
      "created_at" : "2019-11-04T10:28:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-549294665",
      "id" : 549294665,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTI5NDY2NQ==",
      "updated_at" : "2019-11-04T10:28:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549294665",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj Good points. I've now removed `-Wformat=2` from the list.\r\n\r\nCan we come up with any good arguments against any of the remaining diagnostics in the list or do they all seem reasonable?",
      "created_at" : "2019-11-04T10:58:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-549304280",
      "id" : 549304280,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTMwNDI4MA==",
      "updated_at" : "2019-11-04T10:58:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549304280",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/pull/17377#issuecomment-549868850 by @Sjors ",
      "created_at" : "2019-11-05T17:39:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-549931872",
      "id" : 549931872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTkzMTg3Mg==",
      "updated_at" : "2019-11-05T17:39:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549931872",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK on having one or more Travis instances check for (some / most of) these issues, as well as maybe turning them on by default. We'll have to try that PR on various developer systems, with and without depends, to see if it doesn't cause problems. For example I tend to get a flood of spurious warnings on macOS Catalina, which cause me to miss relevant warnings. I'd have to check which warning types occur in the spurious ones.",
      "created_at" : "2019-11-05T17:59:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-549941233",
      "id" : 549941233,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0OTk0MTIzMw==",
      "updated_at" : "2019-11-05T17:59:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549941233",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke @Sjors The scope of this issue is enabling currently disabled diagnostics. `-Wunused-variable` is already enabled in ~~both Clang and~~ GCC by our use of `-Wall`.\r\n\r\nWith that said: @Sjors - if you want to implement https://github.com/bitcoin/bitcoin/pull/17377#issuecomment-549868850 I would support such PR :)",
      "created_at" : "2019-11-05T21:51:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-550038285",
      "id" : 550038285,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDAzODI4NQ==",
      "updated_at" : "2019-11-15T13:38:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550038285",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm generally okay with adding additional diagnostics, especially those covered by both gcc and clang, and which don't diverge too much between compiler versions. I definitely don't want to repeat the debacle around variable shadowing checks.",
      "created_at" : "2019-11-05T22:05:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-550043600",
      "id" : 550043600,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDA0MzYwMA==",
      "updated_at" : "2019-11-05T22:05:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550043600",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ah yes, I was talking about `-Werror=unused-variable` and such. But having warnings locally by default would be good too, except when it becomes a flood of existing issues . ",
      "created_at" : "2019-11-06T08:22:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-550198827",
      "id" : 550198827,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDE5ODgyNw==",
      "updated_at" : "2019-11-06T08:22:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550198827",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift maybe upload the full list of warnings somewhere for all these diagnostics enabled; then we have a better grasp on how useful, or spammy, these particular reports are",
      "created_at" : "2019-11-06T09:57:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-550235357",
      "id" : 550235357,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDIzNTM1Nw==",
      "updated_at" : "2019-11-06T09:57:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550235357",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Some additional diagnostics to consider and their current warning counts. Tested under Clang 10.\r\n\r\n```\r\n-Wdeprecated-copy-dtor (5 instances)\r\n-Wdisabled-macro-expansion (1 instance)\r\n-Wimplicit-fallthrough (9 instances)\r\n-Winconsistent-missing-destructor-override (1 instance)\r\n-Wshadow (note: might be controversial given memories of historical compiler issues with\r\n                this warning type, 5 instances)\r\n-Wshadow-uncaptured-local (2 instances)\r\n-Wtautological-unsigned-enum-zero-compare (3 instances)\r\n-Wthread-safety-attributes (1 instance)\r\n-Wunreachable-code-break (10 instances)\r\n-Wunreachable-code-return (1 instance)\r\n```",
      "created_at" : "2019-12-12T10:34:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-564949288",
      "id" : 564949288,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDk0OTI4OA==",
      "updated_at" : "2019-12-12T10:34:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564949288",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift \r\n> Tested under Clang 10.\r\n\r\nSome Apple Clang 10 warnings are removed in #16641.",
      "created_at" : "2019-12-12T10:44:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-564953440",
      "id" : 564953440,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU2NDk1MzQ0MA==",
      "updated_at" : "2019-12-12T10:44:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564953440",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm considering upstreaming a patch I'm using locally. The patch enables a subset of the Clang warnings suggested in this issue.\r\n\r\nThe warnings enabled are such that they a.) can help avoid real bugs, b.) can be enabled without false positives and c.) do not introduce a massive number of warnings when compiling against current `master`.\r\n\r\nThese are the enabled diagnostics:\r\n* `-Wdouble-promotion`: Warn if `float` is implicit promoted to `double`.\r\n* `-Wimplicit-fallthrough`: Warn on unannotated fall-through between switch labels. \r\n* `-Woverloaded-virtual`: Warn if you overload (not override) a virtual function.\r\n* `-Wshadow-uncaptured-local`: Warn if a declaration shadows a variable.\r\n* `-Wunreachable-code-loop-increment`: Warn if a loop will run only once (loop increment never executed).\r\n* `-Wunreachable-code-return`: Warn if a return statement will never be executed. \r\n* `-Wunused-member-function`: Warn on unused member function.\r\n* `-Wunused-template`: Warn on unused template.\r\n\r\nNote that I'm _not_ suggesting `-Werror` for any of these :)\r\n\r\nAny feedback? Should any of the suggested checks be removed before being submitted as a PR?\r\n\r\nI'll leave this up for discussion and submit a PR next week based on the feedback in this issue :)\r\n\r\nThis is the diff if you want to try it out:\r\n\r\n```diff\r\ndiff --git a/configure.ac b/configure.ac\r\nindex 888f67cc8..dc13955f0 100644\r\n--- a/configure.ac\r\n+++ b/configure.ac\r\n@@ -344,6 +344,14 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\r\n   AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wunused-variable],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-variable\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wdate-time],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdate-time\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wdouble-promotion],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdouble-promotion\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wimplicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Woverloaded-virtual],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Woverloaded-virtual\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wshadow-uncaptured-local],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wshadow-uncaptured-local\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wunreachable-code-loop-increment],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wunreachable-code-return],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunreachable-code-return\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wunused-member-function],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-member-function\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wunused-template],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-template\"],,[[$CXXFLAG_WERROR]])\r\n\r\n   dnl Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\r\n   dnl unknown options if any other warning is produced. Test the -Wfoo case, and\r\n```",
      "created_at" : "2020-01-08T16:22:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-572145500",
      "id" : 572145500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MjE0NTUwMA==",
      "updated_at" : "2020-01-08T16:22:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/572145500",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Any feedback? Should any of the suggested checks be removed before being submitted as a PR?\r\n\r\n> -Wimplicit-fallthrough:\r\n\r\nWe explicitly disable this (just below), so having it in this diff doesn't enable anything. I also don't think we'd turn it on, given that the original reasons it was disabled still apply (large number of warnings in Boost, leveldb and tinyformat etc, see #10489). This is also part of `-Wextra` for GCC.\r\n\r\n> -Wunused-template\r\n\r\nThis introduces a large number of Qt related warnings for me:\r\n```bash\r\n  CXX      qt/libbitcoinqt_a-platformstyle.o\r\nIn file included from qt/test/wallettests.cpp:1:\r\nIn file included from ./qt/test/wallettests.h:5:\r\nIn file included from /usr/local/Cellar/qt/5.14.0/lib/QtTest.framework/Headers/QTest:1:\r\nIn file included from /usr/local/Cellar/qt/5.14.0/lib/QtTest.framework/Headers/qtest.h:449:\r\nIn file included from /usr/local/Cellar/qt/5.14.0/lib/QtTest.framework/Headers/qtestsystem.h:45:\r\n/usr/local/Cellar/qt/5.14.0/lib/QtCore.framework/Headers/qtestsupport_core.h:55:31: warning: unused function template 'qWaitFor' [-Wunused-template]\r\nQ_REQUIRED_RESULT static bool qWaitFor(Functor predicate, int timeout = 5000)\r\n                              ^\r\n1 warning generated.\r\n```\r\n\r\nFor everything below, ACK opening a PR, assuming you are fixing any warnings where applicable, and/or have submitted PRs upstream. Note however that this was only doing a quick check on macOS, with brew installed dependencies, so the output could be much worse on other platforms. I also did a quick check on Ubuntu Bionic and saw similar results.\r\n\r\n> -Wdouble-promotion\r\n\r\n```bash\r\ntorcontrol.cpp:702:51: warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]\r\n    struct timeval time = MillisToTimeval(int64_t(reconnect_timeout * 1000.0));\r\n                                                  ^~~~~~~~~~~~~~~~~ ~\r\n1 warning generated.\r\n\r\nqt/splashscreen.cpp:54:32: warning: implicit conversion increases floating-point precision: 'float' to 'qreal' (aka 'double') [-Wdouble-promotion]\r\n    pixmap.setDevicePixelRatio(devicePixelRatio);\r\n           ~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~\r\nqt/splashscreen.cpp:60:61: warning: implicit conversion increases floating-point precision: 'float' to 'qreal' (aka 'double') [-Wdouble-promotion]\r\n    QRadialGradient gradient(QPoint(0,0), splashSize.width()/devicePixelRatio);\r\n                    ~~~~~~~~              ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~\r\n2 warnings generated.\r\n\r\nqt/trafficgraphwidget.cpp:86:94: warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]\r\n    painter.drawText(XMARGIN, YMARGIN + h - h * val / fMax-yMarginText, QString(\"%1 %2\").arg(val).arg(units));\r\n                                                                                         ~~~ ^~~\r\nqt/trafficgraphwidget.cpp:96:98: warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]\r\n        painter.drawText(XMARGIN, YMARGIN + h - h * val / fMax-yMarginText, QString(\"%1 %2\").arg(val).arg(units));\r\n                                                                                             ~~~ ^~~\r\n2 warnings generated.\r\n```\r\n\r\n> -Wunreachable-code-loop-increment\r\n\r\n```bash\r\ninit.cpp:921:5: warning: loop will run at most once (loop increment never executed) [-Wunreachable-code-loop-increment]\r\n    for (const auto& arg : gArgs.GetUnsuitableSectionOnlyArgs()) {\r\n    ^~~\r\n1 warning generated.\r\n```\r\n\r\n> -Wunused-member-function\r\n```bash\r\nscript/bitcoinconsensus.cpp:50:9: warning: unused member function 'GetType' [-Wunused-member-function]\r\n    int GetType() const { return m_type; }\r\n        ^\r\n1 warning generated.\r\n\r\nindex/blockfilterindex.cpp:55:5: warning: unused member function 'DBHeightKey' [-Wunused-member-function]\r\n    DBHeightKey() : height(0) {}\r\n    ^\r\nindex/blockfilterindex.cpp:81:5: warning: unused function template 'Unserialize' [-Wunused-template]\r\n    ADD_SERIALIZE_METHODS;\r\n    ^\r\n./serialize.h:198:10: note: expanded from macro 'ADD_SERIALIZE_METHODS'\r\n    void Unserialize(Stream& s) {                                     \\\r\n         ^\r\n2 warnings generated.\r\n\r\ntest/util_tests.cpp:1919:14: warning: unused member function 'operator=' [-Wunused-member-function]\r\n    Tracker& operator=(Tracker&& t) noexcept\r\n             ^\r\n1 warning generated.\r\n```\r\n\r\n> -Wunreachable-code-return\r\n```bash\r\nleveldb/db/log_reader.cc:181:10: warning: 'return' will never be executed [-Wunreachable-code-return]\r\n  return false;\r\n         ^~~~~\r\n1 warning generated.\r\n```",
      "created_at" : "2020-01-10T05:54:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-572885730",
      "id" : 572885730,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3Mjg4NTczMA==",
      "updated_at" : "2020-01-10T05:54:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/572885730",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@fanquake \r\n\r\nThanks a lot for taking the time to test! That is appreciated!\r\n\r\n> > -Wimplicit-fallthrough:\r\n> \r\n> We explicitly disable this (just below), so having it in this diff doesn't enable anything. I also don't think we'd turn it on, given that the original reasons it was disabled still apply (large number of warnings in Boost, leveldb and tinyformat etc, see #10489). This is also part of `-Wextra` for GCC.\r\n\r\nOh, good catch! Now removed.\r\n\r\n> > -Wunused-template\r\n> \r\n> This introduces a large number of Qt related warnings for me:\r\n\r\nRemoved.\r\n\r\nUpdated diff if someone wants to try it out:\r\n\r\n```diff\r\ndiff --git a/configure.ac b/configure.ac\r\nindex 888f67cc8..e4a7423bd 100644\r\n--- a/configure.ac\r\n+++ b/configure.ac\r\n@@ -344,6 +344,12 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\r\n   AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wunused-variable],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-variable\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wdate-time],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdate-time\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wdouble-promotion],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdouble-promotion\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Woverloaded-virtual],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Woverloaded-virtual\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wshadow-uncaptured-local],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wshadow-uncaptured-local\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wunreachable-code-loop-increment],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wunreachable-code-return],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunreachable-code-return\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wunused-member-function],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-member-function\"],,[[$CXXFLAG_WERROR]])\r\n\r\n   dnl Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\r\n   dnl unknown options if any other warning is produced. Test the -Wfoo case, and\r\n```\r\n",
      "created_at" : "2020-01-10T14:01:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-573046955",
      "id" : 573046955,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3MzA0Njk1NQ==",
      "updated_at" : "2020-01-10T14:01:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/573046955",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift Are you still planning on opening a PR with any of these changes?",
      "created_at" : "2020-01-20T01:54:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-576076427",
      "id" : 576076427,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NjA3NjQyNw==",
      "updated_at" : "2020-01-20T01:54:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/576076427",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "How about [`-Wdeprecated`](https://clang.llvm.org/docs/DiagnosticsReference.html#wdeprecated) for Clang (not supported by GCC)?\r\n\r\nAll `-Wdeprecated` warnings could be removed easily (#16641). ",
      "created_at" : "2020-02-08T12:46:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-583733535",
      "id" : 583733535,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MzczMzUzNQ==",
      "updated_at" : "2020-02-08T12:46:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583733535",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@fanquake I'd rather see you do it -- I think the changes have a greater probability of getting merged if you submit the PR TBH :)",
      "created_at" : "2020-02-10T07:15:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-583986499",
      "id" : 583986499,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4Mzk4NjQ5OQ==",
      "updated_at" : "2020-02-10T07:15:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583986499",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Participants in this thread might want to review @hebasto's excellent #16710 which adds `-Wsuggest-override` - I think it is ready to merge. Please review :)",
      "created_at" : "2020-03-01T13:14:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17344#issuecomment-593095794",
      "id" : 593095794,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17344",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MzA5NTc5NA==",
      "updated_at" : "2020-03-01T13:14:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/593095794",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   }
]
