[
   {
      "author_association" : "MEMBER",
      "body" : "ping @EthanHeilman @sdaftuar @naumenkogs ",
      "created_at" : "2019-10-30T21:09:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-548113615",
      "id" : 548113615,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODExMzYxNQ==",
      "updated_at" : "2019-10-30T21:09:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548113615",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Implementation\r\n====\r\n\r\nThis would be trivial to implement. Addrman already serializes its data to disk in the form of `peers.dat`. You would just need to maintain an outgoing connection vector, add it to the addrman serialization logic and then read that vector when calling select.\r\n\r\nThoughts\r\n====\r\n\r\n\r\nIn our paper we called these **countermeasure 5: anchor connections**. We suggested limiting them to two of the outgoing connections. We wrote:\r\n\r\n> Anchor connections.Inspired by Tor entry guard rotation rates [33], we add two connections that persist. Between restarts. Thus, we add an anchor table, recording  addresses  of  current  outgoing  connections  and  the time of first connection to each address.   Upon restart,the node dedicates two extra outgoing connections to the oldest anchor addresses that accept incoming connections.  Now, in addition to defeating our other counter-measures, a successful attacker must also disrupt anchor connections; eclipse attacks fail if the victim connects to an anchor address not controlled by the attacker\r\n>[...]\r\n>[33] - \"One Fast Guard for Life (or 9 months)\" - https://www-users.cs.umn.edu/~hoppernj/single_guard.pdf\r\n-Eclipse Attacks on Bitcoinâs Peer-to-Peer Network\r\n\r\n\r\n>Eclipse attack requires the victim node to restart so it can connect to adversarial addresses.\r\n\r\nSome things have changed from when that paper was written and that is no longer true.\r\n\r\n**Bitcoin 2015:**\r\n1. Bob has 116 incoming connections.\r\n2. Alice makes an outgoing connection to Bob. \r\n3. Bob has 117 incoming connections\r\n4. Carol attempts to make an outgoing connection to Bob\r\n5. Carol's connection is rejected.\r\n6. Alice still has an outgoing connection to Bob\r\n\r\n**Bitcoin 2019:**\r\n1. Bob has 116 incoming connections.\r\n2. Alice makes an outgoing connection to Bob. \r\n3. Bob has 117 incoming connections\r\n4. Carol attempts to make an outgoing connection to Bob\r\n5. There is a change Alice's connection is evicted and Carol's connection is established\r\n6. Alice loses her outgoing connection to Bob (sometimes)\r\n7. Carol now has an outgoing connection (sometimes)\r\n\r\nSee the incoming connection eviction logic here:\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/net.cpp#L857\r\n\r\nIf we were in **Bitcoin 2015** anchor connections could be bypassed using [a connection starvation attack](https://sourceforge.net/p/bitcoin/mailman/message/31168096/):\r\n1. Attacker makes up to 117 out connections to each full node on the network. This is actually pretty cheap to do. A laptop connected over WIFI could do this to **Bitcoin 2015**\r\n2. Attacker performs eclipse attack\r\n3. Victim reboots, attacker fills up the freed connection slots in the network\r\n4. Victim can't connect to nodes they were connected to before the reboot since all their connections are monopolized by attacker\r\n5. Eclipse attack succeeds.\r\n\r\nNow in **Bitcoin 2019** the victim could successfully evict the attackers connections and reconnect to the node. However in **BItcoin 2019** an attacker might be able to eclipse a node without reboots via connection eviction logic. There is a trade off here. Someone should research this!!!\r\n\r\n**Unsatisfying conclusion:**\r\n====\r\n\r\nAlways reconnecting outgoing connections to the same nodes would probably make Eclipse attacks more complex but it would also mean that outgoing connections would be more static. Is making them more static good or bad?\r\n\r\n",
      "created_at" : "2019-10-31T14:46:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-548410548",
      "id" : 548410548,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODQxMDU0OA==",
      "updated_at" : "2019-10-31T14:46:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548410548",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "**Edit: this comment is not accurate, see the following Ethan's clarification below.**\r\n\r\n@EthanHeilman \r\nThanks for the thorough explanation of the difference between 2015 and 2019.\r\nJust wanted to highlight for the other readers that although it's very useful to understand the background, it does not directly affect reasoning about this PR.\r\nMaybe it does but in a positive way: anchors are stronger in 2019, so increasing their number today is even better.\r\n\r\n>However in BItcoin 2019 an attacker might be able to eclipse a node without reboots via connection eviction logic. There is a trade off here. Someone should research this!!!\r\n\r\nI agree, this is an important one, but again, not really related to whether we need anchors. I hope to find time to eventually look into this particular issue and measure the trade-offs.\r\n\r\nPlease correct me if im wrong.",
      "created_at" : "2019-10-31T17:47:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-548492408",
      "id" : 548492408,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODQ5MjQwOA==",
      "updated_at" : "2019-11-06T16:10:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548492408",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@EthanHeilman \r\n\r\nThank you for your review.\r\n\r\n> This would be trivial to implement. Addrman already serializes its data to disk in the form of `peers.dat`. You would just need to maintain an outgoing connection vector, add it to the addrman serialization logic and then read that vector when calling select.\r\n\r\n`CConnman::DumpAddresses()` is called from `CConnman::Stop()`. Therefore, `peers.dat` does not suit in case of unpredictable shutdown (e.g., power failure). IMO, outgoing connection vector should be dumped to the dedicated file, say  `anchors.dat`, periodically, like `banlist.dat` does, or after each change in it.",
      "created_at" : "2019-11-01T13:15:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-548783750",
      "id" : 548783750,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODc4Mzc1MA==",
      "updated_at" : "2019-11-01T13:15:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548783750",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "While thinking about this idea I came up with a formula ``a node is at most as secure as all the connections it has ever made``.\r\nWhat we really want is to be able to check with our former connections that we're on the same tip (at least to prevent full eclipsing with double-spends etc. Other sybil problems still apply).\r\n\r\nSo perhaps every N (say 2) minutes we can exchange recent block hashes with one of our former nodes?\r\nThis is a pretty big change, but we can start with doing it for our last 8+2 *outbound* disconnects.\r\nSo, logging in ``anchors.dat`` all our outgoing conns all the time, and exchanging last block hash with top-8 (except currently connected) over N*(8+2) minutes.\r\n\r\nI would suggest to not mix this logic with feelers. Connecting to a feeler currently doesn't even check we're on the same tip (that's a shame, I want to fix it soon). But even if we do sync tips, this would be a cheap way for an attacker to fill our ``anchors.dat``, so I want anchors to represent persistent conns.",
      "created_at" : "2019-11-01T15:28:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-548831247",
      "id" : 548831247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU0ODgzMTI0Nw==",
      "updated_at" : "2019-11-01T17:46:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/548831247",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I had some discussions with @naumenkogs, and I understand that there are some concerns about long-time consequences for the network graph topology.\r\n\r\nLet me make my proposition more clear.\r\n\r\n1. There is an attack vector which *requires* victim node restart. It exploits existing logic to make *new* outbound connections at node startup.\r\n\r\n2. Currently, such a kind of outbound peer rotation (OPR for short) is a side effect of (un)expected node restart. My proposition changes this behavior: being implemented it significantly reduces the probability of OPR on the node restart.\r\n\r\n3. The discussion about OPR and its effect on the network keeps very long time, e.g., #4723, #15759. The latest state of discussion could be expressed as:\r\n- OPR is good for tx-relayed peers as it improves privacy and makes topology inference more difficult\r\n- OPR is bad for block-relayed peers as it increases risk for a node to be eclipsed\r\n\r\n4. The *only* goal of my proposition is mitigation of a well-known eclipse attack; it is not about OPR directly. As a side effect, it changes node behavior wrt OPR. Please note that some other processes and events, besides node restart, affect OPR node behavior, e.g., detected \"stale tip\" event.\r\n\r\n5. Having dedicated block-relayed outbound connections, I believe it is good, without trade-offs, to preserve them when a node restarts.\r\n\r\n---\r\n\r\nIMO, @naumenkogs's https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-548831247 is orthogonal to my proposition, and definitely deserves its own discussion.",
      "created_at" : "2019-11-06T14:36:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-550337452",
      "id" : 550337452,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDMzNzQ1Mg==",
      "updated_at" : "2019-11-06T14:36:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550337452",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@naumenkogs \r\n\r\n>Just wanted to highlight for the other readers that although it's very useful to understand the background, it does not directly affect reasoning about this PR.\r\n\r\nI explained my point poorly. Let me try again. This PR makes the following argument: \"Eclipse attack requires the victim node to restart so it can connect to adversarial addresses.\" This is no longer the case. That being said in my opinion a restart is still the most likely way of an eclipse attack occurring.\r\n\r\n> I agree, this is an important one, but again, not really related to whether we need anchors. I hope to find time to eventually look into this particular issue and measure the trade-offs.\r\n\r\nBecause restarts are no longer necessary to perform eclipse attacks, anchors provide less of a security improvement against eclipse attacks. However against a restart-based eclipse attack the security they do provide is harder for an connection starvation attack to bypass. The security provided by anchors in 2019 is a less useful but more robust countermeasure.\r\n\r\nI still think they are useful enough to justify adding them. I just want to make sure we that this issue documents the actual security they provide.\r\n",
      "created_at" : "2019-11-06T15:27:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-550360907",
      "id" : 550360907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDM2MDkwNw==",
      "updated_at" : "2019-11-06T15:27:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550360907",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/274814?v=4",
         "events_url" : "https://api.github.com/users/EthanHeilman/events{/privacy}",
         "followers_url" : "https://api.github.com/users/EthanHeilman/followers",
         "following_url" : "https://api.github.com/users/EthanHeilman/following{/other_user}",
         "gists_url" : "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/EthanHeilman",
         "id" : 274814,
         "login" : "EthanHeilman",
         "node_id" : "MDQ6VXNlcjI3NDgxNA==",
         "organizations_url" : "https://api.github.com/users/EthanHeilman/orgs",
         "received_events_url" : "https://api.github.com/users/EthanHeilman/received_events",
         "repos_url" : "https://api.github.com/users/EthanHeilman/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/EthanHeilman/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/EthanHeilman"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">\r\n    OPR is good for tx-relayed peers as it improves privacy and makes topology inference more difficult\r\n    OPR is bad for block-relayed peers as it increases risk for a node to be eclipsed\r\n\r\nJust wanted to mention that this is my (rough) current intuition, not something we have consensus on :)\r\n\r\nAs for the proposal itself, I currently have 2 problems with it:\r\n- users which **do expect** new connections when restart. It's purely a UX question. (*Perhaps explaining this and new instructions would be enough.*)\r\n- disabling this side-effect OPR we have from restarts, which is one of the very few ways we currently rotate peers. After removing it, the network will be more static. (*An answer to it would be a well-thought explicit rotation, but we all agree it's something non-trivial.*)\r\n\r\nWith the latest suggestion of @hebasto to anchor only block-relay-only peers, I think this is strictly beneficial, because we still rotate 8 (tx+block) relay peers, so we will meet the expectations and we will keep side-effect OPR.\r\n\r\nIf we ever conclude that block-relay-only links should be rotated, we can ADD 2 more rotatable links. But I think my orthogonal idea I explained above *and* checking tips with feelers should be sufficient here.\r\n\r\nConcept ACK.",
      "created_at" : "2019-11-06T20:23:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-550484895",
      "id" : 550484895,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDQ4NDg5NQ==",
      "updated_at" : "2019-11-06T21:44:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550484895",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Right, this seems reasonable, but maybe only for a subset. Having more \"categories\" of connections (including \"rotatable\" ones, as @naumenkogs notes) is likely also important. Ultimately, different types of eclipse attacks demand different responses.",
      "created_at" : "2019-11-06T21:22:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-550506224",
      "id" : 550506224,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDUwNjIyNA==",
      "updated_at" : "2019-11-06T21:22:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550506224",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Making it do this with all connections would probably bad, because it would guarantee capture persistence. It potentially makes topology inference more powerful. Strong persistence can also contributed to network self-partitioning (e.g. where longer distance links are less reliable, so they get culled, and eventually you end up disconnected subgraphs that connect only to their own continent). \r\n\r\nIn the past in bitcoin we've tried to exploit diversity in connections--  consider the inbound peer eviction logic:  We exclude peers from eviction if they are among the best in a half dozen different metrics, with the belief that it is much harder for an attacker to dominate in every category than it is to just dominate in a single metric.\r\n\r\nThe revised approach of only applying it to blocks-only peers essentially addresses the topology inference question.  But I don't think the best outcome comes from making all blocks only peers persistent-- because that would be needlessly weak, e.g. to an attacker that contacts major VPS providers and acquires control of many IPs that have a long history of running bitcoin nodes, and disadvantages connections to honest users on dynamic IPs.  Doing it with half of them or even just two of them would probably be a bigger win.\r\n\r\nThis behaviour should probably earn a complementary behaviour on the inbound side: Right now about half the inbound slots are preserved for longest-connected peers.  Half of those could be redirected to be preserved for network|limited peers with longest-historically-connected time.   Without some measure like this,  persistent connection logic could somewhat undermined by an attacker that fills the connection slots up on long running static IPed nodes in order to cause the eviction of (or prevent connections from) the other hosts they hope to eclipse.\r\n",
      "created_at" : "2019-11-06T22:03:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-550521262",
      "id" : 550521262,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDUyMTI2Mg==",
      "updated_at" : "2019-11-06T22:03:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550521262",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Now in Bitcoin 2019 the victim could successfully evict the attackers connections and reconnect to the node. However in BItcoin 2019 an attacker might be able to eclipse a node without reboots via connection eviction logic. There is a trade off here. Someone should research this!!!\r\n\r\nHalf of the inbound connections are reserved for the longest running connections, which is the '2015' logic (pre PR6374).  Few nodes were more than half full in 2015.  So essentially all peers that would have been protected in 2015 are protected today.   So, I don't think your characterization of changing from one weakness to another is correct-- instead the current behaviour is fairly strong against both attacks.\r\n\r\nProviding the same kind of diverse protection is why I argue above against *all* peers (or all blocks only peers) being made persistent.",
      "created_at" : "2019-11-06T22:10:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-550523882",
      "id" : 550523882,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDUyMzg4Mg==",
      "updated_at" : "2019-11-06T22:14:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550523882",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@gmaxwell I might be wrong, but it seems you're confusing light clients' (network|limited) blocks-only connections with block-relay-only connections we recently added? \r\n\r\nAfter [this PR](https://github.com/bitcoin/bitcoin/pull/15759), every node creates 8 regular connections **and** 2 connections which relay only blocks (no transactions and no addrs).\r\n\r\nOur latest discussion here were around keeping only those 2 new block-relay-only connections persistent.",
      "created_at" : "2019-11-07T02:37:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-550593789",
      "id" : 550593789,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MDU5Mzc4OQ==",
      "updated_at" : "2019-11-07T02:37:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550593789",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Making it do this with all connections would probably bad, because it would guarantee capture persistence.\r\n\r\nTo extend on this, it seems to me that a patient attacker who controls just a relatively small number of nodes but can provide 100% uptime and a large capacity for inbound connections could slowly but surely eclipse arbitrary nodes or even take over large parts of a network with a large number of anchors:\r\n\r\nEvery time some node restarts (or evicts an inbound peer), the affected inbound peers will search for new outbound connections and connect with a certain probability to one of the attackers nodes - once this has happened, this outbound slot is \"locked in\" to the attacker forever, protected by anchor logic. So the attacker could slowly capture connections over time and eventually take over large parts of the network.\r\n\r\nTo a lesser degree this could also be a problem with the idea of keeping all of the 2 blocks-only connections persistent: An attacker could capture the subset of persistent blocks-only connections over time with the strategy outlined above and neutralize the added protection that block-only connections were meant to provide. ",
      "created_at" : "2019-11-07T12:24:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-551057979",
      "id" : 551057979,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MTA1Nzk3OQ==",
      "updated_at" : "2019-11-07T12:24:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551057979",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks to all reviewers. OP has been updated.",
      "created_at" : "2019-11-07T13:33:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-551080397",
      "id" : 551080397,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MTA4MDM5Nw==",
      "updated_at" : "2019-11-07T13:33:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551080397",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">Every time some node restarts (or evicts an inbound peer), the affected inbound peers will search for new outbound connections and connect with a certain probability to one of the attackers nodes - once this has happened, this outbound slot is \"locked in\" to the attacker forever, protected by anchor logic. So the attacker could slowly capture connections over time and eventually take over large parts of the network.\r\n\r\nThe whole thing is ultimately dependent on a combination 2 factors:\r\nI) how much better are the malicious nodes comparing (in terms of a node lifetime without outages)\r\nII) which fraction of reachable nodes are malicious\r\n\r\nIt seems to me that the difference is: ``persistency allows an attacker to benefit from I``, and ``restart rotation allows an attacker to benefit from II``.\r\nLike, if an attacker deploys more sybils overtime, persistency wouldn't benefit an attacker, and restart rotation would.\r\nAt the same time, if an attacker have much higher reliability, persistency would benefit an attacker, and restart rotation won't.\r\n\r\nWe don't know for sure which one is easier to achieve, and also middle ground is not necessarily optimal, but I think this is measurable under various conditions.\r\n\r\nThere are obviously other variables.\r\nWould we prefer ``0.1% chance of being eclipsed and 50% chance of being connected to 4 spy nodes`` over ``0.3% chance of being eclipsed and 20% chance of being connected to 4 spy nodes `` under *some realistic conditions*.\r\nBeing connected to 4 spies would result in a total tx deanonymization under current protocols, so the answer to me is unclear.\r\nAs an example, I imagine the first scenario is something we get with restart rotation and the second is something we get with restart persistency, under my guess of the attacker's capabilities w.r.t number of sybils and persistency.",
      "created_at" : "2019-11-07T16:50:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-551165624",
      "id" : 551165624,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MTE2NTYyNA==",
      "updated_at" : "2019-11-07T16:51:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/551165624",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "An implementation is presented in #17428.",
      "created_at" : "2019-11-09T22:48:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-552144676",
      "id" : 552144676,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU1MjE0NDY3Ng==",
      "updated_at" : "2019-11-09T22:48:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552144676",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I do think anchors on the whole is a good idea. Let's say you have an attacker willingly\r\nto eclipse some victim by spoofing enough malicious nodes for a given period T. By anchoring,\r\nand reusing some nodes from period T -1, attacker should have started at T -1, so it increases\r\nits deployment costs to be sustained along both periods. We can extend this logic to randomly pick\r\namong our anchors peers sorted by time range. E.g picks 1 node among the January-to-March range, 1 node among April-to-June, 1 node among July-to-September, etc. That would imply we refresh our anchors.dat with outbound peers at shutdown and move from a strong persistence to a weaker one.\r\n\r\nThat's said, this implementation is far more scoped, which is a good start but IMO it may suffer\r\nfrom a weakness. Let's consider the following attack scenario, anchor selection logic is gameable\r\nand anchor peers can be occupied by an attacker. If anchors are block-only-relay, using txn/addrs relay leaks via inbound, he could discover topologies of remaining full-relay. If anchors are full-relay, attacker can't leverage leaks to discover remaining block-only-relay ones. So I think if we restrain anchors to full-relay it's better.\r\n\r\n> OPR is bad for block-relayed peers as it increases risk for a node to be eclipsed\r\n\r\nBut in this case, full-relay are also block-relay ones, so avoiding their restart rotation would\r\nalso prevent the attack described. Though it gives to an attacker a persistent advantage on tx-spying so, without further block/tx relay separation, anchoring have to balance betwene a tx-spying\r\nadvantage and loosing the hidden bonus of block-relay-only.\r\n",
      "created_at" : "2020-01-15T20:07:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-574834603",
      "id" : 574834603,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3NDgzNDYwMw==",
      "updated_at" : "2020-01-15T20:07:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/574834603",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ariard \r\n> Let's consider the following attack scenario, anchor selection logic is gameable and anchor peers can be occupied by an attacker.\r\n\r\nIn this case, if an attack is already successful, there is no reason to prevent it, and this suggestion is not applied.\r\n\r\n> If anchors are block-only-relay, using txn/addrs relay leaks via inbound, he could discover topologies of remaining full-relay. If anchors are full-relay, attacker can't leverage leaks to discover remaining block-only-relay ones. So I think if we restrain anchors to full-relay it's better.\r\n\r\nI believe that your suggestion makes the tx-relay node graph more static, which in turn makes tx spying easier, no?\r\n\r\n",
      "created_at" : "2020-01-25T10:16:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-578394143",
      "id" : 578394143,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3ODM5NDE0Mw==",
      "updated_at" : "2020-01-25T10:16:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578394143",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @gmaxwell I might be wrong, but it seems you're confusing light clients' (network|limited) blocks-only connections with block-relay-only connections we recently added?\r\n> \r\n> After [this PR](https://github.com/bitcoin/bitcoin/pull/15759), every node creates 8 regular connections **and** 2 connections which relay only blocks (no transactions and no addrs).\r\n> \r\n> Our latest discussion here were around keeping only those 2 new block-relay-only connections persistent.\r\n\r\nI can't figure out what I said to make you think that. I was aware of the behaviour and the context.",
      "created_at" : "2020-01-25T14:43:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-578411757",
      "id" : 578411757,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3ODQxMTc1Nw==",
      "updated_at" : "2020-01-25T14:43:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578411757",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@hebasto \r\n\r\n> In this case, if an attack is already successful, there is no reason to prevent it, and this suggestion is not applied.\r\n\r\n~But being successful to occupy anchor spots doesn't mean you're able to take over the remaining outbound full-relay ones. One vulnerability which lets an attacker controlling _some_ outbound connections may be exploited to pursue an escalation and gain total eclipse over the victim, we should prevent this.~ I see our misunderstanding, I wasn't assuming anchors=block-only as it is right now with your implementation but was thinking more generally if we open connections based on peers being among our anchors repository.\r\n\r\n> I believe that your suggestion makes the tx-relay node graph more static, which in turn makes tx spying easier, no?\r\n\r\nYes I agree on this point, see the end of my previous comment. But I would favor eclipse-safety over tx-spying concerns, because failing the first one you may loose money, the second one you can circumvent it by announcing your txn over Tor or other. Though part of a wider debate..\r\n",
      "created_at" : "2020-01-30T00:49:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-580033087",
      "id" : 580033087,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDAzMzA4Nw==",
      "updated_at" : "2020-01-30T01:49:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580033087",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The initial idea to mitigate eclipse attacks based on node restarts, included ones initiated by adversary, introduces a [new risk](https://github.com/bitcoin/bitcoin/pull/17428#issuecomment-579580035).",
      "created_at" : "2020-02-08T13:35:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-583737141",
      "id" : 583737141,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MzczNzE0MQ==",
      "updated_at" : "2020-02-08T13:35:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583737141",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "why is this issue closed?",
      "created_at" : "2020-02-24T14:47:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-590356692",
      "id" : 590356692,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MDM1NjY5Mg==",
      "updated_at" : "2020-02-24T14:47:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590356692",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> why is this issue closed?\r\n\r\nTo keep all discussion in #17428.",
      "created_at" : "2020-02-27T19:35:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/17326#issuecomment-592138922",
      "id" : 592138922,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17326",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MjEzODkyMg==",
      "updated_at" : "2020-02-27T19:35:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592138922",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   }
]
