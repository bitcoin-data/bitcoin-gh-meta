{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "_Submitting as draft pull request: seeking Concept ACK:s._\r\n\r\nTautological run-time checks may be an indication of incorrect logic. Enabling compiler warnings for tautological checks can help identify such issues early in the development cycle.\r\n\r\nIf it is clear already at compile-time that a run-time check is tautological it is better to make it a compile-time check using `static_assert` (if possible and assuming the check should be kept).\r\n\r\nCompile-time checking is preferred over run-time checking as noted in the developer notes:\r\n\r\n> `static_assert` is preferred over `assert` where possible. Generally; compile-time checking is preferred over run-time checking.\r\n\r\nSuggested changes in this PR:\r\n* Commit 1. Make compiler warn about tautological comparisons (`-Wtautological-constant-in-range-compare` in Clang)\r\n* Commit 2. Get rid of current warnings by replacing the run-time tautological comparisons with equivalent compile-time assertions (`static_assert`)\r\n\r\n---\r\n\r\nCompiler output given `-Wtautological-constant-in-range-compare` before this PR:\r\n\r\n```\r\n$ make\r\nutil/strencodings.cpp:304:11: warning: result of comparison 'long long' >= -9223372036854775808 is always true [-Wtautological-type-limit-compare]\r\n        n >= std::numeric_limits<int64_t>::min() &&\r\n        ~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nutil/strencodings.cpp:305:11: warning: result of comparison 'long long' <= 9223372036854775807 is always true [-Wtautological-type-limit-compare]\r\n        n <= std::numeric_limits<int64_t>::max();\r\n        ~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nutil/strencodings.cpp:338:11: warning: result of comparison 'unsigned long long' <= 18446744073709551615 is always true [-Wtautological-type-limit-compare]\r\n        n <= std::numeric_limits<uint64_t>::max();\r\n        ~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncore_write.cpp:100:15: warning: result of comparison of 0 <= unsigned enum expression is always true [-Wtautological-unsigned-enum-zero-compare]\r\n        if (0 <= opcode && opcode <= OP_PUSHDATA4) {\r\n            ~ ^  ~~~~~~\r\nscript/script.h:449:20: warning: result of comparison of unsigned enum expression < 0 is always false [-Wtautological-unsigned-enum-zero-compare]\r\n        if (opcode < 0 || opcode > 0xff)\r\n            ~~~~~~ ^ ~\r\nscript/script.h:449:34: warning: result of comparison 'opcodetype' > 255 is always false [-Wtautological-type-limit-compare]\r\n        if (opcode < 0 || opcode > 0xff)\r\n                          ~~~~~~ ^ ~~~~\r\nscript/interpreter.cpp:343:28: warning: result of comparison of 0 <= unsigned enum expression is always true [-Wtautological-unsigned-enum-zero-compare]\r\n            if (fExec && 0 <= opcode && opcode <= OP_PUSHDATA4) {\r\n                         ~ ^  ~~~~~~\r\n$\r\n```\r\n\r\nCompiler output given `-Wtautological-constant-in-range-compare` after this PR:\r\n\r\n```\r\n$ make\r\n$\r\n```",
   "closed_at" : "2019-10-30T17:56:51Z",
   "closed_by" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   },
   "comments" : 3,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17320/comments",
   "created_at" : "2019-10-30T16:10:53Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17320/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/17320",
   "id" : 514797434,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      },
      {
         "color" : "009800",
         "default" : false,
         "id" : 192202000,
         "name" : "Consensus",
         "node_id" : "MDU6TGFiZWwxOTIyMDIwMDA=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Consensus"
      },
      {
         "color" : "5319e7",
         "default" : false,
         "id" : 241832923,
         "name" : "Utils/log/libs",
         "node_id" : "MDU6TGFiZWwyNDE4MzI5MjM=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17320/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MzM0MzYxNTI5",
   "number" : 17320,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/17320.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/17320",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/17320.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/17320"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Make compiler warn about tautological run-time comparisons",
   "updated_at" : "2019-10-30T17:56:51Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/17320",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
