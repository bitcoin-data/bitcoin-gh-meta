[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> This can best be seen by the example of two transactions in the wallet that spend the same input.\r\n\r\nIt seems like one way to handle this would be to store more transaction metadata. We already store \"replaces_txid\" and \"replaced_by_txid\" values for bumpfee transactions. If we started assigning these values in general when adding new transactions that spend the same inputs as existing transactions, we could avoid double counting change outputs by not including change from transactions with a \"replaced_by\" property in the unconfirmed balance.",
      "created_at" : "2017-12-13T18:33:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11887#issuecomment-351481255",
      "id" : 351481255,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11887",
      "updated_at" : "2017-12-13T18:34:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/351481255",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "#11020 obliquely addresses this issue by adding include_unavailable options to getbalance and getunconfirmedbalance RPCs.",
      "created_at" : "2018-01-09T20:16:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11887#issuecomment-356401461",
      "id" : 356401461,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11887",
      "updated_at" : "2018-01-09T20:16:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356401461",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Now that we have package testmempoolaccept (since #20833), would it be sufficient to test accept all the non-mempool wallet transactions to get this information when we need it?",
      "created_at" : "2022-03-08T16:10:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11887#issuecomment-1061946262",
      "id" : 1061946262,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11887",
      "node_id" : "IC_kwDOABII584_TAOW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061946262/reactions"
      },
      "updated_at" : "2022-03-08T16:10:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1061946262",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Thanks to @harding for pinging us on this, but: in Joinmarket, we have had a number of user reports (via our Telegram support chat and a couple other places) for the last several weeks (while mempool sizes were trending higher ofc) of missing balance. It seems that it is related to what @morcos has described above here.\r\n\r\nContext: Joinmarket uses an unusual, nowadays (and probably bad!) model for tracking its wallet: starting from a normal BIP84 seed, we are using address imports into a **watch-only** Core wallet and then, to track address usage we use `listaddressgroupings`, then we use `listunspent` on startup to get an up-to-date picture of currently unspent funds, and then during running we are using `listtransactions` to make updates to our JM wallet's \"utxo set\". [Here](https://github.com/JoinMarket-Org/joinmarket-clientserver/issues/1465#issuecomment-1499356251) is a description of some of that.\r\n\r\nSo you can see we are keeping track entirely via the wallet RPC calls to Core.\r\n\r\nIn practice in something like Joinmarket you have users on the maker- side that are obviously concerned to see the new funds disappear without the old funds reappearing (because the taker used a low fee). In many cases they are exporting their wallet to another client (e.g. Sparrow) that can \"find\" the funds, I'm not sure if it's because that client accesses external Electrum servers (which might have bigger mempools ofc!), or something else is going on there.\r\n\r\nAlternatively some of them just reconfigured their mempool to be bigger, and reported they could \"rediscover\" the funds that way within Joinmarket itself.\r\n\r\nApologies that the title of the [issue](https://github.com/JoinMarket-Org/joinmarket-clientserver/issues/1465#issuecomment-1494996171) refers to \"address reuse\" *as well as* missing balances, so I've linked you to the first part of the thread that focuses only on the missing balance part.\r\n\r\nI think I understand (a) why the problem arises and (b) why it's a problematic thing to solve (the TLDR seems to be that it's tricky to know properly the actual functional state of a utxo which is not currently in mempool. Is the only natural stopgap (prior to things like `testmempoolaccept` described above), to use `abandontransaction`? Or is some strategy of periodic rebroadcast by remembering txs in our application itself, a good idea? ( i suppose that line of thinking resembles the `testmempoolaccept` idea).\r\n\r\n",
      "created_at" : "2023-05-14T06:15:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11887#issuecomment-1546817951",
      "id" : 1546817951,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11887",
      "node_id" : "IC_kwDOABII585cMpGf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1546817951/reactions"
      },
      "updated_at" : "2023-05-14T06:15:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1546817951",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4278257?v=4",
         "events_url" : "https://api.github.com/users/AdamISZ/events{/privacy}",
         "followers_url" : "https://api.github.com/users/AdamISZ/followers",
         "following_url" : "https://api.github.com/users/AdamISZ/following{/other_user}",
         "gists_url" : "https://api.github.com/users/AdamISZ/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/AdamISZ",
         "id" : 4278257,
         "login" : "AdamISZ",
         "node_id" : "MDQ6VXNlcjQyNzgyNTc=",
         "organizations_url" : "https://api.github.com/users/AdamISZ/orgs",
         "received_events_url" : "https://api.github.com/users/AdamISZ/received_events",
         "repos_url" : "https://api.github.com/users/AdamISZ/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/AdamISZ/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/AdamISZ/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/AdamISZ"
      }
   }
]
