[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187007787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187007787"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nice to get rid of these fake opcodes here.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-09T11:18:42Z",
      "diff_hunk" : "@@ -181,13 +181,6 @@ enum opcodetype\n     OP_NOP9 = 0xb8,\n     OP_NOP10 = 0xb9,\n \n-\n-    // template matching params\n-    OP_SMALLINTEGER = 0xfa,\n-    OP_PUBKEYS = 0xfb,\n-    OP_PUBKEYHASH = 0xfd,\n-    OP_PUBKEY = 0xfe,\n-",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187007787",
      "id" : 187007787,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 10,
      "path" : "src/script/script.h",
      "position" : 10,
      "pull_request_review_id" : 118698664,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187007787",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187057045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187057045"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Souldn't this return false if it's op_0 too? or are 0 required sigs multisigs valid?",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-09T14:22:46Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187057045",
      "id" : 187057045,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 44,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118759073,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187057045",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187058162"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187058162"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same here, shouldn't OP_0 be invalid here too?\r\nIf 0 is allowed, why not just ```opcode < OP_0 || opcode > OP_16```?",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-09T14:26:06Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n+        pubkeys.emplace_back(std::move(data));\n     }\n+    if (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187058162",
      "id" : 187058162,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 49,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118759073,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187058162",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1008458?v=4",
         "events_url" : "https://api.github.com/users/jtimon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jtimon/followers",
         "following_url" : "https://api.github.com/users/jtimon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jtimon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jtimon",
         "id" : 1008458,
         "login" : "jtimon",
         "organizations_url" : "https://api.github.com/users/jtimon/orgs",
         "received_events_url" : "https://api.github.com/users/jtimon/received_events",
         "repos_url" : "https://api.github.com/users/jtimon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jtimon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jtimon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076163"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076163"
         }
      },
      "author_association" : "MEMBER",
      "body" : "key count can be 0, I think. The only checks in the interpreter I see are for negative numbers.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-09T15:17:38Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076163",
      "id" : 187076163,
      "in_reply_to_id" : 187057045,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 44,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118782864,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076163",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076481"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076481"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Redundant check here? We know the size.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-09T15:18:36Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076481",
      "id" : 187076481,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 15,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118783270,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076481",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076517"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076517"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Redundant check here? We know the size.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-09T15:18:41Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076517",
      "id" : 187076517,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 19,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118783304,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076517",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076751"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We could just use proper constants in the lines above for more belt and suspenders.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-09T15:19:18Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187076751",
      "id" : 187076751,
      "in_reply_to_id" : 187076517,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 19,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118783541,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187076751",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187081361"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187081361"
         }
      },
      "author_association" : "MEMBER",
      "body" : "OP_0 is 0, OP_1 is 81. They aren't continuous.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-09T15:31:48Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n+        pubkeys.emplace_back(std::move(data));\n     }\n+    if (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187081361",
      "id" : 187081361,
      "in_reply_to_id" : 187058162,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 49,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118789057,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187081361",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187081525"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187081525"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`CpubKey::ValidSize` checks the data-dependent size (depending on what the first byte is).",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-09T15:32:15Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187081525",
      "id" : 187081525,
      "in_reply_to_id" : 187076481,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 15,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118789267,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187081525",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@jtimon Hybrid public keys (the 0x06 and 0x07 ones) are stupid, but were supported by OpenSSL, and because of that they're supported in Bitcoin. Nothing we can do about that.",
      "created_at" : "2018-05-09T15:33:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-387780085",
      "id" : 387780085,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "updated_at" : "2018-05-09T15:33:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387780085",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187082915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187082915"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm trying to stick to the original logic as close as possible; optimizations / other tweaks can happen later.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-09T15:36:30Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187082915",
      "id" : 187082915,
      "in_reply_to_id" : 187057045,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 44,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 118791032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187082915",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "light tACK",
      "created_at" : "2018-05-09T15:46:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-387784444",
      "id" : 387784444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "updated_at" : "2018-05-09T15:46:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387784444",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187304823"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187304823"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Agree with @sipa here. One step at a time is easier to review.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-10T11:25:22Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187304823",
      "id" : 187304823,
      "in_reply_to_id" : 187057045,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 44,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 119055993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187304823",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187318313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187318313"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Shouldn't it check the opcodes here?\r\nOh I guess not, all the push opcodes valid here will return non-empty data, and `CPubKey::ValidSize` rejects empty data.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-10T12:42:42Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187318313",
      "id" : 187318313,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 46,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 119072391,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187318313",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187319600"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187319600"
         }
      },
      "author_association" : "MEMBER",
      "body" : "An isOP_N(opcode) helper function would make this (and the expression above) slightly better readable.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-10T12:48:38Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n+        pubkeys.emplace_back(std::move(data));\n     }\n+    if (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187319600",
      "id" : 187319600,
      "in_reply_to_id" : 187058162,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 49,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 119073939,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187319600",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187782539"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782539"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Indeed (that's also what the old code does).",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-12T20:31:47Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187782539",
      "id" : 187782539,
      "in_reply_to_id" : 187318313,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 46,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 119636223,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782539",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187782556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782556"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I added an `IsSmallInteger` function for this (which would be distinct from `IsOP_N` by not accepting `OP_1NEGATE`).",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-12T20:32:25Z",
      "diff_hunk" : "@@ -35,22 +35,49 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16))) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n+        pubkeys.emplace_back(std::move(data));\n     }\n+    if (opcode != OP_0 && (opcode < OP_1 || opcode > OP_16)) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r187782556",
      "id" : 187782556,
      "in_reply_to_id" : 187058162,
      "original_commit_id" : "688d79698f4b13bf53ed670ff2cbbfb308217e31",
      "original_position" : 49,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 119636235,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782556",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188485616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188485616"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "CPubKey::PUBLIC_KEY_SIZE == 65, would add clarity",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-16T02:06:18Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188485616",
      "id" : 188485616,
      "original_commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "original_position" : 17,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 120472901,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188485616",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188485673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188485673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "CPubKey::COMPRESSED_PUBLIC_KEY_SIZE == 33, would add clarity",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-16T02:06:45Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188485673",
      "id" : 188485673,
      "original_commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "original_position" : 13,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 120472963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188485673",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188486083"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188486083"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Incidentally, I have #12461 to make these references more succinct.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-16T02:10:46Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188486083",
      "id" : 188486083,
      "in_reply_to_id" : 188485673,
      "original_commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "original_position" : 13,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 120473501,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188486083",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188489076"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188489076"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See also `IsToKeyID` in compressor.cpp, which looks equivalent.\r\n\r\nCould split this up as `CScript::IsPayToPubkeyHash`, and do the unpacking in `Solver`, ala `IsPayToScriptHash`. Would make the case handling more consistent in Solver.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-16T02:36:58Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n+\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188489076",
      "id" : 188489076,
      "original_commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "original_position" : 24,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 120476804,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188489076",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188489132"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188489132"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See also `IsToPubKey` in compressor, which looks equivalent.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-16T02:37:31Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188489132",
      "id" : 188489132,
      "original_commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "original_position" : 5,
      "path" : "src/script/standard.cpp",
      "position" : 5,
      "pull_request_review_id" : 120476867,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188489132",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK! Much simpler way to handle these 3 cases.",
      "created_at" : "2018-05-16T02:42:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-389377003",
      "id" : 389377003,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "updated_at" : "2018-05-16T02:42:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389377003",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice!\r\nutACK 2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "created_at" : "2018-05-16T06:20:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-389407717",
      "id" : 389407717,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "updated_at" : "2018-05-16T06:20:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389407717",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188808027"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188808027"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-17T00:15:07Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188808027",
      "id" : 188808027,
      "in_reply_to_id" : 188485616,
      "original_commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "original_position" : 17,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 120861641,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188808027",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188808070"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188808070"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-17T00:15:28Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188808070",
      "id" : 188808070,
      "in_reply_to_id" : 188485673,
      "original_commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "original_position" : 13,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 120861688,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188808070",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188808820"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188808820"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd rather not merging with the versions in compressor - they may end up living separate lives as the standard templates change.\r\n\r\n",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-17T00:21:15Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == 35 && script[0] == 33 && script[34] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 34);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == 67 && script[0] == 65 && script[66] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + 66);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n+\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r188808820",
      "id" : 188808820,
      "in_reply_to_id" : 188489076,
      "original_commit_id" : "2fc4fdd0945a3800af8213676182ebb2c63689d8",
      "original_position" : 24,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 120862528,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188808820",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK.",
      "created_at" : "2018-05-25T21:35:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-392193576",
      "id" : 392193576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "updated_at" : "2018-05-25T21:35:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392193576",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191033653"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191033653"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: this `required == 0` check could be an earlier return",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-26T00:29:29Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == CPubKey::PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::PUBLIC_KEY_SIZE && script[CPubKey::PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::PUBLIC_KEY_SIZE + 1);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE && script[CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n+\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+/** Test for \"small integer\" script opcodes - OP_0 through OP_16. */\n+static constexpr bool IsSmallInteger(opcodetype opcode)\n+{\n+    return opcode == OP_0 || (opcode >= OP_1 && opcode <= OP_16);\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || !IsSmallInteger(opcode)) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n+        pubkeys.emplace_back(std::move(data));\n     }\n+    if (!IsSmallInteger(opcode)) return false;\n+    unsigned int keys = CScript::DecodeOP_N(opcode);\n+    if (pubkeys.size() != keys || required == 0 || keys < required) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191033653",
      "id" : 191033653,
      "original_commit_id" : "fa1f6427729e2d4dfb82b2be5b3860b7dc418c44",
      "original_position" : 57,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 123540829,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191033653",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191033725"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191033725"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe worth noting these casts are safe due to small integer limits?",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-26T00:30:43Z",
      "diff_hunk" : "@@ -95,84 +128,27 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::v\n         return true;\n     }\n \n-    // Scan templates\n-    const CScript& script1 = scriptPubKey;\n-    for (const std::pair<txnouttype, CScript>& tplate : mTemplates)\n-    {\n-        const CScript& script2 = tplate.second;\n-        vSolutionsRet.clear();\n+    std::vector<unsigned char> data;\n+    if (MatchPayToPubkey(scriptPubKey, data)) {\n+        typeRet = TX_PUBKEY;\n+        vSolutionsRet.push_back(std::move(data));\n+        return true;\n+    }\n \n-        opcodetype opcode1, opcode2;\n-        std::vector<unsigned char> vch1, vch2;\n+    if (MatchPayToPubkeyHash(scriptPubKey, data)) {\n+        typeRet = TX_PUBKEYHASH;\n+        vSolutionsRet.push_back(std::move(data));\n+        return true;\n+    }\n \n-        // Compare\n-        CScript::const_iterator pc1 = script1.begin();\n-        CScript::const_iterator pc2 = script2.begin();\n-        while (true)\n-        {\n-            if (pc1 == script1.end() && pc2 == script2.end())\n-            {\n-                // Found a match\n-                typeRet = tplate.first;\n-                if (typeRet == TX_MULTISIG)\n-                {\n-                    // Additional checks for TX_MULTISIG:\n-                    unsigned char m = vSolutionsRet.front()[0];\n-                    unsigned char n = vSolutionsRet.back()[0];\n-                    if (m < 1 || n < 1 || m > n || vSolutionsRet.size()-2 != n)\n-                        return false;\n-                }\n-                return true;\n-            }\n-            if (!script1.GetOp(pc1, opcode1, vch1))\n-                break;\n-            if (!script2.GetOp(pc2, opcode2, vch2))\n-                break;\n-\n-            // Template matching opcodes:\n-            if (opcode2 == OP_PUBKEYS)\n-            {\n-                while (CPubKey::ValidSize(vch1))\n-                {\n-                    vSolutionsRet.push_back(vch1);\n-                    if (!script1.GetOp(pc1, opcode1, vch1))\n-                        break;\n-                }\n-                if (!script2.GetOp(pc2, opcode2, vch2))\n-                    break;\n-                // Normal situation is to fall through\n-                // to other if/else statements\n-            }\n-\n-            if (opcode2 == OP_PUBKEY)\n-            {\n-                if (!CPubKey::ValidSize(vch1))\n-                    break;\n-                vSolutionsRet.push_back(vch1);\n-            }\n-            else if (opcode2 == OP_PUBKEYHASH)\n-            {\n-                if (vch1.size() != sizeof(uint160))\n-                    break;\n-                vSolutionsRet.push_back(vch1);\n-            }\n-            else if (opcode2 == OP_SMALLINTEGER)\n-            {   // Single-byte small integer pushed onto vSolutions\n-                if (opcode1 == OP_0 ||\n-                    (opcode1 >= OP_1 && opcode1 <= OP_16))\n-                {\n-                    char n = (char)CScript::DecodeOP_N(opcode1);\n-                    vSolutionsRet.push_back(valtype(1, n));\n-                }\n-                else\n-                    break;\n-            }\n-            else if (opcode1 != opcode2 || vch1 != vch2)\n-            {\n-                // Others must match exactly\n-                break;\n-            }\n-        }\n+    unsigned int required;\n+    std::vector<std::vector<unsigned char>> keys;\n+    if (MatchMultisig(scriptPubKey, required, keys)) {\n+        typeRet = TX_MULTISIG;\n+        vSolutionsRet.push_back({static_cast<unsigned char>(required)});\n+        vSolutionsRet.insert(vSolutionsRet.end(), keys.begin(), keys.end());\n+        vSolutionsRet.push_back({static_cast<unsigned char>(keys.size())});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191033725",
      "id" : 191033725,
      "original_commit_id" : "fa1f6427729e2d4dfb82b2be5b3860b7dc418c44",
      "original_position" : 166,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 123540904,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191033725",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK fa1f642",
      "created_at" : "2018-05-26T00:31:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-392220544",
      "id" : 392220544,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "updated_at" : "2018-05-26T00:31:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392220544",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191034228"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191034228"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-26T00:39:12Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == CPubKey::PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::PUBLIC_KEY_SIZE && script[CPubKey::PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::PUBLIC_KEY_SIZE + 1);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE && script[CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n+\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+/** Test for \"small integer\" script opcodes - OP_0 through OP_16. */\n+static constexpr bool IsSmallInteger(opcodetype opcode)\n+{\n+    return opcode == OP_0 || (opcode >= OP_1 && opcode <= OP_16);\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || !IsSmallInteger(opcode)) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n+        pubkeys.emplace_back(std::move(data));\n     }\n+    if (!IsSmallInteger(opcode)) return false;\n+    unsigned int keys = CScript::DecodeOP_N(opcode);\n+    if (pubkeys.size() != keys || required == 0 || keys < required) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191034228",
      "id" : 191034228,
      "in_reply_to_id" : 191033653,
      "original_commit_id" : "fa1f6427729e2d4dfb82b2be5b3860b7dc418c44",
      "original_position" : 57,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 123541421,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191034228",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191034237"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191034237"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-26T00:39:18Z",
      "diff_hunk" : "@@ -95,84 +128,27 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::v\n         return true;\n     }\n \n-    // Scan templates\n-    const CScript& script1 = scriptPubKey;\n-    for (const std::pair<txnouttype, CScript>& tplate : mTemplates)\n-    {\n-        const CScript& script2 = tplate.second;\n-        vSolutionsRet.clear();\n+    std::vector<unsigned char> data;\n+    if (MatchPayToPubkey(scriptPubKey, data)) {\n+        typeRet = TX_PUBKEY;\n+        vSolutionsRet.push_back(std::move(data));\n+        return true;\n+    }\n \n-        opcodetype opcode1, opcode2;\n-        std::vector<unsigned char> vch1, vch2;\n+    if (MatchPayToPubkeyHash(scriptPubKey, data)) {\n+        typeRet = TX_PUBKEYHASH;\n+        vSolutionsRet.push_back(std::move(data));\n+        return true;\n+    }\n \n-        // Compare\n-        CScript::const_iterator pc1 = script1.begin();\n-        CScript::const_iterator pc2 = script2.begin();\n-        while (true)\n-        {\n-            if (pc1 == script1.end() && pc2 == script2.end())\n-            {\n-                // Found a match\n-                typeRet = tplate.first;\n-                if (typeRet == TX_MULTISIG)\n-                {\n-                    // Additional checks for TX_MULTISIG:\n-                    unsigned char m = vSolutionsRet.front()[0];\n-                    unsigned char n = vSolutionsRet.back()[0];\n-                    if (m < 1 || n < 1 || m > n || vSolutionsRet.size()-2 != n)\n-                        return false;\n-                }\n-                return true;\n-            }\n-            if (!script1.GetOp(pc1, opcode1, vch1))\n-                break;\n-            if (!script2.GetOp(pc2, opcode2, vch2))\n-                break;\n-\n-            // Template matching opcodes:\n-            if (opcode2 == OP_PUBKEYS)\n-            {\n-                while (CPubKey::ValidSize(vch1))\n-                {\n-                    vSolutionsRet.push_back(vch1);\n-                    if (!script1.GetOp(pc1, opcode1, vch1))\n-                        break;\n-                }\n-                if (!script2.GetOp(pc2, opcode2, vch2))\n-                    break;\n-                // Normal situation is to fall through\n-                // to other if/else statements\n-            }\n-\n-            if (opcode2 == OP_PUBKEY)\n-            {\n-                if (!CPubKey::ValidSize(vch1))\n-                    break;\n-                vSolutionsRet.push_back(vch1);\n-            }\n-            else if (opcode2 == OP_PUBKEYHASH)\n-            {\n-                if (vch1.size() != sizeof(uint160))\n-                    break;\n-                vSolutionsRet.push_back(vch1);\n-            }\n-            else if (opcode2 == OP_SMALLINTEGER)\n-            {   // Single-byte small integer pushed onto vSolutions\n-                if (opcode1 == OP_0 ||\n-                    (opcode1 >= OP_1 && opcode1 <= OP_16))\n-                {\n-                    char n = (char)CScript::DecodeOP_N(opcode1);\n-                    vSolutionsRet.push_back(valtype(1, n));\n-                }\n-                else\n-                    break;\n-            }\n-            else if (opcode1 != opcode2 || vch1 != vch2)\n-            {\n-                // Others must match exactly\n-                break;\n-            }\n-        }\n+    unsigned int required;\n+    std::vector<std::vector<unsigned char>> keys;\n+    if (MatchMultisig(scriptPubKey, required, keys)) {\n+        typeRet = TX_MULTISIG;\n+        vSolutionsRet.push_back({static_cast<unsigned char>(required)});\n+        vSolutionsRet.insert(vSolutionsRet.end(), keys.begin(), keys.end());\n+        vSolutionsRet.push_back({static_cast<unsigned char>(keys.size())});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191034237",
      "id" : 191034237,
      "in_reply_to_id" : 191033725,
      "original_commit_id" : "fa1f6427729e2d4dfb82b2be5b3860b7dc418c44",
      "original_position" : 166,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 123541428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191034237",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-utACK 89736a9 just addresses comments above",
      "created_at" : "2018-05-26T00:43:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-392221612",
      "id" : 392221612,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "updated_at" : "2018-05-26T00:43:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392221612",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191043595"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191043595"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit\r\n```cpp\r\nreturn it + 1 == script.end();\r\n```",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-26T08:46:36Z",
      "diff_hunk" : "@@ -35,22 +35,56 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == CPubKey::PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::PUBLIC_KEY_SIZE && script[CPubKey::PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::PUBLIC_KEY_SIZE + 1);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE && script[CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n+\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+/** Test for \"small integer\" script opcodes - OP_0 through OP_16. */\n+static constexpr bool IsSmallInteger(opcodetype opcode)\n+{\n+    return opcode == OP_0 || (opcode >= OP_1 && opcode <= OP_16);\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || !IsSmallInteger(opcode)) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    if (required == 0) return false;\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n+        pubkeys.emplace_back(std::move(data));\n     }\n+    if (!IsSmallInteger(opcode)) return false;\n+    unsigned int keys = CScript::DecodeOP_N(opcode);\n+    if (pubkeys.size() != keys || keys < required) return false;\n+    if (it + 1 != script.end()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191043595",
      "id" : 191043595,
      "original_commit_id" : "89736a9fbe7f8d92936f48cedb3e342bad7ae5e4",
      "original_position" : 59,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 123551582,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191043595",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 89736a9.",
      "created_at" : "2018-05-26T08:47:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-392247533",
      "id" : 392247533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "updated_at" : "2018-05-26T08:47:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392247533",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191055774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191055774"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-26T18:24:31Z",
      "diff_hunk" : "@@ -35,22 +35,56 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == CPubKey::PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::PUBLIC_KEY_SIZE && script[CPubKey::PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::PUBLIC_KEY_SIZE + 1);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE && script[CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n+\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+/** Test for \"small integer\" script opcodes - OP_0 through OP_16. */\n+static constexpr bool IsSmallInteger(opcodetype opcode)\n+{\n+    return opcode == OP_0 || (opcode >= OP_1 && opcode <= OP_16);\n+}\n \n-        // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n+{\n+    opcodetype opcode;\n+    valtype data;\n+    CScript::const_iterator it = script.begin();\n+    if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n+\n+    if (!script.GetOp(it, opcode, data) || !IsSmallInteger(opcode)) return false;\n+    required = CScript::DecodeOP_N(opcode);\n+    if (required == 0) return false;\n+    while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n+        pubkeys.emplace_back(std::move(data));\n     }\n+    if (!IsSmallInteger(opcode)) return false;\n+    unsigned int keys = CScript::DecodeOP_N(opcode);\n+    if (pubkeys.size() != keys || keys < required) return false;\n+    if (it + 1 != script.end()) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191055774",
      "id" : 191055774,
      "in_reply_to_id" : 191043595,
      "original_commit_id" : "89736a9fbe7f8d92936f48cedb3e342bad7ae5e4",
      "original_position" : 59,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 123563721,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191055774",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191497856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191497856"
         }
      },
      "author_association" : "MEMBER",
      "body" : "what about `script.back() == OP_CHECKSIG`?",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-29T16:53:35Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == CPubKey::PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::PUBLIC_KEY_SIZE && script[CPubKey::PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191497856",
      "id" : 191497856,
      "original_commit_id" : "c639f5ac2044432e792e6c2f4672d1514abdaff2",
      "original_position" : 13,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 124081305,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191497856",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8403418?v=4",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191500689"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191500689"
         }
      },
      "author_association" : "MEMBER",
      "body" : "if you remove `opcode == OP_0` here, you can remove `if (required == 0) return false;` below",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-29T17:02:47Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == CPubKey::PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::PUBLIC_KEY_SIZE && script[CPubKey::PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::PUBLIC_KEY_SIZE + 1);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE && script[CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n+\n+/** Test for \"small integer\" script opcodes - OP_0 through OP_16. */\n+static constexpr bool IsSmallInteger(opcodetype opcode)\n+{\n+    return opcode == OP_0 || (opcode >= OP_1 && opcode <= OP_16);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191500689",
      "id" : 191500689,
      "original_commit_id" : "c639f5ac2044432e792e6c2f4672d1514abdaff2",
      "original_position" : 38,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 124084817,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191500689",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8403418?v=4",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191583502"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191583502"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-29T21:42:08Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == CPubKey::PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::PUBLIC_KEY_SIZE && script[CPubKey::PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::PUBLIC_KEY_SIZE + 1);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    if (script.size() == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE && script[CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1);\n+        return CPubKey::ValidSize(pubkey);\n+    }\n+    return false;\n+}\n \n-        // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n+{\n+    if (script.size() == 25 && script[0] == OP_DUP && script[1] == OP_HASH160 && script[2] == 20 && script[23] == OP_EQUALVERIFY && script[24] == OP_CHECKSIG) {\n+        pubkeyhash = valtype(script.begin () + 3, script.begin() + 23);\n+        return true;\n+    }\n+    return false;\n+}\n+\n+/** Test for \"small integer\" script opcodes - OP_0 through OP_16. */\n+static constexpr bool IsSmallInteger(opcodetype opcode)\n+{\n+    return opcode == OP_0 || (opcode >= OP_1 && opcode <= OP_16);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191583502",
      "id" : 191583502,
      "in_reply_to_id" : 191500689,
      "original_commit_id" : "c639f5ac2044432e792e6c2f4672d1514abdaff2",
      "original_position" : 38,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 124183653,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191583502",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191583530"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191583530"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-29T21:42:15Z",
      "diff_hunk" : "@@ -35,22 +35,55 @@ const char* GetTxnOutputType(txnouttype t)\n     return nullptr;\n }\n \n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n+static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    // Templates\n-    static std::multimap<txnouttype, CScript> mTemplates;\n-    if (mTemplates.empty())\n-    {\n-        // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+    if (script.size() == CPubKey::PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::PUBLIC_KEY_SIZE && script[CPubKey::PUBLIC_KEY_SIZE + 1] == OP_CHECKSIG) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#discussion_r191583530",
      "id" : 191583530,
      "in_reply_to_id" : 191497856,
      "original_commit_id" : "c639f5ac2044432e792e6c2f4672d1514abdaff2",
      "original_position" : 13,
      "path" : "src/script/standard.cpp",
      "position" : null,
      "pull_request_review_id" : 124183689,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13194",
      "updated_at" : "2018-05-29T21:42:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191583530",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK c814e2e",
      "created_at" : "2018-05-30T09:07:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-393087972",
      "id" : 393087972,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "updated_at" : "2018-05-30T09:07:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/393087972",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/8403418?v=4",
         "events_url" : "https://api.github.com/users/jl2012/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jl2012/followers",
         "following_url" : "https://api.github.com/users/jl2012/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jl2012/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jl2012",
         "id" : 8403418,
         "login" : "jl2012",
         "organizations_url" : "https://api.github.com/users/jl2012/orgs",
         "received_events_url" : "https://api.github.com/users/jl2012/received_events",
         "repos_url" : "https://api.github.com/users/jl2012/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jl2012/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jl2012"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK c814e2e7e81fd01fcb07f4a28435741bdc463801",
      "created_at" : "2018-05-30T14:50:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-393192197",
      "id" : 393192197,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5MzE5MjE5Nw==",
      "updated_at" : "2018-05-30T14:50:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/393192197",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This change has the side effect that invalid pubkeys (with correct size of 33 or 65) in bare multisig are now non-standard (see #14104)",
      "created_at" : "2018-08-30T09:09:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13194#issuecomment-417247415",
      "id" : 417247415,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13194",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxNzI0NzQxNQ==",
      "updated_at" : "2018-08-30T09:09:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/417247415",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/178464?v=4",
         "events_url" : "https://api.github.com/users/jonasschnelli/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasschnelli/followers",
         "following_url" : "https://api.github.com/users/jonasschnelli/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasschnelli",
         "id" : 178464,
         "login" : "jonasschnelli",
         "node_id" : "MDQ6VXNlcjE3ODQ2NA==",
         "organizations_url" : "https://api.github.com/users/jonasschnelli/orgs",
         "received_events_url" : "https://api.github.com/users/jonasschnelli/received_events",
         "repos_url" : "https://api.github.com/users/jonasschnelli/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasschnelli/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasschnelli"
      }
   }
]
