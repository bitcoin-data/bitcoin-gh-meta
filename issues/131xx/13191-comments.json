[
   {
      "author_association" : "OWNER",
      "body" : "Looks like these whole chains of functions are unused after this, except in the merkle tests:\r\n```\r\nBlockMerkleBranch Ã¢ÂÂ ComputeMerkleBranch Ã¢ÂÂ MerkleComputation\r\nComputeMerkleRootFromBranch\r\n```\r\nMight want to move some functions there.",
      "created_at" : "2018-05-09T13:18:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-387735499",
      "id" : 387735499,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "updated_at" : "2018-05-09T13:19:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387735499",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r187040748"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187040748"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`Read8` and `Write8` appear to read and write values respectively in opposite order, I suppose this is intentional?\r\n\r\nunrelated: I also wonder if this could be done with a parallel instruction instead of calling into `ReadBE32`/`WriteBE32` for each component, as we know the host endianness.",
      "commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "created_at" : "2018-05-09T13:33:02Z",
      "diff_hunk" : "@@ -0,0 +1,327 @@\n+#ifdef ENABLE_AVX2\n+\n+#include <stdint.h>\n+#if defined(_MSC_VER)\n+#include <immintrin.h>\n+#elif defined(__GNUC__)\n+#include <x86intrin.h>\n+#endif\n+\n+#include \"crypto/sha256.h\"\n+#include \"crypto/common.h\"\n+\n+namespace sha256d64_avx2 {\n+namespace {\n+\n+__m256i inline K(uint32_t x) { return _mm256_set1_epi32(x); }\n+\n+__m256i inline Add(__m256i x, __m256i y) { return _mm256_add_epi32(x, y); }\n+__m256i inline Add(__m256i x, __m256i y, __m256i z) { return Add(Add(x, y), z); }\n+__m256i inline Add(__m256i x, __m256i y, __m256i z, __m256i w) { return Add(Add(x, y), Add(z, w)); }\n+__m256i inline Add(__m256i x, __m256i y, __m256i z, __m256i w, __m256i v) { return Add(Add(x, y, z), Add(w, v)); }\n+__m256i inline Inc(__m256i& x, __m256i y) { x = Add(x, y); return x; }\n+__m256i inline Inc(__m256i& x, __m256i y, __m256i z) { x = Add(x, y, z); return x; }\n+__m256i inline Inc(__m256i& x, __m256i y, __m256i z, __m256i w) { x = Add(x, y, z, w); return x; }\n+__m256i inline Xor(__m256i x, __m256i y) { return _mm256_xor_si256(x, y); }\n+__m256i inline Xor(__m256i x, __m256i y, __m256i z) { return Xor(Xor(x, y), z); }\n+__m256i inline Or(__m256i x, __m256i y) { return _mm256_or_si256(x, y); }\n+__m256i inline And(__m256i x, __m256i y) { return _mm256_and_si256(x, y); }\n+__m256i inline ShR(__m256i x, int n) { return _mm256_srli_epi32(x, n); }\n+__m256i inline ShL(__m256i x, int n) { return _mm256_slli_epi32(x, n); }\n+\n+__m256i inline Ch(__m256i x, __m256i y, __m256i z) { return Xor(z, And(x, Xor(y, z))); }\n+__m256i inline Maj(__m256i x, __m256i y, __m256i z) { return Or(And(x, y), And(z, Or(x, y))); }\n+__m256i inline Sigma0(__m256i x) { return Xor(Or(ShR(x, 2), ShL(x, 30)), Or(ShR(x, 13), ShL(x, 19)), Or(ShR(x, 22), ShL(x, 10))); }\n+__m256i inline Sigma1(__m256i x) { return Xor(Or(ShR(x, 6), ShL(x, 26)), Or(ShR(x, 11), ShL(x, 21)), Or(ShR(x, 25), ShL(x, 7))); }\n+__m256i inline sigma0(__m256i x) { return Xor(Or(ShR(x, 7), ShL(x, 25)), Or(ShR(x, 18), ShL(x, 14)), ShR(x, 3)); }\n+__m256i inline sigma1(__m256i x) { return Xor(Or(ShR(x, 17), ShL(x, 15)), Or(ShR(x, 19), ShL(x, 13)), ShR(x, 10)); }\n+\n+/** One round of SHA-256. */\n+void inline __attribute__((always_inline)) Round(__m256i a, __m256i b, __m256i c, __m256i& d, __m256i e, __m256i f, __m256i g, __m256i& h, __m256i k)\n+{\n+    __m256i t1 = Add(h, Sigma1(e), Ch(e, f, g), k);\n+    __m256i t2 = Add(Sigma0(a), Maj(a, b, c));\n+    d = Add(d, t1);\n+    h = Add(t1, t2);\n+}\n+\n+__m256i inline Read8(const unsigned char* chunk, int offset) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r187040748",
      "id" : 187040748,
      "original_commit_id" : "6904dc15cdf6889ab041c101f31bace9d5a7aeac",
      "original_position" : 48,
      "path" : "src/crypto/sha256_avx2.cpp",
      "position" : 48,
      "pull_request_review_id" : 118738776,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191",
      "updated_at" : "2018-05-29T21:21:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187040748",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r187079985"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187079985"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed! Indeed, there exist byte-shuffle intrinsics for SSE4 and AVX2; I've used those instead of individual byteswaps.",
      "commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "created_at" : "2018-05-09T15:28:10Z",
      "diff_hunk" : "@@ -0,0 +1,327 @@\n+#ifdef ENABLE_AVX2\n+\n+#include <stdint.h>\n+#if defined(_MSC_VER)\n+#include <immintrin.h>\n+#elif defined(__GNUC__)\n+#include <x86intrin.h>\n+#endif\n+\n+#include \"crypto/sha256.h\"\n+#include \"crypto/common.h\"\n+\n+namespace sha256d64_avx2 {\n+namespace {\n+\n+__m256i inline K(uint32_t x) { return _mm256_set1_epi32(x); }\n+\n+__m256i inline Add(__m256i x, __m256i y) { return _mm256_add_epi32(x, y); }\n+__m256i inline Add(__m256i x, __m256i y, __m256i z) { return Add(Add(x, y), z); }\n+__m256i inline Add(__m256i x, __m256i y, __m256i z, __m256i w) { return Add(Add(x, y), Add(z, w)); }\n+__m256i inline Add(__m256i x, __m256i y, __m256i z, __m256i w, __m256i v) { return Add(Add(x, y, z), Add(w, v)); }\n+__m256i inline Inc(__m256i& x, __m256i y) { x = Add(x, y); return x; }\n+__m256i inline Inc(__m256i& x, __m256i y, __m256i z) { x = Add(x, y, z); return x; }\n+__m256i inline Inc(__m256i& x, __m256i y, __m256i z, __m256i w) { x = Add(x, y, z, w); return x; }\n+__m256i inline Xor(__m256i x, __m256i y) { return _mm256_xor_si256(x, y); }\n+__m256i inline Xor(__m256i x, __m256i y, __m256i z) { return Xor(Xor(x, y), z); }\n+__m256i inline Or(__m256i x, __m256i y) { return _mm256_or_si256(x, y); }\n+__m256i inline And(__m256i x, __m256i y) { return _mm256_and_si256(x, y); }\n+__m256i inline ShR(__m256i x, int n) { return _mm256_srli_epi32(x, n); }\n+__m256i inline ShL(__m256i x, int n) { return _mm256_slli_epi32(x, n); }\n+\n+__m256i inline Ch(__m256i x, __m256i y, __m256i z) { return Xor(z, And(x, Xor(y, z))); }\n+__m256i inline Maj(__m256i x, __m256i y, __m256i z) { return Or(And(x, y), And(z, Or(x, y))); }\n+__m256i inline Sigma0(__m256i x) { return Xor(Or(ShR(x, 2), ShL(x, 30)), Or(ShR(x, 13), ShL(x, 19)), Or(ShR(x, 22), ShL(x, 10))); }\n+__m256i inline Sigma1(__m256i x) { return Xor(Or(ShR(x, 6), ShL(x, 26)), Or(ShR(x, 11), ShL(x, 21)), Or(ShR(x, 25), ShL(x, 7))); }\n+__m256i inline sigma0(__m256i x) { return Xor(Or(ShR(x, 7), ShL(x, 25)), Or(ShR(x, 18), ShL(x, 14)), ShR(x, 3)); }\n+__m256i inline sigma1(__m256i x) { return Xor(Or(ShR(x, 17), ShL(x, 15)), Or(ShR(x, 19), ShL(x, 13)), ShR(x, 10)); }\n+\n+/** One round of SHA-256. */\n+void inline __attribute__((always_inline)) Round(__m256i a, __m256i b, __m256i c, __m256i& d, __m256i e, __m256i f, __m256i g, __m256i& h, __m256i k)\n+{\n+    __m256i t1 = Add(h, Sigma1(e), Ch(e, f, g), k);\n+    __m256i t2 = Add(Sigma0(a), Maj(a, b, c));\n+    d = Add(d, t1);\n+    h = Add(t1, t2);\n+}\n+\n+__m256i inline Read8(const unsigned char* chunk, int offset) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r187079985",
      "id" : 187079985,
      "in_reply_to_id" : 187040748,
      "original_commit_id" : "6904dc15cdf6889ab041c101f31bace9d5a7aeac",
      "original_position" : 48,
      "path" : "src/crypto/sha256_avx2.cpp",
      "position" : 48,
      "pull_request_review_id" : 118787402,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191",
      "updated_at" : "2018-05-29T21:21:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187079985",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r187109129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187109129"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Shouldn't there be a space between \"1024,\" and \"0\"?",
      "commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "created_at" : "2018-05-09T17:06:45Z",
      "diff_hunk" : "@@ -52,6 +52,14 @@ static void SHA256_32b(benchmark::State& state)\n     }\n }\n \n+static void DSHA256_64b(benchmark::State& state)\n+{\n+    std::vector<uint8_t> in(64 * 1024,0);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r187109129",
      "id" : 187109129,
      "original_commit_id" : "b36eac01fcb9e5b9a98d925405138cd816a8ae05",
      "original_position" : 6,
      "path" : "src/bench/crypto_hash.cpp",
      "position" : null,
      "pull_request_review_id" : 118823405,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191",
      "updated_at" : "2018-05-29T21:21:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187109129",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK!\r\n\r\n@sipa Please see the build-system comments on #13203, I didn't realize this was a different PR. I'll follow-up here for non-power changes.",
      "created_at" : "2018-05-09T19:54:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-387855935",
      "id" : 387855935,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "updated_at" : "2018-05-09T19:54:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387855935",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r187166734"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187166734"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just because libbitcoinconsensus doesn't take advantage of 4way? Or some buildsystem limitation?",
      "commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "created_at" : "2018-05-09T20:30:18Z",
      "diff_hunk" : "@@ -465,22 +470,28 @@ bool SelfTest(TransformType tr) {\n \n TransformType Transform = sha256::Transform;\n TransformD64Type TransformD64 = sha256::TransformD64;\n+TransformD64Type TransformD64_4way = nullptr;\n } // namespace\n \n std::string SHA256AutoDetect()\n {\n+    std::string ret = \"standard\";\n #if defined(USE_ASM) && (defined(__x86_64__) || defined(__amd64__))\n     uint32_t eax, ebx, ecx, edx;\n     if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx >> 19) & 1) {\n         Transform = sha256_sse4::Transform;\n         TransformD64 = TransformD64Wrapper<sha256_sse4::Transform>;\n-        assert(SelfTest(Transform));\n-        return \"sse4\";\n+#if defined(ENABLE_SSE41) && !defined(BUILD_BITCOIN_INTERNAL)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r187166734",
      "id" : 187166734,
      "original_commit_id" : "d473e1e0d00be665b5e755b797538e7c5262981d",
      "original_position" : 29,
      "path" : "src/crypto/sha256.cpp",
      "position" : null,
      "pull_request_review_id" : 118893367,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191",
      "updated_at" : "2018-05-29T21:21:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187166734",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r187167068"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187167068"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Both.\r\n\r\nI didn't feel like creating copies of all the architecture-specialized libs for use within libbitcoinconsensus - especially as it doesn't benefit it.",
      "commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "created_at" : "2018-05-09T20:31:39Z",
      "diff_hunk" : "@@ -465,22 +470,28 @@ bool SelfTest(TransformType tr) {\n \n TransformType Transform = sha256::Transform;\n TransformD64Type TransformD64 = sha256::TransformD64;\n+TransformD64Type TransformD64_4way = nullptr;\n } // namespace\n \n std::string SHA256AutoDetect()\n {\n+    std::string ret = \"standard\";\n #if defined(USE_ASM) && (defined(__x86_64__) || defined(__amd64__))\n     uint32_t eax, ebx, ecx, edx;\n     if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx >> 19) & 1) {\n         Transform = sha256_sse4::Transform;\n         TransformD64 = TransformD64Wrapper<sha256_sse4::Transform>;\n-        assert(SelfTest(Transform));\n-        return \"sse4\";\n+#if defined(ENABLE_SSE41) && !defined(BUILD_BITCOIN_INTERNAL)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r187167068",
      "id" : 187167068,
      "in_reply_to_id" : 187166734,
      "original_commit_id" : "d473e1e0d00be665b5e755b797538e7c5262981d",
      "original_position" : 29,
      "path" : "src/crypto/sha256.cpp",
      "position" : null,
      "pull_request_review_id" : 118893803,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191",
      "updated_at" : "2018-05-29T21:21:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187167068",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Great job! \r\nAny plans to add support for AVX512?\r\n\r\nI know there are not so many people with AVX512 CPU's but why not add it from now? \r\n\r\nAll Intel CPU's will have support for AVX512 in coming months (mainstream + server). \r\n\r\n\r\n",
      "created_at" : "2018-05-10T06:35:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-387965819",
      "id" : 387965819,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "updated_at" : "2018-05-10T06:37:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387965819",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/22077313?v=4",
         "events_url" : "https://api.github.com/users/Kick1986/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Kick1986/followers",
         "following_url" : "https://api.github.com/users/Kick1986/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Kick1986/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Kick1986",
         "id" : 22077313,
         "login" : "Kick1986",
         "organizations_url" : "https://api.github.com/users/Kick1986/orgs",
         "received_events_url" : "https://api.github.com/users/Kick1986/received_events",
         "repos_url" : "https://api.github.com/users/Kick1986/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Kick1986/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Kick1986/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Kick1986"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Some benchmarks numbers about AVX512 in the article below! \r\n\r\nhttps://hk.saowen.com/a/218fa211f2b705dc6ebc2691a2b21743ce7cd95585c781d181b3809352bffbe3\r\n\r\nhttps://github.com/intel/intel-ipsec-mb/blob/master/README\r\n",
      "created_at" : "2018-05-10T06:36:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-387966010",
      "id" : 387966010,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "updated_at" : "2018-05-10T06:40:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387966010",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/22077313?v=4",
         "events_url" : "https://api.github.com/users/Kick1986/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Kick1986/followers",
         "following_url" : "https://api.github.com/users/Kick1986/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Kick1986/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Kick1986",
         "id" : 22077313,
         "login" : "Kick1986",
         "organizations_url" : "https://api.github.com/users/Kick1986/orgs",
         "received_events_url" : "https://api.github.com/users/Kick1986/received_events",
         "repos_url" : "https://api.github.com/users/Kick1986/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Kick1986/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Kick1986/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Kick1986"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> I know there are not so many people with AVX512 CPU's but why not add it from now?\r\n\r\nThat is not how open source development works. A PR is for reviewing the code. Future improvements can be done in future PRs. For example @TheBlueMatt adds support for POWER8 instructions in #13203. I might add ARM intrinsics support at some point.",
      "created_at" : "2018-05-10T06:58:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-387969899",
      "id" : 387969899,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "updated_at" : "2018-05-10T06:58:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387969899",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@laanwj The algorithm in `MerkleComputation` is actually potentially more efficient (better memory locality) than the one in `ComputeMerkleRoot` now, apart from the fact that it doesn't take advantage of multi-way hashing. I'd like to keep it around for a bit and see if I can adapt it to use multi-way instead, in which case it could be used for everything. I can also move it and move it back if used. What do you think?\r\n\r\n@Kick1986 AVX512 is cool, but it's low-impact (even machines that support it right now do it with reduced clock rate), and I'm unable to benchmark it. Feel free to add in follow-up work yoursel, though.",
      "created_at" : "2018-05-11T19:46:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-388467321",
      "id" : 388467321,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "updated_at" : "2018-05-11T19:46:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388467321",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@sipa\r\nThanks for answering me!\r\nYou are right about AVX512 clock speed, it will go mainstream sometime 2020.\r\nI will do my best to add AVX512 to BTC code before that.\r\nThanks ",
      "created_at" : "2018-05-12T00:47:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-388518082",
      "id" : 388518082,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "updated_at" : "2018-05-12T00:47:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388518082",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/22077313?v=4",
         "events_url" : "https://api.github.com/users/Kick1986/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Kick1986/followers",
         "following_url" : "https://api.github.com/users/Kick1986/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Kick1986/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Kick1986",
         "id" : 22077313,
         "login" : "Kick1986",
         "organizations_url" : "https://api.github.com/users/Kick1986/orgs",
         "received_events_url" : "https://api.github.com/users/Kick1986/received_events",
         "repos_url" : "https://api.github.com/users/Kick1986/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Kick1986/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Kick1986/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Kick1986"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@laanwj I moved the unused Merkle branch functions to the test code. Also:\r\n\r\n> I might add ARM intrinsics support at some point.\r\n\r\n:+1: That sounds far more impactful than POWER8, to be honest ;)\r\n\r\n@theuni I've addressed some of your build system comments from #13203, but left the `ENABLE_AVX2` and `ENABLE_SSE41` macros, because there isn't a clean platform independent way to use compiler defines. `__AVX2__` exists in both GCC and MSVC, but there is no `__SSE4_1__` in MSVC (and worse, there is no way to test for SSE4 at all there; you have to test whether the FP code is x87 based or SSE based).\r\n\r\n@kristapsk Ok, I've added a space.",
      "created_at" : "2018-05-12T19:14:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-388576673",
      "id" : 388576673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "updated_at" : "2018-05-13T03:00:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388576673",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Lightly tested ACK. \r\n\r\nWe should open a issue to track doing a specialized 1-way 64-byte SSE4 function for this later as that is a pretty much guaranteed performance gain (as the non-specialized 1-way SSE4 that does more work is faster than the specialized non-SSE4 1-way code) which can be done by someone who knows assembly but knows little about Bitcoin.\r\n\r\nWe might want to add a note to explain the specialization along the lines of: the 64-byte input (and 32-byte input in the second SHA256 invocation) mean that most of the input to the message expansion is zeros, which lets us drop out a lot of additions.",
      "created_at" : "2018-05-15T19:00:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-389277189",
      "id" : 389277189,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "updated_at" : "2018-05-15T19:00:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389277189",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@gmaxwell Yes, perhaps. But the impact of that would be pretty low at best, as every system in which that optimized 1-way code can be used also supports 4-way 64-byte optimized code already; meaning such an implementation would only be used for up to 3 of the last hashes in each level of a Merkle tree.",
      "created_at" : "2018-05-17T00:25:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-389706444",
      "id" : 389706444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "updated_at" : "2018-05-17T00:25:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389706444",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@theuni Could you have a look at the build system changes again?",
      "created_at" : "2018-05-20T19:29:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-390505390",
      "id" : 390505390,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "updated_at" : "2018-05-20T19:29:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390505390",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa thanks for the fixups. utACK build-system changes.",
      "created_at" : "2018-05-29T16:47:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-392847871",
      "id" : 392847871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "updated_at" : "2018-05-29T16:47:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392847871",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191498614"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191498614"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: pass leaves by value. It can be std::move'd from BlockMerkleRoot.",
      "commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "created_at" : "2018-05-29T16:55:53Z",
      "diff_hunk" : "@@ -131,9 +131,23 @@ static void MerkleComputation(const std::vector<uint256>& leaves, uint256* proot\n }\n \n uint256 ComputeMerkleRoot(const std::vector<uint256>& leaves, bool* mutated) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191498614",
      "id" : 191498614,
      "original_commit_id" : "0bc5ec3732f07fd003e24de08fae334d7d1e8716",
      "original_position" : 3,
      "path" : "src/consensus/merkle.cpp",
      "position" : null,
      "pull_request_review_id" : 124082241,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191",
      "updated_at" : "2018-05-29T21:21:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191498614",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191509549"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191509549"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since there's arithmetic involved now and not just a simple cast, please give the constants an 'ul' suffix just to be explicit.",
      "commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "created_at" : "2018-05-29T17:31:40Z",
      "diff_hunk" : "@@ -61,73 +61,73 @@ void Transform(uint32_t* s, const unsigned char* chunk, size_t blocks)\n         uint32_t a = s[0], b = s[1], c = s[2], d = s[3], e = s[4], f = s[5], g = s[6], h = s[7];\n         uint32_t w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15;\n \n-        Round(a, b, c, d, e, f, g, h, 0x428a2f98, w0 = ReadBE32(chunk + 0));\n-        Round(h, a, b, c, d, e, f, g, 0x71374491, w1 = ReadBE32(chunk + 4));\n-        Round(g, h, a, b, c, d, e, f, 0xb5c0fbcf, w2 = ReadBE32(chunk + 8));\n-        Round(f, g, h, a, b, c, d, e, 0xe9b5dba5, w3 = ReadBE32(chunk + 12));\n-        Round(e, f, g, h, a, b, c, d, 0x3956c25b, w4 = ReadBE32(chunk + 16));\n-        Round(d, e, f, g, h, a, b, c, 0x59f111f1, w5 = ReadBE32(chunk + 20));\n-        Round(c, d, e, f, g, h, a, b, 0x923f82a4, w6 = ReadBE32(chunk + 24));\n-        Round(b, c, d, e, f, g, h, a, 0xab1c5ed5, w7 = ReadBE32(chunk + 28));\n-        Round(a, b, c, d, e, f, g, h, 0xd807aa98, w8 = ReadBE32(chunk + 32));\n-        Round(h, a, b, c, d, e, f, g, 0x12835b01, w9 = ReadBE32(chunk + 36));\n-        Round(g, h, a, b, c, d, e, f, 0x243185be, w10 = ReadBE32(chunk + 40));\n-        Round(f, g, h, a, b, c, d, e, 0x550c7dc3, w11 = ReadBE32(chunk + 44));\n-        Round(e, f, g, h, a, b, c, d, 0x72be5d74, w12 = ReadBE32(chunk + 48));\n-        Round(d, e, f, g, h, a, b, c, 0x80deb1fe, w13 = ReadBE32(chunk + 52));\n-        Round(c, d, e, f, g, h, a, b, 0x9bdc06a7, w14 = ReadBE32(chunk + 56));\n-        Round(b, c, d, e, f, g, h, a, 0xc19bf174, w15 = ReadBE32(chunk + 60));\n-\n-        Round(a, b, c, d, e, f, g, h, 0xe49b69c1, w0 += sigma1(w14) + w9 + sigma0(w1));\n-        Round(h, a, b, c, d, e, f, g, 0xefbe4786, w1 += sigma1(w15) + w10 + sigma0(w2));\n-        Round(g, h, a, b, c, d, e, f, 0x0fc19dc6, w2 += sigma1(w0) + w11 + sigma0(w3));\n-        Round(f, g, h, a, b, c, d, e, 0x240ca1cc, w3 += sigma1(w1) + w12 + sigma0(w4));\n-        Round(e, f, g, h, a, b, c, d, 0x2de92c6f, w4 += sigma1(w2) + w13 + sigma0(w5));\n-        Round(d, e, f, g, h, a, b, c, 0x4a7484aa, w5 += sigma1(w3) + w14 + sigma0(w6));\n-        Round(c, d, e, f, g, h, a, b, 0x5cb0a9dc, w6 += sigma1(w4) + w15 + sigma0(w7));\n-        Round(b, c, d, e, f, g, h, a, 0x76f988da, w7 += sigma1(w5) + w0 + sigma0(w8));\n-        Round(a, b, c, d, e, f, g, h, 0x983e5152, w8 += sigma1(w6) + w1 + sigma0(w9));\n-        Round(h, a, b, c, d, e, f, g, 0xa831c66d, w9 += sigma1(w7) + w2 + sigma0(w10));\n-        Round(g, h, a, b, c, d, e, f, 0xb00327c8, w10 += sigma1(w8) + w3 + sigma0(w11));\n-        Round(f, g, h, a, b, c, d, e, 0xbf597fc7, w11 += sigma1(w9) + w4 + sigma0(w12));\n-        Round(e, f, g, h, a, b, c, d, 0xc6e00bf3, w12 += sigma1(w10) + w5 + sigma0(w13));\n-        Round(d, e, f, g, h, a, b, c, 0xd5a79147, w13 += sigma1(w11) + w6 + sigma0(w14));\n-        Round(c, d, e, f, g, h, a, b, 0x06ca6351, w14 += sigma1(w12) + w7 + sigma0(w15));\n-        Round(b, c, d, e, f, g, h, a, 0x14292967, w15 += sigma1(w13) + w8 + sigma0(w0));\n-\n-        Round(a, b, c, d, e, f, g, h, 0x27b70a85, w0 += sigma1(w14) + w9 + sigma0(w1));\n-        Round(h, a, b, c, d, e, f, g, 0x2e1b2138, w1 += sigma1(w15) + w10 + sigma0(w2));\n-        Round(g, h, a, b, c, d, e, f, 0x4d2c6dfc, w2 += sigma1(w0) + w11 + sigma0(w3));\n-        Round(f, g, h, a, b, c, d, e, 0x53380d13, w3 += sigma1(w1) + w12 + sigma0(w4));\n-        Round(e, f, g, h, a, b, c, d, 0x650a7354, w4 += sigma1(w2) + w13 + sigma0(w5));\n-        Round(d, e, f, g, h, a, b, c, 0x766a0abb, w5 += sigma1(w3) + w14 + sigma0(w6));\n-        Round(c, d, e, f, g, h, a, b, 0x81c2c92e, w6 += sigma1(w4) + w15 + sigma0(w7));\n-        Round(b, c, d, e, f, g, h, a, 0x92722c85, w7 += sigma1(w5) + w0 + sigma0(w8));\n-        Round(a, b, c, d, e, f, g, h, 0xa2bfe8a1, w8 += sigma1(w6) + w1 + sigma0(w9));\n-        Round(h, a, b, c, d, e, f, g, 0xa81a664b, w9 += sigma1(w7) + w2 + sigma0(w10));\n-        Round(g, h, a, b, c, d, e, f, 0xc24b8b70, w10 += sigma1(w8) + w3 + sigma0(w11));\n-        Round(f, g, h, a, b, c, d, e, 0xc76c51a3, w11 += sigma1(w9) + w4 + sigma0(w12));\n-        Round(e, f, g, h, a, b, c, d, 0xd192e819, w12 += sigma1(w10) + w5 + sigma0(w13));\n-        Round(d, e, f, g, h, a, b, c, 0xd6990624, w13 += sigma1(w11) + w6 + sigma0(w14));\n-        Round(c, d, e, f, g, h, a, b, 0xf40e3585, w14 += sigma1(w12) + w7 + sigma0(w15));\n-        Round(b, c, d, e, f, g, h, a, 0x106aa070, w15 += sigma1(w13) + w8 + sigma0(w0));\n-\n-        Round(a, b, c, d, e, f, g, h, 0x19a4c116, w0 += sigma1(w14) + w9 + sigma0(w1));\n-        Round(h, a, b, c, d, e, f, g, 0x1e376c08, w1 += sigma1(w15) + w10 + sigma0(w2));\n-        Round(g, h, a, b, c, d, e, f, 0x2748774c, w2 += sigma1(w0) + w11 + sigma0(w3));\n-        Round(f, g, h, a, b, c, d, e, 0x34b0bcb5, w3 += sigma1(w1) + w12 + sigma0(w4));\n-        Round(e, f, g, h, a, b, c, d, 0x391c0cb3, w4 += sigma1(w2) + w13 + sigma0(w5));\n-        Round(d, e, f, g, h, a, b, c, 0x4ed8aa4a, w5 += sigma1(w3) + w14 + sigma0(w6));\n-        Round(c, d, e, f, g, h, a, b, 0x5b9cca4f, w6 += sigma1(w4) + w15 + sigma0(w7));\n-        Round(b, c, d, e, f, g, h, a, 0x682e6ff3, w7 += sigma1(w5) + w0 + sigma0(w8));\n-        Round(a, b, c, d, e, f, g, h, 0x748f82ee, w8 += sigma1(w6) + w1 + sigma0(w9));\n-        Round(h, a, b, c, d, e, f, g, 0x78a5636f, w9 += sigma1(w7) + w2 + sigma0(w10));\n-        Round(g, h, a, b, c, d, e, f, 0x84c87814, w10 += sigma1(w8) + w3 + sigma0(w11));\n-        Round(f, g, h, a, b, c, d, e, 0x8cc70208, w11 += sigma1(w9) + w4 + sigma0(w12));\n-        Round(e, f, g, h, a, b, c, d, 0x90befffa, w12 += sigma1(w10) + w5 + sigma0(w13));\n-        Round(d, e, f, g, h, a, b, c, 0xa4506ceb, w13 += sigma1(w11) + w6 + sigma0(w14));\n-        Round(c, d, e, f, g, h, a, b, 0xbef9a3f7, w14 + sigma1(w12) + w7 + sigma0(w15));\n-        Round(b, c, d, e, f, g, h, a, 0xc67178f2, w15 + sigma1(w13) + w8 + sigma0(w0));\n+        Round(a, b, c, d, e, f, g, h, 0x428a2f98 + (w0 = ReadBE32(chunk + 0)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191509549",
      "id" : 191509549,
      "original_commit_id" : "57f34630fb6c3e218bd19535ac607008cb894173",
      "original_position" : 83,
      "path" : "src/crypto/sha256.cpp",
      "position" : 100,
      "pull_request_review_id" : 124095333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191",
      "updated_at" : "2018-05-29T21:21:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191509549",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191509788"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191509788"
         }
      },
      "author_association" : "MEMBER",
      "body" : "'ul' suffix for these as well.",
      "commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "created_at" : "2018-05-29T17:32:26Z",
      "diff_hunk" : "@@ -141,9 +141,300 @@ void Transform(uint32_t* s, const unsigned char* chunk, size_t blocks)\n     }\n }\n \n+void TransformD64(unsigned char* out, const unsigned char* in)\n+{\n+    // Transform 1\n+    uint32_t a = 0x6a09e667ul;\n+    uint32_t b = 0xbb67ae85ul;\n+    uint32_t c = 0x3c6ef372ul;\n+    uint32_t d = 0xa54ff53aul;\n+    uint32_t e = 0x510e527ful;\n+    uint32_t f = 0x9b05688cul;\n+    uint32_t g = 0x1f83d9abul;\n+    uint32_t h = 0x5be0cd19ul;\n+\n+    uint32_t w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15;\n+\n+    Round(a, b, c, d, e, f, g, h, 0x428a2f98 + (w0 = ReadBE32(in + 0)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191509788",
      "id" : 191509788,
      "original_commit_id" : "0150c8d85e33fff3a84fcb25883e58202d9cdf0c",
      "original_position" : 18,
      "path" : "src/crypto/sha256.cpp",
      "position" : null,
      "pull_request_review_id" : 124095333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191",
      "updated_at" : "2018-05-29T21:21:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191509788",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/417043?v=4",
         "events_url" : "https://api.github.com/users/theuni/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theuni/followers",
         "following_url" : "https://api.github.com/users/theuni/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theuni/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theuni",
         "id" : 417043,
         "login" : "theuni",
         "organizations_url" : "https://api.github.com/users/theuni/orgs",
         "received_events_url" : "https://api.github.com/users/theuni/received_events",
         "repos_url" : "https://api.github.com/users/theuni/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theuni/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theuni/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theuni"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191578561"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191578561"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed (also in SSE4 and AVX2 code).",
      "commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "created_at" : "2018-05-29T21:22:28Z",
      "diff_hunk" : "@@ -61,73 +61,73 @@ void Transform(uint32_t* s, const unsigned char* chunk, size_t blocks)\n         uint32_t a = s[0], b = s[1], c = s[2], d = s[3], e = s[4], f = s[5], g = s[6], h = s[7];\n         uint32_t w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15;\n \n-        Round(a, b, c, d, e, f, g, h, 0x428a2f98, w0 = ReadBE32(chunk + 0));\n-        Round(h, a, b, c, d, e, f, g, 0x71374491, w1 = ReadBE32(chunk + 4));\n-        Round(g, h, a, b, c, d, e, f, 0xb5c0fbcf, w2 = ReadBE32(chunk + 8));\n-        Round(f, g, h, a, b, c, d, e, 0xe9b5dba5, w3 = ReadBE32(chunk + 12));\n-        Round(e, f, g, h, a, b, c, d, 0x3956c25b, w4 = ReadBE32(chunk + 16));\n-        Round(d, e, f, g, h, a, b, c, 0x59f111f1, w5 = ReadBE32(chunk + 20));\n-        Round(c, d, e, f, g, h, a, b, 0x923f82a4, w6 = ReadBE32(chunk + 24));\n-        Round(b, c, d, e, f, g, h, a, 0xab1c5ed5, w7 = ReadBE32(chunk + 28));\n-        Round(a, b, c, d, e, f, g, h, 0xd807aa98, w8 = ReadBE32(chunk + 32));\n-        Round(h, a, b, c, d, e, f, g, 0x12835b01, w9 = ReadBE32(chunk + 36));\n-        Round(g, h, a, b, c, d, e, f, 0x243185be, w10 = ReadBE32(chunk + 40));\n-        Round(f, g, h, a, b, c, d, e, 0x550c7dc3, w11 = ReadBE32(chunk + 44));\n-        Round(e, f, g, h, a, b, c, d, 0x72be5d74, w12 = ReadBE32(chunk + 48));\n-        Round(d, e, f, g, h, a, b, c, 0x80deb1fe, w13 = ReadBE32(chunk + 52));\n-        Round(c, d, e, f, g, h, a, b, 0x9bdc06a7, w14 = ReadBE32(chunk + 56));\n-        Round(b, c, d, e, f, g, h, a, 0xc19bf174, w15 = ReadBE32(chunk + 60));\n-\n-        Round(a, b, c, d, e, f, g, h, 0xe49b69c1, w0 += sigma1(w14) + w9 + sigma0(w1));\n-        Round(h, a, b, c, d, e, f, g, 0xefbe4786, w1 += sigma1(w15) + w10 + sigma0(w2));\n-        Round(g, h, a, b, c, d, e, f, 0x0fc19dc6, w2 += sigma1(w0) + w11 + sigma0(w3));\n-        Round(f, g, h, a, b, c, d, e, 0x240ca1cc, w3 += sigma1(w1) + w12 + sigma0(w4));\n-        Round(e, f, g, h, a, b, c, d, 0x2de92c6f, w4 += sigma1(w2) + w13 + sigma0(w5));\n-        Round(d, e, f, g, h, a, b, c, 0x4a7484aa, w5 += sigma1(w3) + w14 + sigma0(w6));\n-        Round(c, d, e, f, g, h, a, b, 0x5cb0a9dc, w6 += sigma1(w4) + w15 + sigma0(w7));\n-        Round(b, c, d, e, f, g, h, a, 0x76f988da, w7 += sigma1(w5) + w0 + sigma0(w8));\n-        Round(a, b, c, d, e, f, g, h, 0x983e5152, w8 += sigma1(w6) + w1 + sigma0(w9));\n-        Round(h, a, b, c, d, e, f, g, 0xa831c66d, w9 += sigma1(w7) + w2 + sigma0(w10));\n-        Round(g, h, a, b, c, d, e, f, 0xb00327c8, w10 += sigma1(w8) + w3 + sigma0(w11));\n-        Round(f, g, h, a, b, c, d, e, 0xbf597fc7, w11 += sigma1(w9) + w4 + sigma0(w12));\n-        Round(e, f, g, h, a, b, c, d, 0xc6e00bf3, w12 += sigma1(w10) + w5 + sigma0(w13));\n-        Round(d, e, f, g, h, a, b, c, 0xd5a79147, w13 += sigma1(w11) + w6 + sigma0(w14));\n-        Round(c, d, e, f, g, h, a, b, 0x06ca6351, w14 += sigma1(w12) + w7 + sigma0(w15));\n-        Round(b, c, d, e, f, g, h, a, 0x14292967, w15 += sigma1(w13) + w8 + sigma0(w0));\n-\n-        Round(a, b, c, d, e, f, g, h, 0x27b70a85, w0 += sigma1(w14) + w9 + sigma0(w1));\n-        Round(h, a, b, c, d, e, f, g, 0x2e1b2138, w1 += sigma1(w15) + w10 + sigma0(w2));\n-        Round(g, h, a, b, c, d, e, f, 0x4d2c6dfc, w2 += sigma1(w0) + w11 + sigma0(w3));\n-        Round(f, g, h, a, b, c, d, e, 0x53380d13, w3 += sigma1(w1) + w12 + sigma0(w4));\n-        Round(e, f, g, h, a, b, c, d, 0x650a7354, w4 += sigma1(w2) + w13 + sigma0(w5));\n-        Round(d, e, f, g, h, a, b, c, 0x766a0abb, w5 += sigma1(w3) + w14 + sigma0(w6));\n-        Round(c, d, e, f, g, h, a, b, 0x81c2c92e, w6 += sigma1(w4) + w15 + sigma0(w7));\n-        Round(b, c, d, e, f, g, h, a, 0x92722c85, w7 += sigma1(w5) + w0 + sigma0(w8));\n-        Round(a, b, c, d, e, f, g, h, 0xa2bfe8a1, w8 += sigma1(w6) + w1 + sigma0(w9));\n-        Round(h, a, b, c, d, e, f, g, 0xa81a664b, w9 += sigma1(w7) + w2 + sigma0(w10));\n-        Round(g, h, a, b, c, d, e, f, 0xc24b8b70, w10 += sigma1(w8) + w3 + sigma0(w11));\n-        Round(f, g, h, a, b, c, d, e, 0xc76c51a3, w11 += sigma1(w9) + w4 + sigma0(w12));\n-        Round(e, f, g, h, a, b, c, d, 0xd192e819, w12 += sigma1(w10) + w5 + sigma0(w13));\n-        Round(d, e, f, g, h, a, b, c, 0xd6990624, w13 += sigma1(w11) + w6 + sigma0(w14));\n-        Round(c, d, e, f, g, h, a, b, 0xf40e3585, w14 += sigma1(w12) + w7 + sigma0(w15));\n-        Round(b, c, d, e, f, g, h, a, 0x106aa070, w15 += sigma1(w13) + w8 + sigma0(w0));\n-\n-        Round(a, b, c, d, e, f, g, h, 0x19a4c116, w0 += sigma1(w14) + w9 + sigma0(w1));\n-        Round(h, a, b, c, d, e, f, g, 0x1e376c08, w1 += sigma1(w15) + w10 + sigma0(w2));\n-        Round(g, h, a, b, c, d, e, f, 0x2748774c, w2 += sigma1(w0) + w11 + sigma0(w3));\n-        Round(f, g, h, a, b, c, d, e, 0x34b0bcb5, w3 += sigma1(w1) + w12 + sigma0(w4));\n-        Round(e, f, g, h, a, b, c, d, 0x391c0cb3, w4 += sigma1(w2) + w13 + sigma0(w5));\n-        Round(d, e, f, g, h, a, b, c, 0x4ed8aa4a, w5 += sigma1(w3) + w14 + sigma0(w6));\n-        Round(c, d, e, f, g, h, a, b, 0x5b9cca4f, w6 += sigma1(w4) + w15 + sigma0(w7));\n-        Round(b, c, d, e, f, g, h, a, 0x682e6ff3, w7 += sigma1(w5) + w0 + sigma0(w8));\n-        Round(a, b, c, d, e, f, g, h, 0x748f82ee, w8 += sigma1(w6) + w1 + sigma0(w9));\n-        Round(h, a, b, c, d, e, f, g, 0x78a5636f, w9 += sigma1(w7) + w2 + sigma0(w10));\n-        Round(g, h, a, b, c, d, e, f, 0x84c87814, w10 += sigma1(w8) + w3 + sigma0(w11));\n-        Round(f, g, h, a, b, c, d, e, 0x8cc70208, w11 += sigma1(w9) + w4 + sigma0(w12));\n-        Round(e, f, g, h, a, b, c, d, 0x90befffa, w12 += sigma1(w10) + w5 + sigma0(w13));\n-        Round(d, e, f, g, h, a, b, c, 0xa4506ceb, w13 += sigma1(w11) + w6 + sigma0(w14));\n-        Round(c, d, e, f, g, h, a, b, 0xbef9a3f7, w14 + sigma1(w12) + w7 + sigma0(w15));\n-        Round(b, c, d, e, f, g, h, a, 0xc67178f2, w15 + sigma1(w13) + w8 + sigma0(w0));\n+        Round(a, b, c, d, e, f, g, h, 0x428a2f98 + (w0 = ReadBE32(chunk + 0)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191578561",
      "id" : 191578561,
      "in_reply_to_id" : 191509549,
      "original_commit_id" : "57f34630fb6c3e218bd19535ac607008cb894173",
      "original_position" : 83,
      "path" : "src/crypto/sha256.cpp",
      "position" : 100,
      "pull_request_review_id" : 124177754,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191",
      "updated_at" : "2018-05-29T21:22:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191578561",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191578592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191578592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.",
      "commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "created_at" : "2018-05-29T21:22:37Z",
      "diff_hunk" : "@@ -131,9 +131,23 @@ static void MerkleComputation(const std::vector<uint256>& leaves, uint256* proot\n }\n \n uint256 ComputeMerkleRoot(const std::vector<uint256>& leaves, bool* mutated) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191578592",
      "id" : 191578592,
      "in_reply_to_id" : 191498614,
      "original_commit_id" : "0bc5ec3732f07fd003e24de08fae334d7d1e8716",
      "original_position" : 3,
      "path" : "src/consensus/merkle.cpp",
      "position" : null,
      "pull_request_review_id" : 124177794,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191",
      "updated_at" : "2018-05-29T21:22:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191578592",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed @theuni's nits.\r\n\r\nAlso:\r\n\r\n> Might it be helpful to add a non-double 4way/8way function as well? That would allow (for example) batched txid calculations where the first iteration is lazy and variable-sized as it is now, but 4way/8way could be used for the fixed-size second iterations.\r\n\r\nYes, but it's significantly more complicated. You need to schedule multiple variable length things in groups of 64 bytes, interspersed with padding. Not going to do that in this PR. Also, @jl2012 suggested writing an optimized 32-byte-input single-SHA256 for use in the second half of double-SHA256 computations, which could help there as well.",
      "created_at" : "2018-05-29T21:28:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-392951235",
      "id" : 392951235,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "updated_at" : "2018-05-29T21:28:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392951235",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191613134"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191613134"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "2018",
      "commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "created_at" : "2018-05-30T00:25:03Z",
      "diff_hunk" : "@@ -0,0 +1,26 @@\n+// Copyright (c) 2016 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191613134",
      "id" : 191613134,
      "original_commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "original_position" : 1,
      "path" : "src/bench/merkle_root.cpp",
      "position" : 1,
      "pull_request_review_id" : 124216601,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191",
      "updated_at" : "2018-05-30T00:25:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191613134",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191613161"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191613161"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`#include <`",
      "commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "created_at" : "2018-05-30T00:25:15Z",
      "diff_hunk" : "@@ -0,0 +1,26 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bench.h\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#discussion_r191613161",
      "id" : 191613161,
      "original_commit_id" : "4defdfab94504018f822dc34a313ad26cedc8255",
      "original_position" : 5,
      "path" : "src/bench/merkle_root.cpp",
      "position" : 5,
      "pull_request_review_id" : 124216634,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13191",
      "updated_at" : "2018-05-30T00:25:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/191613161",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "~~In the future, please donÃ¢ÂÂt spend time coding AVX/AVX2 SHA256. SHA-NI specialized instruction set has SHA2 opcodes, which is the possible most efficient way. Besides, it was released before SSE4.2 and AVX, so there are compatible more processors.~~\r\n\r\n~~If anyone is interested: https://github.com/01org/isa-l_crypto/blob/master/sha256_mb/sha256_ni_x2.asm~~\r\n\r\nThanks pwuille. I guess you're right.",
      "created_at" : "2018-06-02T13:29:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-394087706",
      "id" : 394087706,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NDA4NzcwNg==",
      "updated_at" : "2018-06-02T14:27:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394087706",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/23437045?v=4",
         "events_url" : "https://api.github.com/users/DesWurstes/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DesWurstes/followers",
         "following_url" : "https://api.github.com/users/DesWurstes/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DesWurstes/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DesWurstes",
         "id" : 23437045,
         "login" : "DesWurstes",
         "node_id" : "MDQ6VXNlcjIzNDM3MDQ1",
         "organizations_url" : "https://api.github.com/users/DesWurstes/orgs",
         "received_events_url" : "https://api.github.com/users/DesWurstes/received_events",
         "repos_url" : "https://api.github.com/users/DesWurstes/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DesWurstes/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DesWurstes/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DesWurstes"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@DesWurstes I'm perfectly capable of deciding for myself what I find interesting, thanks. Hardly any systems today support SHA-NI (only very recent low-power Intel CPUs, and AMD Ryzen), while AVX2 is available on all Intel chips since 2013 and AMD chips since 2015.",
      "created_at" : "2018-06-02T14:21:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-394090922",
      "id" : 394090922,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NDA5MDkyMg==",
      "updated_at" : "2018-06-02T14:21:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394090922",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@DesWurstes Apparently you didn't bother to read the posts at all before replying, as this came up before. People decide for themselves what to work on. If you think something else is more important, you can submit your own pull request.",
      "created_at" : "2018-06-02T15:41:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-394096101",
      "id" : 394096101,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NDA5NjEwMQ==",
      "updated_at" : "2018-06-02T15:41:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394096101",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@DesWurstes https://github.com/bitcoin/bitcoin/pull/13386",
      "created_at" : "2018-06-03T23:42:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-394201312",
      "id" : 394201312,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NDIwMTMxMg==",
      "updated_at" : "2018-06-03T23:42:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394201312",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 4defdfab94504018f822dc34a313ad26cedc8255\r\nVerified that FreeBSD+OpenBSD builds still pass.",
      "created_at" : "2018-06-04T10:08:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-394303028",
      "id" : 394303028,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NDMwMzAyOA==",
      "updated_at" : "2018-06-04T10:08:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394303028",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "After-the-fact tACK\r\n\r\nThe code's running nicely on my AVX2-enabled machine. Good job!\r\n\r\nI do have one question. Is this going to affect Gitian builds for people who are on older machines? Maybe I'm missing something silly but it seems like this could cause mismatches. I remember that the SSE4-enabled SHA-256 code initially required `--enable-experimental-asm` and was eventually enabled by default.\r\n\r\nThanks.",
      "created_at" : "2018-06-06T18:44:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-395173222",
      "id" : 395173222,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NTE3MzIyMg==",
      "updated_at" : "2018-06-06T18:45:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/395173222",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5931802?v=4",
         "events_url" : "https://api.github.com/users/droark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/droark/followers",
         "following_url" : "https://api.github.com/users/droark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/droark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/droark",
         "id" : 5931802,
         "login" : "droark",
         "node_id" : "MDQ6VXNlcjU5MzE4MDI=",
         "organizations_url" : "https://api.github.com/users/droark/orgs",
         "received_events_url" : "https://api.github.com/users/droark/received_events",
         "repos_url" : "https://api.github.com/users/droark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/droark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/droark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/droark"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@droark It does require an AVX2 compatible compiler, but GCC 4.7 is sufficient for that (which we already required for release builds). You can perfectly well build AVX2 code even if your own hardware doesn't support AVX2.",
      "created_at" : "2018-06-06T18:53:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-395175853",
      "id" : 395175853,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NTE3NTg1Mw==",
      "updated_at" : "2018-06-06T19:07:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/395175853",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa - Thanks. I had a bad understanding of compilers from long ago that I somehow never shook.",
      "created_at" : "2018-06-06T19:20:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-395183764",
      "id" : 395183764,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NTE4Mzc2NA==",
      "updated_at" : "2018-06-06T19:20:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/395183764",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/5931802?v=4",
         "events_url" : "https://api.github.com/users/droark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/droark/followers",
         "following_url" : "https://api.github.com/users/droark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/droark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/droark",
         "id" : 5931802,
         "login" : "droark",
         "node_id" : "MDQ6VXNlcjU5MzE4MDI=",
         "organizations_url" : "https://api.github.com/users/droark/orgs",
         "received_events_url" : "https://api.github.com/users/droark/received_events",
         "repos_url" : "https://api.github.com/users/droark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/droark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/droark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/droark"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Can you please provide any documentation as to how you calculated the custom constants in Transform 2? I would like to adapt it for a 112 byte input. Could it be made to work if Transform 1 uses the state calculated from the first 64 bytes and the remaining 48 bytes (with appropriate padding) as the input message digest along with said calculated custom constants for Transform 2?",
      "created_at" : "2019-04-13T19:51:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13191#issuecomment-482873870",
      "id" : 482873870,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13191",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQ4Mjg3Mzg3MA==",
      "updated_at" : "2019-04-13T20:00:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482873870",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/32990848?v=4",
         "events_url" : "https://api.github.com/users/rollmeister/events{/privacy}",
         "followers_url" : "https://api.github.com/users/rollmeister/followers",
         "following_url" : "https://api.github.com/users/rollmeister/following{/other_user}",
         "gists_url" : "https://api.github.com/users/rollmeister/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/rollmeister",
         "id" : 32990848,
         "login" : "rollmeister",
         "node_id" : "MDQ6VXNlcjMyOTkwODQ4",
         "organizations_url" : "https://api.github.com/users/rollmeister/orgs",
         "received_events_url" : "https://api.github.com/users/rollmeister/received_events",
         "repos_url" : "https://api.github.com/users/rollmeister/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/rollmeister/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/rollmeister/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/rollmeister"
      }
   }
]
