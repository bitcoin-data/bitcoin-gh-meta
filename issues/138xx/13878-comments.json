[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->Reviewers, this pull request conflicts with the following ones:\n\n* #14372 (msvc: build secp256k1 and leveldb locally by ken2812221)\n* #14303 (rpc: Early call once CWallet::MarkDirty in import calls by promag)\n* #14151 (windows: Fix remaining compiler warnings (MSVC) by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2018-08-04T20:12:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-410474732",
      "id" : 410474732,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxMDQ3NDczMg==",
      "updated_at" : "2018-10-08T09:49:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/410474732",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "but there's override:  \r\n```c++\r\n#include <fstream>\r\nint main(int argc, char* argv[])\r\n{\t\r\n\tstd::fstream tr(L\"hk\");\r\n\treturn 0;\r\n}\r\n```\r\ncompiles fine.  \r\n( msys2 )\r\n```\r\nc++ json_c.cpp -lws2_32 -static-libgcc -static-libstdc++ -static-libgcc -static-libstdc++ -Wl,-Bstatic -lstdc++ -lpthread\r\n```\r\n ",
      "created_at" : "2018-08-15T17:12:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-413267200",
      "id" : 413267200,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxMzI2NzIwMA==",
      "updated_at" : "2018-08-15T17:12:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413267200",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/31589671?v=4",
         "events_url" : "https://api.github.com/users/alexeyneu/events{/privacy}",
         "followers_url" : "https://api.github.com/users/alexeyneu/followers",
         "following_url" : "https://api.github.com/users/alexeyneu/following{/other_user}",
         "gists_url" : "https://api.github.com/users/alexeyneu/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/alexeyneu",
         "id" : 31589671,
         "login" : "alexeyneu",
         "node_id" : "MDQ6VXNlcjMxNTg5Njcx",
         "organizations_url" : "https://api.github.com/users/alexeyneu/orgs",
         "received_events_url" : "https://api.github.com/users/alexeyneu/received_events",
         "repos_url" : "https://api.github.com/users/alexeyneu/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/alexeyneu/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/alexeyneu/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/alexeyneu"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is for mingw",
      "created_at" : "2018-08-15T17:26:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-413271640",
      "id" : 413271640,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxMzI3MTY0MA==",
      "updated_at" : "2018-08-15T17:26:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413271640",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "![untitled 1](https://user-images.githubusercontent.com/31589671/44167850-f85c2000-a0d7-11e8-9e9b-6a1f509fedac.jpg)  \r\n@ken2812221 unexpected statement\r\n",
      "created_at" : "2018-08-15T19:10:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-413303458",
      "id" : 413303458,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxMzMwMzQ1OA==",
      "updated_at" : "2018-08-15T19:50:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413303458",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/31589671?v=4",
         "events_url" : "https://api.github.com/users/alexeyneu/events{/privacy}",
         "followers_url" : "https://api.github.com/users/alexeyneu/followers",
         "following_url" : "https://api.github.com/users/alexeyneu/following{/other_user}",
         "gists_url" : "https://api.github.com/users/alexeyneu/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/alexeyneu",
         "id" : 31589671,
         "login" : "alexeyneu",
         "node_id" : "MDQ6VXNlcjMxNTg5Njcx",
         "organizations_url" : "https://api.github.com/users/alexeyneu/orgs",
         "received_events_url" : "https://api.github.com/users/alexeyneu/received_events",
         "repos_url" : "https://api.github.com/users/alexeyneu/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/alexeyneu/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/alexeyneu/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/alexeyneu"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@alexeyneu To be clear, this is for the mingw on Ubuntu 18.04 which is what we use for gitian to build release binaries. If you can test this on Ubuntu, that would be great.",
      "created_at" : "2018-08-16T02:55:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-413408212",
      "id" : 413408212,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxMzQwODIxMg==",
      "updated_at" : "2018-08-16T02:55:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413408212",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "msys2 `.h` files are nothing more then  msvc  copy-paste. it may not work but linux edition  has same headers .\r\ni've used it in msvc with np. this applies to constructor only.  this stuff isn't avaible for\r\n`.open()` and others. last time i've seen there smth own-written was windows edition of watcom c .",
      "created_at" : "2018-08-16T10:32:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-413499968",
      "id" : 413499968,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxMzQ5OTk2OA==",
      "updated_at" : "2018-08-16T17:19:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413499968",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/31589671?v=4",
         "events_url" : "https://api.github.com/users/alexeyneu/events{/privacy}",
         "followers_url" : "https://api.github.com/users/alexeyneu/followers",
         "following_url" : "https://api.github.com/users/alexeyneu/following{/other_user}",
         "gists_url" : "https://api.github.com/users/alexeyneu/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/alexeyneu",
         "id" : 31589671,
         "login" : "alexeyneu",
         "node_id" : "MDQ6VXNlcjMxNTg5Njcx",
         "organizations_url" : "https://api.github.com/users/alexeyneu/orgs",
         "received_events_url" : "https://api.github.com/users/alexeyneu/received_events",
         "repos_url" : "https://api.github.com/users/alexeyneu/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/alexeyneu/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/alexeyneu/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/alexeyneu"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Which is to say, i dont see much sense in testing it coz it will work .   \r\nit's not my PR anyway.  \r\n",
      "created_at" : "2018-08-16T23:39:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-413715859",
      "id" : 413715859,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxMzcxNTg1OQ==",
      "updated_at" : "2018-08-16T23:39:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/413715859",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/31589671?v=4",
         "events_url" : "https://api.github.com/users/alexeyneu/events{/privacy}",
         "followers_url" : "https://api.github.com/users/alexeyneu/followers",
         "following_url" : "https://api.github.com/users/alexeyneu/following{/other_user}",
         "gists_url" : "https://api.github.com/users/alexeyneu/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/alexeyneu",
         "id" : 31589671,
         "login" : "alexeyneu",
         "node_id" : "MDQ6VXNlcjMxNTg5Njcx",
         "organizations_url" : "https://api.github.com/users/alexeyneu/orgs",
         "received_events_url" : "https://api.github.com/users/alexeyneu/received_events",
         "repos_url" : "https://api.github.com/users/alexeyneu/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/alexeyneu/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/alexeyneu/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/alexeyneu"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think I understand how this PR works (does it depend on #13866?), or why reimplementing fstream classes is a good solution compared to alternatives. If this is a bug in boost, wouldn't it be better to fix the bug upstream and maybe patch it locally? Or could we drop the use of boost here and instead use `std::ifstream` `and std::ofstream`?\r\n\r\nIt would be helpful to have a clear description of the bug and possible workarounds.",
      "created_at" : "2018-09-05T21:27:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-418887343",
      "id" : 418887343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxODg4NzM0Mw==",
      "updated_at" : "2018-09-05T21:27:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418887343",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215433595"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215433595"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should this be checking for `__GLIBCXX__` instead of `__GNUC__`? It looks like `__gnu_cxx::stdio_filebuf` might be present in libstdc++ but not libc++ (https://stackoverflow.com/questions/22624503/how-to-get-a-file-descriptor-from-a-stdbasic-ios-for-clang-on-os-x).\r\n\r\nWill different workarounds be needed for MSVC and clang?",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-05T21:36:57Z",
      "diff_hunk" : "@@ -38,6 +42,41 @@ namespace fsbridge {\n         void* hFile = (void*)-1; // INVALID_HANDLE_VALUE\n #endif\n     };\n+\n+\n+#if defined WIN32 && defined __GNUC__",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215433595",
      "id" : 215433595,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTQzMzU5NQ==",
      "original_commit_id" : "2e84c0b24abea37df6827e339a6cf5864d37fc9b",
      "original_position" : 19,
      "path" : "src/fs.h",
      "position" : null,
      "pull_request_review_id" : 152698994,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215433595",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "`boost::filesystem::i/ofstream` calls `std::filebuf` internally. So if `std::filebuf(wchar_t*)` exist, boost will call that function (MSVC). Otherwise it will call `std::filebuf(char*)` which can lead to encoding issue. After c++17, we can use `std::i/ofstream(std::filesystem::path)`. But before then, we can't.\r\n\r\nIf building with libstdc++, we can use its extension stdio_filebuf by passing `FILE *`.\r\n\r\n> Will different workarounds be needed for MSVC and clang?\r\n\r\nI don't know about clang for Windows. But for MSVC, we can use `boost::filesystem::i/ofstream`.\r\n\r\n> does it depend on #13866?\r\n\r\nWithout #13866, it would work. But to solve the encoding issue, it requires #13866.",
      "created_at" : "2018-09-05T23:18:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-418911903",
      "id" : 418911903,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxODkxMTkwMw==",
      "updated_at" : "2018-09-06T01:57:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418911903",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215776506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215776506"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it would be good to add a static assert here to detect if this problem happens with other libraries or versions of libraries:\r\n\r\n```c++\r\n#if defined WIN32 && defined __GLIBCXX__\r\n...\r\n#elif WIN32\r\nstatic_assert(sizeof(*fs::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),\r\n    \"Warning: This build is using boost::filesystem ofstream and ifstream \"\r\n    \"implementations which will fail to open paths containing multibyte \"\r\n    \"characters. You should delete this static_assert to ignore this warning, \"\r\n    \"or switch to a different C++ standard library like the Microsoft C++ \"\r\n    \"Standard Library (where boost uses non-standard extensions to construct \"\r\n    \"stream objects with wide filenames), or the GNU libstdc++ library (where \"\r\n    \"a more complicated workaround has been implemented above).\");\r\n#endif\r\n```",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-06T20:59:13Z",
      "diff_hunk" : "@@ -90,6 +90,122 @@ bool FileLock::TryLock()\n     }\n     return true;\n }\n+\n+#endif\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+\n+/**\n+*  reference: https://github.com/gcc-mirror/gcc/blob/571ee70a6d4226145f77b885937a8eda678e0fb2/libstdc%2B%2B-v3/include/std/fstream#L283\n+*\n+*  +---------------------------------------------------------+\n+*  | ios_base Flag combination            stdio equivalent   |\n+*  |binary  in  out  trunc  app                              |\n+*  +---------------------------------------------------------+\n+*  |             +                        w                  |\n+*  |             +           +            a                  |\n+*  |                         +            a                  |\n+*  |             +     +                  w                  |\n+*  |         +                            r                  |\n+*  |         +   +                        r+                 |\n+*  |         +   +     +                  w+                 |\n+*  |         +   +           +            a+                 |\n+*  |         +               +            a+                 |\n+*  +---------------------------------------------------------+\n+*  |   +         +                        wb                 |\n+*  |   +         +           +            ab                 |\n+*  |   +                     +            ab                 |\n+*  |   +         +     +                  wb                 |\n+*  |   +     +                            rb                 |\n+*  |   +     +   +                        r+b                |\n+*  |   +     +   +     +                  w+b                |\n+*  |   +     +   +           +            a+b                |\n+*  |   +     +               +            a+b                |\n+*  +---------------------------------------------------------+\n+*/\n+static std::string openmodeToStr(std::ios_base::openmode mode)\n+{\n+    switch (mode & ~std::ios_base::ate) {\n+    case std::ios_base::out:\n+    case std::ios_base::out | std::ios_base::trunc:\n+        return \"w\";\n+    case std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::app:\n+        return \"a\";\n+    case std::ios_base::in:\n+        return \"r\";\n+    case std::ios_base::in | std::ios_base::out:\n+        return \"r+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc:\n+        return \"w+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::in | std::ios_base::app:\n+        return \"a+\";\n+    case std::ios_base::out | std::ios_base::binary:\n+    case std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"wb\";\n+    case std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::app | std::ios_base::binary:\n+        return \"ab\";\n+    case std::ios_base::in | std::ios_base::binary:\n+        return \"rb\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::binary:\n+        return \"r+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"w+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::in | std::ios_base::app | std::ios_base::binary:\n+        return \"a+b\";\n+    default:\n+        return std::string();\n+    }\n+}\n+\n+void ifstream::open(const fs::path& p, std::ios_base::openmode mode)\n+{\n+    close();\n+    file = fopen(p, openmodeToStr(mode).c_str());\n+    if (file == nullptr) {\n+        return;\n+    }\n+    filebuf = std::move(__gnu_cxx::stdio_filebuf<char>(file, mode));\n+    rdbuf(&filebuf);\n+    if (mode & std::ios_base::ate) {\n+        seekg(0, std::ios_base::end);\n+    }\n+}\n+\n+void ifstream::close()\n+{\n+    if (file != nullptr) {\n+        filebuf.close();\n+        fclose(file);\n+    }\n+    file = nullptr;\n+}\n+\n+void ofstream::open(const fs::path& p, std::ios_base::openmode mode)\n+{\n+    close();\n+    file = fopen(p, openmodeToStr(mode).c_str());\n+    if (file == nullptr) {\n+        return;\n+    }\n+    filebuf = std::move(__gnu_cxx::stdio_filebuf<char>(file, mode));\n+    rdbuf(&filebuf);\n+    if (mode & std::ios_base::ate) {\n+        seekp(0, std::ios_base::end);\n+    }\n+}\n+\n+void ofstream::close()\n+{\n+    if (file != nullptr) {\n+        filebuf.close();\n+        fclose(file);\n+    }\n+    file = nullptr;\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215776506",
      "id" : 215776506,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc3NjUwNg==",
      "original_commit_id" : "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
      "original_position" : 119,
      "path" : "src/fs.cpp",
      "position" : 91,
      "pull_request_review_id" : 153119357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215776506",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215791815"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215791815"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Can we add a comment to describe the bug and workaround? Suggestion:\r\n\r\n```c++\r\n// GNU libstdc++ specific workaround for opening UTF-8 paths on Windows.\r\n//\r\n// On Windows, it is only possible to reliably access multibyte file paths through\r\n// `wchar_t` APIs, not `char` APIs. But because the C++ standard doesn't require\r\n// ifstream/ofstream `wchar_t` constructors, and the GNU library doesn't\r\n// provide them (in contrast to the Microsoft C++ library, see\r\n// https://stackoverflow.com/questions/821873/how-to-open-an-stdfstream-ofstream-or-ifstream-with-a-unicode-filename/822032#822032),\r\n// Boost is forced to fall back to `char` APIs which may not work properly.\r\n//\r\n// Work around this issue by creating stream objects with `_wfopen` in\r\n// combination with `__gnu_cxx::stdio_filebuf`. This workaround can be removed\r\n// with an upgrade to C++17, where streams can be constructed directly from\r\n// `std::filesystem::path` objects.\r\n```",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-06T21:59:07Z",
      "diff_hunk" : "@@ -38,6 +42,41 @@ namespace fsbridge {\n         void* hFile = (void*)-1; // INVALID_HANDLE_VALUE\n #endif\n     };\n+\n+\n+#if defined WIN32 && defined __GLIBCXX__",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215791815",
      "id" : 215791815,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc5MTgxNQ==",
      "original_commit_id" : "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
      "original_position" : 19,
      "path" : "src/fs.h",
      "position" : 29,
      "pull_request_review_id" : 153119357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215791815",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215794094"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215794094"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think I would drop this table but keep the URL link, since the table just duplicates information provided by the code below, and seems actually less readable than the code.\r\n\r\nFor reference, https://en.cppreference.com/w/cpp/io/basic_filebuf/open also has a similar table.",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-06T22:09:57Z",
      "diff_hunk" : "@@ -90,6 +90,122 @@ bool FileLock::TryLock()\n     }\n     return true;\n }\n+\n+#endif\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+\n+/**\n+*  reference: https://github.com/gcc-mirror/gcc/blob/571ee70a6d4226145f77b885937a8eda678e0fb2/libstdc%2B%2B-v3/include/std/fstream#L283\n+*\n+*  +---------------------------------------------------------+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215794094",
      "id" : 215794094,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc5NDA5NA==",
      "original_commit_id" : "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
      "original_position" : 12,
      "path" : "src/fs.cpp",
      "position" : null,
      "pull_request_review_id" : 153119357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215794094",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215795114"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215795114"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think it's obvious that this is intended to call the `fsbridge::fopen` function above rather than `::fopen`. Would suggesting adding a comment here or writing the namespace.\r\n\r\nCould also do the same in `ofstream::open` below.",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-06T22:15:20Z",
      "diff_hunk" : "@@ -90,6 +90,122 @@ bool FileLock::TryLock()\n     }\n     return true;\n }\n+\n+#endif\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+\n+/**\n+*  reference: https://github.com/gcc-mirror/gcc/blob/571ee70a6d4226145f77b885937a8eda678e0fb2/libstdc%2B%2B-v3/include/std/fstream#L283\n+*\n+*  +---------------------------------------------------------+\n+*  | ios_base Flag combination            stdio equivalent   |\n+*  |binary  in  out  trunc  app                              |\n+*  +---------------------------------------------------------+\n+*  |             +                        w                  |\n+*  |             +           +            a                  |\n+*  |                         +            a                  |\n+*  |             +     +                  w                  |\n+*  |         +                            r                  |\n+*  |         +   +                        r+                 |\n+*  |         +   +     +                  w+                 |\n+*  |         +   +           +            a+                 |\n+*  |         +               +            a+                 |\n+*  +---------------------------------------------------------+\n+*  |   +         +                        wb                 |\n+*  |   +         +           +            ab                 |\n+*  |   +                     +            ab                 |\n+*  |   +         +     +                  wb                 |\n+*  |   +     +                            rb                 |\n+*  |   +     +   +                        r+b                |\n+*  |   +     +   +     +                  w+b                |\n+*  |   +     +   +           +            a+b                |\n+*  |   +     +               +            a+b                |\n+*  +---------------------------------------------------------+\n+*/\n+static std::string openmodeToStr(std::ios_base::openmode mode)\n+{\n+    switch (mode & ~std::ios_base::ate) {\n+    case std::ios_base::out:\n+    case std::ios_base::out | std::ios_base::trunc:\n+        return \"w\";\n+    case std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::app:\n+        return \"a\";\n+    case std::ios_base::in:\n+        return \"r\";\n+    case std::ios_base::in | std::ios_base::out:\n+        return \"r+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc:\n+        return \"w+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::in | std::ios_base::app:\n+        return \"a+\";\n+    case std::ios_base::out | std::ios_base::binary:\n+    case std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"wb\";\n+    case std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::app | std::ios_base::binary:\n+        return \"ab\";\n+    case std::ios_base::in | std::ios_base::binary:\n+        return \"rb\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::binary:\n+        return \"r+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"w+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::in | std::ios_base::app | std::ios_base::binary:\n+        return \"a+b\";\n+    default:\n+        return std::string();\n+    }\n+}\n+\n+void ifstream::open(const fs::path& p, std::ios_base::openmode mode)\n+{\n+    close();\n+    file = fopen(p, openmodeToStr(mode).c_str());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215795114",
      "id" : 215795114,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc5NTExNA==",
      "original_commit_id" : "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
      "original_position" : 78,
      "path" : "src/fs.cpp",
      "position" : null,
      "pull_request_review_id" : 153119357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215795114",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215795466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215795466"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`std::move` can be dropped here. Argument is already an rvalue so it has no effect.\r\n\r\nSame applies in `ofstream::open` below.",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-06T22:16:50Z",
      "diff_hunk" : "@@ -90,6 +90,122 @@ bool FileLock::TryLock()\n     }\n     return true;\n }\n+\n+#endif\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+\n+/**\n+*  reference: https://github.com/gcc-mirror/gcc/blob/571ee70a6d4226145f77b885937a8eda678e0fb2/libstdc%2B%2B-v3/include/std/fstream#L283\n+*\n+*  +---------------------------------------------------------+\n+*  | ios_base Flag combination            stdio equivalent   |\n+*  |binary  in  out  trunc  app                              |\n+*  +---------------------------------------------------------+\n+*  |             +                        w                  |\n+*  |             +           +            a                  |\n+*  |                         +            a                  |\n+*  |             +     +                  w                  |\n+*  |         +                            r                  |\n+*  |         +   +                        r+                 |\n+*  |         +   +     +                  w+                 |\n+*  |         +   +           +            a+                 |\n+*  |         +               +            a+                 |\n+*  +---------------------------------------------------------+\n+*  |   +         +                        wb                 |\n+*  |   +         +           +            ab                 |\n+*  |   +                     +            ab                 |\n+*  |   +         +     +                  wb                 |\n+*  |   +     +                            rb                 |\n+*  |   +     +   +                        r+b                |\n+*  |   +     +   +     +                  w+b                |\n+*  |   +     +   +           +            a+b                |\n+*  |   +     +               +            a+b                |\n+*  +---------------------------------------------------------+\n+*/\n+static std::string openmodeToStr(std::ios_base::openmode mode)\n+{\n+    switch (mode & ~std::ios_base::ate) {\n+    case std::ios_base::out:\n+    case std::ios_base::out | std::ios_base::trunc:\n+        return \"w\";\n+    case std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::app:\n+        return \"a\";\n+    case std::ios_base::in:\n+        return \"r\";\n+    case std::ios_base::in | std::ios_base::out:\n+        return \"r+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc:\n+        return \"w+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::in | std::ios_base::app:\n+        return \"a+\";\n+    case std::ios_base::out | std::ios_base::binary:\n+    case std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"wb\";\n+    case std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::app | std::ios_base::binary:\n+        return \"ab\";\n+    case std::ios_base::in | std::ios_base::binary:\n+        return \"rb\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::binary:\n+        return \"r+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"w+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::in | std::ios_base::app | std::ios_base::binary:\n+        return \"a+b\";\n+    default:\n+        return std::string();\n+    }\n+}\n+\n+void ifstream::open(const fs::path& p, std::ios_base::openmode mode)\n+{\n+    close();\n+    file = fopen(p, openmodeToStr(mode).c_str());\n+    if (file == nullptr) {\n+        return;\n+    }\n+    filebuf = std::move(__gnu_cxx::stdio_filebuf<char>(file, mode));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215795466",
      "id" : 215795466,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc5NTQ2Ng==",
      "original_commit_id" : "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
      "original_position" : 82,
      "path" : "src/fs.cpp",
      "position" : null,
      "pull_request_review_id" : 153119357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215795466",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215796062"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215796062"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could you prefix these members with `m_` to match recommended style?",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-06T22:19:47Z",
      "diff_hunk" : "@@ -38,6 +42,41 @@ namespace fsbridge {\n         void* hFile = (void*)-1; // INVALID_HANDLE_VALUE\n #endif\n     };\n+\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+    class ifstream : public std::istream\n+    {\n+    public:\n+        ifstream() = default;\n+        ifstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in) { open(p, mode); }\n+        ~ifstream() { close(); }\n+        void open(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in);\n+        bool is_open() { return filebuf.is_open(); }\n+        void close();\n+\n+    private:\n+        __gnu_cxx::stdio_filebuf<char> filebuf;\n+        FILE* file = nullptr;\n+    };\n+    class ofstream : public std::ostream\n+    {\n+    public:\n+        ofstream() = default;\n+        ofstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::out) { open(p, mode); }\n+        ~ofstream() { close(); }\n+        void open(const fs::path& p, std::ios_base::openmode mode = std::ios_base::out);\n+        bool is_open() { return filebuf.is_open(); }\n+        void close();\n+\n+    private:\n+        __gnu_cxx::stdio_filebuf<char> filebuf;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215796062",
      "id" : 215796062,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc5NjA2Mg==",
      "original_commit_id" : "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
      "original_position" : 45,
      "path" : "src/fs.h",
      "position" : null,
      "pull_request_review_id" : 153119357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215796062",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215796524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215796524"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would be nice to have a unit test to make sure this logic works. I believe this code will actually run on travis through wine.",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-06T22:21:49Z",
      "diff_hunk" : "@@ -90,6 +90,122 @@ bool FileLock::TryLock()\n     }\n     return true;\n }\n+\n+#endif\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+\n+/**\n+*  reference: https://github.com/gcc-mirror/gcc/blob/571ee70a6d4226145f77b885937a8eda678e0fb2/libstdc%2B%2B-v3/include/std/fstream#L283\n+*\n+*  +---------------------------------------------------------+\n+*  | ios_base Flag combination            stdio equivalent   |\n+*  |binary  in  out  trunc  app                              |\n+*  +---------------------------------------------------------+\n+*  |             +                        w                  |\n+*  |             +           +            a                  |\n+*  |                         +            a                  |\n+*  |             +     +                  w                  |\n+*  |         +                            r                  |\n+*  |         +   +                        r+                 |\n+*  |         +   +     +                  w+                 |\n+*  |         +   +           +            a+                 |\n+*  |         +               +            a+                 |\n+*  +---------------------------------------------------------+\n+*  |   +         +                        wb                 |\n+*  |   +         +           +            ab                 |\n+*  |   +                     +            ab                 |\n+*  |   +         +     +                  wb                 |\n+*  |   +     +                            rb                 |\n+*  |   +     +   +                        r+b                |\n+*  |   +     +   +     +                  w+b                |\n+*  |   +     +   +           +            a+b                |\n+*  |   +     +               +            a+b                |\n+*  +---------------------------------------------------------+\n+*/\n+static std::string openmodeToStr(std::ios_base::openmode mode)\n+{\n+    switch (mode & ~std::ios_base::ate) {\n+    case std::ios_base::out:\n+    case std::ios_base::out | std::ios_base::trunc:\n+        return \"w\";\n+    case std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::app:\n+        return \"a\";\n+    case std::ios_base::in:\n+        return \"r\";\n+    case std::ios_base::in | std::ios_base::out:\n+        return \"r+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc:\n+        return \"w+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::in | std::ios_base::app:\n+        return \"a+\";\n+    case std::ios_base::out | std::ios_base::binary:\n+    case std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"wb\";\n+    case std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::app | std::ios_base::binary:\n+        return \"ab\";\n+    case std::ios_base::in | std::ios_base::binary:\n+        return \"rb\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::binary:\n+        return \"r+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"w+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::in | std::ios_base::app | std::ios_base::binary:\n+        return \"a+b\";\n+    default:\n+        return std::string();\n+    }\n+}\n+\n+void ifstream::open(const fs::path& p, std::ios_base::openmode mode)\n+{\n+    close();\n+    file = fopen(p, openmodeToStr(mode).c_str());\n+    if (file == nullptr) {\n+        return;\n+    }\n+    filebuf = std::move(__gnu_cxx::stdio_filebuf<char>(file, mode));\n+    rdbuf(&filebuf);\n+    if (mode & std::ios_base::ate) {\n+        seekg(0, std::ios_base::end);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r215796524",
      "id" : 215796524,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc5NjUyNA==",
      "original_commit_id" : "bc6a3c6aa954fe259f8effaf48112b8cc7c976a2",
      "original_position" : 85,
      "path" : "src/fs.cpp",
      "position" : 57,
      "pull_request_review_id" : 153119357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215796524",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky requested change included and unit tests added.",
      "created_at" : "2018-09-07T22:58:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-419587880",
      "id" : 419587880,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQxOTU4Nzg4MA==",
      "updated_at" : "2018-09-07T22:58:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419587880",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2018-09-13T15:41:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-421053139",
      "id" : 421053139,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyMTA1MzEzOQ==",
      "updated_at" : "2018-09-13T15:41:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421053139",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r217804441"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217804441"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"utils: Add fsbridge fstream function wrapper\" (0548f48f19d33cb57b8279d7a647e91d375a916e)\r\n\r\nI know this is my own comment, maybe replace \"APIs\" with \"constructors\" on this to make clearer this is referring to the same constructors previously mentioned above.",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-14T18:32:17Z",
      "diff_hunk" : "@@ -40,6 +43,54 @@ namespace fsbridge {\n     };\n \n     std::string get_filesystem_error_message(const fs::filesystem_error& e);\n+\n+// GNU libstdc++ specific workaround for opening UTF-8 paths on Windows.\n+//\n+// On Windows, it is only possible to reliably access multibyte file paths through\n+// `wchar_t` APIs, not `char` APIs. But because the C++ standard doesn't require\n+// ifstream/ofstream `wchar_t` constructors, and the GNU library doesn't\n+// provide them (in contrast to the Microsoft C++ library, see\n+// https://stackoverflow.com/questions/821873/how-to-open-an-stdfstream-ofstream-or-ifstream-with-a-unicode-filename/822032#822032),\n+// Boost is forced to fall back to `char` APIs which may not work properly.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r217804441",
      "id" : 217804441,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzgwNDQ0MQ==",
      "original_commit_id" : "0548f48f19d33cb57b8279d7a647e91d375a916e",
      "original_position" : 22,
      "path" : "src/fs.h",
      "position" : null,
      "pull_request_review_id" : 155612846,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217804441",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r217804938"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217804938"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"tests: Add test case for std::ios_base::ate\" (6b6c598ab55c60ed5050c0ba0a817dba899384c0)\r\n\r\nWould it be possible to add a test accessing a utf8 filesystem path now that #13866 is merged?",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-14T18:34:03Z",
      "diff_hunk" : "@@ -0,0 +1,53 @@\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <fs.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(fs_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(fsbridge_fstream)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r217804938",
      "id" : 217804938,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzgwNDkzOA==",
      "original_commit_id" : "6b6c598ab55c60ed5050c0ba0a817dba899384c0",
      "original_position" : 12,
      "path" : "src/test/fs_tests.cpp",
      "position" : 12,
      "pull_request_review_id" : 155612846,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217804938",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r217841611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217841611"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure. But this seems only work if #13877 merged, so change this PR to based on it.",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-14T21:02:17Z",
      "diff_hunk" : "@@ -0,0 +1,53 @@\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <fs.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(fs_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(fsbridge_fstream)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r217841611",
      "id" : 217841611,
      "in_reply_to_id" : 217804938,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzg0MTYxMQ==",
      "original_commit_id" : "6b6c598ab55c60ed5050c0ba0a817dba899384c0",
      "original_position" : 12,
      "path" : "src/test/fs_tests.cpp",
      "position" : 12,
      "pull_request_review_id" : 155660982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217841611",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r219592401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219592401"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Word \"constructors\" on this line should be changed back to \"APIs\", because this is just referring in general to how multibyte paths need to be accessed on windows, not to stream object constructors in particular.",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-21T18:40:17Z",
      "diff_hunk" : "@@ -39,6 +42,54 @@ namespace fsbridge {\n     };\n \n     std::string get_filesystem_error_message(const fs::filesystem_error& e);\n+\n+    // GNU libstdc++ specific workaround for opening UTF-8 paths on Windows.\n+    //\n+    // On Windows, it is only possible to reliably access multibyte file paths through\n+    // `wchar_t` constructors, not `char` APIs. But because the C++ standard doesn't",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r219592401",
      "id" : 219592401,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTU5MjQwMQ==",
      "original_commit_id" : "48373c3b202f81e8f6da58bda90540fcdfc2587a",
      "original_position" : 18,
      "path" : "src/fs.h",
      "position" : null,
      "pull_request_review_id" : 157813396,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219592401",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r219691462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691462"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n2018-09-22 21:43:16 cpplint(pr=13878): src/fs.h:65:  Constructors callable with one argument should be marked explicit.  [runtime/explicit] [5]\r\n```",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-23T08:10:15Z",
      "diff_hunk" : "@@ -40,6 +42,54 @@ namespace fsbridge {\n     };\n \n     std::string get_filesystem_error_message(const fs::filesystem_error& e);\n+\n+    // GNU libstdc++ specific workaround for opening UTF-8 paths on Windows.\n+    //\n+    // On Windows, it is only possible to reliably access multibyte file paths through\n+    // `wchar_t` constructors, not `char` APIs. But because the C++ standard doesn't\n+    // require ifstream/ofstream `wchar_t` constructors, and the GNU library doesn't\n+    // provide them (in contrast to the Microsoft C++ library, see\n+    // https://stackoverflow.com/questions/821873/how-to-open-an-stdfstream-ofstream-or-ifstream-with-a-unicode-filename/822032#822032),\n+    // Boost is forced to fall back to `char` constructors which may not work properly.\n+    //\n+    // Work around this issue by creating stream objects with `_wfopen` in\n+    // combination with `__gnu_cxx::stdio_filebuf`. This workaround can be removed\n+    // with an upgrade to C++17, where streams can be constructed directly from\n+    // `std::filesystem::path` objects.\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+    class ifstream : public std::istream\n+    {\n+    public:\n+        ifstream() = default;\n+        ifstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in) { open(p, mode); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r219691462",
      "id" : 219691462,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTQ2Mg==",
      "original_commit_id" : "b11cf20f8255bf20fc3c80117308fcf77424545a",
      "original_position" : 38,
      "path" : "src/fs.h",
      "position" : null,
      "pull_request_review_id" : 157932066,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691462",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r219691468"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691468"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\n2018-09-22 21:43:16 cpplint(pr=13878): src/fs.h:79:  Constructors callable with one argument should be marked explicit.  [runtime/explicit] [5]\r\n```",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-09-23T08:10:27Z",
      "diff_hunk" : "@@ -40,6 +42,54 @@ namespace fsbridge {\n     };\n \n     std::string get_filesystem_error_message(const fs::filesystem_error& e);\n+\n+    // GNU libstdc++ specific workaround for opening UTF-8 paths on Windows.\n+    //\n+    // On Windows, it is only possible to reliably access multibyte file paths through\n+    // `wchar_t` constructors, not `char` APIs. But because the C++ standard doesn't\n+    // require ifstream/ofstream `wchar_t` constructors, and the GNU library doesn't\n+    // provide them (in contrast to the Microsoft C++ library, see\n+    // https://stackoverflow.com/questions/821873/how-to-open-an-stdfstream-ofstream-or-ifstream-with-a-unicode-filename/822032#822032),\n+    // Boost is forced to fall back to `char` constructors which may not work properly.\n+    //\n+    // Work around this issue by creating stream objects with `_wfopen` in\n+    // combination with `__gnu_cxx::stdio_filebuf`. This workaround can be removed\n+    // with an upgrade to C++17, where streams can be constructed directly from\n+    // `std::filesystem::path` objects.\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+    class ifstream : public std::istream\n+    {\n+    public:\n+        ifstream() = default;\n+        ifstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in) { open(p, mode); }\n+        ~ifstream() { close(); }\n+        void open(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in);\n+        bool is_open() { return m_filebuf.is_open(); }\n+        void close();\n+\n+    private:\n+        __gnu_cxx::stdio_filebuf<char> m_filebuf;\n+        FILE* m_file = nullptr;\n+    };\n+    class ofstream : public std::ostream\n+    {\n+    public:\n+        ofstream() = default;\n+        ofstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::out) { open(p, mode); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r219691468",
      "id" : 219691468,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTQ2OA==",
      "original_commit_id" : "b11cf20f8255bf20fc3c80117308fcf77424545a",
      "original_position" : 52,
      "path" : "src/fs.h",
      "position" : null,
      "pull_request_review_id" : 157932072,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-09-26T00:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691468",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and fix all nits from the comment",
      "created_at" : "2018-09-26T00:49:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-424548339",
      "id" : 424548339,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQyNDU0ODMzOQ==",
      "updated_at" : "2018-09-26T00:49:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424548339",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r221827593"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221827593"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Add missing newline at end of file :-)",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-10-02T05:18:49Z",
      "diff_hunk" : "@@ -12,4 +12,9 @@\n           Outputs=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\">\n       <Copy SourceFiles=\"$(MSBuildThisFileDirectory)bitcoin_config.h\" DestinationFiles=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\" />\n   </Target>\n+  <ItemDefinitionGroup>\n+    <ClCompile>\n+      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n </Project>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r221827593",
      "id" : 221827593,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTgyNzU5Mw==",
      "original_commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "original_position" : 9,
      "path" : "build_msvc/common.vcxproj",
      "position" : 9,
      "pull_request_review_id" : 160569184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-10-02T05:19:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221827593",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r222178335"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222178335"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That seems unnecessary for MSVC project file, they can work without the extra newline. But you can add it in your PR. I don't have strong opinion.",
      "commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "created_at" : "2018-10-03T04:31:51Z",
      "diff_hunk" : "@@ -12,4 +12,9 @@\n           Outputs=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\">\n       <Copy SourceFiles=\"$(MSBuildThisFileDirectory)bitcoin_config.h\" DestinationFiles=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\" />\n   </Target>\n+  <ItemDefinitionGroup>\n+    <ClCompile>\n+      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n </Project>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#discussion_r222178335",
      "id" : 222178335,
      "in_reply_to_id" : 221827593,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjE3ODMzNQ==",
      "original_commit_id" : "43c7fbb1e79a4a2219306bf3da1a2dfdf9213f2c",
      "original_position" : 9,
      "path" : "build_msvc/common.vcxproj",
      "position" : 9,
      "pull_request_review_id" : 161003104,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/13878",
      "updated_at" : "2018-10-03T04:34:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222178335",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/11154118?v=4",
         "events_url" : "https://api.github.com/users/ken2812221/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ken2812221/followers",
         "following_url" : "https://api.github.com/users/ken2812221/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ken2812221/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ken2812221",
         "id" : 11154118,
         "login" : "ken2812221",
         "node_id" : "MDQ6VXNlcjExMTU0MTE4",
         "organizations_url" : "https://api.github.com/users/ken2812221/orgs",
         "received_events_url" : "https://api.github.com/users/ken2812221/received_events",
         "repos_url" : "https://api.github.com/users/ken2812221/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ken2812221/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ken2812221"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 86eb3b3f1ab594142b6baa9576717ff121f3b745",
      "created_at" : "2018-10-18T08:35:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/13878#issuecomment-430923859",
      "id" : 430923859,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/13878",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQzMDkyMzg1OQ==",
      "updated_at" : "2018-10-18T08:35:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430923859",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
