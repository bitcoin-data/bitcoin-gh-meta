[
   {
      "author_association" : "MEMBER",
      "body" : "@sipa I just tested removing that loop, and having that loop actually call MarkConflicted.  Both seem to pass the tests (not sure that counts for much).  I'm not sure which I like better, the latter duplicates much of the MarkConflicted thats about to happen anyway and makes the wallet unreachable txs hard to unconflict...\n",
      "created_at" : "2016-09-09T22:16:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8692#issuecomment-246056038",
      "id" : 246056038,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8692",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDI0NjA1NjAzOA==",
      "performed_via_github_app" : null,
      "updated_at" : "2016-09-09T22:16:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/246056038",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/4360349?v=4",
         "events_url" : "https://api.github.com/users/morcos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/morcos/followers",
         "following_url" : "https://api.github.com/users/morcos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/morcos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/morcos",
         "id" : 4360349,
         "login" : "morcos",
         "node_id" : "MDQ6VXNlcjQzNjAzNDk=",
         "organizations_url" : "https://api.github.com/users/morcos/orgs",
         "received_events_url" : "https://api.github.com/users/morcos/received_events",
         "repos_url" : "https://api.github.com/users/morcos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/morcos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/morcos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/morcos"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Closing this issue. Notes are still somewhat relevant but a lot has changed since this was written and https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking which references this is probably a better starting point for understanding wallet conflict tracking and how it can be improved currently. Particularly the [*idea-more-conflicts*](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking#idea-more-conflicts) section covers the information in these notes and discusses how the wallet can handle block-connected conflicts better.\r\n\r\nBelow is the original issue description annotated with details of what's changed since this was opened.\r\n\r\n---\r\n\r\nre: https://github.com/bitcoin/bitcoin/issues/8692#issue-176033489\r\n> (These obscure notes are for eventually cleaning up wallet confliction and are low priority)\r\n>\r\n> In the block connection logic we call\r\n>\r\n> ```\r\n> BOOST_FOREACH(const CTransaction &tx, txConflicted)\r\n>         {\r\n>             SyncWithWallets(tx, pindexNewTip);\r\n>         }\r\n> ```\r\n>\r\n\r\nAt the time, this code was part of [`ActivateBestChain`](https://github.com/bitcoin/bitcoin/blob/b3b3c2a5623d5c942d2b3565cc2d833c65105555/src/main.cpp#L3052-L3057). This code was first added in https://github.com/bitcoin/bitcoin/pull/3694, and removed in https://github.com/bitcoin/bitcoin/pull/9240, because it was mistakenly thought to be unnecessary after https://github.com/bitcoin/bitcoin/pull/7105. It was then added back in https://github.com/bitcoin/bitcoin/pull/9371 and then accidentally removed again in https://github.com/bitcoin/bitcoin/pull/16624/commits/7e89994133725125dddbfa8d45484e3b9ed51c6e from https://github.com/bitcoin/bitcoin/pull/16624. Finally it was added back again in https://github.com/bitcoin/bitcoin/pull/18982.\r\n\r\n> `txConflicted` is returned by `mempool.removeForBlock` and can therefore contain transactions that should be marked conflicted that wouldn't be caught by the wallets own dependency tracking code (chains of mempool txs not all of which are in the wallet).\r\n\r\nIt's still true that block connection code can detect conflicts that wallet code will miss.\r\n\r\n> However, calling `SyncWithWallets` without setting a `posInBlock` has virtually no effect other than marking the cached credit/debit values as dirty. Since #7105 however wallet txs, that aren't explicitly marked conflicted via the wallets code, aren't actually known to be conflicted and are treated as just unconfirmed. I think the result of this is this SyncWithWallets loop is of dubious value.\r\n\r\nIt's still true that the these transactions are marked as unconfirmed instead of conflicted, but this could easily be changed as suggested in the wiki. It would just require some new code to update these from conflicted to unconflicted during reorgs.\r\n\r\nIt isn't not true the notification loop doesn't have value. It's just that the current value comes from triggering external notifications, not from updating internal state.\r\n\r\n> * All txs that are caught by the wallets conflict detection would already be marked dirty, and the new txs this loop catches, can't correctly reflect the right balance state anyway.\r\n\r\nThis is still true, but doesn't have to be. It's only true because the transactions are currently marked unconfirmed instead of conflicted.\r\n\r\n> * It actually serves a detrimental effect on the transactions that were marked as abandoned that will now erroneously have their abandoned state cleared and be treated as unconfirmed.  Their true state of conflicted matches much more closely to abandoned.  (This will be corrected in the immediately following loop for txs that the wallet code catches)\r\n\r\nI didn't go back and check if this was true at the time when this was written, but it's not true now. These transactions could not already be marked as abandoned because they are being removed from the mempool and transactions that are in the mempool can't be abandoned.\r\n\r\n> It may be possible to just correctly MarkConflicted all these transactions, and then I think the only issue will be the txs that are only conflicted because they are dependents won't properly have their cached values dirtied if the conflict goes away. This issue already exists #7315.\r\n\r\nThis is still possible. #7315 has changed since this was reported, but #7315 is just about reorg handling, and marking these conflicted and handling reorgs is easily possible\r\n\r\n> See IRC discussion [botbot.me/freenode/bitcoin-core-dev/2016-09-09/?msg=72745343&page=3](https://botbot.me/freenode/bitcoin-core-dev/2016-09-09/?msg=72745343&page=3)\r\n\r\nUpdated link: http://www.erisian.com.au/bitcoin-core-dev/log-2016-09-09.html#l-322\r\n",
      "created_at" : "2021-01-11T13:36:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/8692#issuecomment-757955279",
      "id" : 757955279,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/8692",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1Nzk1NTI3OQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-11T13:36:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757955279",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]
