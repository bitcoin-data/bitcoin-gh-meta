[
   {
      "author_association" : "MEMBER",
      "body" : "> ```c++\r\n> return { chain.tip_hash(), chain.tip_height() };\r\n> ```\r\n> \r\n> Assuming that `chain` has a private lock, which is acquired in its member methods. Though, in a multi-threaded context this may return a stale hash, which does not correspond to the height.\r\n\r\nRedesign a class API?\r\n\r\n```c++\r\nconst auto tip = chain.tip();\r\nconst auto tip_hash = tip.hash;\r\nconst auto tip_height = tip.heigh;\r\n```",
      "created_at" : "2022-06-10T09:07:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1152146342",
      "id" : 1152146342,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585ErFum",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152146342/reactions"
      },
      "updated_at" : "2022-06-10T09:07:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152146342",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think this wouldn't work if you also want to get a `CCoinsViewCache` and `CCoinsViewMemPool` and call their methods while holding the lock.",
      "created_at" : "2022-06-10T09:21:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1152158930",
      "id" : 1152158930,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585ErIzS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152158930/reactions"
      },
      "updated_at" : "2022-06-10T09:21:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152158930",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @ryanofsky @ajtowns @vasild ",
      "created_at" : "2022-06-10T12:29:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1152308036",
      "id" : 1152308036,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585ErtNE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152308036/reactions"
      },
      "updated_at" : "2022-06-10T12:29:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152308036",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "To be concrete, is the idea is that the locked chain \"lc\" class would lock cs_main when it is constructed, and unlock it when it destructed? \r\n\r\nIf so, I think that can be a nice interface, and it is similar to the to the [`interfaces::Chain::Lock`](https://github.com/bitcoin/bitcoin/blob/0f204dd3f21b997334a0e99954c939db154b64ca/src/interfaces/chain.h#L85) class which wallet code was using before #16426\r\n\r\nAnother benefit besides making locking easier to enforce is that it could eliminate explicit references to cs_main, and distinguish uses of cs_main for locking chain state from uses of cs_main for other reasons, and maybe make it easier to split up cs_main in the future.\r\n\r\nA risk of this approach is that the locked chain class could turn into a monolithic class doing a lot of unrelated things. Also it sounds like introducing it might require a lot of code changes, though that would depend on the details.\r\n\r\nSeems like a useful idea to explore",
      "created_at" : "2022-06-10T14:59:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1152453781",
      "id" : 1152453781,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585EsQyV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152453781/reactions"
      },
      "updated_at" : "2022-06-10T14:59:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152453781",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> A risk of this approach is that the locked chain class could turn into a monolithic class doing a lot of unrelated things.\r\n\r\nYeah, my hope was that the returned object inherits the interface.\r\n\r\nSomething like:\r\n\r\n(Could be annotated with https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#scoped-capability ?)\r\n\r\n```cpp\r\n\r\ntemplate<typename T>\r\nstruct Locked{\r\n T& fwd;\r\n Locked(T&t) : fwd{t} { t.lock(); };\r\n ~Locked() { t.unlock(); };\r\n};\r\n\r\nvoid stuff() {\r\n  Locked lc{node.chainman};\r\n  lc.fwd.tip_hash();\r\n  ...\r\n}\r\n```\r\n\r\nObviously this only works with recursive mutexes, if we assume that `tip_hash()` also takes the lock.",
      "created_at" : "2022-06-10T15:31:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1152486821",
      "id" : 1152486821,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585EsY2l",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152486821/reactions"
      },
      "updated_at" : "2022-06-10T15:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152486821",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think something like this makes sense for the combination of chain tip / utxo set / mempool access, since that is complicated, and controls a whole mess of different data structures -- and assumeutxo means we've now sometimes got two tips/utxo sets, which makes it even more complicated.\r\n\r\nFor the general case, I don't think the template really adds much over what we do now.",
      "created_at" : "2022-06-13T00:42:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1153338488",
      "id" : 1153338488,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585Evox4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1153338488/reactions"
      },
      "updated_at" : "2022-06-13T00:42:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1153338488",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess what I'm thinking is something like:\r\n\r\n```c++\r\nclass KernelChain\r\n{\r\npublic:\r\n    CChainState& chainstate;\r\n    CoinsViews& coinviews;\r\nprivate:\r\n    DebugLock<decltype(::cs_main)> main_lock;\r\n};\r\n\r\nclass KernelMemPool\r\n{\r\npublic:\r\n    CTxMempool& mempool;\r\nprivate:\r\n    DebugLock<decltype(mempool.cs)> mempool_lock;\r\n};\r\n\r\nclass KernelChainAndMemPool : public KernelChain, public KernelMemPool\r\n{\r\n};\r\n\r\nclass ChainstateManager\r\n{\r\npublic:\r\n    CBlockIndex* GetTip() const;\r\n    KernelChain GetChain();\r\n    KernelChainAndMemPool GetChainMemPool();\r\n\r\n    KernelChain GetIBDChain();\r\n};\r\n```\r\n\r\nIf we figured out reader/writer locks; we could maybe have a `const KernelChain& GetChainRO() const;` to allow multiple threads simultaneous read-only access to the chain/mempool.\r\n\r\nThe idea above is that you only have access to the mempool once you've already taken both `mempool.cs`, and lose access to it at exactly the same time as you lose the lock; so none of the mempool methods need to worry about locking at all (and the mempool.cs could be moved into `ChainstateManager`, I guess), and likewise for `cs_main`.",
      "created_at" : "2022-06-13T01:54:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1153375927",
      "id" : 1153375927,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585Evx63",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1153375927/reactions"
      },
      "updated_at" : "2022-06-13T01:55:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1153375927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "**>> A good interface is impossible to misuse <<**\r\n\r\nWhat @hebasto suggested above is in-line with that - get all fields that need to be consistent with each other in one call. Replace `GetX()` and `GetY()` with `GetState()` (or `GetSnapshot()`) which returns both `X` and `Y`. That is also pretty simple to implement, understand and to use. It is dumb, which is good. [Code should be dumb](https://en.wikipedia.org/wiki/KISS_principle).\r\n\r\nThere may be some problems around the other idea about `Locked lc{node.chainman}`:\r\n* one could still call `node.chainman.tip_hash()` directly without creating `lc` beforehand\r\n* it opens the possibility to pass around `lc` as argument to functions, transferring mutex ownership, which opens up a can of worms and is better avoided if possible\r\n* the caller can unintentionally hold it locked for too long\r\n* will not work with thread safety annotations?\r\n* it would require a recurstive mutex? I think that every time a recursive mutex is needed there is some design flaw or at least low-level coding flaw.",
      "created_at" : "2022-06-13T09:21:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1153682016",
      "id" : 1153682016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585Ew8pg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1153682016/reactions"
      },
      "updated_at" : "2022-06-13T09:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1153682016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> GetState, KISS.\r\n\r\nYou may be over-simplifying things to the extend where it becomes a performance regression. If you wanted to check some outpoints that aren't spent in the mempool against the utxo set, you'd have to create a snapshot of the whole utxo set, and a copy of the whole mempool, as it is not possible to create a snapshot of the mempool. (See for example https://github.com/bitcoin/bitcoin/pull/25077 )\r\n\r\nI guess an alternative would be to pass lambdas into chainman methods to be executed when iterating chainman data structures.",
      "created_at" : "2022-06-13T13:56:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1153948282",
      "id" : 1153948282,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585Ex9p6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1153948282/reactions"
      },
      "updated_at" : "2022-06-13T13:56:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1153948282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Right, the GetState() approach is not suitable in all cases. I guess it is best to decide on a case-by-case basis. The lambda approach sounds nice.",
      "created_at" : "2022-06-13T15:26:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1154064815",
      "id" : 1154064815,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585EyaGv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1154064815/reactions"
      },
      "updated_at" : "2022-06-13T15:26:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1154064815",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Having now looked more at #25077 I'm a big concept ack on doing something along these lines; the current interface is a mess, and this does seem like the simplest way of addressing it cleanly.",
      "created_at" : "2022-06-13T15:58:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1154098864",
      "id" : 1154098864,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585Eyiaw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1154098864/reactions"
      },
      "updated_at" : "2022-06-13T15:58:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1154098864",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess the other thing to consider is that aliasing makes any analysis hard, including thread safety -- if you do \"foo.bar = 3\" then it's easy to lookup what bar is and whether you need a mutex; but when you do \"x = &foo; x->bar = 3;\" that becomes a lot harder. \r\n\r\nSo perhaps a better approach is to avoid making aliases of things that are protected by external mutexes. So if you've got:\r\n\r\n```c++\r\nstruct X {\r\n    Mutex m;\r\n    int i GUARDED_BY(m);\r\n};\r\nX x;\r\n```\r\n\r\nthen it's fine to say `X& x2 = x;` and make an alias of the entire structure, but it's not fine to say `int* pi = &x.i`. `ChainstateManager::ActiveChain` in particular is returning an alias of `m_chain` which doesn't have an internal mutex protecting itself, and isn't natively thread safe. But, at least in theory, an alias of `CChainState` could be safe, since it's already designed to be accessed from multiple threads and has its own internal locking logic to be thread safe.",
      "created_at" : "2022-06-14T06:09:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1154756124",
      "id" : 1154756124,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585E1C4c",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1154756124/reactions"
      },
      "updated_at" : "2022-06-14T06:09:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1154756124",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Another thing is that referring to a mutex that is supposed to be `private` in a context outside its `class` also makes thread-safety annotations brittle, unless the mutex is made global and annotated with the recursive annotations or the mutex is made a recursive mutex to avoid double-locking.\r\n\r\nPeople don't seem to be liking globals and recursive mutexes, so while changing the code, it might be better to prefer an approach that doesn't need either.",
      "created_at" : "2022-06-15T12:59:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1156441213",
      "id" : 1156441213,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585E7eR9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1156441213/reactions"
      },
      "updated_at" : "2022-06-15T12:59:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1156441213",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/25390 has some solution that is relevant to this.",
      "created_at" : "2022-06-16T15:53:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1157834789",
      "id" : 1157834789,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585FAygl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1157834789/reactions"
      },
      "updated_at" : "2022-06-16T15:53:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1157834789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yeah, that works when the lock can live isolated inside the wrapping class. Otherwise my previous comment applies, so I don't think we can do this with `cs_main` (unless we remove cs_main in a single commit, which I doubt will happen).\r\n\r\n",
      "created_at" : "2022-06-16T16:11:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1157858865",
      "id" : 1157858865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585FA4Yx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1157858865/reactions"
      },
      "updated_at" : "2022-06-16T16:11:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1157858865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Hmm. Maybe the status quo isn't perfect but good enough for now. It might be more fruitful to work on:\r\n\r\n* Making cs_main a member of chainman instead of it being a global\r\n* Maybe introduce more specific locks in classes that don't need cs_main. That is a CChain lock, a BlockMan lock, ...\r\n\r\nClosing for now, but let me know if there is a comment that I missed that might be worth to look into further.",
      "created_at" : "2022-06-21T14:01:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/25330#issuecomment-1161789478",
      "id" : 1161789478,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25330",
      "node_id" : "IC_kwDOABII585FP4Am",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161789478/reactions"
      },
      "updated_at" : "2022-06-21T14:01:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161789478",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   }
]
