[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25364#discussion_r896523568"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25364"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896523568"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I am wondering if it helps if there was a local `create_transaction` helper? As this is creating a simple chain of txs, the vout could be hardcoded to `0` in the helper, also the node could be hardcoded to `self.nodes[0]`, as there is only one node.\r\n\r\nSo you'd call `self.create_transaction(coinbase_txid[0], self.ms_address, amount=49, privkey=self.nodes[0].PRIV_KEYS[0][1])` here.\r\n\r\nThe benefit would be less code and less symbols in this scope.\r\n\r\nThoughts?",
      "commit_id" : "b02411d2ddf8c010fc4e9d9ec27cae3a73e895a9",
      "created_at" : "2022-06-14T08:22:50Z",
      "diff_hunk" : "@@ -82,31 +82,59 @@ def run_test(self):\n         self.lastblocktime = int(time.time()) + self.lastblockheight\n \n         self.log.info(f\"Test 1: NULLDUMMY compliant base transactions should be accepted to mempool and mined before activation [{COINBASE_MATURITY + 3}]\")\n-        test1txs = [create_transaction(self.nodes[0], coinbase_txid[0], self.ms_address, amount=49)]\n+        input = {\"txid\": coinbase_txid[0], \"vout\": 0}\n+        output = {self.ms_address: 49}\n+        rawtx = self.nodes[0].createrawtransaction([input], output)\n+        signedtx = self.nodes[0].signrawtransactionwithkey(hexstring=rawtx, privkeys=[self.nodes[0].PRIV_KEYS[0][1]])\n+        test1txs = [tx_from_hex(signedtx[\"hex\"])]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25364#discussion_r896523568",
      "id" : 896523568,
      "line" : 89,
      "node_id" : "PRRC_kwDOABII5841b90w",
      "original_commit_id" : "b02411d2ddf8c010fc4e9d9ec27cae3a73e895a9",
      "original_line" : 89,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "test/functional/feature_nulldummy.py",
      "position" : 66,
      "pull_request_review_id" : 1005439394,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25364",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896523568/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-14T08:23:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896523568",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, thanks for working on disentangling more tests from the wallet.",
      "created_at" : "2022-06-14T09:40:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25364#issuecomment-1154955025",
      "id" : 1154955025,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25364",
      "node_id" : "IC_kwDOABII585E1zcR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1154955025/reactions"
      },
      "updated_at" : "2022-06-14T09:40:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1154955025",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25364#discussion_r896810126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25364"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896810126"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Agree that a lot of symbols are reused and the code could be minimised.\r\nAdded a helper function for creating transactions.",
      "commit_id" : "a8fe321baebd404410ae5e0fca7a5c39b0da41fc",
      "created_at" : "2022-06-14T13:20:17Z",
      "diff_hunk" : "@@ -82,31 +82,59 @@ def run_test(self):\n         self.lastblocktime = int(time.time()) + self.lastblockheight\n \n         self.log.info(f\"Test 1: NULLDUMMY compliant base transactions should be accepted to mempool and mined before activation [{COINBASE_MATURITY + 3}]\")\n-        test1txs = [create_transaction(self.nodes[0], coinbase_txid[0], self.ms_address, amount=49)]\n+        input = {\"txid\": coinbase_txid[0], \"vout\": 0}\n+        output = {self.ms_address: 49}\n+        rawtx = self.nodes[0].createrawtransaction([input], output)\n+        signedtx = self.nodes[0].signrawtransactionwithkey(hexstring=rawtx, privkeys=[self.nodes[0].PRIV_KEYS[0][1]])\n+        test1txs = [tx_from_hex(signedtx[\"hex\"])]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25364#discussion_r896810126",
      "id" : 896810126,
      "in_reply_to_id" : 896523568,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841dDyO",
      "original_commit_id" : "b02411d2ddf8c010fc4e9d9ec27cae3a73e895a9",
      "original_line" : 89,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "test/functional/feature_nulldummy.py",
      "position" : null,
      "pull_request_review_id" : 1005852244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25364",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896810126/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-14T13:23:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896810126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/21211904?v=4",
         "events_url" : "https://api.github.com/users/ayush933/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ayush933/followers",
         "following_url" : "https://api.github.com/users/ayush933/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ayush933/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ayush933",
         "id" : 21211904,
         "login" : "ayush933",
         "node_id" : "MDQ6VXNlcjIxMjExOTA0",
         "organizations_url" : "https://api.github.com/users/ayush933/orgs",
         "received_events_url" : "https://api.github.com/users/ayush933/received_events",
         "repos_url" : "https://api.github.com/users/ayush933/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ayush933/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ayush933/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ayush933"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25364#discussion_r896815956"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25364"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896815956"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is this needed? In the previous commit you didn't have to pass in the scriptPubKey for coinbase spends with the deterministic keys.",
      "commit_id" : "a8fe321baebd404410ae5e0fca7a5c39b0da41fc",
      "created_at" : "2022-06-14T13:25:09Z",
      "diff_hunk" : "@@ -55,58 +60,87 @@ def set_test_params(self):\n             '-par=1',  # Use only one script thread to get the exact reject reason for testing\n         ]]\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def create_transaction(self, *, txid, inAmount=None, spk=None, rs=None, ws=None, addr, amount, privkey):\n+        input = {\"txid\": txid, \"vout\": 0}\n+        if inAmount is not None:\n+            input[\"amount\"] = inAmount\n+        if spk is not None:\n+            input[\"scriptPubKey\"] = spk\n+        if rs is not None:\n+            input[\"redeemScript\"] = rs\n+        if ws is not None:\n+            input[\"witnessScript\"] = ws\n+        output = {addr: amount}\n+        rawtx = self.nodes[0].createrawtransaction([input], output)\n+        signedtx = self.nodes[0].signrawtransactionwithkey(rawtx, [privkey], [input])\n+        return tx_from_hex(signedtx[\"hex\"])\n \n     def run_test(self):\n-        self.nodes[0].createwallet(wallet_name='wmulti', disable_private_keys=True)\n-        wmulti = self.nodes[0].get_wallet_rpc('wmulti')\n-        w0 = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n-        self.address = w0.getnewaddress()\n-        self.pubkey = w0.getaddressinfo(self.address)['pubkey']\n-        self.ms_address = wmulti.addmultisigaddress(1, [self.pubkey])['address']\n-        self.wit_address = w0.getnewaddress(address_type='p2sh-segwit')\n-        self.wit_ms_address = wmulti.addmultisigaddress(1, [self.pubkey], '', 'p2sh-segwit')['address']\n-        if not self.options.descriptors:\n-            # Legacy wallets need to import these so that they are watched by the wallet. This is unnecessary (and does not need to be tested) for descriptor wallets\n-            wmulti.importaddress(self.ms_address)\n-            wmulti.importaddress(self.wit_ms_address)\n+        self.address = getnewdestination()[2]\n+        eckey = ECKey()\n+        eckey.generate()\n+        self.privkey = bytes_to_wif(eckey.get_bytes())\n+        self.pubkey = eckey.get_pubkey().get_bytes().hex()\n+        cms = self.nodes[0].createmultisig(1, [self.pubkey])\n+        wms = self.nodes[0].createmultisig(1, [self.pubkey], 'p2sh-segwit')\n+        self.ms_address = cms[\"address\"]\n+        self.wit_address = getnewdestination(address_type='p2sh-segwit')[2]\n+        self.wit_ms_address = wms['address']\n \n         self.coinbase_blocks = self.generate(self.nodes[0], 2)  # block height = 2\n         coinbase_txid = []\n+        block_hash = []\n         for i in self.coinbase_blocks:\n-            coinbase_txid.append(self.nodes[0].getblock(i)['tx'][0])\n+            block = self.nodes[0].getblock(i)\n+            coinbase_txid.append(block['tx'][0])\n+            block_hash.append(block[\"hash\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25364#discussion_r896815956",
      "id" : 896815956,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII5841dFNU",
      "original_commit_id" : "a8fe321baebd404410ae5e0fca7a5c39b0da41fc",
      "original_line" : 96,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "test/functional/feature_nulldummy.py",
      "position" : 76,
      "pull_request_review_id" : 1005860569,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25364",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896815956/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-14T13:25:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896815956",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25364#discussion_r896948093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25364"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896948093"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In the previous commit I didn't have to pass `[input]` to `signrawtransactionwithkey` for coinbase spends but here I have to.\r\nI get `Missing scriptPubKey (-3)` if I don't pass the scriptPubKey.",
      "commit_id" : "a8fe321baebd404410ae5e0fca7a5c39b0da41fc",
      "created_at" : "2022-06-14T15:06:46Z",
      "diff_hunk" : "@@ -55,58 +60,87 @@ def set_test_params(self):\n             '-par=1',  # Use only one script thread to get the exact reject reason for testing\n         ]]\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def create_transaction(self, *, txid, inAmount=None, spk=None, rs=None, ws=None, addr, amount, privkey):\n+        input = {\"txid\": txid, \"vout\": 0}\n+        if inAmount is not None:\n+            input[\"amount\"] = inAmount\n+        if spk is not None:\n+            input[\"scriptPubKey\"] = spk\n+        if rs is not None:\n+            input[\"redeemScript\"] = rs\n+        if ws is not None:\n+            input[\"witnessScript\"] = ws\n+        output = {addr: amount}\n+        rawtx = self.nodes[0].createrawtransaction([input], output)\n+        signedtx = self.nodes[0].signrawtransactionwithkey(rawtx, [privkey], [input])\n+        return tx_from_hex(signedtx[\"hex\"])\n \n     def run_test(self):\n-        self.nodes[0].createwallet(wallet_name='wmulti', disable_private_keys=True)\n-        wmulti = self.nodes[0].get_wallet_rpc('wmulti')\n-        w0 = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n-        self.address = w0.getnewaddress()\n-        self.pubkey = w0.getaddressinfo(self.address)['pubkey']\n-        self.ms_address = wmulti.addmultisigaddress(1, [self.pubkey])['address']\n-        self.wit_address = w0.getnewaddress(address_type='p2sh-segwit')\n-        self.wit_ms_address = wmulti.addmultisigaddress(1, [self.pubkey], '', 'p2sh-segwit')['address']\n-        if not self.options.descriptors:\n-            # Legacy wallets need to import these so that they are watched by the wallet. This is unnecessary (and does not need to be tested) for descriptor wallets\n-            wmulti.importaddress(self.ms_address)\n-            wmulti.importaddress(self.wit_ms_address)\n+        self.address = getnewdestination()[2]\n+        eckey = ECKey()\n+        eckey.generate()\n+        self.privkey = bytes_to_wif(eckey.get_bytes())\n+        self.pubkey = eckey.get_pubkey().get_bytes().hex()\n+        cms = self.nodes[0].createmultisig(1, [self.pubkey])\n+        wms = self.nodes[0].createmultisig(1, [self.pubkey], 'p2sh-segwit')\n+        self.ms_address = cms[\"address\"]\n+        self.wit_address = getnewdestination(address_type='p2sh-segwit')[2]\n+        self.wit_ms_address = wms['address']\n \n         self.coinbase_blocks = self.generate(self.nodes[0], 2)  # block height = 2\n         coinbase_txid = []\n+        block_hash = []\n         for i in self.coinbase_blocks:\n-            coinbase_txid.append(self.nodes[0].getblock(i)['tx'][0])\n+            block = self.nodes[0].getblock(i)\n+            coinbase_txid.append(block['tx'][0])\n+            block_hash.append(block[\"hash\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25364#discussion_r896948093",
      "id" : 896948093,
      "in_reply_to_id" : 896815956,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII5841dld9",
      "original_commit_id" : "a8fe321baebd404410ae5e0fca7a5c39b0da41fc",
      "original_line" : 96,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "test/functional/feature_nulldummy.py",
      "position" : 76,
      "pull_request_review_id" : 1006047459,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25364",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896948093/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-14T15:06:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896948093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/21211904?v=4",
         "events_url" : "https://api.github.com/users/ayush933/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ayush933/followers",
         "following_url" : "https://api.github.com/users/ayush933/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ayush933/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ayush933",
         "id" : 21211904,
         "login" : "ayush933",
         "node_id" : "MDQ6VXNlcjIxMjExOTA0",
         "organizations_url" : "https://api.github.com/users/ayush933/orgs",
         "received_events_url" : "https://api.github.com/users/ayush933/received_events",
         "repos_url" : "https://api.github.com/users/ayush933/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ayush933/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ayush933/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ayush933"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25364#discussion_r897633994"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25364"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897633994"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh I see. This is due to passing the input even though it is not needed. What do you think about passing `None` in this case?\r\n\r\nSee this draft diff:\r\n\r\n\r\n```diff\r\ndiff --git a/test/functional/feature_nulldummy.py b/test/functional/feature_nulldummy.py\r\nindex e860a7fc36..90e0887b08 100755\r\n--- a/test/functional/feature_nulldummy.py\r\n+++ b/test/functional/feature_nulldummy.py\r\n@@ -60,19 +60,13 @@ class NULLDUMMYTest(BitcoinTestFramework):\r\n             '-par=1',  # Use only one script thread to get the exact reject reason for testing\r\n         ]]\r\n \r\n-    def create_transaction(self, *, txid, inAmount=None, spk=None, rs=None, ws=None, addr, amount, privkey):\r\n+    def create_transaction(self, *, txid, prev_utxo_details=None, addr, amount, privkey):\r\n         input = {\"txid\": txid, \"vout\": 0}\r\n-        if inAmount is not None:\r\n-            input[\"amount\"] = inAmount\r\n-        if spk is not None:\r\n-            input[\"scriptPubKey\"] = spk\r\n-        if rs is not None:\r\n-            input[\"redeemScript\"] = rs\r\n-        if ws is not None:\r\n-            input[\"witnessScript\"] = ws\r\n         output = {addr: amount}\r\n         rawtx = self.nodes[0].createrawtransaction([input], output)\r\n-        signedtx = self.nodes[0].signrawtransactionwithkey(rawtx, [privkey], [input])\r\n+        # Details only needed for scripthash or witness spends\r\n+        input = None if not prev_utxo_details else [{**input,**prev_utxo_details}]\r\n+        signedtx = self.nodes[0].signrawtransactionwithkey(rawtx, [privkey], input)\r\n         return tx_from_hex(signedtx[\"hex\"])\r\n \r\n     def run_test(self):\r\n@@ -101,24 +95,22 @@ class NULLDUMMYTest(BitcoinTestFramework):\r\n \r\n         self.log.info(f\"Test 1: NULLDUMMY compliant base transactions should be accepted to mempool and mined before activation [{COINBASE_MATURITY + 3}]\")\r\n         test1txs = [self.create_transaction(txid=coinbase_txid[0], addr=self.ms_address, amount=49,\r\n-                                            spk=self.nodes[0].getrawtransaction(coinbase_txid[0], True, block_hash[0])[\"vout\"][0][\"scriptPubKey\"][\"hex\"],\r\n                                             privkey=self.nodes[0].PRIV_KEYS[0][1])]\r\n         txid1 = self.nodes[0].sendrawtransaction(test1txs[0].serialize_with_witness().hex(), 0)\r\n         spk = test1txs[0].vout[0].scriptPubKey.hex()\r\n-        test1txs.append(self.create_transaction(txid=txid1, spk=spk,\r\n-                                                rs=cms[\"redeemScript\"],\r\n+        test1txs.append(self.create_transaction(txid=txid1, prev_utxo_details={\"scriptPubKey\":spk,\r\n+                                                \"redeemScript\":cms[\"redeemScript\"]},\r\n                                                 addr=self.ms_address, amount=48,\r\n                                                 privkey=self.privkey))\r\n         txid2 = self.nodes[0].sendrawtransaction(test1txs[1].serialize_with_witness().hex(), 0)\r\n         test1txs.append(self.create_transaction(txid=coinbase_txid[1],\r\n-                                                spk=self.nodes[0].getrawtransaction(coinbase_txid[1], True, block_hash[1])[\"vout\"][0][\"scriptPubKey\"][\"hex\"],\r\n                                                 addr=self.wit_ms_address, amount=49,\r\n                                                 privkey=self.nodes[0].PRIV_KEYS[0][1]))\r\n         txid3 = self.nodes[0].sendrawtransaction(test1txs[2].serialize_with_witness().hex(), 0)\r\n         self.block_submit(self.nodes[0], test1txs, accept=True)\r\n \r\n         self.log.info(\"Test 2: Non-NULLDUMMY base multisig transaction should not be accepted to mempool before activation\")\r\n-        test2tx = self.create_transaction(txid=txid2, spk=spk, rs=cms[\"redeemScript\"],\r\n+        test2tx = self.create_transaction(txid=txid2, prev_utxo_details={\"scriptPubKey\":spk, \"redeemScript\":cms[\"redeemScript\"]},\r\n                                           addr=self.ms_address, amount=47,\r\n                                           privkey=self.privkey)\r\n         invalidate_nulldummy_tx(test2tx)\r\n@@ -128,7 +120,7 @@ class NULLDUMMYTest(BitcoinTestFramework):\r\n         self.block_submit(self.nodes[0], [test2tx], accept=True)\r\n \r\n         self.log.info(\"Test 4: Non-NULLDUMMY base multisig transaction is invalid after activation\")\r\n-        test4tx = self.create_transaction(txid=test2tx.hash, spk=spk, rs=cms[\"redeemScript\"],\r\n+        test4tx = self.create_transaction(txid=test2tx.hash, prev_utxo_details={\"scriptPubKey\":spk, \"redeemScript\":cms[\"redeemScript\"]},\r\n                                           addr=self.address, amount=46,\r\n                                           privkey=self.privkey)\r\n         test6txs = [CTransaction(test4tx)]\r\n@@ -137,8 +129,8 @@ class NULLDUMMYTest(BitcoinTestFramework):\r\n         self.block_submit(self.nodes[0], [test4tx], accept=False)\r\n \r\n         self.log.info(\"Test 5: Non-NULLDUMMY P2WSH multisig transaction invalid after activation\")\r\n-        test5tx = self.create_transaction(txid=txid3, spk=test1txs[2].vout[0].scriptPubKey.hex(),\r\n-                                          inAmount=49, ws=wms[\"redeemScript\"],\r\n+        test5tx = self.create_transaction(txid=txid3, prev_utxo_details={\"scriptPubKey\":test1txs[2].vout[0].scriptPubKey.hex(),\r\n+                                          \"amount\":49, \"witnessScript\":wms[\"redeemScript\"]},\r\n                                           addr=self.wit_address, amount=48,\r\n                                           privkey=self.privkey)\r\n         test6txs.append(CTransaction(test5tx))\r\n",
      "commit_id" : "a8fe321baebd404410ae5e0fca7a5c39b0da41fc",
      "created_at" : "2022-06-15T07:33:04Z",
      "diff_hunk" : "@@ -55,58 +60,87 @@ def set_test_params(self):\n             '-par=1',  # Use only one script thread to get the exact reject reason for testing\n         ]]\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def create_transaction(self, *, txid, inAmount=None, spk=None, rs=None, ws=None, addr, amount, privkey):\n+        input = {\"txid\": txid, \"vout\": 0}\n+        if inAmount is not None:\n+            input[\"amount\"] = inAmount\n+        if spk is not None:\n+            input[\"scriptPubKey\"] = spk\n+        if rs is not None:\n+            input[\"redeemScript\"] = rs\n+        if ws is not None:\n+            input[\"witnessScript\"] = ws\n+        output = {addr: amount}\n+        rawtx = self.nodes[0].createrawtransaction([input], output)\n+        signedtx = self.nodes[0].signrawtransactionwithkey(rawtx, [privkey], [input])\n+        return tx_from_hex(signedtx[\"hex\"])\n \n     def run_test(self):\n-        self.nodes[0].createwallet(wallet_name='wmulti', disable_private_keys=True)\n-        wmulti = self.nodes[0].get_wallet_rpc('wmulti')\n-        w0 = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n-        self.address = w0.getnewaddress()\n-        self.pubkey = w0.getaddressinfo(self.address)['pubkey']\n-        self.ms_address = wmulti.addmultisigaddress(1, [self.pubkey])['address']\n-        self.wit_address = w0.getnewaddress(address_type='p2sh-segwit')\n-        self.wit_ms_address = wmulti.addmultisigaddress(1, [self.pubkey], '', 'p2sh-segwit')['address']\n-        if not self.options.descriptors:\n-            # Legacy wallets need to import these so that they are watched by the wallet. This is unnecessary (and does not need to be tested) for descriptor wallets\n-            wmulti.importaddress(self.ms_address)\n-            wmulti.importaddress(self.wit_ms_address)\n+        self.address = getnewdestination()[2]\n+        eckey = ECKey()\n+        eckey.generate()\n+        self.privkey = bytes_to_wif(eckey.get_bytes())\n+        self.pubkey = eckey.get_pubkey().get_bytes().hex()\n+        cms = self.nodes[0].createmultisig(1, [self.pubkey])\n+        wms = self.nodes[0].createmultisig(1, [self.pubkey], 'p2sh-segwit')\n+        self.ms_address = cms[\"address\"]\n+        self.wit_address = getnewdestination(address_type='p2sh-segwit')[2]\n+        self.wit_ms_address = wms['address']\n \n         self.coinbase_blocks = self.generate(self.nodes[0], 2)  # block height = 2\n         coinbase_txid = []\n+        block_hash = []\n         for i in self.coinbase_blocks:\n-            coinbase_txid.append(self.nodes[0].getblock(i)['tx'][0])\n+            block = self.nodes[0].getblock(i)\n+            coinbase_txid.append(block['tx'][0])\n+            block_hash.append(block[\"hash\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25364#discussion_r897633994",
      "id" : 897633994,
      "in_reply_to_id" : 896815956,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII5841gM7K",
      "original_commit_id" : "a8fe321baebd404410ae5e0fca7a5c39b0da41fc",
      "original_line" : 96,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "test/functional/feature_nulldummy.py",
      "position" : 76,
      "pull_request_review_id" : 1007003137,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25364",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897633994/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-15T07:33:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897633994",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25364#discussion_r897858524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25364"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897858524"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is indeed much cleaner. Made the necessary changes.",
      "commit_id" : "9a783a9fd76ee5350d64ed1ed5b658c530913653",
      "created_at" : "2022-06-15T11:23:22Z",
      "diff_hunk" : "@@ -55,58 +60,87 @@ def set_test_params(self):\n             '-par=1',  # Use only one script thread to get the exact reject reason for testing\n         ]]\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def create_transaction(self, *, txid, inAmount=None, spk=None, rs=None, ws=None, addr, amount, privkey):\n+        input = {\"txid\": txid, \"vout\": 0}\n+        if inAmount is not None:\n+            input[\"amount\"] = inAmount\n+        if spk is not None:\n+            input[\"scriptPubKey\"] = spk\n+        if rs is not None:\n+            input[\"redeemScript\"] = rs\n+        if ws is not None:\n+            input[\"witnessScript\"] = ws\n+        output = {addr: amount}\n+        rawtx = self.nodes[0].createrawtransaction([input], output)\n+        signedtx = self.nodes[0].signrawtransactionwithkey(rawtx, [privkey], [input])\n+        return tx_from_hex(signedtx[\"hex\"])\n \n     def run_test(self):\n-        self.nodes[0].createwallet(wallet_name='wmulti', disable_private_keys=True)\n-        wmulti = self.nodes[0].get_wallet_rpc('wmulti')\n-        w0 = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n-        self.address = w0.getnewaddress()\n-        self.pubkey = w0.getaddressinfo(self.address)['pubkey']\n-        self.ms_address = wmulti.addmultisigaddress(1, [self.pubkey])['address']\n-        self.wit_address = w0.getnewaddress(address_type='p2sh-segwit')\n-        self.wit_ms_address = wmulti.addmultisigaddress(1, [self.pubkey], '', 'p2sh-segwit')['address']\n-        if not self.options.descriptors:\n-            # Legacy wallets need to import these so that they are watched by the wallet. This is unnecessary (and does not need to be tested) for descriptor wallets\n-            wmulti.importaddress(self.ms_address)\n-            wmulti.importaddress(self.wit_ms_address)\n+        self.address = getnewdestination()[2]\n+        eckey = ECKey()\n+        eckey.generate()\n+        self.privkey = bytes_to_wif(eckey.get_bytes())\n+        self.pubkey = eckey.get_pubkey().get_bytes().hex()\n+        cms = self.nodes[0].createmultisig(1, [self.pubkey])\n+        wms = self.nodes[0].createmultisig(1, [self.pubkey], 'p2sh-segwit')\n+        self.ms_address = cms[\"address\"]\n+        self.wit_address = getnewdestination(address_type='p2sh-segwit')[2]\n+        self.wit_ms_address = wms['address']\n \n         self.coinbase_blocks = self.generate(self.nodes[0], 2)  # block height = 2\n         coinbase_txid = []\n+        block_hash = []\n         for i in self.coinbase_blocks:\n-            coinbase_txid.append(self.nodes[0].getblock(i)['tx'][0])\n+            block = self.nodes[0].getblock(i)\n+            coinbase_txid.append(block['tx'][0])\n+            block_hash.append(block[\"hash\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25364#discussion_r897858524",
      "id" : 897858524,
      "in_reply_to_id" : 896815956,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5841hDvc",
      "original_commit_id" : "a8fe321baebd404410ae5e0fca7a5c39b0da41fc",
      "original_line" : 96,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "test/functional/feature_nulldummy.py",
      "position" : null,
      "pull_request_review_id" : 1007329180,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25364",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897858524/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-15T11:23:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897858524",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/21211904?v=4",
         "events_url" : "https://api.github.com/users/ayush933/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ayush933/followers",
         "following_url" : "https://api.github.com/users/ayush933/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ayush933/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ayush933",
         "id" : 21211904,
         "login" : "ayush933",
         "node_id" : "MDQ6VXNlcjIxMjExOTA0",
         "organizations_url" : "https://api.github.com/users/ayush933/orgs",
         "received_events_url" : "https://api.github.com/users/ayush933/received_events",
         "repos_url" : "https://api.github.com/users/ayush933/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ayush933/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ayush933/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ayush933"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2022-06-21T00:33:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25364#issuecomment-1160989845",
      "id" : 1160989845,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25364",
      "node_id" : "IC_kwDOABII585FM0yV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1160989845/reactions"
      },
      "updated_at" : "2022-06-21T08:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1160989845",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks a lot @MarcoFalke and @kouloumos for the thorough reviews.\r\nAddressed the reviews and made the necessary changes.",
      "created_at" : "2022-06-24T12:46:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25364#issuecomment-1165539875",
      "id" : 1165539875,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25364",
      "node_id" : "IC_kwDOABII585FeLoj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165539875/reactions"
      },
      "updated_at" : "2022-06-24T12:46:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1165539875",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/21211904?v=4",
         "events_url" : "https://api.github.com/users/ayush933/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ayush933/followers",
         "following_url" : "https://api.github.com/users/ayush933/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ayush933/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ayush933",
         "id" : 21211904,
         "login" : "ayush933",
         "node_id" : "MDQ6VXNlcjIxMjExOTA0",
         "organizations_url" : "https://api.github.com/users/ayush933/orgs",
         "received_events_url" : "https://api.github.com/users/ayush933/received_events",
         "repos_url" : "https://api.github.com/users/ayush933/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ayush933/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ayush933/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ayush933"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "re-ACK 50ba6697f33b44e475ed65137f7ff0444f6c4ca9, all comments have been addressed.",
      "created_at" : "2022-06-28T16:13:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25364#issuecomment-1168925153",
      "id" : 1168925153,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25364",
      "node_id" : "IC_kwDOABII585FrGHh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1168925153/reactions"
      },
      "updated_at" : "2022-06-28T16:13:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1168925153",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   }
]
