[
   {
      "author_association" : "MEMBER",
      "body" : "cc @glozow @instagibbs @naumenkogs since you Concept ACK'd #23074. This is implementing https://github.com/bitcoin/bitcoin/pull/23074#issuecomment-1152399594.",
      "created_at" : "2022-06-15T15:08:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#issuecomment-1156595076",
      "id" : 1156595076,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25380",
      "node_id" : "IC_kwDOABII585E8D2E",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1156595076/reactions"
      },
      "updated_at" : "2022-06-15T15:08:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1156595076",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "seems reasonable to not take signals that are obviously bogus, will give more thinking",
      "created_at" : "2022-06-15T15:12:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#issuecomment-1156599898",
      "id" : 1156599898,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25380",
      "node_id" : "IC_kwDOABII585E8FBa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1156599898/reactions"
      },
      "updated_at" : "2022-06-15T15:12:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1156599898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r901020949"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901020949"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Prefer just passing `None` as `utxo` explicitly, as appropriate.",
      "commit_id" : "e928f4ce736bb2457533c235b9a1c2d5e7eb1dd6",
      "created_at" : "2022-06-18T22:07:56Z",
      "diff_hunk" : "@@ -115,13 +115,13 @@ def check_estimates(node, fees_seen):\n     check_smart_estimates(node, fees_seen)\n \n \n-def send_tx(wallet, node, utxo, feerate):\n+def send_tx(wallet, node, feerate, utxo=None):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r901020949",
      "id" : 901020949,
      "line" : 118,
      "node_id" : "PRRC_kwDOABII5841tH0V",
      "original_commit_id" : "e928f4ce736bb2457533c235b9a1c2d5e7eb1dd6",
      "original_line" : 118,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_fee_estimation.py",
      "position" : 5,
      "pull_request_review_id" : 1011454943,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901020949/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-18T22:08:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/901020949",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [naumenkogs](https://github.com/bitcoin/bitcoin/pull/25380#issuecomment-1226964404), [Xekyo](https://github.com/bitcoin/bitcoin/pull/25380#issuecomment-1435138448) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26656](https://github.com/bitcoin/bitcoin/pull/26656) (tests: Improve runtime of some tests when `--enable-debug` by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-06-21T00:27:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#issuecomment-1160986236",
      "id" : 1160986236,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25380",
      "node_id" : "IC_kwDOABII585FMz58",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1160986236/reactions"
      },
      "updated_at" : "2023-02-17T19:30:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1160986236",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r903587999"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903587999"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hm, I don't think `ancestor_score > individual_feerate` is really an indication that it was CPFP'd. We'd want to see if it had descendants in the block. It could just mean that this transaction had high-feerate ancestors.\r\n\r\nSuggested alternative: I think `ancestor_score < individual_feerate` would be a good indication that this tx was the sponsor of a CPFP in the block. Maybe we use that condition, and drop all of the transaction's ancestors from the fee estimator?  Or, to reduce over-pruning, we drop the ancestors whose feerates are lower than this transaction's?",
      "commit_id" : "e928f4ce736bb2457533c235b9a1c2d5e7eb1dd6",
      "created_at" : "2022-06-22T10:51:37Z",
      "diff_hunk" : "@@ -604,6 +604,16 @@ bool CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxM\n         return false;\n     }\n \n+    // Do not consider this transaction's feerate if it might have been mined due to one of\n+    // its children (CPFP).\n+    // Note this check is only best-effort, as the child might not be part of the block. Or\n+    // another child might be part of the block that we didn't have in our mempool.\n+    CFeeRate feerate_entry{entry->GetFee(), (uint32_t)entry->GetTxSize()};\n+    for (const CTxMemPoolEntry& child : entry->GetMemPoolChildren()) {\n+        CFeeRate ancestor_score{child.GetModFeesWithAncestors(), (uint32_t)child.GetSizeWithAncestors()};\n+        if (ancestor_score > feerate_entry) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r903587999",
      "id" : 903587999,
      "line" : 614,
      "node_id" : "PRRC_kwDOABII584126if",
      "original_commit_id" : "e928f4ce736bb2457533c235b9a1c2d5e7eb1dd6",
      "original_line" : 614,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/policy/fees.cpp",
      "position" : 11,
      "pull_request_review_id" : 1014954992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903587999/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-22T10:56:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903587999",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Do we have a preference for underestimation vs overestimation of feerates?\r\n\r\nI think it's always better to be slightly overestimate than to slightly under-estimate, as the latter can result in frustration for the regular onchain user or degraded service quality for professionals (for instance stuck transactions can create a \"shortage\" of confirmed UTxOs or too long mempool chains). As far as i can tell from discussions and the algorithm it's always been the opinion to err on the conservative side.\r\n\r\n> It's probably bad to include both sponsors and sponsees in CPFP situations?\r\n\r\nSponsees aren't included since transactions with mempool dependencies don't get considered for fee estimation. And i don't think we can do that until we find a proper way of considering packages in the fee estimator.",
      "created_at" : "2022-06-22T11:12:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#issuecomment-1162966539",
      "id" : 1162966539,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25380",
      "node_id" : "IC_kwDOABII585FUXYL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162966539/reactions"
      },
      "updated_at" : "2022-06-22T11:12:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1162966539",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r903657968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903657968"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(TL;DR your suggestion is best but i'm leaving the response to the first section for context)\r\n\r\nYeah it's a best effort. I could make sure that the descendant was also part of the block. Is it worth it though? If an ancestor-less transaction with mempool child that pay a higher feerate than itself got mined, the child probably got included as well (not necessarily, but i assumed very probably).\r\nDo you think that assumption isn't reasonable? My doubt is more with more convoluted packages. For instance:\r\n```\r\nA ------ D\r\n      __/ /\r\nB /      /\r\n      _ /\r\nC /\r\n```\r\nWith `A` 1sat/vb, `B` 10sat/vb, `C` 10sat/vb and `D` 1sat/vb. It would be a false positive for `A`. To prevent this we could simply condition the check on the descendants feerate of `A`:\r\n```patch\r\ndiff --git a/src/policy/fees.cpp b/src/policy/fees.cpp\r\nindex 029dd108c3..5d5dfb2efe 100644\r\n--- a/src/policy/fees.cpp\r\n+++ b/src/policy/fees.cpp\r\n@@ -609,9 +609,12 @@ bool CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxM\r\n     // Note this check is only best-effort, as the child might not be part of the block. Or\r\n     // another child might be part of the block that we didn't have in our mempool.\r\n     CFeeRate feerate_entry{entry->GetFee(), (uint32_t)entry->GetTxSize()};\r\n-    for (const CTxMemPoolEntry& child : entry->GetMemPoolChildren()) {\r\n-        CFeeRate ancestor_score{child.GetModFeesWithAncestors(), (uint32_t)child.GetSizeWithAncestors()};\r\n-        if (ancestor_score > feerate_entry) return false;\r\n+    CFeeRate feerate_desc{entry->GetModFeesWithDescendants(), (uint32_t)entry->GetSizeWithDescendants()};\r\n+    if (feerate_desc > feerate_entry) {\r\n+        for (const CTxMemPoolEntry& child : entry->GetMemPoolChildren()) {\r\n+            CFeeRate ancestor_score{child.GetModFeesWithAncestors(), (uint32_t)child.GetSizeWithAncestors()};\r\n+            if (ancestor_score > feerate_entry) return false;\r\n+        }\r\n     }\r\n \r\n     // How many blocks did it take for miners to include this transaction?\r\n```\r\n\r\n----\r\n\r\nRegarding your suggestion. do you mean we should iterate over all the mempool entries that were part of the block to detect CPFPs beforehand? I agree it's much better. It makes sure that the child was part of the same block. And your suggestion to only drop the ancestors whose feerates are lower than this transaction's covers the case i detailed above. Nice! Is that roughly what you were thinking about:\r\n```patch\r\ndiff --git a/src/policy/fees.cpp b/src/policy/fees.cpp\r\nindex 029dd108c3..8c0e71ea18 100644\r\n--- a/src/policy/fees.cpp\r\n+++ b/src/policy/fees.cpp\r\n@@ -604,16 +604,6 @@ bool CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxM\r\n         return false;\r\n     }\r\n \r\n-    // Do not consider this transaction's feerate if it might have been mined due to one of\r\n-    // its children (CPFP).\r\n-    // Note this check is only best-effort, as the child might not be part of the block. Or\r\n-    // another child might be part of the block that we didn't have in our mempool.\r\n-    CFeeRate feerate_entry{entry->GetFee(), (uint32_t)entry->GetTxSize()};\r\n-    for (const CTxMemPoolEntry& child : entry->GetMemPoolChildren()) {\r\n-        CFeeRate ancestor_score{child.GetModFeesWithAncestors(), (uint32_t)child.GetSizeWithAncestors()};\r\n-        if (ancestor_score > feerate_entry) return false;\r\n-    }\r\n-\r\n     // How many blocks did it take for miners to include this transaction?\r\n     // blocksToConfirm is 1-based, so a transaction included in the earliest\r\n     // possible block has confirmation count of 1\r\n@@ -625,6 +615,7 @@ bool CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxM\r\n         return false;\r\n     }\r\n \r\n+    CFeeRate feerate_entry{entry->GetFee(), (uint32_t)entry->GetTxSize()};\r\n     feeStats->Record(blocksToConfirm, (double)feerate_entry.GetFeePerK());\r\n     shortStats->Record(blocksToConfirm, (double)feerate_entry.GetFeePerK());\r\n     longStats->Record(blocksToConfirm, (double)feerate_entry.GetFeePerK());\r\n@@ -659,6 +650,18 @@ void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\r\n     shortStats->UpdateMovingAverages();\r\n     longStats->UpdateMovingAverages();\r\n \r\n+    for (const auto& entry : entries) {\r\n+        CFeeRate individual_feerate{entry->GetFee(), (uint32_t)entry->GetTxSize()};\r\n+        CFeeRate ancestor_score{entry->GetModFeesWithAncestors(), (uint32_t)entry->GetSizeWithAncestors()};\r\n+\r\n+        if (individual_feerate > ancestor_score) {\r\n+            for (const CTxMemPoolEntry& parent : entry->GetMemPoolParents()) {\r\n+                CFeeRate parent_feerate{parent.GetFee(), (uint32_t)parent.GetTxSize()};\r\n+                if (parent_feerate < individual_feerate) _removeTx(parent.GetTx().GetHash(), true);\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n     unsigned int countedTxs = 0;\r\n     // Update averages with data points from current block\r\n     for (const auto& entry : entries) {\r\n```",
      "commit_id" : "e928f4ce736bb2457533c235b9a1c2d5e7eb1dd6",
      "created_at" : "2022-06-22T12:04:24Z",
      "diff_hunk" : "@@ -604,6 +604,16 @@ bool CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxM\n         return false;\n     }\n \n+    // Do not consider this transaction's feerate if it might have been mined due to one of\n+    // its children (CPFP).\n+    // Note this check is only best-effort, as the child might not be part of the block. Or\n+    // another child might be part of the block that we didn't have in our mempool.\n+    CFeeRate feerate_entry{entry->GetFee(), (uint32_t)entry->GetTxSize()};\n+    for (const CTxMemPoolEntry& child : entry->GetMemPoolChildren()) {\n+        CFeeRate ancestor_score{child.GetModFeesWithAncestors(), (uint32_t)child.GetSizeWithAncestors()};\n+        if (ancestor_score > feerate_entry) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r903657968",
      "id" : 903657968,
      "in_reply_to_id" : 903587999,
      "line" : 614,
      "node_id" : "PRRC_kwDOABII58413Lnw",
      "original_commit_id" : "e928f4ce736bb2457533c235b9a1c2d5e7eb1dd6",
      "original_line" : 614,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/policy/fees.cpp",
      "position" : 11,
      "pull_request_review_id" : 1015053888,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903657968/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-22T12:04:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/903657968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r904047470"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/904047470"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done. What do you think of this PR conceptually?",
      "commit_id" : "200a49f7e7197cfa5ba8b8123d3597e84eab0aa1",
      "created_at" : "2022-06-22T17:20:13Z",
      "diff_hunk" : "@@ -115,13 +115,13 @@ def check_estimates(node, fees_seen):\n     check_smart_estimates(node, fees_seen)\n \n \n-def send_tx(wallet, node, utxo, feerate):\n+def send_tx(wallet, node, feerate, utxo=None):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r904047470",
      "id" : 904047470,
      "in_reply_to_id" : 901020949,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58414qtu",
      "original_commit_id" : "e928f4ce736bb2457533c235b9a1c2d5e7eb1dd6",
      "original_line" : 118,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_fee_estimation.py",
      "position" : null,
      "pull_request_review_id" : 1015615493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/904047470/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-22T17:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/904047470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Force-pushed to address @luke-jr's nit and include @glozow's great suggestion to identify CPFP from child, not parents.",
      "created_at" : "2022-06-22T17:21:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#issuecomment-1163406979",
      "id" : 1163406979,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25380",
      "node_id" : "IC_kwDOABII585FWC6D",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163406979/reactions"
      },
      "updated_at" : "2022-06-22T17:21:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1163406979",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r905066732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905066732"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, it's more sensible to just look at the sponsor's ancestors since you're guaranteed that they were all in the block too.\r\n\r\nI like the second approach in your above comment, i.e. 5485acfe88051234a09862819ddc2953f9d42058. I was going to suggest possibly removing *all* ancestors, and not just direct parents, but I see that we can't really query all ancestors since we only have the single entry.",
      "commit_id" : "200a49f7e7197cfa5ba8b8123d3597e84eab0aa1",
      "created_at" : "2022-06-23T14:06:16Z",
      "diff_hunk" : "@@ -604,6 +604,16 @@ bool CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxM\n         return false;\n     }\n \n+    // Do not consider this transaction's feerate if it might have been mined due to one of\n+    // its children (CPFP).\n+    // Note this check is only best-effort, as the child might not be part of the block. Or\n+    // another child might be part of the block that we didn't have in our mempool.\n+    CFeeRate feerate_entry{entry->GetFee(), (uint32_t)entry->GetTxSize()};\n+    for (const CTxMemPoolEntry& child : entry->GetMemPoolChildren()) {\n+        CFeeRate ancestor_score{child.GetModFeesWithAncestors(), (uint32_t)child.GetSizeWithAncestors()};\n+        if (ancestor_score > feerate_entry) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r905066732",
      "id" : 905066732,
      "in_reply_to_id" : 903587999,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58418jjs",
      "original_commit_id" : "e928f4ce736bb2457533c235b9a1c2d5e7eb1dd6",
      "original_line" : 614,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/policy/fees.cpp",
      "position" : null,
      "pull_request_review_id" : 1017074251,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905066732/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-23T14:06:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/905066732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> transactions with mempool dependencies don't get considered for fee estimation.\r\n\r\nAh, my bad! Seems like we're definitely underestimating in CPFP situations right now, then, since we include the parents but not the child.\r\n\r\n> I think it's always better to be slightly overestimate than to slightly under-estimate\r\n\r\nI agree, it seems safer to sometimes pay a little extra than to miss your confirmation target.",
      "created_at" : "2022-06-23T14:12:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#issuecomment-1164459119",
      "id" : 1164459119,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25380",
      "node_id" : "IC_kwDOABII585FaDxv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164459119/reactions"
      },
      "updated_at" : "2022-06-23T14:12:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164459119",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r906847481"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906847481"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Feels like a hack that would be better off identifying CPFP from the block contents itself. Possibly even using it for the estimates, if practical. But at least this should be better than nothing.",
      "commit_id" : "200a49f7e7197cfa5ba8b8123d3597e84eab0aa1",
      "created_at" : "2022-06-26T17:10:03Z",
      "diff_hunk" : "@@ -115,13 +115,13 @@ def check_estimates(node, fees_seen):\n     check_smart_estimates(node, fees_seen)\n \n \n-def send_tx(wallet, node, utxo, feerate):\n+def send_tx(wallet, node, feerate, utxo=None):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r906847481",
      "id" : 906847481,
      "in_reply_to_id" : 901020949,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5842DWT5",
      "original_commit_id" : "e928f4ce736bb2457533c235b9a1c2d5e7eb1dd6",
      "original_line" : 118,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/feature_fee_estimation.py",
      "position" : null,
      "pull_request_review_id" : 1019458653,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906847481/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-26T17:10:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/906847481",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r920292164"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920292164"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not sure why we have this criterium `individual_feerate > ancestor_score`.\r\nIn a CPFP situation with a child C, a low-fee parent P1 which it pays for, and another high-fee parent P2 of C, it could prevent us from removing P1 from the fee estimation, because C's ancestor score (which is influenced by P2) might be larger than its individual feerate.\r\n\r\nI understand that the check is a heuristic and can't cover everything, but would there be any downside if we just dropped this check and only applied the second criterion, `parent_feerate < individual_feerate`?",
      "commit_id" : "200a49f7e7197cfa5ba8b8123d3597e84eab0aa1",
      "created_at" : "2022-07-13T16:39:42Z",
      "diff_hunk" : "@@ -652,6 +652,23 @@ void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n     shortStats->UpdateMovingAverages();\n     longStats->UpdateMovingAverages();\n \n+    // Do not consider transactions that were CPFP'd.\n+    // For each mempool transaction that was included in a block, if its individual feerate is higher\n+    // than its ancestor score it incentivized the inclusion of some of its parents in the block.\n+    // Remove all such parents whose feerate is lower than the child's of the tracking before updating\n+    // the data points.\n+    for (const auto& entry : entries) {\n+        CFeeRate individual_feerate{entry->GetFee(), (uint32_t)entry->GetTxSize()};\n+        CFeeRate ancestor_score{entry->GetModFeesWithAncestors(), (uint32_t)entry->GetSizeWithAncestors()};\n+\n+        if (individual_feerate > ancestor_score) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r920292164",
      "id" : 920292164,
      "line" : 664,
      "node_id" : "PRRC_kwDOABII58422otE",
      "original_commit_id" : "5485acfe88051234a09862819ddc2953f9d42058",
      "original_line" : 664,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/policy/fees.cpp",
      "position" : 13,
      "pull_request_review_id" : 1037668428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920292164/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-13T18:11:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920292164",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r920958301"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920958301"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Only having `parent_feerate < individual_feerate` does not account for the size of the dependencies. For instance, a transaction `C` (2000 sat, 100 vb) spending a transaction `B` (200 sat, 1000 vb) which in turn spends a transaction `A` (1000sat, 100 vb):\r\n```\r\nA --- B --- C\r\n```\r\n`C` clearly does not CPFP `A`, while it has a higher feerate. We want to check `parent_feerate < ancestor_score`. We do it indirectly since `individual_feerate > ancestor_score`.\r\n\r\n`individual_feerate > ancestor_score` is to make sure the child is paying, to prevent a pay-for-sibling scenario:\r\n```\r\nA\r\n  \\\r\n     C\r\n  /\r\nB\r\n```\r\n`B` is 2sat/vb, `A` is 1sat/vb, `C` is 1sat/vb. The ancestor score of `C` is larger than the feerate of `A`, but it's not a CPFP.\r\n\r\nSo this may be too conservative in some scenario, such as the one you describe. But i can't think of a reasonable way to take it into account. Also i think we better be overly conservative if that gives us confidence we won't let some false positives through.",
      "commit_id" : "200a49f7e7197cfa5ba8b8123d3597e84eab0aa1",
      "created_at" : "2022-07-14T09:36:35Z",
      "diff_hunk" : "@@ -652,6 +652,23 @@ void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n     shortStats->UpdateMovingAverages();\n     longStats->UpdateMovingAverages();\n \n+    // Do not consider transactions that were CPFP'd.\n+    // For each mempool transaction that was included in a block, if its individual feerate is higher\n+    // than its ancestor score it incentivized the inclusion of some of its parents in the block.\n+    // Remove all such parents whose feerate is lower than the child's of the tracking before updating\n+    // the data points.\n+    for (const auto& entry : entries) {\n+        CFeeRate individual_feerate{entry->GetFee(), (uint32_t)entry->GetTxSize()};\n+        CFeeRate ancestor_score{entry->GetModFeesWithAncestors(), (uint32_t)entry->GetSizeWithAncestors()};\n+\n+        if (individual_feerate > ancestor_score) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r920958301",
      "id" : 920958301,
      "in_reply_to_id" : 920292164,
      "line" : 664,
      "node_id" : "PRRC_kwDOABII58425LVd",
      "original_commit_id" : "5485acfe88051234a09862819ddc2953f9d42058",
      "original_line" : 664,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/policy/fees.cpp",
      "position" : 13,
      "pull_request_review_id" : 1038584706,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920958301/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-14T10:23:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920958301",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r921107765"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/921107765"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't understand how `individual_feerate > ancestor_score` helps in your first example: \r\nBoth B and C have been excluded from the fee estimation already in validation, because they had mempool ancestors. The algorithm added in this PR can only ever remove (direct) parents from the fee estimation, it doesn't loop through ancestors of a higher level - so C and its ancestor score seem irrelevant, because the processing of C could only ever remove B (which is already removed) but can't remove  A because it's not a parent of C?\r\nAnd while processing B (which could remove A in theory) the second criterion `parent_feerate < individual_feerate` would work out, so we don't remove A there either.",
      "commit_id" : "200a49f7e7197cfa5ba8b8123d3597e84eab0aa1",
      "created_at" : "2022-07-14T12:39:05Z",
      "diff_hunk" : "@@ -652,6 +652,23 @@ void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n     shortStats->UpdateMovingAverages();\n     longStats->UpdateMovingAverages();\n \n+    // Do not consider transactions that were CPFP'd.\n+    // For each mempool transaction that was included in a block, if its individual feerate is higher\n+    // than its ancestor score it incentivized the inclusion of some of its parents in the block.\n+    // Remove all such parents whose feerate is lower than the child's of the tracking before updating\n+    // the data points.\n+    for (const auto& entry : entries) {\n+        CFeeRate individual_feerate{entry->GetFee(), (uint32_t)entry->GetTxSize()};\n+        CFeeRate ancestor_score{entry->GetModFeesWithAncestors(), (uint32_t)entry->GetSizeWithAncestors()};\n+\n+        if (individual_feerate > ancestor_score) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r921107765",
      "id" : 921107765,
      "in_reply_to_id" : 920292164,
      "line" : 664,
      "node_id" : "PRRC_kwDOABII58425v01",
      "original_commit_id" : "5485acfe88051234a09862819ddc2953f9d42058",
      "original_line" : 664,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/policy/fees.cpp",
      "position" : 13,
      "pull_request_review_id" : 1038797796,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/921107765/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-14T12:39:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/921107765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r921153998"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/921153998"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You are right, i wrote this example assuming we were going through all ancestors of a transaction. :facepalm:\r\n\r\nNonetheless the first example works also if `A` and `B` are siblings.\r\n",
      "commit_id" : "200a49f7e7197cfa5ba8b8123d3597e84eab0aa1",
      "created_at" : "2022-07-14T13:27:02Z",
      "diff_hunk" : "@@ -652,6 +652,23 @@ void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n     shortStats->UpdateMovingAverages();\n     longStats->UpdateMovingAverages();\n \n+    // Do not consider transactions that were CPFP'd.\n+    // For each mempool transaction that was included in a block, if its individual feerate is higher\n+    // than its ancestor score it incentivized the inclusion of some of its parents in the block.\n+    // Remove all such parents whose feerate is lower than the child's of the tracking before updating\n+    // the data points.\n+    for (const auto& entry : entries) {\n+        CFeeRate individual_feerate{entry->GetFee(), (uint32_t)entry->GetTxSize()};\n+        CFeeRate ancestor_score{entry->GetModFeesWithAncestors(), (uint32_t)entry->GetSizeWithAncestors()};\n+\n+        if (individual_feerate > ancestor_score) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r921153998",
      "id" : 921153998,
      "in_reply_to_id" : 920292164,
      "line" : 664,
      "node_id" : "PRRC_kwDOABII584257HO",
      "original_commit_id" : "5485acfe88051234a09862819ddc2953f9d42058",
      "original_line" : 664,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/policy/fees.cpp",
      "position" : 13,
      "pull_request_review_id" : 1038867489,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/921153998/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-14T13:27:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/921153998",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r926188854"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926188854"
         }
      },
      "author_association" : "MEMBER",
      "body" : "While I agree than a child with an individual feerate than its ancestor score incentivized the inclusion of some of its parents in the block, I don't think it means the parent wouldn't have make it alone on its own feerate in the block. I wonder if a most sophisticated heuristic wouldn't be to qualify the sponsoring if the parent feerate is lower than your top mempool feerate group at block reception. Of course, considering block reception would make things free of block propagation allowing your mempool content to fluctuate though assuming perfect information propagation might be okay. \r\n\r\nI believe such situations could arise when there is no entity with the full-view of the package, in the sense that the CPFP can be attached by a different transaction issuer than the parent one. Therefore this second party might have different views of the mempool or more conservative fee-bumping strategy.\r\n\r\nHowever, I think that type of situations is for now scarce enough than the current proposed heuristic `individual_feerate` > `ancestor_score` is good enough ?\r\n\r\nIn any case, I think it would be good to document the heuristic rational and the bounds here, in case of future changes in the ecosystem of Bitcoin applications invalidating this heuristic. ",
      "commit_id" : "200a49f7e7197cfa5ba8b8123d3597e84eab0aa1",
      "created_at" : "2022-07-21T02:05:37Z",
      "diff_hunk" : "@@ -652,6 +652,23 @@ void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n     shortStats->UpdateMovingAverages();\n     longStats->UpdateMovingAverages();\n \n+    // Do not consider transactions that were CPFP'd.\n+    // For each mempool transaction that was included in a block, if its individual feerate is higher\n+    // than its ancestor score it incentivized the inclusion of some of its parents in the block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r926188854",
      "id" : 926188854,
      "line" : 657,
      "node_id" : "PRRC_kwDOABII5843NIU2",
      "original_commit_id" : "200a49f7e7197cfa5ba8b8123d3597e84eab0aa1",
      "original_line" : 657,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/policy/fees.cpp",
      "position" : 6,
      "pull_request_review_id" : 1045851950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926188854/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-21T02:08:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/926188854",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r929854844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/929854844"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think it's reasonable to assume the content of the mempool of the mining pool node was the same at the time it created a block template (which can be relatively long before a grinder found a valid pow) than our mempool at the time we received the block (which can be relatively long after they found it).\r\nEven then, i don't think it'd be worth creating a block template just for a slightly more accurate filtering. Instead, i think any more complexity than a simple conservative heuristic should go into making the estimator packages-aware.\r\n\r\nRegarding the documentation of the heuristic, what are you suggesting? You are commenting on a code comment documenting this heuristic.",
      "commit_id" : "200a49f7e7197cfa5ba8b8123d3597e84eab0aa1",
      "created_at" : "2022-07-26T11:34:54Z",
      "diff_hunk" : "@@ -652,6 +652,23 @@ void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n     shortStats->UpdateMovingAverages();\n     longStats->UpdateMovingAverages();\n \n+    // Do not consider transactions that were CPFP'd.\n+    // For each mempool transaction that was included in a block, if its individual feerate is higher\n+    // than its ancestor score it incentivized the inclusion of some of its parents in the block.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#discussion_r929854844",
      "id" : 929854844,
      "in_reply_to_id" : 926188854,
      "line" : 657,
      "node_id" : "PRRC_kwDOABII5843bHV8",
      "original_commit_id" : "200a49f7e7197cfa5ba8b8123d3597e84eab0aa1",
      "original_line" : 657,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/policy/fees.cpp",
      "position" : 6,
      "pull_request_review_id" : 1050826175,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25380",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/929854844/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-07-26T11:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/929854844",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\nThe inaccuracy seems real. Since we're targeting a simple heuristic, there will be downsides. The risk is overestimating and paying extra I guess.\r\nIf we really want to check, we can measure how would fees differ by applying this change to historic blocks (?)\r\n\r\nOtherwise, it would help if @darosior summarized the alternatives suggested in couple sentences (or helping in navigating the design scope e.g. \"what could be possibly done\").\r\n\r\nAs for the current code, I think it's an improvement, but I think we indeed need more eyes/opinions.",
      "created_at" : "2022-08-25T08:44:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#issuecomment-1226964404",
      "id" : 1226964404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25380",
      "node_id" : "IC_kwDOABII585JIf20",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1226964404/reactions"
      },
      "updated_at" : "2022-08-25T08:44:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1226964404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2022-12-19T09:33:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#issuecomment-1357357823",
      "id" : 1357357823,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25380",
      "node_id" : "IC_kwDOABII585Q56L_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1357357823/reactions"
      },
      "updated_at" : "2022-12-19T09:33:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1357357823",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nDid some light review, looks reasonable, would review again when rebased",
      "created_at" : "2023-02-17T19:30:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25380#issuecomment-1435138448",
      "id" : 1435138448,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25380",
      "node_id" : "IC_kwDOABII585VinmQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1435138448/reactions"
      },
      "updated_at" : "2023-02-17T19:31:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1435138448",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   }
]
