{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "As suggested by sipa in the open issue #4576 (2014) -- \"[discussion] Dealing with assertions and optional consistency checking\" -- as an alternative to `assert(â¦)` in situations where `assert(â¦)` is not appropriate:\r\n\r\n> â¦\r\n> What I want is more of these checks, more as a way for the programmer to say \"this is what I assume here\", more than \"if this doesn't hold here, we're in BIG trouble\". It makes the code clearer, and simultaneously verifies that such assumptions hold. But only in cases where we're not at risk of hurting the network by dying.\r\n> â¦\r\n\r\n`ASSUME(expression)` works like this:\r\n* If compiled with `-DABORT_ON_FAILED_ASSUME` (set by `--enable-debug` and/or `--enable-fuzz`): Evaluate expression and abort if `expression` is `false`.\r\n* If compiled without `-DABORT_ON_FAILED_ASSUME`: Evaluate `expression` and continue execution.\r\n\r\nExample:\r\n\r\n```\r\nint main(void) {\r\n    ASSUME(IsFoo());\r\n     ...\r\n}\r\n```\r\n\r\nIf `!IsFoo()` _and_ `-DABORT_ON_FAILED_ASSUME`, then:\r\n\r\n```\r\n    filename.cpp:123: main: ASSUME(IsFoo()) failed.\r\n    Aborted\r\n```\r\n\r\nOtherwise the execution continues.\r\n\r\nResolves #4576.",
   "closed_at" : "2020-03-10T08:12:01Z",
   "closed_by" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   },
   "comments" : 21,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16136/comments",
   "created_at" : "2019-06-02T20:38:21Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16136/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/16136",
   "id" : 451232506,
   "labels" : [
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16136/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0Mjg0MzY5NTky",
   "number" : 16136,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/16136.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/16136",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/16136.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/16136"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "Add an optional extra level of checking: ASSUME(...) - an opt-in side-effect safe assert(...)",
   "updated_at" : "2020-03-10T08:12:14Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/16136",
   "user" : {
      "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
      "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
      "followers_url" : "https://api.github.com/users/practicalswift/followers",
      "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/practicalswift",
      "id" : 7826565,
      "login" : "practicalswift",
      "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
      "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
      "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
      "repos_url" : "https://api.github.com/users/practicalswift/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/practicalswift"
   }
}
