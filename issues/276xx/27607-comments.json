[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27636](https://github.com/bitcoin/bitcoin/pull/27636) (kernel: Remove interface_ui, util/system from kernel library by TheCharlatan)\n* [#26966](https://github.com/bitcoin/bitcoin/pull/26966) (index: blockfilter initial sync speedup, parallelize process by furszy)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-05-09T14:55:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1540297299",
      "id" : 1540297299,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585bzxJT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1540297299/reactions"
      },
      "updated_at" : "2023-05-18T01:13:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1540297299",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191329811"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191329811"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"index: verify blocks data existence only once\" (86752e0cc5bc48f3d4ac1cd07835c37daf078d6a)\r\n\r\nNot important in practice, but since `m_best_block_index` is an atomic variable, it would look a little better to retrieve it atomically with:\r\n\r\n```\r\n    if (const CBlockIndex* pindex = m_best_block_index.load()) {\r\n```",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-11T15:09:55Z",
      "diff_hunk" : "@@ -390,7 +385,11 @@ IndexSummary BaseIndex::GetSummary() const\n     IndexSummary summary{};\n     summary.name = GetName();\n     summary.synced = m_synced;\n-    summary.best_block_height = m_best_block_index ? m_best_block_index.load()->nHeight : 0;\n+    if (m_best_block_index) {\n+        const CBlockIndex* pindex = m_best_block_index.load();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191329811",
      "id" : 1191329811,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585HAkAT",
      "original_commit_id" : "86752e0cc5bc48f3d4ac1cd07835c37daf078d6a",
      "original_line" : 389,
      "original_position" : 18,
      "original_start_line" : 388,
      "path" : "src/index/base.cpp",
      "position" : null,
      "pull_request_review_id" : 1422846165,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191329811/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-11T16:10:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191329811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191383733"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191383733"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"index: verify blocks data existence only once\" (86752e0cc5bc48f3d4ac1cd07835c37daf078d6a)\r\n\r\nIn the case where the bitcoind datadir is being newly created and the `LoadChainState` call above doesn't set a chain tip, `pindex` will be null here and this line will segfault. It should be possible to handle this with `if (!pindex) return`. This is causing CI errors (https://cirrus-ci.com/task/4539645451567104) currently",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-11T15:49:13Z",
      "diff_hunk" : "@@ -1562,32 +1562,55 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n                                      chainman, *node.mempool, ignores_incoming_txs);\n     RegisterValidationInterface(node.peerman.get());\n \n-    // ********************************************************* Step 8: start indexers\n+    // ********************************************************* Step 8: init indexers\n+\n+    // Cache the first block required by the indexes\n+    const CBlockIndex* indexes_start_block{nullptr};\n+    std::string older_index_name;\n+    const auto& update_indexes_start_block = [&](const BaseIndex* index){\n+        const IndexSummary& summary = index->GetSummary();\n+        if (summary.synced) return;\n+        const CBlockIndex* pindex = WITH_LOCK(::cs_main, return chainman.ActiveChain()[summary.best_block_height]);\n+        // indexes are always initialized to the active chain last common block\n+        assert(pindex->GetBlockHash() == summary.best_block_hash);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191383733",
      "id" : 1191383733,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585HAxK1",
      "original_commit_id" : "86752e0cc5bc48f3d4ac1cd07835c37daf078d6a",
      "original_line" : 1575,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : null,
      "pull_request_review_id" : 1422846165,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191383733/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-11T16:10:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191383733",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191390577"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191390577"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"indexes, refactor: Remove index prune_violation code\" (1341793b928ba81205b1cea11fdbd52fe6c3e869)\r\n\r\nNote for reviewers: code in this function is moved from the BaseIndex::Init function with minor changes. An easy way to review it is to look at the before and after versions in a side by side diff.",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-11T15:54:34Z",
      "diff_hunk" : "@@ -725,6 +725,39 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n+    bool hasDataFromTipDown(const CBlockIndex* start_block) override {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191390577",
      "id" : 1191390577,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585HAy1x",
      "original_commit_id" : "1341793b928ba81205b1cea11fdbd52fe6c3e869",
      "original_line" : 728,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/node/interfaces.cpp",
      "position" : null,
      "pull_request_review_id" : 1422846165,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191390577/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-11T16:10:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191390577",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191396717"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191396717"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"indexes, refactor: Remove index prune_violation code\" (1341793b928ba81205b1cea11fdbd52fe6c3e869)\r\n\r\nIt would probably make more sense to make this method into a standalone function `bool ChainDataFromTipDown(ChainstateManager& chainman, const CBlockIndex& start_block)` function in someplace like `src/node/chainstate.cpp` than to add it to interfaces::Chain if it won't be called by chain clients like wallets or indexes.",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-11T15:59:32Z",
      "diff_hunk" : "@@ -725,6 +725,39 @@ class ChainImpl : public Chain\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);\n     }\n+    bool hasDataFromTipDown(const CBlockIndex* start_block) override {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191396717",
      "id" : 1191396717,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585HA0Vt",
      "original_commit_id" : "1341793b928ba81205b1cea11fdbd52fe6c3e869",
      "original_line" : 728,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/node/interfaces.cpp",
      "position" : null,
      "pull_request_review_id" : 1422846165,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191396717/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-11T16:10:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191396717",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the deep review @ryanofsky!\r\n\r\n> Reviewed [86752e0](https://github.com/bitcoin/bitcoin/commit/86752e0cc5bc48f3d4ac1cd07835c37daf078d6a) and it mostly looks good, but does have a null pointer deference currently (see comments and suggested fix). I like this PR because it will simplify #24230 and could potentially improve performance. I'm not actually how sure how much it actually would improve performance in practice though, so I'm curious if that's was the original motivation here or if this is related to one of your other changes.\r\n\r\nYeah, the motivation came from a mix of thoughts actually.\r\n\r\nI was reviewing #24230 and wasn't completely sold by the `hasDataFromTipDown()` call inside the `attachChain` function. It seems odd to call to a chain data verification function in an event registering method.\r\nThen went deeper over the function, realized about the work duplication, and took that argument to simplify #24230 a bit.\r\n\r\nWe could also move the entire `hasDataFromTipDown` from the interface to somewhere else in this way. So there is no `CBlockIndex` dependency in the interface neither here nor in the #24230 intermediate commits.\r\n\r\nPlus, It plays well with #25193.\r\n\r\nAnd.. I'm also thinking that after #24230 and the parallel sync work (#26966), we could have one initial sync thread with a workers pool for all the indexers instead of the current per indexer sync thread.\r\nWhich should speedup the sync process quite a lot. We are currently reading the entire chain block by block from disk on every index thread. So instead, we could read blocks just once, then dispatch events to the indexers. Making indexers purely listeners with no associated thread.\r\n\r\n>  I'm also curious about the todo:\r\n> \r\n> > Pending todo: Fix remaining test by using the block index map instead of the active chain. The active chain is not available at the point where the indexers are started.\r\n> \r\n> Unsure if this is just referring to the null pointer problem, or to something else\r\n\r\nYeah ok. That comment is inaccurate and I forgot to update it.\r\n\r\nI initially thought that the issue was due an initialization ordering, that we werenât having the active chain activated at that point (thought that was done only post load-blk thread completion).\r\nSo I implemented 4738a1d7d46a9dd1f12dfeb047b142ab33c0fa16 and 837acfdbaca430cc5e29b7cdbf61380c33ed1aa2 instead of the current version. Which is better than what we have here currently, but itâs not the solution for the null ptr deference.\r\n\r\nThe issue is that empty indexers donât set the best block to the genesis `CBlockIndex`, they just leave it null. So, the index summary returns a valid height=0 with an empty block hash.. which crashes on the block hash assertion.\r\n\r\nSo, the fix is easy. But.. I havenât done it because have found another possible index sync \"fatal error\" in master and wanted to fix it prior continue moving forward here.\r\n\r\nEssentially, we are not checking whether the node has the post fork point blocks in disk prior starting the index:\r\n\r\nThe pruning violation checks whether we have blocks from the fork point up to the active chain tip. But it does not check if the node has blocks from the fork point up to the fork tip.. which are required by coinstatsindex to reverse its state during the reorg..\r\n\r\nE.g.\r\n\r\nActive chain\r\nA -> B -> C -> D -> E\r\n\r\nIndex chain\r\nA -> B -> C -> G -> F -> H\r\n\r\nThe âfailure errorâ will happen when G or F are not in disk or were pruned.\r\n\r\nSo, if this happens, it causes a âfatal errorâ during the coin stats index reorg process due the impossibility to read the block from disk.",
      "created_at" : "2023-05-11T20:40:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1544648748",
      "id" : 1544648748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585cEXgs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544648748/reactions"
      },
      "updated_at" : "2023-05-12T01:32:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544648748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1544648748\r\n\r\n> We could also move the entire `hasDataFromTipDown` from the interface to somewhere else in this way. So there is no `CBlockIndex` dependency in the interface neither here nor in the #24230 intermediate commits.\r\n\r\nYes I don't think it makes sense to expose that method as part of the `Chain` interface, and even if it did make sense, it wouldn't make sense to put the implementation in the `ChainImpl` class, because the class is mostly meant to hold glue code, not complicated functions. That's the reason for the suggestion to make it a standalone function `bool ChainDataFromTipDown(ChainstateManager& chainman, const CBlockIndex& start_block)` in https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1191396717\r\n\r\n> And.. I'm also thinking that after #24230 and the parallel sync work (#26966), we could have one initial sync thread with a workers pool for all the indexers instead of the current per indexer sync thread. Which should speedup the sync process quite a lot. We are currently reading the entire chain block by block from disk on every index thread. So instead, we could read blocks just once, then dispatch events to the indexers. Making indexers purely listeners with no associated thread.\r\n\r\nYes letting indexes just receive notifications to get in sync and not have to implement sync logic is the goal of #24230. And the threading issue should be orthogonal after that PR. Indexes (and wallets) could read and process blocks in single thread, or read blocks in a single thread and process them in parallel, or read and process blocks in parallel like happens currently, or use some other form of scheduling. But regardless of what ordering is used, the interface an individual index uses to get in sync should not have to change, and indexes shouldn't have to create sync threads or deal with race conditions between the notification threads and sync threads.\r\n\r\n> I initially thought that the issue was due an initialization ordering, that we werenât having the active chain activated at that point (thought that was done only post load-blk thread completion).\r\n\r\nOh, I see. That's also what I concluded from seeing the failure, but I guess it is not the complete picture.\r\n\r\n> The issue is that empty indexers donât set the best block to the genesis `CBlockIndex`, they just leave it null. So, the index summary returns a valid height=0 with an empty block hash.. which crashes on the block hash assertion.\r\n> \r\n> So, the fix is easy.\r\n\r\nI didn't know about this. I guess the fix would be to treat the genesis as the fork point in this case. And to consider the index already synced if there is nochainstate and the genesis pointer is null.\r\n\r\n> But.. I havenât done it because have found another possible index sync \"fatal error\" in master and wanted to fix it prior continue moving forward here.\r\n\r\nIt seems like it would be a good thing to fix this. But this sounds like something that was already broken, so I'm not sure if the fix has to be bundled here, necessarily. I think the \"has data from tip down\" check is a useful check that can run early and warn if any block data is missing. But if the check isn't perfect and doesn't catch missing block, it shouldn't be the worst thing because the missing blocks will just be reported later rather than earlier.",
      "created_at" : "2023-05-15T17:17:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1548248095",
      "id" : 1548248095,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585cSGQf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1548248095/reactions"
      },
      "updated_at" : "2023-05-15T17:17:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1548248095",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I can't see how the current approach could work, even if the problems discussed above were solved:\r\n\r\nGood catch noticing Init() was not called! It doesn't seem like it should be that hard to fix, though. The PR was already moving most of the code out of Init(), anyway, so now a little more code needs to move. I didn't look very deeply but I would probably make Init() a public method and call it after constructing the index. Also stop calling Init() from Start() and move the RegisterValidationInterface() from Start() to Init().",
      "created_at" : "2023-05-16T22:09:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1550419574",
      "id" : 1550419574,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585caYZ2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550419574/reactions"
      },
      "updated_at" : "2023-05-16T22:09:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550419574",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the review @mzumsande.\r\n\r\nFunny that I pushed a small update at the same time that you were commenting.\r\n\r\nHave few more changes on the pipeline that will be pushing soon. e.g. the `hasDataFromTipDown` entire function can be written in two lines.. just need to re-purpose the `GetFirstStoredBlock` function a bit :).\r\n\r\n> I think the necessary order would be to\r\n>\r\n> create all indexes and read their best block / other data from disk\r\ndetermine the oldest block for all indexes\r\nDo the pruning check once\r\n\r\nYeah.. I was thinking on the other issue and forgot that `Init()` isn't being called in the constructor.. :face_palm:. Will re-order it, Thanks!\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at" : "2023-05-16T22:10:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1550420156",
      "id" : 1550420156,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585caYi8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550420156/reactions"
      },
      "updated_at" : "2023-05-16T22:33:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550420156",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Looking at current version of the PR 6dfec1b5fbb0f8e95a6134ea8b27e9d6c285d171 it seems to have changed a lot, and the other thing it is doing now is delaying startup of indexes until blocks are loaded, so there is no longer a conflict with `reindex-chainstate`. So it is basically reimplementing #25193 in a different way that doesn't require a `sleep_for(std::chrono::milliseconds(500))` waitloop. I think this approach is cleaner, but also that #25193 is a smaller more targeted change with a test, so I would probably prefer to see #25193 merged first and with this cleanup and rewrite merged later.\r\n\r\n~#25193 also has two ACKs, so I can re-ack and merge it soon.~ EDIT: Never mind, just noticed it needs rebase currently\r\n\r\nOn this PR, I like the approach and thinks the code looks pretty good overall. The only thing I don't like is all the complexity added to AppInitMain(). I think that complexity could go away if you got rid of the `std::set<BaseIndex*> indexers` local variable there and added a `NodeContext` `std::vector<BaseIndex*> indexes` member instead. Then there would be no need for the `func_start_indexes` lambda. The lambda could be replaced with a regular `StartIndexes` function instead.\r\n\r\n",
      "created_at" : "2023-05-17T13:31:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1551406710",
      "id" : 1551406710,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585ceJZ2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551406710/reactions"
      },
      "updated_at" : "2023-05-17T13:35:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551406710",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Was about to send the updates comment hehe. I was too tired last night to write it. Thanks for the review ryanofsky!\r\n\r\nUpdates list:\r\n\r\n- Decoupled index `Init()` from `Start()`. So indexers can be initialized without spawning the sync thread. \r\n\r\n- Simplified the pruning violation code by re-purposing the `GetFirstStoredBlock` function. Now called `IsBlockDataAvailable`.\r\n\r\n- Fixed a small race, where we set the index `m_synced` flag (which enables `BlockConnected` events) before calling to the child class init function. So, for example, the block filter index could theoretically process a block before initializing the `next filter position` field and end up overwriting the first stored filter.\r\n\r\n-------\r\n\r\nFeedback:\r\n\r\n> Looking at current version of the PR [6dfec1b](https://github.com/bitcoin/bitcoin/commit/6dfec1b5fbb0f8e95a6134ea8b27e9d6c285d171) it seems to have changed a lot, and the other thing it is doing now is delaying startup of indexes until blocks are loaded, so there is no longer a conflict with `reindex-chainstate`. So it is basically reimplementing #25193 in a different way that doesn't require a `sleep_for(std::chrono::milliseconds(500))` waitloop. I think this approach is cleaner, but also that #25193 is a smaller more targeted change with a test, so I would probably prefer to see #25193 merged first and with this cleanup and rewrite merged later.\r\n\r\nYeah, I updated the PR description last night stating that this is now built on top of #25193 (but my slightly modified version of it https://github.com/bitcoin/bitcoin/pull/25193#pullrequestreview-1375021974).\r\n\r\n@mzumsande said that he was going to give them a look and probably take them. So, all good if them get squashed there or here. Either way is fine for me. Happy to re-review #25193 whenever is ready to go again.\r\n\r\n\r\n \r\n> On this PR, I like the approach and thinks the code looks pretty good overall. The only thing I don't like is all the complexity added to AppInitMain(). I think that complexity could go away if you got rid of the `std::set<BaseIndex*> indexers` local variable there and added a `NodeContext` `std::vector<BaseIndex*> indexes` member instead. Then there would be no need for the `func_start_indexes` lambda. The lambda could be replaced with a regular `StartIndexes` function instead.\r\n\r\nSounds great. Was also thinking about moving the lambda to a standalone function but wasn't finding the right place and didn't want to create a new file only for this.\r\n\r\n",
      "created_at" : "2023-05-17T13:54:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1551443566",
      "id" : 1551443566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585ceSZu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551443566/reactions"
      },
      "updated_at" : "2023-05-17T14:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551443566",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased post #25193 merge. Conflicts solved.\r\n\r\nOnly change from the last push is on the first commit ca30419, where the index threads active wait and the global flag are replaced by a post-poned indexers start call.",
      "created_at" : "2023-05-17T19:23:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1551934377",
      "id" : 1551934377,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585cgKOp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551934377/reactions"
      },
      "updated_at" : "2023-05-18T14:23:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551934377",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "CI failure is not related.",
      "created_at" : "2023-05-18T17:17:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553369947",
      "id" : 1553369947,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585clotb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553369947/reactions"
      },
      "updated_at" : "2023-05-18T17:17:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553369947",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "See https://github.com/bitcoin/bitcoin/issues/27492#issuecomment-1527772394 about the CI failure",
      "created_at" : "2023-05-18T17:22:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553376251",
      "id" : 1553376251,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585clqP7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553376251/reactions"
      },
      "updated_at" : "2023-05-18T17:23:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553376251",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/27607#issue-1702212340\r\n\r\n>* Fixed a small race, where we set the index `m_synced` flag (which enables `BlockConnected` events) before calling to the child class init function. So, for example, the block filter index could theoretically process a block before initializing the next filter position field and end up overwriting the first stored filter.\r\n\r\nCan you clarify this? I don't see m_synced getting set to true before the index is synced, and don't understand the block filter index example.",
      "created_at" : "2023-05-18T17:25:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553379017",
      "id" : 1553379017,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585clq7J",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553379017/reactions"
      },
      "updated_at" : "2023-05-18T17:25:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553379017",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> re: [#27607 (comment)](https://github.com/bitcoin/bitcoin/pull/27607#issue-1702212340)\r\n> \r\n> > * Fixed a small race, where we set the index `m_synced` flag (which enables `BlockConnected` events) before calling to the child class init function. So, for example, the block filter index could theoretically process a block before initializing the next filter position field and end up overwriting the first stored filter.\r\n> \r\n> Can you clarify this? I don't see m_synced getting set to true before the index is synced, and don't understand the block filter index example.\r\n\r\nSure. The [BaseIndex::Start()](https://github.com/bitcoin/bitcoin/blob/6cc136bbd36f859a16e469bb5c016d06c19bcd50/src/index/base.cpp#L401) flow in master is the following one:\r\n\r\n1) Calls `RegisterValidationInterface()` --> which registers to the validation interface.\r\n2) Calls [BaseIndex::Init()](https://github.com/bitcoin/bitcoin/blob/6cc136bbd36f859a16e469bb5c016d06c19bcd50/src/index/base.cpp#L409) --> which, prior the pruning check, sets [m_synced](https://github.com/bitcoin/bitcoin/blob/6cc136bbd36f859a16e469bb5c016d06c19bcd50/src/index/base.cpp#L109):\r\n    `m_synced = m_best_block_index.load() == active_chain.Tip()`\r\n3) Calls `CustomInit()`.  --> which, for the block index filter, initializes the [m_next_filter_pos](https://github.com/bitcoin/bitcoin/blob/6cc136bbd36f859a16e469bb5c016d06c19bcd50/src/index/blockfilterindex.cpp#L114) field with the db information.\r\n\r\nSo, if the block filter index is synced, and the index receives a `BlockConnected` event after finish point (2) and before point (3) then `m_next_filter_pos` will not be initialized, so `BlockFIlterIndex::CustomAppend()` will use a null `m_next_filter_pos`. ",
      "created_at" : "2023-05-18T17:42:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553400917",
      "id" : 1553400917,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585clwRV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553400917/reactions"
      },
      "updated_at" : "2023-05-18T17:44:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553400917",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! So the problem is that `m_synced` is set to true before `CustomInit` code runs, instead of after. It looks like this bug was introduced in bef4e405f3de2718dfee279a9abff4daf016da26 from #25494\r\n\r\nEDIT: Added a note in the other PR https://github.com/bitcoin/bitcoin/pull/25494#discussion_r1198123860",
      "created_at" : "2023-05-18T17:54:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553414023",
      "id" : 1553414023,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585clzeH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553414023/reactions"
      },
      "updated_at" : "2023-05-18T18:02:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553414023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Thanks! So the problem is that `m_synced` is set to true before `CustomInit` code runs, instead of after. It looks like this bug was introduced in [bef4e40](https://github.com/bitcoin/bitcoin/commit/bef4e405f3de2718dfee279a9abff4daf016da26) from #25494\r\n\r\nYeah!, that is more or less what I wrote in the description \"Fixed a small race, where we set the index `m_synced` flag (which enables `BlockConnected` events) before calling to the child class init function\".\r\n\r\nHappy to write it differently if it is not good enough. Maybe should change \"child class init function\" for \"CustomInit\"?. (in the commit description it's explained with more details anyway)",
      "created_at" : "2023-05-18T18:05:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553427942",
      "id" : 1553427942,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585cl23m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553427942/reactions"
      },
      "updated_at" : "2023-05-18T18:05:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553427942",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Happy to write it differently if it is not good enough. Maybe should change \"child class init function\" for \"CustomInit\"?. (in the commit description it's explained with more details anyway)\r\n\r\nYes if CustomInit was mentioned I probably would have understood better. I would say this PR fixes a race condition where an index's  `CustomAppend` method might be called before its `CustomInit` method, causing the index to try to update itself before it is initialized. And that the PR fixes the problem by always setting `m_synced` to true until after `CustomInit` is called, instead of before. And that the race was introduced in bef4e405f3de2718dfee279a9abff4daf016da26 from #25494",
      "created_at" : "2023-05-18T18:23:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553447313",
      "id" : 1553447313,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585cl7mR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553447313/reactions"
      },
      "updated_at" : "2023-05-18T18:23:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553447313",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198165818"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198165818"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"init: start indexes after the loadblk thread finishes\" (ca3041984cf3665e27b6783c923ab1c32682500a)\r\n\r\nCould we change \"indexers\" to \"indexes\" in all new code? I don't think distinguishing between an \"index\" and \"indexer\" really clarifies anything, and the word \"indexers\" seems a little odd and unexpected.",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-18T18:35:25Z",
      "diff_hunk" : "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198165818",
      "id" : 1198165818,
      "line" : 1669,
      "node_id" : "PRRC_kwDOABII585Hao86",
      "original_commit_id" : "ca3041984cf3665e27b6783c923ab1c32682500a",
      "original_line" : 1666,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 68,
      "pull_request_review_id" : 1433254608,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198165818/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-18T19:16:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198165818",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "sounds good. Description updated, thanks.",
      "created_at" : "2023-05-18T18:43:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#issuecomment-1553480215",
      "id" : 1553480215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27607",
      "node_id" : "IC_kwDOABII585cmDoX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553480215/reactions"
      },
      "updated_at" : "2023-05-18T18:43:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553480215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198184049"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198184049"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"init: start indexes after the loadblk thread finishes\" (ca3041984cf3665e27b6783c923ab1c32682500a)\r\n\r\nOne side-effect of this change is that now if there is a \"best block of the index goes beyond pruned data\" error, bitcoind successfully starts and returns 0 then exits, where previously it could fail early and actually return an error code.\r\n\r\nThat aspect of the previous behavior seems better to me, though I'm not sure what the tradeoffs are. \r\n\r\nDo you think the the main benefit of this commit is cleaner code, and the worse error detection a side effect? Or are there other benefits to this commit?\r\n\r\nI'm thinking the PR is doing a lot of things and maybe it would be good to split into smaller PRs where possible. Especially if the smaller PRs can be unambiguous improvements.",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-18T18:48:33Z",
      "diff_hunk" : "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers\n+        if (!StartIndexes(node)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198184049",
      "id" : 1198184049,
      "line" : 1670,
      "node_id" : "PRRC_kwDOABII585HatZx",
      "original_commit_id" : "ca3041984cf3665e27b6783c923ab1c32682500a",
      "original_line" : 1667,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 69,
      "pull_request_review_id" : 1433254608,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198184049/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-18T19:16:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198184049",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198191133"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198191133"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"index: simplify pruning violation check\" (704c9e4cf67468708db655226a78489b92ef0523)\r\n\r\nWould be good to make this declaration use the same argument name as the definition which is `BlockManager::GetFirstStoredBlock(const CBlockIndex& start_block)`",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-18T18:53:45Z",
      "diff_hunk" : "@@ -216,8 +216,13 @@ class BlockManager\n     //! Returns last CBlockIndex* that is a checkpoint\n     const CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    //! Returns 'lower_block' if all blocks up to that point are available in disk, otherwise returns the first block that is not pruned in the upper-lower range.\n+    //! If 'lower_block=nullptr': verify blocks availability up to the genesis block.\n+    //! Returns nullptr if 'lower_block' is not an 'upper_block' ancestry.\n+    const CBlockIndex* IsBlockDataAvailable(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n     //! Find the first block that is not pruned\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& upper_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198191133",
      "id" : 1198191133,
      "line" : 225,
      "node_id" : "PRRC_kwDOABII585HavId",
      "original_commit_id" : "704c9e4cf67468708db655226a78489b92ef0523",
      "original_line" : 225,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/node/blockstorage.h",
      "position" : 19,
      "pull_request_review_id" : 1433254608,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198191133/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-18T19:16:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198191133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198193156"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198193156"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"index: simplify pruning violation check\" (704c9e4cf67468708db655226a78489b92ef0523)\r\n\r\nCould the commit message clarify if any behavior is changing here? Would be good to label it a refactoring and say it does not change behavior if nothing is changing, and say what is changing otherwise.\r\n\r\nAlso, it seems like new code that is added here just gets moved / deleted later in the PR in the last commit \"index: verify blocks data existence only once\" (dd9bc393ebd4ba915ca94991390b6e98d29dcfaf).\r\n\r\nI could be missing something, but it seems like the PR would be easier to review if this commit only added the `IsBlockDataAvailable` function, the other commit started calling it, so reviewers would only need to review one new version of the pruned data check, instead of reviewing a temporary version that gets thrown away and then another final version.",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-18T18:55:54Z",
      "diff_hunk" : "@@ -106,36 +106,16 @@ bool BaseIndex::Init()\n     // via `BlockConnected` signals until, possibly, the next restart.\n     m_synced = m_best_block_index.load() == active_chain.Tip();\n     if (!m_synced) {\n-        bool prune_violation = false;\n-        if (!m_best_block_index) {\n-            // index is not built yet\n-            // make sure we have all block data back to the genesis\n-            prune_violation = m_chainstate->m_blockman.GetFirstStoredBlock(*active_chain.Tip()) != active_chain.Genesis();\n+        const CBlockIndex* start_block = m_best_block_index.load();\n+        if (!start_block) start_block = active_chain.Genesis();\n+        if (!active_chain.Contains(start_block)) {\n+            // if the bestblock is not part of the mainchain, find the fork\n+            // so we can make sure we have all data down to the fork\n+            start_block = active_chain.FindFork(start_block);\n         }\n-        // in case the index has a best block set and is not fully synced\n-        // check if we have the required blocks to continue building the index\n-        else {\n-            const CBlockIndex* block_to_test = m_best_block_index.load();\n-            if (!active_chain.Contains(block_to_test)) {\n-                // if the bestblock is not part of the mainchain, find the fork\n-                // and make sure we have all data down to the fork\n-                block_to_test = active_chain.FindFork(block_to_test);\n-            }\n-            const CBlockIndex* block = active_chain.Tip();\n-            prune_violation = true;\n-            // check backwards from the tip if we have all block data until we reach the indexes bestblock\n-            while (block_to_test && block && (block->nStatus & BLOCK_HAVE_DATA)) {\n-                if (block_to_test == block) {\n-                    prune_violation = false;\n-                    break;\n-                }\n-                // block->pprev must exist at this point, since block_to_test is part of the chain\n-                // and thus must be encountered when going backwards from the tip\n-                assert(block->pprev);\n-                block = block->pprev;\n-            }\n-        }\n-        if (prune_violation) {\n+\n+        // make sure we have all block data back to the start block\n+        if (m_chainstate->m_blockman.IsBlockDataAvailable(*active_chain.Tip(), start_block) != start_block) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198193156",
      "id" : 1198193156,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585HavoE",
      "original_commit_id" : "704c9e4cf67468708db655226a78489b92ef0523",
      "original_line" : 118,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/index/base.cpp",
      "position" : null,
      "pull_request_review_id" : 1433254608,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198193156/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-18T19:16:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198193156",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198195900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198195900"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"index: prevent race by calling 'CustomInit' prior setting 'm_synced' flag\" (21812970cc56191e18f96692e47f00ed881bd596)\r\n\r\nI think it would be nice to split this commit off into a separate PR is possible, so we have a minimal bugfix that could backported (and also be easier to understand)",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-18T18:59:05Z",
      "diff_hunk" : "@@ -119,6 +116,16 @@ bool BaseIndex::Init()\n             return InitError(strprintf(Untranslated(\"%s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"), GetName()));\n         }\n     }\n+\n+    // Child init\n+    if (!CustomInit(start_block ? std::make_optional(interfaces::BlockKey{start_block->GetBlockHash(), start_block->nHeight}) : std::nullopt)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198195900",
      "id" : 1198195900,
      "line" : 113,
      "node_id" : "PRRC_kwDOABII585HawS8",
      "original_commit_id" : "21812970cc56191e18f96692e47f00ed881bd596",
      "original_line" : 121,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/index/base.cpp",
      "position" : 29,
      "pull_request_review_id" : 1433254608,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198195900/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-18T19:16:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198195900",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198198410"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198198410"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactor: index, decouple 'Init' from 'Start'\" (26bd60eafc42484d80d5dfef0fa0abb77e7817ce)\r\n\r\nInit return value is ignored. I think this needs to return false if it fails. Would also be good to mark Init declaration with `[[nodiscard]]`",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-18T19:02:00Z",
      "diff_hunk" : "@@ -1577,6 +1577,9 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.indexers.insert(g_coin_stats_index.get());\n     }\n \n+    // Init all indexers\n+    for (auto indexer : node.indexers) indexer->Init();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1198198410",
      "id" : 1198198410,
      "line" : 1581,
      "node_id" : "PRRC_kwDOABII585Haw6K",
      "original_commit_id" : "26bd60eafc42484d80d5dfef0fa0abb77e7817ce",
      "original_line" : 1581,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 46,
      "pull_request_review_id" : 1433254608,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198198410/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-18T19:16:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198198410",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199013812"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199013812"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure, will change it. I used indexers to try to differentiate them from block indexes but guess that its an odd term in English.",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-19T14:14:20Z",
      "diff_hunk" : "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199013812",
      "id" : 1199013812,
      "in_reply_to_id" : 1198165818,
      "line" : 1669,
      "node_id" : "PRRC_kwDOABII585Hd3-0",
      "original_commit_id" : "ca3041984cf3665e27b6783c923ab1c32682500a",
      "original_line" : 1666,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 68,
      "pull_request_review_id" : 1434512490,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199013812/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-19T14:14:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199013812",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199080037"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199080037"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Do you think the the main benefit of this commit is cleaner code, and the worse error detection a side effect? Or are there other benefits to this commit?\r\n\r\nAside from the cleaner code (which I think that it's salable on its own), I see maintainability and test coverage benefits with the global flag removal. Also, the indexes threads active-wait isn't that good in terms of processors context switching (the index threads are waking up every 0.5s and the reindex process could take a while).\r\nPlus, since #25193, we skip the pruning violation checks prior reindex, while here we are recovering those checks too.\r\n\r\nFurthermore, it's more accurate to conduct the pruning violations checks after the \"loadblk\" thread execution. This is because that thread imports data from external sources and activates the best chain (only there we know which is the node's best chain).\r\nMeaning that, with the current code, we could have performed the pruning violations checks on a fork chain if the import thread encounters another best chain (and not perform any pruning check on the real active chain). Which could lead to a similar situation as there would be no init error if something isn't correct after thread import execution.\r\n\r\nSaid that, talking about the init returned error, maybe we could cache the node shutdown reason and return it even if the error was post-init?. Will give it a look.\r\n\r\n\r\n> I'm thinking the PR is doing a lot of things and maybe it would be good to split into smaller PRs where possible. Especially if the smaller PRs can be unambiguous improvements.\r\n\r\nYeah sure.\r\nI usually try to not split a PR too much (when it's scoped under a certain area) to not loose review power and coordinate better between ourselves but.. I agree that this started targeting something and now grew up a bit longer.",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-19T15:13:34Z",
      "diff_hunk" : "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers\n+        if (!StartIndexes(node)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199080037",
      "id" : 1199080037,
      "in_reply_to_id" : 1198184049,
      "line" : 1670,
      "node_id" : "PRRC_kwDOABII585HeIJl",
      "original_commit_id" : "ca3041984cf3665e27b6783c923ab1c32682500a",
      "original_line" : 1667,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 69,
      "pull_request_review_id" : 1434618666,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199080037/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-20T04:07:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199080037",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199268910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199268910"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think this is possible to trigger with the way the function is used, but if `upper_block` already has `NO_DATA`, it would return that block, maybe `nullptr` would be more natural? (also applies to `GetFirstStoredBlock`).\r\n\r\nAlso, the name sounds like a boolean function, maybe something like `CheckBlockDataAvailability()` would be better?",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-19T18:42:19Z",
      "diff_hunk" : "@@ -216,8 +216,13 @@ class BlockManager\n     //! Returns last CBlockIndex* that is a checkpoint\n     const CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    //! Returns 'lower_block' if all blocks up to that point are available in disk, otherwise returns the first block that is not pruned in the upper-lower range.\n+    //! If 'lower_block=nullptr': verify blocks availability up to the genesis block.\n+    //! Returns nullptr if 'lower_block' is not an 'upper_block' ancestry.\n+    const CBlockIndex* IsBlockDataAvailable(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199268910",
      "id" : 1199268910,
      "line" : 222,
      "node_id" : "PRRC_kwDOABII585He2Qu",
      "original_commit_id" : "704c9e4cf67468708db655226a78489b92ef0523",
      "original_line" : 222,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/node/blockstorage.h",
      "position" : 15,
      "pull_request_review_id" : 1434924256,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199268910/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-19T21:36:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199268910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199338711"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199338711"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good catch! Is my understanding correct that this race cannot actually happen in practice on master right now, because the indexes are set up (`Init()`) by the init thread, which starts the networking and loadblk threads only later - so I can't see from which other thread `BlockConnected` signals could come from at this stage. However, once index initialization is deferred to the loadblk thread in ca3041984cf3665e27b6783c923ab1c32682500a, I think this race could easily happen. \r\n (this might affect the decision whether backport is necessary).",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-19T20:20:58Z",
      "diff_hunk" : "@@ -119,6 +116,16 @@ bool BaseIndex::Init()\n             return InitError(strprintf(Untranslated(\"%s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"), GetName()));\n         }\n     }\n+\n+    // Child init\n+    if (!CustomInit(start_block ? std::make_optional(interfaces::BlockKey{start_block->GetBlockHash(), start_block->nHeight}) : std::nullopt)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199338711",
      "id" : 1199338711,
      "in_reply_to_id" : 1198195900,
      "line" : 113,
      "node_id" : "PRRC_kwDOABII585HfHTX",
      "original_commit_id" : "21812970cc56191e18f96692e47f00ed881bd596",
      "original_line" : 121,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/index/base.cpp",
      "position" : 29,
      "pull_request_review_id" : 1434924256,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199338711/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-19T21:36:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199338711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199624849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199624849"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Said that, talking about the init returned error, maybe we could cache the node shutdown reason and return it even if the error was post-init?. Will give it a look.\r\n\r\nFollowing-up this, pushed #27708. Which will let us keep the same behavior as we have now:\r\n\r\nThe user, same as the functional tests, shouldn't notice any difference between running the pruning violation checks in the load-blk thread vs init thread with it. We will continue erroring out after a pruning violation with an `EXIT_FAILURE` code. Making the `feature_index_prune.py` changes in ca3041984cf3665e27b6783c923ab1c32682500a no longer needed.",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-20T15:18:55Z",
      "diff_hunk" : "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers\n+        if (!StartIndexes(node)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199624849",
      "id" : 1199624849,
      "in_reply_to_id" : 1198184049,
      "line" : 1670,
      "node_id" : "PRRC_kwDOABII585HgNKR",
      "original_commit_id" : "ca3041984cf3665e27b6783c923ab1c32682500a",
      "original_line" : 1667,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 69,
      "pull_request_review_id" : 1435416979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199624849/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-20T15:18:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199624849",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199788121"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199788121"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yeah thx, this is a remanent from a previous version.",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-21T15:42:13Z",
      "diff_hunk" : "@@ -216,8 +216,13 @@ class BlockManager\n     //! Returns last CBlockIndex* that is a checkpoint\n     const CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    //! Returns 'lower_block' if all blocks up to that point are available in disk, otherwise returns the first block that is not pruned in the upper-lower range.\n+    //! If 'lower_block=nullptr': verify blocks availability up to the genesis block.\n+    //! Returns nullptr if 'lower_block' is not an 'upper_block' ancestry.\n+    const CBlockIndex* IsBlockDataAvailable(const CBlockIndex& upper_block LIFETIMEBOUND, const CBlockIndex* lower_block=nullptr) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n     //! Find the first block that is not pruned\n-    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& start_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    const CBlockIndex* GetFirstStoredBlock(const CBlockIndex& upper_block LIFETIMEBOUND) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199788121",
      "id" : 1199788121,
      "in_reply_to_id" : 1198191133,
      "line" : 225,
      "node_id" : "PRRC_kwDOABII585Hg1BZ",
      "original_commit_id" : "704c9e4cf67468708db655226a78489b92ef0523",
      "original_line" : 225,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/node/blockstorage.h",
      "position" : 19,
      "pull_request_review_id" : 1435558536,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199788121/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-21T15:42:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199788121",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199796712"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199796712"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Could the commit message clarify if any behavior is changing here? Would be good to label it a refactoring and say it does not change behavior if nothing is changing, and say what is changing otherwise.\r\n\r\nyeah sure. https://github.com/bitcoin/bitcoin/commit/704c9e4cf67468708db655226a78489b92ef0523 has no behavior change.\r\n\r\n> Also, it seems like new code that is added here just gets moved / deleted later in the PR in the last commit \"index: verify blocks data existence only once\" (https://github.com/bitcoin/bitcoin/commit/dd9bc393ebd4ba915ca94991390b6e98d29dcfaf).\r\n> \r\n> I could be missing something, but it seems like the PR would be easier to review if this commit only added the IsBlockDataAvailable function, the other commit started calling it, so reviewers would only need to review one new version of the pruned data check, instead of reviewing a temporary version that gets thrown away and then another final version.\r\n\r\nHmm, I actually made it in this way to try to make review easier.\r\n\r\nThe idea was that 704c9e4 makes current violation code much more concise with no behavior change (introducing this new function which re-purposes another existent function), then dd9bc393 moves it to init with a slightly difference: instead of calling `IsBlockDataAvailable` once per index, it's called once for all the indexes (so the diff is on init fetching the oldest block index from the indexers and then calling `IsBlockDataAvailable` with it).\r\n\r\nI thought that was going to be easier to review in this way than moving + changing the entire pruning violation check at once in a single commit. I mean, at least for me, it seemed good to let us verify that the conciser pruning violation code doesn't introduces any behavior changes first (at this point reviewers should be ok with the \"new\" process), then move that to init and call it with the the oldest indexer block index (which is the behavior change).\r\n\r\nBut let me know if this doesn't makes sense for you, and you still prefer the all-in-one way. If it doesn't help review or code consistency, could go ahead with your suggestion.",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-21T16:48:54Z",
      "diff_hunk" : "@@ -106,36 +106,16 @@ bool BaseIndex::Init()\n     // via `BlockConnected` signals until, possibly, the next restart.\n     m_synced = m_best_block_index.load() == active_chain.Tip();\n     if (!m_synced) {\n-        bool prune_violation = false;\n-        if (!m_best_block_index) {\n-            // index is not built yet\n-            // make sure we have all block data back to the genesis\n-            prune_violation = m_chainstate->m_blockman.GetFirstStoredBlock(*active_chain.Tip()) != active_chain.Genesis();\n+        const CBlockIndex* start_block = m_best_block_index.load();\n+        if (!start_block) start_block = active_chain.Genesis();\n+        if (!active_chain.Contains(start_block)) {\n+            // if the bestblock is not part of the mainchain, find the fork\n+            // so we can make sure we have all data down to the fork\n+            start_block = active_chain.FindFork(start_block);\n         }\n-        // in case the index has a best block set and is not fully synced\n-        // check if we have the required blocks to continue building the index\n-        else {\n-            const CBlockIndex* block_to_test = m_best_block_index.load();\n-            if (!active_chain.Contains(block_to_test)) {\n-                // if the bestblock is not part of the mainchain, find the fork\n-                // and make sure we have all data down to the fork\n-                block_to_test = active_chain.FindFork(block_to_test);\n-            }\n-            const CBlockIndex* block = active_chain.Tip();\n-            prune_violation = true;\n-            // check backwards from the tip if we have all block data until we reach the indexes bestblock\n-            while (block_to_test && block && (block->nStatus & BLOCK_HAVE_DATA)) {\n-                if (block_to_test == block) {\n-                    prune_violation = false;\n-                    break;\n-                }\n-                // block->pprev must exist at this point, since block_to_test is part of the chain\n-                // and thus must be encountered when going backwards from the tip\n-                assert(block->pprev);\n-                block = block->pprev;\n-            }\n-        }\n-        if (prune_violation) {\n+\n+        // make sure we have all block data back to the start block\n+        if (m_chainstate->m_blockman.IsBlockDataAvailable(*active_chain.Tip(), start_block) != start_block) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199796712",
      "id" : 1199796712,
      "in_reply_to_id" : 1198193156,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Hg3Ho",
      "original_commit_id" : "704c9e4cf67468708db655226a78489b92ef0523",
      "original_line" : 118,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/index/base.cpp",
      "position" : null,
      "pull_request_review_id" : 1435566027,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199796712/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-21T16:49:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199796712",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199824807"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199824807"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Do you think the the main benefit of this commit is cleaner code, and the worse error detection a side effect? Or are there other benefits to this commit?\r\n\r\nI think one minor downside could be that the indexes will be available a few minutes later because loadblk doesn't only do reindexing etc., it also loads the mempool - this could take several minutes depending on mempool size and there isn't really a reason why the indexes shouldn't be available before that has finished. This is already the case now in case of `-reindex-chainstate` after #25193 (I didn't think of that), but it could be easily changed in master by moving `g_indexes_ready_to_sync = true` up one line in `ThreadImport`.",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-21T20:42:15Z",
      "diff_hunk" : "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers\n+        if (!StartIndexes(node)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199824807",
      "id" : 1199824807,
      "in_reply_to_id" : 1198184049,
      "line" : 1670,
      "node_id" : "PRRC_kwDOABII585Hg9-n",
      "original_commit_id" : "ca3041984cf3665e27b6783c923ab1c32682500a",
      "original_line" : 1667,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 69,
      "pull_request_review_id" : 1435589453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199824807/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-21T21:09:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199824807",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199939444"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199939444"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> This is already the case now in case of -reindex-chainstate after https://github.com/bitcoin/bitcoin/pull/25193 (I didn't think of that), but it could be easily changed in master by moving g_indexes_ready_to_sync = true up one line in ThreadImport.\r\n\r\nyeah, I don't see why that would be a downside for this changes neither. Same as with `g_indexes_ready_to_sync` flag,  the `StartIndexes()` call could be executed before the mempool load too.\r\n\r\nIt wouldn't be bad to rename `ThreadImport` to `ImportBlocks`, and move the single line mempool load function call to the end of the `loadblk` lambda.",
      "commit_id" : "dd9bc393ebd4ba915ca94991390b6e98d29dcfaf",
      "created_at" : "2023-05-22T04:21:20Z",
      "diff_hunk" : "@@ -1665,13 +1655,20 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     }\n #endif\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(fs::PathFromString(strFile));\n-    }\n+    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [&chainman, &args, &node] {\n+        std::vector<fs::path> vImportFiles;\n+        for (const std::string& strFile : args.GetArgs(\"-loadblock\")) {\n+            vImportFiles.push_back(fs::PathFromString(strFile));\n+        }\n \n-    chainman.m_load_block = std::thread(&util::TraceThread, \"loadblk\", [=, &chainman, &args] {\n         ThreadImport(chainman, vImportFiles, ShouldPersistMempool(args) ? MempoolPath(args) : fs::path{});\n+\n+        // Start indexers\n+        if (!StartIndexes(node)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27607#discussion_r1199939444",
      "id" : 1199939444,
      "in_reply_to_id" : 1198184049,
      "line" : 1670,
      "node_id" : "PRRC_kwDOABII585HhZ90",
      "original_commit_id" : "ca3041984cf3665e27b6783c923ab1c32682500a",
      "original_line" : 1667,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 69,
      "pull_request_review_id" : 1435746295,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27607",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199939444/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-22T04:21:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199939444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   }
]
