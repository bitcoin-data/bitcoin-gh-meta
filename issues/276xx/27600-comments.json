[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [mzumsande](https://github.com/bitcoin/bitcoin/pull/27600#pullrequestreview-1431340479) |\n| Stale ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/27600#pullrequestreview-1431107177) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2023-05-08T19:59:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#issuecomment-1538963935",
      "id" : 1538963935,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27600",
      "node_id" : "IC_kwDOABII585burnf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1538963935/reactions"
      },
      "updated_at" : "2023-05-18T14:18:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1538963935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1191709646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191709646"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit\r\n```suggestion\r\n        return force ? std::make_optional(last_out.id) : std::nullopt;\r\n```",
      "commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "created_at" : "2023-05-11T21:34:04Z",
      "diff_hunk" : "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect the 8 nodes with the lowest minimum ping time.\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    last = EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    if (last.has_value()) last_out = last.value();\n     // Protect 4 nodes that most recently sent us novel transactions accepted into our mempool.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n-                       [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n+                              [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect some of the remaining eviction candidates by ratios of desirable\n     // or disadvantaged characteristics.\n-    ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n-\n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    last = ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n+    if (last.has_value()) last_out = last.value();\n+\n+    if (vEvictionCandidates.empty()) {\n+        if (force) {\n+            return last_out.id;\n+        } else {\n+            return std::nullopt;\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1191709646",
      "id" : 1191709646,
      "line" : 234,
      "node_id" : "PRRC_kwDOABII585HCAvO",
      "original_commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "original_line" : 234,
      "original_position" : 125,
      "original_start_line" : 230,
      "path" : "src/node/eviction.cpp",
      "position" : 125,
      "pull_request_review_id" : 1423467785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191709646/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 230,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-11T21:58:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191709646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1191732820"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191732820"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not sure, but IIRC last time I looked RVO wasn't working with a ternary.",
      "commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "created_at" : "2023-05-11T22:01:20Z",
      "diff_hunk" : "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect the 8 nodes with the lowest minimum ping time.\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    last = EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    if (last.has_value()) last_out = last.value();\n     // Protect 4 nodes that most recently sent us novel transactions accepted into our mempool.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n-                       [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n+                              [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect some of the remaining eviction candidates by ratios of desirable\n     // or disadvantaged characteristics.\n-    ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n-\n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    last = ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n+    if (last.has_value()) last_out = last.value();\n+\n+    if (vEvictionCandidates.empty()) {\n+        if (force) {\n+            return last_out.id;\n+        } else {\n+            return std::nullopt;\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1191732820",
      "id" : 1191732820,
      "in_reply_to_id" : 1191709646,
      "line" : 234,
      "node_id" : "PRRC_kwDOABII585HCGZU",
      "original_commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "original_line" : 234,
      "original_position" : 125,
      "original_start_line" : 230,
      "path" : "src/node/eviction.cpp",
      "position" : 125,
      "pull_request_review_id" : 1423506632,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191732820/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 230,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-11T22:01:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191732820",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1193951897"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1193951897"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not sure this is correct, it ignores the checking of `predicate`?",
      "commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "created_at" : "2023-05-15T14:46:47Z",
      "diff_hunk" : "@@ -73,15 +73,22 @@ struct CompareNodeNetworkTime {\n     };\n };\n \n-//! Sort an array by the specified comparator, then erase the last K elements where predicate is true.\n-template <typename T, typename Comparator>\n-static void EraseLastKElements(\n-    std::vector<T>& elements, Comparator comparator, size_t k,\n+//! Sort an array of NodeEvictionCandidates by the specified comparator, then erase the last K elements where predicate is true.\n+//! Return the last element removed if any.\n+static std::optional<NodeEvictionCandidate> EraseLastKElements(\n+    std::vector<NodeEvictionCandidate>& elements, std::function<bool(NodeEvictionCandidate, NodeEvictionCandidate)> comparator, size_t k,\n     std::function<bool(const NodeEvictionCandidate&)> predicate = [](const NodeEvictionCandidate& n) { return true; })\n {\n     std::sort(elements.begin(), elements.end(), comparator);\n     size_t eraseSize = std::min(k, elements.size());\n+\n+    // Return the last erased element\n+    std::optional<NodeEvictionCandidate> last_out{std::nullopt};\n+    if (eraseSize > 0) last_out = elements.at(elements.size() - eraseSize);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1193951897",
      "id" : 1193951897,
      "line" : 87,
      "node_id" : "PRRC_kwDOABII585HKkKZ",
      "original_commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "original_line" : 87,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/node/eviction.cpp",
      "position" : 19,
      "pull_request_review_id" : 1426738328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1193951897/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-16T09:16:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1193951897",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194849842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194849842"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "An alternative approach to the duplication of these lines is to just store all the return values in a vector, like:\r\n\r\n```c++\r\nstd::vector<std::optional<NodeEvictionCandidate>> removed;\r\n...\r\nremoved.emplace_back(EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4));\r\n```\r\n\r\nand then just return the last one at the end?",
      "commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "created_at" : "2023-05-16T09:01:23Z",
      "diff_hunk" : "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194849842",
      "id" : 1194849842,
      "line" : 205,
      "node_id" : "PRRC_kwDOABII585HN_Yy",
      "original_commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "original_line" : 205,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/node/eviction.cpp",
      "position" : 88,
      "pull_request_review_id" : 1426738328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194849842/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-16T09:16:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194849842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194850365"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194850365"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "An alternative approach to the duplication of these lines is to just store all the return values in a vector, like:\r\n\r\n```c++\r\nstd::vector<std::optional<NodeEvictionCandidate>> removed;\r\n...\r\nremoved.emplace_back(EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4));\r\n```\r\n\r\nand then just return the last one at the end?",
      "commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "created_at" : "2023-05-16T09:01:47Z",
      "diff_hunk" : "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194850365",
      "id" : 1194850365,
      "line" : 205,
      "node_id" : "PRRC_kwDOABII585HN_g9",
      "original_commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "original_line" : 205,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/node/eviction.cpp",
      "position" : 88,
      "pull_request_review_id" : 1426738328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194850365/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-16T09:16:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194850365",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194857629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194857629"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Returning just the last removed element feels like a very bespoke and perhaps unintuitive interface to me. I know we don't currently need it, but perhaps it's worth generalizing this a bit more and returning all the removed elements instead of just the last one? For the callsite, it's trivial to keep just the last one? Just thinking out loud, perhaps this is difficult to do without an unacceptable overhead in terms of allocations etc.",
      "commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "created_at" : "2023-05-16T09:07:36Z",
      "diff_hunk" : "@@ -73,15 +73,22 @@ struct CompareNodeNetworkTime {\n     };\n };\n \n-//! Sort an array by the specified comparator, then erase the last K elements where predicate is true.\n-template <typename T, typename Comparator>\n-static void EraseLastKElements(\n-    std::vector<T>& elements, Comparator comparator, size_t k,\n+//! Sort an array of NodeEvictionCandidates by the specified comparator, then erase the last K elements where predicate is true.\n+//! Return the last element removed if any.\n+static std::optional<NodeEvictionCandidate> EraseLastKElements(",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194857629",
      "id" : 1194857629,
      "line" : 78,
      "node_id" : "PRRC_kwDOABII585HOBSd",
      "original_commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "original_line" : 78,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/node/eviction.cpp",
      "position" : 10,
      "pull_request_review_id" : 1426738328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194857629/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-16T09:16:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194857629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194860446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194860446"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit (and in quite a few other places):\r\n```suggestion\r\n    const std::optional<NodeId> node_id_to_evict{SelectNodeToEvict(std::move(vEvictionCandidates), force)};\r\n```",
      "commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "created_at" : "2023-05-16T09:09:56Z",
      "diff_hunk" : "@@ -925,7 +925,7 @@ bool CConnman::AttemptToEvictConnection()\n             vEvictionCandidates.push_back(candidate);\n         }\n     }\n-    const std::optional<NodeId> node_id_to_evict = SelectNodeToEvict(std::move(vEvictionCandidates));\n+    const std::optional<NodeId> node_id_to_evict = SelectNodeToEvict(std::move(vEvictionCandidates), force);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194860446",
      "id" : 1194860446,
      "line" : 928,
      "node_id" : "PRRC_kwDOABII585HOB-e",
      "original_commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "original_line" : 928,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 14,
      "pull_request_review_id" : 1426738328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194860446/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-16T09:16:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194860446",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194866624"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194866624"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "All the `last_out` assignments are behind an `if` condition, I think this theoretically can be a zero-initialized `NodeEvictionCandidate`?",
      "commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "created_at" : "2023-05-16T09:14:49Z",
      "diff_hunk" : "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect the 8 nodes with the lowest minimum ping time.\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    last = EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    if (last.has_value()) last_out = last.value();\n     // Protect 4 nodes that most recently sent us novel transactions accepted into our mempool.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n-                       [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n+                              [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect some of the remaining eviction candidates by ratios of desirable\n     // or disadvantaged characteristics.\n-    ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n-\n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    last = ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n+    if (last.has_value()) last_out = last.value();\n+\n+    if (vEvictionCandidates.empty()) {\n+        if (force) {\n+            return last_out.id;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194866624",
      "id" : 1194866624,
      "line" : 231,
      "node_id" : "PRRC_kwDOABII585HODfA",
      "original_commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "original_line" : 231,
      "original_position" : 122,
      "original_start_line" : null,
      "path" : "src/node/eviction.cpp",
      "position" : 122,
      "pull_request_review_id" : 1426738328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194866624/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-16T09:16:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194866624",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194897930"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194897930"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it would be nice to document the effect of `force` both here and for `SelectNodeToEvict`",
      "commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "created_at" : "2023-05-16T09:40:06Z",
      "diff_hunk" : "@@ -982,7 +982,7 @@ class CConnman\n      */\n     bool AlreadyConnectedToAddress(const CAddress& addr);\n \n-    bool AttemptToEvictConnection();\n+    bool AttemptToEvictConnection(bool force);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1194897930",
      "id" : 1194897930,
      "line" : 985,
      "node_id" : "PRRC_kwDOABII585HOLIK",
      "original_commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "original_line" : 985,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 5,
      "pull_request_review_id" : 1428164155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194897930/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-16T09:40:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194897930",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1195276803"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195276803"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not really familiar with this stuff, but that seems to be an MSVC bug? https://stackoverflow.com/questions/55152552/visual-studio-not-performing-rvo-when-ternary-operator-is-used-and-move-copy-cto\r\n\r\nWe do ternary operators in plenty of places, don't think we need to workaround this?",
      "commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "created_at" : "2023-05-16T14:42:16Z",
      "diff_hunk" : "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect the 8 nodes with the lowest minimum ping time.\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    last = EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    if (last.has_value()) last_out = last.value();\n     // Protect 4 nodes that most recently sent us novel transactions accepted into our mempool.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n-                       [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n+                              [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect some of the remaining eviction candidates by ratios of desirable\n     // or disadvantaged characteristics.\n-    ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n-\n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    last = ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n+    if (last.has_value()) last_out = last.value();\n+\n+    if (vEvictionCandidates.empty()) {\n+        if (force) {\n+            return last_out.id;\n+        } else {\n+            return std::nullopt;\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1195276803",
      "id" : 1195276803,
      "in_reply_to_id" : 1191709646,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585HPnoD",
      "original_commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "original_line" : 234,
      "original_position" : 125,
      "original_start_line" : 230,
      "path" : "src/node/eviction.cpp",
      "position" : null,
      "pull_request_review_id" : 1428756837,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195276803/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-16T14:42:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195276803",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1195757487"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195757487"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Does RVO even apply here? I thought it applies to complex structures, a large vector being the canonical example, where we don't want to copy every element. But here we're just returning a `NodeId` which is a `int64_t`, wrapped by `std::optional`. I don't think there's any savings by moving instead of copying one of these.",
      "commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "created_at" : "2023-05-16T22:48:35Z",
      "diff_hunk" : "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect the 8 nodes with the lowest minimum ping time.\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    last = EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    if (last.has_value()) last_out = last.value();\n     // Protect 4 nodes that most recently sent us novel transactions accepted into our mempool.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n-                       [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n+                              [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect some of the remaining eviction candidates by ratios of desirable\n     // or disadvantaged characteristics.\n-    ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n-\n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    last = ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n+    if (last.has_value()) last_out = last.value();\n+\n+    if (vEvictionCandidates.empty()) {\n+        if (force) {\n+            return last_out.id;\n+        } else {\n+            return std::nullopt;\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1195757487",
      "id" : 1195757487,
      "in_reply_to_id" : 1191709646,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585HRc-v",
      "original_commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "original_line" : 234,
      "original_position" : 125,
      "original_start_line" : 230,
      "path" : "src/node/eviction.cpp",
      "position" : null,
      "pull_request_review_id" : 1429544123,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195757487/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-16T22:48:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195757487",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1196896354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1196896354"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Oh, good point @LarryRuane. I didn't realize `NodeId` was just a typedef for `int64_t`. I think that entirely resolves it indeed.",
      "commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "created_at" : "2023-05-17T18:13:40Z",
      "diff_hunk" : "@@ -172,39 +183,56 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // we want to protect based on uptime accordingly.\n     assert(num_protected == initial_size - eviction_candidates.size());\n     const size_t remaining_to_protect{total_protect_size - num_protected};\n-    EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    auto last = EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n+    if (last.has_value()) last_out = last;\n+    return last_out;\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Keep track of the last protected candidate so we can evict it if forced\n+    NodeEvictionCandidate last_out;\n+\n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    auto last = EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect the 8 nodes with the lowest minimum ping time.\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    last = EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    if (last.has_value()) last_out = last.value();\n     // Protect 4 nodes that most recently sent us novel transactions accepted into our mempool.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    if (last.has_value()) last_out = last.value();\n     // Protect up to 8 non-tx-relay peers that have sent us novel blocks.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n-                       [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockRelayOnlyTime, 8,\n+                              [](const NodeEvictionCandidate& n) { return !n.m_relay_txs && n.fRelevantServices; });\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect 4 nodes that most recently sent us novel blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    last = EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    if (last.has_value()) last_out = last.value();\n \n     // Protect some of the remaining eviction candidates by ratios of desirable\n     // or disadvantaged characteristics.\n-    ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n-\n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    last = ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n+    if (last.has_value()) last_out = last.value();\n+\n+    if (vEvictionCandidates.empty()) {\n+        if (force) {\n+            return last_out.id;\n+        } else {\n+            return std::nullopt;\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1196896354",
      "id" : 1196896354,
      "in_reply_to_id" : 1191709646,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585HVzBi",
      "original_commit_id" : "e71d495ffbda3bc072bbaecd7580809d5087f9e6",
      "original_line" : 234,
      "original_position" : 125,
      "original_start_line" : 230,
      "path" : "src/node/eviction.cpp",
      "position" : null,
      "pull_request_review_id" : 1431107177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1196896354/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-17T20:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1196896354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@stickies-v @mzumsande thanks for your review and feedback, I refactored the PR so we evict a random peer when forced if all other peers are protected. It is MUCH simpler ;-)\r\n",
      "created_at" : "2023-05-17T20:18:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#issuecomment-1552010405",
      "id" : 1552010405,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27600",
      "node_id" : "IC_kwDOABII585cgcyl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1552010405/reactions"
      },
      "updated_at" : "2023-05-17T20:19:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1552010405",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197024384"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197024384"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This block can be skipped if `!force`\r\n\r\n```suggestion\r\n    if (vEvictionCandidates.size() > 0 && force) {\r\n```",
      "commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "created_at" : "2023-05-17T20:34:01Z",
      "diff_hunk" : "@@ -175,14 +176,22 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Hang on to one random node to evict if forced\n+    std::optional<NodeId> force_evict;\n+    if (vEvictionCandidates.size() > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197024384",
      "id" : 1197024384,
      "line" : 189,
      "node_id" : "PRRC_kwDOABII585HWSSA",
      "original_commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "original_line" : 189,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/node/eviction.cpp",
      "position" : 23,
      "pull_request_review_id" : 1431107177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197024384/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-17T20:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197024384",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197025555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197025555"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit:\r\n```suggestion\r\n        size_t randpos{FastRandomContext().randrange(vEvictionCandidates.size())};\r\n```",
      "commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "created_at" : "2023-05-17T20:35:04Z",
      "diff_hunk" : "@@ -175,14 +176,22 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     EraseLastKElements(eviction_candidates, ReverseCompareNodeTimeConnected, remaining_to_protect);\n }\n \n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates)\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force)\n {\n     // Protect connections with certain characteristics\n \n     ProtectNoBanConnections(vEvictionCandidates);\n \n     ProtectOutboundConnections(vEvictionCandidates);\n \n+    // Hang on to one random node to evict if forced\n+    std::optional<NodeId> force_evict;\n+    if (vEvictionCandidates.size() > 0) {\n+        FastRandomContext rng;\n+        size_t randpos = rng.randrange(vEvictionCandidates.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197025555",
      "id" : 1197025555,
      "line" : 191,
      "node_id" : "PRRC_kwDOABII585HWSkT",
      "original_commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "original_line" : 191,
      "original_position" : 25,
      "original_start_line" : 190,
      "path" : "src/node/eviction.cpp",
      "position" : 25,
      "pull_request_review_id" : 1431107177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197025555/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 190,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-17T20:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197025555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197030985"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197030985"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Since `force_evict` is already an `optional` defaulting to `nullopt`, this can be simplified in conjunction with [my other suggestion](https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197024384).\r\n```suggestion\r\n    if (vEvictionCandidates.empty()) return force_evict;\r\n```",
      "commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "created_at" : "2023-05-17T20:41:40Z",
      "diff_hunk" : "@@ -204,7 +213,8 @@ void ProtectEvictionCandidatesByRatio(std::vector<NodeEvictionCandidate>& evicti\n     // or disadvantaged characteristics.\n     ProtectEvictionCandidatesByRatio(vEvictionCandidates);\n \n-    if (vEvictionCandidates.empty()) return std::nullopt;\n+    if (vEvictionCandidates.empty())\n+        return force ? force_evict : std::nullopt;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197030985",
      "id" : 1197030985,
      "line" : 217,
      "node_id" : "PRRC_kwDOABII585HWT5J",
      "original_commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "original_line" : 217,
      "original_position" : 38,
      "original_start_line" : 216,
      "path" : "src/node/eviction.cpp",
      "position" : 38,
      "pull_request_review_id" : 1431107177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197030985/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 216,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-17T21:01:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197030985",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197031821"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197031821"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Documenting the `force` parameter (or linking to `AttemptToEvictConnection`) would be helpful I think.",
      "commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "created_at" : "2023-05-17T20:42:42Z",
      "diff_hunk" : "@@ -39,7 +39,7 @@ struct NodeEvictionCandidate {\n  * ratios of desirable or disadvantaged peers. If any eviction candidates\n  * remain, the selection logic chooses a peer to evict.\n  */\n-[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates);\n+[[nodiscard]] std::optional<NodeId> SelectNodeToEvict(std::vector<NodeEvictionCandidate>&& vEvictionCandidates, bool force = false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197031821",
      "id" : 1197031821,
      "line" : 42,
      "node_id" : "PRRC_kwDOABII585HWUGN",
      "original_commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "original_line" : 42,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/node/eviction.h",
      "position" : 5,
      "pull_request_review_id" : 1431107177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197031821/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-17T20:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197031821",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197037590"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197037590"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Imo, \"find\" makes it sound like this has no side effects, whereas I think this actually does disconnect the node.",
      "commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "created_at" : "2023-05-17T20:48:03Z",
      "diff_hunk" : "@@ -982,7 +982,13 @@ class CConnman\n      */\n     bool AlreadyConnectedToAddress(const CAddress& addr);\n \n-    bool AttemptToEvictConnection();\n+    /**\n+     * Attempt to find a connected node to disconnect.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197037590",
      "id" : 1197037590,
      "line" : 986,
      "node_id" : "PRRC_kwDOABII585HWVgW",
      "original_commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "original_line" : 986,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 6,
      "pull_request_review_id" : 1431107177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197037590/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-17T20:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197037590",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197041677"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197041677"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "suggested rephrasing (although I'm not sure about the \"NoBan\" qualifier, maybe we have a better established term?)\r\n```suggestion\r\n     * @param[in] force     If all connections are otherwise protected, still evict a random inbound NoBan node if it exists\r\n```",
      "commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "created_at" : "2023-05-17T20:50:59Z",
      "diff_hunk" : "@@ -982,7 +982,13 @@ class CConnman\n      */\n     bool AlreadyConnectedToAddress(const CAddress& addr);\n \n-    bool AttemptToEvictConnection();\n+    /**\n+     * Attempt to find a connected node to disconnect.\n+     * Used to make room for new inbound connections, returns true if successful.\n+     * @param[in] force     Try to evict a random node if all connections are otherwise protected.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197041677",
      "id" : 1197041677,
      "line" : 988,
      "node_id" : "PRRC_kwDOABII585HWWgN",
      "original_commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "original_line" : 988,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 8,
      "pull_request_review_id" : 1431107177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197041677/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-17T20:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197041677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197060760"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197060760"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe just move the doc from net.cpp? That's basically what I did in a WIP [branch](https://github.com/mzumsande/bitcoin/commit/1aaa795e3f43caf8aa06331e61b14b777a04a6d9).",
      "commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "created_at" : "2023-05-17T21:15:48Z",
      "diff_hunk" : "@@ -982,7 +982,13 @@ class CConnman\n      */\n     bool AlreadyConnectedToAddress(const CAddress& addr);\n \n-    bool AttemptToEvictConnection();\n+    /**\n+     * Attempt to find a connected node to disconnect.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197060760",
      "id" : 1197060760,
      "in_reply_to_id" : 1197037590,
      "line" : 986,
      "node_id" : "PRRC_kwDOABII585HWbKY",
      "original_commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "original_line" : 986,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 6,
      "pull_request_review_id" : 1431664477,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197060760/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-17T21:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197060760",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197660996"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197660996"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not sure that's a strict improvement? Documenting the interface (i.e. pretty much just the first line of what's in `net.cpp`) seems more appropriate to be in the header indeed, but all the rest sounds more like implementation details that may best be kept close to the source code? \r\n\r\nAlso, my main issue is with (having just) the word \"find\", which to me sounds like there are no side effects.",
      "commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "created_at" : "2023-05-18T10:31:24Z",
      "diff_hunk" : "@@ -982,7 +982,13 @@ class CConnman\n      */\n     bool AlreadyConnectedToAddress(const CAddress& addr);\n \n-    bool AttemptToEvictConnection();\n+    /**\n+     * Attempt to find a connected node to disconnect.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#discussion_r1197660996",
      "id" : 1197660996,
      "in_reply_to_id" : 1197037590,
      "line" : 986,
      "node_id" : "PRRC_kwDOABII585HYttE",
      "original_commit_id" : "c826187b5070ce89edcde0536183714a1c2e3207",
      "original_line" : 986,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 6,
      "pull_request_review_id" : 1432450720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27600",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197660996/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-18T10:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197660996",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @stickies-v nits addressed! ð ",
      "created_at" : "2023-05-18T14:19:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27600#issuecomment-1553133230",
      "id" : 1553133230,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27600",
      "node_id" : "IC_kwDOABII585cku6u",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553133230/reactions"
      },
      "updated_at" : "2023-05-18T14:19:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553133230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   }
]
