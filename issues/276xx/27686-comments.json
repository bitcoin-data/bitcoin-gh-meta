[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [josibake](https://github.com/bitcoin/bitcoin/pull/27686#issuecomment-1554528629) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2023-05-17T12:11:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27686#issuecomment-1551281217",
      "id" : 1551281217,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27686",
      "node_id" : "IC_kwDOABII585cdqxB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551281217/reactions"
      },
      "updated_at" : "2023-05-19T12:53:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1551281217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27686#discussion_r1198915559"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27686"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198915559"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "lol credit where credit is due, i guess? ",
      "commit_id" : "6675cf809543866792bf6706372fc9ac253d3e99",
      "created_at" : "2023-05-19T12:42:10Z",
      "diff_hunk" : "@@ -1,2 +1,332 @@\n-Work in progress release notes are on the dev wiki:\n-https://github.com/bitcoin-core/bitcoin-devwiki/wiki/25.0-Release-Notes-Draft\n\\ No newline at end of file\n+25.0 Release Notes\n+==================\n+\n+Bitcoin Core version 25.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-25.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.15+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- Transactions of non-witness size 65 and above are now allowed by mempool\n+  and relay policy. This is to better reflect the actual afforded protections\n+  against CVE-2017-12842 and open up additional use-cases of smaller transaction sizes. (#26265)\n+\n+Updated RPCs\n+------------\n+\n+- All JSON-RPC methods accept a new [named\n+  parameter](JSON-RPC-interface.md#parameter-passing) called `args` that can\n+  contain positional parameter values. This is a convenience to allow some\n+  parameter values to be passed by name without having to name every value. The\n+  python test framework and `bitcoin-cli` tool both take advantage of this, so\n+  for example:\n+\n+```sh\n+bitcoin-cli -named createwallet wallet_name=mywallet load_on_startup=1\n+```\n+\n+Can now be shortened to:\n+\n+```sh\n+bitcoin-cli -named createwallet mywallet load_on_startup=1\n+```\n+\n+- The `verifychain` RPC will now return `false` if the checks didn't fail,\n+  but couldn't be completed at the desired depth and level. This could be due\n+  to missing data while pruning, due to an insufficient dbcache or due to\n+  the node being shutdown before the call could finish. (#25574)\n+\n+- `sendrawtransaction` has a new, optional argument, `maxburnamount` with a default value of `0`.\n+  Any transaction containing an unspendable output with a value greater than `maxburnamount` will\n+  not be submitted. At present, the outputs deemed unspendable are those with scripts that begin\n+  with an `OP_RETURN` code (known as 'datacarriers'), scripts that exceed the maximum script size,\n+  and scripts that contain invalid opcodes.\n+\n+- The `testmempoolaccept` RPC now returns 2 additional results within the \"fees\" result:\n+  \"effective-feerate\" is the feerate including fees and sizes of transactions validated together if\n+  package validation was used, and also includes any modified fees from prioritisetransaction. The\n+  \"effective-includes\" result lists the wtxids of transactions whose modified fees and sizes were used\n+  in the effective-feerate (#26646).\n+\n+- `decodescript` may now infer a Miniscript descriptor under P2WSH context if it is not lacking\n+  information. (#27037)\n+\n+- `finalizepsbt` is now able to finalize a transaction with inputs spending Miniscript-compatible\n+  P2WSH scripts. (#24149)\n+\n+Changes to wallet related RPCs can be found in the Wallet section below.\n+\n+Build System\n+------------\n+\n+- The `--enable-upnp-default` and `--enable-natpmp-default` options\n+  have been removed. If you want to use port mapping, you can\n+  configure it using a .conf file, or by passing the relevant\n+  options at runtime. (#26896)\n+\n+Updated settings\n+----------------\n+\n+- If the `-checkblocks` or `-checklevel` options are explicitly provided by the\n+user, but the verification checks cannot be completed due to an insufficient\n+dbcache, Bitcoin Core will now return an error at startup. (#25574)\n+\n+- Ports specified in `-port` and `-rpcport` options are now validated at startup.\n+  Values that previously worked and were considered valid can now result in errors. (#22087)\n+\n+- Setting `-blocksonly` will now reduce the maximum mempool memory\n+  to 5MB (users may still use `-maxmempool` to override). Previously,\n+  the default 300MB would be used, leading to unexpected memory usage\n+  for users running with `-blocksonly` expecting it to eliminate\n+  mempool memory usage.\n+\n+  As unused mempool memory is shared with dbcache, this also reduces\n+  the dbcache size for users running with `-blocksonly`, potentially\n+  impacting performance.\n+- Setting `-maxconnections=0` will now disable `-dnsseed`\n+  and `-listen` (users may still set them to override).\n+\n+Changes to GUI or wallet related settings can be found in the GUI or Wallet section below.\n+\n+New settings\n+------------\n+\n+- The `shutdownnotify` option is used to specify a command to execute synchronously\n+before Bitcoin Core has begun its shutdown sequence. (#23395)\n+\n+\n+Wallet\n+------\n+\n+- The `minconf` option, which allows a user to specify the minimum number\n+of confirmations a UTXO being spent has, and the `maxconf` option,\n+which allows specifying the maximum number of confirmations, have been\n+added to the following RPCs in #25375:\n+  - `fundrawtransaction`\n+  - `send`\n+  - `walletcreatefundedpsbt`\n+  - `sendall`\n+\n+- Added a new `next_index` field in the response in `listdescriptors` to\n+  have the same format as `importdescriptors` (#26194)\n+\n+- RPC `listunspent` now has a new argument `include_immature_coinbase`\n+  to include coinbase UTXOs that don't meet the minimum spendability\n+  depth requirement (which before were silently skipped). (#25730)\n+\n+- Rescans for descriptor wallets are now significantly faster if compact\n+  block filters (BIP158) are available. Since those are not constructed\n+  by default, the configuration option \"-blockfilterindex=1\" has to be\n+  provided to take advantage of the optimization. This improves the\n+  performance of the RPC calls `rescanblockchain`, `importdescriptors`\n+  and `restorewallet`. (#25957)\n+\n+- RPC `unloadwallet` now fails if a rescan is in progress. (#26618)\n+\n+- Wallet passphrases may now contain null characters.\n+  Prior to this change, only characters up to the first\n+  null character were recognized and accepted. (#27068)\n+\n+- Address Purposes strings are now restricted to the currently known values of \"send\",\n+  \"receive\", and \"refund\". Wallets that have unrecognized purpose strings will have\n+  loading warnings, and the `listlabels` RPC will raise an error if an unrecognized purpose\n+  is requested. (#27217)\n+\n+- In the `createwallet`, `loadwallet`, `unloadwallet`, and `restorewallet` RPCs, the\n+  \"warning\" string field is deprecated in favor of a \"warnings\" field that\n+  returns a JSON array of strings to better handle multiple warning messages and\n+  for consistency with other wallet RPCs. The \"warning\" field will be fully\n+  removed from these RPCs in v26. It can be temporarily re-enabled during the\n+  deprecation period by launching bitcoind with the configuration option\n+  `-deprecatedrpc=walletwarningfield`. (#27279)\n+\n+- Descriptor wallets can now spend coins sent to P2WSH Miniscript descriptors. (#24149)\n+\n+GUI changes\n+-----------\n+\n+- The \"Mask values\" is a persistent option now. (gui#701)\n+- The \"Mask values\" option affects the \"Transaction\" view now, in addition to the\n+  \"Overview\" one. (gui#708)\n+\n+REST\n+----\n+\n+- A new `/rest/deploymentinfo` endpoint has been added for fetching various\n+  state info regarding deployments of consensus changes. (#25412)\n+\n+Binary verification\n+----\n+\n+- The binary verification script has been updated. In previous releases it\n+  would verify that the binaries had been signed with a single \"release key\".\n+  In this release and moving forward it will verify that the binaries are\n+  signed by a _threshold of trusted keys_. For more detairs and\n+  examples, see:\n+  https://github.com/bitcoin/bitcoin/blob/master/contrib/verify-binaries/README.md\n+  (#27358)\n+\n+Low-level changes\n+=================\n+\n+RPC\n+---\n+\n+- The JSON-RPC server now rejects requests where a parameter is specified multiple\n+  times with the same name, instead of silently overwriting earlier parameter values\n+  with later ones. (#26628)\n+- RPC `listsinceblock` now accepts an optional `label` argument\n+  to fetch incoming transactions having the specified label. (#25934)\n+- Previously `setban`, `addpeeraddress`, `walletcreatefundedpsbt`, methods\n+  allowed non-boolean and non-null values to be passed as boolean parameters.\n+  Any string, number, array, or object value that was passed would be treated\n+  as false. After this change, passing any value except `true`, `false`, or\n+  `null` now triggers a JSON value is not of expected type error. (#26213)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- 0xb10c\n+- 721217.xyz\n+- @RandyMcMillan\n+- amadeuszpawlik\n+- Amiti Uttarwar\n+- Andrew Chow\n+- Andrew Toth\n+- Anthony Towns\n+- Antoine Poinsot\n+- AurÃ¨le OulÃ¨s\n+- Ben Woosley\n+- Bitcoin Hodler\n+- brunoerg\n+- Bushstar\n+- Carl Dong\n+- Chris Geihsler\n+- Cory Fields\n+- David Gumberg\n+- dergoegge\n+- Dhruv Mehta\n+- Dimitris Tsapakidis\n+- dougEfish\n+- Douglas Chimento\n+- ekzyis\n+- Elichai Turkel\n+- Ethan Heilman\n+- Fabian Jahr\n+- FractalEncrypt\n+- furszy\n+- Gleb Naumenko\n+- glozow\n+- Greg Sanders\n+- Hennadii Stepanov\n+- hernanmarino\n+- ishaanam\n+- ismaelsadeeq\n+- James O'Beirne\n+- jdjkelly@gmail.com\n+- Jeff Ruane\n+- Jeffrey Czyz\n+- Jeremy Rubin\n+- Jesse Barton\n+- JoÃ£o Barbosa\n+- JoaoAJMatos\n+- John Moffett\n+- Jon Atack\n+- Jonas Schnelli\n+- jonatack\n+- Joshua Kelly\n+- josibake\n+- Juan Pablo Civile\n+- kdmukai\n+- klementtan\n+- Kolby ML\n+- kouloumos\n+- Kristaps Kaupe\n+- laanwj\n+- Larry Ruane\n+- Leonardo Araujo\n+- Leonardo Lazzaro\n+- Luke Dashjr\n+- MacroFake\n+- MarcoFalke\n+- Martin Leitner-Ankerl\n+- Martin Zumsande\n+- Matt Whitlock\n+- Matthew Zipkin\n+- merge-script",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27686#discussion_r1198915559",
      "id" : 1198915559,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Hdf_n",
      "original_commit_id" : "9ded442dffb827d8762c0becce9d10fa283d1a3a",
      "original_line" : 294,
      "original_position" : 297,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 1434354654,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27686",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198915559/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-19T12:43:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1198915559",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "reACK https://github.com/bitcoin/bitcoin/pull/27686/commits/6675cf809543866792bf6706372fc9ac253d3e99",
      "created_at" : "2023-05-19T12:53:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27686#issuecomment-1554528629",
      "id" : 1554528629,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27686",
      "node_id" : "IC_kwDOABII585cqDl1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1554528629/reactions"
      },
      "updated_at" : "2023-05-19T12:53:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1554528629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27686#discussion_r1199008977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27686"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199008977"
         }
      },
      "author_association" : "NONE",
      "body" : "```suggestion\r\n  signed by a _threshold of trusted keys_. For more details and\r\n```",
      "commit_id" : "ac8d72668c7bbd9f8771442fe25fd37f08c3f5ae",
      "created_at" : "2023-05-19T14:09:52Z",
      "diff_hunk" : "@@ -1,2 +1,331 @@\n-Work in progress release notes are on the dev wiki:\n-https://github.com/bitcoin-core/bitcoin-devwiki/wiki/25.0-Release-Notes-Draft\n\\ No newline at end of file\n+25.0 Release Notes\n+==================\n+\n+Bitcoin Core version 25.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-25.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.15+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- Transactions of non-witness size 65 and above are now allowed by mempool\n+  and relay policy. This is to better reflect the actual afforded protections\n+  against CVE-2017-12842 and open up additional use-cases of smaller transaction sizes. (#26265)\n+\n+Updated RPCs\n+------------\n+\n+- All JSON-RPC methods accept a new [named\n+  parameter](JSON-RPC-interface.md#parameter-passing) called `args` that can\n+  contain positional parameter values. This is a convenience to allow some\n+  parameter values to be passed by name without having to name every value. The\n+  python test framework and `bitcoin-cli` tool both take advantage of this, so\n+  for example:\n+\n+```sh\n+bitcoin-cli -named createwallet wallet_name=mywallet load_on_startup=1\n+```\n+\n+Can now be shortened to:\n+\n+```sh\n+bitcoin-cli -named createwallet mywallet load_on_startup=1\n+```\n+\n+- The `verifychain` RPC will now return `false` if the checks didn't fail,\n+  but couldn't be completed at the desired depth and level. This could be due\n+  to missing data while pruning, due to an insufficient dbcache or due to\n+  the node being shutdown before the call could finish. (#25574)\n+\n+- `sendrawtransaction` has a new, optional argument, `maxburnamount` with a default value of `0`.\n+  Any transaction containing an unspendable output with a value greater than `maxburnamount` will\n+  not be submitted. At present, the outputs deemed unspendable are those with scripts that begin\n+  with an `OP_RETURN` code (known as 'datacarriers'), scripts that exceed the maximum script size,\n+  and scripts that contain invalid opcodes.\n+\n+- The `testmempoolaccept` RPC now returns 2 additional results within the \"fees\" result:\n+  \"effective-feerate\" is the feerate including fees and sizes of transactions validated together if\n+  package validation was used, and also includes any modified fees from prioritisetransaction. The\n+  \"effective-includes\" result lists the wtxids of transactions whose modified fees and sizes were used\n+  in the effective-feerate (#26646).\n+\n+- `decodescript` may now infer a Miniscript descriptor under P2WSH context if it is not lacking\n+  information. (#27037)\n+\n+- `finalizepsbt` is now able to finalize a transaction with inputs spending Miniscript-compatible\n+  P2WSH scripts. (#24149)\n+\n+Changes to wallet related RPCs can be found in the Wallet section below.\n+\n+Build System\n+------------\n+\n+- The `--enable-upnp-default` and `--enable-natpmp-default` options\n+  have been removed. If you want to use port mapping, you can\n+  configure it using a .conf file, or by passing the relevant\n+  options at runtime. (#26896)\n+\n+Updated settings\n+----------------\n+\n+- If the `-checkblocks` or `-checklevel` options are explicitly provided by the\n+user, but the verification checks cannot be completed due to an insufficient\n+dbcache, Bitcoin Core will now return an error at startup. (#25574)\n+\n+- Ports specified in `-port` and `-rpcport` options are now validated at startup.\n+  Values that previously worked and were considered valid can now result in errors. (#22087)\n+\n+- Setting `-blocksonly` will now reduce the maximum mempool memory\n+  to 5MB (users may still use `-maxmempool` to override). Previously,\n+  the default 300MB would be used, leading to unexpected memory usage\n+  for users running with `-blocksonly` expecting it to eliminate\n+  mempool memory usage.\n+\n+  As unused mempool memory is shared with dbcache, this also reduces\n+  the dbcache size for users running with `-blocksonly`, potentially\n+  impacting performance.\n+- Setting `-maxconnections=0` will now disable `-dnsseed`\n+  and `-listen` (users may still set them to override).\n+\n+Changes to GUI or wallet related settings can be found in the GUI or Wallet section below.\n+\n+New settings\n+------------\n+\n+- The `shutdownnotify` option is used to specify a command to execute synchronously\n+before Bitcoin Core has begun its shutdown sequence. (#23395)\n+\n+\n+Wallet\n+------\n+\n+- The `minconf` option, which allows a user to specify the minimum number\n+of confirmations a UTXO being spent has, and the `maxconf` option,\n+which allows specifying the maximum number of confirmations, have been\n+added to the following RPCs in #25375:\n+  - `fundrawtransaction`\n+  - `send`\n+  - `walletcreatefundedpsbt`\n+  - `sendall`\n+\n+- Added a new `next_index` field in the response in `listdescriptors` to\n+  have the same format as `importdescriptors` (#26194)\n+\n+- RPC `listunspent` now has a new argument `include_immature_coinbase`\n+  to include coinbase UTXOs that don't meet the minimum spendability\n+  depth requirement (which before were silently skipped). (#25730)\n+\n+- Rescans for descriptor wallets are now significantly faster if compact\n+  block filters (BIP158) are available. Since those are not constructed\n+  by default, the configuration option \"-blockfilterindex=1\" has to be\n+  provided to take advantage of the optimization. This improves the\n+  performance of the RPC calls `rescanblockchain`, `importdescriptors`\n+  and `restorewallet`. (#25957)\n+\n+- RPC `unloadwallet` now fails if a rescan is in progress. (#26618)\n+\n+- Wallet passphrases may now contain null characters.\n+  Prior to this change, only characters up to the first\n+  null character were recognized and accepted. (#27068)\n+\n+- Address Purposes strings are now restricted to the currently known values of \"send\",\n+  \"receive\", and \"refund\". Wallets that have unrecognized purpose strings will have\n+  loading warnings, and the `listlabels` RPC will raise an error if an unrecognized purpose\n+  is requested. (#27217)\n+\n+- In the `createwallet`, `loadwallet`, `unloadwallet`, and `restorewallet` RPCs, the\n+  \"warning\" string field is deprecated in favor of a \"warnings\" field that\n+  returns a JSON array of strings to better handle multiple warning messages and\n+  for consistency with other wallet RPCs. The \"warning\" field will be fully\n+  removed from these RPCs in v26. It can be temporarily re-enabled during the\n+  deprecation period by launching bitcoind with the configuration option\n+  `-deprecatedrpc=walletwarningfield`. (#27279)\n+\n+- Descriptor wallets can now spend coins sent to P2WSH Miniscript descriptors. (#24149)\n+\n+GUI changes\n+-----------\n+\n+- The \"Mask values\" is a persistent option now. (gui#701)\n+- The \"Mask values\" option affects the \"Transaction\" view now, in addition to the\n+  \"Overview\" one. (gui#708)\n+\n+REST\n+----\n+\n+- A new `/rest/deploymentinfo` endpoint has been added for fetching various\n+  state info regarding deployments of consensus changes. (#25412)\n+\n+Binary verification\n+----\n+\n+- The binary verification script has been updated. In previous releases it\n+  would verify that the binaries had been signed with a single \"release key\".\n+  In this release and moving forward it will verify that the binaries are\n+  signed by a _threshold of trusted keys_. For more detairs and",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27686#discussion_r1199008977",
      "id" : 1199008977,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Hd2zR",
      "original_commit_id" : "6675cf809543866792bf6706372fc9ac253d3e99",
      "original_line" : 200,
      "original_position" : 203,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 1434504918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27686",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199008977/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-19T14:09:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199008977",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/43024885?v=4",
         "events_url" : "https://api.github.com/users/vostrnad/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vostrnad/followers",
         "following_url" : "https://api.github.com/users/vostrnad/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vostrnad/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vostrnad",
         "id" : 43024885,
         "login" : "vostrnad",
         "node_id" : "MDQ6VXNlcjQzMDI0ODg1",
         "organizations_url" : "https://api.github.com/users/vostrnad/orgs",
         "received_events_url" : "https://api.github.com/users/vostrnad/received_events",
         "repos_url" : "https://api.github.com/users/vostrnad/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vostrnad/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vostrnad/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vostrnad"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27686#discussion_r1199018113"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27686"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199018113"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks. Fixed.",
      "commit_id" : "ac8d72668c7bbd9f8771442fe25fd37f08c3f5ae",
      "created_at" : "2023-05-19T14:18:29Z",
      "diff_hunk" : "@@ -1,2 +1,331 @@\n-Work in progress release notes are on the dev wiki:\n-https://github.com/bitcoin-core/bitcoin-devwiki/wiki/25.0-Release-Notes-Draft\n\\ No newline at end of file\n+25.0 Release Notes\n+==================\n+\n+Bitcoin Core version 25.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-25.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.15+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- Transactions of non-witness size 65 and above are now allowed by mempool\n+  and relay policy. This is to better reflect the actual afforded protections\n+  against CVE-2017-12842 and open up additional use-cases of smaller transaction sizes. (#26265)\n+\n+Updated RPCs\n+------------\n+\n+- All JSON-RPC methods accept a new [named\n+  parameter](JSON-RPC-interface.md#parameter-passing) called `args` that can\n+  contain positional parameter values. This is a convenience to allow some\n+  parameter values to be passed by name without having to name every value. The\n+  python test framework and `bitcoin-cli` tool both take advantage of this, so\n+  for example:\n+\n+```sh\n+bitcoin-cli -named createwallet wallet_name=mywallet load_on_startup=1\n+```\n+\n+Can now be shortened to:\n+\n+```sh\n+bitcoin-cli -named createwallet mywallet load_on_startup=1\n+```\n+\n+- The `verifychain` RPC will now return `false` if the checks didn't fail,\n+  but couldn't be completed at the desired depth and level. This could be due\n+  to missing data while pruning, due to an insufficient dbcache or due to\n+  the node being shutdown before the call could finish. (#25574)\n+\n+- `sendrawtransaction` has a new, optional argument, `maxburnamount` with a default value of `0`.\n+  Any transaction containing an unspendable output with a value greater than `maxburnamount` will\n+  not be submitted. At present, the outputs deemed unspendable are those with scripts that begin\n+  with an `OP_RETURN` code (known as 'datacarriers'), scripts that exceed the maximum script size,\n+  and scripts that contain invalid opcodes.\n+\n+- The `testmempoolaccept` RPC now returns 2 additional results within the \"fees\" result:\n+  \"effective-feerate\" is the feerate including fees and sizes of transactions validated together if\n+  package validation was used, and also includes any modified fees from prioritisetransaction. The\n+  \"effective-includes\" result lists the wtxids of transactions whose modified fees and sizes were used\n+  in the effective-feerate (#26646).\n+\n+- `decodescript` may now infer a Miniscript descriptor under P2WSH context if it is not lacking\n+  information. (#27037)\n+\n+- `finalizepsbt` is now able to finalize a transaction with inputs spending Miniscript-compatible\n+  P2WSH scripts. (#24149)\n+\n+Changes to wallet related RPCs can be found in the Wallet section below.\n+\n+Build System\n+------------\n+\n+- The `--enable-upnp-default` and `--enable-natpmp-default` options\n+  have been removed. If you want to use port mapping, you can\n+  configure it using a .conf file, or by passing the relevant\n+  options at runtime. (#26896)\n+\n+Updated settings\n+----------------\n+\n+- If the `-checkblocks` or `-checklevel` options are explicitly provided by the\n+user, but the verification checks cannot be completed due to an insufficient\n+dbcache, Bitcoin Core will now return an error at startup. (#25574)\n+\n+- Ports specified in `-port` and `-rpcport` options are now validated at startup.\n+  Values that previously worked and were considered valid can now result in errors. (#22087)\n+\n+- Setting `-blocksonly` will now reduce the maximum mempool memory\n+  to 5MB (users may still use `-maxmempool` to override). Previously,\n+  the default 300MB would be used, leading to unexpected memory usage\n+  for users running with `-blocksonly` expecting it to eliminate\n+  mempool memory usage.\n+\n+  As unused mempool memory is shared with dbcache, this also reduces\n+  the dbcache size for users running with `-blocksonly`, potentially\n+  impacting performance.\n+- Setting `-maxconnections=0` will now disable `-dnsseed`\n+  and `-listen` (users may still set them to override).\n+\n+Changes to GUI or wallet related settings can be found in the GUI or Wallet section below.\n+\n+New settings\n+------------\n+\n+- The `shutdownnotify` option is used to specify a command to execute synchronously\n+before Bitcoin Core has begun its shutdown sequence. (#23395)\n+\n+\n+Wallet\n+------\n+\n+- The `minconf` option, which allows a user to specify the minimum number\n+of confirmations a UTXO being spent has, and the `maxconf` option,\n+which allows specifying the maximum number of confirmations, have been\n+added to the following RPCs in #25375:\n+  - `fundrawtransaction`\n+  - `send`\n+  - `walletcreatefundedpsbt`\n+  - `sendall`\n+\n+- Added a new `next_index` field in the response in `listdescriptors` to\n+  have the same format as `importdescriptors` (#26194)\n+\n+- RPC `listunspent` now has a new argument `include_immature_coinbase`\n+  to include coinbase UTXOs that don't meet the minimum spendability\n+  depth requirement (which before were silently skipped). (#25730)\n+\n+- Rescans for descriptor wallets are now significantly faster if compact\n+  block filters (BIP158) are available. Since those are not constructed\n+  by default, the configuration option \"-blockfilterindex=1\" has to be\n+  provided to take advantage of the optimization. This improves the\n+  performance of the RPC calls `rescanblockchain`, `importdescriptors`\n+  and `restorewallet`. (#25957)\n+\n+- RPC `unloadwallet` now fails if a rescan is in progress. (#26618)\n+\n+- Wallet passphrases may now contain null characters.\n+  Prior to this change, only characters up to the first\n+  null character were recognized and accepted. (#27068)\n+\n+- Address Purposes strings are now restricted to the currently known values of \"send\",\n+  \"receive\", and \"refund\". Wallets that have unrecognized purpose strings will have\n+  loading warnings, and the `listlabels` RPC will raise an error if an unrecognized purpose\n+  is requested. (#27217)\n+\n+- In the `createwallet`, `loadwallet`, `unloadwallet`, and `restorewallet` RPCs, the\n+  \"warning\" string field is deprecated in favor of a \"warnings\" field that\n+  returns a JSON array of strings to better handle multiple warning messages and\n+  for consistency with other wallet RPCs. The \"warning\" field will be fully\n+  removed from these RPCs in v26. It can be temporarily re-enabled during the\n+  deprecation period by launching bitcoind with the configuration option\n+  `-deprecatedrpc=walletwarningfield`. (#27279)\n+\n+- Descriptor wallets can now spend coins sent to P2WSH Miniscript descriptors. (#24149)\n+\n+GUI changes\n+-----------\n+\n+- The \"Mask values\" is a persistent option now. (gui#701)\n+- The \"Mask values\" option affects the \"Transaction\" view now, in addition to the\n+  \"Overview\" one. (gui#708)\n+\n+REST\n+----\n+\n+- A new `/rest/deploymentinfo` endpoint has been added for fetching various\n+  state info regarding deployments of consensus changes. (#25412)\n+\n+Binary verification\n+----\n+\n+- The binary verification script has been updated. In previous releases it\n+  would verify that the binaries had been signed with a single \"release key\".\n+  In this release and moving forward it will verify that the binaries are\n+  signed by a _threshold of trusted keys_. For more detairs and",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27686#discussion_r1199018113",
      "id" : 1199018113,
      "in_reply_to_id" : 1199008977,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Hd5CB",
      "original_commit_id" : "6675cf809543866792bf6706372fc9ac253d3e99",
      "original_line" : 200,
      "original_position" : 203,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 1434519162,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27686",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199018113/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-19T14:18:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1199018113",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]
