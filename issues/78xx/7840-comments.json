[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59065397"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59065397"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Perhaps the fee filter access should be hoisted out of this inner loop on transactions, and a local copy of the filter-limit made.\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-08T18:01:59Z",
      "diff_hunk" : "@@ -5808,13 +5786,40 @@ bool SendMessages(CNode* pto)\n             }\n             pto->vInventoryBlockToSend.clear();\n \n-            // Determine transactions to relay\n-            bool fSendTrickle = pto->fWhitelisted;\n-            if (pto->nNextInvSend < nNow) {\n-                fSendTrickle = true;\n-                // Use half the delay for outbound peers, as there is less privacy concern for them.\n-                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    if (pto->minFeeFilter) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        LOCK(pto->cs_feeFilter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59065397",
      "id" : 59065397,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDY1Mzk3",
      "original_commit_id" : "906e5c7fdb5bb894ec08bdd9bf683f9689cf8bdc",
      "original_line" : null,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59065397/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-20T22:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59065397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This is a very good idea-- much better than my earlier ones around avoiding mempool requests breaking privacy.\n\nYour commit message should explain that by eliminating queued entries from the mempool response and responding only at trickle time, this makes the mempool no longer leak transaction arrival order information (as the mempool itself is also sorted)-- at least no more than relay itself leaks it.\n",
      "created_at" : "2016-04-08T18:06:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-207540552",
      "id" : 207540552,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIwNzU0MDU1Mg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/207540552/reactions"
      },
      "updated_at" : "2016-04-08T18:08:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/207540552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59074603"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59074603"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\"&& vInv.size() < INVENTORY_BROADCAST_MAX\" perhaps? otherwise when a mempool request has prefilled the INV it will waste time heapifying for no reason.\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-08T19:06:55Z",
      "diff_hunk" : "@@ -5808,13 +5786,40 @@ bool SendMessages(CNode* pto)\n             }\n             pto->vInventoryBlockToSend.clear();\n \n-            // Determine transactions to relay\n-            bool fSendTrickle = pto->fWhitelisted;\n-            if (pto->nNextInvSend < nNow) {\n-                fSendTrickle = true;\n-                // Use half the delay for outbound peers, as there is less privacy concern for them.\n-                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    if (pto->minFeeFilter) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        LOCK(pto->cs_feeFilter);\n+                        if (feeRate.GetFeePerK() < pto->minFeeFilter)\n+                            continue;\n+                    }\n+                    if (pto->vInventoryTxToSend.count(hash)) continue;\n+                    pto->filterInventoryKnown.insert(hash);\n+                    vInv.push_back(inv);\n+                    if (vInv.size() == MAX_INV_SZ) {\n+                        pto->PushMessage(NetMsgType::INV, vInv);\n+                        vInv.clear();\n+                    }\n+                }\n             }\n+\n+            // Determine transactions to relay\n             if (fSendTrickle) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59074603",
      "id" : 59074603,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDc0NjAz",
      "original_commit_id" : "906e5c7fdb5bb894ec08bdd9bf683f9689cf8bdc",
      "original_line" : null,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59074603/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-20T22:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59074603",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I have a test-harness now thats sutiable for testing this, a little 13 node network. Seems to work, it caught that the conversion to use the STL heap broke the behavior: the stl heap is a max heap.\n",
      "created_at" : "2016-04-09T00:32:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-207662361",
      "id" : 207662361,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIwNzY2MjM2MQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/207662361/reactions"
      },
      "updated_at" : "2016-04-09T00:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/207662361",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@Thanks for fixing, looking good so far.\n\nWe still get a _tiny_ number of orphans in a network the consists of nothing but this code. Here is one reason why node A sends you Tx1. You getdata Tx1  Node B sends you Tx1 and Tx2 and Tx1 is a child of Tx1.  You getdata Tx2 from  node2.  Node2 responds faster. Tx2 is now an orphan.\n",
      "created_at" : "2016-04-09T03:15:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-207691938",
      "id" : 207691938,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIwNzY5MTkzOA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/207691938/reactions"
      },
      "updated_at" : "2016-04-09T03:18:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/207691938",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59134050"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59134050"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-10T13:38:11Z",
      "diff_hunk" : "@@ -5808,13 +5786,40 @@ bool SendMessages(CNode* pto)\n             }\n             pto->vInventoryBlockToSend.clear();\n \n-            // Determine transactions to relay\n-            bool fSendTrickle = pto->fWhitelisted;\n-            if (pto->nNextInvSend < nNow) {\n-                fSendTrickle = true;\n-                // Use half the delay for outbound peers, as there is less privacy concern for them.\n-                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    if (pto->minFeeFilter) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        LOCK(pto->cs_feeFilter);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59134050",
      "id" : 59134050,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTM0MDUw",
      "original_commit_id" : "906e5c7fdb5bb894ec08bdd9bf683f9689cf8bdc",
      "original_line" : null,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59134050/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-20T22:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59134050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59134082"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59134082"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done.\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-10T13:39:39Z",
      "diff_hunk" : "@@ -5808,13 +5786,40 @@ bool SendMessages(CNode* pto)\n             }\n             pto->vInventoryBlockToSend.clear();\n \n-            // Determine transactions to relay\n-            bool fSendTrickle = pto->fWhitelisted;\n-            if (pto->nNextInvSend < nNow) {\n-                fSendTrickle = true;\n-                // Use half the delay for outbound peers, as there is less privacy concern for them.\n-                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    if (pto->minFeeFilter) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        LOCK(pto->cs_feeFilter);\n+                        if (feeRate.GetFeePerK() < pto->minFeeFilter)\n+                            continue;\n+                    }\n+                    if (pto->vInventoryTxToSend.count(hash)) continue;\n+                    pto->filterInventoryKnown.insert(hash);\n+                    vInv.push_back(inv);\n+                    if (vInv.size() == MAX_INV_SZ) {\n+                        pto->PushMessage(NetMsgType::INV, vInv);\n+                        vInv.clear();\n+                    }\n+                }\n             }\n+\n+            // Determine transactions to relay\n             if (fSendTrickle) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59134082",
      "id" : 59134082,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTM0MDgy",
      "original_commit_id" : "906e5c7fdb5bb894ec08bdd9bf683f9689cf8bdc",
      "original_line" : null,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59134082/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-20T22:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59134082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I added a commit to sort the response of mempool requests in dependency order, and renamed the PR to something more general.\n",
      "created_at" : "2016-04-10T13:41:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-207987070",
      "id" : 207987070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIwNzk4NzA3MA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/207987070/reactions"
      },
      "updated_at" : "2016-04-10T13:41:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/207987070",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "concept ACK\n",
      "created_at" : "2016-04-11T06:48:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-208186907",
      "id" : 208186907,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIwODE4NjkwNw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/208186907/reactions"
      },
      "updated_at" : "2016-04-11T06:48:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/208186907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=4",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "node_id" : "MDQ6VXNlcjQxMzM5NQ==",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59262462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59262462"
         }
      },
      "author_association" : "MEMBER",
      "body" : "INVENTORY_BROADCAST_MAX is supposed to apply to rate-limited transaction relay, while vInv at this point can be holding blocks, and/or any leftovers from the mempool command.  This seems like it's not the right comparison.\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-11T19:07:12Z",
      "diff_hunk" : "@@ -5779,49 +5770,93 @@ bool SendMessages(CNode* pto)\n         // Message: inventory\n         //\n         vector<CInv> vInv;\n-        vector<CInv> vInvWait;\n         {\n+            // Check whether periodic sends should happen\n             bool fSendTrickle = pto->fWhitelisted;\n             if (pto->nNextInvSend < nNow) {\n                 fSendTrickle = true;\n-                pto->nNextInvSend = PoissonNextSend(nNow, AVG_INVENTORY_BROADCAST_INTERVAL);\n+                // Use half the delay for outbound peers, as there is less privacy concern for them.\n+                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n             }\n+\n             LOCK(pto->cs_inventory);\n-            vInv.reserve(std::min<size_t>(1000, pto->vInventoryToSend.size()));\n-            vInvWait.reserve(pto->vInventoryToSend.size());\n-            BOOST_FOREACH(const CInv& inv, pto->vInventoryToSend)\n-            {\n-                if (inv.type == MSG_TX && pto->filterInventoryKnown.contains(inv.hash))\n-                    continue;\n+            vInv.reserve(std::max<size_t>(pto->vInventoryBlockToSend.size(), INVENTORY_BROADCAST_MAX));\n \n-                // trickle out tx inv to protect privacy\n-                if (inv.type == MSG_TX && !fSendTrickle)\n+            // Add blocks\n+            BOOST_FOREACH(const uint256& hash, pto->vInventoryBlockToSend) {\n+                vInv.push_back(CInv(MSG_BLOCK, hash));\n+            }\n+            pto->vInventoryBlockToSend.clear();\n+\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+                CAmount filterrate = 0;\n                 {\n-                    // 1/4 of tx invs blast to all immediately\n-                    static uint256 hashSalt;\n-                    if (hashSalt.IsNull())\n-                        hashSalt = GetRandHash();\n-                    uint256 hashRand = ArithToUint256(UintToArith256(inv.hash) ^ UintToArith256(hashSalt));\n-                    hashRand = Hash(BEGIN(hashRand), END(hashRand));\n-                    bool fTrickleWait = ((UintToArith256(hashRand) & 3) != 0);\n+                    LOCK(pto->cs_feeFilter);\n+                    filterrate = pto->minFeeFilter;\n+                }\n \n-                    if (fTrickleWait)\n-                    {\n-                        vInvWait.push_back(inv);\n-                        continue;\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    if (pto->vInventoryTxToSend.count(hash)) continue;\n+                    if (filterrate) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        if (feeRate.GetFeePerK() < filterrate)\n+                            continue;\n+                    }\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    pto->filterInventoryKnown.insert(hash);\n+                    vInv.push_back(inv);\n+                    if (vInv.size() == MAX_INV_SZ) {\n+                        pto->PushMessage(NetMsgType::INV, vInv);\n+                        vInv.clear();\n                     }\n                 }\n+            }\n \n-                pto->filterInventoryKnown.insert(inv.hash);\n-\n-                vInv.push_back(inv);\n-                if (vInv.size() >= 1000)\n-                {\n-                    pto->PushMessage(NetMsgType::INV, vInv);\n-                    vInv.clear();\n+            // Determine transactions to relay\n+            if (fSendTrickle && vInv.size() < INVENTORY_BROADCAST_MAX) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59262462",
      "id" : 59262462,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjYyNDYy",
      "original_commit_id" : "0cdc0fa69bce10135b1297518c51299115b7c53b",
      "original_line" : null,
      "original_position" : 148,
      "original_start_line" : null,
      "path" : "src/main.cpp",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59262462/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-20T22:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59262462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59265363"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59265363"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Perhaps add a comment explaining why the vector is needed for blocks?\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-11T19:27:22Z",
      "diff_hunk" : "@@ -396,14 +396,17 @@ class CNode\n \n     // inventory based relay\n     CRollingBloomFilter filterInventoryKnown;\n-    std::vector<CInv> vInventoryToSend;\n+    std::set<uint256> vInventoryTxToSend;\n+    std::vector<uint256> vInventoryBlockToSend;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59265363",
      "id" : 59265363,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY1MzYz",
      "original_commit_id" : "0cdc0fa69bce10135b1297518c51299115b7c53b",
      "original_line" : null,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59265363/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-20T22:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59265363",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, will test.\n",
      "created_at" : "2016-04-11T19:34:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-208519133",
      "id" : 208519133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIwODUxOTEzMw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/208519133/reactions"
      },
      "updated_at" : "2016-04-11T19:34:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/208519133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59266764"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59266764"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"inventor\" -> \"inventory\"\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-11T19:36:26Z",
      "diff_hunk" : "@@ -99,9 +99,12 @@ static const unsigned int MAX_REJECT_MESSAGE_LENGTH = 111;\n static const unsigned int AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL = 24 * 24 * 60;\n /** Average delay between peer address broadcasts in seconds. */\n static const unsigned int AVG_ADDRESS_BROADCAST_INTERVAL = 30;\n-/** Average delay between trickled inventory broadcasts in seconds.\n- *  Blocks, whitelisted receivers, and a random 25% of transactions bypass this. */\n-static const unsigned int AVG_INVENTORY_BROADCAST_INTERVAL = 5;\n+/** Average delay between trickled inventory transmissions in seconds.\n+ *  Blocks and whitelisted receivers bypass this, outbound peers get half this delay. */\n+static const unsigned int INVENTORY_BROADCAST_INTERVAL = 5;\n+/** Maximum number of inventor items to send per transmission.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r59266764",
      "id" : 59266764,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjY2NzY0",
      "original_commit_id" : "0cdc0fa69bce10135b1297518c51299115b7c53b",
      "original_line" : null,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/main.h",
      "position" : null,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59266764/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-20T22:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59266764",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added two commits to address the comments.\n\nMempool requests are now not filtered by vInventoryTxToSend, but instead every mempool inv sent as a response is removed from vInventoryTxToSend.\n",
      "created_at" : "2016-04-12T14:40:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-208939536",
      "id" : 208939536,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIwODkzOTUzNg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/208939536/reactions"
      },
      "updated_at" : "2016-04-12T14:40:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/208939536",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "In a test topology over 48 hours this reduced the addition of orphan transactions from 436/hr to 2.3/hr.\n",
      "created_at" : "2016-04-12T21:30:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-209110680",
      "id" : 209110680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIwOTExMDY4MA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209110680/reactions"
      },
      "updated_at" : "2016-04-12T21:30:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209110680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Also, utack latest improvements.\n",
      "created_at" : "2016-04-12T21:40:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-209114666",
      "id" : 209114666,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIwOTExNDY2Ng==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209114666/reactions"
      },
      "updated_at" : "2016-04-12T21:40:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209114666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "concept ACK, utACK 98305df\n",
      "created_at" : "2016-04-13T02:32:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-209199421",
      "id" : 209199421,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIwOTE5OTQyMQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209199421/reactions"
      },
      "updated_at" : "2016-04-13T02:32:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/209199421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=4",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "node_id" : "MDQ6VXNlcjQxMzM5NQ==",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa: any squashing interest?\n",
      "created_at" : "2016-04-19T07:05:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-211763254",
      "id" : 211763254,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIxMTc2MzI1NA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/211763254/reactions"
      },
      "updated_at" : "2016-04-19T07:05:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/211763254",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and squashed.\n",
      "created_at" : "2016-04-19T17:54:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-212040399",
      "id" : 212040399,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIxMjA0MDM5OQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/212040399/reactions"
      },
      "updated_at" : "2016-04-19T17:54:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/212040399",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Also renamed the vInventoryTxToSend to setInventoryTxToSend, and restructured the tx send loop a bit to be less deeply nested.\n",
      "created_at" : "2016-04-19T18:07:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-212049033",
      "id" : 212049033,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIxMjA0OTAzMw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/212049033/reactions"
      },
      "updated_at" : "2016-04-19T18:07:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/212049033",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Travis CI timeout, doesn't look like a real failure.\n",
      "created_at" : "2016-04-20T04:58:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-212257204",
      "id" : 212257204,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIxMjI1NzIwNA==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/212257204/reactions"
      },
      "updated_at" : "2016-04-20T04:58:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/212257204",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added one more commit by @gmaxwell to move all inv filtering to the send stage (which avoids announcing things that are no longer in our mempool and bloom filter updates for those).\n\nI'm sorry for the increasingly expansing scope this PR has had, so I'm not going to touch functionality any further unless bugs in it are found.\n",
      "created_at" : "2016-04-20T19:26:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-212568919",
      "id" : 212568919,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIxMjU2ODkxOQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/212568919/reactions"
      },
      "updated_at" : "2016-04-20T19:26:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/212568919",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60480987"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60480987"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It seems that in general it can happen that `vInv.size() > MAX_INV_SZ`, namely when `pto->vInventoryBlockToSend.size() >= MAX_INV_SZ`. Are we assuming that this isn't the case?\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-20T20:26:13Z",
      "diff_hunk" : "@@ -5811,13 +5786,52 @@ bool SendMessages(CNode* pto)\n             }\n             pto->vInventoryBlockToSend.clear();\n \n-            // Determine transactions to relay\n+            // Check whether periodic sends should happen\n             bool fSendTrickle = pto->fWhitelisted;\n             if (pto->nNextInvSend < nNow) {\n                 fSendTrickle = true;\n                 // Use half the delay for outbound peers, as there is less privacy concern for them.\n                 pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n             }\n+\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+                CAmount filterrate = 0;\n+                {\n+                    LOCK(pto->cs_feeFilter);\n+                    filterrate = pto->minFeeFilter;\n+                }\n+\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    pto->setInventoryTxToSend.erase(hash);\n+                    if (filterrate) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        if (feeRate.GetFeePerK() < filterrate)\n+                            continue;\n+                    }\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    pto->filterInventoryKnown.insert(hash);\n+                    vInv.push_back(inv);\n+                    if (vInv.size() == MAX_INV_SZ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60480987",
      "id" : 60480987,
      "line" : 5842,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDgwOTg3",
      "original_commit_id" : "66a5885a9ed3a881da6bed57b31d654c01ede334",
      "original_line" : null,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/main.cpp",
      "position" : 181,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60480987/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-20T22:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60480987",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2582071?v=4",
         "events_url" : "https://api.github.com/users/jonasnick/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasnick/followers",
         "following_url" : "https://api.github.com/users/jonasnick/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasnick/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasnick",
         "id" : 2582071,
         "login" : "jonasnick",
         "node_id" : "MDQ6VXNlcjI1ODIwNzE=",
         "organizations_url" : "https://api.github.com/users/jonasnick/orgs",
         "received_events_url" : "https://api.github.com/users/jonasnick/received_events",
         "repos_url" : "https://api.github.com/users/jonasnick/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasnick/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasnick/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasnick"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60481489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60481489"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Entries are added one by one to vInv, and all call sites where that happens are followed by a max size test, so I don't think vInv can exceed MAX_INV_SZ.\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-20T20:29:27Z",
      "diff_hunk" : "@@ -5785,49 +5781,123 @@ bool SendMessages(CNode* pto)\n         // Message: inventory\n         //\n         vector<CInv> vInv;\n-        vector<CInv> vInvWait;\n         {\n+            LOCK(pto->cs_inventory);\n+            vInv.reserve(std::max<size_t>(pto->vInventoryBlockToSend.size(), INVENTORY_BROADCAST_MAX));\n+\n+            // Add blocks\n+            BOOST_FOREACH(const uint256& hash, pto->vInventoryBlockToSend) {\n+                vInv.push_back(CInv(MSG_BLOCK, hash));\n+            }\n+            pto->vInventoryBlockToSend.clear();\n+\n+            // Check whether periodic sends should happen\n             bool fSendTrickle = pto->fWhitelisted;\n             if (pto->nNextInvSend < nNow) {\n                 fSendTrickle = true;\n-                pto->nNextInvSend = PoissonNextSend(nNow, AVG_INVENTORY_BROADCAST_INTERVAL);\n+                // Use half the delay for outbound peers, as there is less privacy concern for them.\n+                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n             }\n-            LOCK(pto->cs_inventory);\n-            vInv.reserve(std::min<size_t>(1000, pto->vInventoryToSend.size()));\n-            vInvWait.reserve(pto->vInventoryToSend.size());\n-            BOOST_FOREACH(const CInv& inv, pto->vInventoryToSend)\n-            {\n-                if (inv.type == MSG_TX && pto->filterInventoryKnown.contains(inv.hash))\n-                    continue;\n \n-                // trickle out tx inv to protect privacy\n-                if (inv.type == MSG_TX && !fSendTrickle)\n+            // Time to send but the peer has requested we not relay transactions.\n+            if (fSendTrickle) {\n+                LOCK(pto->cs_filter);\n+                if (!pto->fRelayTxes) pto->setInventoryTxToSend.clear();\n+            }\n+\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+                CAmount filterrate = 0;\n                 {\n-                    // 1/4 of tx invs blast to all immediately\n-                    static uint256 hashSalt;\n-                    if (hashSalt.IsNull())\n-                        hashSalt = GetRandHash();\n-                    uint256 hashRand = ArithToUint256(UintToArith256(inv.hash) ^ UintToArith256(hashSalt));\n-                    hashRand = Hash(BEGIN(hashRand), END(hashRand));\n-                    bool fTrickleWait = ((UintToArith256(hashRand) & 3) != 0);\n+                    LOCK(pto->cs_feeFilter);\n+                    filterrate = pto->minFeeFilter;\n+                }\n \n-                    if (fTrickleWait)\n-                    {\n-                        vInvWait.push_back(inv);\n-                        continue;\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    pto->setInventoryTxToSend.erase(hash);\n+                    if (filterrate) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        if (feeRate.GetFeePerK() < filterrate)\n+                            continue;\n+                    }\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    pto->filterInventoryKnown.insert(hash);\n+                    vInv.push_back(inv);\n+                    if (vInv.size() == MAX_INV_SZ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60481489",
      "id" : 60481489,
      "line" : 5842,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDgxNDg5",
      "original_commit_id" : "1a16f859e4dab32578e3cef1e3fcd6e71de5df28",
      "original_line" : null,
      "original_position" : 177,
      "original_start_line" : null,
      "path" : "src/main.cpp",
      "position" : 181,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60481489/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-20T22:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60481489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60482072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60482072"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "not here https://github.com/sipa/bitcoin/blob/splitinvtxblock/src/main.cpp#L5790\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-20T20:33:01Z",
      "diff_hunk" : "@@ -5811,13 +5786,52 @@ bool SendMessages(CNode* pto)\n             }\n             pto->vInventoryBlockToSend.clear();\n \n-            // Determine transactions to relay\n+            // Check whether periodic sends should happen\n             bool fSendTrickle = pto->fWhitelisted;\n             if (pto->nNextInvSend < nNow) {\n                 fSendTrickle = true;\n                 // Use half the delay for outbound peers, as there is less privacy concern for them.\n                 pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n             }\n+\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+                CAmount filterrate = 0;\n+                {\n+                    LOCK(pto->cs_feeFilter);\n+                    filterrate = pto->minFeeFilter;\n+                }\n+\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    pto->setInventoryTxToSend.erase(hash);\n+                    if (filterrate) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        if (feeRate.GetFeePerK() < filterrate)\n+                            continue;\n+                    }\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    pto->filterInventoryKnown.insert(hash);\n+                    vInv.push_back(inv);\n+                    if (vInv.size() == MAX_INV_SZ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60482072",
      "id" : 60482072,
      "line" : 5842,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDgyMDcy",
      "original_commit_id" : "66a5885a9ed3a881da6bed57b31d654c01ede334",
      "original_line" : null,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/main.cpp",
      "position" : 181,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60482072/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-20T22:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60482072",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2582071?v=4",
         "events_url" : "https://api.github.com/users/jonasnick/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasnick/followers",
         "following_url" : "https://api.github.com/users/jonasnick/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasnick/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasnick",
         "id" : 2582071,
         "login" : "jonasnick",
         "node_id" : "MDQ6VXNlcjI1ODIwNzE=",
         "organizations_url" : "https://api.github.com/users/jonasnick/orgs",
         "received_events_url" : "https://api.github.com/users/jonasnick/received_events",
         "repos_url" : "https://api.github.com/users/jonasnick/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasnick/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasnick/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasnick"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60484739"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60484739"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, good point. There may not be other mechanisms that prevent over 5000 blocks being inved at once.\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-20T20:49:09Z",
      "diff_hunk" : "@@ -5785,49 +5781,123 @@ bool SendMessages(CNode* pto)\n         // Message: inventory\n         //\n         vector<CInv> vInv;\n-        vector<CInv> vInvWait;\n         {\n+            LOCK(pto->cs_inventory);\n+            vInv.reserve(std::max<size_t>(pto->vInventoryBlockToSend.size(), INVENTORY_BROADCAST_MAX));\n+\n+            // Add blocks\n+            BOOST_FOREACH(const uint256& hash, pto->vInventoryBlockToSend) {\n+                vInv.push_back(CInv(MSG_BLOCK, hash));\n+            }\n+            pto->vInventoryBlockToSend.clear();\n+\n+            // Check whether periodic sends should happen\n             bool fSendTrickle = pto->fWhitelisted;\n             if (pto->nNextInvSend < nNow) {\n                 fSendTrickle = true;\n-                pto->nNextInvSend = PoissonNextSend(nNow, AVG_INVENTORY_BROADCAST_INTERVAL);\n+                // Use half the delay for outbound peers, as there is less privacy concern for them.\n+                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n             }\n-            LOCK(pto->cs_inventory);\n-            vInv.reserve(std::min<size_t>(1000, pto->vInventoryToSend.size()));\n-            vInvWait.reserve(pto->vInventoryToSend.size());\n-            BOOST_FOREACH(const CInv& inv, pto->vInventoryToSend)\n-            {\n-                if (inv.type == MSG_TX && pto->filterInventoryKnown.contains(inv.hash))\n-                    continue;\n \n-                // trickle out tx inv to protect privacy\n-                if (inv.type == MSG_TX && !fSendTrickle)\n+            // Time to send but the peer has requested we not relay transactions.\n+            if (fSendTrickle) {\n+                LOCK(pto->cs_filter);\n+                if (!pto->fRelayTxes) pto->setInventoryTxToSend.clear();\n+            }\n+\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+                CAmount filterrate = 0;\n                 {\n-                    // 1/4 of tx invs blast to all immediately\n-                    static uint256 hashSalt;\n-                    if (hashSalt.IsNull())\n-                        hashSalt = GetRandHash();\n-                    uint256 hashRand = ArithToUint256(UintToArith256(inv.hash) ^ UintToArith256(hashSalt));\n-                    hashRand = Hash(BEGIN(hashRand), END(hashRand));\n-                    bool fTrickleWait = ((UintToArith256(hashRand) & 3) != 0);\n+                    LOCK(pto->cs_feeFilter);\n+                    filterrate = pto->minFeeFilter;\n+                }\n \n-                    if (fTrickleWait)\n-                    {\n-                        vInvWait.push_back(inv);\n-                        continue;\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    pto->setInventoryTxToSend.erase(hash);\n+                    if (filterrate) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        if (feeRate.GetFeePerK() < filterrate)\n+                            continue;\n+                    }\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    pto->filterInventoryKnown.insert(hash);\n+                    vInv.push_back(inv);\n+                    if (vInv.size() == MAX_INV_SZ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60484739",
      "id" : 60484739,
      "line" : 5842,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDg0NzM5",
      "original_commit_id" : "1a16f859e4dab32578e3cef1e3fcd6e71de5df28",
      "original_line" : null,
      "original_position" : 177,
      "original_start_line" : null,
      "path" : "src/main.cpp",
      "position" : 181,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60484739/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-20T22:36:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60484739",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60499641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60499641"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-20T22:36:14Z",
      "diff_hunk" : "@@ -5785,49 +5781,123 @@ bool SendMessages(CNode* pto)\n         // Message: inventory\n         //\n         vector<CInv> vInv;\n-        vector<CInv> vInvWait;\n         {\n+            LOCK(pto->cs_inventory);\n+            vInv.reserve(std::max<size_t>(pto->vInventoryBlockToSend.size(), INVENTORY_BROADCAST_MAX));\n+\n+            // Add blocks\n+            BOOST_FOREACH(const uint256& hash, pto->vInventoryBlockToSend) {\n+                vInv.push_back(CInv(MSG_BLOCK, hash));\n+            }\n+            pto->vInventoryBlockToSend.clear();\n+\n+            // Check whether periodic sends should happen\n             bool fSendTrickle = pto->fWhitelisted;\n             if (pto->nNextInvSend < nNow) {\n                 fSendTrickle = true;\n-                pto->nNextInvSend = PoissonNextSend(nNow, AVG_INVENTORY_BROADCAST_INTERVAL);\n+                // Use half the delay for outbound peers, as there is less privacy concern for them.\n+                pto->nNextInvSend = PoissonNextSend(nNow, INVENTORY_BROADCAST_INTERVAL >> !pto->fInbound);\n             }\n-            LOCK(pto->cs_inventory);\n-            vInv.reserve(std::min<size_t>(1000, pto->vInventoryToSend.size()));\n-            vInvWait.reserve(pto->vInventoryToSend.size());\n-            BOOST_FOREACH(const CInv& inv, pto->vInventoryToSend)\n-            {\n-                if (inv.type == MSG_TX && pto->filterInventoryKnown.contains(inv.hash))\n-                    continue;\n \n-                // trickle out tx inv to protect privacy\n-                if (inv.type == MSG_TX && !fSendTrickle)\n+            // Time to send but the peer has requested we not relay transactions.\n+            if (fSendTrickle) {\n+                LOCK(pto->cs_filter);\n+                if (!pto->fRelayTxes) pto->setInventoryTxToSend.clear();\n+            }\n+\n+            // Respond to BIP35 mempool requests\n+            if (fSendTrickle && pto->fSendMempool) {\n+                std::vector<uint256> vtxid;\n+                mempool.queryHashes(vtxid);\n+                pto->fSendMempool = false;\n+                CAmount filterrate = 0;\n                 {\n-                    // 1/4 of tx invs blast to all immediately\n-                    static uint256 hashSalt;\n-                    if (hashSalt.IsNull())\n-                        hashSalt = GetRandHash();\n-                    uint256 hashRand = ArithToUint256(UintToArith256(inv.hash) ^ UintToArith256(hashSalt));\n-                    hashRand = Hash(BEGIN(hashRand), END(hashRand));\n-                    bool fTrickleWait = ((UintToArith256(hashRand) & 3) != 0);\n+                    LOCK(pto->cs_feeFilter);\n+                    filterrate = pto->minFeeFilter;\n+                }\n \n-                    if (fTrickleWait)\n-                    {\n-                        vInvWait.push_back(inv);\n-                        continue;\n+                LOCK(pto->cs_filter);\n+\n+                BOOST_FOREACH(const uint256& hash, vtxid) {\n+                    CInv inv(MSG_TX, hash);\n+                    pto->setInventoryTxToSend.erase(hash);\n+                    if (filterrate) {\n+                        CFeeRate feeRate;\n+                        mempool.lookupFeeRate(hash, feeRate);\n+                        if (feeRate.GetFeePerK() < filterrate)\n+                            continue;\n+                    }\n+                    if (pto->pfilter) {\n+                        CTransaction tx;\n+                        bool fInMemPool = mempool.lookup(hash, tx);\n+                        if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n+                        if (!pto->pfilter->IsRelevantAndUpdate(tx)) continue;\n+                    }\n+                    pto->filterInventoryKnown.insert(hash);\n+                    vInv.push_back(inv);\n+                    if (vInv.size() == MAX_INV_SZ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60499641",
      "id" : 60499641,
      "line" : 5842,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDk5NjQx",
      "original_commit_id" : "1a16f859e4dab32578e3cef1e3fcd6e71de5df28",
      "original_line" : null,
      "original_position" : 177,
      "original_start_line" : null,
      "path" : "src/main.cpp",
      "position" : 181,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60499641/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-20T22:36:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60499641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sipa could you update your original PR description with the full scope of this PR now? (for others)\n",
      "created_at" : "2016-04-21T04:08:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-212730679",
      "id" : 212730679,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIxMjczMDY3OQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/212730679/reactions"
      },
      "updated_at" : "2016-04-22T00:05:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/212730679",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/413395?v=4",
         "events_url" : "https://api.github.com/users/dcousens/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dcousens/followers",
         "following_url" : "https://api.github.com/users/dcousens/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dcousens/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dcousens",
         "id" : 413395,
         "login" : "dcousens",
         "node_id" : "MDQ6VXNlcjQxMzM5NQ==",
         "organizations_url" : "https://api.github.com/users/dcousens/orgs",
         "received_events_url" : "https://api.github.com/users/dcousens/received_events",
         "repos_url" : "https://api.github.com/users/dcousens/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dcousens/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dcousens"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK.\n",
      "created_at" : "2016-04-21T19:04:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-213071501",
      "id" : 213071501,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIxMzA3MTUwMQ==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/213071501/reactions"
      },
      "updated_at" : "2016-04-21T19:04:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/213071501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ack\n",
      "created_at" : "2016-04-22T08:08:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-213315597",
      "id" : 213315597,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIxMzMxNTU5Nw==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/213315597/reactions"
      },
      "updated_at" : "2016-04-22T08:08:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/213315597",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2582071?v=4",
         "events_url" : "https://api.github.com/users/jonasnick/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonasnick/followers",
         "following_url" : "https://api.github.com/users/jonasnick/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonasnick/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonasnick",
         "id" : 2582071,
         "login" : "jonasnick",
         "node_id" : "MDQ6VXNlcjI1ODIwNzE=",
         "organizations_url" : "https://api.github.com/users/jonasnick/orgs",
         "received_events_url" : "https://api.github.com/users/jonasnick/received_events",
         "repos_url" : "https://api.github.com/users/jonasnick/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonasnick/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonasnick/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonasnick"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60797176"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60797176"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: What do you think of exposing the `DepthAndScoreComparator` defined here, and eliminating the `CompareInvMempoolOrder` object declared in `main.cpp` by moving the comparator it defines (which reverses the comparison) into this class? \n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-22T20:18:27Z",
      "diff_hunk" : "@@ -752,6 +752,31 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     assert(innerUsage == cachedInnerUsage);\n }\n \n+bool CTxMemPool::CompareDepthAndScore(const uint256& hasha, const uint256& hashb)\n+{\n+    LOCK(cs);\n+    indexed_transaction_set::const_iterator i = mapTx.find(hasha);\n+    if (i == mapTx.end()) return false;\n+    indexed_transaction_set::const_iterator j = mapTx.find(hashb);\n+    if (j == mapTx.end()) return true;\n+    uint64_t counta = i->GetCountWithAncestors();\n+    uint64_t countb = j->GetCountWithAncestors();\n+    if (counta == countb) {\n+        return CompareTxMemPoolEntryByScore()(*i, *j);\n+    }\n+    return counta < countb;\n+}\n+\n+namespace {\n+class DepthAndScoreComparator\n+{\n+    CTxMemPool *mp;\n+public:\n+    DepthAndScoreComparator(CTxMemPool *mempool) : mp(mempool) {}\n+    bool operator()(const uint256& a, const uint256& b) { return mp->CompareDepthAndScore(a, b); }\n+};\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60797176",
      "id" : 60797176,
      "line" : 778,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNzk3MTc2",
      "original_commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "original_line" : null,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 27,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60797176/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-22T20:18:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60797176",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK, apart from my question about whether we should combine the two comparators that are being introduced.\n\nCouple notes:\n- `RelayTransaction` no longer requires a feerate, and `AcceptToMemoryPool` no longer needs to fill a feerate in.  We can clean this up in a future PR.\n- I noticed while testing that `CTxMemPool::queryHashes` is what we use in the RPC call `getrawmempool`.  It's hard for me to imagine anyone would care (and in fact the new sort order on the results seems handy!), but perhaps we should flag the change in the release notes?\n",
      "created_at" : "2016-04-22T20:24:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-213576906",
      "id" : 213576906,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIxMzU3NjkwNg==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/213576906/reactions"
      },
      "updated_at" : "2016-04-22T20:24:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/213576906",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60801618"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60801618"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The comparator over there sorts iterators to set items, so there is more difference.\n\nI do think the comparator (or at least a base comparator) should be exposed here, which grabs the mempool lock etc. Perhaps the other comparator can then take a ref to the first one as an argument to add the reversing and set iterator dereferencing.\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-22T20:54:08Z",
      "diff_hunk" : "@@ -752,6 +752,31 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     assert(innerUsage == cachedInnerUsage);\n }\n \n+bool CTxMemPool::CompareDepthAndScore(const uint256& hasha, const uint256& hashb)\n+{\n+    LOCK(cs);\n+    indexed_transaction_set::const_iterator i = mapTx.find(hasha);\n+    if (i == mapTx.end()) return false;\n+    indexed_transaction_set::const_iterator j = mapTx.find(hashb);\n+    if (j == mapTx.end()) return true;\n+    uint64_t counta = i->GetCountWithAncestors();\n+    uint64_t countb = j->GetCountWithAncestors();\n+    if (counta == countb) {\n+        return CompareTxMemPoolEntryByScore()(*i, *j);\n+    }\n+    return counta < countb;\n+}\n+\n+namespace {\n+class DepthAndScoreComparator\n+{\n+    CTxMemPool *mp;\n+public:\n+    DepthAndScoreComparator(CTxMemPool *mempool) : mp(mempool) {}\n+    bool operator()(const uint256& a, const uint256& b) { return mp->CompareDepthAndScore(a, b); }\n+};\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60801618",
      "id" : 60801618,
      "line" : 778,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODAxNjE4",
      "original_commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "original_line" : null,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 27,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60801618/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-22T20:54:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60801618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60803349"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60803349"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I was thinking that because the main.cpp comparator acts on different objects, it'd be easy to just move that function into this class (and explain in comments what the two comparators were for and why they are subtly different!), but your suggestion seems reasonable to me as well.  I suppose its not awesome for the implementation details in main.cpp to leak into txmempool...\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-22T21:08:09Z",
      "diff_hunk" : "@@ -752,6 +752,31 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     assert(innerUsage == cachedInnerUsage);\n }\n \n+bool CTxMemPool::CompareDepthAndScore(const uint256& hasha, const uint256& hashb)\n+{\n+    LOCK(cs);\n+    indexed_transaction_set::const_iterator i = mapTx.find(hasha);\n+    if (i == mapTx.end()) return false;\n+    indexed_transaction_set::const_iterator j = mapTx.find(hashb);\n+    if (j == mapTx.end()) return true;\n+    uint64_t counta = i->GetCountWithAncestors();\n+    uint64_t countb = j->GetCountWithAncestors();\n+    if (counta == countb) {\n+        return CompareTxMemPoolEntryByScore()(*i, *j);\n+    }\n+    return counta < countb;\n+}\n+\n+namespace {\n+class DepthAndScoreComparator\n+{\n+    CTxMemPool *mp;\n+public:\n+    DepthAndScoreComparator(CTxMemPool *mempool) : mp(mempool) {}\n+    bool operator()(const uint256& a, const uint256& b) { return mp->CompareDepthAndScore(a, b); }\n+};\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60803349",
      "id" : 60803349,
      "line" : 778,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODAzMzQ5",
      "original_commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "original_line" : null,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 27,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60803349/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-22T21:08:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60803349",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60806480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60806480"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Even better would be for txmempool.h to expose an opaque SortedMempoolSet\nobject, which takes a list of hashes as inputs, and maintains a sorted heap\nof iterators to the mempool entries themselves, in addition to the cs lock.\n",
      "commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "created_at" : "2016-04-22T21:36:44Z",
      "diff_hunk" : "@@ -752,6 +752,31 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     assert(innerUsage == cachedInnerUsage);\n }\n \n+bool CTxMemPool::CompareDepthAndScore(const uint256& hasha, const uint256& hashb)\n+{\n+    LOCK(cs);\n+    indexed_transaction_set::const_iterator i = mapTx.find(hasha);\n+    if (i == mapTx.end()) return false;\n+    indexed_transaction_set::const_iterator j = mapTx.find(hashb);\n+    if (j == mapTx.end()) return true;\n+    uint64_t counta = i->GetCountWithAncestors();\n+    uint64_t countb = j->GetCountWithAncestors();\n+    if (counta == countb) {\n+        return CompareTxMemPoolEntryByScore()(*i, *j);\n+    }\n+    return counta < countb;\n+}\n+\n+namespace {\n+class DepthAndScoreComparator\n+{\n+    CTxMemPool *mp;\n+public:\n+    DepthAndScoreComparator(CTxMemPool *mempool) : mp(mempool) {}\n+    bool operator()(const uint256& a, const uint256& b) { return mp->CompareDepthAndScore(a, b); }\n+};\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#discussion_r60806480",
      "id" : 60806480,
      "line" : 778,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODA2NDgw",
      "original_commit_id" : "b5599147533103efea896a1fc4ff51f2d3ad5808",
      "original_line" : null,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : 27,
      "pull_request_review_id" : null,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/7840",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60806480/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2016-04-22T21:36:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60806480",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've had this running in its various forms for two weeks on a couple of public nodes, as well as a seperate test topology that consisted of nothing but nodes running this code. What do we need to move this forward?  I'm concerned that if I move to testing other PRs this will be forgotten.\n",
      "created_at" : "2016-04-26T06:00:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/7840#issuecomment-214624056",
      "id" : 214624056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/7840",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDIxNDYyNDA1Ng==",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/214624056/reactions"
      },
      "updated_at" : "2016-04-26T06:00:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/214624056",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "node_id" : "MDQ6VXNlcjg1ODQ1NA==",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   }
]
