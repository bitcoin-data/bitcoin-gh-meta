[
   {
      "author_association" : "MEMBER",
      "body" : "This is too dangerous. It's not clear at face value to users that the `database/` directory will be created or must be maintained with the wallet file(s).",
      "created_at" : "2017-11-14T20:05:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-344381289",
      "id" : 344381289,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-11-14T20:05:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344381289",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "FWIW, if you separate a wallet from its database directory you reliably get a wallet that won't open.  To see this for yourself, copy a wallet.dat from a running wallet to another directory and try starting another copy of bitcoin against it there.",
      "created_at" : "2017-11-14T20:44:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-344392268",
      "id" : 344392268,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-11-14T20:44:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344392268",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/858454?v=4",
         "events_url" : "https://api.github.com/users/gmaxwell/events{/privacy}",
         "followers_url" : "https://api.github.com/users/gmaxwell/followers",
         "following_url" : "https://api.github.com/users/gmaxwell/following{/other_user}",
         "gists_url" : "https://api.github.com/users/gmaxwell/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/gmaxwell",
         "id" : 858454,
         "login" : "gmaxwell",
         "organizations_url" : "https://api.github.com/users/gmaxwell/orgs",
         "received_events_url" : "https://api.github.com/users/gmaxwell/received_events",
         "repos_url" : "https://api.github.com/users/gmaxwell/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/gmaxwell/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/gmaxwell"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Agree with @luke-jr, #11466 is safer until we decide on a better wallet directory structure (e.g. https://github.com/bitcoin/bitcoin/pull/11466#issuecomment-335827526), which would involve supporting multiple BDB environments first.",
      "created_at" : "2017-11-14T21:43:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-344409031",
      "id" : 344409031,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-11-14T21:44:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344409031",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Note that you might want to cherrypick https://github.com/bitcoin/bitcoin/pull/11466/commits/c36cb54711fe7677db6efc4db00a6e7d42e62f8d to help debug the travis failure",
      "created_at" : "2017-11-15T09:34:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-344536755",
      "id" : 344536755,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-11-15T09:34:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344536755",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> FWIW, if you separate a wallet from its database directory you reliably get a wallet that won't open. \r\n\r\nOnly if it has uncompacted log files. To prevent this, bitcoin spends so much time consolidating the wallet database at runtime (in the MaybeCompactWalletDB thread), and does it at least at a clean shutdown.\r\n\r\nPeople are moving around wallet.dat already, from and to the data directory, so I'm not convinced that supporting multiple wallet directories in principle makes the risk much larger that wallets are separated from their database directory while \"live\". \r\n\r\nBut indeed, a database environment has to be created where the wallets are. Creating wallets in different places or even on different file systems but having the database environment in the main data directory is asking for trouble.",
      "created_at" : "2017-11-16T16:50:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-344985554",
      "id" : 344985554,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-11-16T16:50:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/344985554",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151733182"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151733182"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Full path? How will the url look like?",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T16:44:56Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151733182",
      "id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77493558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151733182",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151735244"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151735244"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Full path? How will the url look like?\r\n\r\nIt doesn't have to be the full path, but it can be. Paths are urlencoded, and symlinks are also allowed. See the unit test which tests every imaginable type of path.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T16:53:10Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151735244",
      "id" : 151735244,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77496059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151735244",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151741224"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151741224"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Feels weird to known server side details. Not to mention it can break the client if you move the wallet to a new place.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T17:19:36Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151741224",
      "id" : 151741224,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77503538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151741224",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151742971"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151742971"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Feels weird to known server side details. Not to mention it can break the client if you move the wallet to a new place.\r\n\r\nThe PR is not changing anything about this. Whatever string the server uses to identify the wallet, the client just has to use the same string. We've discussed adding and storing wallet identifiers in the past, but opted to just use filenames for simplicity. Server operator is free to choose a path, or alias or whatever he wants as the string used to identify the wallet.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T17:27:49Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151742971",
      "id" : 151742971,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77505623,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151742971",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151743953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151743953"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See discussion in #10650 \"The walletID is currently defined by the filename (-wallet=<filename>), ideally, we later add a wallet RPC call to set the walletID (should be written to the wallet database).\" It would still be possible to do this if you are interested, but it's tangential to this PR.\r\n\r\nThere is more discussion starting at \"The walletID should in future not be a representation of the filename. User should be able to manually choose the walletID. Ideally, we write the walletID into the wallet database. There we could only allow alphanumeric chars.\" https://github.com/bitcoin/bitcoin/pull/10650#issuecomment-310606962",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T17:32:37Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151743953",
      "id" : 151743953,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77506851,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151743953",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151746657"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151746657"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "My point is that IMO we should not allow absolute path in rpcwallet, which you introduce here.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T17:45:43Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151746657",
      "id" : 151746657,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77510098,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151746657",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151748247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151748247"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What is the problem exactly? If the server operator wants to use a plain path, or a relative path, he can use one. If he wants to use a symlink alias, he can use that. What is the problem with allowing him to use a full path as well?\r\n\r\nNote that RPC identifier for wallet is entirely up to the server and not up the client. The client has to use whatever string the server uses to identify the wallet, there is no translation of any kind done on the client value.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T17:53:02Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151748247",
      "id" : 151748247,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77511971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151748247",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151755076"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151755076"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not arguing against full paths server side. I'm kind of against exposing absolute paths to RPC clients. `listwallets` will expose the full path right?",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T18:22:45Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151755076",
      "id" : 151755076,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77519860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151755076",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151756281"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151756281"
         }
      },
      "author_association" : "OWNER",
      "body" : "It exposes the name the server uses for the wallet.\n\nIn the current implementation that name indeed corresponds to the configured path, but there is no reason why that must remain the case.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T18:28:22Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151756281",
      "id" : 151756281,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77521305,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151756281",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151757547"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151757547"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Well if the goal is to have some sort of id and have that exposed instead then +1.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T18:33:52Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151757547",
      "id" : 151757547,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77522828,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151757547",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151757822"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151757822"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> listwallets will expose the full path right?\r\n\r\nNo, or at least not by default. Listwallets just shows the wallet name. If the server is configured to use full paths for wallet name these will be full paths, but the server has to be specifically configured this way in order for this to happen.\r\n\r\nI'm still little puzzled about what you think the underlying problem is with allowing server admins to use full paths as wallet names. But if you really think it is a problem it would literally be a one-line code change to use a different identifier. E.g. the `name` argument to `CreateWalletFromFile()` could be changed from `walletFile` to `fs::path(walletFile).filename()`.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T18:35:02Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151757822",
      "id" : 151757822,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77523165,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151757822",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151761456"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151761456"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Suppose you have configured the server with an absolute wallet path. Then you have a couple of clients (in different hosts). You had to configure each client with the absolute path of the wallet. These clients can be others than bitcoin-cli. Now the server operator decides it has to move the wallet to a new location. The clients can handle a server restart, but now the wallet doesn't exists. And the operator simply doesn't know of these clients because they are managed by other operators etc..",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T18:50:15Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151761456",
      "id" : 151761456,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77527367,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151761456",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151761934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151761934"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "My point is to not even allow such cases. An wallet id (filename or even relative path) is enough ",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T18:52:17Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151761934",
      "id" : 151761934,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77527937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151761934",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> This is too dangerous. It's not clear at face value to users that the database/ directory will be created or must be maintained with the wallet file(s).\r\n\r\nNote that this was posted in response to an earlier version of this pr that did not include the third commit. With the third commit, the default for creating new wallets is as directories rather than a files (with each wallet directory containing its own wallet.dat file, db.log and database/log files). See the comments and release notes in the third commit for details.\r\n\r\n> But indeed, a database environment has to be created where the wallets are. Creating wallets in different places or even on different file systems but having the database environment in the main data directory is asking for trouble.\r\n\r\nThe PR doesn't do this (and never did). The first commit of the PR is a refactoring specifically to add support for opening multiple BDB environments.\r\n\r\n> Agree with @luke-jr, #11466 is safer until we decide on a better wallet directory structure (https://github.com/bitcoin/bitcoin/pull/11466#issuecomment-335827526), which would involve supporting multiple BDB environments first.\r\n\r\nAgain, the very first commit of this PR adds support for multiple BDB environments, and if you combine this PR with #11466 the result is exactly what you described in your linked comment.",
      "created_at" : "2017-11-17T18:53:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-345331793",
      "id" : 345331793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-11-17T18:53:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345331793",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151767636"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151767636"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Suppose you have configured the server with an absolute wallet path. Then you have a couple of clients (in different hosts). You had to configure each client with the absolute path of the wallet. These clients can be others than bitcoin-cli. Now the server operator decides it has to move the wallet to a new location. \r\n\r\nI don't see how this is much different than the server renaming the wallet. If a server admin wants to create a stable name for a wallet, it's perfectly possible to do that by creating a symlink or just manipulating the -datadir or -walletdir (#11687) settings to be able store the wallets in different locations without changing the name. I believe this PR actually gives server admins more flexibility in this regard rather than less, because previously wallet symlinks were disallowed.\r\n\r\nBut to take the example at face value, you have a server admin who accidentally exposed a non-stable wallet name, instead of a stable wallet name over the rpc interface to clients on the internet outside of his control. What solutions would you like to see for this problem? Would it be good enough to use `fs::path(walletFile).filename()` instead of `walletFile` as the wallet name passed to `CreateWalletFromFile` like I suggested earlier? Do you want wallet names to be configurable on the command line? Do you want them to be configurable by RPC? Do you want wallet names to be stored inside wallet databases like Jonas suggested?",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T19:17:06Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151767636",
      "id" : 151767636,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77534776,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151767636",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151773896"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151773896"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> accidentally exposed a non-stable wallet\r\n\r\nMy point is to prevent this. IMO symlinks are a weak solution to remedy that case. Renaming is indeed a breaking change from the client point of view.\r\n\r\nI'm not a server admin expert (not a bit either) but, correct me if I'm wrong, usually absolute paths aren't exposed outside.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-11-17T19:45:36Z",
      "diff_hunk" : "@@ -48,7 +48,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n-    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r151773896",
      "id" : 151773896,
      "in_reply_to_id" : 151733182,
      "original_commit_id" : "beedd374f0fd1df4d65391006c76f668affb01d9",
      "original_position" : 5,
      "path" : "src/bitcoin-cli.cpp",
      "position" : null,
      "pull_request_review_id" : 77542261,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/151773896",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Note that this was posted in response to an earlier version of this pr that did not include the third commit. With the third commit, the default for creating new wallets is as directories rather than a files (with each wallet directory containing its own wallet.dat file, db.log and database/log files). See the comments and release notes in the third commit for details.\r\n\r\nIndeed, concept ACK on the new approach, will review soon",
      "created_at" : "2017-11-18T00:46:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-345403475",
      "id" : 345403475,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-11-18T00:46:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345403475",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "IMO we should still forbid paths for file-based wallets, and only allow it for directory-based ones.\r\n\r\nSuggest renaming `wallet.dat` in the directory to `wallet.bdb` to convey the fact that you can't just copy the file to make a proper backup.",
      "created_at" : "2017-11-18T15:13:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-345448447",
      "id" : 345448447,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-11-18T15:13:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345448447",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Concept ACK",
      "created_at" : "2017-11-18T20:10:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-345467887",
      "id" : 345467887,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-11-18T20:10:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345467887",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "> The PR doesn't do this (and never did). The first commit of the PR is a refactoring specifically to add support for opening multiple BDB environments.\r\n\r\nSorry! I didn't read the code but was apparently confused by all the screaming about dangerousness. If you added support for multiple database environments you get my concept ACK.\r\n\r\n> Suggest renaming wallet.dat in the directory to wallet.bdb to convey the fact that you can't just copy the file to make a proper backup.\r\n\r\nI don't think we should be changing the default naming of wallet databases. People have been backing up separate wallet.dats forever, and generally it works because bitcoin core leaves the wallet in consolidated state. So I'd prefer documenting that behavior instead.\r\n\r\nEven a backup with the last update stripped is better than no backup. From that it's usually possible to recover due to the mempool or HD seed. But if they can't find 'wallet.dat', they might decide not to to a backup at all.\r\n\r\nTurning the abstraction in the user's mind of wallets into directories is going to be an upstream fight as well. I'm not against it, but I think it will result in a lot of confusion.",
      "created_at" : "2017-11-20T08:35:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-345625565",
      "id" : 345625565,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-11-20T08:36:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/345625565",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> IMO we should still forbid paths for file-based wallets, and only allow it for directory-based ones.\r\n\r\nGood idea, added check for this.\r\n\r\n",
      "created_at" : "2017-11-30T19:11:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-348289802",
      "id" : 348289802,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-11-30T19:11:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348289802",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155093506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155093506"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ugh, can we return the CDBEnv* instead of return-by-setting-ref-to-ptr?",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-05T22:20:55Z",
      "diff_hunk" : "@@ -85,7 +86,8 @@ class CDBEnv\n     }\n };\n \n-extern CDBEnv bitdb;\n+/** Get CDBEnv and database filename given a wallet path. */\n+void GetWalletEnv(const fs::path& wallet_path, CDBEnv*& env, std::string& database_filename);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155093506",
      "id" : 155093506,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 45,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 81356359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155093506",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155319012"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155319012"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why create the env before checking for mock? Why not add a fMock parameter to GetWalletEnv or so instead?",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-06T18:22:39Z",
      "diff_hunk" : "@@ -100,9 +102,15 @@ class CWalletDBWrapper\n     }\n \n     /** Create DB handle to real database */\n-    CWalletDBWrapper(CDBEnv *env_in, const std::string &strFile_in) :\n-        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0), env(env_in), strFile(strFile_in)\n+    CWalletDBWrapper(const fs::path& wallet_path, bool mock = false) :\n+        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0)\n     {\n+        GetWalletEnv(wallet_path, env, strFile);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155319012",
      "id" : 155319012,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 58,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 81356359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155319012",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155349827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155349827"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why make the lock global instead of per-env? It seems like there should be nothing preventing you from keeping that and adding a second lock that only exists to protect g_dbenvs, though likely not a big deal in terms of concurrency.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-06T20:20:47Z",
      "diff_hunk" : "@@ -35,17 +35,18 @@ class CDBEnv\n     void EnvShutdown();\n \n public:\n-    mutable CCriticalSection cs_db;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155349827",
      "id" : 155349827,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 4,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 81356359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155349827",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155350688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155350688"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "While you're at it, can you just merge EnvShutdown and Close? EnvShutdown is now only called from Close().",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-06T20:24:08Z",
      "diff_hunk" : "@@ -81,29 +90,38 @@ void CDBEnv::Reset()\n     fMockDb = false;\n }\n \n-CDBEnv::CDBEnv()\n+CDBEnv::CDBEnv(const fs::path& dir_path) : strPath(dir_path.string())\n {\n     Reset();\n }\n \n CDBEnv::~CDBEnv()\n {\n-    EnvShutdown();\n+    Close();\n }\n \n void CDBEnv::Close()\n {\n+    for (auto& db : mapDb) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155350688",
      "id" : 155350688,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 44,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 81356359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155350688",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155352781"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155352781"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this required? Somehow I had assumed they only conficted if they were both in the same env, but I dunno where I got that from.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-06T20:33:07Z",
      "diff_hunk" : "@@ -435,7 +467,9 @@ CDB::CDB(CWalletDBWrapper& dbw, const char* pszMode, bool fFlushOnCloseIn) : pdb\n             if (ret != 0) {\n                 throw std::runtime_error(strprintf(\"CDB: Error %d, can't open database %s\", ret, strFilename));\n             }\n-            CheckUniqueFileid(*env, strFilename, *pdb_temp);\n+            for (auto& env : g_dbenvs) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155352781",
      "id" : 155352781,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 193,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 81356359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155352781",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155354119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155354119"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Heh, I have to admit I really prefer the old version from the new one. Creating a DB and then giving it to the wallet makes more sense conceptually to me than telling the wallet where to find the DB and then having the CWallet constructor create the DB (especially as the slow-moving goal is to abstract the DB out of the wallet and make it an interface).",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-06T20:38:45Z",
      "diff_hunk" : "@@ -3848,16 +3848,17 @@ std::vector<std::string> CWallet::GetDestValues(const std::string& prefix) const\n     return values;\n }\n \n-CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n+CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path& path)\n {\n+    const std::string& walletFile = name;\n+\n     // needed to restore wallet transaction meta data after -zapwallettxes\n     std::vector<CWalletTx> vWtx;\n \n     if (gArgs.GetBoolArg(\"-zapwallettxes\", false)) {\n         uiInterface.InitMessage(_(\"Zapping all transactions from wallet...\"));\n \n-        std::unique_ptr<CWalletDBWrapper> dbw(new CWalletDBWrapper(&bitdb, walletFile));\n-        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(std::move(dbw));\n+        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(name, path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155354119",
      "id" : 155354119,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 17,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 81356359,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155354119",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155358844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155358844"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done in 75ed8c595c53a2c3aeedfbc01810f291ee92ad51",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-06T20:58:02Z",
      "diff_hunk" : "@@ -81,29 +90,38 @@ void CDBEnv::Reset()\n     fMockDb = false;\n }\n \n-CDBEnv::CDBEnv()\n+CDBEnv::CDBEnv(const fs::path& dir_path) : strPath(dir_path.string())\n {\n     Reset();\n }\n \n CDBEnv::~CDBEnv()\n {\n-    EnvShutdown();\n+    Close();\n }\n \n void CDBEnv::Close()\n {\n+    for (auto& db : mapDb) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155358844",
      "id" : 155358844,
      "in_reply_to_id" : 155350688,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 44,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 81665486,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155358844",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155359037"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155359037"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added comment in 75ed8c595c53a2c3aeedfbc01810f291ee92ad51. It's done to prevent opening two paths that refer to the same file at the same time.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-06T20:58:50Z",
      "diff_hunk" : "@@ -435,7 +467,9 @@ CDB::CDB(CWalletDBWrapper& dbw, const char* pszMode, bool fFlushOnCloseIn) : pdb\n             if (ret != 0) {\n                 throw std::runtime_error(strprintf(\"CDB: Error %d, can't open database %s\", ret, strFilename));\n             }\n-            CheckUniqueFileid(*env, strFilename, *pdb_temp);\n+            for (auto& env : g_dbenvs) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155359037",
      "id" : 155359037,
      "in_reply_to_id" : 155352781,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 193,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 81665486,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155359037",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155360386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155360386"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "One lock seems a simpler than multiple multiple locks unless there is a performance rationale for more fine grained locking. One thing which I would not look forward to is dealing with even more lock-order bugs in the wallet than the ones that already frequently arise.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-06T21:04:55Z",
      "diff_hunk" : "@@ -35,17 +35,18 @@ class CDBEnv\n     void EnvShutdown();\n \n public:\n-    mutable CCriticalSection cs_db;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155360386",
      "id" : 155360386,
      "in_reply_to_id" : 155349827,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 4,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 81665486,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155360386",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155360999"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155360999"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ugh. Good idea! Done in 75ed8c595c53a2c3aeedfbc01810f291ee92ad51",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-06T21:07:28Z",
      "diff_hunk" : "@@ -85,7 +86,8 @@ class CDBEnv\n     }\n };\n \n-extern CDBEnv bitdb;\n+/** Get CDBEnv and database filename given a wallet path. */\n+void GetWalletEnv(const fs::path& wallet_path, CDBEnv*& env, std::string& database_filename);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155360999",
      "id" : 155360999,
      "in_reply_to_id" : 155093506,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 45,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 81665486,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155360999",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155364320"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155364320"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I can't see how that would be an improvement. The `env` object needs to exist whether it is memory or file-backed. And `GetWalletEnv` is just intended to create and retrieve CDBEnv objects, not do that and then invoke unrelated CDBEnv methods that only one of its callers needs depending on a bool parameter...",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-06T21:20:28Z",
      "diff_hunk" : "@@ -100,9 +102,15 @@ class CWalletDBWrapper\n     }\n \n     /** Create DB handle to real database */\n-    CWalletDBWrapper(CDBEnv *env_in, const std::string &strFile_in) :\n-        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0), env(env_in), strFile(strFile_in)\n+    CWalletDBWrapper(const fs::path& wallet_path, bool mock = false) :\n+        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0)\n     {\n+        GetWalletEnv(wallet_path, env, strFile);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155364320",
      "id" : 155364320,
      "in_reply_to_id" : 155319012,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 58,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 81665486,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155364320",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155371642"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155371642"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Interesting, I guess you are imagining `CWalletDBWrapper` changing into some abstract interface that the wallet can call to load and store data. If that's the goal I can make the `CWallet(name, dbw)` constructor public instead of private and get rid of the other constructors. For callers, this means the current:\r\n\r\n```c++\r\nMakeUnique<CWallet>(name, path)\r\nMakeUnique<CWallet>(CWallet::Mock())\r\nMakeUnique<CWallet>(CWallet::Dummy()))\r\n```\r\n\r\nwould become something like:\r\n\r\n```c++\r\nMakeUnique<CWallet>(name, MakeUnique<CWalletDBWrapper>(path))\r\nMakeUnique<CWallet>(\"mock\", MakeUnique<CWalletDBWrapper>(CWalletDBWrapper::Mock()))\r\nMakeUnique<CWallet>(\"dummy\", MakeUnique<CWalletDBWrapper>(CWalletDBWrapper::Dummy()))\r\n```\r\n\r\nI would probably want to hold off on a change like this until `CWalletDBWrapper` did become a real abstraction. But let me know if you want this change or something along these lines. Obviously this is more verbose than code in the current pr, but it's not much more verbose than code currently in master.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-06T21:49:20Z",
      "diff_hunk" : "@@ -3848,16 +3848,17 @@ std::vector<std::string> CWallet::GetDestValues(const std::string& prefix) const\n     return values;\n }\n \n-CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n+CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path& path)\n {\n+    const std::string& walletFile = name;\n+\n     // needed to restore wallet transaction meta data after -zapwallettxes\n     std::vector<CWalletTx> vWtx;\n \n     if (gArgs.GetBoolArg(\"-zapwallettxes\", false)) {\n         uiInterface.InitMessage(_(\"Zapping all transactions from wallet...\"));\n \n-        std::unique_ptr<CWalletDBWrapper> dbw(new CWalletDBWrapper(&bitdb, walletFile));\n-        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(std::move(dbw));\n+        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(name, path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155371642",
      "id" : 155371642,
      "in_reply_to_id" : 155354119,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 17,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 81665486,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/155371642",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156420111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156420111"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yea, I really like that, tbh. If nothing else is much more clearly separates wallet.cpp from walletdb, etc, keeping wallet.cpp/CWallet only filled with wallet logic, and not database-backend stuff.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-12T16:29:24Z",
      "diff_hunk" : "@@ -3848,16 +3848,17 @@ std::vector<std::string> CWallet::GetDestValues(const std::string& prefix) const\n     return values;\n }\n \n-CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n+CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path& path)\n {\n+    const std::string& walletFile = name;\n+\n     // needed to restore wallet transaction meta data after -zapwallettxes\n     std::vector<CWalletTx> vWtx;\n \n     if (gArgs.GetBoolArg(\"-zapwallettxes\", false)) {\n         uiInterface.InitMessage(_(\"Zapping all transactions from wallet...\"));\n \n-        std::unique_ptr<CWalletDBWrapper> dbw(new CWalletDBWrapper(&bitdb, walletFile));\n-        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(std::move(dbw));\n+        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(name, path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156420111",
      "id" : 156420111,
      "in_reply_to_id" : 155354119,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 17,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82893773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156420111",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156422613"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156422613"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> If nothing else is much more clearly separates wallet.cpp from walletdb, etc, keeping wallet.cpp/CWallet only filled with wallet logic\r\n\r\nIt really affects callers of wallet, not wallet itself. CWallet is barely affected and wallet.cpp doesn't change at all. Anyway, let me know if you would prefer to see this here or in another PR.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-12T16:36:59Z",
      "diff_hunk" : "@@ -3848,16 +3848,17 @@ std::vector<std::string> CWallet::GetDestValues(const std::string& prefix) const\n     return values;\n }\n \n-CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n+CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path& path)\n {\n+    const std::string& walletFile = name;\n+\n     // needed to restore wallet transaction meta data after -zapwallettxes\n     std::vector<CWalletTx> vWtx;\n \n     if (gArgs.GetBoolArg(\"-zapwallettxes\", false)) {\n         uiInterface.InitMessage(_(\"Zapping all transactions from wallet...\"));\n \n-        std::unique_ptr<CWalletDBWrapper> dbw(new CWalletDBWrapper(&bitdb, walletFile));\n-        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(std::move(dbw));\n+        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(name, path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156422613",
      "id" : 156422613,
      "in_reply_to_id" : 155354119,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 17,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82896718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156422613",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156423481"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156423481"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It just seems very weird given mock seems like it shouldn't have a/care what the wallet_path is. In the future I kinda feel like it should become more RAII (ie Open in the GetWalletEnv call) but not in this PR.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-12T16:39:50Z",
      "diff_hunk" : "@@ -100,9 +102,15 @@ class CWalletDBWrapper\n     }\n \n     /** Create DB handle to real database */\n-    CWalletDBWrapper(CDBEnv *env_in, const std::string &strFile_in) :\n-        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0), env(env_in), strFile(strFile_in)\n+    CWalletDBWrapper(const fs::path& wallet_path, bool mock = false) :\n+        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0)\n     {\n+        GetWalletEnv(wallet_path, env, strFile);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156423481",
      "id" : 156423481,
      "in_reply_to_id" : 155319012,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 58,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 82897819,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156423481",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156424854"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156424854"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It just seems weird given it'd be even less code change to not split the lock out, and as long as the global lock is *only* held in the creation of new envs, no lockorder should be worried about (cause lockorder is always trivially correct if locks are held only for the duration of a function which uses them, without making callbacks).",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-12T16:43:56Z",
      "diff_hunk" : "@@ -35,17 +35,18 @@ class CDBEnv\n     void EnvShutdown();\n \n public:\n-    mutable CCriticalSection cs_db;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156424854",
      "id" : 156424854,
      "in_reply_to_id" : 155349827,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 4,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 82899372,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156424854",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156428292"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156428292"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> It just seems very weird given mock seems like it shouldn't have a/care what the wallet_path is. In the future I kinda feel like it should become more RAII (ie Open in the GetWalletEnv call) but not in this PR.\r\n\r\nRAII is not the model this uses because when there more than one wallet file open in the same directory they share the same environment. You could only resolve this by requiring all databases in the environment to be opened and closed at the same time (which would complicate dynamic loading/unloading) or by not allowing multiple databases in the same directory to be opened at the same time, or some combination these things, or just not using RAII.\r\n\r\nOn using fake \"\" path for mock databases, this is a little weird. Could be made less exposed by  adding a separate constructor for mocks like proposed in the other comment: https://github.com/bitcoin/bitcoin/pull/11687#discussion_r155371642",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-12T16:54:27Z",
      "diff_hunk" : "@@ -100,9 +102,15 @@ class CWalletDBWrapper\n     }\n \n     /** Create DB handle to real database */\n-    CWalletDBWrapper(CDBEnv *env_in, const std::string &strFile_in) :\n-        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0), env(env_in), strFile(strFile_in)\n+    CWalletDBWrapper(const fs::path& wallet_path, bool mock = false) :\n+        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0)\n     {\n+        GetWalletEnv(wallet_path, env, strFile);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156428292",
      "id" : 156428292,
      "in_reply_to_id" : 155319012,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 58,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 82903256,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156428292",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156500862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156500862"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I mean given you're changing it here, I see no reason to change it to go in the opposite direction of where I think it should go - even if CWalletDBWrapper right now is just a BDB implementation, it still *has* a clean-ish interface, and having the CWallet cosntructor create one from a path instead of take one just seems like the wrong direction. Better to just leave this part of the diff out of the PR?",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-12T21:30:27Z",
      "diff_hunk" : "@@ -3848,16 +3848,17 @@ std::vector<std::string> CWallet::GetDestValues(const std::string& prefix) const\n     return values;\n }\n \n-CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n+CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path& path)\n {\n+    const std::string& walletFile = name;\n+\n     // needed to restore wallet transaction meta data after -zapwallettxes\n     std::vector<CWalletTx> vWtx;\n \n     if (gArgs.GetBoolArg(\"-zapwallettxes\", false)) {\n         uiInterface.InitMessage(_(\"Zapping all transactions from wallet...\"));\n \n-        std::unique_ptr<CWalletDBWrapper> dbw(new CWalletDBWrapper(&bitdb, walletFile));\n-        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(std::move(dbw));\n+        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(name, path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156500862",
      "id" : 156500862,
      "in_reply_to_id" : 155354119,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 17,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 82989103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156500862",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156501584"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156501584"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, but instead of env = GetWalletEnv(wallet_path, strFile); env->Open(); or env->Close(); env->MakeMock();, GetWalletEnv could return a reference which is already open or otherwise has some level of understanding of closing when all refs to that env are lost. Even if not that, would prefer to not use the fake \"\" path as you suggest.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-12T21:33:11Z",
      "diff_hunk" : "@@ -100,9 +102,15 @@ class CWalletDBWrapper\n     }\n \n     /** Create DB handle to real database */\n-    CWalletDBWrapper(CDBEnv *env_in, const std::string &strFile_in) :\n-        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0), env(env_in), strFile(strFile_in)\n+    CWalletDBWrapper(const fs::path& wallet_path, bool mock = false) :\n+        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0)\n     {\n+        GetWalletEnv(wallet_path, env, strFile);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156501584",
      "id" : 156501584,
      "in_reply_to_id" : 155319012,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 58,
      "path" : "src/wallet/db.h",
      "position" : null,
      "pull_request_review_id" : 82989956,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156501584",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156501935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156501935"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Did you forget to push? Noting this is the only way we handle hardlinks is useful, indeed.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-12T21:34:48Z",
      "diff_hunk" : "@@ -435,7 +467,9 @@ CDB::CDB(CWalletDBWrapper& dbw, const char* pszMode, bool fFlushOnCloseIn) : pdb\n             if (ret != 0) {\n                 throw std::runtime_error(strprintf(\"CDB: Error %d, can't open database %s\", ret, strFilename));\n             }\n-            CheckUniqueFileid(*env, strFilename, *pdb_temp);\n+            for (auto& env : g_dbenvs) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156501935",
      "id" : 156501935,
      "in_reply_to_id" : 155352781,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 193,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 82990394,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156501935",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156509771"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156509771"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Did you forget to push?\r\n\r\nOops, yeah. It was on the pr/wfile.9 tag I linked to below. Should be updated now. Also I'll work on the \"just leave this part of the diff\" change you requested above.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-12T22:06:46Z",
      "diff_hunk" : "@@ -435,7 +467,9 @@ CDB::CDB(CWalletDBWrapper& dbw, const char* pszMode, bool fFlushOnCloseIn) : pdb\n             if (ret != 0) {\n                 throw std::runtime_error(strprintf(\"CDB: Error %d, can't open database %s\", ret, strFilename));\n             }\n-            CheckUniqueFileid(*env, strFilename, *pdb_temp);\n+            for (auto& env : g_dbenvs) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156509771",
      "id" : 156509771,
      "in_reply_to_id" : 155352781,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 193,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 82999688,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156509771",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156521046"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156521046"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done in 39fa1e9c01417bc9275d8f81bfef67bfc5ca308e",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-12T23:00:01Z",
      "diff_hunk" : "@@ -3848,16 +3848,17 @@ std::vector<std::string> CWallet::GetDestValues(const std::string& prefix) const\n     return values;\n }\n \n-CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n+CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path& path)\n {\n+    const std::string& walletFile = name;\n+\n     // needed to restore wallet transaction meta data after -zapwallettxes\n     std::vector<CWalletTx> vWtx;\n \n     if (gArgs.GetBoolArg(\"-zapwallettxes\", false)) {\n         uiInterface.InitMessage(_(\"Zapping all transactions from wallet...\"));\n \n-        std::unique_ptr<CWalletDBWrapper> dbw(new CWalletDBWrapper(&bitdb, walletFile));\n-        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(std::move(dbw));\n+        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(name, path);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156521046",
      "id" : 156521046,
      "in_reply_to_id" : 155354119,
      "original_commit_id" : "3dba60c313ae111492dafc3eb09f2c5044fb1b4d",
      "original_position" : 17,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 83012857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156521046",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156779308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156779308"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Make the constructors private now?",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-13T20:52:59Z",
      "diff_hunk" : "@@ -100,9 +101,33 @@ class CWalletDBWrapper\n     }\n \n     /** Create DB handle to real database */\n-    CWalletDBWrapper(CDBEnv *env_in, const std::string &strFile_in) :\n-        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0), env(env_in), strFile(strFile_in)\n+    CWalletDBWrapper(const fs::path& wallet_path, bool mock = false) :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r156779308",
      "id" : 156779308,
      "original_commit_id" : "99934923d4c1dc4c0f96865b2589cc0b5df66b31",
      "original_position" : 66,
      "path" : "src/wallet/db.h",
      "position" : 66,
      "pull_request_review_id" : 83313824,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/156779308",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r157285274"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157285274"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Make the constructors private now?\r\n\r\nI didn't do this just because it prevents being able to call MakeUnique so makes code below more verbose. But I think I'll wind up making this tweak if @promag or someone else asks for other style changes on the PR.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-15T19:47:41Z",
      "diff_hunk" : "@@ -100,9 +101,33 @@ class CWalletDBWrapper\n     }\n \n     /** Create DB handle to real database */\n-    CWalletDBWrapper(CDBEnv *env_in, const std::string &strFile_in) :\n-        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0), env(env_in), strFile(strFile_in)\n+    CWalletDBWrapper(const fs::path& wallet_path, bool mock = false) :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r157285274",
      "id" : 157285274,
      "in_reply_to_id" : 156779308,
      "original_commit_id" : "99934923d4c1dc4c0f96865b2589cc0b5df66b31",
      "original_position" : 66,
      "path" : "src/wallet/db.h",
      "position" : 66,
      "pull_request_review_id" : 83908360,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157285274",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r157354490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157354490"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Lines 32:33 in db.h states\r\n`    // Don't change into fs::path, as that can result in\r\n    // shutdown problems/crashes caused by a static initialized internal pointer.`\r\nWhen originally written, this comment referred to boost::filesystem. I'm not sure if this comment is still relevant but I did want to bring attention to it.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-16T23:53:36Z",
      "diff_hunk" : "@@ -81,29 +101,24 @@ void CDBEnv::Reset()\n     fMockDb = false;\n }\n \n-CDBEnv::CDBEnv()\n+CDBEnv::CDBEnv(const fs::path& dir_path) : strPath(dir_path.string())\n {\n     Reset();\n }\n \n CDBEnv::~CDBEnv()\n {\n-    EnvShutdown();\n+    Close();\n }\n \n-void CDBEnv::Close()\n-{\n-    EnvShutdown();\n-}\n-\n-bool CDBEnv::Open(const fs::path& pathIn)\n+bool CDBEnv::Open()\n {\n     if (fDbEnvInit)\n         return true;\n \n     boost::this_thread::interruption_point();\n \n-    strPath = pathIn.string();\n+    fs::path pathIn = strPath;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r157354490",
      "id" : 157354490,
      "original_commit_id" : "8b036a198bc774a00ae0d68164f52ff14096f720",
      "original_position" : 74,
      "path" : "src/wallet/db.cpp",
      "position" : 89,
      "pull_request_review_id" : 83986869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157354490",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6299681?v=4",
         "events_url" : "https://api.github.com/users/PierreRochard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/PierreRochard/followers",
         "following_url" : "https://api.github.com/users/PierreRochard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/PierreRochard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/PierreRochard",
         "id" : 6299681,
         "login" : "PierreRochard",
         "organizations_url" : "https://api.github.com/users/PierreRochard/orgs",
         "received_events_url" : "https://api.github.com/users/PierreRochard/received_events",
         "repos_url" : "https://api.github.com/users/PierreRochard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/PierreRochard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/PierreRochard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/PierreRochard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r157354732"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157354732"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "style: tuple unpacking in the return statement reduces readability ",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-17T00:11:39Z",
      "diff_hunk" : "@@ -53,20 +53,40 @@ void CheckUniqueFileid(const CDBEnv& env, const std::string& filename, Db& db)\n         }\n     }\n }\n+\n+CCriticalSection cs_db;\n+std::map<std::string, CDBEnv> g_dbenvs; //!< Map from directory name to open db environment.\n } // namespace\n \n+CDBEnv* GetWalletEnv(const fs::path& wallet_path, std::string& database_filename)\n+{\n+    fs::path env_directory = wallet_path.parent_path();\n+    database_filename = wallet_path.filename().string();\n+    LOCK(cs_db);\n+    return &g_dbenvs.emplace(std::piecewise_construct, std::forward_as_tuple(env_directory.string()), std::forward_as_tuple(env_directory)).first->second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r157354732",
      "id" : 157354732,
      "original_commit_id" : "8b036a198bc774a00ae0d68164f52ff14096f720",
      "original_position" : 14,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 83987086,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157354732",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/6299681?v=4",
         "events_url" : "https://api.github.com/users/PierreRochard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/PierreRochard/followers",
         "following_url" : "https://api.github.com/users/PierreRochard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/PierreRochard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/PierreRochard",
         "id" : 6299681,
         "login" : "PierreRochard",
         "organizations_url" : "https://api.github.com/users/PierreRochard/orgs",
         "received_events_url" : "https://api.github.com/users/PierreRochard/received_events",
         "repos_url" : "https://api.github.com/users/PierreRochard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/PierreRochard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/PierreRochard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/PierreRochard"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r157525503"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157525503"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> style: tuple unpacking in the return statement reduces readability\r\n\r\nUnclear what preferred alternative is, but also this is replaced in aca8ec0dabb4987a4f73a19e2a7dc09177197adb from #11911 so it might not be relevant for long.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-18T16:04:02Z",
      "diff_hunk" : "@@ -53,20 +53,40 @@ void CheckUniqueFileid(const CDBEnv& env, const std::string& filename, Db& db)\n         }\n     }\n }\n+\n+CCriticalSection cs_db;\n+std::map<std::string, CDBEnv> g_dbenvs; //!< Map from directory name to open db environment.\n } // namespace\n \n+CDBEnv* GetWalletEnv(const fs::path& wallet_path, std::string& database_filename)\n+{\n+    fs::path env_directory = wallet_path.parent_path();\n+    database_filename = wallet_path.filename().string();\n+    LOCK(cs_db);\n+    return &g_dbenvs.emplace(std::piecewise_construct, std::forward_as_tuple(env_directory.string()), std::forward_as_tuple(env_directory)).first->second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r157525503",
      "id" : 157525503,
      "in_reply_to_id" : 157354732,
      "original_commit_id" : "8b036a198bc774a00ae0d68164f52ff14096f720",
      "original_position" : 14,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 84181912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157525503",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r157526849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157526849"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> When originally written, this comment referred to boost::filesystem.\r\n\r\nThe comment is actually still referring to boost::filesystem, `fs` is just an alias: https://github.com/bitcoin/bitcoin/blob/62fdf9b07087b80d2142799bdd2324f61483359d/src/fs.h#L16\r\n\r\nBut it's fine to create a path object here. The comment is just explaining why the path objects aren't stored permanently (they stop being usable during shutdown).\r\n\r\n",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-18T16:08:33Z",
      "diff_hunk" : "@@ -81,29 +101,24 @@ void CDBEnv::Reset()\n     fMockDb = false;\n }\n \n-CDBEnv::CDBEnv()\n+CDBEnv::CDBEnv(const fs::path& dir_path) : strPath(dir_path.string())\n {\n     Reset();\n }\n \n CDBEnv::~CDBEnv()\n {\n-    EnvShutdown();\n+    Close();\n }\n \n-void CDBEnv::Close()\n-{\n-    EnvShutdown();\n-}\n-\n-bool CDBEnv::Open(const fs::path& pathIn)\n+bool CDBEnv::Open()\n {\n     if (fDbEnvInit)\n         return true;\n \n     boost::this_thread::interruption_point();\n \n-    strPath = pathIn.string();\n+    fs::path pathIn = strPath;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r157526849",
      "id" : 157526849,
      "in_reply_to_id" : 157354490,
      "original_commit_id" : "8b036a198bc774a00ae0d68164f52ff14096f720",
      "original_position" : 74,
      "path" : "src/wallet/db.cpp",
      "position" : 89,
      "pull_request_review_id" : 84181912,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/157526849",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK https://github.com/bitcoin/bitcoin/pull/11687/commits/99934923d4c1dc4c0f96865b2589cc0b5df66b31\r\n\r\nThis is still on my to-do list for testing as well",
      "created_at" : "2017-12-18T22:12:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-352574486",
      "id" : 352574486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-12-18T22:12:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/352574486",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158086757"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158086757"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this comment is now outdated. `CWalletDBWrapper` was previously initialized with the `CDBEnv` and `strFile`. This is no longer the case. Suggest you just remove this line.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-20T17:28:45Z",
      "diff_hunk" : "@@ -85,7 +85,8 @@ class CDBEnv\n     }\n };\n \n-extern CDBEnv bitdb;\n+/** Get CDBEnv and database filename given a wallet path. */\n+CDBEnv* GetWalletEnv(const fs::path& wallet_path, std::string& database_filename);\n \n /** An instance of this class represents one database.\n  * For BerkeleyDB this is just a (env, strFile) tuple.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158086757",
      "id" : 158086757,
      "original_commit_id" : "99934923d4c1dc4c0f96865b2589cc0b5df66b31",
      "original_position" : 59,
      "path" : "src/wallet/db.h",
      "position" : 59,
      "pull_request_review_id" : 84839001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158086757",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158112376"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158112376"
         }
      },
      "author_association" : "MEMBER",
      "body" : "~sorry for nitting, but this should be `filename` (like the function above, in lowercase (or snake case if you want to make it two words))~\r\n\r\n~Same for a few other variable names in this file.~\r\n\r\nScrap that - I see that you're maintaining the same variable naming to minimize code churn.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-20T19:19:35Z",
      "diff_hunk" : "@@ -258,8 +287,12 @@ bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*reco\n     return fSuccess;\n }\n \n-bool CDB::VerifyEnvironment(const std::string& walletFile, const fs::path& walletDir, std::string& errorStr)\n+bool CDB::VerifyEnvironment(const fs::path& file_path, std::string& errorStr)\n {\n+    std::string walletFile;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158112376",
      "id" : 158112376,
      "original_commit_id" : "99934923d4c1dc4c0f96865b2589cc0b5df66b31",
      "original_position" : 150,
      "path" : "src/wallet/db.cpp",
      "position" : 164,
      "pull_request_review_id" : 84839001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158112376",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158127240"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158127240"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This means that `m_name` is `\"\"` if no `-wallet` name is specified on the command line or in the .conf file, which makes the `getwalletinfo` and `listwallets` output confusing:\r\n\r\n```\r\nbitcoin-cli getwalletinfo\r\n{\r\n  \"walletname\": \"\",\r\n  \"walletversion\": 159900,\r\n  \"balance\": 0.00000000,\r\n  \"unconfirmed_balance\": 0.00000000,\r\n  \"immature_balance\": 0.00000000,\r\n  \"txcount\": 0,\r\n  \"keypoololdest\": 1513800503,\r\n  \"keypoolsize\": 1000,\r\n  \"keypoolsize_hd_internal\": 1000,\r\n  \"paytxfee\": 0.00000000,\r\n  \"hdmasterkeyid\": \"4a4cbfcac33849b565a2eb5deecbc96c5c76c06a\"\r\n}\r\n\r\nÃ¢ÂÂ bitcoin-cli listwallets\r\n[\r\n  \"\"\r\n]\r\n```\r\n\r\nIs it possible to change this so `m_name` is filled to `wallet.dat` when no `wallet` parameter is passed?",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-20T20:25:56Z",
      "diff_hunk" : "@@ -63,7 +63,7 @@ bool WalletParameterInteraction()\n         return true;\n     }\n \n-    gArgs.SoftSetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n+    gArgs.SoftSetArg(\"-wallet\", \"\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158127240",
      "id" : 158127240,
      "original_commit_id" : "99934923d4c1dc4c0f96865b2589cc0b5df66b31",
      "original_position" : 14,
      "path" : "src/wallet/init.cpp",
      "position" : 14,
      "pull_request_review_id" : 84839001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158127240",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158133701"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158133701"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think there's any way to access the 'default' wallet with name `''` through the CLI.\r\n\r\n```\r\n(Pdb) self.nodes[0].cli(\"--rpcwallet=\").getwalletinfo()\r\n*** subprocess.CalledProcessError: Command 'bitcoin-cli' returned non-zero exit status 18\r\n```",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-20T20:57:06Z",
      "diff_hunk" : "@@ -16,85 +16,101 @@ class MultiWalletTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n-        self.extra_args = [['-wallet=w1', '-wallet=w2', '-wallet=w3', '-wallet=w']]\n \n     def run_test(self):\n-        assert_equal(set(self.nodes[0].listwallets()), {\"w1\", \"w2\", \"w3\", \"w\"})\n+        # helpers to construct data paths\n+        data_dir = lambda *p: os.path.join(self.options.tmpdir, 'node0', 'regtest', *p)\n+        wallet_dir = lambda *p: data_dir('wallets', *p)\n \n+        # check wallet.dat is created\n         self.stop_node(0)\n+        assert_equal(os.path.isfile(wallet_dir('wallet.dat')), True)\n+\n+        # create symlink to verify wallet directory path can be referenced\n+        # through symlink\n+        os.mkdir(wallet_dir('w7'))\n+        os.symlink('w7', wallet_dir('w7_symlink'))\n+\n+        # rename wallet.dat to make sure plain wallet file paths (as opposed to\n+        # directory paths) can be loaded\n+        os.rename(wallet_dir(\"wallet.dat\"), wallet_dir(\"w8\"))\n+\n+        # restart node with a mix of wallet names:\n+        #   w1, w2, w3 - to verify new wallets created when non-existing paths specified\n+        #   w          - to verify wallet name matching works when one wallet path is prefix of another\n+        #   sub/w5     - to verify relative wallet path is created correctly\n+        #   extern/w6  - to verify absolute wallet path is created correctly\n+        #   w7_symlink - to verify symlinked wallet path is initialized correctly\n+        #   w8         - to verify existing wallet file is loaded correctly\n+        #   ''         - to verify default wallet file is created correctly",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158133701",
      "id" : 158133701,
      "original_commit_id" : "99934923d4c1dc4c0f96865b2589cc0b5df66b31",
      "original_position" : 32,
      "path" : "test/functional/multiwallet.py",
      "position" : null,
      "pull_request_review_id" : 84839001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158133701",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158133900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158133900"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you also add CLI testing to this test, to verify that the `-rpcwallet` argument still works? Something like:\r\n\r\n```\r\nself.nodes[0].cli(\"--rpcwallet={}\".format(wallet_name)).getwalletinfo()\r\n```",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-20T20:58:09Z",
      "diff_hunk" : "@@ -16,85 +16,101 @@ class MultiWalletTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n-        self.extra_args = [['-wallet=w1', '-wallet=w2', '-wallet=w3', '-wallet=w']]\n \n     def run_test(self):\n-        assert_equal(set(self.nodes[0].listwallets()), {\"w1\", \"w2\", \"w3\", \"w\"})\n+        # helpers to construct data paths\n+        data_dir = lambda *p: os.path.join(self.options.tmpdir, 'node0', 'regtest', *p)\n+        wallet_dir = lambda *p: data_dir('wallets', *p)\n \n+        # check wallet.dat is created\n         self.stop_node(0)\n+        assert_equal(os.path.isfile(wallet_dir('wallet.dat')), True)\n+\n+        # create symlink to verify wallet directory path can be referenced\n+        # through symlink\n+        os.mkdir(wallet_dir('w7'))\n+        os.symlink('w7', wallet_dir('w7_symlink'))\n+\n+        # rename wallet.dat to make sure plain wallet file paths (as opposed to\n+        # directory paths) can be loaded\n+        os.rename(wallet_dir(\"wallet.dat\"), wallet_dir(\"w8\"))\n+\n+        # restart node with a mix of wallet names:\n+        #   w1, w2, w3 - to verify new wallets created when non-existing paths specified\n+        #   w          - to verify wallet name matching works when one wallet path is prefix of another\n+        #   sub/w5     - to verify relative wallet path is created correctly\n+        #   extern/w6  - to verify absolute wallet path is created correctly\n+        #   w7_symlink - to verify symlinked wallet path is initialized correctly\n+        #   w8         - to verify existing wallet file is loaded correctly\n+        #   ''         - to verify default wallet file is created correctly\n+        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', '']\n+        extra_args = ['-wallet={}'.format(n) for n in wallet_names]\n+        self.start_node(0, extra_args)\n+        assert_equal(set(self.nodes[0].listwallets()), set(wallet_names))\n+\n+        # check that all requested wallets were created\n+        self.stop_node(0)\n+        for wallet_name in wallet_names:\n+            if os.path.isdir(wallet_dir(wallet_name)):\n+                assert_equal(os.path.isfile(wallet_dir(wallet_name, \"wallet.dat\")), True)\n+            else:\n+                assert_equal(os.path.isfile(wallet_dir(wallet_name)), True)\n+\n+        # should not initialize if wallet path can't be created\n+        self.assert_start_raises_init_error(0, ['-wallet=wallet.dat/bad'], 'Not a directory')\n \n         # should not initialize if there are duplicate wallets\n         self.assert_start_raises_init_error(0, ['-wallet=w1', '-wallet=w1'], 'Error loading wallet w1. Duplicate -wallet filename specified.')\n \n-        # should not initialize if wallet file is a directory\n-        wallet_dir = os.path.join(self.options.tmpdir, 'node0', 'regtest', 'wallets')\n-        os.mkdir(os.path.join(wallet_dir, 'w11'))\n-        self.assert_start_raises_init_error(0, ['-wallet=w11'], 'Error loading wallet w11. -wallet filename must be a regular file.')\n-\n         # should not initialize if one wallet is a copy of another\n-        shutil.copyfile(os.path.join(wallet_dir, 'w2'), os.path.join(wallet_dir, 'w22'))\n-        self.assert_start_raises_init_error(0, ['-wallet=w2', '-wallet=w22'], 'duplicates fileid')\n+        shutil.copyfile(wallet_dir('w8'), wallet_dir('w8_copy'))\n+        self.assert_start_raises_init_error(0, ['-wallet=w8', '-wallet=w8_copy'], 'duplicates fileid')\n \n         # should not initialize if wallet file is a symlink\n-        os.symlink(os.path.join(wallet_dir, 'w1'), os.path.join(wallet_dir, 'w12'))\n-        self.assert_start_raises_init_error(0, ['-wallet=w12'], 'Error loading wallet w12. -wallet filename must be a regular file.')\n+        os.symlink('w8', wallet_dir('w8_symlink'))\n+        self.assert_start_raises_init_error(0, ['-wallet=w8_symlink'], 'Invalid -wallet path')\n \n         # should not initialize if the specified walletdir does not exist\n         self.assert_start_raises_init_error(0, ['-walletdir=bad'], 'Error: Specified wallet directory \"bad\" does not exist.')\n \n         # if wallets/ doesn't exist, datadir should be the default wallet dir\n-        wallet_dir2 = os.path.join(self.options.tmpdir, 'node0', 'regtest', 'walletdir')\n-        os.rename(wallet_dir, wallet_dir2)\n+        wallet_dir2 = wallet_dir() + '2'\n+        os.rename(wallet_dir(), wallet_dir2)\n         self.start_node(0, ['-wallet=w4', '-wallet=w5'])\n         assert_equal(set(self.nodes[0].listwallets()), {\"w4\", \"w5\"})\n         w5 = self.nodes[0].get_wallet_rpc(\"w5\")\n         w5.generate(1)\n         self.stop_node(0)\n \n         # now if wallets/ exists again, but the rootdir is specified as the walletdir, w4 and w5 should still be loaded\n-        os.rename(wallet_dir2, wallet_dir)\n-        self.start_node(0, ['-wallet=w4', '-wallet=w5', '-walletdir=' + os.path.join(self.options.tmpdir, 'node0', 'regtest')])\n+        os.rename(wallet_dir2, wallet_dir())\n+        self.start_node(0, ['-wallet=w4', '-wallet=w5', '-walletdir=' + data_dir()])\n         assert_equal(set(self.nodes[0].listwallets()), {\"w4\", \"w5\"})\n         w5 = self.nodes[0].get_wallet_rpc(\"w5\")\n         w5_info = w5.getwalletinfo()\n         assert_equal(w5_info['immature_balance'], 50)\n \n         self.stop_node(0)\n \n-        self.start_node(0, self.extra_args[0])\n+        self.start_node(0, extra_args)\n \n-        w1 = self.nodes[0].get_wallet_rpc(\"w1\")\n-        w2 = self.nodes[0].get_wallet_rpc(\"w2\")\n-        w3 = self.nodes[0].get_wallet_rpc(\"w3\")\n-        w4 = self.nodes[0].get_wallet_rpc(\"w\")\n+        wallets = [self.nodes[0].get_wallet_rpc(w) for w in wallet_names]\n         wallet_bad = self.nodes[0].get_wallet_rpc(\"bad\")\n \n-        w1.generate(1)\n+        # check wallet names and balances\n+        wallets[0].generate(1)\n+        for wallet_name, wallet in zip(wallet_names, wallets):\n+            info = wallet.getwalletinfo()\n+            assert_equal(info['immature_balance'], 50 if wallet is wallets[0] else 0)\n+            assert_equal(info['walletname'], wallet_name)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158133900",
      "id" : 158133900,
      "original_commit_id" : "99934923d4c1dc4c0f96865b2589cc0b5df66b31",
      "original_position" : 111,
      "path" : "test/functional/multiwallet.py",
      "position" : null,
      "pull_request_review_id" : 84839001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158133900",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158147817"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158147817"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158086757\r\n\r\nThe comment is still correct. CWalletDBWrapper class members haven't changed at all and the object still just holds an env pointer and a filename. There are comments below on how the class is initialized but these are on the constructors rather than the class itself. I think this class comment is helpful, so I'd prefer to keep it. Renaming PR #11851 might also make some of this clearer, too.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-20T22:01:40Z",
      "diff_hunk" : "@@ -85,7 +85,8 @@ class CDBEnv\n     }\n };\n \n-extern CDBEnv bitdb;\n+/** Get CDBEnv and database filename given a wallet path. */\n+CDBEnv* GetWalletEnv(const fs::path& wallet_path, std::string& database_filename);\n \n /** An instance of this class represents one database.\n  * For BerkeleyDB this is just a (env, strFile) tuple.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158147817",
      "id" : 158147817,
      "in_reply_to_id" : 158086757,
      "original_commit_id" : "99934923d4c1dc4c0f96865b2589cc0b5df66b31",
      "original_position" : 59,
      "path" : "src/wallet/db.h",
      "position" : 59,
      "pull_request_review_id" : 84911492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158147817",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158150913"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158150913"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158127240\r\n\r\n> Is it possible to change this so m_name is filled to wallet.dat when no wallet parameter is passed?\r\n\r\nAdded a note about getwalletinfo/listwallets to release notes in 8e7981fe35f359fdbddd92f468443a61c844f392.\r\n\r\nThe current behavior is if you don't specify a `-wallet` option, then a default wallet is created for you that has no name. If you do specify a `-wallet` option, whatever value you pass will be the wallet name.\r\n\r\nI think listing wallet.dat as the default name would not be good. Even though specifying -wallet=wallet.dat (or any other filename) is still allowed for backwards compatibility, the idea here is that new wallets are directories, not files, and the `wallet.dat` filename is a implementation detail, just like the names of other files in wallet directories (`db.log`, `database/log.0000000001`).",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-20T22:16:53Z",
      "diff_hunk" : "@@ -63,7 +63,7 @@ bool WalletParameterInteraction()\n         return true;\n     }\n \n-    gArgs.SoftSetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n+    gArgs.SoftSetArg(\"-wallet\", \"\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158150913",
      "id" : 158150913,
      "in_reply_to_id" : 158127240,
      "original_commit_id" : "99934923d4c1dc4c0f96865b2589cc0b5df66b31",
      "original_position" : 14,
      "path" : "src/wallet/init.cpp",
      "position" : 14,
      "pull_request_review_id" : 84911492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158150913",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158152132"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158152132"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158133701\r\n\r\n> I don't think there's any way to access the 'default' wallet with name '' through the CLI.\r\n\r\nThis is good catch, and fixed in d273391b30e35a5bfcb53403936662c690ec205f. It was possible to work around this by starting bitcoin with `-wallet=wallet.dat`, which is what you need to before this PR anyway, but better to fix this. I also made #11970 which extends multiwallet test to cover bitcoin-cli, and would have caught this bug. ",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-20T22:23:36Z",
      "diff_hunk" : "@@ -16,85 +16,101 @@ class MultiWalletTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n-        self.extra_args = [['-wallet=w1', '-wallet=w2', '-wallet=w3', '-wallet=w']]\n \n     def run_test(self):\n-        assert_equal(set(self.nodes[0].listwallets()), {\"w1\", \"w2\", \"w3\", \"w\"})\n+        # helpers to construct data paths\n+        data_dir = lambda *p: os.path.join(self.options.tmpdir, 'node0', 'regtest', *p)\n+        wallet_dir = lambda *p: data_dir('wallets', *p)\n \n+        # check wallet.dat is created\n         self.stop_node(0)\n+        assert_equal(os.path.isfile(wallet_dir('wallet.dat')), True)\n+\n+        # create symlink to verify wallet directory path can be referenced\n+        # through symlink\n+        os.mkdir(wallet_dir('w7'))\n+        os.symlink('w7', wallet_dir('w7_symlink'))\n+\n+        # rename wallet.dat to make sure plain wallet file paths (as opposed to\n+        # directory paths) can be loaded\n+        os.rename(wallet_dir(\"wallet.dat\"), wallet_dir(\"w8\"))\n+\n+        # restart node with a mix of wallet names:\n+        #   w1, w2, w3 - to verify new wallets created when non-existing paths specified\n+        #   w          - to verify wallet name matching works when one wallet path is prefix of another\n+        #   sub/w5     - to verify relative wallet path is created correctly\n+        #   extern/w6  - to verify absolute wallet path is created correctly\n+        #   w7_symlink - to verify symlinked wallet path is initialized correctly\n+        #   w8         - to verify existing wallet file is loaded correctly\n+        #   ''         - to verify default wallet file is created correctly",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158152132",
      "id" : 158152132,
      "in_reply_to_id" : 158133701,
      "original_commit_id" : "99934923d4c1dc4c0f96865b2589cc0b5df66b31",
      "original_position" : 32,
      "path" : "test/functional/multiwallet.py",
      "position" : null,
      "pull_request_review_id" : 84911492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158152132",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158152198"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158152198"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158133900\r\n\r\n> Can you also add CLI testing to this test\r\n\r\nAdded simple test in d273391b30e35a5bfcb53403936662c690ec205f, more comprehensive tests in #11970.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-20T22:23:59Z",
      "diff_hunk" : "@@ -16,85 +16,101 @@ class MultiWalletTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n-        self.extra_args = [['-wallet=w1', '-wallet=w2', '-wallet=w3', '-wallet=w']]\n \n     def run_test(self):\n-        assert_equal(set(self.nodes[0].listwallets()), {\"w1\", \"w2\", \"w3\", \"w\"})\n+        # helpers to construct data paths\n+        data_dir = lambda *p: os.path.join(self.options.tmpdir, 'node0', 'regtest', *p)\n+        wallet_dir = lambda *p: data_dir('wallets', *p)\n \n+        # check wallet.dat is created\n         self.stop_node(0)\n+        assert_equal(os.path.isfile(wallet_dir('wallet.dat')), True)\n+\n+        # create symlink to verify wallet directory path can be referenced\n+        # through symlink\n+        os.mkdir(wallet_dir('w7'))\n+        os.symlink('w7', wallet_dir('w7_symlink'))\n+\n+        # rename wallet.dat to make sure plain wallet file paths (as opposed to\n+        # directory paths) can be loaded\n+        os.rename(wallet_dir(\"wallet.dat\"), wallet_dir(\"w8\"))\n+\n+        # restart node with a mix of wallet names:\n+        #   w1, w2, w3 - to verify new wallets created when non-existing paths specified\n+        #   w          - to verify wallet name matching works when one wallet path is prefix of another\n+        #   sub/w5     - to verify relative wallet path is created correctly\n+        #   extern/w6  - to verify absolute wallet path is created correctly\n+        #   w7_symlink - to verify symlinked wallet path is initialized correctly\n+        #   w8         - to verify existing wallet file is loaded correctly\n+        #   ''         - to verify default wallet file is created correctly\n+        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', '']\n+        extra_args = ['-wallet={}'.format(n) for n in wallet_names]\n+        self.start_node(0, extra_args)\n+        assert_equal(set(self.nodes[0].listwallets()), set(wallet_names))\n+\n+        # check that all requested wallets were created\n+        self.stop_node(0)\n+        for wallet_name in wallet_names:\n+            if os.path.isdir(wallet_dir(wallet_name)):\n+                assert_equal(os.path.isfile(wallet_dir(wallet_name, \"wallet.dat\")), True)\n+            else:\n+                assert_equal(os.path.isfile(wallet_dir(wallet_name)), True)\n+\n+        # should not initialize if wallet path can't be created\n+        self.assert_start_raises_init_error(0, ['-wallet=wallet.dat/bad'], 'Not a directory')\n \n         # should not initialize if there are duplicate wallets\n         self.assert_start_raises_init_error(0, ['-wallet=w1', '-wallet=w1'], 'Error loading wallet w1. Duplicate -wallet filename specified.')\n \n-        # should not initialize if wallet file is a directory\n-        wallet_dir = os.path.join(self.options.tmpdir, 'node0', 'regtest', 'wallets')\n-        os.mkdir(os.path.join(wallet_dir, 'w11'))\n-        self.assert_start_raises_init_error(0, ['-wallet=w11'], 'Error loading wallet w11. -wallet filename must be a regular file.')\n-\n         # should not initialize if one wallet is a copy of another\n-        shutil.copyfile(os.path.join(wallet_dir, 'w2'), os.path.join(wallet_dir, 'w22'))\n-        self.assert_start_raises_init_error(0, ['-wallet=w2', '-wallet=w22'], 'duplicates fileid')\n+        shutil.copyfile(wallet_dir('w8'), wallet_dir('w8_copy'))\n+        self.assert_start_raises_init_error(0, ['-wallet=w8', '-wallet=w8_copy'], 'duplicates fileid')\n \n         # should not initialize if wallet file is a symlink\n-        os.symlink(os.path.join(wallet_dir, 'w1'), os.path.join(wallet_dir, 'w12'))\n-        self.assert_start_raises_init_error(0, ['-wallet=w12'], 'Error loading wallet w12. -wallet filename must be a regular file.')\n+        os.symlink('w8', wallet_dir('w8_symlink'))\n+        self.assert_start_raises_init_error(0, ['-wallet=w8_symlink'], 'Invalid -wallet path')\n \n         # should not initialize if the specified walletdir does not exist\n         self.assert_start_raises_init_error(0, ['-walletdir=bad'], 'Error: Specified wallet directory \"bad\" does not exist.')\n \n         # if wallets/ doesn't exist, datadir should be the default wallet dir\n-        wallet_dir2 = os.path.join(self.options.tmpdir, 'node0', 'regtest', 'walletdir')\n-        os.rename(wallet_dir, wallet_dir2)\n+        wallet_dir2 = wallet_dir() + '2'\n+        os.rename(wallet_dir(), wallet_dir2)\n         self.start_node(0, ['-wallet=w4', '-wallet=w5'])\n         assert_equal(set(self.nodes[0].listwallets()), {\"w4\", \"w5\"})\n         w5 = self.nodes[0].get_wallet_rpc(\"w5\")\n         w5.generate(1)\n         self.stop_node(0)\n \n         # now if wallets/ exists again, but the rootdir is specified as the walletdir, w4 and w5 should still be loaded\n-        os.rename(wallet_dir2, wallet_dir)\n-        self.start_node(0, ['-wallet=w4', '-wallet=w5', '-walletdir=' + os.path.join(self.options.tmpdir, 'node0', 'regtest')])\n+        os.rename(wallet_dir2, wallet_dir())\n+        self.start_node(0, ['-wallet=w4', '-wallet=w5', '-walletdir=' + data_dir()])\n         assert_equal(set(self.nodes[0].listwallets()), {\"w4\", \"w5\"})\n         w5 = self.nodes[0].get_wallet_rpc(\"w5\")\n         w5_info = w5.getwalletinfo()\n         assert_equal(w5_info['immature_balance'], 50)\n \n         self.stop_node(0)\n \n-        self.start_node(0, self.extra_args[0])\n+        self.start_node(0, extra_args)\n \n-        w1 = self.nodes[0].get_wallet_rpc(\"w1\")\n-        w2 = self.nodes[0].get_wallet_rpc(\"w2\")\n-        w3 = self.nodes[0].get_wallet_rpc(\"w3\")\n-        w4 = self.nodes[0].get_wallet_rpc(\"w\")\n+        wallets = [self.nodes[0].get_wallet_rpc(w) for w in wallet_names]\n         wallet_bad = self.nodes[0].get_wallet_rpc(\"bad\")\n \n-        w1.generate(1)\n+        # check wallet names and balances\n+        wallets[0].generate(1)\n+        for wallet_name, wallet in zip(wallet_names, wallets):\n+            info = wallet.getwalletinfo()\n+            assert_equal(info['immature_balance'], 50 if wallet is wallets[0] else 0)\n+            assert_equal(info['walletname'], wallet_name)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158152198",
      "id" : 158152198,
      "in_reply_to_id" : 158133900,
      "original_commit_id" : "99934923d4c1dc4c0f96865b2589cc0b5df66b31",
      "original_position" : 111,
      "path" : "test/functional/multiwallet.py",
      "position" : null,
      "pull_request_review_id" : 84911492,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158152198",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "Code changes look good, and some of the refactors really help with readability.\r\n\r\nTwo things I'm unsure about:\r\n* ~~Making wallets directories. Maybe it results in slightly easier backup procedures (if people interpret it correctly), but it's also more mental load (\"my wallet is just wallet.dat right?\").~~\r\n* Changing the wallet dir based on whether $DATADIR/wallets exists, that seems a bit fragile. Though it seems that's already in master?",
      "created_at" : "2017-12-20T23:17:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-353211134",
      "id" : 353211134,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-12-25T14:43:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353211134",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa yep that was part of #11466",
      "created_at" : "2017-12-21T00:08:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-353219381",
      "id" : 353219381,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-12-21T00:08:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353219381",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/3211283?v=4",
         "events_url" : "https://api.github.com/users/MeshCollider/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MeshCollider/followers",
         "following_url" : "https://api.github.com/users/MeshCollider/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MeshCollider/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MeshCollider",
         "id" : 3211283,
         "login" : "MeshCollider",
         "organizations_url" : "https://api.github.com/users/MeshCollider/orgs",
         "received_events_url" : "https://api.github.com/users/MeshCollider/received_events",
         "repos_url" : "https://api.github.com/users/MeshCollider/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MeshCollider/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MeshCollider/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MeshCollider"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Two things I'm unsure about:\r\n>\r\n> - Making wallets directories. Maybe it results in slightly easier backup procedures (if people interpret it correctly), but it's also more mental load (\"my wallet is just wallet.dat right?\").\r\n\r\nI'm not sure I understand the point about mental load.\r\n\r\nFor typical user who isn't using multiwallet or setting any `-wallet=path` option, nothing is changing here. wallet.dat is still created in the same place as before and can be backed up the same way. For more advanced users who do specify `-wallet=<path>` options, the specified path will just be created as a directory instead of a file.\r\n\r\n> - Changing the wallet dir based on whether $DATADIR/wallets exists, that seems a bit fragile. Though it seems that's already in master?\r\n\r\nYes, this was done in #11466. I think a less fragile implementation of the idea might search for existing wallets in both `<walletdir>` and `<datadir>` but create all new wallets in `<walletdir>`. This could be implemented entirely in the wallet and would avoid the init order dependencies introduced in #11466 between node, qt, and wallet code. However, I don't actually understand what was accomplished in #11466 by changing the default wallet directory to begin with, so maybe this falls short in some way. Probably better to discuss somewhere else like #11466, though, since it's not really related to this PR.",
      "created_at" : "2017-12-21T13:14:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-353347901",
      "id" : 353347901,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-12-21T13:14:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353347901",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158304599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158304599"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why this change? To reduce `walletName` scope?",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-21T15:27:53Z",
      "diff_hunk" : "@@ -338,8 +338,8 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n \n     // check if we should use a special wallet endpoint\n     std::string endpoint = \"/\";\n-    std::string walletName = gArgs.GetArg(\"-rpcwallet\", \"\");\n-    if (!walletName.empty()) {\n+    if (!gArgs.GetArgs(\"-rpcwallet\").empty()) {\n+        std::string walletName = gArgs.GetArg(\"-rpcwallet\", \"\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158304599",
      "id" : 158304599,
      "original_commit_id" : "fbc2402357dedd1e97cb2adcaef452393e656e8c",
      "original_position" : 16,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 16,
      "pull_request_review_id" : 85094242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158304599",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158308524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158308524"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "isdir?",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-21T15:43:07Z",
      "diff_hunk" : "@@ -37,13 +37,13 @@ def run_test(self):\n         os.mkdir(new_data_dir)\n         self.start_node(0, ['-conf='+conf_file, '-wallet=w1'])\n         self.stop_node(0)\n-        assert os.path.isfile(os.path.join(new_data_dir, 'regtest', 'wallets', 'w1'))\n+        assert os.path.exists(os.path.join(new_data_dir, 'regtest', 'wallets', 'w1'))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158308524",
      "id" : 158308524,
      "original_commit_id" : "b355cf77508c5b2086062f151d83ff09b1371ca9",
      "original_position" : 5,
      "path" : "test/functional/conf_args.py",
      "position" : null,
      "pull_request_review_id" : 85094242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158308524",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158312157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158312157"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Why this change? To reduce walletName scope?\r\n\r\nYes and to avoid declaring a variable that will never be used.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-21T15:56:24Z",
      "diff_hunk" : "@@ -338,8 +338,8 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n \n     // check if we should use a special wallet endpoint\n     std::string endpoint = \"/\";\n-    std::string walletName = gArgs.GetArg(\"-rpcwallet\", \"\");\n-    if (!walletName.empty()) {\n+    if (!gArgs.GetArgs(\"-rpcwallet\").empty()) {\n+        std::string walletName = gArgs.GetArg(\"-rpcwallet\", \"\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158312157",
      "id" : 158312157,
      "in_reply_to_id" : 158304599,
      "original_commit_id" : "fbc2402357dedd1e97cb2adcaef452393e656e8c",
      "original_position" : 16,
      "path" : "src/bitcoin-cli.cpp",
      "position" : 16,
      "pull_request_review_id" : 85103277,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158312157",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158312299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158312299"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Seems worse, makes test more fragile than it needs to be.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-21T15:56:53Z",
      "diff_hunk" : "@@ -37,13 +37,13 @@ def run_test(self):\n         os.mkdir(new_data_dir)\n         self.start_node(0, ['-conf='+conf_file, '-wallet=w1'])\n         self.stop_node(0)\n-        assert os.path.isfile(os.path.join(new_data_dir, 'regtest', 'wallets', 'w1'))\n+        assert os.path.exists(os.path.join(new_data_dir, 'regtest', 'wallets', 'w1'))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158312299",
      "id" : 158312299,
      "in_reply_to_id" : 158308524,
      "original_commit_id" : "b355cf77508c5b2086062f151d83ff09b1371ca9",
      "original_position" : 5,
      "path" : "test/functional/conf_args.py",
      "position" : null,
      "pull_request_review_id" : 85103437,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/158312299",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Added 1 commit fbc2402357dedd1e97cb2adcaef452393e656e8c -> b355cf77508c5b2086062f151d83ff09b1371ca9 ([pr/wfile.14](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.14) -> [pr/wfile.15](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.15), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wfile.14...pr/wfile.15)) to fix travis test.\r\nSquashed b355cf77508c5b2086062f151d83ff09b1371ca9 -> 5e8c79c1e8754bca52d7185983ba69dc9a33102f ([pr/wfile.15](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.15) -> [pr/wfile.16](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.16))\r\n",
      "created_at" : "2017-12-21T17:19:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-353407177",
      "id" : 353407177,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-12-21T18:03:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353407177",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "@ryanofsky Removed my concern about the wallets-becoming-directories. I guess that anyone who isn't aware that wallets can be directories will in fact not have any such wallets, as requires explicitly configuring a directory.\r\n\r\nNeeds rebase.",
      "created_at" : "2017-12-25T14:44:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-353873641",
      "id" : 353873641,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-12-25T14:44:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/353873641",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r159020587"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159020587"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, agree, not relevant here.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2017-12-29T02:50:41Z",
      "diff_hunk" : "@@ -37,13 +37,13 @@ def run_test(self):\n         os.mkdir(new_data_dir)\n         self.start_node(0, ['-conf='+conf_file, '-wallet=w1'])\n         self.stop_node(0)\n-        assert os.path.isfile(os.path.join(new_data_dir, 'regtest', 'wallets', 'w1'))\n+        assert os.path.exists(os.path.join(new_data_dir, 'regtest', 'wallets', 'w1'))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r159020587",
      "id" : 159020587,
      "in_reply_to_id" : 158308524,
      "original_commit_id" : "b355cf77508c5b2086062f151d83ff09b1371ca9",
      "original_position" : 5,
      "path" : "test/functional/conf_args.py",
      "position" : null,
      "pull_request_review_id" : 85907365,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/159020587",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ryanofsky needs rebase.",
      "created_at" : "2017-12-29T02:55:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-354390765",
      "id" : 354390765,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-12-29T02:55:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/354390765",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 5e8c79c1e8754bca52d7185983ba69dc9a33102f -> 2fd9c2b318b69ce3e7ce1fba5eb7f3fb5c781876 ([pr/wfile.16](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.16) -> [pr/wfile.17](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.17)) to avoid merge conflict in release notes. No changes.",
      "created_at" : "2017-12-31T21:43:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-354624985",
      "id" : 354624985,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2017-12-31T21:43:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/354624985",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Status of this PR is unclear, but more review is welcome. So far have:\r\n\r\nCode ack MeshCollider Dec 18 https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-352574486\r\nCode ack from TheBlueMatt Dec 13 https://github.com/bitcoin/bitcoin/pull/11687#pullrequestreview-83313824\r\nConcept ack from sipa Nov 18 https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-345467887 and Dec 25 https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-353873641\r\nConcept ack from laanwj Nov 20 https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-345625565\r\nPartial reviews from jnewbery, promag, and PierreRochard.\r\n\r\nThere is a trivial merge conflict with segwit wallet #11403 in wallet_test_fixture.cpp, but this could probably be avoided if it matters.",
      "created_at" : "2018-01-04T12:46:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-355273667",
      "id" : 355273667,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-04T12:46:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355273667",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Sorry for the late concept feedback, but the config model seems a little confusing to me:\r\n\r\n- `datadir` defaults to `~/.bitcoin` (on linux) and can be overridden by an absolute or relative path (relative to cwd)\r\n- `walletdir` detaults to `<datadir>/wallets` if it exists, or `<datadir>` if it doesn't exist, and can be overridden by an absolute or relative path (relative to cwd)\r\n- `wallet` defaults to `<walletdir>` and can be overridden by an absolute or relative path (relative to `<walletdir>`).\r\n\r\nWithout any arguments, a wallet will be created at `<datadir>/wallets/wallet.dat` (if `<datadir>/wallets` exists) or `<datadir>/wallet.dat` (if `<datadir>/wallets` does not exist). `listwallets` and `getwalletinfo` will show this wallet's name to be `''`. If bitcoind is restarted with `--wallet=wallet.dat`, `listwallets` and `getwalletinfo` will show the same wallet's name to be `wallet.dat`.\r\n\r\nThe main points of confusion:\r\n1. `datadir` and `walletdir` paths are relative to cwd, but `wallet` is relative to `walletdir`\r\n2. `walletdir` default depends on existence of `wallets` directory in `datadir`\r\n3. wallet name can depend on how bitcoind was invoked\r\n\r\nI think (1) and (2) could be addressed with very clear documentation (I think the release notes are *almost* there, but the help text could also be improved). You could also consider disallowing relative paths for `wallet` - it could either take a string (which would refer to a .dat file or directory in `walletdir`) or an absolute path.\r\n\r\nI don't like (3) and think that the wallet name should always exactly equal the wallet file or directory.",
      "created_at" : "2018-01-09T00:03:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-356136301",
      "id" : 356136301,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-09T00:03:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356136301",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160495875"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160495875"
         }
      },
      "author_association" : "MEMBER",
      "body" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r158147817\r\n\r\nYes, agree.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2018-01-09T18:59:55Z",
      "diff_hunk" : "@@ -85,7 +85,8 @@ class CDBEnv\n     }\n };\n \n-extern CDBEnv bitdb;\n+/** Get CDBEnv and database filename given a wallet path. */\n+CDBEnv* GetWalletEnv(const fs::path& wallet_path, std::string& database_filename);\n \n /** An instance of this class represents one database.\n  * For BerkeleyDB this is just a (env, strFile) tuple.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160495875",
      "id" : 160495875,
      "in_reply_to_id" : 158086757,
      "original_commit_id" : "99934923d4c1dc4c0f96865b2589cc0b5df66b31",
      "original_position" : 59,
      "path" : "src/wallet/db.h",
      "position" : 59,
      "pull_request_review_id" : 87623467,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160495875",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160508446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160508446"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Note that `std::map::emplace` can construct the object even if the key exists in the map, according to http://en.cppreference.com/w/cpp/container/map/emplace (\"The element may be constructed even if there already is an element with the key in the container, in which case the newly constructed element will be destroyed immediately.\")\r\n\r\nIn this case I think it's fine - the constructor simply calls `Reset()` and then the destructor gets called.\r\n\r\nThis goes away in the follow-up PR (#11911), but perhaps just add a comment explaining this.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2018-01-09T19:51:17Z",
      "diff_hunk" : "@@ -52,20 +52,51 @@ void CheckUniqueFileid(const CDBEnv& env, const std::string& filename, Db& db)\n         }\n     }\n }\n+\n+CCriticalSection cs_db;\n+std::map<std::string, CDBEnv> g_dbenvs; //!< Map from directory name to open db environment.\n } // namespace\n \n+CDBEnv* GetWalletEnv(const fs::path& wallet_path, std::string& database_filename)\n+{\n+    fs::path env_directory;\n+    if (fs::is_regular_file(wallet_path)) {\n+        // Special case for backwards compatibility: if wallet path points to an\n+        // existing file, treat it as the path to a BDB data file in a parent\n+        // directory that also contains BDB log files.\n+        env_directory = wallet_path.parent_path();\n+        database_filename = wallet_path.filename().string();\n+    } else {\n+        // Normal case: Interpret wallet path as a directory path containing\n+        // data and log files.\n+        env_directory = wallet_path;\n+        database_filename = \"wallet.dat\";\n+    }\n+    LOCK(cs_db);\n+    return &g_dbenvs.emplace(std::piecewise_construct, std::forward_as_tuple(env_directory.string()), std::forward_as_tuple(env_directory)).first->second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160508446",
      "id" : 160508446,
      "original_commit_id" : "2fd9c2b318b69ce3e7ce1fba5eb7f3fb5c781876",
      "original_position" : 25,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 87638478,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160508446",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160518649"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160518649"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I believe this help text is incorrect. Should be `\"Path is interpreted relative to the <walletdir> directory if it is not absolute\"`",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2018-01-09T20:40:07Z",
      "diff_hunk" : "@@ -33,7 +33,7 @@ std::string GetWalletHelpString(bool showDebug)\n     strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n     strUsage += HelpMessageOpt(\"-walletrbf\", strprintf(_(\"Send transactions with full-RBF opt-in enabled (RPC only, default: %u)\"), DEFAULT_WALLET_RBF));\n     strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n-    strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), DEFAULT_WALLET_DAT));\n+    strUsage += HelpMessageOpt(\"-wallet=<path>\", _(\"Specify wallet database path. Can be specified multiple times to load multiple wallets. Path is interpreted relative to the bitcoin data directory if it is not absolute, and will be created if it does not exist (as a directory containing a wallet.dat file and log files). For backwards compatibility this will also accept names of existing data files in -walletdir.)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160518649",
      "id" : 160518649,
      "original_commit_id" : "2fd9c2b318b69ce3e7ce1fba5eb7f3fb5c781876",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 87638478,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160518649",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160521579"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160521579"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: can combine with line above for `self.restart_node(0, extra_args)`",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2018-01-09T20:53:05Z",
      "diff_hunk" : "@@ -16,89 +16,105 @@ class MultiWalletTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n-        self.extra_args = [['-wallet=w1', '-wallet=w2', '-wallet=w3', '-wallet=w']]\n \n     def run_test(self):\n-        assert_equal(set(self.nodes[0].listwallets()), {\"w1\", \"w2\", \"w3\", \"w\"})\n+        # helpers to construct data paths\n+        data_dir = lambda *p: os.path.join(self.options.tmpdir, 'node0', 'regtest', *p)\n+        wallet_dir = lambda *p: data_dir('wallets', *p)\n \n+        # check wallet.dat is created\n         self.stop_node(0)\n+        assert_equal(os.path.isfile(wallet_dir('wallet.dat')), True)\n+\n+        # create symlink to verify wallet directory path can be referenced\n+        # through symlink\n+        os.mkdir(wallet_dir('w7'))\n+        os.symlink('w7', wallet_dir('w7_symlink'))\n+\n+        # rename wallet.dat to make sure plain wallet file paths (as opposed to\n+        # directory paths) can be loaded\n+        os.rename(wallet_dir(\"wallet.dat\"), wallet_dir(\"w8\"))\n+\n+        # restart node with a mix of wallet names:\n+        #   w1, w2, w3 - to verify new wallets created when non-existing paths specified\n+        #   w          - to verify wallet name matching works when one wallet path is prefix of another\n+        #   sub/w5     - to verify relative wallet path is created correctly\n+        #   extern/w6  - to verify absolute wallet path is created correctly\n+        #   w7_symlink - to verify symlinked wallet path is initialized correctly\n+        #   w8         - to verify existing wallet file is loaded correctly\n+        #   ''         - to verify default wallet file is created correctly\n+        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', '']\n+        extra_args = ['-wallet={}'.format(n) for n in wallet_names]\n+        self.start_node(0, extra_args)\n+        assert_equal(set(self.nodes[0].listwallets()), set(wallet_names))\n+\n+        # check that all requested wallets were created\n+        self.stop_node(0)\n+        for wallet_name in wallet_names:\n+            if os.path.isdir(wallet_dir(wallet_name)):\n+                assert_equal(os.path.isfile(wallet_dir(wallet_name, \"wallet.dat\")), True)\n+            else:\n+                assert_equal(os.path.isfile(wallet_dir(wallet_name)), True)\n+\n+        # should not initialize if wallet path can't be created\n+        self.assert_start_raises_init_error(0, ['-wallet=wallet.dat/bad'], 'Not a directory')\n \n         # should not initialize if there are duplicate wallets\n         self.assert_start_raises_init_error(0, ['-wallet=w1', '-wallet=w1'], 'Error loading wallet w1. Duplicate -wallet filename specified.')\n \n-        # should not initialize if wallet file is a directory\n-        wallet_dir = os.path.join(self.options.tmpdir, 'node0', 'regtest', 'wallets')\n-        os.mkdir(os.path.join(wallet_dir, 'w11'))\n-        self.assert_start_raises_init_error(0, ['-wallet=w11'], 'Error loading wallet w11. -wallet filename must be a regular file.')\n-\n         # should not initialize if one wallet is a copy of another\n-        shutil.copyfile(os.path.join(wallet_dir, 'w2'), os.path.join(wallet_dir, 'w22'))\n-        self.assert_start_raises_init_error(0, ['-wallet=w2', '-wallet=w22'], 'duplicates fileid')\n+        shutil.copyfile(wallet_dir('w8'), wallet_dir('w8_copy'))\n+        self.assert_start_raises_init_error(0, ['-wallet=w8', '-wallet=w8_copy'], 'duplicates fileid')\n \n         # should not initialize if wallet file is a symlink\n-        os.symlink(os.path.join(wallet_dir, 'w1'), os.path.join(wallet_dir, 'w12'))\n-        self.assert_start_raises_init_error(0, ['-wallet=w12'], 'Error loading wallet w12. -wallet filename must be a regular file.')\n+        os.symlink('w8', wallet_dir('w8_symlink'))\n+        self.assert_start_raises_init_error(0, ['-wallet=w8_symlink'], 'Invalid -wallet path')\n \n         # should not initialize if the specified walletdir does not exist\n         self.assert_start_raises_init_error(0, ['-walletdir=bad'], 'Error: Specified -walletdir \"bad\" does not exist')\n         # should not initialize if the specified walletdir is not a directory\n-        not_a_dir = os.path.join(wallet_dir, 'notadir')\n+        not_a_dir = wallet_dir('notadir')\n         open(not_a_dir, 'a').close()\n         self.assert_start_raises_init_error(0, ['-walletdir='+not_a_dir], 'Error: Specified -walletdir \"' + not_a_dir + '\" is not a directory')\n \n         # if wallets/ doesn't exist, datadir should be the default wallet dir\n-        wallet_dir2 = os.path.join(self.options.tmpdir, 'node0', 'regtest', 'walletdir')\n-        os.rename(wallet_dir, wallet_dir2)\n+        wallet_dir2 = wallet_dir() + '2'\n+        os.rename(wallet_dir(), wallet_dir2)\n         self.start_node(0, ['-wallet=w4', '-wallet=w5'])\n         assert_equal(set(self.nodes[0].listwallets()), {\"w4\", \"w5\"})\n         w5 = self.nodes[0].get_wallet_rpc(\"w5\")\n         w5.generate(1)\n         self.stop_node(0)\n \n         # now if wallets/ exists again, but the rootdir is specified as the walletdir, w4 and w5 should still be loaded\n-        os.rename(wallet_dir2, wallet_dir)\n-        self.start_node(0, ['-wallet=w4', '-wallet=w5', '-walletdir=' + os.path.join(self.options.tmpdir, 'node0', 'regtest')])\n+        os.rename(wallet_dir2, wallet_dir())\n+        self.start_node(0, ['-wallet=w4', '-wallet=w5', '-walletdir=' + data_dir()])\n         assert_equal(set(self.nodes[0].listwallets()), {\"w4\", \"w5\"})\n         w5 = self.nodes[0].get_wallet_rpc(\"w5\")\n         w5_info = w5.getwalletinfo()\n         assert_equal(w5_info['immature_balance'], 50)\n \n         self.stop_node(0)\n \n-        self.start_node(0, self.extra_args[0])\n+        self.start_node(0, extra_args)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160521579",
      "id" : 160521579,
      "original_commit_id" : "2fd9c2b318b69ce3e7ce1fba5eb7f3fb5c781876",
      "original_position" : 101,
      "path" : "test/functional/multiwallet.py",
      "position" : null,
      "pull_request_review_id" : 87638478,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160521579",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160703266"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160703266"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Note that std::map::emplace can construct the object even if the key exists in the map\r\n\r\nAdded comment in 69de7c1d8d8326d159634e8949bc3ac67266f534.\r\n\r\nI was surprised by this but it actually does seem to happen in practice. Following test program shows two objects being constructed:\r\n\r\n```c++\r\n#include <map>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nstruct C {\r\n  C(int) {cout << \" C \" << this << endl;}\r\n  ~C() {cout << \"~C \" << this << endl;}\r\n};\r\n\r\nint main(int, char**) {\r\n  map<string, C> m;\r\n  m.emplace(piecewise_construct, forward_as_tuple(\"key\"), forward_as_tuple(5));\r\n  cout << \"-\" << endl;\r\n  m.emplace(piecewise_construct, forward_as_tuple(\"key\"), forward_as_tuple(5));\r\n  cout << \"-\" << endl;\r\n}\r\n\r\n```\r\n\r\n",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2018-01-10T15:07:24Z",
      "diff_hunk" : "@@ -52,20 +52,51 @@ void CheckUniqueFileid(const CDBEnv& env, const std::string& filename, Db& db)\n         }\n     }\n }\n+\n+CCriticalSection cs_db;\n+std::map<std::string, CDBEnv> g_dbenvs; //!< Map from directory name to open db environment.\n } // namespace\n \n+CDBEnv* GetWalletEnv(const fs::path& wallet_path, std::string& database_filename)\n+{\n+    fs::path env_directory;\n+    if (fs::is_regular_file(wallet_path)) {\n+        // Special case for backwards compatibility: if wallet path points to an\n+        // existing file, treat it as the path to a BDB data file in a parent\n+        // directory that also contains BDB log files.\n+        env_directory = wallet_path.parent_path();\n+        database_filename = wallet_path.filename().string();\n+    } else {\n+        // Normal case: Interpret wallet path as a directory path containing\n+        // data and log files.\n+        env_directory = wallet_path;\n+        database_filename = \"wallet.dat\";\n+    }\n+    LOCK(cs_db);\n+    return &g_dbenvs.emplace(std::piecewise_construct, std::forward_as_tuple(env_directory.string()), std::forward_as_tuple(env_directory)).first->second;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160703266",
      "id" : 160703266,
      "in_reply_to_id" : 160508446,
      "original_commit_id" : "2fd9c2b318b69ce3e7ce1fba5eb7f3fb5c781876",
      "original_position" : 25,
      "path" : "src/wallet/db.cpp",
      "position" : null,
      "pull_request_review_id" : 87865301,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160703266",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160703537"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160703537"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> nit: can combine with line above for self.restart_node(0, extra_args)\r\n\r\nCombined in 69de7c1d8d8326d159634e8949bc3ac67266f534.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2018-01-10T15:08:22Z",
      "diff_hunk" : "@@ -16,89 +16,105 @@ class MultiWalletTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n-        self.extra_args = [['-wallet=w1', '-wallet=w2', '-wallet=w3', '-wallet=w']]\n \n     def run_test(self):\n-        assert_equal(set(self.nodes[0].listwallets()), {\"w1\", \"w2\", \"w3\", \"w\"})\n+        # helpers to construct data paths\n+        data_dir = lambda *p: os.path.join(self.options.tmpdir, 'node0', 'regtest', *p)\n+        wallet_dir = lambda *p: data_dir('wallets', *p)\n \n+        # check wallet.dat is created\n         self.stop_node(0)\n+        assert_equal(os.path.isfile(wallet_dir('wallet.dat')), True)\n+\n+        # create symlink to verify wallet directory path can be referenced\n+        # through symlink\n+        os.mkdir(wallet_dir('w7'))\n+        os.symlink('w7', wallet_dir('w7_symlink'))\n+\n+        # rename wallet.dat to make sure plain wallet file paths (as opposed to\n+        # directory paths) can be loaded\n+        os.rename(wallet_dir(\"wallet.dat\"), wallet_dir(\"w8\"))\n+\n+        # restart node with a mix of wallet names:\n+        #   w1, w2, w3 - to verify new wallets created when non-existing paths specified\n+        #   w          - to verify wallet name matching works when one wallet path is prefix of another\n+        #   sub/w5     - to verify relative wallet path is created correctly\n+        #   extern/w6  - to verify absolute wallet path is created correctly\n+        #   w7_symlink - to verify symlinked wallet path is initialized correctly\n+        #   w8         - to verify existing wallet file is loaded correctly\n+        #   ''         - to verify default wallet file is created correctly\n+        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', '']\n+        extra_args = ['-wallet={}'.format(n) for n in wallet_names]\n+        self.start_node(0, extra_args)\n+        assert_equal(set(self.nodes[0].listwallets()), set(wallet_names))\n+\n+        # check that all requested wallets were created\n+        self.stop_node(0)\n+        for wallet_name in wallet_names:\n+            if os.path.isdir(wallet_dir(wallet_name)):\n+                assert_equal(os.path.isfile(wallet_dir(wallet_name, \"wallet.dat\")), True)\n+            else:\n+                assert_equal(os.path.isfile(wallet_dir(wallet_name)), True)\n+\n+        # should not initialize if wallet path can't be created\n+        self.assert_start_raises_init_error(0, ['-wallet=wallet.dat/bad'], 'Not a directory')\n \n         # should not initialize if there are duplicate wallets\n         self.assert_start_raises_init_error(0, ['-wallet=w1', '-wallet=w1'], 'Error loading wallet w1. Duplicate -wallet filename specified.')\n \n-        # should not initialize if wallet file is a directory\n-        wallet_dir = os.path.join(self.options.tmpdir, 'node0', 'regtest', 'wallets')\n-        os.mkdir(os.path.join(wallet_dir, 'w11'))\n-        self.assert_start_raises_init_error(0, ['-wallet=w11'], 'Error loading wallet w11. -wallet filename must be a regular file.')\n-\n         # should not initialize if one wallet is a copy of another\n-        shutil.copyfile(os.path.join(wallet_dir, 'w2'), os.path.join(wallet_dir, 'w22'))\n-        self.assert_start_raises_init_error(0, ['-wallet=w2', '-wallet=w22'], 'duplicates fileid')\n+        shutil.copyfile(wallet_dir('w8'), wallet_dir('w8_copy'))\n+        self.assert_start_raises_init_error(0, ['-wallet=w8', '-wallet=w8_copy'], 'duplicates fileid')\n \n         # should not initialize if wallet file is a symlink\n-        os.symlink(os.path.join(wallet_dir, 'w1'), os.path.join(wallet_dir, 'w12'))\n-        self.assert_start_raises_init_error(0, ['-wallet=w12'], 'Error loading wallet w12. -wallet filename must be a regular file.')\n+        os.symlink('w8', wallet_dir('w8_symlink'))\n+        self.assert_start_raises_init_error(0, ['-wallet=w8_symlink'], 'Invalid -wallet path')\n \n         # should not initialize if the specified walletdir does not exist\n         self.assert_start_raises_init_error(0, ['-walletdir=bad'], 'Error: Specified -walletdir \"bad\" does not exist')\n         # should not initialize if the specified walletdir is not a directory\n-        not_a_dir = os.path.join(wallet_dir, 'notadir')\n+        not_a_dir = wallet_dir('notadir')\n         open(not_a_dir, 'a').close()\n         self.assert_start_raises_init_error(0, ['-walletdir='+not_a_dir], 'Error: Specified -walletdir \"' + not_a_dir + '\" is not a directory')\n \n         # if wallets/ doesn't exist, datadir should be the default wallet dir\n-        wallet_dir2 = os.path.join(self.options.tmpdir, 'node0', 'regtest', 'walletdir')\n-        os.rename(wallet_dir, wallet_dir2)\n+        wallet_dir2 = wallet_dir() + '2'\n+        os.rename(wallet_dir(), wallet_dir2)\n         self.start_node(0, ['-wallet=w4', '-wallet=w5'])\n         assert_equal(set(self.nodes[0].listwallets()), {\"w4\", \"w5\"})\n         w5 = self.nodes[0].get_wallet_rpc(\"w5\")\n         w5.generate(1)\n         self.stop_node(0)\n \n         # now if wallets/ exists again, but the rootdir is specified as the walletdir, w4 and w5 should still be loaded\n-        os.rename(wallet_dir2, wallet_dir)\n-        self.start_node(0, ['-wallet=w4', '-wallet=w5', '-walletdir=' + os.path.join(self.options.tmpdir, 'node0', 'regtest')])\n+        os.rename(wallet_dir2, wallet_dir())\n+        self.start_node(0, ['-wallet=w4', '-wallet=w5', '-walletdir=' + data_dir()])\n         assert_equal(set(self.nodes[0].listwallets()), {\"w4\", \"w5\"})\n         w5 = self.nodes[0].get_wallet_rpc(\"w5\")\n         w5_info = w5.getwalletinfo()\n         assert_equal(w5_info['immature_balance'], 50)\n \n         self.stop_node(0)\n \n-        self.start_node(0, self.extra_args[0])\n+        self.start_node(0, extra_args)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160703537",
      "id" : 160703537,
      "in_reply_to_id" : 160521579,
      "original_commit_id" : "2fd9c2b318b69ce3e7ce1fba5eb7f3fb5c781876",
      "original_position" : 101,
      "path" : "test/functional/multiwallet.py",
      "position" : null,
      "pull_request_review_id" : 87865301,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160703537",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160703654"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160703654"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I believe this help text is incorrect.\r\n\r\nGood catch! Fixed in 69de7c1d8d8326d159634e8949bc3ac67266f534. This was written before the `-walletdir` option was added.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2018-01-10T15:08:51Z",
      "diff_hunk" : "@@ -33,7 +33,7 @@ std::string GetWalletHelpString(bool showDebug)\n     strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n     strUsage += HelpMessageOpt(\"-walletrbf\", strprintf(_(\"Send transactions with full-RBF opt-in enabled (RPC only, default: %u)\"), DEFAULT_WALLET_RBF));\n     strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n-    strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), DEFAULT_WALLET_DAT));\n+    strUsage += HelpMessageOpt(\"-wallet=<path>\", _(\"Specify wallet database path. Can be specified multiple times to load multiple wallets. Path is interpreted relative to the bitcoin data directory if it is not absolute, and will be created if it does not exist (as a directory containing a wallet.dat file and log files). For backwards compatibility this will also accept names of existing data files in -walletdir.)\"));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r160703654",
      "id" : 160703654,
      "in_reply_to_id" : 160518649,
      "original_commit_id" : "2fd9c2b318b69ce3e7ce1fba5eb7f3fb5c781876",
      "original_position" : 5,
      "path" : "src/wallet/init.cpp",
      "position" : null,
      "pull_request_review_id" : 87865301,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/160703654",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased f9e7244449ad69b8b58bff4298bfacd9f16a1cd5 -> 0a2d86f8ef64927c444dadcfc1f700705af784fa ([pr/wfile.19](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.19) -> [pr/wfile.20](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.20)) due to minor `wallet_test_fixture.cpp` conflict with #11403\r\n",
      "created_at" : "2018-01-11T13:14:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-356930523",
      "id" : 356930523,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-11T13:14:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356930523",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 0a2d86f8ef64927c444dadcfc1f700705af784fa -> 5c8398dc03167f85ce5c8454fad8420dbcb89edb ([pr/wfile.20](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.20) -> [pr/wfile.21](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.21)) due to minor conflict with #12150",
      "created_at" : "2018-01-11T16:00:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-356972562",
      "id" : 356972562,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-11T16:00:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356972562",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "As discussed, I think that the release notes in https://github.com/jnewbery/bitcoin/tree/pr11687.1 are perhaps clearer. I still think that the default `''` name is a little odd, but with those updated release notes, I think it makes sense.\r\n\r\nACK 5c8398dc03167f85ce5c8454fad8420dbcb89edb",
      "created_at" : "2018-01-11T22:11:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-357078148",
      "id" : 357078148,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-11T22:11:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357078148",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This now has three code ACKs and two concept ACKs. It'd be nice to get this into v0.16 if at all possible so we don't have two consecutive releases that change the wallet command line arguments.",
      "created_at" : "2018-01-11T22:12:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-357078453",
      "id" : 357078453,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-11T22:12:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357078453",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It'd be nice to get this into v0.16 if at all possible so we don't have two consecutive releases that change the wallet command line arguments.\r\n\r\nOf course I'd be happier to see this merged sooner, but I also don't think it's a big deal if this is pushed back. Unlike #11466, this doesn't change the location where files are created by default, so it's more backwards compatible than that change was. And despite some confusion in the comments above, I still see change and #11466 as basically orthogonal, since #11466 is more about where wallets are located, and this PR is more about how they are formatted.",
      "created_at" : "2018-01-11T22:58:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-357089318",
      "id" : 357089318,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-11T22:58:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357089318",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "great, was exactly looking to have a wallet on a seperate luks drive.",
      "created_at" : "2018-01-12T13:30:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-357238498",
      "id" : 357238498,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-12T13:30:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357238498",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/4327142?v=4",
         "events_url" : "https://api.github.com/users/alphaaurigae/events{/privacy}",
         "followers_url" : "https://api.github.com/users/alphaaurigae/followers",
         "following_url" : "https://api.github.com/users/alphaaurigae/following{/other_user}",
         "gists_url" : "https://api.github.com/users/alphaaurigae/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/alphaaurigae",
         "id" : 4327142,
         "login" : "alphaaurigae",
         "organizations_url" : "https://api.github.com/users/alphaaurigae/orgs",
         "received_events_url" : "https://api.github.com/users/alphaaurigae/received_events",
         "repos_url" : "https://api.github.com/users/alphaaurigae/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/alphaaurigae/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/alphaaurigae/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/alphaaurigae"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> great, was exactly looking to have a wallet on a seperate luks drive.\r\n\r\nThis will be possible for you either with or without this PR in 0.16, because #11466, which is already merged, lets you specify a `-walletdir=<path>` option with the path to a directory or directory symlink. The directory can hold one or more bitcoin wallets loaded in a shared berkeleydb environment just like `-datadir` currently. #11466 also added the ability to create a `<datadir>/wallets` symlink instead of specifying a `-walletdir` option.\r\n\r\nThis PR extends #11466. It allows individual `-wallet=<name>` options to be paths, so if you have multiple wallets, they don't all have to live in the same directory and share a common berkeley db environment. It also creates new wallets (both inside and outside of `<walletdir>`) as directories instead of files, so they can be backed up independently and do not have mixed data logs.",
      "created_at" : "2018-01-12T14:44:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-357256220",
      "id" : 357256220,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-12T14:44:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357256220",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Got it running already - works perfecty and my IO problems solved - so nice :)",
      "created_at" : "2018-01-12T16:56:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-357293937",
      "id" : 357293937,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-12T16:56:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357293937",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/4327142?v=4",
         "events_url" : "https://api.github.com/users/alphaaurigae/events{/privacy}",
         "followers_url" : "https://api.github.com/users/alphaaurigae/followers",
         "following_url" : "https://api.github.com/users/alphaaurigae/following{/other_user}",
         "gists_url" : "https://api.github.com/users/alphaaurigae/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/alphaaurigae",
         "id" : 4327142,
         "login" : "alphaaurigae",
         "organizations_url" : "https://api.github.com/users/alphaaurigae/orgs",
         "received_events_url" : "https://api.github.com/users/alphaaurigae/received_events",
         "repos_url" : "https://api.github.com/users/alphaaurigae/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/alphaaurigae/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/alphaaurigae/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/alphaaurigae"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 5c8398dc03167f85ce5c8454fad8420dbcb89edb -> 0797df3d2c06b132a911bed2e465834452f78d04 ([pr/wfile.21](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.21) -> [pr/wfile.22](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.22)) due to conflicts with #11970 in `multiwallet.py` test. No other changes.",
      "created_at" : "2018-01-12T23:02:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-357378383",
      "id" : 357378383,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-12T23:02:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357378383",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Tested ACK 0797df3d2c06b132a911bed2e465834452f78d04",
      "created_at" : "2018-01-15T15:15:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-357710491",
      "id" : 357710491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-15T15:15:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357710491",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "It's quite useful to be able to keep the blockchain and wallet(s) in different locations. Using wallet directories also saves me trouble of remembering to type `.dat`.\r\n\r\nTested 0797df3d. Code changes look sane, but are a little over my head.\r\n\r\nOne surprising bit of behavior though is the difference between:\r\n\r\n```sh\r\nsrc/qt/bitcoin-qt -regtest -wallet=~/wallet\r\nsrc/qt/bitcoin-qt -regtest -wallet=~/wallet.dat\r\n```\r\n\r\nThe first command on OSX creates a `/home/Username/wallet` directory. The second creates a directory `~` inside the default regtest wallet directory.\r\n\r\nMaybe we should disallow a file extension for new wallets?",
      "created_at" : "2018-01-15T16:44:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-357735294",
      "id" : 357735294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-15T16:44:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357735294",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The first command on OSX creates a /home/Username/wallet directory. The second creates a directory ~ inside the default regtest wallet directory.\r\n\r\nInteresting, what appears to be happening in that example is that your shell is expanding the tilde in the first command, but not expanding the tilde in your second command. (The PR doesn't implement any tilde expansion itself.) Testing locally with bash versions 4.4.12 and 4.3.48, I don't see tildes expanded in either of these cases. Bash documentation says that it only expands tildes at the beginning of words.\r\n\r\nIn any case, apart from the inconsistent tilde expansion, the behaviour you are describing doesn't actually seem surprising to me. If you specify a new path, and bitcoin goes and creates a directory at that path, this seems like pretty much the least surprising thing you could expect. But perhaps instead of allowing both absolute paths and paths relative to `<walletdir>` generally, the implementation could be restricted to only allow either absolute paths or paths **directly** in `<walletdir>`. Other options would be to forbid special characters or dots in paths like you suggested. I tend to be somewhat skeptical of approaches like these. It's annoying when software you are trying to use has random and unnecessary restrictions on what inputs it accepts. But if there's a realistic use-case where current behaviour would be harmful or confusing, adding some restrictions could make sense. For example, luke suggested earlier (https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-345448447) that paths to freestanding data files (as opposed to directories) not in `<walletdir>` could be dangerous, so these are explicitly forbidden.",
      "created_at" : "2018-01-15T18:10:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-357754659",
      "id" : 357754659,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-15T18:27:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/357754659",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 0797df3d2c06b132a911bed2e465834452f78d04 -> 8a79f09a3dbcf48cfd8288ccf1d6bc3238aa1420 ([pr/wfile.22](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.22) -> [pr/wfile.23](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.23)) after #11904 merge. Resolved minor conflicts in CDBEnv::Open, no other changes.\r\n",
      "created_at" : "2018-01-17T18:39:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-358400910",
      "id" : 358400910,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-17T18:39:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/358400910",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Can you update the PR description reference  from `-datadir` to `-walletdir`?\r\n\r\n>  the implementation could be restricted to only allow either absolute paths or paths directly in `<walletdir>`\r\n\r\nInclined to agree. See also discussion in https://github.com/bitcoin/bitcoin/pull/12166#discussion_r161561520 about relative paths.\r\n\r\nAs you said, disallowing special characters doesn't seem like a good idea. Except perhaps disallowing `.dat` specifically for new wallets, or at least throwing a warning.",
      "created_at" : "2018-01-18T08:29:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-358573536",
      "id" : 358573536,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-18T08:30:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/358573536",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 8a79f09a3dbcf48cfd8288ccf1d6bc3238aa1420 -> 2f87a02746b6afee5a21e647c5b3159172736bbb ([pr/wfile.23](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.23) -> [pr/wfile.24](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.24)) due to conflict in release notes with #12210.\r\n\r\n> Can you update the PR description reference from -datadir to -walletdir?\r\n\r\nGood catch! Done.\r\n\r\n>> the implementation could be restricted to only allow either absolute paths or paths directly in \\<walletdir>\r\n>\r\n> Inclined to agree. See also discussion in https://github.com/bitcoin/bitcoin/pull/12166#discussion_r161561520 about relative paths.\r\n\r\nOk, I implemented this in 8c014825a6dba47f5a262da05e26394ef95b60df, but I didn't add the change this PR because I don't really like the complexity it adds and am not sure it is solving a real problem. To be clear, in the thread you linked to I was arguing that paths relative to $PWD were bad because they are unstable. I don't think think paths relative to walletdir really have the same problem. I'm going to open a new PR to address the relative -walletdir issue today, and I think this should also address the inconsistency John was concerned about.\r\n\r\n> As you said, disallowing special characters doesn't seem like a good idea. Except perhaps disallowing .dat specifically for new wallets, or at least throwing a warning.\r\n\r\nI'm not sure what the warning would be. It's not really clear to me what harm this would be trying to prevent.",
      "created_at" : "2018-01-18T16:02:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-358692668",
      "id" : 358692668,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-18T16:02:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/358692668",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">  It's not really clear to me what harm this would be trying to prevent.\r\n\r\nAccidentally creating new empty wallets.",
      "created_at" : "2018-01-18T16:26:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-358700456",
      "id" : 358700456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-18T16:26:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/358700456",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Accidentally creating new empty wallets.\r\n\r\nHow exactly? If you specify the name of an existing file, it will just open the file. Also, again I'd be curious to know what would be a good warning.",
      "created_at" : "2018-01-18T16:29:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-358701397",
      "id" : 358701397,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-18T16:31:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/358701397",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "People will accidentally use `.dat` for wallets that are directories and forget `.dat` for wallets that are files. They'll probably also create directories with `.dat` extension (which isn't an error, but it's not pretty).\r\n\r\nFor this specific issue I would look for `[path].dat` if `path` doesn't  end with `.dat` and look for `[path - .dat]` if it does. A warning could be \"Created a new wallet [path], but also found [path].dat\".\r\n\r\nEven better, but that would be breaking change, is to throw an error for non-existing wallets and introduce a new launch argument `-createwallet` (which doesn't have to take an argument).",
      "created_at" : "2018-01-18T16:57:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-358710373",
      "id" : 358710373,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-18T16:59:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/358710373",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe we can discuss this in IRC, but a new wallet being created if you are trying to open a .dat file and forget the extension is something that happens today, and would always happen previously, unrelated to this PR. I think the changes you are talking about could be good idea but definitely belong in their own separate PR. It also seems to me this PR makes these problems less likely to occur going forward, because it allows wallets to be referenced as directories instead of as individual data files in a shared  environment.",
      "created_at" : "2018-01-18T17:11:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-358715206",
      "id" : 358715206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-18T17:11:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/358715206",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It also seems to me this PR makes these problems less likely to occur going forward, because it allows wallets to be referenced as directories\r\n\r\nFor new users I would expect this to be the case. But I would expect existing users, who are used to adding \".dat\" to a `-wallet` argument, to make mistakes, if they don't read the release notes.\r\n\r\nI'm fine with leaving the PR as is. The release note are pretty clear.",
      "created_at" : "2018-01-19T08:47:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-358902597",
      "id" : 358902597,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-19T08:47:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/358902597",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "retested ACK ec4e3820a8a2351ba26c88dcc02d99e29bfe5524. Changes are just the minimum required for rebases.",
      "created_at" : "2018-01-22T21:17:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-359567870",
      "id" : 359567870,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-01-22T21:17:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/359567870",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r166231248"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/166231248"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit, sort :trollface: ",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2018-02-06T09:28:35Z",
      "diff_hunk" : "@@ -18,6 +18,7 @@\n #include <wallet/crypter.h>\n #include <wallet/walletdb.h>\n #include <wallet/rpcwallet.h>\n+#include <util.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r166231248",
      "id" : 166231248,
      "original_commit_id" : "1fe5528f4dea8b530022b9bf359426f2079848af",
      "original_position" : 4,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 94272991,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/166231248",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 2f87a02746b6afee5a21e647c5b3159172736bbb -> ec4e3820a8a2351ba26c88dcc02d99e29bfe5524 ([pr/wfile.24](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.24) -> [pr/wfile.25](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.25)) due to release notes conflict with #12166.\r\nRebased ec4e3820a8a2351ba26c88dcc02d99e29bfe5524 -> aff4b44f0da4c583b76d8e3db926caf3fa03d3c9 ([pr/wfile.25](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.25) -> [pr/wfile.26](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.26)) due to release notes conflict with 0.16 version bump.\r\nRebased d7daf096830d17c4c20952ac5b487b49d43b4d80 -> 1fe5528f4dea8b530022b9bf359426f2079848af ([pr/wfile.26](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.26) -> [pr/wfile.27](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.27)) due to conflict with #12331.",
      "created_at" : "2018-02-12T20:47:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-365056651",
      "id" : 365056651,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-02-12T20:47:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/365056651",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 1fe5528f4dea8b530022b9bf359426f2079848af -> 230f696ac105f41757c7e7625053941d483df0be ([pr/wfile.27](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.27) -> [pr/wfile.28](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.28)) due to conflict with #12225.\r\nAdded 1 commits 230f696ac105f41757c7e7625053941d483df0be -> c8c87343fcc7d86e9bec100a609a521c6c1e2d34 ([pr/wfile.28](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.28) -> [pr/wfile.29](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.29), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wfile.28...pr/wfile.29))\r\nSquashed c8c87343fcc7d86e9bec100a609a521c6c1e2d34 -> 366c886fd7e1df95b2cdccde666eb53865e6c0c3 ([pr/wfile.29](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.29) -> [pr/wfile.30](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.30))\r\n\r\n\r\n>  I have two cases I'd like to discuss:\r\n\r\nCould point out what you would like these test cases to do? They seem strange.\r\n\r\n> should -wallet=../foo or -wallet=foo/.. be possible?\r\n\r\nI don't see either a use-case here, or a reason to worry about the relative directory syntax, but if there is a concern you can articulate, adding more restrictions on path strings would be possible. You may want to look at 8c014825a6dba47f5a262da05e26394ef95b60df and surrounding discussion above.\r\n\r\n> bitcoind -regtest -wallet=. -wallet\r\n\r\nThis is a weird invocation, and I'm not sure what you would want to happen with it. But the reason it fails to start with the \"duplicates fileid\" message is that this tries to load the default wallet twice, and any time you try to load two copies of the same wallet, you will see this.",
      "created_at" : "2018-02-14T20:13:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-365730954",
      "id" : 365730954,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-02-14T20:20:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/365730954",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r168298741"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/168298741"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Nit, sort :trollface:\r\n\r\nThanks, done in https://github.com/bitcoin/bitcoin/commit/c8c87343fcc7d86e9bec100a609a521c6c1e2d34",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2018-02-14T20:20:57Z",
      "diff_hunk" : "@@ -18,6 +18,7 @@\n #include <wallet/crypter.h>\n #include <wallet/walletdb.h>\n #include <wallet/rpcwallet.h>\n+#include <util.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r168298741",
      "id" : 168298741,
      "in_reply_to_id" : 166231248,
      "original_commit_id" : "1fe5528f4dea8b530022b9bf359426f2079848af",
      "original_position" : 4,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 96643668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-03T18:25:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/168298741",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I mean, either the path is absolute or it's a name (which will be relative to `walletdir`). So anything relative (e.g. `.`, `..`, `../foo`, `foo/..`, ...) should fail. Unless there is a use case for relative paths?",
      "created_at" : "2018-02-14T21:15:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-365747443",
      "id" : 365747443,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-02-14T21:15:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/365747443",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/3534524?v=4",
         "events_url" : "https://api.github.com/users/promag/events{/privacy}",
         "followers_url" : "https://api.github.com/users/promag/followers",
         "following_url" : "https://api.github.com/users/promag/following{/other_user}",
         "gists_url" : "https://api.github.com/users/promag/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/promag",
         "id" : 3534524,
         "login" : "promag",
         "organizations_url" : "https://api.github.com/users/promag/orgs",
         "received_events_url" : "https://api.github.com/users/promag/received_events",
         "repos_url" : "https://api.github.com/users/promag/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/promag/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/promag/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/promag"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I mean, either the path is absolute or it's a name (which will be relative to walletdir). So anything relative (e.g. ., .., ../foo, foo/.., ...) should fail. Unless there is a use case for relative paths?\r\n\r\nThe use cases for relative paths are pretty straightforward. Maybe you want to put your watch only wallets in a different directory than your wallets with private keys. Maybe you want to have different directories for different customers, or use nested directory structure, or use symlinks to avoid hardcoding paths that may change.\r\n\r\nBut I'm not sure if you are concerned about relative paths, or if you are concerned about particular types of path syntax like `..` or `.`, or something else. (It might help to state the concern explicitly.) If the concern is actually allowing `..` or `.` path syntax, I guess it would be possible to add operating-system specific code to forbid it, although I don't see what the benefit would be. It seems like a good approach to take with path strings in application code is to not manipulate them directly, but just pass them through to the OS and boost path libraries so they get interpreted in a consistent way.\r\n\r\n---\r\n\r\nRebased 366c886fd7e1df95b2cdccde666eb53865e6c0c3 -> 0f090a85233dc19a059b5a69a886554f543d6bdd ([pr/wfile.30](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.30) -> [pr/wfile.31](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.31))\r\nRebased 0f090a85233dc19a059b5a69a886554f543d6bdd -> be8ab7d082228d09ca529d1a08730d7d5aacb0ed ([pr/wfile.31](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.31) -> [pr/wfile.32](https://github.com/ryanofsky/bitcoin/commits/pr/wfile.32))",
      "created_at" : "2018-03-06T17:33:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-370862718",
      "id" : 370862718,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-03-07T15:41:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/370862718",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r172859673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172859673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "These initializers could be replaced with `: CWalletDBWrapper()` I believe.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2018-03-07T14:33:07Z",
      "diff_hunk" : "@@ -100,9 +101,33 @@ class CWalletDBWrapper\n     }\n \n     /** Create DB handle to real database */\n-    CWalletDBWrapper(CDBEnv *env_in, const std::string &strFile_in) :\n-        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0), env(env_in), strFile(strFile_in)\n+    CWalletDBWrapper(const fs::path& wallet_path, bool mock = false) :\n+        nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r172859673",
      "id" : 172859673,
      "original_commit_id" : "d8a99f65e53019becdd8d2631396012bafb29741",
      "original_position" : 67,
      "path" : "src/wallet/db.h",
      "position" : 67,
      "pull_request_review_id" : 101948397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-07T16:54:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172859673",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r172885685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172885685"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It looks like this would leak in the case of any of the early error exists. Perhaps it's better to make a unique_ptr, then `release()` on the last line of the method to prevent this?",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2018-03-07T15:45:50Z",
      "diff_hunk" : "@@ -3929,8 +3930,7 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n \n     int64_t nStart = GetTimeMillis();\n     bool fFirstRun = true;\n-    std::unique_ptr<CWalletDBWrapper> dbw(new CWalletDBWrapper(&bitdb, walletFile));\n-    CWallet *walletInstance = new CWallet(std::move(dbw));\n+    CWallet *walletInstance = new CWallet(name, CWalletDBWrapper::Create(path));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r172885685",
      "id" : 172885685,
      "original_commit_id" : "d8a99f65e53019becdd8d2631396012bafb29741",
      "original_position" : 27,
      "path" : "src/wallet/wallet.cpp",
      "position" : 35,
      "pull_request_review_id" : 101948397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-07T16:54:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/172885685",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/881253?v=4",
         "events_url" : "https://api.github.com/users/jimpo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jimpo/followers",
         "following_url" : "https://api.github.com/users/jimpo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jimpo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jimpo",
         "id" : 881253,
         "login" : "jimpo",
         "organizations_url" : "https://api.github.com/users/jimpo/orgs",
         "received_events_url" : "https://api.github.com/users/jimpo/received_events",
         "repos_url" : "https://api.github.com/users/jimpo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jimpo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jimpo"
      }
   },
   {
      "author_association" : "OWNER",
      "body" : "utACK be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2018-03-07T16:11:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-371190322",
      "id" : 371190322,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "updated_at" : "2018-03-07T16:11:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/371190322",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r173186961"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173186961"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Very technical error message. Should not be translated, imo.",
      "commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "created_at" : "2018-03-08T15:12:59Z",
      "diff_hunk" : "@@ -230,40 +230,44 @@ bool VerifyWallets()\n     std::set<fs::path> wallet_paths;\n \n     for (const std::string& walletFile : gArgs.GetArgs(\"-wallet\")) {\n-        if (boost::filesystem::path(walletFile).filename() != walletFile) {\n-            return InitError(strprintf(_(\"Error loading wallet %s. -wallet parameter must only specify a filename (not a path).\"), walletFile));\n-        }\n-\n-        if (SanitizeString(walletFile, SAFE_CHARS_FILENAME) != walletFile) {\n-            return InitError(strprintf(_(\"Error loading wallet %s. Invalid characters in -wallet filename.\"), walletFile));\n-        }\n-\n+        // Do some checking on wallet path. It should be either a:\n+        //\n+        // 1. Path where a directory can be created.\n+        // 2. Path to an existing directory.\n+        // 3. Path to a symlink to a directory.\n+        // 4. For backwards compatibility, the name of a data file in -walletdir.\n         fs::path wallet_path = fs::absolute(walletFile, GetWalletDir());\n-\n-        if (fs::exists(wallet_path) && (!fs::is_regular_file(wallet_path) || fs::is_symlink(wallet_path))) {\n-            return InitError(strprintf(_(\"Error loading wallet %s. -wallet filename must be a regular file.\"), walletFile));\n+        fs::file_type path_type = fs::symlink_status(wallet_path).type();\n+        if (!(path_type == fs::file_not_found || path_type == fs::directory_file ||\n+              (path_type == fs::symlink_file && fs::is_directory(wallet_path)) ||\n+              (path_type == fs::regular_file && fs::path(walletFile).filename() == walletFile))) {\n+            return InitError(strprintf(\n+                _(\"Invalid -wallet path '%s'. -wallet path should point to a directory where wallet.dat and \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#discussion_r173186961",
      "id" : 173186961,
      "original_commit_id" : "be8ab7d082228d09ca529d1a08730d7d5aacb0ed",
      "original_position" : 45,
      "path" : "src/wallet/init.cpp",
      "position" : 45,
      "pull_request_review_id" : 102333558,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/11687",
      "updated_at" : "2018-03-08T15:12:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/173186961",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "hello,\r\n      The wallet.dat size is so large.  I know there is so much keypairs in  the file. But , what is the structure of the file?  Is the same structure with the class CCryptoKeyStore?",
      "created_at" : "2018-07-16T09:47:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/11687#issuecomment-405197053",
      "id" : 405197053,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11687",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwNTE5NzA1Mw==",
      "updated_at" : "2018-07-16T09:47:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/405197053",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32861551?v=4",
         "events_url" : "https://api.github.com/users/NickyYangYang/events{/privacy}",
         "followers_url" : "https://api.github.com/users/NickyYangYang/followers",
         "following_url" : "https://api.github.com/users/NickyYangYang/following{/other_user}",
         "gists_url" : "https://api.github.com/users/NickyYangYang/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/NickyYangYang",
         "id" : 32861551,
         "login" : "NickyYangYang",
         "node_id" : "MDQ6VXNlcjMyODYxNTUx",
         "organizations_url" : "https://api.github.com/users/NickyYangYang/orgs",
         "received_events_url" : "https://api.github.com/users/NickyYangYang/received_events",
         "repos_url" : "https://api.github.com/users/NickyYangYang/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/NickyYangYang/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/NickyYangYang/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/NickyYangYang"
      }
   }
]
