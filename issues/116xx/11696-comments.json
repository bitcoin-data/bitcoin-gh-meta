[
   {
      "author_association" : "MEMBER",
      "body" : "The byte strings copied from the log:\r\n\r\n```\r\nAssertionError: not(\r\nb'\\x04\\x00\\x00\\x00\\xfb\\xc8t_\\xec\\xa0\\xd3\\x17}X\\x8c$\\xe1\\x857\\t\\x14\\xbd\\xe0\\x97B\\xed\\xb9R\\xb5\\x9f\\xfb\\xd5n\\xbc\\x1c!\\xe9\\x80\\xa1M7\\xd7\\xba!\\xd5\\x03\\x9bd\\xa9s\\xb3\\xb9\\xf1\\xd2b\\x8d\\xa1\\xf4\\xa81\\xa6cP\\xb5\\x02:\\xc9\\x94\\xf4t\\x0cZ\\xff\\xff\\x7f \\x00\\x00\\x00\\x00\\x01\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x03\\x02\\xc3\\x01\\xff\\xff\\xff\\xff\\x02@\\xbe@%\\x00\\x00\\x00\\x00\\x01Q\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&j$\\xaa!\\xa9\\xed\\xe2\\xf6\\x1c?q\\xd1\\xde\\xfd?\\xa9\\x99\\xdf\\xa3iSu\\\\i\\x06\\x89y\\x99b\\xb4\\x8b\\xeb\\xd86\\x97N\\x8c\\xf9\\x00\\x00\\x00\\x00' == \r\nb'\\x04\\x00\\x00\\x00\\xfb\\xc8t_\\xec\\xa0\\xd3\\x17}X\\x8c$\\xe1\\x857\\t\\x14\\xbd\\xe0\\x97B\\xed\\xb9R\\xb5\\x9f\\xfb\\xd5n\\xbc\\x1c!\\xe9\\x80\\xa1M7\\xd7\\xba!\\xd5\\x03\\x9bd\\xa9s\\xb3\\xb9\\xf1\\xd2b\\x8d\\xa1\\xf4\\xa81\\xa6cP\\xb5\\x02:\\xc9\\x94\\xf4t\\x0cZ\\xff\\xff\\x7f \\x00\\x00\\x00\\x00\\x01\\x01\\x00\\x00\\x00\\x00\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x03\\x02\\xc3\\x01\\xff\\xff\\xff\\xff\\x02@\\xbe@%\\x00\\x00\\x00\\x00\\x01Q\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&j$\\xaa!\\xa9\\xed\\xe2\\xf6\\x1c?q\\xd1\\xde\\xfd?\\xa9\\x99\\xdf\\xa3iSu\\\\i\\x06\\x89y\\x99b\\xb4\\x8b\\xeb\\xd86\\x97N\\x8c\\xf9\\x01 \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00')",
      "created_at" : "2018-04-11T20:10:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11696#issuecomment-380580142",
      "id" : 380580142,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11696",
      "updated_at" : "2018-04-11T20:10:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/380580142",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Locally:\r\n\r\n```\r\np2p_segwit.py failed, Duration: 18 s\r\n\r\nstdout:\r\n2018-05-13T15:07:59.097000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_test_runner_20180513_110737/p2p_segwit_245\r\n2018-05-13T15:07:59.989000Z TestFramework (INFO): Starting tests before segwit lock in:\r\n2018-05-13T15:07:59.989000Z TestFramework (INFO): Verifying NODE_WITNESS service bit\r\n2018-05-13T15:07:59.989000Z TestFramework (INFO): Testing non-witness transaction\r\n2018-05-13T15:08:01.065000Z TestFramework (INFO): Testing behavior of unnecessary witnesses\r\n2018-05-13T15:08:01.240000Z TestFramework (INFO): Testing that v0 witness program outputs aren't spendable before activation\r\n2018-05-13T15:08:01.309000Z TestFramework (INFO): Testing block relay\r\n2018-05-13T15:08:02.933000Z TestFramework (INFO): Testing getblocktemplate setting of segwit versionbit (before lockin)\r\n2018-05-13T15:08:04.164000Z TestFramework (INFO): Testing behavior post lockin, pre-activation\r\n2018-05-13T15:08:05.402000Z TestFramework (INFO): Testing behavior of unnecessary witnesses\r\n2018-05-13T15:08:05.522000Z TestFramework (INFO): Testing relay of witness transactions\r\n2018-05-13T15:08:07.602000Z TestFramework.utils (ERROR): wait_until() failed. Predicate: (['        test_function = lambda: self.last_message.get(\"getdata\")\\n'], 367)\r\n2018-05-13T15:08:07.776000Z TestFramework (INFO): Testing block relay\r\n2018-05-13T15:08:09.198000Z TestFramework (INFO): Testing standardness of v0 outputs (before activation)\r\n2018-05-13T15:08:09.452000Z TestFramework (INFO): Testing behavior after segwit activation\r\n2018-05-13T15:08:11.435000Z TestFramework (INFO): Testing P2SH witness transactions\r\n2018-05-13T15:08:11.742000Z TestFramework (INFO): Testing witness commitments\r\n2018-05-13T15:08:12.041000Z TestFramework (INFO): Testing witness block malleability\r\n2018-05-13T15:08:12.544000Z TestFramework (INFO): Testing witness block size limit\r\n2018-05-13T15:08:14.882000Z TestFramework (INFO): Testing extra witness data in tx\r\n2018-05-13T15:08:14.966000Z TestFramework (INFO): Testing maximum witness push size\r\n2018-05-13T15:08:15.076000Z TestFramework (INFO): Testing maximum witness program length\r\n2018-05-13T15:08:15.187000Z TestFramework (INFO): Testing witness input length\r\n2018-05-13T15:08:15.489000Z TestFramework (INFO): Testing block relay\r\n2018-05-13T15:08:15.911000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/bitcoin/test/functional/test_framework/test_framework.py\", line 152, in main\r\n    self.run_test()\r\n  File \"/bitcoin/test/functional/p2p_segwit.py\", line 2029, in run_test\r\n    self.test_block_relay(segwit_activated=True)\r\n  File \"/bitcoin/test/functional/p2p_segwit.py\", line 1047, in test_block_relay\r\n    assert_equal(wit_block.serialize(True), hex_str_to_bytes(rpc_block))\r\n  File \"/bitcoin/test/functional/test_framework/util.py\", line 39, in assert_equal\r\n    raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\r\nAssertionError: not(b'\\x04\\x00\\x00\\x00$\\n\\xbc\\x19\\xf6\\xaf\\x00\\xf4\\x9a\\xdf\\x1eT\\x9b\\r{)}u\\x8bq1Y\\xcf\\x16\\xbf\\xf2Y\\x16\\x82|\\x84u\\xe9\\x80\\xa1M7\\xd7\\xba!\\xd5\\x03\\x9bd\\xa9s\\xb3\\xb9\\xf1\\xd2b\\x8d\\xa1\\xf4\\xa81\\xa6cP\\xb5\\x02:\\xc9\\x94\\x1bU\\xf8Z\\xff\\xff\\x7f \\x00\\x00\\x00\\x00\\x01\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x03\\x02\\xc3\\x01\\xff\\xff\\xff\\xff\\x02@\\xbe@%\\x00\\x00\\x00\\x00\\x01Q\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&j$\\xaa!\\xa9\\xed\\xe2\\xf6\\x1c?q\\xd1\\xde\\xfd?\\xa9\\x99\\xdf\\xa3iSu\\\\i\\x06\\x89y\\x99b\\xb4\\x8b\\xeb\\xd86\\x97N\\x8c\\xf9\\x00\\x00\\x00\\x00' == b'\\x04\\x00\\x00\\x00$\\n\\xbc\\x19\\xf6\\xaf\\x00\\xf4\\x9a\\xdf\\x1eT\\x9b\\r{)}u\\x8bq1Y\\xcf\\x16\\xbf\\xf2Y\\x16\\x82|\\x84u\\xe9\\x80\\xa1M7\\xd7\\xba!\\xd5\\x03\\x9bd\\xa9s\\xb3\\xb9\\xf1\\xd2b\\x8d\\xa1\\xf4\\xa81\\xa6cP\\xb5\\x02:\\xc9\\x94\\x1bU\\xf8Z\\xff\\xff\\x7f \\x00\\x00\\x00\\x00\\x01\\x01\\x00\\x00\\x00\\x00\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x03\\x02\\xc3\\x01\\xff\\xff\\xff\\xff\\x02@\\xbe@%\\x00\\x00\\x00\\x00\\x01Q\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&j$\\xaa!\\xa9\\xed\\xe2\\xf6\\x1c?q\\xd1\\xde\\xfd?\\xa9\\x99\\xdf\\xa3iSu\\\\i\\x06\\x89y\\x99b\\xb4\\x8b\\xeb\\xd86\\x97N\\x8c\\xf9\\x01 \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00')\r\n2018-05-13T15:08:15.912000Z TestFramework (INFO): Stopping nodes\r\n2018-05-13T15:08:16.169000Z TestFramework (WARNING): Not cleaning up dir /tmp/bitcoin_test_runner_20180513_110737/p2p_segwit_245\r\n2018-05-13T15:08:16.169000Z TestFramework (ERROR): Test failed. Test logging available at /tmp/bitcoin_test_runner_20180513_110737/p2p_segwit_245/test_framework.log",
      "created_at" : "2018-06-02T19:24:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11696#issuecomment-394110829",
      "id" : 394110829,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11696",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NDExMDgyOQ==",
      "updated_at" : "2018-06-02T19:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/394110829",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I plan to tidy up `p2p_segwit.py` and `feature_segwit.py` after #12360 has been merged.",
      "created_at" : "2018-06-06T16:18:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11696#issuecomment-395127937",
      "id" : 395127937,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11696",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDM5NTEyNzkzNw==",
      "updated_at" : "2018-06-06T16:18:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/395127937",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "#13467 may make p2p_segwit.py failures easier to debug.",
      "created_at" : "2018-06-27T18:53:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11696#issuecomment-400791720",
      "id" : 400791720,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11696",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDQwMDc5MTcyMA==",
      "updated_at" : "2018-06-27T18:53:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/400791720",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/1063656?v=4",
         "events_url" : "https://api.github.com/users/jnewbery/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jnewbery/followers",
         "following_url" : "https://api.github.com/users/jnewbery/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jnewbery/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jnewbery",
         "id" : 1063656,
         "login" : "jnewbery",
         "node_id" : "MDQ6VXNlcjEwNjM2NTY=",
         "organizations_url" : "https://api.github.com/users/jnewbery/orgs",
         "received_events_url" : "https://api.github.com/users/jnewbery/received_events",
         "repos_url" : "https://api.github.com/users/jnewbery/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jnewbery/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jnewbery"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Another one: \r\n\r\nhttps://ci.appveyor.com/project/DrahtBot/bitcoin/builds/31079510#L4118\r\n\r\n```\r\n                                   File \"C:\\projects\\bitcoin/test/functional/p2p_segwit.py\", line 422, in test_block_relay\r\n                                       assert_equal(wit_block.serialize(), hex_str_to_bytes(rpc_block))\r\n                                     File \"C:\\projects\\bitcoin\\test\\functional\\test_framework\\util.py\", line 46, in assert_equal\r\n                                       raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\r\n                                   AssertionError: not(b\"\\x04\\x00\\x00\\x00\\xeb\\x97\\xc4\\xa9\\x0f2FS\\xef\\xde5\\xe8N\\x83u/\\xaa?\\xec\\x88\\xb9\\xf2\\x0eh\\xea\\x9bu\\xb6\\xa7dHx\\xfe\\xae\\xb1K\\xa5,\\x94\\x96:\\xdcP b\\xc1\\xd4N\\xfe\\xe8a\\xd8\\x14\\x10\\x89\\xd1'\\xc4\\x10?\\xb8\\xf3\\xa1\\xb1\\xfd\\xedV^\\xff\\xff\\x7f \\x00\\x00\\x00\\x00\\x01\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x03\\x02\\x8b\\x00\\xff\\xff\\xff\\xff\\x02\\x00\\xf2\\x05*\\x01\\x00\\x00\\x00\\x01Q\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&j$\\xaa!\\xa9\\xed\\xe2\\xf6\\x1c?q\\xd1\\xde\\xfd?\\xa9\\x99\\xdf\\xa3iSu\\\\i\\x06\\x89y\\x99b\\xb4\\x8b\\xeb\\xd86\\x97N\\x8c\\xf9\\x00\\x00\\x00\\x00\" == b\"\\x04\\x00\\x00\\x00\\xeb\\x97\\xc4\\xa9\\x0f2FS\\xef\\xde5\\xe8N\\x83u/\\xaa?\\xec\\x88\\xb9\\xf2\\x0eh\\xea\\x9bu\\xb6\\xa7dHx\\xfe\\xae\\xb1K\\xa5,\\x94\\x96:\\xdcP b\\xc1\\xd4N\\xfe\\xe8a\\xd8\\x14\\x10\\x89\\xd1'\\xc4\\x10?\\xb8\\xf3\\xa1\\xb1\\xfd\\xedV^\\xff\\xff\\x7f \\x00\\x00\\x00\\x00\\x01\\x01\\x00\\x00\\x00\\x00\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x03\\x02\\x8b\\x00\\xff\\xff\\xff\\xff\\x02\\x00\\xf2\\x05*\\x01\\x00\\x00\\x00\\x01Q\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&j$\\xaa!\\xa9\\xed\\xe2\\xf6\\x1c?q\\xd1\\xde\\xfd?\\xa9\\x99\\xdf\\xa3iSu\\\\i\\x06\\x89y\\x99b\\xb4\\x8b\\xeb\\xd86\\x97N\\x8c\\xf9\\x01 \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\")",
      "created_at" : "2020-02-27T19:22:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11696#issuecomment-592132685",
      "id" : 592132685,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11696",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MjEzMjY4NQ==",
      "updated_at" : "2020-02-27T19:22:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592132685",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think I figured it out.  Looks like a bug in the test.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/324a6dfeafcbee8d92231d23f15064edf12715b4/test/functional/p2p_segwit.py#L419-L424\r\n\r\nHere, we're requesting the non-witness version of a block by sending a getdata message, and then the witness version of that block.  However, the way we request a block over the p2p connection is not robust to their being a witness-stripped version of the block in the receive buffer already:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/324a6dfeafcbee8d92231d23f15064edf12715b4/test/functional/test_framework/mininode.py#L371-L376\r\n\r\nThis function `wait_for_block()` is used by the p2p_segwit test, and all it does to determine whether the new block has come in is check whether the last thing in the buffer has the right block hash -- but this will be the case as soon as the function is invoked, because we don't clear the witness-stripped version of the block out of the buffer.  Thus if the block takes any amount of time to arrive it's possible this function could return too early and we'll end up storing the witness-stripped block as the witness-version of the block, causing test failure -- I think.",
      "created_at" : "2020-02-27T19:49:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11696#issuecomment-592145451",
      "id" : 592145451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11696",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MjE0NTQ1MQ==",
      "updated_at" : "2020-02-27T19:49:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592145451",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Just looked this over with @marcofalke offline -- my explanation above is wrong, because we do clear the last block message in a helper function (`request_block`) that is invoking wait_for_block:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1615043935ef9c185eb1dc5d2365d0460424bc7b/test/functional/p2p_segwit.py#L178-L183\r\n\r\nHowever, there is a race condition due to an extra getdata request that happens in the mininode thread, because we don't hold the mininode lock in `request_block`. Getting rid of the extra getdata request in mininode should just fix this:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1615043935ef9c185eb1dc5d2365d0460424bc7b/test/functional/test_framework/mininode.py#L335-L341",
      "created_at" : "2020-02-27T20:20:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/11696#issuecomment-592158171",
      "id" : 592158171,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/11696",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5MjE1ODE3MQ==",
      "updated_at" : "2020-02-27T20:20:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592158171",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   }
]
