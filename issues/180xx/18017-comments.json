[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. Will need to play around with it a little bit to test that clang actually prevents compiling incorrect uses.",
      "created_at" : "2020-01-29T05:04:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-579594113",
      "id" : 579594113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3OTU5NDExMw==",
      "updated_at" : "2020-01-29T05:04:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579594113",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "created_at" : "2020-01-29T09:20:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-579666481",
      "id" : 579666481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU3OTY2NjQ4MQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-09T21:01:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579666481",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, nice",
      "created_at" : "2020-02-10T16:21:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-584205068",
      "id" : 584205068,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4NDIwNTA2OA==",
      "updated_at" : "2020-02-10T16:21:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584205068",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
      "created_at" : "2020-03-04T06:09:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-594345306",
      "id" : 594345306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5NDM0NTMwNg==",
      "updated_at" : "2020-03-04T06:09:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594345306",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.",
      "created_at" : "2020-05-24T08:12:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-633196020",
      "id" : 633196020,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMzE5NjAyMA==",
      "updated_at" : "2020-05-24T08:12:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/633196020",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r429613083"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429613083"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Mind switching from the member initialization list to the default member initializers?",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-05-24T08:37:48Z",
      "diff_hunk" : "@@ -50,6 +50,68 @@ struct LockPoints\n     LockPoints() : height(0), time(0), maxInputBlock(nullptr) { }\n };\n \n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch;\n+    bool m_guarded;\n+\n+public:\n+    Epoch() : m_raw_epoch{0}, m_guarded{false} { }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r429613083",
      "id" : 429613083,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYxMzA4Mw==",
      "original_commit_id" : "7485e0f9db4455212e930ba68c26daa972956faf",
      "original_line" : 80,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 417338366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429613083",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r429613209"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429613209"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Mind switching from the member initialization list to the default member initializer?",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-05-24T08:39:33Z",
      "diff_hunk" : "@@ -50,6 +50,68 @@ struct LockPoints\n     LockPoints() : height(0), time(0), maxInputBlock(nullptr) { }\n };\n \n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch;\n+    bool m_guarded;\n+\n+public:\n+    Epoch() : m_raw_epoch{0}, m_guarded{false} { }\n+\n+    Epoch(const Epoch&) = delete; // no copy constructor\n+    Epoch& operator=(const Epoch&) = delete; // not assignable\n+\n+    bool guarded() const { return m_guarded; }\n+\n+    class Marker {\n+    private:\n+        uint64_t m_marker;\n+\n+    public:\n+        Marker() : m_marker{0} { }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r429613209",
      "id" : 429613209,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYxMzIwOQ==",
      "original_commit_id" : "7485e0f9db4455212e930ba68c26daa972956faf",
      "original_line" : 92,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 417338366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429613209",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r429621402"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429621402"
         }
      },
      "author_association" : "MEMBER",
      "body" : "micro-nit: These comments are so obvious that seem redundant :)",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-05-24T10:23:22Z",
      "diff_hunk" : "@@ -50,6 +50,68 @@ struct LockPoints\n     LockPoints() : height(0), time(0), maxInputBlock(nullptr) { }\n };\n \n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch;\n+    bool m_guarded;\n+\n+public:\n+    Epoch() : m_raw_epoch{0}, m_guarded{false} { }\n+\n+    Epoch(const Epoch&) = delete; // no copy constructor\n+    Epoch& operator=(const Epoch&) = delete; // not assignable",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r429621402",
      "id" : 429621402,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYyMTQwMg==",
      "original_commit_id" : "7485e0f9db4455212e930ba68c26daa972956faf",
      "original_line" : 83,
      "original_position" : 34,
      "original_start_line" : 82,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 417338366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429621402",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r429627015"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429627015"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tested on top of the #18635, and had loads of warnings:\r\n```\r\n./txmempool.h:102:38: warning: 'exclusive_lock_function' attribute requires arguments whose type is annotated with 'capability' attribute; type here is 'Epoch' [-Wthread-safety-attributes]\r\n        explicit Guard(Epoch& epoch) EXCLUSIVE_LOCK_FUNCTION(epoch) LOCKS_EXCLUDED(epoch);\r\n                                     ^\r\n...\r\n./txmempool.h:106:40: warning: 'exclusive_locks_required' attribute requires arguments whose type is annotated with 'capability' attribute; type here is 'const Epoch' [-Wthread-safety-attributes]\r\n    bool visited(Marker& marker) const EXCLUSIVE_LOCKS_REQUIRED(*this) {\r\n                                       ^\r\n...\r\n./txmempool.h:691:121: warning: 'locks_excluded' attribute requires arguments whose type is annotated with 'capability' attribute; type here is 'Epoch' [-Wthread-safety-attributes]\r\n    void UpdateTransactionsFromBlock(const std::vector<uint256>& vHashesToUpdate) EXCLUSIVE_LOCKS_REQUIRED(cs, cs_main) LOCKS_EXCLUDED(m_epoch);\r\n                                                                                                                        ^\r\n...\r\n./txmempool.h:812:41: warning: 'exclusive_locks_required' attribute requires arguments whose type is annotated with 'capability' attribute; type here is 'Epoch' [-Wthread-safety-attributes]\r\n    bool visited(const txiter it) const EXCLUSIVE_LOCKS_REQUIRED(cs, m_epoch) {\r\n                                        ^\r\n...\r\n./txmempool.h:816:45: warning: 'exclusive_locks_required' attribute requires arguments whose type is annotated with 'capability' attribute; type here is 'Epoch' [-Wthread-safety-attributes]\r\n    bool visited(Optional<txiter> it) const EXCLUSIVE_LOCKS_REQUIRED(cs, m_epoch) {\r\n                                            ^\r\n```\r\n\r\nTo make the Clang Thread Safety Analysis work as expected I suggest: \r\n```suggestion\r\nclass LOCKABLE Epoch\r\n```\r\n\r\n_and_ change the type of the `Epoch::Guard::m_epoch` from `Epoch&` to `Epoch*`.",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-05-24T11:33:51Z",
      "diff_hunk" : "@@ -50,6 +50,68 @@ struct LockPoints\n     LockPoints() : height(0), time(0), maxInputBlock(nullptr) { }\n };\n \n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class Epoch",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r429627015",
      "id" : 429627015,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYyNzAxNQ==",
      "original_commit_id" : "7485e0f9db4455212e930ba68c26daa972956faf",
      "original_line" : 73,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 417338366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429627015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r429627231"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429627231"
         }
      },
      "author_association" : "MEMBER",
      "body" : "From the Thread Safety Analysis [docs](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#acquire-acquire-shared-release-release-shared):\r\n> The caller must not hold the given capability on entry\r\n\r\nIt seems `LOCKS_EXCLUDED(epoch)` is redundant, no?",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-05-24T11:37:01Z",
      "diff_hunk" : "@@ -50,6 +50,68 @@ struct LockPoints\n     LockPoints() : height(0), time(0), maxInputBlock(nullptr) { }\n };\n \n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch;\n+    bool m_guarded;\n+\n+public:\n+    Epoch() : m_raw_epoch{0}, m_guarded{false} { }\n+\n+    Epoch(const Epoch&) = delete; // no copy constructor\n+    Epoch& operator=(const Epoch&) = delete; // not assignable\n+\n+    bool guarded() const { return m_guarded; }\n+\n+    class Marker {\n+    private:\n+        uint64_t m_marker;\n+\n+    public:\n+        Marker() : m_marker{0} { }\n+\n+        friend class Epoch;\n+    };\n+\n+    class SCOPED_LOCKABLE Guard {\n+    private:\n+        Epoch& m_epoch;\n+\n+    public:\n+        explicit Guard(Epoch& epoch) EXCLUSIVE_LOCK_FUNCTION(epoch) LOCKS_EXCLUDED(epoch);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r429627231",
      "id" : 429627231,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYyNzIzMQ==",
      "original_commit_id" : "7485e0f9db4455212e930ba68c26daa972956faf",
      "original_line" : 102,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 417338366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429627231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r430353995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430353995"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm not seeing what benefit changing `Epoch::Guard::m_epoch` from reference to pointer would have -- the analysis shouldn't (and doesn't) treat them any different, as far as I can see?",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-05-26T11:51:32Z",
      "diff_hunk" : "@@ -50,6 +50,68 @@ struct LockPoints\n     LockPoints() : height(0), time(0), maxInputBlock(nullptr) { }\n };\n \n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class Epoch",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r430353995",
      "id" : 430353995,
      "in_reply_to_id" : 429627015,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM1Mzk5NQ==",
      "original_commit_id" : "7485e0f9db4455212e930ba68c26daa972956faf",
      "original_line" : 73,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 418221221,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430353995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Incorporated @hebasto's suggested changes",
      "created_at" : "2020-05-26T12:07:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-633984070",
      "id" : 633984070,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzMzk4NDA3MA==",
      "updated_at" : "2020-05-26T12:07:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/633984070",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r430479806"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430479806"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Indeed :)\r\nIDK why I saw warnings...",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-05-26T14:59:56Z",
      "diff_hunk" : "@@ -50,6 +50,68 @@ struct LockPoints\n     LockPoints() : height(0), time(0), maxInputBlock(nullptr) { }\n };\n \n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class Epoch",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r430479806",
      "id" : 430479806,
      "in_reply_to_id" : 429627015,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3OTgwNg==",
      "original_commit_id" : "7485e0f9db4455212e930ba68c26daa972956faf",
      "original_line" : 73,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 418386811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430479806",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@hebasto - `AssertLockNotHeld(m_epoch)` won't work -- epochs aren't sync.h locks. I think the annotation for UpdateForDescendents would be better made after #18191 is merged?",
      "created_at" : "2020-05-26T16:30:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-634134624",
      "id" : 634134624,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNDEzNDYyNA==",
      "updated_at" : "2020-05-26T16:30:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634134624",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ajtowns \r\n> @hebasto - `AssertLockNotHeld(m_epoch)` won't work -- epochs aren't sync.h locks. I think the annotation for UpdateForDescendents would be better made after #18191 is merged?\r\n\r\nAgree.",
      "created_at" : "2020-05-26T16:36:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-634138030",
      "id" : 634138030,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDYzNDEzODAzMA==",
      "updated_at" : "2020-05-26T16:36:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634138030",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased",
      "created_at" : "2020-09-10T22:57:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-690774658",
      "id" : 690774658,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MDc3NDY1OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-10T22:57:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690774658",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r486785464"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486785464"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this used?",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-09-11T05:41:41Z",
      "diff_hunk" : "@@ -63,6 +63,64 @@ struct CompareIteratorByHash {\n         return a->GetTx().GetHash() < b->GetTx().GetHash();\n     }\n };\n+\n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class LOCKABLE Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch = 0;\n+    bool m_guarded = false;\n+\n+public:\n+    Epoch() { }\n+    Epoch(const Epoch&) = delete;\n+    Epoch& operator=(const Epoch&) = delete;\n+\n+    bool guarded() const { return m_guarded; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r486785464",
      "id" : 486785464,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc4NTQ2NA==",
      "original_commit_id" : "c95663c9350735a6200f9d29a1d8ac0ca8d41a4c",
      "original_line" : 98,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 486487328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486785464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r486785695"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486785695"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "(I'm fine leaving it if it isn't used, just curious).",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-09-11T05:42:24Z",
      "diff_hunk" : "@@ -63,6 +63,64 @@ struct CompareIteratorByHash {\n         return a->GetTx().GetHash() < b->GetTx().GetHash();\n     }\n };\n+\n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class LOCKABLE Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch = 0;\n+    bool m_guarded = false;\n+\n+public:\n+    Epoch() { }\n+    Epoch(const Epoch&) = delete;\n+    Epoch& operator=(const Epoch&) = delete;\n+\n+    bool guarded() const { return m_guarded; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r486785695",
      "id" : 486785695,
      "in_reply_to_id" : 486785464,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc4NTY5NQ==",
      "original_commit_id" : "c95663c9350735a6200f9d29a1d8ac0ca8d41a4c",
      "original_line" : 98,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 486487328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486785695",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r486788819"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486788819"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: how would you feel about:\r\n\r\n```\r\nuint64_t marker_old = marker.m_marker;\r\nmarker.m_marker = std::max(marker.m_marker, m_raw_epoch);\r\nreturn marker.m_marker != marker_old;\r\n```\r\n\r\nfor whatever reason I find it easier to read/reason about when we always set it to max.",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-09-11T05:52:31Z",
      "diff_hunk" : "@@ -63,6 +63,64 @@ struct CompareIteratorByHash {\n         return a->GetTx().GetHash() < b->GetTx().GetHash();\n     }\n };\n+\n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class LOCKABLE Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch = 0;\n+    bool m_guarded = false;\n+\n+public:\n+    Epoch() { }\n+    Epoch(const Epoch&) = delete;\n+    Epoch& operator=(const Epoch&) = delete;\n+\n+    bool guarded() const { return m_guarded; }\n+\n+    class Marker {\n+    private:\n+        uint64_t m_marker = 0;\n+        friend class Epoch;\n+    };\n+\n+    class SCOPED_LOCKABLE Guard {\n+    private:\n+        Epoch& m_epoch;\n+\n+    public:\n+        explicit Guard(Epoch& epoch) EXCLUSIVE_LOCK_FUNCTION(epoch);\n+        ~Guard() UNLOCK_FUNCTION();\n+    };\n+\n+    bool visited(Marker& marker) const EXCLUSIVE_LOCKS_REQUIRED(*this) {\n+        assert(m_guarded);\n+        bool ret = marker.m_marker >= m_raw_epoch;\n+        if (!ret) marker.m_marker = m_raw_epoch;\n+        return ret;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r486788819",
      "id" : 486788819,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc4ODgxOQ==",
      "original_commit_id" : "c95663c9350735a6200f9d29a1d8ac0ca8d41a4c",
      "original_line" : 120,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 486487328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486788819",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r486790383"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486790383"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe best to move this into it's own header-only file/all headers to minimize conflict with #17786?",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-09-11T05:57:40Z",
      "diff_hunk" : "@@ -1113,22 +1113,17 @@ void CTxMemPool::SetIsLoaded(bool loaded)\n }\n \n \n-CTxMemPool::EpochGuard CTxMemPool::GetFreshEpoch() const\n+Epoch::Guard::Guard(Epoch& epoch) : m_epoch(epoch)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r486790383",
      "id" : 486790383,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5MDM4Mw==",
      "original_commit_id" : "c95663c9350735a6200f9d29a1d8ac0ca8d41a4c",
      "original_line" : 1116,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 486487328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486790383",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r488334488"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488334488"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "There's an `assert(m_epoch.guarded());` in `CTxMemPool::visited(Optional<txiter> it)` to check the lock's held in the case where `it->visited` isn't called.",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-09-15T01:52:04Z",
      "diff_hunk" : "@@ -63,6 +63,64 @@ struct CompareIteratorByHash {\n         return a->GetTx().GetHash() < b->GetTx().GetHash();\n     }\n };\n+\n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class LOCKABLE Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch = 0;\n+    bool m_guarded = false;\n+\n+public:\n+    Epoch() { }\n+    Epoch(const Epoch&) = delete;\n+    Epoch& operator=(const Epoch&) = delete;\n+\n+    bool guarded() const { return m_guarded; }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r488334488",
      "id" : 488334488,
      "in_reply_to_id" : 486785464,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMzNDQ4OA==",
      "original_commit_id" : "c95663c9350735a6200f9d29a1d8ac0ca8d41a4c",
      "original_line" : 98,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 488267663,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488334488",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r488339385"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488339385"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That reverses the logic (`ret == false` causes `m_marker` to change originally, but your code returns `true` if `m_marker` changed) ? Seems like that's evidence it's not that easy to read/reason about? :)\r\n\r\nIt might be less confusing to write it out in full:\r\n\r\n```c++\r\nif (marker.m_marker < m_raw_epoch ) {\r\n    // this entry is from an earlier epoch, so it hasn't been visited\r\n    marker.m_marker = m_raw_epoch;\r\n    return false;\r\n} else {\r\n    return true;\r\n}\r\n```\r\n\r\nI'd guess the compiler will make all these variants essentially the same anyway, so no objection to any variation from me.",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-09-15T02:09:23Z",
      "diff_hunk" : "@@ -63,6 +63,64 @@ struct CompareIteratorByHash {\n         return a->GetTx().GetHash() < b->GetTx().GetHash();\n     }\n };\n+\n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class LOCKABLE Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch = 0;\n+    bool m_guarded = false;\n+\n+public:\n+    Epoch() { }\n+    Epoch(const Epoch&) = delete;\n+    Epoch& operator=(const Epoch&) = delete;\n+\n+    bool guarded() const { return m_guarded; }\n+\n+    class Marker {\n+    private:\n+        uint64_t m_marker = 0;\n+        friend class Epoch;\n+    };\n+\n+    class SCOPED_LOCKABLE Guard {\n+    private:\n+        Epoch& m_epoch;\n+\n+    public:\n+        explicit Guard(Epoch& epoch) EXCLUSIVE_LOCK_FUNCTION(epoch);\n+        ~Guard() UNLOCK_FUNCTION();\n+    };\n+\n+    bool visited(Marker& marker) const EXCLUSIVE_LOCKS_REQUIRED(*this) {\n+        assert(m_guarded);\n+        bool ret = marker.m_marker >= m_raw_epoch;\n+        if (!ret) marker.m_marker = m_raw_epoch;\n+        return ret;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r488339385",
      "id" : 488339385,
      "in_reply_to_id" : 486788819,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMzOTM4NQ==",
      "original_commit_id" : "c95663c9350735a6200f9d29a1d8ac0ca8d41a4c",
      "original_line" : 120,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 488272985,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488339385",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r488347408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488347408"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah my bad, I've made a case against myself -- for what it's worth, I made the proposed version by translating your proposed version, which I have trouble parsing logically, and thought it was equivalent to that logic (and still can't figure out the concrete reason it's opposite).\r\n\r\nI'm fine with the completely written out version as it is the most obvious for sleepy brains like mine.",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-09-15T02:37:57Z",
      "diff_hunk" : "@@ -63,6 +63,64 @@ struct CompareIteratorByHash {\n         return a->GetTx().GetHash() < b->GetTx().GetHash();\n     }\n };\n+\n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class LOCKABLE Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch = 0;\n+    bool m_guarded = false;\n+\n+public:\n+    Epoch() { }\n+    Epoch(const Epoch&) = delete;\n+    Epoch& operator=(const Epoch&) = delete;\n+\n+    bool guarded() const { return m_guarded; }\n+\n+    class Marker {\n+    private:\n+        uint64_t m_marker = 0;\n+        friend class Epoch;\n+    };\n+\n+    class SCOPED_LOCKABLE Guard {\n+    private:\n+        Epoch& m_epoch;\n+\n+    public:\n+        explicit Guard(Epoch& epoch) EXCLUSIVE_LOCK_FUNCTION(epoch);\n+        ~Guard() UNLOCK_FUNCTION();\n+    };\n+\n+    bool visited(Marker& marker) const EXCLUSIVE_LOCKS_REQUIRED(*this) {\n+        assert(m_guarded);\n+        bool ret = marker.m_marker >= m_raw_epoch;\n+        if (!ret) marker.m_marker = m_raw_epoch;\n+        return ret;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r488347408",
      "id" : 488347408,
      "in_reply_to_id" : 486788819,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0NzQwOA==",
      "original_commit_id" : "c95663c9350735a6200f9d29a1d8ac0ca8d41a4c",
      "original_line" : 120,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 488282100,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488347408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r488358871"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488358871"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think the translation goes:\r\n\r\n- `r = a >= b; if (!r) a = b; return r;`  (current)\r\n- `o = a; if (! (a >= b)) a = b; return o >= b;`   (store old value, replace `r`)\r\n- `o = a; if (a < b) a = b; return !(o < b);`  (switch to less than)\r\n- `o = a; a = max(a,b); return !(o != a);`  (`o < b` iff the if was taken, and `a` was changed)\r\n- `o = a; a = max(a,b); return o == a;`  (simplify)\r\n\r\nAnyway, changed to KISS version.",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-09-15T03:20:48Z",
      "diff_hunk" : "@@ -63,6 +63,64 @@ struct CompareIteratorByHash {\n         return a->GetTx().GetHash() < b->GetTx().GetHash();\n     }\n };\n+\n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class LOCKABLE Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch = 0;\n+    bool m_guarded = false;\n+\n+public:\n+    Epoch() { }\n+    Epoch(const Epoch&) = delete;\n+    Epoch& operator=(const Epoch&) = delete;\n+\n+    bool guarded() const { return m_guarded; }\n+\n+    class Marker {\n+    private:\n+        uint64_t m_marker = 0;\n+        friend class Epoch;\n+    };\n+\n+    class SCOPED_LOCKABLE Guard {\n+    private:\n+        Epoch& m_epoch;\n+\n+    public:\n+        explicit Guard(Epoch& epoch) EXCLUSIVE_LOCK_FUNCTION(epoch);\n+        ~Guard() UNLOCK_FUNCTION();\n+    };\n+\n+    bool visited(Marker& marker) const EXCLUSIVE_LOCKS_REQUIRED(*this) {\n+        assert(m_guarded);\n+        bool ret = marker.m_marker >= m_raw_epoch;\n+        if (!ret) marker.m_marker = m_raw_epoch;\n+        return ret;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r488358871",
      "id" : 488358871,
      "in_reply_to_id" : 486788819,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM1ODg3MQ==",
      "original_commit_id" : "c95663c9350735a6200f9d29a1d8ac0ca8d41a4c",
      "original_line" : 120,
      "original_position" : 58,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 488294821,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488358871",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r488358955"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488358955"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Moved into util/epochguard.h",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-09-15T03:21:04Z",
      "diff_hunk" : "@@ -1113,22 +1113,17 @@ void CTxMemPool::SetIsLoaded(bool loaded)\n }\n \n \n-CTxMemPool::EpochGuard CTxMemPool::GetFreshEpoch() const\n+Epoch::Guard::Guard(Epoch& epoch) : m_epoch(epoch)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r488358955",
      "id" : 488358955,
      "in_reply_to_id" : 486790383,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM1ODk1NQ==",
      "original_commit_id" : "c95663c9350735a6200f9d29a1d8ac0ca8d41a4c",
      "original_line" : 1116,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/txmempool.cpp",
      "position" : null,
      "pull_request_review_id" : 488294926,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488358955",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r488785835"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488785835"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "micronit: may be worth adding a comment here that the assert is redundant when it != nullopt, but is used for consistency when it == nullopt.",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2020-09-15T16:04:41Z",
      "diff_hunk" : "@@ -814,52 +815,20 @@ class CTxMemPool\n      */\n     void removeUnchecked(txiter entry, MemPoolRemovalReason reason) EXCLUSIVE_LOCKS_REQUIRED(cs);\n public:\n-    /** EpochGuard: RAII-style guard for using epoch-based graph traversal algorithms.\n-     *     When walking ancestors or descendants, we generally want to avoid\n-     * visiting the same transactions twice. Some traversal algorithms use\n-     * std::set (or setEntries) to deduplicate the transaction we visit.\n-     * However, use of std::set is algorithmically undesirable because it both\n-     * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n-     * more dynamic memory allocations.\n-     *     In many algorithms we can replace std::set with an internal mempool\n-     * counter to track the time (or, \"epoch\") that we began a traversal, and\n-     * check + update a per-transaction epoch for each transaction we look at to\n-     * determine if that transaction has not yet been visited during the current\n-     * traversal's epoch.\n-     *     Algorithms using std::set can be replaced on a one by one basis.\n-     * Both techniques are not fundamentally incompatible across the codebase.\n-     * Generally speaking, however, the remaining use of std::set for mempool\n-     * traversal should be viewed as a TODO for replacement with an epoch based\n-     * traversal, rather than a preference for std::set over epochs in that\n-     * algorithm.\n-     */\n-    class EpochGuard {\n-        const CTxMemPool& pool;\n-        public:\n-        EpochGuard(const CTxMemPool& in);\n-        ~EpochGuard();\n-    };\n-    // N.B. GetFreshEpoch modifies mutable state via the EpochGuard construction\n-    // (and later destruction)\n-    EpochGuard GetFreshEpoch() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n     /** visited marks a CTxMemPoolEntry as having been traversed\n-     * during the lifetime of the most recently created EpochGuard\n+     * during the lifetime of the most recently created Epoch::Guard\n      * and returns false if we are the first visitor, true otherwise.\n      *\n-     * An EpochGuard must be held when visited is called or an assert will be\n+     * An Epoch::Guard must be held when visited is called or an assert will be\n      * triggered.\n      *\n      */\n-    bool visited(txiter it) const EXCLUSIVE_LOCKS_REQUIRED(cs) {\n-        assert(m_has_epoch_guard);\n-        bool ret = it->m_epoch >= m_epoch;\n-        it->m_epoch = std::max(it->m_epoch, m_epoch);\n-        return ret;\n+    bool visited(const txiter it) const EXCLUSIVE_LOCKS_REQUIRED(cs, m_epoch) {\n+        return m_epoch.visited(it->m_epoch_marker);\n     }\n \n-    bool visited(Optional<txiter> it) const EXCLUSIVE_LOCKS_REQUIRED(cs) {\n-        assert(m_has_epoch_guard);\n+    bool visited(Optional<txiter> it) const EXCLUSIVE_LOCKS_REQUIRED(cs, m_epoch) {\n+        assert(m_epoch.guarded());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r488785835",
      "id" : 488785835,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc4NTgzNQ==",
      "original_commit_id" : "55c1c7e5db72a343936487c03d555974f97daaf5",
      "original_line" : 831,
      "original_position" : 99,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 488839517,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488785835",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re CR-ACK",
      "created_at" : "2020-09-15T16:05:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-692815496",
      "id" : 692815496,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5MjgxNTQ5Ng==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-15T16:05:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/692815496",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, the code looks like a nice refactoring.",
      "created_at" : "2020-09-18T08:37:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-694737531",
      "id" : 694737531,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDY5NDczNzUzMQ==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-09-18T08:37:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694737531",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-12-01T09:44:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-736359373",
      "id" : 736359373,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNjM1OTM3Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-01T09:44:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736359373",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2020-12-02T13:16:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-737224072",
      "id" : 737224072,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDczNzIyNDA3Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-02T13:16:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737224072",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-01-13T09:13:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-759313998",
      "id" : 759313998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc1OTMxMzk5OA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-13T09:13:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/759313998",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased to deal with adjacent lines changed in #19935",
      "created_at" : "2021-01-14T11:14:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-760130294",
      "id" : 760130294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc2MDEzMDI5NA==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-01-14T11:14:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/760130294",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558593664"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558593664"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit: while touching headers they could be sorted:\r\n```\r\n#include <random.h>\r\n#include <sync.h>\r\n#include <util/epochguard.h>\r\n```",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2021-01-15T21:09:00Z",
      "diff_hunk" : "@@ -21,6 +21,7 @@\n #include <primitives/transaction.h>\n #include <sync.h>\n #include <random.h>\n+#include <util/epochguard.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558593664",
      "id" : 558593664,
      "line" : 24,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU5MzY2NA==",
      "original_commit_id" : "88019f9a183d396713fd357604a6e472c5ed8807",
      "original_line" : 24,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : 4,
      "pull_request_review_id" : 569619362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558593664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558595243"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558595243"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit, suggested by `clang-format`:\r\n```suggestion\r\n    bool visited(const txiter it) const EXCLUSIVE_LOCKS_REQUIRED(cs, m_epoch)\r\n    {\r\n```",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2021-01-15T21:13:01Z",
      "diff_hunk" : "@@ -819,52 +820,20 @@ class CTxMemPool\n      */\n     void removeUnchecked(txiter entry, MemPoolRemovalReason reason) EXCLUSIVE_LOCKS_REQUIRED(cs);\n public:\n-    /** EpochGuard: RAII-style guard for using epoch-based graph traversal algorithms.\n-     *     When walking ancestors or descendants, we generally want to avoid\n-     * visiting the same transactions twice. Some traversal algorithms use\n-     * std::set (or setEntries) to deduplicate the transaction we visit.\n-     * However, use of std::set is algorithmically undesirable because it both\n-     * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n-     * more dynamic memory allocations.\n-     *     In many algorithms we can replace std::set with an internal mempool\n-     * counter to track the time (or, \"epoch\") that we began a traversal, and\n-     * check + update a per-transaction epoch for each transaction we look at to\n-     * determine if that transaction has not yet been visited during the current\n-     * traversal's epoch.\n-     *     Algorithms using std::set can be replaced on a one by one basis.\n-     * Both techniques are not fundamentally incompatible across the codebase.\n-     * Generally speaking, however, the remaining use of std::set for mempool\n-     * traversal should be viewed as a TODO for replacement with an epoch based\n-     * traversal, rather than a preference for std::set over epochs in that\n-     * algorithm.\n-     */\n-    class EpochGuard {\n-        const CTxMemPool& pool;\n-        public:\n-        explicit EpochGuard(const CTxMemPool& in);\n-        ~EpochGuard();\n-    };\n-    // N.B. GetFreshEpoch modifies mutable state via the EpochGuard construction\n-    // (and later destruction)\n-    EpochGuard GetFreshEpoch() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n     /** visited marks a CTxMemPoolEntry as having been traversed\n-     * during the lifetime of the most recently created EpochGuard\n+     * during the lifetime of the most recently created Epoch::Guard\n      * and returns false if we are the first visitor, true otherwise.\n      *\n-     * An EpochGuard must be held when visited is called or an assert will be\n+     * An Epoch::Guard must be held when visited is called or an assert will be\n      * triggered.\n      *\n      */\n-    bool visited(txiter it) const EXCLUSIVE_LOCKS_REQUIRED(cs) {\n-        assert(m_has_epoch_guard);\n-        bool ret = it->m_epoch >= m_epoch;\n-        it->m_epoch = std::max(it->m_epoch, m_epoch);\n-        return ret;\n+    bool visited(const txiter it) const EXCLUSIVE_LOCKS_REQUIRED(cs, m_epoch) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558595243",
      "id" : 558595243,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU5NTI0Mw==",
      "original_commit_id" : "88019f9a183d396713fd357604a6e472c5ed8807",
      "original_line" : 831,
      "original_position" : 92,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 569619362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558595243",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558595646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558595646"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit, suggested by `clang-format`:\r\n```suggestion\r\n    bool visited(Optional<txiter> it) const EXCLUSIVE_LOCKS_REQUIRED(cs, m_epoch)\r\n    {\r\n```",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2021-01-15T21:14:04Z",
      "diff_hunk" : "@@ -819,52 +820,20 @@ class CTxMemPool\n      */\n     void removeUnchecked(txiter entry, MemPoolRemovalReason reason) EXCLUSIVE_LOCKS_REQUIRED(cs);\n public:\n-    /** EpochGuard: RAII-style guard for using epoch-based graph traversal algorithms.\n-     *     When walking ancestors or descendants, we generally want to avoid\n-     * visiting the same transactions twice. Some traversal algorithms use\n-     * std::set (or setEntries) to deduplicate the transaction we visit.\n-     * However, use of std::set is algorithmically undesirable because it both\n-     * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n-     * more dynamic memory allocations.\n-     *     In many algorithms we can replace std::set with an internal mempool\n-     * counter to track the time (or, \"epoch\") that we began a traversal, and\n-     * check + update a per-transaction epoch for each transaction we look at to\n-     * determine if that transaction has not yet been visited during the current\n-     * traversal's epoch.\n-     *     Algorithms using std::set can be replaced on a one by one basis.\n-     * Both techniques are not fundamentally incompatible across the codebase.\n-     * Generally speaking, however, the remaining use of std::set for mempool\n-     * traversal should be viewed as a TODO for replacement with an epoch based\n-     * traversal, rather than a preference for std::set over epochs in that\n-     * algorithm.\n-     */\n-    class EpochGuard {\n-        const CTxMemPool& pool;\n-        public:\n-        explicit EpochGuard(const CTxMemPool& in);\n-        ~EpochGuard();\n-    };\n-    // N.B. GetFreshEpoch modifies mutable state via the EpochGuard construction\n-    // (and later destruction)\n-    EpochGuard GetFreshEpoch() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n-\n     /** visited marks a CTxMemPoolEntry as having been traversed\n-     * during the lifetime of the most recently created EpochGuard\n+     * during the lifetime of the most recently created Epoch::Guard\n      * and returns false if we are the first visitor, true otherwise.\n      *\n-     * An EpochGuard must be held when visited is called or an assert will be\n+     * An Epoch::Guard must be held when visited is called or an assert will be\n      * triggered.\n      *\n      */\n-    bool visited(txiter it) const EXCLUSIVE_LOCKS_REQUIRED(cs) {\n-        assert(m_has_epoch_guard);\n-        bool ret = it->m_epoch >= m_epoch;\n-        it->m_epoch = std::max(it->m_epoch, m_epoch);\n-        return ret;\n+    bool visited(const txiter it) const EXCLUSIVE_LOCKS_REQUIRED(cs, m_epoch) {\n+        return m_epoch.visited(it->m_epoch_marker);\n     }\n \n-    bool visited(Optional<txiter> it) const EXCLUSIVE_LOCKS_REQUIRED(cs) {\n-        assert(m_has_epoch_guard);\n+    bool visited(Optional<txiter> it) const EXCLUSIVE_LOCKS_REQUIRED(cs, m_epoch) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558595646",
      "id" : 558595646,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU5NTY0Ng==",
      "original_commit_id" : "88019f9a183d396713fd357604a6e472c5ed8807",
      "original_line" : 835,
      "original_position" : 98,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : null,
      "pull_request_review_id" : 569619362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558595646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558595862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558595862"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit, suggested by `clang-format`:\r\n```suggestion\r\n    Epoch() {}\r\n```",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2021-01-15T21:14:35Z",
      "diff_hunk" : "@@ -0,0 +1,88 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_EPOCHGUARD_H\n+#define BITCOIN_UTIL_EPOCHGUARD_H\n+\n+#include <threadsafety.h>\n+\n+#include <cassert>\n+\n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class LOCKABLE Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch = 0;\n+    bool m_guarded = false;\n+\n+public:\n+    Epoch() { }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558595862",
      "id" : 558595862,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU5NTg2Mg==",
      "original_commit_id" : "88019f9a183d396713fd357604a6e472c5ed8807",
      "original_line" : 40,
      "original_position" : 40,
      "original_start_line" : null,
      "path" : "src/util/epochguard.h",
      "position" : null,
      "pull_request_review_id" : 569619362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558595862",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558596003"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558596003"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit, suggested by `clang-format`:\r\n```suggestion\r\n    class Marker\r\n    {\r\n```",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2021-01-15T21:14:58Z",
      "diff_hunk" : "@@ -0,0 +1,88 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_EPOCHGUARD_H\n+#define BITCOIN_UTIL_EPOCHGUARD_H\n+\n+#include <threadsafety.h>\n+\n+#include <cassert>\n+\n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class LOCKABLE Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch = 0;\n+    bool m_guarded = false;\n+\n+public:\n+    Epoch() { }\n+    Epoch(const Epoch&) = delete;\n+    Epoch& operator=(const Epoch&) = delete;\n+\n+    bool guarded() const { return m_guarded; }\n+\n+    class Marker {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558596003",
      "id" : 558596003,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU5NjAwMw==",
      "original_commit_id" : "88019f9a183d396713fd357604a6e472c5ed8807",
      "original_line" : 46,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/util/epochguard.h",
      "position" : null,
      "pull_request_review_id" : 569619362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558596003",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558596167"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558596167"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit, suggested by `clang-format`:\r\n```suggestion\r\n    class SCOPED_LOCKABLE Guard\r\n    {\r\n```",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2021-01-15T21:15:22Z",
      "diff_hunk" : "@@ -0,0 +1,88 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_EPOCHGUARD_H\n+#define BITCOIN_UTIL_EPOCHGUARD_H\n+\n+#include <threadsafety.h>\n+\n+#include <cassert>\n+\n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class LOCKABLE Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch = 0;\n+    bool m_guarded = false;\n+\n+public:\n+    Epoch() { }\n+    Epoch(const Epoch&) = delete;\n+    Epoch& operator=(const Epoch&) = delete;\n+\n+    bool guarded() const { return m_guarded; }\n+\n+    class Marker {\n+    private:\n+        uint64_t m_marker = 0;\n+\n+        // only allow modification via Epoch member functions\n+        friend class Epoch;\n+        Marker& operator=(const Marker&) = delete;\n+    };\n+\n+    class SCOPED_LOCKABLE Guard {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558596167",
      "id" : 558596167,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU5NjE2Nw==",
      "original_commit_id" : "88019f9a183d396713fd357604a6e472c5ed8807",
      "original_line" : 55,
      "original_position" : 55,
      "original_start_line" : null,
      "path" : "src/util/epochguard.h",
      "position" : null,
      "pull_request_review_id" : 569619362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558596167",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558596990"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558596990"
         }
      },
      "author_association" : "MEMBER",
      "body" : "typo, https://github.com/bitcoin/bitcoin/pull/17925#discussion_r374052497:\r\n```suggestion\r\n * adds an asymptotic factor of O(log n) to traversals cost and triggers O(n)\r\n```",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2021-01-15T21:17:15Z",
      "diff_hunk" : "@@ -0,0 +1,88 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_EPOCHGUARD_H\n+#define BITCOIN_UTIL_EPOCHGUARD_H\n+\n+#include <threadsafety.h>\n+\n+#include <cassert>\n+\n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558596990",
      "id" : 558596990,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU5Njk5MA==",
      "original_commit_id" : "88019f9a183d396713fd357604a6e472c5ed8807",
      "original_line" : 18,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/util/epochguard.h",
      "position" : null,
      "pull_request_review_id" : 569619362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558596990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558607064"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558607064"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        {\r\n            assert(m_epoch.m_guarded);\r\n            ++m_epoch.m_raw_epoch; // ensure clear separation between epochs\r\n```",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2021-01-15T21:40:39Z",
      "diff_hunk" : "@@ -0,0 +1,88 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_EPOCHGUARD_H\n+#define BITCOIN_UTIL_EPOCHGUARD_H\n+\n+#include <threadsafety.h>\n+\n+#include <cassert>\n+\n+/** Epoch: RAII-style guard for using epoch-based graph traversal algorithms.\n+ *     When walking ancestors or descendants, we generally want to avoid\n+ * visiting the same transactions twice. Some traversal algorithms use\n+ * std::set (or setEntries) to deduplicate the transaction we visit.\n+ * However, use of std::set is algorithmically undesirable because it both\n+ * adds an asymptotic factor of O(log n) to traverals cost and triggers O(n)\n+ * more dynamic memory allocations.\n+ *     In many algorithms we can replace std::set with an internal mempool\n+ * counter to track the time (or, \"epoch\") that we began a traversal, and\n+ * check + update a per-transaction epoch for each transaction we look at to\n+ * determine if that transaction has not yet been visited during the current\n+ * traversal's epoch.\n+ *     Algorithms using std::set can be replaced on a one by one basis.\n+ * Both techniques are not fundamentally incompatible across the codebase.\n+ * Generally speaking, however, the remaining use of std::set for mempool\n+ * traversal should be viewed as a TODO for replacement with an epoch based\n+ * traversal, rather than a preference for std::set over epochs in that\n+ * algorithm.\n+ */\n+\n+class LOCKABLE Epoch\n+{\n+private:\n+    uint64_t m_raw_epoch = 0;\n+    bool m_guarded = false;\n+\n+public:\n+    Epoch() { }\n+    Epoch(const Epoch&) = delete;\n+    Epoch& operator=(const Epoch&) = delete;\n+\n+    bool guarded() const { return m_guarded; }\n+\n+    class Marker {\n+    private:\n+        uint64_t m_marker = 0;\n+\n+        // only allow modification via Epoch member functions\n+        friend class Epoch;\n+        Marker& operator=(const Marker&) = delete;\n+    };\n+\n+    class SCOPED_LOCKABLE Guard {\n+    private:\n+        Epoch& m_epoch;\n+\n+    public:\n+        explicit Guard(Epoch& epoch) EXCLUSIVE_LOCK_FUNCTION(epoch) : m_epoch(epoch)\n+        {\n+            assert(!m_epoch.m_guarded);\n+            ++m_epoch.m_raw_epoch;\n+            m_epoch.m_guarded = true;\n+        }\n+        ~Guard() UNLOCK_FUNCTION()\n+        {\n+            ++m_epoch.m_raw_epoch; // ensure clear separation between epochs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r558607064",
      "id" : 558607064,
      "line" : null,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODYwNzA2NA==",
      "original_commit_id" : "88019f9a183d396713fd357604a6e472c5ed8807",
      "original_line" : 71,
      "original_position" : 68,
      "original_start_line" : 67,
      "path" : "src/util/epochguard.h",
      "position" : null,
      "pull_request_review_id" : 569619362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558607064",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2021-02-08T20:21:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-775422216",
      "id" : 775422216,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NTQyMjIxNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-08T20:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/775422216",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r572593067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572593067"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Sorted in #20944",
      "commit_id" : "fd6580e405699ccb051fd2a34525e48d3253673d",
      "created_at" : "2021-02-09T04:53:23Z",
      "diff_hunk" : "@@ -21,6 +21,7 @@\n #include <primitives/transaction.h>\n #include <sync.h>\n #include <random.h>\n+#include <util/epochguard.h>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#discussion_r572593067",
      "id" : 572593067,
      "in_reply_to_id" : 558593664,
      "line" : 24,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjU5MzA2Nw==",
      "original_commit_id" : "88019f9a183d396713fd357604a6e472c5ed8807",
      "original_line" : 24,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/txmempool.h",
      "position" : 4,
      "pull_request_review_id" : 586178649,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18017",
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2021-02-09T05:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/572593067",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ":birthday: This PR turned 1 the other week! Rebased on top of #20944 due to header reordering, and addressed @hebasto's nits.\r\n\r\n(I think the mempool visited methods are public deliberately, so that they could be used by external functions if desired; so haven't made them private)",
      "created_at" : "2021-02-09T05:41:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-775682083",
      "id" : 775682083,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NTY4MjA4Mw==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-09T05:41:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/775682083",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes this is correct; IIRC there's some stalled out patches which require them to be visible :)",
      "created_at" : "2021-02-10T04:42:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18017#issuecomment-776435206",
      "id" : 776435206,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18017",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc3NjQzNTIwNg==",
      "performed_via_github_app" : null,
      "updated_at" : "2021-02-10T04:42:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/776435206",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/886523?v=4",
         "events_url" : "https://api.github.com/users/JeremyRubin/events{/privacy}",
         "followers_url" : "https://api.github.com/users/JeremyRubin/followers",
         "following_url" : "https://api.github.com/users/JeremyRubin/following{/other_user}",
         "gists_url" : "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/JeremyRubin",
         "id" : 886523,
         "login" : "JeremyRubin",
         "node_id" : "MDQ6VXNlcjg4NjUyMw==",
         "organizations_url" : "https://api.github.com/users/JeremyRubin/orgs",
         "received_events_url" : "https://api.github.com/users/JeremyRubin/received_events",
         "repos_url" : "https://api.github.com/users/JeremyRubin/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/JeremyRubin/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/JeremyRubin"
      }
   }
]
