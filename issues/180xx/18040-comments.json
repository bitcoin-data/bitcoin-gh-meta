[
   {
      "author_association" : "MEMBER",
      "body" : "Personally I'd love to see Miniscript support in Core! The Miniscript C++ implementation hasn't seen any repo activity since September 2019, but I hope there will be renewed activity soon :)",
      "created_at" : "2020-01-31T16:34:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18040#issuecomment-580808060",
      "id" : 580808060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18040",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDgwODA2MA==",
      "updated_at" : "2020-01-31T16:34:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580808060",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I would like to see Miniscript fully integrated into Core. The plan with Descriptor wallets is that we can extend them in the future to also store Miniscript. So then we would have a wallet which can produce addresses for arbitrary scripts and be able to sign for them.",
      "created_at" : "2020-01-31T18:24:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18040#issuecomment-580851527",
      "id" : 580851527,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18040",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDg1MTUyNw==",
      "updated_at" : "2020-01-31T18:24:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580851527",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I asked @apoelstra about Miniscript in Core at his London Bitcoin Devs talk on Miniscript. A summary (paraphrasing) of his response. \r\n\r\nCore should have the ability to sign for Miniscripts and to recognize Miniscripts it has control over. There are plans for Core to support Miniscript in the descriptor wallet which directly implies Core has to be able to finalize and sign them. A general PSBT finalizer effectively means there is a RPC where you give it a PSBT and Core is able to output a transaction.\r\n\r\nThe Policy to Miniscript compiler should not be in Core. That doesnât even necessarily have a canonical design. There are some interesting fee estimation and analysis tooling that probably donât belong in Core. Those probably belong in their own library or their own RPC tool or something like that. Core should be able to estimate fees for its own stuff but you probably shouldn't be able to ask whether keys are available or trusted in Core due to complex scenarios that only Miniscript is designed to address.\r\n\r\nFull transcript: https://diyhpl.us/wiki/transcripts/london-bitcoin-devs/2020-02-04-andrew-poelstra-miniscript/",
      "created_at" : "2020-03-09T20:05:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18040#issuecomment-596752735",
      "id" : 596752735,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18040",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5Njc1MjczNQ==",
      "updated_at" : "2020-03-09T20:05:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596752735",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I agree the policy compiler doesn't belong in Core.\n\nI'm not sure about fee estimation; once we have descriptor wallets (with miniscript integration) there isn't really a difference between \"miniscript\" and \"core's own stuff\". Once we have a workable solution for doing spending size estimation, it can be implemented in the C++ library, which can be included in Core (see #16800).",
      "created_at" : "2020-03-09T20:24:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18040#issuecomment-596761236",
      "id" : 596761236,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18040",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU5Njc2MTIzNg==",
      "updated_at" : "2020-03-09T20:24:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596761236",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Just wanted to chime in that for my own development purposes I'd love to see the ability to define wallets with miniscript in Core; I'm ambivalent as to the specific level of integration. At the moment custom scripting is far more onerous than it should be, in my opinion.",
      "created_at" : "2020-12-09T13:40:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18040#issuecomment-741777582",
      "id" : 741777582,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18040",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDc0MTc3NzU4Mg==",
      "performed_via_github_app" : null,
      "updated_at" : "2020-12-09T13:40:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741777582",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/288011?v=4",
         "events_url" : "https://api.github.com/users/jlopp/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jlopp/followers",
         "following_url" : "https://api.github.com/users/jlopp/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jlopp/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jlopp",
         "id" : 288011,
         "login" : "jlopp",
         "node_id" : "MDQ6VXNlcjI4ODAxMQ==",
         "organizations_url" : "https://api.github.com/users/jlopp/orgs",
         "received_events_url" : "https://api.github.com/users/jlopp/received_events",
         "repos_url" : "https://api.github.com/users/jlopp/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jlopp/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jlopp/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jlopp"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "There has been some recent discussion (July 16th Core [wallet meeting](https://gnusha.org/bitcoin-core-dev/2021-07-16.log)) on both the progress status of Miniscript in Core and [upgrading Miniscript to support Taproot](https://github.com/sipa/miniscript/issues/56).\r\n\r\nThe focus appears (at least for the C++ implementation of Miniscript) to be getting Miniscript into Core in its current form before considering upgrading Miniscript to support Taproot. [PR 16800](https://github.com/bitcoin/bitcoin/pull/16800) has been languishing for a while, needs a significant rebase and an uptick in review.\r\n\r\nThe idealized (medium/long term) plan would be to get #16800 merged, Miniscript upgraded to support Taproot, upgraded Miniscript merged into Core and then the Core wallet could potentially support spending from generic scripts in the leaves of a Taproot tree. At the time of writing (July 2021) the Core wallet just supports single pubkey spends from the leaves of a Taproot tree. Future work on descriptors can get us to Taproot multisig (ie CHECKSIGADD) in the leaves but we'd need a Taproot upgraded Miniscript to support generic scripts (e.g. combinations of multisig and timelocks).\r\n\r\nWithout Miniscript in Core, spending from generic scripts in Taproot leaves won't be able to be supported in the Core wallet.\r\n",
      "created_at" : "2021-07-30T16:33:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18040#issuecomment-890008765",
      "id" : 890008765,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18040",
      "node_id" : "IC_kwDOABII5841DHS9",
      "performed_via_github_app" : null,
      "updated_at" : "2021-07-30T16:40:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890008765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Moving from https://github.com/bitcoin/bitcoin/pull/17975#issuecomment-1137203345:\r\n\r\n> I think having multiple implementations of Miniscript is good, but having multiple ones as part of this repo would only have marginal benefits, if at all.\r\n\r\n@darosior: Ohh I misunderstood. I thought you meant both Python implementations (James' existing and potentially your repo in a future PR) wouldn't be worth it. But you are thinking no Python implementation at all in this repo? Just the C++ implementation. So the functional test framework wouldn't support Miniscript and would deal entirely in script? Unit tests would be sufficient? Functional test support would be the major benefit, if that isn't needed then I agree there are only marginal benefits.",
      "created_at" : "2022-05-25T18:01:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/18040#issuecomment-1137654113",
      "id" : 1137654113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18040",
      "node_id" : "IC_kwDOABII585Dzzlh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1137654113/reactions"
      },
      "updated_at" : "2022-05-25T18:01:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1137654113",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   }
]
