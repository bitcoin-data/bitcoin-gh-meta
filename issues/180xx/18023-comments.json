[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r372686129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372686129"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This comment should be on L83 and vice versa? :)",
      "commit_id" : "c86bc144081f960347232546f7d22deb65d27deb",
      "created_at" : "2020-01-29T23:23:53Z",
      "diff_hunk" : "@@ -80,6 +80,11 @@ class CNetAddr\n         bool GetInAddr(struct in_addr* pipv4Addr) const;\n         uint32_t GetNetClass() const;\n \n+        //! For IPv4, mapped IPv4, SIIT translated IPv4, Teredo, 6to4 tunneled addresses, return the relevant IPv4 address as a uint32.\n+        bool HasLinkedIPv4() const;\n+        //! Whether this address has a linked IPv4 address (see GetLinkedIPv4()).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r372686129",
      "id" : 372686129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY4NjEyOQ==",
      "original_commit_id" : "2630011ca2c62ebc16054c892dab510799d1ff23",
      "original_position" : 6,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 350494570,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
      "updated_at" : "2020-01-31T22:51:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372686129",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @naumenkogs ",
      "created_at" : "2020-01-30T00:39:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580030892",
      "id" : 580030892,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDAzMDg5Mg==",
      "updated_at" : "2020-01-30T00:39:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580030892",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17812](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17812.html) (config, test: asmap functional tests and feature refinements by jonatack)\n* [#17428](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17428.html) (p2p: Try to preserve outbound block-relay-only connections during restart by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "created_at" : "2020-01-30T02:25:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580055048",
      "id" : 580055048,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDA1NTA0OA==",
      "updated_at" : "2020-01-30T18:37:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580055048",
      "user" : {
         "avatar_url" : "https://avatars2.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r372760521"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372760521"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed.",
      "commit_id" : "c86bc144081f960347232546f7d22deb65d27deb",
      "created_at" : "2020-01-30T05:02:30Z",
      "diff_hunk" : "@@ -80,6 +80,11 @@ class CNetAddr\n         bool GetInAddr(struct in_addr* pipv4Addr) const;\n         uint32_t GetNetClass() const;\n \n+        //! For IPv4, mapped IPv4, SIIT translated IPv4, Teredo, 6to4 tunneled addresses, return the relevant IPv4 address as a uint32.\n+        bool HasLinkedIPv4() const;\n+        //! Whether this address has a linked IPv4 address (see GetLinkedIPv4()).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r372760521",
      "id" : 372760521,
      "in_reply_to_id" : 372686129,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc2MDUyMQ==",
      "original_commit_id" : "2630011ca2c62ebc16054c892dab510799d1ff23",
      "original_position" : 6,
      "path" : "src/netaddress.h",
      "position" : null,
      "pull_request_review_id" : 350582823,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
      "updated_at" : "2020-01-31T22:51:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/372760521",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utack - looks nice, preventing unnecessary copies",
      "created_at" : "2020-01-30T15:15:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580301035",
      "id" : 580301035,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDMwMTAzNQ==",
      "updated_at" : "2020-01-30T15:15:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580301035",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/10261698?v=4",
         "events_url" : "https://api.github.com/users/sanjaykdragon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sanjaykdragon/followers",
         "following_url" : "https://api.github.com/users/sanjaykdragon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sanjaykdragon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sanjaykdragon",
         "id" : 10261698,
         "login" : "sanjaykdragon",
         "node_id" : "MDQ6VXNlcjEwMjYxNjk4",
         "organizations_url" : "https://api.github.com/users/sanjaykdragon/orgs",
         "received_events_url" : "https://api.github.com/users/sanjaykdragon/received_events",
         "repos_url" : "https://api.github.com/users/sanjaykdragon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sanjaykdragon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sanjaykdragon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sanjaykdragon"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nWhile improving asmap -- please consider increasing the robustness of `GetMappedAS(â¦)` by plugging this issue too: [\"GetMappedAS(...) lookup on an IPv6 address against a maliciously constructed AS-map triggers heap buffer-overflow\"](https://github.com/bitcoin/bitcoin/issues/18033) :)",
      "created_at" : "2020-01-30T23:21:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580508193",
      "id" : 580508193,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDUwODE5Mw==",
      "updated_at" : "2020-01-30T23:21:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580508193",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a commit to resolve #18033.",
      "created_at" : "2020-01-31T00:54:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580531800",
      "id" : 580531800,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDUzMTgwMA==",
      "updated_at" : "2020-01-31T00:54:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580531800",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, will review shortly.",
      "created_at" : "2020-01-31T11:16:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580693614",
      "id" : 580693614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDY5MzYxNA==",
      "updated_at" : "2020-01-31T11:16:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580693614",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK 868647e5d72f2718e41b723dc7e15594ffb1d7b6\r\nThank you!",
      "created_at" : "2020-01-31T14:31:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580756636",
      "id" : 580756636,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDc1NjYzNg==",
      "updated_at" : "2020-01-31T14:31:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580756636",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373548461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373548461"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A heap buffer overflow will occur here in case of `bits == 0`?",
      "commit_id" : "c86bc144081f960347232546f7d22deb65d27deb",
      "created_at" : "2020-01-31T15:50:17Z",
      "diff_hunk" : "@@ -35,52 +37,53 @@ uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, c\n }\n \n const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n-uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 0, TYPE_BIT_SIZES);\n }\n \n const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n-uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 1, ASN_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n-uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 2, MATCH_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n-uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 17, JUMP_BIT_SIZES);\n }\n \n }\n \n uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n {\n     std::vector<bool>::const_iterator pos = asmap.begin();\n+    const std::vector<bool>::const_iterator endpos = asmap.end();\n     uint8_t bits = ip.size();\n-    uint8_t default_asn = 0;\n+    uint32_t default_asn = 0;\n     uint32_t opcode, jump, match, matchlen;\n-    while (1) {\n-        assert(pos != asmap.end());\n-        opcode = DecodeType(pos);\n+    while (pos != endpos) {\n+        opcode = DecodeType(pos, endpos);\n         if (opcode == 0) {\n-            return DecodeASN(pos);\n+            return DecodeASN(pos, endpos);\n         } else if (opcode == 1) {\n-            jump = DecodeJump(pos);\n+            jump = DecodeJump(pos, endpos);\n             if (ip[ip.size() - bits]) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373548461",
      "id" : 373548461,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU0ODQ2MQ==",
      "original_commit_id" : "868647e5d72f2718e41b723dc7e15594ffb1d7b6",
      "original_position" : 82,
      "path" : "src/util/asmap.cpp",
      "position" : 83,
      "pull_request_review_id" : 351597116,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
      "updated_at" : "2020-01-31T22:51:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373548461",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373567477"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373567477"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n             if (bits == 0) {\r\n                 return default_asn;\r\n             }\r\n             if (ip[ip.size() - bits]) {\r\n```",
      "commit_id" : "c86bc144081f960347232546f7d22deb65d27deb",
      "created_at" : "2020-01-31T16:27:10Z",
      "diff_hunk" : "@@ -35,52 +37,53 @@ uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, c\n }\n \n const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n-uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 0, TYPE_BIT_SIZES);\n }\n \n const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n-uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 1, ASN_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n-uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 2, MATCH_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n-uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 17, JUMP_BIT_SIZES);\n }\n \n }\n \n uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n {\n     std::vector<bool>::const_iterator pos = asmap.begin();\n+    const std::vector<bool>::const_iterator endpos = asmap.end();\n     uint8_t bits = ip.size();\n-    uint8_t default_asn = 0;\n+    uint32_t default_asn = 0;\n     uint32_t opcode, jump, match, matchlen;\n-    while (1) {\n-        assert(pos != asmap.end());\n-        opcode = DecodeType(pos);\n+    while (pos != endpos) {\n+        opcode = DecodeType(pos, endpos);\n         if (opcode == 0) {\n-            return DecodeASN(pos);\n+            return DecodeASN(pos, endpos);\n         } else if (opcode == 1) {\n-            jump = DecodeJump(pos);\n+            jump = DecodeJump(pos, endpos);\n             if (ip[ip.size() - bits]) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373567477",
      "id" : 373567477,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU2NzQ3Nw==",
      "original_commit_id" : "868647e5d72f2718e41b723dc7e15594ffb1d7b6",
      "original_position" : 82,
      "path" : "src/util/asmap.cpp",
      "position" : 83,
      "pull_request_review_id" : 351622306,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
      "updated_at" : "2020-01-31T22:51:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373567477",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373567865"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373567865"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n                 if (bits == 0 || (ip[ip.size() - bits]) != ((match >> (matchlen - 1 - bit)) & 1)) {\r\n```",
      "commit_id" : "c86bc144081f960347232546f7d22deb65d27deb",
      "created_at" : "2020-01-31T16:27:54Z",
      "diff_hunk" : "@@ -35,52 +37,53 @@ uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, c\n }\n \n const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n-uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 0, TYPE_BIT_SIZES);\n }\n \n const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n-uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 1, ASN_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n-uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 2, MATCH_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n-uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 17, JUMP_BIT_SIZES);\n }\n \n }\n \n uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n {\n     std::vector<bool>::const_iterator pos = asmap.begin();\n+    const std::vector<bool>::const_iterator endpos = asmap.end();\n     uint8_t bits = ip.size();\n-    uint8_t default_asn = 0;\n+    uint32_t default_asn = 0;\n     uint32_t opcode, jump, match, matchlen;\n-    while (1) {\n-        assert(pos != asmap.end());\n-        opcode = DecodeType(pos);\n+    while (pos != endpos) {\n+        opcode = DecodeType(pos, endpos);\n         if (opcode == 0) {\n-            return DecodeASN(pos);\n+            return DecodeASN(pos, endpos);\n         } else if (opcode == 1) {\n-            jump = DecodeJump(pos);\n+            jump = DecodeJump(pos, endpos);\n             if (ip[ip.size() - bits]) {\n+                if (jump >= endpos - pos) break;\n                 pos += jump;\n             }\n             bits--;\n         } else if (opcode == 2) {\n-            match = DecodeMatch(pos);\n+            match = DecodeMatch(pos, endpos);\n             matchlen = CountBits(match) - 1;\n             for (uint32_t bit = 0; bit < matchlen; bit++) {\n                 if ((ip[ip.size() - bits]) != ((match >> (matchlen - 1 - bit)) & 1)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373567865",
      "id" : 373567865,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU2Nzg2NQ==",
      "original_commit_id" : "868647e5d72f2718e41b723dc7e15594ffb1d7b6",
      "original_position" : 92,
      "path" : "src/util/asmap.cpp",
      "position" : 94,
      "pull_request_review_id" : 351622835,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
      "updated_at" : "2020-01-31T22:51:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373567865",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373720439"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373720439"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, reaching the end of the ip array just means a malformed asmap. It's probably better to return 0 (also the other location).",
      "commit_id" : "c86bc144081f960347232546f7d22deb65d27deb",
      "created_at" : "2020-01-31T22:53:07Z",
      "diff_hunk" : "@@ -35,52 +37,53 @@ uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, c\n }\n \n const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n-uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 0, TYPE_BIT_SIZES);\n }\n \n const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n-uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 1, ASN_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n-uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 2, MATCH_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n-uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 17, JUMP_BIT_SIZES);\n }\n \n }\n \n uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n {\n     std::vector<bool>::const_iterator pos = asmap.begin();\n+    const std::vector<bool>::const_iterator endpos = asmap.end();\n     uint8_t bits = ip.size();\n-    uint8_t default_asn = 0;\n+    uint32_t default_asn = 0;\n     uint32_t opcode, jump, match, matchlen;\n-    while (1) {\n-        assert(pos != asmap.end());\n-        opcode = DecodeType(pos);\n+    while (pos != endpos) {\n+        opcode = DecodeType(pos, endpos);\n         if (opcode == 0) {\n-            return DecodeASN(pos);\n+            return DecodeASN(pos, endpos);\n         } else if (opcode == 1) {\n-            jump = DecodeJump(pos);\n+            jump = DecodeJump(pos, endpos);\n             if (ip[ip.size() - bits]) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373720439",
      "id" : 373720439,
      "in_reply_to_id" : 373567477,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcyMDQzOQ==",
      "original_commit_id" : "868647e5d72f2718e41b723dc7e15594ffb1d7b6",
      "original_position" : 82,
      "path" : "src/util/asmap.cpp",
      "position" : 83,
      "pull_request_review_id" : 351822781,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
      "updated_at" : "2020-01-31T22:53:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373720439",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@practicalswift Nice catch, addressed I think.",
      "created_at" : "2020-01-31T22:53:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-580946286",
      "id" : 580946286,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MDk0NjI4Ng==",
      "updated_at" : "2020-01-31T22:53:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580946286",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373720581"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373720581"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yup, fixed.",
      "commit_id" : "c86bc144081f960347232546f7d22deb65d27deb",
      "created_at" : "2020-01-31T22:53:35Z",
      "diff_hunk" : "@@ -35,52 +37,53 @@ uint32_t DecodeBits(std::vector<bool>::const_iterator& bitpos, uint8_t minval, c\n }\n \n const std::vector<uint8_t> TYPE_BIT_SIZES{0, 0, 1};\n-uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeType(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 0, TYPE_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 0, TYPE_BIT_SIZES);\n }\n \n const std::vector<uint8_t> ASN_BIT_SIZES{15, 16, 17, 18, 19, 20, 21, 22, 23, 24};\n-uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeASN(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 1, ASN_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 1, ASN_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> MATCH_BIT_SIZES{1, 2, 3, 4, 5, 6, 7, 8};\n-uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeMatch(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 2, MATCH_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 2, MATCH_BIT_SIZES);\n }\n \n \n const std::vector<uint8_t> JUMP_BIT_SIZES{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};\n-uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos)\n+uint32_t DecodeJump(std::vector<bool>::const_iterator& bitpos, const std::vector<bool>::const_iterator& endpos)\n {\n-    return DecodeBits(bitpos, 17, JUMP_BIT_SIZES);\n+    return DecodeBits(bitpos, endpos, 17, JUMP_BIT_SIZES);\n }\n \n }\n \n uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n {\n     std::vector<bool>::const_iterator pos = asmap.begin();\n+    const std::vector<bool>::const_iterator endpos = asmap.end();\n     uint8_t bits = ip.size();\n-    uint8_t default_asn = 0;\n+    uint32_t default_asn = 0;\n     uint32_t opcode, jump, match, matchlen;\n-    while (1) {\n-        assert(pos != asmap.end());\n-        opcode = DecodeType(pos);\n+    while (pos != endpos) {\n+        opcode = DecodeType(pos, endpos);\n         if (opcode == 0) {\n-            return DecodeASN(pos);\n+            return DecodeASN(pos, endpos);\n         } else if (opcode == 1) {\n-            jump = DecodeJump(pos);\n+            jump = DecodeJump(pos, endpos);\n             if (ip[ip.size() - bits]) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373720581",
      "id" : 373720581,
      "in_reply_to_id" : 373548461,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcyMDU4MQ==",
      "original_commit_id" : "868647e5d72f2718e41b723dc7e15594ffb1d7b6",
      "original_position" : 82,
      "path" : "src/util/asmap.cpp",
      "position" : 83,
      "pull_request_review_id" : 351822941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
      "updated_at" : "2020-01-31T22:53:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373720581",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sipa I'm no longer able to trigger the two heap buffer overflows, and the code withstood an eight hour `asmap` fuzzer (#18033) run (48 million executions): I think the code is robust against malicious map data now :)\r\n\r\nACK c86bc144081f960347232546f7d22deb65d27deb -- patch looks correct",
      "created_at" : "2020-02-01T08:26:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-581007633",
      "id" : 581007633,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MTAwNzYzMw==",
      "updated_at" : "2020-02-01T08:26:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/581007633",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7826565?v=4",
         "events_url" : "https://api.github.com/users/practicalswift/events{/privacy}",
         "followers_url" : "https://api.github.com/users/practicalswift/followers",
         "following_url" : "https://api.github.com/users/practicalswift/following{/other_user}",
         "gists_url" : "https://api.github.com/users/practicalswift/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/practicalswift",
         "id" : 7826565,
         "login" : "practicalswift",
         "node_id" : "MDQ6VXNlcjc4MjY1NjU=",
         "organizations_url" : "https://api.github.com/users/practicalswift/orgs",
         "received_events_url" : "https://api.github.com/users/practicalswift/received_events",
         "repos_url" : "https://api.github.com/users/practicalswift/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/practicalswift/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/practicalswift"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373768683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373768683"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This line could be extracted to a `bool CNetAddr::IsHeNet() const` function",
      "commit_id" : "c86bc144081f960347232546f7d22deb65d27deb",
      "created_at" : "2020-02-01T09:22:47Z",
      "diff_hunk" : "@@ -463,51 +497,32 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     int nStartByte = 0;\n     int nBits = 16;\n \n-    // all local addresses belong to the same group\n-    if (IsLocal())\n-    {\n+    if (IsLocal()) {\n+        // all local addresses belong to the same group\n         nBits = 0;\n-    }\n-    // all internal-usage addresses get their own group\n-    if (IsInternal())\n-    {\n+    } else if (IsInternal()) {\n+        // all internal-usage addresses get their own group\n         nStartByte = sizeof(g_internal_prefix);\n         nBits = (sizeof(ip) - sizeof(g_internal_prefix)) * 8;\n-    }\n-    // all other unroutable addresses belong to the same group\n-    else if (!IsRoutable())\n-    {\n+    } else if (!IsRoutable()) {\n+        // all other unroutable addresses belong to the same group\n         nBits = 0;\n-    }\n-    // for IPv4 addresses, '1' + the 16 higher-order bits of the IP\n-    // includes mapped IPv4, SIIT translated IPv4, and the well-known prefix\n-    else if (IsIPv4() || IsRFC6145() || IsRFC6052())\n-    {\n-        nStartByte = 12;\n-    }\n-    // for 6to4 tunnelled addresses, use the encapsulated IPv4 address\n-    else if (IsRFC3964())\n-    {\n-        nStartByte = 2;\n-    }\n-    // for Teredo-tunnelled IPv6 addresses, use the encapsulated IPv4 address\n-    else if (IsRFC4380())\n-    {\n-        vchRet.push_back(GetByte(3) ^ 0xFF);\n-        vchRet.push_back(GetByte(2) ^ 0xFF);\n+    } else if (HasLinkedIPv4()) {\n+        // IPv4 addresses (and mapped IPv4 addresses) use /16 groups\n+        uint32_t ipv4 = GetLinkedIPv4();\n+        vchRet.push_back((ipv4 >> 24) & 0xFF);\n+        vchRet.push_back((ipv4 >> 16) & 0xFF);\n         return vchRet;\n-    }\n-    else if (IsTor())\n-    {\n+    } else if (IsTor()) {\n         nStartByte = 6;\n         nBits = 4;\n-    }\n-    // for he.net, use /36 groups\n-    else if (GetByte(15) == 0x20 && GetByte(14) == 0x01 && GetByte(13) == 0x04 && GetByte(12) == 0x70)\n+    } else if (GetByte(15) == 0x20 && GetByte(14) == 0x01 && GetByte(13) == 0x04 && GetByte(12) == 0x70) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#discussion_r373768683",
      "id" : 373768683,
      "node_id" : "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2ODY4Mw==",
      "original_commit_id" : "c86bc144081f960347232546f7d22deb65d27deb",
      "original_position" : 122,
      "path" : "src/netaddress.cpp",
      "position" : 122,
      "pull_request_review_id" : 351874721,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18023",
      "updated_at" : "2020-02-01T09:49:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373768683",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "On my side, this PR held up on 72M execs (about 18 hours) of the asmap fuzzer.\r\n```\r\n#72474660\tREDUCE cov: 1198 ft: 3529 corp: 197/12792b exec/s: 1063 rss: 452Mb L: 41/1527 MS: 4 InsertByte-EraseBytes-InsertByte-PersAutoDict- DE: \"\\x00 \\x00\\x00\\x00\\x00\\x00\\x00\"-\r\n```",
      "created_at" : "2020-02-02T06:12:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-581102982",
      "id" : 581102982,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MTEwMjk4Mg==",
      "updated_at" : "2020-02-02T06:12:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/581102982",
      "user" : {
         "avatar_url" : "https://avatars1.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "utACK c86bc14",
      "created_at" : "2020-02-05T10:33:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-582343945",
      "id" : 582343945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MjM0Mzk0NQ==",
      "updated_at" : "2020-02-05T10:33:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582343945",
      "user" : {
         "avatar_url" : "https://avatars3.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK c86bc144081f960347232546f7d22deb65d27deb",
      "created_at" : "2020-02-05T12:59:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18023#issuecomment-582395696",
      "id" : 582395696,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18023",
      "node_id" : "MDEyOklzc3VlQ29tbWVudDU4MjM5NTY5Ng==",
      "updated_at" : "2020-02-05T12:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582395696",
      "user" : {
         "avatar_url" : "https://avatars0.githubusercontent.com/u/126646?v=4",
         "events_url" : "https://api.github.com/users/laanwj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/laanwj/followers",
         "following_url" : "https://api.github.com/users/laanwj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/laanwj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/laanwj",
         "id" : 126646,
         "login" : "laanwj",
         "node_id" : "MDQ6VXNlcjEyNjY0Ng==",
         "organizations_url" : "https://api.github.com/users/laanwj/orgs",
         "received_events_url" : "https://api.github.com/users/laanwj/received_events",
         "repos_url" : "https://api.github.com/users/laanwj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/laanwj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/laanwj"
      }
   }
]
