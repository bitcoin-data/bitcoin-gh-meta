{
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Since we [started using](https://github.com/bitcoin/bitcoin/pull/7165) the `ax_cxx_compile_stdcxx.m4` macro we've been passing `[noext]` to indicate that we don't want to use an extended mode, i.e GNU extensions. Speaking to Cory he clarified that the intention was to \"require only vanilla c++11 and turn _off_ extension support so they would fail to compile\".\r\n\r\nHowever in the codebase we are currently making use of some GNU extensions. We should either remove there usage, or at least amend our CXX compiler checks. I'd prefer the former.\r\n\r\n#### anonymous structs\r\n```bash\r\n./prevector.h:153:9: warning: anonymous structs are a GNU extension [-Wgnu-anonymous-struct]\r\n        struct {\r\n```\r\n\r\nThis is fixed in https://github.com/bitcoin/bitcoin/commit/b849212c1ec01cc8633b8cdcd390da9b1051be0d.\r\n\r\n#### variadic macros\r\n\r\n```bash\r\n./undo.h:57:50: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]\r\n            ::Unserialize(s, VARINT(nVersionDummy));\r\n```\r\n\r\nThis is taken care of in #18087.\r\n\r\nThe `LOG_TIME_*` macros introduced in #16805 make use of a [GNU extension](https://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html).\r\n\r\n```bash\r\nIn file included from validation.cpp:22:\r\n./logging/timer.h:99:99: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]\r\n    BCLog::Timer<std::chrono::milliseconds> PASTE2(logging_timer, __COUNTER__)(__func__, end_msg, ## __VA_ARGS__)\r\n                                                                                                  ^\r\n./logging/timer.h:99:99: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]\r\n./logging/timer.h:99:99: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]\r\n./logging/timer.h:99:99: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]\r\n./logging/timer.h:99:99: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]\r\n./logging/timer.h:101:92: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]\r\n    BCLog::Timer<std::chrono::seconds> PASTE2(logging_timer, __COUNTER__)(__func__, end_msg, ## __VA_ARGS__)\r\n                                                                                           ^\r\n6 warnings generated.\r\n```\r\n\r\nThis is fixed in 081a0ab64eb442bc85c4d4a4d3bc2c8e97ac2a6d and 612e8e138b97fc5ad2f38847300132a8fc423c3f.\r\n\r\n#### prevention\r\nTo ensure that usage doesn't creep back in we can add [`-Wgnu`](https://clang.llvm.org/docs/DiagnosticsReference.html#wgnu) to our compile time flags, which will make Clang warn whenever it encounters GNU extensions.\r\n\r\nThis would close #14130.\r\nAlso related to #17230, where it's suggested we use a GNU extension, the `gnu::pure` attribute.",
   "closed_at" : "2020-05-04T23:45:24Z",
   "closed_by" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   },
   "comments" : 16,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18088/comments",
   "created_at" : "2020-02-07T04:39:05Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18088/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/18088",
   "id" : 561416331,
   "labels" : [
      {
         "color" : "ebd775",
         "default" : false,
         "description" : null,
         "id" : 64584,
         "name" : "Brainstorming",
         "node_id" : "MDU6TGFiZWw2NDU4NA==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming"
      },
      {
         "color" : "5319e7",
         "default" : false,
         "description" : null,
         "id" : 61889416,
         "name" : "Build system",
         "node_id" : "MDU6TGFiZWw2MTg4OTQxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18088/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "MDExOlB1bGxSZXF1ZXN0MzcyMjMxMTI5",
   "number" : 18088,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/18088.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/18088",
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/18088.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/18088"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "title" : "build: ensure we aren't using GNU extensions",
   "updated_at" : "2020-05-04T23:45:34Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/18088",
   "user" : {
      "avatar_url" : "https://avatars2.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}
